<Type Name="RegionInfo" FullName="System.Globalization.RegionInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="920cd2350924ca1a4d0503b4972b6b151059aa67" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36563359" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RegionInfo" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable beforefieldinit RegionInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.RegionInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class RegionInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegionInfo" />
  <TypeSignature Language="F#" Value="type RegionInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Contains information about the country/region.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A diferencia de la <xref:System.Globalization.CultureInfo> (clase), el <xref:System.Globalization.RegionInfo> clase no representa las preferencias del usuario y no depende de idioma o la referencia cultural del usuario.  
  
## <a name="names-associated-with-a-regioninfo-object"></a>Nombres asociados a un objeto RegionInfo  
 El nombre de un <xref:System.Globalization.RegionInfo> objeto es uno de los códigos de dos letras definidos en ISO 3166 para el país o región. Caso no es significativo. El <xref:System.Globalization.RegionInfo.Name%2A>, <xref:System.Globalization.RegionInfo.TwoLetterISORegionName%2A>, y <xref:System.Globalization.RegionInfo.ThreeLetterISORegionName%2A> propiedades devuelven los códigos adecuados en mayúsculas. Para obtener la lista actual de <xref:System.Globalization.RegionInfo> nombres, vea [versión en inglés de nombres de países y elementos de código](http://go.microsoft.com/fwlink/?LinkId=190591) en el sitio Web ISO.  
  
## <a name="instantiating-a-regioninfo-object"></a>Crear instancias de un objeto RegionInfo  
 Para crear instancias de un <xref:System.Globalization.RegionInfo> objeto, que se pasa el <xref:System.Globalization.RegionInfo.%23ctor%28System.String%29> constructor un nombre de región de dos letras, por ejemplo, "US" para los Estados Unidos o el nombre de una referencia cultural concreta, como "en-US" para inglés (Estados Unidos). Sin embargo, se recomienda que utilice un nombre de referencia cultural específica en lugar de un nombre de región de dos letras, porque un <xref:System.Globalization.RegionInfo> objeto no es completamente independiente del lenguaje. Varios <xref:System.Globalization.RegionInfo> propiedades, incluida la <xref:System.Globalization.RegionInfo.DisplayName%2A>, <xref:System.Globalization.RegionInfo.NativeName%2A>, y <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A>, dependen de los nombres de referencia cultural.  
  
 En el ejemplo siguiente se muestra la diferencia en <xref:System.Globalization.RegionInfo> valores de propiedad para los tres objetos que representan Bélgica. La primera se crea una instancia de un nombre de región (BE), mientras que el segundo y tercero se crean instancias de los nombres de referencias culturales (fr-BE para francés (Bélgica) y nl-BE para neerlandés (Bélgica), respectivamente). En el ejemplo se utiliza la reflexión para recuperar los valores de propiedad de cada <xref:System.Globalization.RegionInfo> objeto.  
  
 [!code-csharp[System.Globalization.RegionInfo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo/CS/propertyvalues1.cs#2)]
 [!code-vb[System.Globalization.RegionInfo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo/VB/propertyvalues1.vb#2)]  
  
 En escenarios como la siguiente, utilice nombres de referencias culturales en lugar de nombres de país/región cuando cree instancias de un <xref:System.Globalization.RegionInfo> objeto:  
  
-   Cuando el nombre del lenguaje es de importancia principal. Por ejemplo, para el nombre de referencia cultural es-US, probablemente deseará la aplicación para mostrar "Estados Unidos" en lugar de "United States". Usar el nombre de país o región (US) por sí sola produce "United States" independientemente del lenguaje, por lo que debe trabajar con el nombre de la referencia cultural en su lugar.  
  
-   Cuándo se deben considerar las diferencias de script. Por ejemplo, el país o región AZ ocupa Azerbaijani referencias culturales que tienen nombres az-Latn-AZ y az-Cyrl-AZ y en el alfabeto latino y cirílicos scripts pueden ser muy diferentes para este país o región.  
  
-   Cuando el mantenimiento de detalle es importante. Los valores devueltos por <xref:System.Globalization.RegionInfo> miembros pueden diferir dependiendo de si el <xref:System.Globalization.RegionInfo> se crea una instancia de objeto con un nombre de referencia cultural o un nombre de región. Por ejemplo, la siguiente tabla se enumeran las diferencias de vuelta valores cuando un <xref:System.Globalization.RegionInfo> se crea una instancia de objeto mediante el uso de la región "US", la referencia cultural "en-US" y la referencia cultural "es-US".  
  
    |Miembro|"US"|"en-US"|"es-US"|  
    |------------|----------|--------------|--------------|  
    |<xref:System.Globalization.RegionInfo.CurrencyNativeName%2A>|Dólar estadounidense|Dólar estadounidense|Dólar de EE. UU.|  
    |<xref:System.Globalization.RegionInfo.Name%2A>|US|en-US|es-US|  
    |<xref:System.Globalization.RegionInfo.NativeName%2A>|Estados Unidos|Estados Unidos|Estados Unidos|  
    |<xref:System.Globalization.RegionInfo.ToString%2A>|US|en-US|es-US|  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra varios miembros de la <xref:System.Globalization.RegionInfo> clase.  
  
 [!code-cpp[System.Globalization.RegionInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo/CPP/regioninfo.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo/CS/regioninfo.cs#1)]
 [!code-vb[System.Globalization.RegionInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo/VB/regioninfo.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.CultureInfo" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Globalization.RegionInfo" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegionInfo (int culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.RegionInfo.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegionInfo(int culture);" />
      <MemberSignature Language="F#" Value="new System.Globalization.RegionInfo : int -&gt; System.Globalization.RegionInfo" Usage="new System.Globalization.RegionInfo culture" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="culture">A culture identifier.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Globalization.RegionInfo" /> class based on the country/region associated with the specified culture identifier.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.RegionInfo.%23ctor%28System.String%29> es el constructor recomendado para crear instancias de un <xref:System.Globalization.RegionInfo> objeto. A diferencia de la <xref:System.Globalization.RegionInfo.%23ctor%28System.Int32%29> es más legible constructor que requiere un identificador de referencia cultural numérico como un parámetro, su código de país o nombre de la referencia cultural.  
  
 El identificador de referencia cultural se asigna al identificador de configuración regional para el soporte de idioma nacional (NLS) correspondiente. Información de referencia cultural detallada aparece en el [compatibilidad de idioma nacional (NLS) API Reference](http://go.microsoft.com/fwlink/?LinkId=200048) en el centro de desarrolladores Go Global.  
  
 El valor de la <xref:System.Globalization.RegionInfo.Name%2A> propiedad del nuevo <xref:System.Globalization.RegionInfo> objeto crea una instancia mediante una llamada a este constructor es el código de 2 letras ISO 3166 para el país o región, no el idioma combinado y código de país o región. Por ejemplo, si un <xref:System.Globalization.RegionInfo> para la referencia cultural inglés (Estados Unidos), el valor de objeto se crea una instancia con el identificador de referencia cultural 0 x 0409 el <xref:System.Globalization.RegionInfo.Name%2A> propiedad es "US". En cambio, si una <xref:System.Globalization.RegionInfo> se crea una instancia de objeto con el lenguaje combinado y país o región de código en-US para la referencia cultural inglés (Estados Unidos), el valor de la <xref:System.Globalization.RegionInfo.Name%2A> propiedad es "en-US".  
  
   
  
## Examples  
 En el ejemplo de código siguiente se compara dos instancias de <xref:System.Globalization.RegionInfo> que se crean de forma diferente.  
  
 [!code-cpp[System.Globalization.RegionInfo_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/CPP/regioninfo_equals.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/CS/regioninfo_equals.cs#1)]
 [!code-vb[System.Globalization.RegionInfo_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/VB/regioninfo_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="culture" /> specifies either an invariant, custom, or neutral culture.</exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegionInfo (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.RegionInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegionInfo(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Globalization.RegionInfo : string -&gt; System.Globalization.RegionInfo" Usage="new System.Globalization.RegionInfo name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">A string that contains a two-letter code defined in ISO 3166 for country/region.  -or-  A string that contains the culture name for a specific culture, custom culture, or Windows-only culture. If the culture name is not in RFC 4646 format, your application should specify the entire culture name instead of just the country/region.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Globalization.RegionInfo" /> class based on the country/region or specific culture, specified by name.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `name` parámetro es uno de los códigos definidos para el país o región, o un nombre de referencia cultural concreta, personalizada o sólo para Windows. Caso no es significativo. Sin embargo, el <xref:System.Globalization.RegionInfo.Name%2A>, <xref:System.Globalization.RegionInfo.TwoLetterISORegionName%2A>y el <xref:System.Globalization.RegionInfo.ThreeLetterISORegionName%2A> propiedades devuelven el nombre de código o la referencia cultural especificado en mayúsculas.  
  
 Predefinido <xref:System.Globalization.RegionInfo> nombres aparecen en [nombres de países y elementos de código](http://go.microsoft.com/fwlink/?LinkId=190591) en el sitio Web ISO.  
  
 Debe proporcionar el nombre de una referencia cultural específica en lugar de un nombre de país o región en la `name` parámetro. Por ejemplo, en-US para inglés (Estados Unidos) o es-US para el idioma español (Estados Unidos) es preferible a Estados Unidos porque propiedades como <xref:System.Globalization.RegionInfo.NativeName%2A> y <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A> reflejar un idioma específico. es preferible a AZ AZ-Latn-AZ o az-Cyrl-AZ porque propiedades como <xref:System.Globalization.RegionInfo.NativeName%2A>, <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A>, y <xref:System.Globalization.RegionInfo.CurrencySymbol%2A> reflejar una secuencia de comandos específica.  Los nombres de referencias culturales predefinidos que se enumeran en la [compatibilidad de idioma nacional (NLS) API Reference](http://go.microsoft.com/fwlink/?LinkId=200048) en el centro de desarrolladores Go Global. Tenga en cuenta que una llamada a este constructor produce un <xref:System.ArgumentException> si `name` es una referencia cultural neutra (por ejemplo, en para inglés).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se compara dos instancias de <xref:System.Globalization.RegionInfo> que se crean de forma diferente.  
  
 [!code-cpp[System.Globalization.RegionInfo_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/CPP/regioninfo_equals.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/CS/regioninfo_equals.cs#1)]
 [!code-vb[System.Globalization.RegionInfo_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/VB/regioninfo_equals.vb#1)]  
  
 En el ejemplo de código siguiente se crea instancias de <xref:System.Globalization.RegionInfo> con nombres de referencias culturales.  
  
 [!code-cpp[System.Globalization.RegionInfo.ctorCultureName#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo.ctorCultureName/CPP/regioninfo_ctorculturename.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo.ctorCultureName#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo.ctorCultureName/CS/regioninfo_ctorculturename.cs#1)]
 [!code-vb[System.Globalization.RegionInfo.ctorCultureName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo.ctorCultureName/VB/regioninfo_ctorculturename.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is not a valid country/region name or specific culture name.</exception>
        <block subset="none" type="usage">
          <para>Este constructor acepta sólo referencias culturales específicas o códigos de país/región. Sin embargo, algunos nombres de referencia cultural neutra son iguales que los códigos de país o región. En este caso, <paramref name="name" /> se interpreta como un código de país o región en lugar de un nombre de referencia cultural neutra y este constructor no produce un <see cref="T:System.ArgumentException" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CurrencyEnglishName">
      <MemberSignature Language="C#" Value="public virtual string CurrencyEnglishName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencyEnglishName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.CurrencyEnglishName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrencyEnglishName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CurrencyEnglishName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyEnglishName : string" Usage="System.Globalization.RegionInfo.CurrencyEnglishName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name, in English, of the currency used in the country/region.</summary>
        <value>Nombre, en inglés, de la moneda utilizada en el país o región.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra el <xref:System.Globalization.RegionInfo.CurrencyEnglishName%2A> propiedad.  
  
 [!code-cpp[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/cpp/rgn5props.cpp#1)]
 [!code-csharp[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/CS/rgn5props.cs#1)]
 [!code-vb[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/VB/rgn5props.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrencyNativeName">
      <MemberSignature Language="C#" Value="public virtual string CurrencyNativeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencyNativeName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.CurrencyNativeName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrencyNativeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CurrencyNativeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyNativeName : string" Usage="System.Globalization.RegionInfo.CurrencyNativeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the currency used in the country/region, formatted in the native language of the country/region.</summary>
        <value>Nombre nativo de la moneda utilizada en el país o región, con el formato del idioma asociado al código de país o región ISO 3166.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la actual <xref:System.Globalization.RegionInfo> objeto se crea con una referencia cultural concreta y se utiliza más de un idioma en el país o región correspondiente, la <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A> propiedad recupera el nombre de moneda asociado a la referencia cultural específica.  
  
 El valor de esta propiedad depende del idioma que está asociado a un determinado país/región. Por lo tanto, si piensa usar el <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A> propiedad, debe crear una instancia de la <xref:System.Globalization.RegionInfo> objeto pasando el <xref:System.Globalization.RegionInfo.%23ctor%28System.String%29> constructor un código de idioma y país o región combinado. Por ejemplo, si un <xref:System.Globalization.RegionInfo> se crea una instancia de objeto con un código de idioma y país o región combinado de "en-CA" para inglés (Canadá), el valor de su <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A> propiedad es "Dólar canadiense". Si se crea una instancia con un código de idioma y país o región combinado de "fr-CA" para francés (Canadá), el valor de su <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A> propiedad es "Dólar canadien". Por consiguiente, cree el `RegionInfo` objeto con un nombre de país o región ("CA" en este caso) no es lo suficientemente específica como para distinguir el nombre de moneda nativo apropiado.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A> propiedad.  
  
 [!code-cpp[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/cpp/rgn5props.cpp#1)]
 [!code-csharp[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/CS/rgn5props.cs#1)]
 [!code-vb[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/VB/rgn5props.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrencySymbol">
      <MemberSignature Language="C#" Value="public virtual string CurrencySymbol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencySymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.CurrencySymbol" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrencySymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CurrencySymbol { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrencySymbol : string" Usage="System.Globalization.RegionInfo.CurrencySymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the currency symbol associated with the country/region.</summary>
        <value>Símbolo de divisa asociado al país o región.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por ejemplo, el símbolo de moneda de Estados Unidos es "$".  
  
 Si la actual <xref:System.Globalization.RegionInfo> objeto se crea con una referencia cultural concreta y se utiliza más de un idioma en el país o región correspondiente, la <xref:System.Globalization.RegionInfo.CurrencySymbol%2A> propiedad devuelve el símbolo de moneda asociado con la referencia cultural específica.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra las propiedades de la <xref:System.Globalization.RegionInfo> clase.  
  
 [!code-cpp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs#1)]
 [!code-vb[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.RegionInfo.ISOCurrencySymbol" />
      </Docs>
    </Member>
    <Member MemberName="CurrentRegion">
      <MemberSignature Language="C#" Value="public static System.Globalization.RegionInfo CurrentRegion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.RegionInfo CurrentRegion" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.CurrentRegion" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentRegion As RegionInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::RegionInfo ^ CurrentRegion { System::Globalization::RegionInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentRegion : System.Globalization.RegionInfo" Usage="System.Globalization.RegionInfo.CurrentRegion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.RegionInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Globalization.RegionInfo" /> that represents the country/region used by the current thread.</summary>
        <value>
          <see cref="T:System.Globalization.RegionInfo" /> que representa el país o región utilizado por el subproceso actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de esta propiedad se basa en la referencia cultural seleccionada a través de la parte de opciones de configuración regional y de idioma del Panel de Control. Sin embargo, esa información puede cambiar durante la vida de la <xref:System.AppDomain>. El <xref:System.Globalization.RegionInfo> clase no detecta automáticamente los cambios en la configuración del sistema, pero la <xref:System.Globalization.RegionInfo.CurrentRegion%2A> propiedad se actualiza cuando se llama a la <xref:System.Globalization.CultureInfo.ClearCachedData%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public virtual string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Globalization.RegionInfo.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the full name of the country/region in the language of the localized version of .NET Framework.</summary>
        <value>Nombre completo del país o región en el idioma de la versión localizada de .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Globalization.RegionInfo.DisplayName%2A> propiedad muestra el nombre de país o región en el idioma de la versión localizada de .NET Framework. Por ejemplo, el <xref:System.Globalization.RegionInfo.DisplayName%2A> propiedad muestra el país o región en inglés en la versión en inglés de .NET Framework y en español en la versión en español de .NET Framework.  
  
 El valor de la <xref:System.Globalization.RegionInfo.DisplayName%2A> propiedad se toma de los archivos de recursos en el idioma de la interfaz referencia cultural usuario actual, representado por <xref:System.Globalization.CultureInfo.CurrentUICulture%2A>. Las regiones personalizadas o las sintetizada desde el sistema operativo podrían no tener información de recursos, en cuyo caso el valor de <xref:System.Globalization.RegionInfo.DisplayName%2A> es el mismo que el valor de la <xref:System.Globalization.RegionInfo.NativeName%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra las propiedades de la <xref:System.Globalization.RegionInfo> clase.  
  
 [!code-cpp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs#1)]
 [!code-vb[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.RegionInfo.Name" />
        <altmember cref="P:System.Globalization.RegionInfo.EnglishName" />
        <altmember cref="P:System.Globalization.RegionInfo.TwoLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterWindowsRegionName" />
      </Docs>
    </Member>
    <Member MemberName="EnglishName">
      <MemberSignature Language="C#" Value="public virtual string EnglishName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EnglishName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.EnglishName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EnglishName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EnglishName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnglishName : string" Usage="System.Globalization.RegionInfo.EnglishName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the full name of the country/region in English.</summary>
        <value>Nombre completo del país o región en inglés.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por ejemplo, un <xref:System.Globalization.RegionInfo> objeto creado para la referencia cultural inglés (Estados Unidos) muestra "United States".  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra las propiedades de la <xref:System.Globalization.RegionInfo> clase.  
  
 [!code-cpp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs#1)]
 [!code-vb[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.RegionInfo.Name" />
        <altmember cref="P:System.Globalization.RegionInfo.DisplayName" />
        <altmember cref="P:System.Globalization.RegionInfo.TwoLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterWindowsRegionName" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.RegionInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="regionInfo.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The object to compare with the current <see cref="T:System.Globalization.RegionInfo" />.</param>
        <summary>Determines whether the specified object is the same instance as the current <see cref="T:System.Globalization.RegionInfo" />.</summary>
        <returns>
          <see langword="true" /> if the <paramref name="value" /> parameter is a <see cref="T:System.Globalization.RegionInfo" /> object and its <see cref="P:System.Globalization.RegionInfo.Name" /> property is the same as the <see cref="P:System.Globalization.RegionInfo.Name" /> property of the current <see cref="T:System.Globalization.RegionInfo" /> object; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método invalida <xref:System.Object.Equals%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se compara dos instancias de <xref:System.Globalization.RegionInfo> que se crean de forma diferente.  
  
 [!code-cpp[System.Globalization.RegionInfo_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/CPP/regioninfo_equals.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/CS/regioninfo_equals.cs#1)]
 [!code-vb[System.Globalization.RegionInfo_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/VB/regioninfo_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GeoId">
      <MemberSignature Language="C#" Value="public virtual int GeoId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GeoId" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.GeoId" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GeoId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int GeoId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.GeoId : int" Usage="System.Globalization.RegionInfo.GeoId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a unique identification number for a geographical region, country, city, or location.</summary>
        <value>Número de 32 bits con signo que identifica de manera única una ubicación geográfica.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La aplicación debe utilizar el <xref:System.Globalization.RegionInfo.GeoId%2A> propiedad para proporcionar servicios específicos de la referencia cultural a los clientes. Por ejemplo, el <xref:System.Globalization.RegionInfo.GeoId%2A> propiedad puede utilizarse como clave para tener acceso a un registro de base de datos que contiene información específica acerca de un país o región.  
  
 Valor de esta propiedad corresponde a las ventanas `GetUserGeoID` función. Para obtener una lista de identificadores geográficas, consulte [tabla de ubicaciones geográficas](http://go.microsoft.com/fwlink/?LinkId=191287) en MSDN Library.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el <xref:System.Globalization.RegionInfo.GeoId%2A> propiedad.  
  
 [!code-cpp[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/cpp/rgn5props.cpp#1)]
 [!code-csharp[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/CS/rgn5props.cs#1)]
 [!code-vb[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/VB/rgn5props.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.RegionInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="regionInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Serves as a hash function for the current <see cref="T:System.Globalization.RegionInfo" />, suitable for hashing algorithms and data structures, such as a hash table.</summary>
        <returns>A hash code for the current <see cref="T:System.Globalization.RegionInfo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método invalida <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.  
  
 Este método genera el mismo código hash para dos objetos que son iguales de acuerdo con el método <xref:System.Globalization.RegionInfo.Equals%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.Globalization.RegionInfo.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsMetric">
      <MemberSignature Language="C#" Value="public virtual bool IsMetric { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMetric" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.IsMetric" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsMetric As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMetric { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMetric : bool" Usage="System.Globalization.RegionInfo.IsMetric" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the country/region uses the metric system for measurements.</summary>
        <value>Es <see langword="true" /> si el país o la región utilizan el sistema métrico para las medidas; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra las propiedades de la <xref:System.Globalization.RegionInfo> clase.  
  
 [!code-cpp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs#1)]
 [!code-vb[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ISOCurrencySymbol">
      <MemberSignature Language="C#" Value="public virtual string ISOCurrencySymbol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ISOCurrencySymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.ISOCurrencySymbol" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ISOCurrencySymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ISOCurrencySymbol { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ISOCurrencySymbol : string" Usage="System.Globalization.RegionInfo.ISOCurrencySymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the three-character ISO 4217 currency symbol associated with the country/region.</summary>
        <value>Símbolo de divisa ISO 4217 de tres caracteres asociado al país o región.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En el ejemplo siguiente se enumeran algunos de los símbolos de moneda ISO 4217 devueltos por la <xref:System.Globalization.RegionInfo.ISOCurrencySymbol%2A> propiedad.  
  
|País o región|Nombre de la moneda|Símbolo de moneda ISO 4217|  
|---------------------|-------------------|------------------------------|  
|Albania|Lek de Albania|ALL|  
|Argelia|Dinar argelino|DZD|  
|Argentina|Peso argentina|ARS|  
|Armenia|Dram armenio|AMD|  
|Australia|Dólar australiano|AUD|  
|Austria|Euro|EUR|  
|Azerbaiyán|Manat azerí|AZN|  
|Bahrein|Dinar bahriní|BHD|  
|Bielorrusia|Rublo Bielorruso|BYR|  
|Bélgica|Euro|EUR|  
|Belice|Dólar de Belice|BZD|  
|República Bolivariana de Venezuela|Bolívar venezolano|VEF|  
|Bolivia|Bolivia|BOB|  
|Brasil|Real|BRL|  
|Brunei|Dólar de Brunei|LÍMITES|  
|Bulgaria|Lev búlgaro|BGN|  
|Canadá|Dólar canadiense|CAD|  
|Caribe|Dólar estadounidense|USD|  
|Chile|Peso chileno|CLP|  
|Colombia|Peso Colombia|COP|  
|Costa Rica|Costa rico coma|CRC|  
|Croacia|Kuna croata|HRK|  
|República Checa|Corona checa|CZK|  
|Dinamarca|Danesa|DKK|  
|República Dominicana|Peso Dominicana|DOP|  
|Ecuador|Dólar estadounidense|USD|  
|Egipto|Libra de Egipto|EGP|  
|El Salvador|EE. UU. Dólar|USD|  
|Estonia|Estonia|EEK|  
|Etiopía|Birr etíope|ETB|  
|Islas Faroe|Danesa|DKK|  
|Finlandia|Euro|EUR|  
|Francia|Euro|EUR|  
|Georgia|Lari|GEL|  
|Alemania|Euro|EUR|  
|Grecia|Euro|EUR|  
|Guatemala|Quetzal guatemalteco|GTQ|  
|Honduras|Lempira (Honduras)|HNL|  
|Hong Kong (RAE)|Dólar de Hong Kong|DÓLARES|  
|Hungría|Florín húngaro|HUF|  
|Islandia|Islandesa|ISK|  
|India|Rupia|INR|  
|Indonesia|Rupia|IDR|  
|Irán|Rial iraní|TIR|  
|Irak|Dinar iraquí|IQD|  
|Irlanda|Euro|EUR|  
|República Islámica de Pakistán|Rupia de Pakistán|PKR|  
|Israel|Siclo israelí de nuevo|ILS|  
|Italia|Euro|EUR|  
|Jamaica|Dólar de Jamaica|JMD|  
|Japón|Yen japonés|JPY|  
|Jordania|Dinar jordano|JOD|  
|Kazajstán|Tenge|KZT|  
|Kenia|Chelín keniano|KES|  
|Corea|Won coreano|KRW|  
|Kuwait|Dinar kuwaití|KWD|  
|Kirguizistán|SOM|KG|  
|Letonia|Lats letón|COSTO|  
|Líbano|Libra libanesa|LBP|  
|Libia|Dinar Libia|LYD|  
|Liechtenstein|Franco suizo|CHF|  
|Lituania|Litas lituano|LTL|  
|Luxemburgo|Euro|EUR|  
|Macao RAE|Macao Macao|ERROR POP|  
|Macedonio (ARYM)|Denar de Macedonia|MKD|  
|Malasia|Ringgit malayo|MYR|  
|Maldivas|Rufiyaa|MVR|  
|México|Peso mexicano|MXN|  
|Mongolia|Tugrik|MNT|  
|Marruecos|Dírham marroquí|MAD|  
|Países Bajos|Euro|EUR|  
|Nueva Zelanda|Dólar de Nueva Zelanda|NZD|  
|Nicaragua|Córdoba (Nicaragua)|NIO|  
|Noruega|Corona Noruega|NOK|  
|Omán|Rial omaní|OMR|  
|Panamá|Balboa (Panamá)|LPD|  
|Paraguay|Guaraní de Paraguay|PYG|  
|República Popular China|Chino de RPC|CNY|  
|Perú|Nuevo Sol peruano|LÁPIZ|  
|Filipinas|Peso filipino|PHP|  
|Polonia|Zloty polaco|PLN|  
|Portugal|Euro|EUR|  
|Principado de Mónaco|Euro|EUR|  
|Puerto Rico|Dólar estadounidense|USD|  
|Qatar|Riyal de Qatar|QAR|  
|Rumania|Leu rumano|ANTONIO|  
|Rusia|Rublo ruso|ESTABLECERÁ|  
|Arabia Saudí|Riyal Saudí|RAE|  
|Serbia|Dinar serbio|RSD|  
|Singapur|Dólar de Singapur|SGD|  
|Eslovaquia|Euro|EUR|  
|Eslovenia|Euro|EUR|  
|Sudáfrica|Rand de Sudáfrica|ZAR|  
|España|Euro|EUR|  
|Suecia|Sueca|SEK|  
|Suiza|Franco suizo|CHF|  
|Siria|Libra siria|SYP|  
|Taiwán|Nuevo dólar de Taiwán|TWD|  
|Tailandia|Baht tailandés|THB|  
|Trinidad y Tobago|Dólar de Trinidad|TTD|  
|Túnez|Dinar tunecino|TND|  
|Turquía|Turca|TRY|  
|Ucrania|Hryvnia ucraniano|UAH|  
|Emiratos Árabes Unidos|Dírham Emiratos Árabes Unidos|DONDE|  
|Reino Unido|Libra esterlina británica del Reino Unido|GBP|  
|Estados Unidos|Dólar estadounidense|USD|  
|Uruguay|Peso Uruguayo|UYU|  
|Uzbekistán|Som de Uzbekistán|UZS|  
|Vietnam|Dong vietnamita|VND|  
|Yemen|Rial yemení|CAPA|  
|Zimbabue|Dólar de Zimbabue|ZWL|  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra las propiedades de la <xref:System.Globalization.RegionInfo> clase.  
  
 [!code-cpp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs#1)]
 [!code-vb[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.RegionInfo.CurrencySymbol" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Globalization.RegionInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name or ISO 3166 two-letter country/region code for the current <see cref="T:System.Globalization.RegionInfo" /> object.</summary>
        <value>Valor especificado por el parámetro <paramref name="name" /> del constructor <see cref="M:System.Globalization.RegionInfo.#ctor(System.String)" />. El valor devuelto está en mayúsculas.  - o - el código de dos letras definido en ISO 3166 para el país o región especificado por el <paramref name="culture" /> parámetro de la <see cref="M:System.Globalization.RegionInfo.#ctor(System.Int32)" /> constructor. El valor devuelto está en mayúsculas.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la actual <xref:System.Globalization.RegionInfo> objeto se crea con el <xref:System.Globalization.RegionInfo.%23ctor%28System.Int32%29?displayProperty=nameWithType> constructor que toma un parámetro de identificador de referencia cultural, el <xref:System.Globalization.RegionInfo.Name%2A> valor de propiedad es uno de los códigos de dos letras definidos en ISO 3166 para el país o región y tiene el formato en uso de mayúsculas. Por ejemplo, el código de dos letras para los Estados Unidos es "US".  
  
 Si la actual <xref:System.Globalization.RegionInfo> objeto se crea con el <xref:System.Globalization.RegionInfo.%23ctor%28System.String%29?displayProperty=nameWithType> constructor y se pasa un nombre de referencia cultural completo como "en-US", la <xref:System.Globalization.RegionInfo.Name%2A> valor de propiedad es un nombre de referencia cultural completo y no sólo el nombre de la región.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra las propiedades de la <xref:System.Globalization.RegionInfo> clase.  
  
 [!code-cpp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs#1)]
 [!code-vb[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.RegionInfo.EnglishName" />
        <altmember cref="P:System.Globalization.RegionInfo.DisplayName" />
        <altmember cref="P:System.Globalization.RegionInfo.TwoLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterWindowsRegionName" />
      </Docs>
    </Member>
    <Member MemberName="NativeName">
      <MemberSignature Language="C#" Value="public virtual string NativeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NativeName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.NativeName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NativeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NativeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NativeName : string" Usage="System.Globalization.RegionInfo.NativeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of a country/region formatted in the native language of the country/region.</summary>
        <value>Nombre nativo del país o región con el formato del idioma asociado al código de país o región ISO 3166.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Globalization.RegionInfo.NativeName%2A> propiedad recupera un nombre de referencia cultural completo si el `RegionInfo` objeto se construye utilizando un nombre completo de referencia cultural.  
  
 Le recomendamos que use el nombre de referencia cultural, por ejemplo, "en-US" para inglés (Estados Unidos), para tener acceso a la <xref:System.Globalization.RegionInfo.NativeName%2A> propiedad. La cadena utilizada para esta propiedad depende del idioma asociado al país o región. Por ejemplo, lo nombres referencia cultural en-US para inglés (Estados Unidos) y es-US para el idioma español (Estados Unidos) pueden recuperar valores diferentes en Windows Vista. Por consiguiente, cree el `RegionInfo` objeto con solo un nombre de país o región de Estados Unidos no es lo suficientemente específica como para distinguir la cadena adecuada.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el <xref:System.Globalization.RegionInfo.NativeName%2A> propiedad.  
  
 [!code-cpp[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/cpp/rgn5props.cpp#1)]
 [!code-csharp[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/CS/rgn5props.cs#1)]
 [!code-vb[sys.glob.regioninfo.rgn5props#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/VB/rgn5props.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterISORegionName">
      <MemberSignature Language="C#" Value="public virtual string ThreeLetterISORegionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterISORegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.ThreeLetterISORegionName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ThreeLetterISORegionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ThreeLetterISORegionName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterISORegionName : string" Usage="System.Globalization.RegionInfo.ThreeLetterISORegionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the three-letter code defined in ISO 3166 for the country/region.</summary>
        <value>Código de tres letras definido en ISO 3166 para el país o región.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Globalization.RegionInfo.ThreeLetterISORegionName%2A> propiedad contiene el código de tres letras definido en ISO 3166 para el país/región. Por ejemplo, el código de tres letras de Estados Unidos es "EE".  
  
 Caso no es significativo. Sin embargo, el <xref:System.Globalization.RegionInfo.Name%2A>, <xref:System.Globalization.RegionInfo.TwoLetterISORegionName%2A>y el <xref:System.Globalization.RegionInfo.ThreeLetterISORegionName%2A> propiedades devuelven el código correspondiente en mayúsculas.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra las propiedades de la <xref:System.Globalization.RegionInfo> clase.  
  
 [!code-cpp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs#1)]
 [!code-vb[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.RegionInfo.Name" />
        <altmember cref="P:System.Globalization.RegionInfo.EnglishName" />
        <altmember cref="P:System.Globalization.RegionInfo.DisplayName" />
        <altmember cref="P:System.Globalization.RegionInfo.TwoLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterWindowsRegionName" />
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterWindowsRegionName">
      <MemberSignature Language="C#" Value="public virtual string ThreeLetterWindowsRegionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterWindowsRegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.ThreeLetterWindowsRegionName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ThreeLetterWindowsRegionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ThreeLetterWindowsRegionName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterWindowsRegionName : string" Usage="System.Globalization.RegionInfo.ThreeLetterWindowsRegionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the three-letter code assigned by Windows to the country/region represented by this <see cref="T:System.Globalization.RegionInfo" />.</summary>
        <value>Código de tres letras asignado por Windows al país o región representado por este <see cref="T:System.Globalization.RegionInfo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por ejemplo, el código de tres letras de Estados Unidos es "EE".  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra las propiedades de la <xref:System.Globalization.RegionInfo> clase.  
  
 [!code-cpp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs#1)]
 [!code-vb[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.RegionInfo.Name" />
        <altmember cref="P:System.Globalization.RegionInfo.EnglishName" />
        <altmember cref="P:System.Globalization.RegionInfo.DisplayName" />
        <altmember cref="P:System.Globalization.RegionInfo.TwoLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterISORegionName" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.RegionInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="regionInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a string containing the culture name or ISO 3166 two-letter country/region codes specified for the current <see cref="T:System.Globalization.RegionInfo" />.</summary>
        <returns>A string containing the culture name or ISO 3166 two-letter country/region codes defined for the current <see cref="T:System.Globalization.RegionInfo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método invalida <xref:System.Object.ToString%2A?displayProperty=nameWithType>.  
  
 Este método devuelve el valor de la <xref:System.Globalization.RegionInfo.Name%2A> propiedad.  
  
 Caso no es significativo. Sin embargo, el <xref:System.Globalization.RegionInfo.Name%2A>, <xref:System.Globalization.RegionInfo.TwoLetterISORegionName%2A>y el <xref:System.Globalization.RegionInfo.ThreeLetterISORegionName%2A> propiedades devuelven el código correspondiente en mayúsculas.  
  
 Predefinido <xref:System.Globalization.RegionInfo> nombres aparecen en el <xref:System.Globalization.RegionInfo> tema de la clase.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.ToString" />
        <altmember cref="P:System.Globalization.RegionInfo.Name" />
      </Docs>
    </Member>
    <Member MemberName="TwoLetterISORegionName">
      <MemberSignature Language="C#" Value="public virtual string TwoLetterISORegionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TwoLetterISORegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.TwoLetterISORegionName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TwoLetterISORegionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TwoLetterISORegionName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TwoLetterISORegionName : string" Usage="System.Globalization.RegionInfo.TwoLetterISORegionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the two-letter code defined in ISO 3166 for the country/region.</summary>
        <value>Código de dos letras definido en ISO 3166 para el país o región.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Globalization.RegionInfo> nombre es uno de los códigos de dos letras definidos en ISO 3166 para el país o región. Por ejemplo, el código de dos letras de Estados Unidos es "US".  
  
> [!IMPORTANT]
>  En algunos casos, la <xref:System.Globalization.RegionInfo.TwoLetterISORegionName%2A> propiedad puede tener más de dos caracteres. Por ejemplo, el valor de la <xref:System.Globalization.RegionInfo.TwoLetterISORegionName%2A> propiedad para la región Caribe es "029".  
  
 Caso no es significativo. Sin embargo, el <xref:System.Globalization.RegionInfo.Name%2A>, <xref:System.Globalization.RegionInfo.TwoLetterISORegionName%2A>y el <xref:System.Globalization.RegionInfo.ThreeLetterISORegionName%2A> propiedades devuelven el código correspondiente en mayúsculas.  
  
> [!WARNING]
>  Si desea conservar una <xref:System.Globalization.RegionInfo> objetos o comunicación entre procesos, se debe crear instancias de él mediante el uso de un nombre de referencia cultural completo en lugar de un código de región de dos letras ISO. Dado que <xref:System.Globalization.RegionInfo> propiedades dependen de la secuencia de comandos y lenguaje, crear instancias de un <xref:System.Globalization.RegionInfo> objeto mediante el uso de un código de región pierde su contexto y los datos.  
  
 Predefinido <xref:System.Globalization.RegionInfo> nombres aparecen en [versión en inglés de nombres de países y elementos de código](http://go.microsoft.com/fwlink/?LinkId=190591) en el sitio Web ISO.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra las propiedades de la <xref:System.Globalization.RegionInfo> clase.  
  
 [!code-cpp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs#1)]
 [!code-vb[System.Globalization.RegionInfo_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.RegionInfo.Name" />
        <altmember cref="P:System.Globalization.RegionInfo.EnglishName" />
        <altmember cref="P:System.Globalization.RegionInfo.DisplayName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterWindowsRegionName" />
      </Docs>
    </Member>
  </Members>
</Type>