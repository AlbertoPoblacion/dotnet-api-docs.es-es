<Type Name="StringInfo" FullName="System.Globalization.StringInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="80c192082c2c19396d1b5a09fe5f8cde1b836f2d" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37654331" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StringInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.StringInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class StringInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringInfo" />
  <TypeSignature Language="F#" Value="type StringInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides functionality to split a string into text elements and to iterate through those text elements.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework define un elemento de texto como una unidad de texto que se muestra como un carácter único, es decir, un grafemas. Un elemento de texto puede ser un carácter base, un par suplente o un carácter combinable secuencia. El [estándar Unicode](http://go.microsoft.com/fwlink/?linkid=37123) define un par suplente como una representación de caracteres codificados para un único carácter abstracto que consta de una secuencia de dos unidades de código, donde la primera unidad del par es un suplente alto y el segundo es bajo suplente. El estándar Unicode define una combinación secuencia como una combinación de un carácter base y uno o más caracteres de combinación de caracteres. Un par suplente puede representar un carácter base o un carácter de combinación.  
  
 El <xref:System.Globalization.StringInfo> clase le permite trabajar con una cadena como una serie de elementos de texto en lugar de persona <xref:System.Char> objetos.  
  
 Para crear instancias de un <xref:System.Globalization.StringInfo> objeto que representa una cadena especificada, puede realizar cualquiera de las siguientes acciones:  
  
-   Llame a la <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> constructor y le pasa la cadena que el <xref:System.Globalization.StringInfo> objeto que se va a representar como un argumento.  
  
-   Llame a la predeterminada <xref:System.Globalization.StringInfo.%23ctor> constructor y asignar la cadena que el <xref:System.Globalization.StringInfo> objeto que se va a representar para el <xref:System.Globalization.StringInfo.String%2A> propiedad.  
  
 Puede trabajar con los elementos de texto individuales en una cadena de dos maneras:  
  
-   Enumerando cada elemento de texto. Para ello, llame a la <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> método y, a continuación, llamar repetidamente a la <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> método en el valor devuelto <xref:System.Globalization.TextElementEnumerator> objeto hasta que el método devuelve `false`.  
  
-   Mediante una llamada a la <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> método para recuperar una matriz que contiene el índice inicial de cada elemento de texto. A continuación, puede recuperar elementos individuales de texto al pasar estos índices para la <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> método.  
  
 El ejemplo siguiente muestra dos maneras de trabajar con los elementos de texto en una cadena. Se crean dos cadenas:  
  
-   `strCombining`, que es una cadena de caracteres árabes que incluye tres elementos de texto con varios <xref:System.Char> objetos. El primer elemento de texto es el carácter base Letra árabe ALEF (U +-627) seguido de árabe HAMZA debajo (U +-655) y KASRA árabe (u+0650). El segundo elemento de texto es árabe HEH letra (0647) seguido por FATHA árabe (U +-64E). El tercer elemento de texto es árabe BEH LETTTER (0628) seguido por DAMMATAN árabe (U + 064C).  
  
-   `strSurrogates`, que es una cadena que incluye tres pares suplentes: GRIEGA ACROPHONIC cinco TALENTO (10148) desde el plano multilingüe complementarios, 20026 U + en el plano ideográficos complementarios y U + F1001 desde el área de usuario privada. La codificación UTF-16 de cada carácter es un par suplente que consta de un suplente alto seguido de un suplente bajo.  
  
 Cada cadena se analiza una vez por la <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> método y, a continuación, por el <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> método. Ambos métodos correctamente analizan los elementos de las dos cadenas de texto y mostrar los resultados de la operación de análisis.  
  
 [!code-csharp[System.Globalization.StringInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.stringinfo.class/cs/indexing1.cs#1)]
 [!code-vb[System.Globalization.StringInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.stringinfo.class/vb/indexing1.vb#1)]  
  
   
  
## Examples  
 En este ejemplo se muestra cómo usar el <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> y <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> métodos de la <xref:System.Globalization.StringInfo> clase para manipular una cadena que contiene suplentes y caracteres de combinación.  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage">
      <para>Internamente, los métodos de la <see cref="T:System.Globalization.StringInfo" /> clase llamar a los métodos de la <see cref="T:System.Globalization.CharUnicodeInfo" /> clase para determinar las categorías de caracteres. A partir de la [! INCLUDE[net_v462](~/includes/NET-v462-MD.MD)], clasificación de caracteres se basa en [el estándar Unicode, versión 8.0.0] (https://unicode.org/versions/Unicode8.0.0). Para el [! INCLUDE[net_v40_long](~/includes/NET-V40-Long-MD.MD)] a través de la [! INCLUDE[net_v461](~/includes/NET-v461-MD.MD)], se basa en [el estándar Unicode, versión 6.3.0] (https://www.unicode.org/versions/Unicode6.3.0/).</para>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Globalization.StringInfo" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Globalization.StringInfo" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la nueva <xref:System.Globalization.StringInfo> objeto se inicializa en una cadena vacía (""). Puede asignar otra cadena a él mediante el <xref:System.Globalization.StringInfo.String%2A> propiedad.  También puede crear una instancia un <xref:System.Globalization.StringInfo> objeto que representa una cadena especificada en un solo paso mediante una llamada a la <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> constructor.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringInfo (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringInfo(System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Globalization.StringInfo : string -&gt; System.Globalization.StringInfo" Usage="new System.Globalization.StringInfo value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">A string to initialize this <see cref="T:System.Globalization.StringInfo" /> object.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Globalization.StringInfo" /> class to a specified string.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor asigna el argumento de valor para el objeto <xref:System.Globalization.StringInfo.String%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="stringInfo.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">An object.</param>
        <summary>Indicates whether the current <see cref="T:System.Globalization.StringInfo" /> object is equal to a specified object.</summary>
        <returns>
          <see langword="true" /> if the <paramref name="value" /> parameter is a <see cref="T:System.Globalization.StringInfo" /> object and its <see cref="P:System.Globalization.StringInfo.String" /> property equals the <see cref="P:System.Globalization.StringInfo.String" /> property of this <see cref="T:System.Globalization.StringInfo" /> object; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.String.Equals" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="stringInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Calculates a hash code for the value of the current <see cref="T:System.Globalization.StringInfo" /> object.</summary>
        <returns>A 32-bit signed integer hash code based on the string value of this <see cref="T:System.Globalization.StringInfo" /> object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El comportamiento de <xref:System.Globalization.StringInfo.GetHashCode%2A> depende de su implementación, que puede cambiar de una versión de common language runtime a otro. Esto puede ocurrir mejorar el rendimiento de <xref:System.Globalization.StringInfo.GetHashCode%2A>. Para que el comportamiento de <xref:System.Globalization.StringInfo.GetHashCode%2A> constante, la aplicación debe invalidar la implementación en tiempo de ejecución de <xref:System.Globalization.StringInfo.GetHashCode%2A> con una implementación que se sabe que nunca el cambio.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.GetHashCode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNextTextElement">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets the first text element in a specified string.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNextTextElement">
      <MemberSignature Language="C#" Value="public static string GetNextTextElement (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetNextTextElement(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetNextTextElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNextTextElement (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetNextTextElement(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member GetNextTextElement : string -&gt; string" Usage="System.Globalization.StringInfo.GetNextTextElement str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">The string from which to get the text element.</param>
        <summary>Gets the first text element in a specified string.</summary>
        <returns>A string containing the first text element in the specified string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework define un elemento de texto como una unidad de texto que se muestra como un carácter único, es decir, un grafemas. Un elemento de texto puede ser un carácter base, un par suplente o un carácter combinable secuencia. El [estándar Unicode](http://go.microsoft.com/fwlink/?linkid=37123) define un par suplente como una representación de caracteres codificados para un único carácter abstracto que consta de una secuencia de dos unidades de código, donde la primera unidad del par es un suplente alto y el segundo es bajo suplente. El [estándar Unicode](http://go.microsoft.com/fwlink/?linkid=37123) define una combinación secuencia como una combinación de un carácter base y uno o más caracteres de combinación de caracteres. Un par suplente puede representar un carácter base o un carácter de combinación.  
  
 Este método sólo devuelve el primer elemento de texto. Para recorrer en iteración los elementos de la cadena de texto, la aplicación debe utilizar el <xref:System.Globalization.TextElementEnumerator> objeto generado por el <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> is <see langword="null" />.</exception>
        <altmember cref="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
        <altmember cref="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetNextTextElement">
      <MemberSignature Language="C#" Value="public static string GetNextTextElement (string str, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetNextTextElement(string str, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetNextTextElement(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNextTextElement (str As String, index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetNextTextElement(System::String ^ str, int index);" />
      <MemberSignature Language="F#" Value="static member GetNextTextElement : string * int -&gt; string" Usage="System.Globalization.StringInfo.GetNextTextElement (str, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">The string from which to get the text element.</param>
        <param name="index">The zero-based index at which the text element starts.</param>
        <summary>Gets the text element at the specified index of the specified string.</summary>
        <returns>A string containing the text element at the specified index of the specified string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework define un elemento de texto como una unidad de texto que se muestra como un carácter único, es decir, un grafemas. Un elemento de texto puede ser un carácter base, un par suplente o un carácter combinable secuencia. El [estándar Unicode](http://go.microsoft.com/fwlink/?linkid=37123) define un par suplente como una representación de caracteres codificados para un único carácter abstracto que consta de una secuencia de dos unidades de código, donde la primera unidad del par es un suplente alto y el segundo es bajo suplente. El estándar Unicode define una combinación secuencia como una combinación de un carácter base y uno o más caracteres de combinación de caracteres. Un par suplente puede representar un carácter base o un carácter de combinación.  
  
 Este método sólo devuelve el primer elemento de texto de la subcadena que empieza en el índice especificado. Para recorrer en iteración los elementos de la cadena de texto, la aplicación debe utilizar el <xref:System.Globalization.TextElementEnumerator> generados por el <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is outside the range of valid indexes for <paramref name="str" />.</exception>
        <altmember cref="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
        <altmember cref="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTextElementEnumerator">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Returns an enumerator that iterates through the text elements of a string.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTextElementEnumerator">
      <MemberSignature Language="C#" Value="public static System.Globalization.TextElementEnumerator GetTextElementEnumerator (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.TextElementEnumerator GetTextElementEnumerator(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTextElementEnumerator (str As String) As TextElementEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::TextElementEnumerator ^ GetTextElementEnumerator(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member GetTextElementEnumerator : string -&gt; System.Globalization.TextElementEnumerator" Usage="System.Globalization.StringInfo.GetTextElementEnumerator str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextElementEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">The string to iterate through.</param>
        <summary>Returns an enumerator that iterates through the text elements of the entire string.</summary>
        <returns>A <see cref="T:System.Globalization.TextElementEnumerator" /> for the entire string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework define un elemento de texto como una unidad de texto que se muestra como un carácter único, es decir, un grafemas. Un elemento de texto puede ser un carácter base, un par suplente o un carácter combinable secuencia. El [estándar Unicode](http://go.microsoft.com/fwlink/?linkid=37123) define un par suplente como una representación de caracteres codificados para un único carácter abstracto que consta de una secuencia de dos unidades de código, donde la primera unidad del par es un suplente alto y el segundo es bajo suplente. El estándar Unicode define una combinación secuencia como una combinación de un carácter base y uno o más caracteres de combinación de caracteres. Un par suplente puede representar un carácter base o un carácter de combinación.  
  
 El enumerador de elemento de texto sólo se utiliza para leer los datos en la cadena; no puede modificar la cadena subyacente. El enumerador no tiene acceso exclusivo a la cadena.  
  
 El enumerador se encuentra en un estado no válido si se coloca antes del primer elemento de texto en la cadena o después del último elemento de texto en la cadena. Cuando el enumerador se encuentra en un estado no válido, la llamada <xref:System.Globalization.TextElementEnumerator.Current%2A> produce una excepción.  
  
 Inicialmente, el enumerador se coloca antes del primer elemento de texto en la cadena. <xref:System.Globalization.TextElementEnumerator.Reset%2A> también devuelve el enumerador a esta posición. Por lo tanto, después de crea un enumerador o después de <xref:System.Globalization.TextElementEnumerator.Reset%2A> se llama, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> debe llamarse para hacer avanzar el enumerador hasta el primer elemento de texto de la cadena antes de leer el valor de <xref:System.Globalization.TextElementEnumerator.Current%2A>.  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> devuelve el mismo objeto hasta que se llama a <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> o a <xref:System.Globalization.TextElementEnumerator.Reset%2A>.  
  
 Cuando se pasa el final de la cadena, el enumerador es nuevo en un estado no válido y que realiza la llamada <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> devuelve `false`. Una llamada a <xref:System.Globalization.TextElementEnumerator.Current%2A> produce una excepción si la última llamada a <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> devuelve `false`.  
  
   
  
## Examples  
 El ejemplo de código siguiente se muestra cómo llamar el <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> método. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Globalization.StringInfo> clase.  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> is <see langword="null" />.</exception>
        <altmember cref="T:System.Globalization.TextElementEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetTextElementEnumerator">
      <MemberSignature Language="C#" Value="public static System.Globalization.TextElementEnumerator GetTextElementEnumerator (string str, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.TextElementEnumerator GetTextElementEnumerator(string str, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTextElementEnumerator (str As String, index As Integer) As TextElementEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::TextElementEnumerator ^ GetTextElementEnumerator(System::String ^ str, int index);" />
      <MemberSignature Language="F#" Value="static member GetTextElementEnumerator : string * int -&gt; System.Globalization.TextElementEnumerator" Usage="System.Globalization.StringInfo.GetTextElementEnumerator (str, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextElementEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">The string to iterate through.</param>
        <param name="index">The zero-based index at which to start iterating.</param>
        <summary>Returns an enumerator that iterates through the text elements of the string, starting at the specified index.</summary>
        <returns>A <see cref="T:System.Globalization.TextElementEnumerator" /> for the string starting at <paramref name="index" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework define un elemento de texto como una unidad de texto que se muestra como un carácter único, es decir, un grafemas. Un elemento de texto puede ser un carácter base, un par suplente o un carácter combinable secuencia. El [estándar Unicode](http://go.microsoft.com/fwlink/?linkid=37123) define un par suplente como una representación de caracteres codificados para un único carácter abstracto que consta de una secuencia de dos unidades de código, donde la primera unidad del par es un suplente alto y el segundo es bajo suplente. El estándar Unicode define una combinación secuencia como una combinación de un carácter base y uno o más caracteres de combinación de caracteres. Un par suplente puede representar un carácter base o un carácter de combinación.  
  
 El enumerador de elemento de texto sólo se utiliza para leer los datos en la cadena; no puede modificar la cadena subyacente. El enumerador no tiene acceso exclusivo a la cadena.  
  
 El enumerador se encuentra en un estado no válido si se coloca antes del primer elemento de texto en la cadena o después del último elemento de texto en la cadena. Cuando el enumerador se encuentra en un estado no válido, la llamada <xref:System.Globalization.TextElementEnumerator.Current%2A> produce una excepción.  
  
 Inicialmente, el enumerador se coloca antes del primer elemento de texto en la cadena. <xref:System.Globalization.TextElementEnumerator.Reset%2A> también devuelve el enumerador a esta posición. Por lo tanto, después de crea un enumerador o después de <xref:System.Globalization.TextElementEnumerator.Reset%2A> se llama, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> debe llamarse para hacer avanzar el enumerador hasta el primer elemento de texto de la cadena antes de leer el valor de <xref:System.Globalization.TextElementEnumerator.Current%2A>.  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> devuelve el mismo objeto hasta que se llama a <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> o a <xref:System.Globalization.TextElementEnumerator.Reset%2A>.  
  
 Cuando se pasa el final de la cadena, el enumerador es nuevo en un estado no válido y que realiza la llamada <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> devuelve `false`. Una llamada a <xref:System.Globalization.TextElementEnumerator.Current%2A> produce una excepción si la última llamada a <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> devuelve `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is outside the range of valid indexes for <paramref name="str" />.</exception>
        <altmember cref="T:System.Globalization.TextElementEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="LengthInTextElements">
      <MemberSignature Language="C#" Value="public int LengthInTextElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LengthInTextElements" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.StringInfo.LengthInTextElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LengthInTextElements As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LengthInTextElements { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LengthInTextElements : int" Usage="System.Globalization.StringInfo.LengthInTextElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of text elements in the current <see cref="T:System.Globalization.StringInfo" /> object.</summary>
        <value>El número de caracteres base, los pares suplentes y las secuencias de caracteres en de combinación en este objeto <see cref="T:System.Globalization.StringInfo" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseCombiningCharacters">
      <MemberSignature Language="C#" Value="public static int[] ParseCombiningCharacters (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32[] ParseCombiningCharacters(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseCombiningCharacters (str As String) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;int&gt; ^ ParseCombiningCharacters(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member ParseCombiningCharacters : string -&gt; int[]" Usage="System.Globalization.StringInfo.ParseCombiningCharacters str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">The string to search.</param>
        <summary>Returns the indexes of each base character, high surrogate, or control character within the specified string.</summary>
        <returns>An array of integers that contains the zero-based indexes of each base character, high surrogate, or control character within the specified string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El [estándar Unicode](http://go.microsoft.com/fwlink/?linkid=37123) define un par suplente como una representación de caracteres codificados para un único carácter abstracto que consta de una secuencia de dos unidades de código, donde la primera unidad del par es un suplente alto y el segundo es bajo suplente. Un suplente alto es un punto de código Unicode en el intervalo de U+D800 a U+DBFF y un suplente bajo es un punto de código Unicode en el intervalo U+DC00 a U+DFFF.  
  
 Un carácter de control es un carácter para el que el valor Unicode U + 007F o en el rango de u+0000 a U + 001F o u+0080 a 009F U +.  
  
 .NET Framework define un elemento de texto como una unidad de texto que se muestra como un carácter único, es decir, un grafemas. Un elemento de texto puede ser un carácter base, un par suplente o un carácter combinable secuencia. El [estándar Unicode](http://go.microsoft.com/fwlink/?linkid=37123) define una combinación secuencia como una combinación de un carácter base y uno o más caracteres de combinación de caracteres. Un par suplente puede representar un carácter base o un carácter de combinación.  
  
 Si una combinación no es válida la secuencia de caracteres, todos los caracteres combinables en esa secuencia también se devuelven.  
  
 Cada índice de la matriz resultante es el principio de un elemento de texto, es decir, el índice del carácter base o suplente alto.  
  
 La longitud de cada elemento fácilmente se calcula como la diferencia entre los índices sucesivos. La longitud de la matriz siempre será menor o igual que la longitud de la cadena. Por ejemplo, dada la cadena "\u4f00\u302a\ud800\udc00\u4f01", este método devuelve los índices 0, 2 y 4.  
  
## <a name="equivalent-members"></a>Miembros equivalentes  
 A partir de la versión 2.0 de .NET Framework, el <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> método y <xref:System.Globalization.StringInfo.LengthInTextElements%2A> propiedad proporcionar una implementación fácil de usar la funcionalidad que ofrece el <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> método.  
  
   
  
## Examples  
 El ejemplo de código siguiente se muestra cómo llamar el <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> método. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Globalization.StringInfo> clase.  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> is <see langword="null" />.</exception>
        <altmember cref="Overload:System.Globalization.StringInfo.SubstringByTextElements" />
        <altmember cref="P:System.Globalization.StringInfo.LengthInTextElements" />
      </Docs>
    </Member>
    <Member MemberName="String">
      <MemberSignature Language="C#" Value="public string String { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string String" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.StringInfo.String" />
      <MemberSignature Language="VB.NET" Value="Public Property String As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ String { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.String : string with get, set" Usage="System.Globalization.StringInfo.String" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the value of the current <see cref="T:System.Globalization.StringInfo" /> object.</summary>
        <value>La cadena que es el valor del elemento actual <see cref="T:System.Globalization.StringInfo" /> objeto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando un <xref:System.Globalization.StringInfo> se crea una instancia de objeto, su <xref:System.Globalization.StringInfo.String%2A> propiedad se establece en uno de los siguientes valores:  
  
-   <xref:System.String.Empty?displayProperty=nameWithType> Si el valor predeterminado <xref:System.Globalization.StringInfo.%23ctor> se llama. Después, debe usar el <xref:System.Globalization.StringInfo.String%2A> propiedad para asignar la cadena que <xref:System.Globalization.StringInfo> rperesents de objeto.  
  
-   La cadena proporcionada como la `value` argumento para el <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> constructor.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The value in a set operation is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SubstringByTextElements">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retrieves a substring of text elements from the current <see cref="T:System.Globalization.StringInfo" /> object.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SubstringByTextElements">
      <MemberSignature Language="C#" Value="public string SubstringByTextElements (int startingTextElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SubstringByTextElements(int32 startingTextElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubstringByTextElements (startingTextElement As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SubstringByTextElements(int startingTextElement);" />
      <MemberSignature Language="F#" Value="member this.SubstringByTextElements : int -&gt; string" Usage="stringInfo.SubstringByTextElements startingTextElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingTextElement" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startingTextElement">The zero-based index of a text element in this <see cref="T:System.Globalization.StringInfo" /> object.</param>
        <summary>Retrieves a substring of text elements from the current <see cref="T:System.Globalization.StringInfo" /> object starting from a specified text element and continuing through the last text element.</summary>
        <returns>A substring of text elements in this <see cref="T:System.Globalization.StringInfo" /> object, starting from the text element index specified by the <paramref name="startingTextElement" /> parameter and continuing through the last text element in this object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Considere la posibilidad de una cadena que consta de cinco elementos de texto, que se indexan de 0 a 4. Si el `startingTextElement` del parámetro es 1, el <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> método devuelve una subcadena que consta de los elementos de texto para que los índices son 1, 2, 3 y 4.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startingTextElement" /> is less than zero.  -or-  The string that is the value of the current <see cref="T:System.Globalization.StringInfo" /> object is the empty string ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="SubstringByTextElements">
      <MemberSignature Language="C#" Value="public string SubstringByTextElements (int startingTextElement, int lengthInTextElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SubstringByTextElements(int32 startingTextElement, int32 lengthInTextElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubstringByTextElements (startingTextElement As Integer, lengthInTextElements As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SubstringByTextElements(int startingTextElement, int lengthInTextElements);" />
      <MemberSignature Language="F#" Value="member this.SubstringByTextElements : int * int -&gt; string" Usage="stringInfo.SubstringByTextElements (startingTextElement, lengthInTextElements)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingTextElement" Type="System.Int32" />
        <Parameter Name="lengthInTextElements" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startingTextElement">The zero-based index of a text element in this <see cref="T:System.Globalization.StringInfo" /> object.</param>
        <param name="lengthInTextElements">The number of text elements to retrieve.</param>
        <summary>Retrieves a substring of text elements from the current <see cref="T:System.Globalization.StringInfo" /> object starting from a specified text element and continuing through the specified number of text elements.</summary>
        <returns>A substring of text elements in this <see cref="T:System.Globalization.StringInfo" /> object. The substring consists of the number of text elements specified by the <paramref name="lengthInTextElements" /> parameter and starts from the text element index specified by the <paramref name="startingTextElement" /> parameter.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Considere la posibilidad de una cadena que consta de cinco elementos de texto, que se indexan de 0 a 4. Si el `startingTextElement` del parámetro es 1 y el `lengthInTextElements` del parámetro es 3, el <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> método devuelve una subcadena que consta de los elementos de texto para que los índices son 1, 2 y 3.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startingTextElement" /> is less than zero.  -or-  <paramref name="startingTextElement" /> is greater than or equal to the length of the string that is the value of the current <see cref="T:System.Globalization.StringInfo" /> object.  -or-  <paramref name="lengthInTextElements" /> is less than zero.  -or-  The string that is the value of the current <see cref="T:System.Globalization.StringInfo" /> object is the empty string ("").  -or-  <paramref name="startingTextElement" /> + <paramref name="lengthInTextElements" /> specify an index that is greater than the number of text elements in this <see cref="T:System.Globalization.StringInfo" /> object.</exception>
      </Docs>
    </Member>
  </Members>
</Type>