<Type Name="StringInfo" FullName="System.Globalization.StringInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dfcadf1280b7a99ae67ace6278f0fb80976a6481" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="05/07/2018" />
    <Meta Name="ms.locfileid" Value="33682150" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StringInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.StringInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class StringInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringInfo" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Proporciona funciones para dividir una cadena en elementos de texto y procesar en iteración en dichos elementos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework define un elemento de texto como una unidad de texto que se muestra como un carácter único, es decir, un grafemas. Un elemento de texto puede ser un carácter base, un par suplente o un carácter combinable secuencia. El [estándar Unicode](http://go.microsoft.com/fwlink/?linkid=37123) define un par suplente como una representación de caracteres codificados para un único carácter abstracto que consta de una secuencia de dos unidades de código, donde la primera unidad del par es un suplente alto y el segundo es un suplente bajo. El estándar Unicode define una combinación secuencia como una combinación de un carácter base y uno o más caracteres de combinación de caracteres. Un par suplente puede representar un carácter base o un carácter combinable.  
  
 El <xref:System.Globalization.StringInfo> clase le permite trabajar con una cadena como una serie de elementos de texto en lugar de individuales <xref:System.Char> objetos.  
  
 Para crear instancias de un <xref:System.Globalization.StringInfo> objeto que representa una cadena especificada, puede realizar cualquiera de las siguientes acciones:  
  
-   Llame a la <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> constructor y pasarle la cadena que el <xref:System.Globalization.StringInfo> objeto que se va a representar como un argumento.  
  
-   Llame a la opción predeterminada <xref:System.Globalization.StringInfo.%23ctor> constructor y asignar la cadena que el <xref:System.Globalization.StringInfo> objeto que se va a representar para el <xref:System.Globalization.StringInfo.String%2A> propiedad.  
  
 Puede trabajar con los elementos de texto individuales en una cadena de dos maneras:  
  
-   Con una enumeración de cada elemento de texto. Para ello, se llama a la <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> (método) y, a continuación, llamar repetidamente a la <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> método en el valor devuelto <xref:System.Globalization.TextElementEnumerator> objeto hasta que el método devuelve `false`.  
  
-   Mediante una llamada a la <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> método para recuperar una matriz que contiene el índice inicial de cada elemento de texto. Puede recuperar los elementos de texto individuales pasando estos índices para la <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> método.  
  
 En el ejemplo siguiente se muestra dos maneras de trabajar con los elementos de texto en una cadena. Se crean dos cadenas:  
  
-   `strCombining`, que es una cadena de caracteres árabes que incluye tres elementos de texto con varios <xref:System.Char> objetos. El primer elemento de texto es el carácter base Letra árabe ALEF (U +-627) seguido por árabe HAMZA debajo (U +-655) y KASRA árabe (u+0650). El segundo elemento de texto es árabe HEH letra (0647) seguido por FATHA árabe (U +-64E). El tercer elemento de texto es árabe BEH LETTTER (0628) seguido por DAMMATAN árabe (U + 064C).  
  
-   `strSurrogates`, que es una cadena que incluye tres pares suplentes: GRIEGO ACROPHONIC cinco TALENTOS (10148) desde el plano multilingüe complementarios, 20026 U + en el plano ideográficos complementarios y U + F1001 desde el área de usuario privados. La codificación UTF-16 de cada carácter es un par suplente que está formada por un suplente alto seguido por un suplente bajo.  
  
 Cada cadena se analiza una vez el <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> método y, a continuación, por el <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> método. Ambos métodos correctamente analizan los elementos de texto en las dos cadenas y mostrar los resultados de la operación de análisis.  
  
 [!code-csharp[System.Globalization.StringInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.stringinfo.class/cs/indexing1.cs#1)]
 [!code-vb[System.Globalization.StringInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.stringinfo.class/vb/indexing1.vb#1)]  
  
   
  
## Examples  
 Este ejemplo muestra cómo utilizar el <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> y <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> métodos de la <xref:System.Globalization.StringInfo> clase para manipular una cadena que contiene caracteres suplentes y combinables.  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage">
      <para>Internamente, los métodos de la <see cref="T:System.Globalization.StringInfo" /> clase llamar a los métodos de la <see cref="T:System.Globalization.CharUnicodeInfo" /> clase para determinar las categorías de caracteres. A partir de la [!INCLUDE[net_v462](~/includes/net-v462-md.md)], clasificación de caracteres se basa en [el estándar Unicode, versión 8.0.0](https://unicode.org/versions/Unicode8.0.0). Para el [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] a través de la [!INCLUDE[net_v461](~/includes/net-v461-md.md)], se basa en [el estándar Unicode, versión 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</para>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Globalization.StringInfo" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Globalization.StringInfo" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la nueva <xref:System.Globalization.StringInfo> objeto se inicializa en la cadena vacía (""). Puede asignar otra cadena a él mediante el <xref:System.Globalization.StringInfo.String%2A> propiedad.  También puede crear una instancia un <xref:System.Globalization.StringInfo> objeto que representa una cadena especificada en un solo paso mediante una llamada a la <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> constructor.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringInfo (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringInfo(System::String ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">Cadena para inicializar este objeto <see cref="T:System.Globalization.StringInfo" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Globalization.StringInfo" /> en una cadena especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor asigna el argumento de valor para el objeto <xref:System.Globalization.StringInfo.String%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Objeto.</param>
        <summary>Indica si el objeto <see cref="T:System.Globalization.StringInfo" /> actual es igual a un objeto especificado.</summary>
        <returns>
          <see langword="true" /> si el parámetro <paramref name="value" /> es un objeto <see cref="T:System.Globalization.StringInfo" /> y su propiedad <see cref="P:System.Globalization.StringInfo.String" /> es igual a la propiedad <see cref="P:System.Globalization.StringInfo.String" /> de este objeto <see cref="T:System.Globalization.StringInfo" />; en caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.String.Equals" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Calcula un código hash para el valor del objeto <see cref="T:System.Globalization.StringInfo" /> actual.</summary>
        <returns>Un código hash entero de 32 bits con signo basado en el valor de cadena de este objeto <see cref="T:System.Globalization.StringInfo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El comportamiento de <xref:System.Globalization.StringInfo.GetHashCode%2A> depende de su implementación, lo que podría cambiar de una versión de common language runtime a otro. Esto podría suceder para mejorar el rendimiento de <xref:System.Globalization.StringInfo.GetHashCode%2A>. Para hacer que el comportamiento de <xref:System.Globalization.StringInfo.GetHashCode%2A> constante, la aplicación debe invalidar la implementación en tiempo de ejecución de <xref:System.Globalization.StringInfo.GetHashCode%2A> con una implementación que se sabe que nunca cambio.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.GetHashCode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNextTextElement">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtiene el primer elemento de texto de una cadena especificada.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNextTextElement">
      <MemberSignature Language="C#" Value="public static string GetNextTextElement (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetNextTextElement(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetNextTextElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNextTextElement (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetNextTextElement(System::String ^ str);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">Cadena de la que se obtiene el elemento de texto.</param>
        <summary>Obtiene el primer elemento de texto de una cadena especificada.</summary>
        <returns>Cadena que contiene el primer elemento de texto de una cadena especificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework define un elemento de texto como una unidad de texto que se muestra como un carácter único, es decir, un grafemas. Un elemento de texto puede ser un carácter base, un par suplente o un carácter combinable secuencia. El [estándar Unicode](http://go.microsoft.com/fwlink/?linkid=37123) define un par suplente como una representación de caracteres codificados para un único carácter abstracto que consta de una secuencia de dos unidades de código, donde la primera unidad del par es un suplente alto y el segundo es un suplente bajo. El [estándar Unicode](http://go.microsoft.com/fwlink/?linkid=37123) define una combinación secuencia como una combinación de un carácter base y uno o más caracteres de combinación de caracteres. Un par suplente puede representar un carácter base o un carácter combinable.  
  
 Este método sólo devuelve el primer elemento de texto. Para recorrer en iteración los elementos de texto de la cadena, la aplicación debe utilizar el <xref:System.Globalization.TextElementEnumerator> objeto generado por el <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> es <see langword="null" />.</exception>
        <altmember cref="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
        <altmember cref="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetNextTextElement">
      <MemberSignature Language="C#" Value="public static string GetNextTextElement (string str, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetNextTextElement(string str, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetNextTextElement(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNextTextElement (str As String, index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetNextTextElement(System::String ^ str, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">Cadena de la que se obtiene el elemento de texto.</param>
        <param name="index">Índice de base cero donde comienza el elemento de texto.</param>
        <summary>Obtiene el elemento de texto en el índice especificado de la cadena indicada.</summary>
        <returns>Cadena que contiene el elemento de texto en el índice especificado de la cadena indicada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework define un elemento de texto como una unidad de texto que se muestra como un carácter único, es decir, un grafemas. Un elemento de texto puede ser un carácter base, un par suplente o un carácter combinable secuencia. El [estándar Unicode](http://go.microsoft.com/fwlink/?linkid=37123) define un par suplente como una representación de caracteres codificados para un único carácter abstracto que consta de una secuencia de dos unidades de código, donde la primera unidad del par es un suplente alto y el segundo es un suplente bajo. El estándar Unicode define una combinación secuencia como una combinación de un carácter base y uno o más caracteres de combinación de caracteres. Un par suplente puede representar un carácter base o un carácter combinable.  
  
 Este método sólo devuelve el primer elemento de texto de la subcadena que comienza en el índice especificado. Para recorrer en iteración los elementos de texto de la cadena, la aplicación debe utilizar el <xref:System.Globalization.TextElementEnumerator> generados por el <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> está fuera del intervalo de índices válidos para la <paramref name="str" />.</exception>
        <altmember cref="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
        <altmember cref="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTextElementEnumerator">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Devuelve un enumerador que recorre en iteración los elementos de texto de una cadena.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTextElementEnumerator">
      <MemberSignature Language="C#" Value="public static System.Globalization.TextElementEnumerator GetTextElementEnumerator (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.TextElementEnumerator GetTextElementEnumerator(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTextElementEnumerator (str As String) As TextElementEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::TextElementEnumerator ^ GetTextElementEnumerator(System::String ^ str);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextElementEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">La cadena que se va a recorrer en iteración.</param>
        <summary>Devuelve un enumerador que recorre en iteración los elementos de toda la cadena.</summary>
        <returns>
          <see cref="T:System.Globalization.TextElementEnumerator" /> para toda la cadena.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework define un elemento de texto como una unidad de texto que se muestra como un carácter único, es decir, un grafemas. Un elemento de texto puede ser un carácter base, un par suplente o un carácter combinable secuencia. El [estándar Unicode](http://go.microsoft.com/fwlink/?linkid=37123) define un par suplente como una representación de caracteres codificados para un único carácter abstracto que consta de una secuencia de dos unidades de código, donde la primera unidad del par es un suplente alto y el segundo es un suplente bajo. El estándar Unicode define una combinación secuencia como una combinación de un carácter base y uno o más caracteres de combinación de caracteres. Un par suplente puede representar un carácter base o un carácter combinable.  
  
 El enumerador de elemento de texto se utiliza sólo para leer datos de la cadena; no puede modificar la cadena subyacente. El enumerador no tiene acceso exclusivo a la cadena.  
  
 El enumerador se encuentra en un estado no válido si se coloca antes del primer elemento de texto en la cadena o después del último elemento de texto en la cadena. Cuando el enumerador se encuentra en un estado no válido, una llamada a <xref:System.Globalization.TextElementEnumerator.Current%2A> produce una excepción.  
  
 Inicialmente, el enumerador se coloca antes del primer elemento de texto en la cadena. <xref:System.Globalization.TextElementEnumerator.Reset%2A> también devuelve el enumerador a esta posición. Por lo tanto, después de crea un enumerador o después de <xref:System.Globalization.TextElementEnumerator.Reset%2A> se llama, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> debe llamarse para hacer avanzar el enumerador hasta el primer elemento de texto de la cadena antes de leer el valor de <xref:System.Globalization.TextElementEnumerator.Current%2A>.  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> devuelve el mismo objeto hasta que se llama a <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> o a <xref:System.Globalization.TextElementEnumerator.Reset%2A>.  
  
 Cuando se pasa el final de la cadena, el enumerador vuelve a estar en un estado no válido y que realiza la llamada <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> devuelve `false`. Al llamar a <xref:System.Globalization.TextElementEnumerator.Current%2A> produce una excepción si la última llamada a <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> devuelve `false`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo llamar a la <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> método. Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Globalization.StringInfo> clase.  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> es <see langword="null" />.</exception>
        <altmember cref="T:System.Globalization.TextElementEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetTextElementEnumerator">
      <MemberSignature Language="C#" Value="public static System.Globalization.TextElementEnumerator GetTextElementEnumerator (string str, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.TextElementEnumerator GetTextElementEnumerator(string str, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTextElementEnumerator (str As String, index As Integer) As TextElementEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::TextElementEnumerator ^ GetTextElementEnumerator(System::String ^ str, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextElementEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">La cadena que se va a recorrer en iteración.</param>
        <param name="index">Índice de base cero donde comienza la iteración.</param>
        <summary>Devuelve un enumerador que recorre en iteración los elementos de texto de la cadena, empezando en el índice especificado.</summary>
        <returns>
          <see cref="T:System.Globalization.TextElementEnumerator" /> para la cadena empezando en <paramref name="index" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework define un elemento de texto como una unidad de texto que se muestra como un carácter único, es decir, un grafemas. Un elemento de texto puede ser un carácter base, un par suplente o un carácter combinable secuencia. El [estándar Unicode](http://go.microsoft.com/fwlink/?linkid=37123) define un par suplente como una representación de caracteres codificados para un único carácter abstracto que consta de una secuencia de dos unidades de código, donde la primera unidad del par es un suplente alto y el segundo es un suplente bajo. El estándar Unicode define una combinación secuencia como una combinación de un carácter base y uno o más caracteres de combinación de caracteres. Un par suplente puede representar un carácter base o un carácter combinable.  
  
 El enumerador de elemento de texto se utiliza sólo para leer datos de la cadena; no puede modificar la cadena subyacente. El enumerador no tiene acceso exclusivo a la cadena.  
  
 El enumerador se encuentra en un estado no válido si se coloca antes del primer elemento de texto en la cadena o después del último elemento de texto en la cadena. Cuando el enumerador se encuentra en un estado no válido, una llamada a <xref:System.Globalization.TextElementEnumerator.Current%2A> produce una excepción.  
  
 Inicialmente, el enumerador se coloca antes del primer elemento de texto en la cadena. <xref:System.Globalization.TextElementEnumerator.Reset%2A> también devuelve el enumerador a esta posición. Por lo tanto, después de crea un enumerador o después de <xref:System.Globalization.TextElementEnumerator.Reset%2A> se llama, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> debe llamarse para hacer avanzar el enumerador hasta el primer elemento de texto de la cadena antes de leer el valor de <xref:System.Globalization.TextElementEnumerator.Current%2A>.  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> devuelve el mismo objeto hasta que se llama a <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> o a <xref:System.Globalization.TextElementEnumerator.Reset%2A>.  
  
 Cuando se pasa el final de la cadena, el enumerador vuelve a estar en un estado no válido y que realiza la llamada <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> devuelve `false`. Al llamar a <xref:System.Globalization.TextElementEnumerator.Current%2A> produce una excepción si la última llamada a <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> devuelve `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> está fuera del intervalo de índices válidos para la <paramref name="str" />.</exception>
        <altmember cref="T:System.Globalization.TextElementEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="LengthInTextElements">
      <MemberSignature Language="C#" Value="public int LengthInTextElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LengthInTextElements" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.StringInfo.LengthInTextElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LengthInTextElements As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LengthInTextElements { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el número de elementos de texto del objeto <see cref="T:System.Globalization.StringInfo" /> actual.</summary>
        <value>El número de caracteres base, los pares suplentes y las secuencias de caracteres en de combinación en este objeto <see cref="T:System.Globalization.StringInfo" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseCombiningCharacters">
      <MemberSignature Language="C#" Value="public static int[] ParseCombiningCharacters (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32[] ParseCombiningCharacters(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseCombiningCharacters (str As String) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;int&gt; ^ ParseCombiningCharacters(System::String ^ str);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">Cadena en la que se va a buscar.</param>
        <summary>Devuelve los índices de todos los caracteres base, suplentes altos o caracteres de control de la cadena especificada.</summary>
        <returns>Matriz de enteros que contiene los índices de base cero de todos los caracteres base, suplentes altos o caracteres de control de la cadena especificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El [estándar Unicode](http://go.microsoft.com/fwlink/?linkid=37123) define un par suplente como una representación de caracteres codificados para un único carácter abstracto que consta de una secuencia de dos unidades de código, donde la primera unidad del par es un suplente alto y el segundo es un suplente bajo. Un suplente alto es un punto de código Unicode en el intervalo de U+D800 a U+DBFF, y un suplente bajo es un punto de código Unicode en el intervalo de U+DC00 a U+DFFF.  
  
 Un carácter de control es un carácter para los que el valor Unicode U+2030 007F o en el intervalo de u+0000 a U + 001F o de u+0080 a 009F U +.  
  
 .NET Framework define un elemento de texto como una unidad de texto que se muestra como un carácter único, es decir, un grafemas. Un elemento de texto puede ser un carácter base, un par suplente o un carácter combinable secuencia. El [estándar Unicode](http://go.microsoft.com/fwlink/?linkid=37123) define una combinación secuencia como una combinación de un carácter base y uno o más caracteres de combinación de caracteres. Un par suplente puede representar un carácter base o un carácter combinable.  
  
 Si una combinación secuencia de caracteres no es válida, se devuelve también cada carácter de combinación en esa secuencia.  
  
 Cada índice de la matriz resultante es el principio de un elemento de texto, es decir, el índice del carácter base o suplente alto.  
  
 La longitud de cada elemento se calcula fácilmente como la diferencia entre los índices sucesivos. La longitud de la matriz siempre será menor o igual que la longitud de la cadena. Por ejemplo, dada la cadena "\u4f00\u302a\ud800\udc00\u4f01", este método devuelve los índices 0, 2 y 4.  
  
## <a name="equivalent-members"></a>Miembros equivalentes  
 A partir de la versión 2.0 de .NET Framework, el <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> método y <xref:System.Globalization.StringInfo.LengthInTextElements%2A> propiedad proporcionar una implementación fácil de usar de la funcionalidad proporcionada por el <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo llamar a la <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> método. Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Globalization.StringInfo> clase.  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> es <see langword="null" />.</exception>
        <altmember cref="Overload:System.Globalization.StringInfo.SubstringByTextElements" />
        <altmember cref="P:System.Globalization.StringInfo.LengthInTextElements" />
      </Docs>
    </Member>
    <Member MemberName="String">
      <MemberSignature Language="C#" Value="public string String { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string String" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.StringInfo.String" />
      <MemberSignature Language="VB.NET" Value="Public Property String As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ String { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el valor del objeto <see cref="T:System.Globalization.StringInfo" /> actual.</summary>
        <value>La cadena que es el valor del objeto <see cref="T:System.Globalization.StringInfo" /> actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando un <xref:System.Globalization.StringInfo> se crea una instancia de objeto, su <xref:System.Globalization.StringInfo.String%2A> propiedad se establece en uno de los siguientes valores:  
  
-   <xref:System.String.Empty?displayProperty=nameWithType> Si el valor predeterminado <xref:System.Globalization.StringInfo.%23ctor> se llama. A continuación, debe usar el <xref:System.Globalization.StringInfo.String%2A> propiedad para asignar la cadena que el control <xref:System.Globalization.StringInfo> rperesents del objeto.  
  
-   La cadena proporcionada como el `value` argumento pasado a la <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> constructor.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor en una operación de conjunto es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SubstringByTextElements">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera una subcadena de elementos de texto del objeto <see cref="T:System.Globalization.StringInfo" /> actual.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SubstringByTextElements">
      <MemberSignature Language="C#" Value="public string SubstringByTextElements (int startingTextElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SubstringByTextElements(int32 startingTextElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubstringByTextElements (startingTextElement As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SubstringByTextElements(int startingTextElement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingTextElement" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startingTextElement">Índice de base cero de un elemento de texto en este objeto <see cref="T:System.Globalization.StringInfo" />.</param>
        <summary>Recupera una subcadena de elementos de texto del objeto <see cref="T:System.Globalization.StringInfo" /> actual empezando en un elemento de texto especificado y continuando hasta el último elemento de texto.</summary>
        <returns>Una subcadena de elementos de texto de este objeto <see cref="T:System.Globalization.StringInfo" />, empezando por el índice de elemento de texto especificado por el parámetro <paramref name="startingTextElement" /> y continuando hasta el último elemento de texto de este objeto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Considere la posibilidad de una cadena que consta de cinco elementos de texto, indizados desde 0 a 4. Si el `startingTextElement` del parámetro es 1, el <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> método devuelve una subcadena que consta de los elementos de texto para que los índices son 1, 2, 3 y 4.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startingTextElement" /> es menor que cero.  
  
 O bien  
  
 La cadena que es el valor del objeto <see cref="T:System.Globalization.StringInfo" /> actual es la cadena vacía ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="SubstringByTextElements">
      <MemberSignature Language="C#" Value="public string SubstringByTextElements (int startingTextElement, int lengthInTextElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SubstringByTextElements(int32 startingTextElement, int32 lengthInTextElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubstringByTextElements (startingTextElement As Integer, lengthInTextElements As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SubstringByTextElements(int startingTextElement, int lengthInTextElements);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingTextElement" Type="System.Int32" />
        <Parameter Name="lengthInTextElements" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startingTextElement">Índice de base cero de un elemento de texto en este objeto <see cref="T:System.Globalization.StringInfo" />.</param>
        <param name="lengthInTextElements">Número de elementos de texto que se va a recuperar.</param>
        <summary>Recupera una subcadena de elementos de texto del objeto <see cref="T:System.Globalization.StringInfo" /> actual empezando en un elemento de texto especificado y continuando en el número especificado de elementos de texto.</summary>
        <returns>Una subcadena de elementos de texto de este objeto <see cref="T:System.Globalization.StringInfo" />. La subcadena consta del número de elementos de texto especificado por el parámetro <paramref name="lengthInTextElements" /> y se inicia en el índice de elemento de texto especificado por el parámetro <paramref name="startingTextElement" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Considere la posibilidad de una cadena que consta de cinco elementos de texto, indizados desde 0 a 4. Si el `startingTextElement` del parámetro es 1 y el `lengthInTextElements` del parámetro es 3, el <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> método devuelve una subcadena que consta de los elementos de texto para que los índices son 1, 2 y 3.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startingTextElement" /> es menor que cero.  
  
 O bien  
  
 El valor de <paramref name="startingTextElement" /> es mayor o igual que la longitud de la cadena que es el valor del objeto <see cref="T:System.Globalization.StringInfo" /> actual.  
  
 O bien  
  
 <paramref name="lengthInTextElements" /> es menor que cero.  
  
 O bien  
  
 La cadena que es el valor del objeto <see cref="T:System.Globalization.StringInfo" /> actual es la cadena vacía ("").  
  
 O bien  
  
 <paramref name="startingTextElement" /> + <paramref name="lengthInTextElements" /> especifican un índice que es mayor que el número de elementos de texto de este objeto <see cref="T:System.Globalization.StringInfo" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>