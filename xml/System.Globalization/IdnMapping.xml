<Type Name="IdnMapping" FullName="System.Globalization.IdnMapping">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2c33b447d1b6b540dc51dbe6d103121116d01261" />
    <Meta Name="ms.sourcegitcommit" Value="3507e865a3613c00760f25ad1045aaa11bae4dd8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/23/2018" />
    <Meta Name="ms.locfileid" Value="31780532" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class IdnMapping" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit IdnMapping extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.IdnMapping" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class IdnMapping" />
  <TypeSignature Language="C++ CLI" Value="public ref class IdnMapping sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Extensions</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Admite el uso de caracteres no ASCII para los nombres de dominio de Internet. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un nombre de dominio de Internet está formada por una o varias partes, denominados etiquetas de nombre de dominio, separadas por separadores de etiqueta. Por ejemplo, el nombre de dominio "www.proseware.com" consta de las etiquetas, "www", "proseware" y "com", separados por puntos. Nombres de dominio estándar constan de caracteres designados en el intervalo de caracteres US-ASCII (o Latín básico), de U+10000 0021 a U + 007E. Para facilitar el uso de Internet de las referencias culturales que no utilizan el juego de caracteres US-ASCII, el dominio de internacionalización de nombres de las aplicaciones (IDNA) estándar adoptado en 2003 y admite la inclusión de caracteres Unicode fuera del intervalo de caracteres US-ASCII. Sin embargo, los servidores de nombres y resolución de nombres de dominio seguirán dependen de caracteres dentro del intervalo de caracteres US-ASCII.  
  
 El mecanismo IDNA utiliza Punycode para asignar un nombre de dominio internacionalizado que contiene caracteres Unicode fuera del intervalo de caracteres US-ASCII para el intervalo de caracteres US-ASCII admitido por el sistema de nombres de dominio. El mecanismo IDNA se usa para convertir sólo los nombres de dominio, no los datos que se transmiten a través de Internet.  
  
> [!IMPORTANT]
>  En el [!INCLUDE[net_v45](~/includes/net-v45-md.md)], la <xref:System.Globalization.IdnMapping> clase es compatible con distintas versiones del estándar IDNA, dependiendo del sistema operativo en uso:  
>   
>  -   Cuando se ejecuta en [!INCLUDE[win8](~/includes/win8-md.md)], es compatible con la versión 2008 del estándar IDNA descrito por [5891 RFC: nombres de dominio internacionalizados en las aplicaciones (IDNA): protocolo](http://go.microsoft.com/fwlink/?LinkId=231875).  
> -   Cuando se ejecutan en versiones anteriores del sistema operativo Windows, es compatible con la versión de 2003 del estándar descrito por [RFC 3490: internacionalización de nombres de dominio de las aplicaciones (IDNA)](http://go.microsoft.com/fwlink/?LinkId=158110).  
>   
>  Vea [Unicode Technical Standard Nº 46: procesamiento de compatibilidad de IDNA](http://go.microsoft.com/fwlink/?LinkId=232459) de las diferencias en cuanto a estas normas controlen determinados juegos de caracteres.  
  
 El <xref:System.Globalization.IdnMapping.GetAscii%2A?displayProperty=nameWithType> método normaliza un nombre de dominio, convierte el nombre normalizado en una representación formada por Unicode que se pueden mostrar caracteres en el rango de punto de código (0020 a 007E) US-ASCII y antepone un prefijo de la codificación (ACE) compatible con ASCII ("xn--") a cada etiqueta. El <xref:System.Globalization.IdnMapping.GetUnicode%2A?displayProperty=nameWithType> método restaura las etiquetas de nombre de dominio convertidas por la <xref:System.Globalization.IdnMapping.GetAscii%2A> método.  
  
 Si la cadena se convierta incluye el separador de etiqueta caracteres ideográfico (U + 3002), detención completa de ancho completo (U + FF0E) y punto ideográfico (U+FF61), el <xref:System.Globalization.IdnMapping.GetAscii%2A> método convierte en el separador de etiquetas (punto, 002E). El <xref:System.Globalization.IdnMapping.GetUnicode%2A> método, sin embargo, no restaura el carácter de separador de etiqueta original.  
  
   
  
## Examples  
 En el ejemplo siguiente se usa el <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29> internacionalizados de método para convertir una matriz de nombres de dominio a Punycode. El <xref:System.Globalization.IdnMapping.GetUnicode%2A> método convierte el nombre de dominio Punycode por el nombre de dominio original, pero reemplaza los separadores de etiqueta original con el separador de etiqueta estándar.  
  
 [!code-csharp[System.Globalization.IdnMapping.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.class/cs/conversion1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.class/vb/conversion1.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Todos los métodos públicos de <see cref="T:System.Globalization.IdnMapping" /> son seguras para subprocesos y se pueden usar simultáneamente desde varios subprocesos, siempre y cuando la <see cref="T:System.Globalization.IdnMapping" /> propiedades de la instancia no también se establecen al mismo tiempo.</threadsafe>
    <altmember cref="Overload:System.String.Normalize" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IdnMapping ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IdnMapping();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Globalization.IdnMapping" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Globalization.IdnMapping.AllowUnassigned%2A?displayProperty=nameWithType> y <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A?displayProperty=nameWithType> propiedades se inicializan en `false`. (U+002D) de caracteres de un pequeño subconjunto de caracteres de ASCII que no sean A-z, 0-9, el guión (-) y el carácter de punto (.) se permiten en los nombres de dominio, pero no están los puntos de código Unicode sin asignar.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowUnassigned">
      <MemberSignature Language="C#" Value="public bool AllowUnassigned { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUnassigned" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.IdnMapping.AllowUnassigned" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowUnassigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowUnassigned { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se utilizan puntos de código de Unicode sin asignar en operaciones realizadas por miembros del objeto <see cref="T:System.Globalization.IdnMapping" /> actual.</summary>
        <value>
          Es <see langword="true" /> si se utilizan puntos de código sin asignar en las operaciones; de lo contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un nombre de dominio registrado no puede contener puntos de código sin asignar. Por lo tanto, el valor predeterminado de la <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> propiedad es `false`. La especificación de IDNA permite que los puntos de código sin asignar únicamente en las consultas de coincidencia de cadenas (es decir, en la búsqueda de nombre de dominio). Para obtener más información sobre el uso de puntos de código sin asignar en nombres de dominio, consulte [RFC 3454, "Preparation of Internationalized Strings (stringprep)"](http://go.microsoft.com/fwlink/?LinkId=231873) y [RFC 5891, "Internacionalizados dominio nombres en las aplicaciones (IDNA): protocolo"](http://go.microsoft.com/fwlink/?LinkId=231875).  
  
> [!IMPORTANT]
>  Si el <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> propiedad es `false`, el comportamiento asociado a la propiedad depende del sistema operativo subyacente. En [!INCLUDE[win8](~/includes/win8-md.md)], la <xref:System.Globalization.IdnMapping> clase se ajusta a IDNA 2008, que se basa en el estándar Unicode 6.0. En versiones anteriores de Windows, la <xref:System.Globalization.IdnMapping> clase se basa en IDNA 2003, que se basa en Unicode 3.* x*. Algunos puntos de código que estaban sin asignar en 2003 IDNA se han asignado los caracteres y se admiten en IDNA 2008. Por ejemplo, U + 0221 se introdujo en Unicode 4.0. En [!INCLUDE[win8](~/includes/win8-md.md)], éste se codifica como "xn: 6la". En versiones anteriores de Windows, produce un <xref:System.ArgumentException> excepción.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Objeto que se va a comparar con el objeto actual.</param>
        <summary>Indica si un objeto especificado y el objet <see cref="T:System.Globalization.IdnMapping" /> actual son iguales.</summary>
        <returns>
          Es <see langword="true" /> si el objeto que especifica <paramref name="obj" /> se deriva de <see cref="T:System.Globalization.IdnMapping" /> y sus propiedades <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> y <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> son iguales; de lo contrario, es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAscii">
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Codifica una cadena de etiquetas de nombre de dominio que incluyen caracteres Unicode fuera del intervalo de caracteres EE.UU.-ASCII en una cadena de caracteres Unicode que se pueden mostrar en el intervalo de caracteres EE.UU.-ASCII (U+0020 a U+007E). Se da formato a la cadena según el estándar de IDNA.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAscii">
      <MemberSignature Language="C#" Value="public string GetAscii (string unicode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAscii(string unicode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetAscii(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAscii (unicode As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAscii(System::String ^ unicode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unicode">Cadena para convertir, formada por una o más etiquetas de nombre de dominio delimitadas con separadores de etiqueta.</param>
        <summary>Codifica una cadena de etiquetas de nombre de dominio formadas por caracteres Unicode en una cadena de caracteres Unicode que pueden mostrarse en el intervalo de caracteres US-ASCII. Se da formato a la cadena según el estándar de IDNA.</summary>
        <returns>Equivalente de la cadena especificada por el parámetro <paramref name="unicode" /> formada por caracteres Unicode que se pueden mostrar en el intervalo de caracteres US-ASCII (U+0020 a U+007E) y con un formato según el estándar IDNA.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `unicode` parámetro especifica una cadena de uno o más etiquetas que se componen de caracteres Unicode válidos. Las etiquetas se separan mediante separadores de etiqueta. El `unicode` parámetro no puede empezar con un separador de etiqueta, pero puede incluir y, opcionalmente, finalizar con un separador. Los separadores de etiqueta son punto (punto, 002E), ideográfico DETENGA (U + 3002), detención completa de ancho completo (U + FF0E) y punto ideográfico (U+FF61). Por ejemplo, el nombre de dominio "www.adatum.com" consta de las etiquetas, "www", "adatum" y "com", separados por puntos.  
  
 Una etiqueta no puede contener ninguno de los siguientes caracteres:  
  
-   Caracteres de control Unicode entre U+0000 y 0001 a través de U+10000 001F y 007F U +.  
  
-   Sin asignar caracteres Unicode, si el valor de la <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> propiedad es `false`.  
  
-   Intervalo, como el espacio de caracteres de caracteres no estándar en US-ASCII (u+0020), signo de exclamación marcar (U + 0021), y bajos con caracteres de línea (005F), si el valor de la <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> propiedad es `true`.  
  
-   Caracteres que están prohibidos por una versión concreta del estándar IDNA. Para obtener más información acerca de los caracteres prohibidos, consulte [RFC 3454: preparación de internacionalizados las cadenas ("stringprep")](http://go.microsoft.com/fwlink/?LinkId=231873) para IDNA 2003, y [RFC 5982: los puntos de código Unicode y nombres de dominio internacionalizados para aplicaciones](http://go.microsoft.com/fwlink/?LinkId=231877) para IDNA 2008.  
  
 El <xref:System.Globalization.IdnMapping.GetAscii%2A> método convierte todos los separadores de etiqueta en detención completa (002E período,).  
  
 Si `unicode` no contiene ningún carácter fuera US-ASCII están prohibidos intervalo de caracteres y no hay caracteres dentro del intervalo de caracteres US-ASCII, el método devuelve `unicode` sin cambios.  
  
   
  
## Examples  
 En el ejemplo siguiente se usa el <xref:System.Globalization.IdnMapping.GetAscii%28System.String%29> método para convertir una matriz de nombres de dominio internacionalizados en Punycode, que es un equivalente codificada que consta de caracteres en el intervalo de caracteres US-ASCII. El <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%29> método convierte el nombre de dominio Punycode en el nombre de dominio original, pero reemplaza los separadores de etiqueta original con el separador de etiqueta estándar.  
  
 [!code-csharp[System.Globalization.IdnMapping.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.class/cs/conversion1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.class/vb/conversion1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="unicode" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="unicode" /> no es válido debido a las propiedades <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> y <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" />, así como al estándar IDNA.</exception>
        <block subset="none" type="usage">
          <para>En el [!INCLUDE[net_v45](~/includes/net-v45-md.md)], la <see cref="T:System.Globalization.IdnMapping" /> clase es compatible con distintas versiones del estándar IDNA, dependiendo del sistema operativo en uso:  
  
-   Cuando se ejecuta en [!INCLUDE[win8](~/includes/win8-md.md)], es compatible con la versión 2008 del estándar IDNA descrito por [5891 RFC: nombres de dominio internacionalizados en las aplicaciones (IDNA): protocolo](http://go.microsoft.com/fwlink/?LinkId=231875).  
  
-   Cuando se ejecutan en versiones anteriores del sistema operativo Windows, es compatible con la versión de 2003 del estándar descrito por [RFC 3490: internacionalización de nombres de dominio de las aplicaciones (IDNA)](http://go.microsoft.com/fwlink/?LinkId=158110).  
  
 Vea [Unicode Technical Standard Nº 46: procesamiento de compatibilidad de IDNA](http://go.microsoft.com/fwlink/?LinkId=232459) de las diferencias en cuanto a estas normas controlen determinados juegos de caracteres.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetAscii">
      <MemberSignature Language="C#" Value="public string GetAscii (string unicode, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAscii(string unicode, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAscii (unicode As String, index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAscii(System::String ^ unicode, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unicode">Cadena para convertir, formada por una o más etiquetas de nombre de dominio delimitadas con separadores de etiqueta.</param>
        <param name="index">Desplazamiento de base cero en <c>Unicode</c> que especifica el principio de la subcadena que se va a convertir. La operación de conversión continúa hasta el final de la cadena <c>Unicode</c>.</param>
        <summary>Codifica una subcadena de las etiquetas de nombre de dominio que incluyen caracteres Unicode fuera del intervalo de caracteres EE.UU.-ASCII. La subcadena se convierte en una cadena de caracteres Unicode mostrables en el intervalo de caracteres EE.UU.-ASCII y que tienen el formato según el estándar de IDNA.</summary>
        <returns>El equivalente de la subcadena especificada por los parámetros <paramref name="unicode" /> y <paramref name="index" /> formada por caracteres Unicode que se pueden mostrar en el intervalo de caracteres US-ASCII (U+0020 a U+007E) y con un formato según el estándar IDNA.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `unicode` y `index` parámetros definen una subcadena con una o varias etiquetas que se componen de caracteres Unicode válidos. Las etiquetas se separan mediante separadores de etiqueta. El primer carácter de la subcadena no puede empezar con un separador de etiqueta, pero puede incluir y, opcionalmente, finalizar con un separador. Los separadores de etiqueta son punto (punto, 002E), ideográfico DETENGA (U + 3002), detención completa de ancho completo (U + FF0E) y punto ideográfico (U+FF61). Por ejemplo, el nombre de dominio "www.adatum.com" consta de las etiquetas, "www", "adatum" y "com", separados por puntos.  
  
 Una etiqueta no puede contener ninguno de los siguientes caracteres:  
  
-   Caracteres de control Unicode entre U+0000 y 0001 a través de U+10000 001F y 007F U +.  
  
-   Sin asignar caracteres Unicode, dependiendo del valor de la <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> propiedad.  
  
-   Intervalo, como el espacio de caracteres de caracteres no estándar en US-ASCII (u+0020), signo de exclamación marcar (U + 0021) y caracteres de línea de baja (005F), dependiendo del valor de la <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> propiedad.  
  
-   Caracteres que están prohibidos por una versión concreta del estándar IDNA. Para obtener más información acerca de los caracteres prohibidos, consulte [RFC 3454: preparación de internacionalizados las cadenas ("stringprep")](http://go.microsoft.com/fwlink/?LinkId=231873) para IDNA 2003, y [RFC 5982: los puntos de código Unicode y nombres de dominio internacionalizados para aplicaciones](http://go.microsoft.com/fwlink/?LinkId=231877) para IDNA 2008.  
  
 El <xref:System.Globalization.IdnMapping.GetAscii%2A> método convierte todos los separadores de etiqueta en detención completa (002E período,).  
  
 Si `unicode` no contiene ningún carácter fuera US-ASCII están prohibidos intervalo de caracteres y no hay caracteres dentro del intervalo de caracteres US-ASCII, el método devuelve `unicode` sin cambios.  
  
   
  
## Examples  
 En el ejemplo siguiente se quita la parte local y el carácter desde una dirección de correo electrónico y pasa @ nombre el dominio resultante para la <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%29> método para crear un nombre de dominio Punycode, que es un equivalente codificado que consta de caracteres US-ASCII intervalo de caracteres. El <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> método convierte el nombre de dominio Punycode en el nombre de dominio original, pero reemplaza los separadores de etiqueta original con el separador de etiqueta estándar.  
  
 [!code-csharp[System.Globalization.IdnMapping.GetAscii#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/cs/conversion1a.cs#2)]
 [!code-vb[System.Globalization.IdnMapping.GetAscii#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/vb/conversion1a.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="unicode" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> es menor que cero.  
  
 O bien  
  
 <paramref name="index" /> es mayor que la longitud de <paramref name="unicode" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="unicode" /> no es válido debido a las propiedades <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> y <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" />, así como al estándar IDNA.</exception>
        <block subset="none" type="usage">
          <para>En el [!INCLUDE[net_v45](~/includes/net-v45-md.md)], la <see cref="T:System.Globalization.IdnMapping" /> clase es compatible con distintas versiones del estándar IDNA, dependiendo del sistema operativo en uso:  
  
-   Cuando se ejecuta en [!INCLUDE[win8](~/includes/win8-md.md)], es compatible con la versión 2008 del estándar IDNA descrito por [5891 RFC: nombres de dominio internacionalizados en las aplicaciones (IDNA): protocolo](http://go.microsoft.com/fwlink/?LinkId=231875).  
  
-   Cuando se ejecutan en versiones anteriores del sistema operativo Windows, es compatible con la versión de 2003 del estándar descrito por [RFC 3490: internacionalización de nombres de dominio de las aplicaciones (IDNA)](http://go.microsoft.com/fwlink/?LinkId=158110).  
  
 Vea [Unicode Technical Standard Nº 46: procesamiento de compatibilidad de IDNA](http://go.microsoft.com/fwlink/?LinkId=232459) de las diferencias en cuanto a estas normas controlen determinados juegos de caracteres.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetAscii">
      <MemberSignature Language="C#" Value="public string GetAscii (string unicode, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAscii(string unicode, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAscii (unicode As String, index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAscii(System::String ^ unicode, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unicode">Cadena para convertir, formada por una o más etiquetas de nombre de dominio delimitadas con separadores de etiqueta.</param>
        <param name="index">Desplazamiento de base cero en <c>Unicode</c> que especifica el principio de la subcadena.</param>
        <param name="count">Número de caracteres que se van a convertir en la subcadena que empieza en la posición especificada por <c>index</c> en la cadena <c>unicode</c>.</param>
        <summary>Codifica el número especificado de caracteres en una subcadena de etiquetas de nombre de dominio que incluyen caracteres Unicode fuera del intervalo de caracteres EE.UU.-ASCII. La subcadena se convierte en una cadena de caracteres Unicode mostrables en el intervalo de caracteres EE.UU.-ASCII y que tienen el formato según el estándar de IDNA.</summary>
        <returns>El equivalente de la subcadena especificada por los parámetros <paramref name="unicode" />, <paramref name="index" /> y <paramref name="count" />, formada por caracteres Unicode que se pueden mostrar en el intervalo de caracteres US-ASCII (U+0020 a U+007E) y con un formato según el estándar IDNA.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `Unicode`, `index`, y `count` parámetros definen una subcadena con una o varias etiquetas que se componen de caracteres Unicode válidos. Las etiquetas se separan mediante separadores de etiqueta. El primer carácter de la subcadena no puede empezar con un separador de etiqueta, pero puede incluir y, opcionalmente, finalizar con un separador. Los separadores de etiqueta son punto (punto, 002E), ideográfico DETENGA (U + 3002), detención completa de ancho completo (U + FF0E) y punto ideográfico (U+FF61). Por ejemplo, el nombre de dominio "www.adatum.com" consta de las etiquetas, "www", "adatum" y "com", separados por puntos.  
  
 Una etiqueta no puede contener ninguno de los siguientes caracteres:  
  
-   Caracteres de control Unicode entre U+0000 y 0001 a través de U+10000 001F y 007F U +.  
  
-   Sin asignar caracteres Unicode, dependiendo del valor de la <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> propiedad.  
  
-   Intervalo, como el espacio de caracteres de caracteres no estándar en US-ASCII (u+0020), signo de exclamación marcar (U + 0021) y caracteres de línea de baja (005F), dependiendo del valor de la <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> propiedad.  
  
-   Caracteres que están prohibidos por una versión concreta del estándar IDNA. Para obtener más información acerca de los caracteres prohibidos, consulte [RFC 3454: preparación de internacionalizados las cadenas ("stringprep")](http://go.microsoft.com/fwlink/?LinkId=231873) para IDNA 2003, y [RFC 5982: los puntos de código Unicode y nombres de dominio internacionalizados para aplicaciones](http://go.microsoft.com/fwlink/?LinkId=231877) para IDNA 2008.  
  
 El <xref:System.Globalization.IdnMapping.GetAscii%2A> método convierte todos los separadores de etiqueta en detención completa (002E período,). Si la subcadena no contiene ningún carácter fuera del intervalo de caracteres US-ASCII, y no tienen prohibido ningún carácter dentro del intervalo de caracteres US-ASCII, el método devuelve la subcadena sin cambios.  
  
   
  
## Examples  
 En el ejemplo siguiente se usa el <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29> método para convertir un nombre de dominio internacionalizados en un nombre de dominio que cumpla con el estándar IDNA. El <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> método convierte el nombre de dominio normalizado en el nombre de dominio original, pero reemplaza los separadores de etiqueta original con el separador de etiqueta estándar.  
  
 [!code-csharp[IdnMapping.GetX#1](~/samples/snippets/csharp/VS_Snippets_CLR/IdnMapping.GetX/CS/getx.cs#1)]
 [!code-vb[IdnMapping.GetX#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IdnMapping.GetX/VB/getx.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="unicode" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> o <paramref name="count" /> es menor que cero.  
  
 O bien  
  
 <paramref name="index" /> es mayor que la longitud de <paramref name="unicode" />.  
  
 O bien  
  
 <paramref name="index" /> es mayor que la longitud de <paramref name="unicode" /> menos <paramref name="count" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="unicode" /> no es válido debido a las propiedades <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> y <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" />, así como al estándar IDNA.</exception>
        <block subset="none" type="usage">
          <para>En el [!INCLUDE[net_v45](~/includes/net-v45-md.md)], la <see cref="T:System.Globalization.IdnMapping" /> clase es compatible con distintas versiones del estándar IDNA, dependiendo del sistema operativo en uso:  
  
-   Cuando se ejecuta en [!INCLUDE[win8](~/includes/win8-md.md)], es compatible con la versión 2008 del estándar IDNA descrito por [5891 RFC: nombres de dominio internacionalizados en las aplicaciones (IDNA): protocolo](http://go.microsoft.com/fwlink/?LinkId=231875).  
  
-   Cuando se ejecutan en versiones anteriores del sistema operativo Windows, es compatible con la versión de 2003 del estándar descrito por [RFC 3490: internacionalización de nombres de dominio de las aplicaciones (IDNA)](http://go.microsoft.com/fwlink/?LinkId=158110).  
  
 Vea [Unicode Technical Standard Nº 46: procesamiento de compatibilidad de IDNA](http://go.microsoft.com/fwlink/?LinkId=232459) de las diferencias en cuanto a estas normas controlen determinados juegos de caracteres.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve un código hash para este objeto <see cref="T:System.Globalization.IdnMapping" />.</summary>
        <returns>Una de las cuatro constantes con signo de 32 bits derivadas de las propiedades de un objeto <see cref="T:System.Globalization.IdnMapping" />.  El valor devuelto no tiene un significado especial y no es apropiado para utilizarlo en un algoritmo de código hash.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Invalidar el <xref:System.Globalization.IdnMapping.GetHashCode%2A> método si la aplicación necesita implementar un algoritmo de código hash significativo.  
  
   
  
## Examples  
 En el siguiente ejemplo se da por supuesto que una sola cadena puede contener varias direcciones de correo electrónico separadas por espacios. Quita la parte local y @ caracteres de cada dirección de correo electrónico y pasa el resultante nombre de dominio para la <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%29> o <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29> método para crear un nombre de dominio Punycode. El <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> método, a continuación, convierte el nombre de dominio Punycode en el nombre de dominio original.  
  
 [!code-csharp[System.Globalization.IdnMapping.GetAscii#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/cs/conversion1b.cs#3)]
 [!code-vb[System.Globalization.IdnMapping.GetAscii#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/vb/conversion1b.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUnicode">
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Descodifica una o varias etiquetas de nombre de dominio codificadas según el estándar de internacionalización de nombres de dominio en las aplicaciones (IDNA) como una cadena de caracteres Unicode.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUnicode">
      <MemberSignature Language="C#" Value="public string GetUnicode (string ascii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetUnicode(string ascii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetUnicode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUnicode (ascii As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetUnicode(System::String ^ ascii);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascii" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ascii">La cadena para descodificar, que consta de una o más etiquetas en el intervalo de caracteres EE.UU.-ASCII (U+0020 a U+007E) codificadas según el estándar de IDNA.</param>
        <summary>Descodifica una cadena de una o varias etiquetas de nombre de dominio codificadas según el estándar de internacionalización de nombres de dominio en las aplicaciones (IDNA) como una cadena de caracteres Unicode.</summary>
        <returns>El equivalente Unicode de la subcadena de IDNA especificada por el parámetro <paramref name="ascii" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información acerca de los nombres de dominio, etiquetas y separadores de etiqueta, vea la sección Comentarios para el <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> método.  
  
   
  
## Examples  
 En el ejemplo siguiente se usa el <xref:System.Globalization.IdnMapping.GetAscii%28System.String%29> internacionalizados de método para convertir una matriz de nombres de dominio a Punycode. El <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%29> método convierte el nombre de dominio Punycode en el nombre de dominio original, pero reemplaza los separadores de etiqueta original con el separador de etiqueta estándar.  
  
 [!code-csharp[System.Globalization.IdnMapping.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.class/cs/conversion1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.class/vb/conversion1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ascii" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="ascii" /> no es válido debido a las propiedades <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> y <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" />, así como al estándar IDNA.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnicode">
      <MemberSignature Language="C#" Value="public string GetUnicode (string ascii, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetUnicode(string ascii, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUnicode (ascii As String, index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetUnicode(System::String ^ ascii, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascii" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ascii">La cadena para descodificar, que consta de una o más etiquetas en el intervalo de caracteres EE.UU.-ASCII (U+0020 a U+007E) codificadas según el estándar de IDNA.</param>
        <param name="index">Desplazamiento de base cero en <c>ascii</c> que especifica el principio de la subcadena que se va a descodificar. La operación de descodificación continúa hasta el final de la cadena <c>ascii</c>.</param>
        <summary>Descodifica una subcadena de una o varias etiquetas de nombre de dominio codificadas según el estándar de internacionalización de nombres de dominio en las aplicaciones (IDNA) como una cadena de caracteres Unicode.</summary>
        <returns>El equivalente Unicode de la subcadena IDNA especificada por los parámetros <paramref name="ascii" /> e <paramref name="index" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información acerca de los nombres de dominio, etiquetas y separadores de etiqueta, vea la sección Comentarios para el <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ascii" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> es menor que cero.  
  
 O bien  
  
 <paramref name="index" /> es mayor que la longitud de <paramref name="ascii" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="ascii" /> no es válido debido a las propiedades <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> y <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" />, así como al estándar IDNA.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnicode">
      <MemberSignature Language="C#" Value="public string GetUnicode (string ascii, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetUnicode(string ascii, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUnicode (ascii As String, index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetUnicode(System::String ^ ascii, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascii" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ascii">La cadena para descodificar, que consta de una o más etiquetas en el intervalo de caracteres EE.UU.-ASCII (U+0020 a U+007E) codificadas según el estándar de IDNA.</param>
        <param name="index">Desplazamiento de base cero en <c>ascii</c> que especifica el principio de la subcadena.</param>
        <param name="count">Número de caracteres que se van a convertir en la subcadena que empieza en la posición especificada por <c>index</c> en la cadena <c>ascii</c>.</param>
        <summary>Descodifica una subcadena de una longitud especificada que contiene una o varias etiquetas de nombre de dominio codificadas según el estándar IDNA como una cadena de caracteres Unicode.</summary>
        <returns>El equivalente Unicode de la subcadena IDNA especificada por los parámetros <paramref name="ascii" />, <paramref name="index" /> y <paramref name="count" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información acerca de los nombres de dominio, etiquetas y separadores de etiqueta, vea la sección Comentarios para el <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ascii" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> o <paramref name="count" /> es menor que cero.  
  
 O bien  
  
 <paramref name="index" /> es mayor que la longitud de <paramref name="ascii" />.  
  
 O bien  
  
 <paramref name="index" /> es mayor que la longitud de <paramref name="ascii" /> menos <paramref name="count" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="ascii" /> no es válido debido a las propiedades <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> y <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" />, así como al estándar IDNA.</exception>
      </Docs>
    </Member>
    <Member MemberName="UseStd3AsciiRules">
      <MemberSignature Language="C#" Value="public bool UseStd3AsciiRules { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseStd3AsciiRules" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.IdnMapping.UseStd3AsciiRules" />
      <MemberSignature Language="VB.NET" Value="Public Property UseStd3AsciiRules As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseStd3AsciiRules { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se utilizan convenciones de nomenclatura relajada o no estándar en las operaciones realizadas por miembros del objeto <see cref="T:System.Globalization.IdnMapping" /> actual.</summary>
        <value>
          Es <see langword="true" /> si se usan convenciones de nomenclatura estándar en las operaciones; de lo contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nombres de dominio que siguen las reglas de nomenclatura estándares constan de un subconjunto específico de caracteres en el intervalo de caracteres US-ASCII. Los caracteres son las letras A Z, los dígitos 0 a 9, el carácter de guión (-) (u+002D) y el carácter de punto (.). El caso de los caracteres no es significativo. Convenciones de nomenclatura no estrictas permiten el uso de un intervalo más amplio de ASCII caracteres de caracteres, incluido el espacio (u+0020), el signo de exclamación (0021) de caracteres y el carácter de subrayado (005F) de caracteres. Si <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> es `true`, solamente caracteres estándar pueden aparecer en una etiqueta devuelta por la <xref:System.Globalization.IdnMapping.GetAscii%2A> método.  
  
 De forma predeterminada, el valor de la <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> propiedad es `false`, y no se permite un subconjunto de caracteres ASCII expandido en una etiqueta.  
  
> [!NOTE]
>  El <xref:System.Globalization.IdnMapping> clase prohíbe el uso de los caracteres propios u+0000 a través de U+10000 001F, y las etiquetas U + 007F en nombre de dominio, independientemente del valor de la <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> propiedad. Esta prohibición reduce el riesgo de ataques de seguridad como la suplantación de identidad de nombre.  
  
   
  
## Examples  
 En el ejemplo siguiente se genera direcciones URL que contienen caracteres en el intervalo ASCII de u+0000 a U + 007F y los pasa a la <xref:System.Globalization.IdnMapping.GetAscii%28System.String%29> método de dos <xref:System.Globalization.IdnMapping> objetos. Tiene un objeto de su <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> propiedad establecida en `true`, y el otro objeto tiene establecido en `false`. La salida muestra los caracteres que no son válidos cuando la <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> propiedad es `true` pero válida cuando sea `false`.  
  
 [!code-csharp[System.Globalization.IdnMapping.UseStd3AsciiRules#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.usestd3asciirules/cs/usestd3asciirules1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.UseStd3AsciiRules#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.usestd3asciirules/vb/usestd3asciirules1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>