<Type Name="Calendar" FullName="System.Globalization.Calendar">
  <TypeSignature Language="C#" Value="public abstract class Calendar : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Calendar extends System.Object implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.Calendar" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Calendar&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Calendar abstract : ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d1976-101">Representa el tiempo en divisiones, como semanas, meses y años.</span><span class="sxs-lookup"><span data-stu-id="d1976-101">Represents time in divisions, such as weeks, months, and years.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1976-102">Un calendario que divide el tiempo en unidades, como semanas, meses y años.</span><span class="sxs-lookup"><span data-stu-id="d1976-102">A calendar divides time into units, such as weeks, months, and years.</span></span> <span data-ttu-id="d1976-103">El número, la longitud y el inicio de las divisiones varían de un calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-103">The number, length, and start of the divisions vary in each calendar.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d1976-104">Para obtener información sobre el uso de las clases de calendario en .NET Framework, vea [trabajar con calendarios](~/docs/standard/datetime/working-with-calendars.md).</span><span class="sxs-lookup"><span data-stu-id="d1976-104">For information about using the calendar classes in the .NET Framework, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md).</span></span>  
  
 <span data-ttu-id="d1976-105">Cualquier momento en que se puede representar como un conjunto de valores numéricos mediante un calendario determinado.</span><span class="sxs-lookup"><span data-stu-id="d1976-105">Any moment in time can be represented as a set of numeric values using a particular calendar.</span></span> <span data-ttu-id="d1976-106">Por ejemplo, se ha producido un Equinoccio en (1999, 3, 20, 8, 46, 0, 0,0) en el calendario gregoriano, es decir, 20 de marzo de 1999 E.C.</span><span class="sxs-lookup"><span data-stu-id="d1976-106">For example, a vernal equinox occurred at (1999, 3, 20, 8, 46, 0, 0.0) in the Gregorian calendar, that is, March 20, 1999 C.E.</span></span> <span data-ttu-id="d1976-107">at 8:46:00:0.0.</span><span class="sxs-lookup"><span data-stu-id="d1976-107">at 8:46:00:0.0.</span></span> <span data-ttu-id="d1976-108">Una implementación de <xref:System.Globalization.Calendar> puede asignar cualquier fecha del intervalo de un calendario específico a un conjunto similar de valores numéricos, y <xref:System.DateTime> puede asignar estos conjuntos de valores numéricos a una representación de texto utilizando la información de <xref:System.Globalization.Calendar> y <xref:System.Globalization.DateTimeFormatInfo>.</span><span class="sxs-lookup"><span data-stu-id="d1976-108">An implementation of <xref:System.Globalization.Calendar> can map any date in the range of a specific calendar to a similar set of numeric values, and <xref:System.DateTime> can map such sets of numeric values to a textual representation using information from <xref:System.Globalization.Calendar> and <xref:System.Globalization.DateTimeFormatInfo>.</span></span> <span data-ttu-id="d1976-109">La representación de texto puede ser cuenta la referencia cultural, por ejemplo, "8:46 A.M. 20 de marzo de 1999 d." para la referencia cultural en-US, o la referencia cultural, por ejemplo, "1999-03-20T08:46:00" en formato ISO 8601.</span><span class="sxs-lookup"><span data-stu-id="d1976-109">The textual representation can be culture-sensitive, for example, "8:46 AM March 20th 1999 AD" for the en-US culture, or culture-insensitive, for example, "1999-03-20T08:46:00" in ISO 8601 format.</span></span>  
  
 <span data-ttu-id="d1976-110">Un <xref:System.Globalization.Calendar> implementación puede definir una o varias eras.</span><span class="sxs-lookup"><span data-stu-id="d1976-110">A <xref:System.Globalization.Calendar> implementation can define one or more eras.</span></span> <span data-ttu-id="d1976-111">El <xref:System.Globalization.Calendar> clase identifica las eras como enteros enumerados, donde la era actual (<xref:System.Globalization.Calendar.CurrentEra>) tiene el valor 0.</span><span class="sxs-lookup"><span data-stu-id="d1976-111">The <xref:System.Globalization.Calendar> class identifies the eras as enumerated integers, where the current era (<xref:System.Globalization.Calendar.CurrentEra>) has the value 0.</span></span>  
  
 <span data-ttu-id="d1976-112">Para compensar la diferencia entre el año natural y el tiempo real que la Tierra gira alrededor del sol o el tiempo real que la luna gira en torno a la tierra, un año bisiesto con un número diferente de días de un año de calendario estándar.</span><span class="sxs-lookup"><span data-stu-id="d1976-112">To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year.</span></span> <span data-ttu-id="d1976-113">Cada <xref:System.Globalization.Calendar> implementación define los años bisiestos de manera diferente.</span><span class="sxs-lookup"><span data-stu-id="d1976-113">Each <xref:System.Globalization.Calendar> implementation defines leap years differently.</span></span>  
  
 <span data-ttu-id="d1976-114">Para mantener la coherencia, la primera unidad de cada intervalo (el primer mes, por ejemplo) se asigna el valor 1.</span><span class="sxs-lookup"><span data-stu-id="d1976-114">For consistency, the first unit in each interval (the first month, for example) is assigned the value 1.</span></span>  
  
 <span data-ttu-id="d1976-115">El <xref:System.Globalization> espacio de nombres incluye las siguientes <xref:System.Globalization.Calendar> implementaciones:</span><span class="sxs-lookup"><span data-stu-id="d1976-115">The <xref:System.Globalization> namespace includes the following <xref:System.Globalization.Calendar> implementations:</span></span>  
  
-   <xref:System.Globalization.ChineseLunisolarCalendar>  
  
-   <xref:System.Globalization.EastAsianLunisolarCalendar>  
  
-   <xref:System.Globalization.GregorianCalendar>  
  
-   <xref:System.Globalization.HebrewCalendar>  
  
-   <xref:System.Globalization.HijriCalendar>  
  
-   <xref:System.Globalization.JapaneseCalendar>  
  
-   <xref:System.Globalization.JapaneseLunisolarCalendar>  
  
-   <xref:System.Globalization.JulianCalendar>  
  
-   <xref:System.Globalization.KoreanCalendar>  
  
-   <xref:System.Globalization.KoreanLunisolarCalendar>  
  
-   <xref:System.Globalization.PersianCalendar>  
  
-   <xref:System.Globalization.TaiwanCalendar>  
  
-   <xref:System.Globalization.TaiwanLunisolarCalendar>  
  
-   <xref:System.Globalization.ThaiBuddhistCalendar>  
  
-   <xref:System.Globalization.UmAlQuraCalendar>  
  
   
  
## Examples  
 <span data-ttu-id="d1976-116">En el ejemplo de código siguiente se muestra los miembros de la <xref:System.Globalization.Calendar> clase.</span><span class="sxs-lookup"><span data-stu-id="d1976-116">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.DateTime" />
    <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
    <altmember cref="T:System.Globalization.ChineseLunisolarCalendar" />
    <altmember cref="T:System.Globalization.EastAsianLunisolarCalendar" />
    <altmember cref="T:System.Globalization.GregorianCalendar" />
    <altmember cref="T:System.Globalization.HebrewCalendar" />
    <altmember cref="T:System.Globalization.HijriCalendar" />
    <altmember cref="T:System.Globalization.JapaneseCalendar" />
    <altmember cref="T:System.Globalization.JapaneseLunisolarCalendar" />
    <altmember cref="T:System.Globalization.JulianCalendar" />
    <altmember cref="T:System.Globalization.KoreanCalendar" />
    <altmember cref="T:System.Globalization.KoreanLunisolarCalendar" />
    <altmember cref="T:System.Globalization.PersianCalendar" />
    <altmember cref="T:System.Globalization.TaiwanCalendar" />
    <altmember cref="T:System.Globalization.TaiwanLunisolarCalendar" />
    <altmember cref="T:System.Globalization.ThaiBuddhistCalendar" />
    <altmember cref="T:System.Globalization.UmAlQuraCalendar" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Calendar ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Calendar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d1976-117">Inicializa una nueva instancia de la clase <see cref="T:System.Globalization.Calendar" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-117">Initializes a new instance of the <see cref="T:System.Globalization.Calendar" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d1976-118">El ejemplo siguiente muestra los miembros de la <xref:System.Globalization.Calendar> clase.</span><span class="sxs-lookup"><span data-stu-id="d1976-118">The following example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="d1976-119">En el [!INCLUDE[net_portable](~/includes/net-portable-md.md)], <see cref="T:System.Globalization.Calendar" /> constructor de clase no está disponible, y las clases derivadas de <see cref="T:System.Globalization.Calendar" /> no son públicos.</span><span class="sxs-lookup"><span data-stu-id="d1976-119">In the [!INCLUDE[net_portable](~/includes/net-portable-md.md)], the <see cref="T:System.Globalization.Calendar" /> class constructor is unavailable, and classes derived from <see cref="T:System.Globalization.Calendar" /> are not public.</span></span> <span data-ttu-id="d1976-120">Si desea que un calendario de un tipo específico, como un objeto de calendario gregoriano, tiene que recuperar desde el <see cref="P:System.Globalization.CultureInfo.Calendar" /> o <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> propiedad, o desde el <see cref="P:System.Globalization.CultureInfo.OptionalCalendars" /> matriz de propiedades.</span><span class="sxs-lookup"><span data-stu-id="d1976-120">If you want a calendar of a specific type, such as a Gregorian calendar object, you have to retrieve it from the <see cref="P:System.Globalization.CultureInfo.Calendar" /> or <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> property, or from the <see cref="P:System.Globalization.CultureInfo.OptionalCalendars" /> property array.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AddDays">
      <MemberSignature Language="C#" Value="public virtual DateTime AddDays (DateTime time, int days);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddDays(valuetype System.DateTime time, int32 days) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddDays (time As DateTime, days As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime AddDays(DateTime time, int days);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="days" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="d1976-121"><see cref="T:System.DateTime" /> al que se van a agregar los días.</span><span class="sxs-lookup"><span data-stu-id="d1976-121">The <see cref="T:System.DateTime" /> to which to add days.</span></span></param>
        <param name="days"><span data-ttu-id="d1976-122">Número de días que se van a agregar.</span><span class="sxs-lookup"><span data-stu-id="d1976-122">The number of days to add.</span></span></param>
        <summary><span data-ttu-id="d1976-123">Devuelve un <see cref="T:System.DateTime" /> que consiste en el número especificado de días transcurridos desde el <see cref="T:System.DateTime" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="d1976-123">Returns a <see cref="T:System.DateTime" /> that is the specified number of days away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="d1976-124"><see cref="T:System.DateTime" /> resultante de agregar el número especificado de días al <see cref="T:System.DateTime" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="d1976-124">The <see cref="T:System.DateTime" /> that results from adding the specified number of days to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1976-125">El `days` valor se agrega a los especificados <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-125">The `days` value is added to the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="d1976-126">Si `days` es negativo, resultante <xref:System.DateTime> es anterior a la especificada <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-126">If `days` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="d1976-127">La parte del mes del resultante <xref:System.DateTime> se ve afectada si el día resultante está fuera del mes del elemento especificado <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-127">The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="d1976-128">La parte del año del resultante <xref:System.DateTime> se ve afectada si el mes resultante está fuera del año del elemento especificado <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-128">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="d1976-129">La parte del resultante <xref:System.DateTime> se ve afectada si el año resultante está fuera de la era del elemento especificado <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-129">The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="d1976-130">La parte de hora del día del resultante <xref:System.DateTime> es el mismo que el especificado <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-130">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="d1976-131">El <xref:System.DateTime.Kind%2A> propiedad de devuelto <xref:System.DateTime> valor siempre es igual a <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d1976-131">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d1976-132">Puede conservar la <xref:System.DateTime.Kind%2A> propiedad de la `time` parámetro mediante una llamada a la <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> método, tal como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="d1976-132">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AddMethods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="d1976-133">En el ejemplo de código siguiente se muestra los miembros de la <xref:System.Globalization.Calendar> clase.</span><span class="sxs-lookup"><span data-stu-id="d1976-133">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d1976-134">El valor de <see cref="T:System.DateTime" /> resultante se encuentra fuera del intervalo admitido por este calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-134">The resulting <see cref="T:System.DateTime" /> is outside the supported range of this calendar.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d1976-135"><paramref name="days" /> se encuentra fuera del intervalo admitido del valor devuelto de <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-135"><paramref name="days" /> is outside the supported range of the <see cref="T:System.DateTime" /> return value.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddHours">
      <MemberSignature Language="C#" Value="public virtual DateTime AddHours (DateTime time, int hours);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddHours(valuetype System.DateTime time, int32 hours) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddHours (time As DateTime, hours As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime AddHours(DateTime time, int hours);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="hours" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="d1976-136"><see cref="T:System.DateTime" /> al que se van a agregar las horas.</span><span class="sxs-lookup"><span data-stu-id="d1976-136">The <see cref="T:System.DateTime" /> to which to add hours.</span></span></param>
        <param name="hours"><span data-ttu-id="d1976-137">Número de horas que se van a agregar.</span><span class="sxs-lookup"><span data-stu-id="d1976-137">The number of hours to add.</span></span></param>
        <summary><span data-ttu-id="d1976-138">Devuelve un <see cref="T:System.DateTime" /> que consiste en el número especificado de horas transcurridas desde el <see cref="T:System.DateTime" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="d1976-138">Returns a <see cref="T:System.DateTime" /> that is the specified number of hours away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="d1976-139"><see cref="T:System.DateTime" /> resultante de agregar el número especificado de horas al <see cref="T:System.DateTime" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="d1976-139">The <see cref="T:System.DateTime" /> that results from adding the specified number of hours to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1976-140">El `hours` valor se agrega a los especificados <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-140">The `hours` value is added to the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="d1976-141">Si `hours` es negativo, resultante <xref:System.DateTime> es anterior a la especificada <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-141">If `hours` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="d1976-142">La parte del día del resultante <xref:System.DateTime> resulta afectada si la hora resultante está fuera del día del elemento especificado <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-142">The day part of the resulting <xref:System.DateTime> is affected if the resulting time is outside the day of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="d1976-143">La parte del mes del resultante <xref:System.DateTime> se ve afectada si el día resultante está fuera del mes del elemento especificado <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-143">The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="d1976-144">La parte del año del resultante <xref:System.DateTime> se ve afectada si el mes resultante está fuera del año del elemento especificado <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-144">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="d1976-145">La parte del resultante <xref:System.DateTime> se ve afectada si el año resultante está fuera de la era del elemento especificado <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-145">The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="d1976-146">El <xref:System.DateTime.Kind%2A> propiedad de devuelto <xref:System.DateTime> valor siempre es igual a <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d1976-146">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d1976-147">Puede conservar la <xref:System.DateTime.Kind%2A> propiedad de la `time` parámetro mediante una llamada a la <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> método, tal como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="d1976-147">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#2)]
 [!code-vb[System.Globalization.Calendar.AddMethods#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="d1976-148">En el ejemplo de código siguiente se muestra los miembros de la <xref:System.Globalization.Calendar> clase.</span><span class="sxs-lookup"><span data-stu-id="d1976-148">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d1976-149">El valor de <see cref="T:System.DateTime" /> resultante se encuentra fuera del intervalo admitido por este calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-149">The resulting <see cref="T:System.DateTime" /> is outside the supported range of this calendar.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d1976-150"><paramref name="hours" /> se encuentra fuera del intervalo admitido del valor devuelto de <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-150"><paramref name="hours" /> is outside the supported range of the <see cref="T:System.DateTime" /> return value.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddMilliseconds">
      <MemberSignature Language="C#" Value="public virtual DateTime AddMilliseconds (DateTime time, double milliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddMilliseconds(valuetype System.DateTime time, float64 milliseconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddMilliseconds (time As DateTime, milliseconds As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime AddMilliseconds(DateTime time, double milliseconds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="milliseconds" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="d1976-151">El valor <see cref="T:System.DateTime" /> al que se agregan los milisegundos.</span><span class="sxs-lookup"><span data-stu-id="d1976-151">The <see cref="T:System.DateTime" /> to add milliseconds to.</span></span></param>
        <param name="milliseconds"><span data-ttu-id="d1976-152">Número de milisegundos que se van a agregar.</span><span class="sxs-lookup"><span data-stu-id="d1976-152">The number of milliseconds to add.</span></span></param>
        <summary><span data-ttu-id="d1976-153">Devuelve un <see cref="T:System.DateTime" /> que consiste en el número especificado de milisegundos transcurridos desde el <see cref="T:System.DateTime" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="d1976-153">Returns a <see cref="T:System.DateTime" /> that is the specified number of milliseconds away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="d1976-154"><see cref="T:System.DateTime" /> resultante de agregar el número especificado de milisegundos al <see cref="T:System.DateTime" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="d1976-154">The <see cref="T:System.DateTime" /> that results from adding the specified number of milliseconds to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1976-155">El `milliseconds` valor se redondea al entero más próximo antes de agregarse a los especificados <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-155">The `milliseconds` value is rounded to the nearest integer before it is added to the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="d1976-156">Si `milliseconds` es negativo, resultante <xref:System.DateTime> es anterior a la especificada <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-156">If `milliseconds` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="d1976-157">La parte del día del resultante <xref:System.DateTime> resulta afectada si la hora resultante está fuera del día del elemento especificado <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-157">The day part of the resulting <xref:System.DateTime> is affected if the resulting time is outside the day of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="d1976-158">La parte del mes del resultante <xref:System.DateTime> se ve afectada si el día resultante está fuera del mes del elemento especificado <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-158">The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="d1976-159">La parte del año del resultante <xref:System.DateTime> se ve afectada si el mes resultante está fuera del año del elemento especificado <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-159">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="d1976-160">La parte del resultante <xref:System.DateTime> se ve afectada si el año resultante está fuera de la era del elemento especificado <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-160">The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="d1976-161">El <xref:System.DateTime.Kind%2A> propiedad de devuelto <xref:System.DateTime> valor siempre es igual a <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d1976-161">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d1976-162">Puede conservar la <xref:System.DateTime.Kind%2A> propiedad de la `time` parámetro mediante una llamada a la <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> método, tal como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="d1976-162">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#3)]
 [!code-vb[System.Globalization.Calendar.AddMethods#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="d1976-163">En el ejemplo de código siguiente se muestra los miembros de la <xref:System.Globalization.Calendar> clase.</span><span class="sxs-lookup"><span data-stu-id="d1976-163">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d1976-164">El valor de <see cref="T:System.DateTime" /> resultante se encuentra fuera del intervalo admitido por este calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-164">The resulting <see cref="T:System.DateTime" /> is outside the supported range of this calendar.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d1976-165"><paramref name="milliseconds" /> se encuentra fuera del intervalo admitido del valor devuelto de <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-165"><paramref name="milliseconds" /> is outside the supported range of the <see cref="T:System.DateTime" /> return value.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AddMinutes">
      <MemberSignature Language="C#" Value="public virtual DateTime AddMinutes (DateTime time, int minutes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddMinutes(valuetype System.DateTime time, int32 minutes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddMinutes (time As DateTime, minutes As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime AddMinutes(DateTime time, int minutes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="minutes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="d1976-166"><see cref="T:System.DateTime" /> al que se van a agregar los minutos.</span><span class="sxs-lookup"><span data-stu-id="d1976-166">The <see cref="T:System.DateTime" /> to which to add minutes.</span></span></param>
        <param name="minutes"><span data-ttu-id="d1976-167">Número de minutos que se van a agregar.</span><span class="sxs-lookup"><span data-stu-id="d1976-167">The number of minutes to add.</span></span></param>
        <summary><span data-ttu-id="d1976-168">Devuelve un <see cref="T:System.DateTime" /> que consiste en el número especificado de minutos transcurridos desde el <see cref="T:System.DateTime" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="d1976-168">Returns a <see cref="T:System.DateTime" /> that is the specified number of minutes away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="d1976-169"><see cref="T:System.DateTime" /> resultante de agregar el número especificado de minutos al <see cref="T:System.DateTime" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="d1976-169">The <see cref="T:System.DateTime" /> that results from adding the specified number of minutes to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1976-170">El `minutes` valor se agrega a los especificados <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-170">The `minutes` value is added to the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="d1976-171">Si `minutes` es negativo, resultante <xref:System.DateTime> es anterior a la especificada <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-171">If `minutes` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="d1976-172">La parte del día del resultante <xref:System.DateTime> resulta afectada si la hora resultante está fuera del día del elemento especificado <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-172">The day part of the resulting <xref:System.DateTime> is affected if the resulting time is outside the day of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="d1976-173">La parte del mes del resultante <xref:System.DateTime> se ve afectada si el día resultante está fuera del mes del elemento especificado <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-173">The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="d1976-174">La parte del año del resultante <xref:System.DateTime> se ve afectada si el mes resultante está fuera del año del elemento especificado <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-174">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="d1976-175">La parte del resultante <xref:System.DateTime> se ve afectada si el año resultante está fuera de la era del elemento especificado <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-175">The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="d1976-176">El <xref:System.DateTime.Kind%2A> propiedad de devuelto <xref:System.DateTime> valor siempre es igual a <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d1976-176">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d1976-177">Puede conservar la <xref:System.DateTime.Kind%2A> propiedad de la `time` parámetro mediante una llamada a la <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> método, tal como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="d1976-177">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#4)]
 [!code-vb[System.Globalization.Calendar.AddMethods#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#4)]  
  
   
  
## Examples  
 <span data-ttu-id="d1976-178">En el ejemplo de código siguiente se muestra los miembros de la <xref:System.Globalization.Calendar> clase.</span><span class="sxs-lookup"><span data-stu-id="d1976-178">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d1976-179">El valor de <see cref="T:System.DateTime" /> resultante se encuentra fuera del intervalo admitido por este calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-179">The resulting <see cref="T:System.DateTime" /> is outside the supported range of this calendar.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d1976-180"><paramref name="minutes" /> se encuentra fuera del intervalo admitido del valor devuelto de <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-180"><paramref name="minutes" /> is outside the supported range of the <see cref="T:System.DateTime" /> return value.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public abstract DateTime AddMonths (DateTime time, int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddMonths(valuetype System.DateTime time, int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddMonths (time As DateTime, months As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract DateTime AddMonths(DateTime time, int months);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="d1976-181"><see cref="T:System.DateTime" /> al que se van a agregar los meses.</span><span class="sxs-lookup"><span data-stu-id="d1976-181">The <see cref="T:System.DateTime" /> to which to add months.</span></span></param>
        <param name="months"><span data-ttu-id="d1976-182">Número de meses que se van a agregar.</span><span class="sxs-lookup"><span data-stu-id="d1976-182">The number of months to add.</span></span></param>
        <summary><span data-ttu-id="d1976-183">Cuando se invalida en una clase derivada, devuelve un <see cref="T:System.DateTime" /> que consiste en el número especificado de meses transcurridos desde el <see cref="T:System.DateTime" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="d1976-183">When overridden in a derived class, returns a <see cref="T:System.DateTime" /> that is the specified number of months away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="d1976-184"><see cref="T:System.DateTime" /> resultante de agregar el número especificado de meses al objeto <see cref="T:System.DateTime" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="d1976-184">The <see cref="T:System.DateTime" /> that results from adding the specified number of months to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1976-185">El `months` valor se agrega a los especificados <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-185">The `months` value is added to the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="d1976-186">Si `months` es negativo, resultante <xref:System.DateTime> es anterior a la especificada <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-186">If `months` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="d1976-187">La parte del día del resultante <xref:System.DateTime> se ve afectada si el día resultante no es un día válido del mes resultante del año resultante.</span><span class="sxs-lookup"><span data-stu-id="d1976-187">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="d1976-188">Se cambia al último día válido del mes resultante del año resultante.</span><span class="sxs-lookup"><span data-stu-id="d1976-188">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="d1976-189">La parte del año del resultante <xref:System.DateTime> se ve afectada si el mes resultante está fuera del año del elemento especificado <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-189">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="d1976-190">La parte del resultante <xref:System.DateTime> se ve afectada si el año resultante está fuera de la era del elemento especificado <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-190">The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="d1976-191">La parte de hora del día del resultante <xref:System.DateTime> es el mismo que el especificado <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-191">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="d1976-192">Por ejemplo, suponga que el calendario actual tiene 12 meses, donde el cuarto mes tiene 30 días y el décimo mes tiene 31 días.</span><span class="sxs-lookup"><span data-stu-id="d1976-192">For example, suppose that the current calendar has 12 months, where the fourth month has 30 days and the tenth month has 31 days.</span></span> <span data-ttu-id="d1976-193">Si el mes especificado es el décimo mes, el día especificado es el día 31 de dicho mes y el valor de la `months` parámetro es 6, el año resultante será uno más que el año especificado, el mes resultante será el cuarto mes y el día resultante es el día 30, que es el último día del mes resultante.</span><span class="sxs-lookup"><span data-stu-id="d1976-193">If the specified month is the tenth month, the specified day is the 31st day of that month, and the value of the `months` parameter is 6, the resulting year is one more than the specified year, the resulting month is the fourth month, and the resulting day is the 30th day, which is the last day of the resulting month.</span></span>  
  
 <span data-ttu-id="d1976-194">Si el valor de la `months` parámetro es negativo, resultante <xref:System.DateTime> es anterior a la especificada <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-194">If the value of the `months` parameter is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="d1976-195">El <xref:System.DateTime.Kind%2A> propiedad de devuelto <xref:System.DateTime> valor siempre es igual a <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d1976-195">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d1976-196">Puede conservar la <xref:System.DateTime.Kind%2A> propiedad de la `time` parámetro mediante una llamada a la <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> método, tal como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="d1976-196">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]
 [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]  
  
   
  
## Examples  
 <span data-ttu-id="d1976-197">En el ejemplo de código siguiente se muestra los miembros de la <xref:System.Globalization.Calendar> clase.</span><span class="sxs-lookup"><span data-stu-id="d1976-197">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d1976-198">El valor de <see cref="T:System.DateTime" /> resultante se encuentra fuera del intervalo admitido por este calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-198">The resulting <see cref="T:System.DateTime" /> is outside the supported range of this calendar.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d1976-199"><paramref name="months" /> se encuentra fuera del intervalo admitido del valor devuelto de <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-199"><paramref name="months" /> is outside the supported range of the <see cref="T:System.DateTime" /> return value.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddSeconds">
      <MemberSignature Language="C#" Value="public virtual DateTime AddSeconds (DateTime time, int seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddSeconds(valuetype System.DateTime time, int32 seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddSeconds (time As DateTime, seconds As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime AddSeconds(DateTime time, int seconds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="seconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="d1976-200"><see cref="T:System.DateTime" /> al que se van a agregar los segundos.</span><span class="sxs-lookup"><span data-stu-id="d1976-200">The <see cref="T:System.DateTime" /> to which to add seconds.</span></span></param>
        <param name="seconds"><span data-ttu-id="d1976-201">Número de segundos que se van a agregar.</span><span class="sxs-lookup"><span data-stu-id="d1976-201">The number of seconds to add.</span></span></param>
        <summary><span data-ttu-id="d1976-202">Devuelve un <see cref="T:System.DateTime" /> que consiste en el número especificado de segundos transcurridos desde el <see cref="T:System.DateTime" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="d1976-202">Returns a <see cref="T:System.DateTime" /> that is the specified number of seconds away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="d1976-203"><see cref="T:System.DateTime" /> resultante de agregar el número especificado de segundos al <see cref="T:System.DateTime" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="d1976-203">The <see cref="T:System.DateTime" /> that results from adding the specified number of seconds to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1976-204">El `seconds` valor se agrega a los especificados <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-204">The `seconds` value is added to the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="d1976-205">Si `seconds` es negativo, resultante <xref:System.DateTime> es anterior a la especificada <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-205">If `seconds` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="d1976-206">La parte del día del resultante <xref:System.DateTime> resulta afectada si la hora resultante está fuera del día del elemento especificado <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-206">The day part of the resulting <xref:System.DateTime> is affected if the resulting time is outside the day of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="d1976-207">La parte del mes del resultante <xref:System.DateTime> se ve afectada si el día resultante está fuera del mes del elemento especificado <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-207">The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="d1976-208">La parte del año del resultante <xref:System.DateTime> se ve afectada si el mes resultante está fuera del año del elemento especificado <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-208">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="d1976-209">La parte del resultante <xref:System.DateTime> se ve afectada si el año resultante está fuera de la era del elemento especificado <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-209">The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="d1976-210">El <xref:System.DateTime.Kind%2A> propiedad de devuelto <xref:System.DateTime> valor siempre es igual a <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d1976-210">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d1976-211">Puede conservar la <xref:System.DateTime.Kind%2A> propiedad de la `time` parámetro mediante una llamada a la <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> método, tal como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="d1976-211">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#6)]
 [!code-vb[System.Globalization.Calendar.AddMethods#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#6)]  
  
   
  
## Examples  
 <span data-ttu-id="d1976-212">En el ejemplo de código siguiente se muestra los miembros de la <xref:System.Globalization.Calendar> clase.</span><span class="sxs-lookup"><span data-stu-id="d1976-212">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d1976-213">El valor de <see cref="T:System.DateTime" /> resultante se encuentra fuera del intervalo admitido por este calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-213">The resulting <see cref="T:System.DateTime" /> is outside the supported range of this calendar.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d1976-214"><paramref name="seconds" /> se encuentra fuera del intervalo admitido del valor devuelto de <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-214"><paramref name="seconds" /> is outside the supported range of the <see cref="T:System.DateTime" /> return value.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddWeeks">
      <MemberSignature Language="C#" Value="public virtual DateTime AddWeeks (DateTime time, int weeks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddWeeks(valuetype System.DateTime time, int32 weeks) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddWeeks (time As DateTime, weeks As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime AddWeeks(DateTime time, int weeks);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="weeks" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="d1976-215"><see cref="T:System.DateTime" /> al que se van a agregar las semanas.</span><span class="sxs-lookup"><span data-stu-id="d1976-215">The <see cref="T:System.DateTime" /> to which to add weeks.</span></span></param>
        <param name="weeks"><span data-ttu-id="d1976-216">Número de semanas que se van a agregar.</span><span class="sxs-lookup"><span data-stu-id="d1976-216">The number of weeks to add.</span></span></param>
        <summary><span data-ttu-id="d1976-217">Devuelve un <see cref="T:System.DateTime" /> que consiste en el número especificado de semanas aparte del <see cref="T:System.DateTime" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="d1976-217">Returns a <see cref="T:System.DateTime" /> that is the specified number of weeks away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="d1976-218"><see cref="T:System.DateTime" /> resultante de agregar el número especificado de semanas al <see cref="T:System.DateTime" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="d1976-218">The <see cref="T:System.DateTime" /> that results from adding the specified number of weeks to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1976-219">El `weeks` valor se agrega a los especificados <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-219">The `weeks` value is added to the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="d1976-220">Si `weeks` es negativo, resultante <xref:System.DateTime> es anterior a la especificada <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-220">If `weeks` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="d1976-221">La parte del mes del resultante <xref:System.DateTime> se ve afectada si el día resultante está fuera del mes del elemento especificado <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-221">The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="d1976-222">La parte del año del resultante <xref:System.DateTime> se ve afectada si el mes resultante está fuera del año del elemento especificado <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-222">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="d1976-223">La parte del resultante <xref:System.DateTime> se ve afectada si el año resultante está fuera de la era del elemento especificado <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-223">The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="d1976-224">La parte de hora del día del resultante <xref:System.DateTime> es el mismo que el especificado <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-224">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="d1976-225">En todas las clases de .NET Framework que se deriva de la <xref:System.Globalization.Calendar> (clase), una semana se define como siete días.</span><span class="sxs-lookup"><span data-stu-id="d1976-225">In all .NET Framework classes derived from the <xref:System.Globalization.Calendar> class, a week is defined as seven days.</span></span>  
  
 <span data-ttu-id="d1976-226">El <xref:System.DateTime.Kind%2A> propiedad de devuelto <xref:System.DateTime> valor siempre es igual a <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d1976-226">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d1976-227">Puede conservar la <xref:System.DateTime.Kind%2A> propiedad de la `time` parámetro mediante una llamada a la <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> método, tal como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="d1976-227">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#7)]
 [!code-vb[System.Globalization.Calendar.AddMethods#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#7)]  
  
   
  
## Examples  
 <span data-ttu-id="d1976-228">En el ejemplo de código siguiente se muestra los miembros de la <xref:System.Globalization.Calendar> clase.</span><span class="sxs-lookup"><span data-stu-id="d1976-228">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d1976-229">El valor de <see cref="T:System.DateTime" /> resultante se encuentra fuera del intervalo admitido por este calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-229">The resulting <see cref="T:System.DateTime" /> is outside the supported range of this calendar.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d1976-230"><paramref name="weeks" /> se encuentra fuera del intervalo admitido del valor devuelto de <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-230"><paramref name="weeks" /> is outside the supported range of the <see cref="T:System.DateTime" /> return value.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public abstract DateTime AddYears (DateTime time, int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddYears(valuetype System.DateTime time, int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddYears (time As DateTime, years As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract DateTime AddYears(DateTime time, int years);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="d1976-231"><see cref="T:System.DateTime" /> al que se van a sumar los años.</span><span class="sxs-lookup"><span data-stu-id="d1976-231">The <see cref="T:System.DateTime" /> to which to add years.</span></span></param>
        <param name="years"><span data-ttu-id="d1976-232">Número de años que se van a agregar.</span><span class="sxs-lookup"><span data-stu-id="d1976-232">The number of years to add.</span></span></param>
        <summary><span data-ttu-id="d1976-233">Cuando se invalida en una clase derivada, devuelve un <see cref="T:System.DateTime" />, que es el número especificado de años transcurridos desde el <see cref="T:System.DateTime" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="d1976-233">When overridden in a derived class, returns a <see cref="T:System.DateTime" /> that is the specified number of years away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="d1976-234"><see cref="T:System.DateTime" /> resultante de agregar el número especificado de años al objeto <see cref="T:System.DateTime" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="d1976-234">The <see cref="T:System.DateTime" /> that results from adding the specified number of years to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1976-235">El `years` valor se agrega a los especificados <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-235">The `years` value is added to the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="d1976-236">Si `years` es negativo, resultante <xref:System.DateTime> es anterior a la especificada <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-236">If `years` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="d1976-237">La parte del día del resultante <xref:System.DateTime> se ve afectada si el día resultante no es un día válido del mes resultante del año resultante.</span><span class="sxs-lookup"><span data-stu-id="d1976-237">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="d1976-238">Se cambia al último día válido del mes resultante del año resultante.</span><span class="sxs-lookup"><span data-stu-id="d1976-238">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="d1976-239">La parte del mes del resultante <xref:System.DateTime> se ve afectada si el mes resultante no es un mes válido del año resultante.</span><span class="sxs-lookup"><span data-stu-id="d1976-239">The month part of the resulting <xref:System.DateTime> is affected if the resulting month is not a valid month in the resulting year.</span></span> <span data-ttu-id="d1976-240">Se cambia al último mes válido del año resultante.</span><span class="sxs-lookup"><span data-stu-id="d1976-240">It is changed to the last valid month in the resulting year.</span></span> <span data-ttu-id="d1976-241">La parte del resultante <xref:System.DateTime> se ve afectada si el año resultante está fuera de la era del elemento especificado <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-241">The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="d1976-242">La parte de hora del día del resultante <xref:System.DateTime> es el mismo que el especificado <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-242">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="d1976-243">Por ejemplo, en el calendario gregoriano, febrero tiene 28 días, excepto durante un año bisiesto cuando tiene 29 días.</span><span class="sxs-lookup"><span data-stu-id="d1976-243">For example, in the Gregorian calendar, February has 28 days, except during a leap year when it has 29 days.</span></span> <span data-ttu-id="d1976-244">Si la fecha especificada es el día 29 de febrero en un año bisiesto y el valor de `years` es 1, la fecha resultante es el día 28 de febrero del año siguiente.</span><span class="sxs-lookup"><span data-stu-id="d1976-244">If the specified date is the 29th day of February in a leap year and the value of `years` is 1, the resulting date is the 28th day of February in the following year.</span></span>  
  
 <span data-ttu-id="d1976-245">Si `years` es negativo, resultante <xref:System.DateTime> es anterior a la especificada <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="d1976-245">If `years` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="d1976-246">El <xref:System.DateTime.Kind%2A> propiedad de devuelto <xref:System.DateTime> valor siempre es igual a <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d1976-246">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d1976-247">Puede conservar la <xref:System.DateTime.Kind%2A> propiedad de la `time` parámetro mediante una llamada a la <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> método, tal como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="d1976-247">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]
 [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]  
  
   
  
## Examples  
 <span data-ttu-id="d1976-248">En el ejemplo de código siguiente se muestra los miembros de la <xref:System.Globalization.Calendar> clase.</span><span class="sxs-lookup"><span data-stu-id="d1976-248">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d1976-249">El valor de <see cref="T:System.DateTime" /> resultante se encuentra fuera del intervalo admitido por este calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-249">The resulting <see cref="T:System.DateTime" /> is outside the supported range of this calendar.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d1976-250"><paramref name="years" /> se encuentra fuera del intervalo admitido del valor devuelto de <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-250"><paramref name="years" /> is outside the supported range of the <see cref="T:System.DateTime" /> return value.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AlgorithmType">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.CalendarAlgorithmType AlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarAlgorithmType AlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.Calendar.AlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AlgorithmType As CalendarAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CalendarAlgorithmType AlgorithmType { System::Globalization::CalendarAlgorithmType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1976-251">Obtiene un valor que indica si el calendario actual está basado en el calendario solar, en el lunar o en una combinación de ambos.</span><span class="sxs-lookup"><span data-stu-id="d1976-251">Gets a value indicating whether the current calendar is solar-based, lunar-based, or a combination of both.</span></span></summary>
        <value><span data-ttu-id="d1976-252">Uno de los valores de <see cref="T:System.Globalization.CalendarAlgorithmType" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-252">One of the <see cref="T:System.Globalization.CalendarAlgorithmType" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d1976-253">En el ejemplo siguiente se utiliza la reflexión para crear instancias de cada <xref:System.Globalization.Calendar> tipo encontrados en .NET Framework y muestra el valor de su <xref:System.Globalization.Calendar.AlgorithmType%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="d1976-253">The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/cs/algorithmtype1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/vb/algorithmtype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d1976-254">Crea un objeto nuevo copiado del objeto <see cref="T:System.Globalization.Calendar" /> actual.</span><span class="sxs-lookup"><span data-stu-id="d1976-254">Creates a new object that is a copy of the current <see cref="T:System.Globalization.Calendar" /> object.</span></span></summary>
        <returns><span data-ttu-id="d1976-255">Una instancia nueva de <see cref="T:System.Object" /> que es el clon miembro a miembro del objeto <see cref="T:System.Globalization.Calendar" /> actual.</span><span class="sxs-lookup"><span data-stu-id="d1976-255">A new instance of <see cref="T:System.Object" /> that is the memberwise clone of the current <see cref="T:System.Globalization.Calendar" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1976-256">El nuevo clon miembro a miembro no es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="d1976-256">The new memberwise clone is not read-only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.MemberwiseClone" />
      </Docs>
    </Member>
    <Member MemberName="CurrentEra">
      <MemberSignature Language="C#" Value="public const int CurrentEra = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 CurrentEra = (0)" />
      <MemberSignature Language="DocId" Value="F:System.Globalization.Calendar.CurrentEra" />
      <MemberSignature Language="VB.NET" Value="Public Const CurrentEra As Integer  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: int CurrentEra = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="d1976-257">Representa la era actual del calendario actual.</span><span class="sxs-lookup"><span data-stu-id="d1976-257">Represents the current era of the current calendar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1976-258">El <xref:System.Globalization.Calendar.CurrentEra> campo representa el índice de la era actual en el <xref:System.Globalization.Calendar.Eras%2A> matriz.</span><span class="sxs-lookup"><span data-stu-id="d1976-258">The <xref:System.Globalization.Calendar.CurrentEra> field represents the index of the current era in the <xref:System.Globalization.Calendar.Eras%2A> array.</span></span> <span data-ttu-id="d1976-259">Dado que eras se organizan en orden cronológico inverso (de la era actual a eras anteriores), este campo es una constante que tiene un valor de 0.</span><span class="sxs-lookup"><span data-stu-id="d1976-259">Because eras are arranged in reverse chronological order (from the current era to earlier eras), this field is a constant that has a value of 0.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.Calendar.Eras" />
      </Docs>
    </Member>
    <Member MemberName="DaysInYearBeforeMinSupportedYear">
      <MemberSignature Language="C#" Value="protected virtual int DaysInYearBeforeMinSupportedYear { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DaysInYearBeforeMinSupportedYear" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.Calendar.DaysInYearBeforeMinSupportedYear" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DaysInYearBeforeMinSupportedYear As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int DaysInYearBeforeMinSupportedYear { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1976-260">Obtiene el número de días del año que precede al año especificado por la propiedad <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-260">Gets the number of days in the year that precedes the year that is specified by the <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> property.</span></span></summary>
        <value><span data-ttu-id="d1976-261">El número de días del año que precede al año especificado por <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-261">The number of days in the year that precedes the year specified by <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1976-262">Esta propiedad devuelve un valor constante de 365.</span><span class="sxs-lookup"><span data-stu-id="d1976-262">This property returns a constant value of 365.</span></span> <span data-ttu-id="d1976-263">Tenga en cuenta que el valor de propiedad puede reemplazarse por clases derivadas de la <xref:System.Globalization.Calendar> clase.</span><span class="sxs-lookup"><span data-stu-id="d1976-263">Note that the property value can be overridden by classes derived from the <xref:System.Globalization.Calendar> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eras">
      <MemberSignature Language="C#" Value="public abstract int[] Eras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] Eras" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.Calendar.Eras" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Eras As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property cli::array &lt;int&gt; ^ Eras { cli::array &lt;int&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1976-264">Cuando se invalida en una clase derivada, obtiene la lista de eras del calendario actual.</span><span class="sxs-lookup"><span data-stu-id="d1976-264">When overridden in a derived class, gets the list of eras in the current calendar.</span></span></summary>
        <value><span data-ttu-id="d1976-265">Matriz de enteros que representa las eras del calendario actual.</span><span class="sxs-lookup"><span data-stu-id="d1976-265">An array of integers that represents the eras in the current calendar.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1976-266">Las eras aparecen en orden cronológico inverso, con la era actual como el primer elemento de la matriz y la era más antigua como el último elemento de la matriz.</span><span class="sxs-lookup"><span data-stu-id="d1976-266">The eras are in reverse chronological order, with the current era as the first element of the array, and the oldest era as the last element of the array.</span></span> <span data-ttu-id="d1976-267">Por ejemplo, el valor de la era actual en <xref:System.Globalization.JapaneseCalendar> es 4, que es el primer elemento de la matriz.</span><span class="sxs-lookup"><span data-stu-id="d1976-267">For example, the value of the current era in <xref:System.Globalization.JapaneseCalendar> is 4, which is the first element of the array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1976-268">En el ejemplo de código siguiente se muestra los valores contenidos en <xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d1976-268">The following code example displays the values contained in <xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar.Eras#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.Eras/CPP/yslin_japanesecalendar_eras.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar.Eras#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.Eras/CS/yslin_japanesecalendar_eras.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar.Eras#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.Eras/VB/yslin_japanesecalendar_eras.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfMonth">
      <MemberSignature Language="C#" Value="public abstract int GetDayOfMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetDayOfMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDayOfMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetDayOfMonth(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="d1976-269">Objeto <see cref="T:System.DateTime" /> que se va a leer.</span><span class="sxs-lookup"><span data-stu-id="d1976-269">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="d1976-270">Cuando se invalida en una clase derivada, devuelve el día del mes del <see cref="T:System.DateTime" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="d1976-270">When overridden in a derived class, returns the day of the month in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="d1976-271">Un entero positivo que representa el día del mes del parámetro <paramref name="time" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-271">A positive integer that represents the day of the month in the <paramref name="time" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d1976-272">En el ejemplo de código siguiente se muestra los miembros de la <xref:System.Globalization.Calendar> clase.</span><span class="sxs-lookup"><span data-stu-id="d1976-272">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Day" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfWeek">
      <MemberSignature Language="C#" Value="public abstract DayOfWeek GetDayOfWeek (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDayOfWeek (time As DateTime) As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract DayOfWeek GetDayOfWeek(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="d1976-273">Objeto <see cref="T:System.DateTime" /> que se va a leer.</span><span class="sxs-lookup"><span data-stu-id="d1976-273">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="d1976-274">Cuando se invalida en una clase derivada, devuelve el día de la semana del <see cref="T:System.DateTime" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="d1976-274">When overridden in a derived class, returns the day of the week in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="d1976-275">Un valor de <see cref="T:System.DayOfWeek" /> que representa el día de la semana del parámetro <paramref name="time" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-275">A <see cref="T:System.DayOfWeek" /> value that represents the day of the week in the <paramref name="time" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1976-276">El <xref:System.DayOfWeek> valores son el domingo, el lunes, el martes, el miércoles, el jueves, el viernes y el sábado.</span><span class="sxs-lookup"><span data-stu-id="d1976-276">The <xref:System.DayOfWeek> values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, and Saturday.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1976-277">En el ejemplo de código siguiente se muestra los miembros de la <xref:System.Globalization.Calendar> clase.</span><span class="sxs-lookup"><span data-stu-id="d1976-277">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfWeek" />
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfYear">
      <MemberSignature Language="C#" Value="public abstract int GetDayOfYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetDayOfYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDayOfYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetDayOfYear(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="d1976-278">Objeto <see cref="T:System.DateTime" /> que se va a leer.</span><span class="sxs-lookup"><span data-stu-id="d1976-278">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="d1976-279">Cuando se invalida en una clase derivada, devuelve el día del año del <see cref="T:System.DateTime" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="d1976-279">When overridden in a derived class, returns the day of the year in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="d1976-280">Un entero positivo que representa el día del año del parámetro <paramref name="time" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-280">A positive integer that represents the day of the year in the <paramref name="time" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1976-281">El día del año se define como el número de días desde el primer día del año.</span><span class="sxs-lookup"><span data-stu-id="d1976-281">The day of the year is defined as the number of days from the first day of the year.</span></span> <span data-ttu-id="d1976-282">Por ejemplo, en <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDayOfYear%2A> para 1, se devuelve el 1 de enero y <xref:System.Globalization.Calendar.GetDayOfYear%2A> devuelve 31 de diciembre de 365 en un año normal o 366 en un año bisiesto.</span><span class="sxs-lookup"><span data-stu-id="d1976-282">For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDayOfYear%2A> for January 1 returns 1, and <xref:System.Globalization.Calendar.GetDayOfYear%2A> for December 31 returns 365 in a common year or 366 in a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1976-283">En el ejemplo de código siguiente se muestra los miembros de la <xref:System.Globalization.Calendar> clase.</span><span class="sxs-lookup"><span data-stu-id="d1976-283">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfYear" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDaysInMonth">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d1976-284">Cuando se invalida en una clase derivada, devuelve el número de días del mes especificado.</span><span class="sxs-lookup"><span data-stu-id="d1976-284">When overridden in a derived class, returns the number of days in the specified month.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public virtual int GetDaysInMonth (int year, int month);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetDaysInMonth(int32 year, int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDaysInMonth (year As Integer, month As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetDaysInMonth(int year, int month);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="d1976-285">Entero que representa el año.</span><span class="sxs-lookup"><span data-stu-id="d1976-285">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="d1976-286">Un entero positivo que representa el mes.</span><span class="sxs-lookup"><span data-stu-id="d1976-286">A positive integer that represents the month.</span></span></param>
        <summary><span data-ttu-id="d1976-287">Devuelve el número de días del mes y año especificados de la era actual.</span><span class="sxs-lookup"><span data-stu-id="d1976-287">Returns the number of days in the specified month and year of the current era.</span></span></summary>
        <returns><span data-ttu-id="d1976-288">Número de días del mes especificado del año especificado de la era actual.</span><span class="sxs-lookup"><span data-stu-id="d1976-288">The number of days in the specified month in the specified year in the current era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1976-289">Por ejemplo, en <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInMonth%2A> febrero devuelve 28 en un año normal o 29, en un año bisiesto.</span><span class="sxs-lookup"><span data-stu-id="d1976-289">For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInMonth%2A> for February returns 28 in a common year or 29 in a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1976-290">En el ejemplo de código siguiente se compara diferentes implementaciones de la <xref:System.Globalization.Calendar> clase.</span><span class="sxs-lookup"><span data-stu-id="d1976-290">The following code example compares different implementations of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]
 [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]
 [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d1976-291"><paramref name="year" /> está fuera del intervalo que admite el calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-291"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="d1976-292">O bien</span><span class="sxs-lookup"><span data-stu-id="d1976-292">-or-</span></span>  
  
 <span data-ttu-id="d1976-293"><paramref name="month" /> está fuera del intervalo que admite el calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-293"><paramref name="month" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInYear(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public abstract int GetDaysInMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetDaysInMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDaysInMonth (year As Integer, month As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetDaysInMonth(int year, int month, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="d1976-294">Entero que representa el año.</span><span class="sxs-lookup"><span data-stu-id="d1976-294">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="d1976-295">Un entero positivo que representa el mes.</span><span class="sxs-lookup"><span data-stu-id="d1976-295">A positive integer that represents the month.</span></span></param>
        <param name="era"><span data-ttu-id="d1976-296">Entero que representa la era.</span><span class="sxs-lookup"><span data-stu-id="d1976-296">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="d1976-297">Cuando se invalida en una clase derivada, devuelve el número de días del mes, año y era especificados.</span><span class="sxs-lookup"><span data-stu-id="d1976-297">When overridden in a derived class, returns the number of days in the specified month, year, and era.</span></span></summary>
        <returns><span data-ttu-id="d1976-298">El número de días del mes especificado del año especificado de la era especificada.</span><span class="sxs-lookup"><span data-stu-id="d1976-298">The number of days in the specified month in the specified year in the specified era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1976-299">Por ejemplo, en <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInMonth%2A> febrero devuelve 28 en un año normal o 29, en un año bisiesto.</span><span class="sxs-lookup"><span data-stu-id="d1976-299">For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInMonth%2A> for February returns 28 in a common year or 29 in a leap year.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d1976-300"><paramref name="year" /> está fuera del intervalo que admite el calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-300"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="d1976-301">O bien</span><span class="sxs-lookup"><span data-stu-id="d1976-301">-or-</span></span>  
  
 <span data-ttu-id="d1976-302"><paramref name="month" /> está fuera del intervalo que admite el calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-302"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="d1976-303">O bien</span><span class="sxs-lookup"><span data-stu-id="d1976-303">-or-</span></span>  
  
 <span data-ttu-id="d1976-304"><paramref name="era" /> está fuera del intervalo que admite el calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-304"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="d1976-305">La clase derivada debe admitir <see cref="F:System.Globalization.Calendar.CurrentEra" /> cuando se pasa como el <paramref name="era" /> parámetro.</span><span class="sxs-lookup"><span data-stu-id="d1976-305">The derived class must support <see cref="F:System.Globalization.Calendar.CurrentEra" /> when it is passed as the <paramref name="era" /> parameter.</span></span> <span data-ttu-id="d1976-306">Una manera de admitir <see cref="F:System.Globalization.Calendar.CurrentEra" /> está reemplazando por el valor almacenado en <c>Eras [0]</c>, que es el valor de la era actual del calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-306">One way to support <see cref="F:System.Globalization.Calendar.CurrentEra" /> is by replacing it with the value stored in <c>Eras[0]</c>, which is the value for the current era of the calendar.</span></span></para>
        </block>
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInYear(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDaysInYear">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d1976-307">Cuando se invalida en una clase derivada, devuelve el número de días del año especificado.</span><span class="sxs-lookup"><span data-stu-id="d1976-307">When overridden in a derived class, returns the number of days in the specified year.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public virtual int GetDaysInYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetDaysInYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetDaysInYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDaysInYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetDaysInYear(int year);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="d1976-308">Entero que representa el año.</span><span class="sxs-lookup"><span data-stu-id="d1976-308">An integer that represents the year.</span></span></param>
        <summary><span data-ttu-id="d1976-309">Devuelve el número de días del año especificado de la era actual.</span><span class="sxs-lookup"><span data-stu-id="d1976-309">Returns the number of days in the specified year of the current era.</span></span></summary>
        <returns><span data-ttu-id="d1976-310">Número de días del año especificado de la era actual.</span><span class="sxs-lookup"><span data-stu-id="d1976-310">The number of days in the specified year in the current era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1976-311">Por ejemplo, en <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInYear%2A> devuelve 365 para un año normal o 366 para un año bisiesto.</span><span class="sxs-lookup"><span data-stu-id="d1976-311">For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInYear%2A> returns 365 for a common year or 366 for a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1976-312">En el ejemplo de código siguiente se compara diferentes implementaciones de la <xref:System.Globalization.Calendar> clase.</span><span class="sxs-lookup"><span data-stu-id="d1976-312">The following code example compares different implementations of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]
 [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]
 [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d1976-313"><paramref name="year" /> está fuera del intervalo que admite el calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-313"><paramref name="year" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public abstract int GetDaysInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetDaysInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetDaysInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDaysInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetDaysInYear(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="d1976-314">Entero que representa el año.</span><span class="sxs-lookup"><span data-stu-id="d1976-314">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="d1976-315">Entero que representa la era.</span><span class="sxs-lookup"><span data-stu-id="d1976-315">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="d1976-316">Cuando se invalida en una clase derivada, devuelve el número de días del año y era especificados.</span><span class="sxs-lookup"><span data-stu-id="d1976-316">When overridden in a derived class, returns the number of days in the specified year and era.</span></span></summary>
        <returns><span data-ttu-id="d1976-317">Número de días del año especificado de la era especificada.</span><span class="sxs-lookup"><span data-stu-id="d1976-317">The number of days in the specified year in the specified era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1976-318">Por ejemplo, en <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInYear%2A> devuelve 365 para un año normal o 366 para un año bisiesto.</span><span class="sxs-lookup"><span data-stu-id="d1976-318">For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInYear%2A> returns 365 for a common year or 366 for a leap year.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d1976-319"><paramref name="year" /> está fuera del intervalo que admite el calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-319"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="d1976-320">O bien</span><span class="sxs-lookup"><span data-stu-id="d1976-320">-or-</span></span>  
  
 <span data-ttu-id="d1976-321"><paramref name="era" /> está fuera del intervalo que admite el calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-321"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="d1976-322">La clase derivada debe admitir <see cref="F:System.Globalization.Calendar.CurrentEra" /> cuando se pasa como el <paramref name="era" /> parámetro.</span><span class="sxs-lookup"><span data-stu-id="d1976-322">The derived class must support <see cref="F:System.Globalization.Calendar.CurrentEra" /> when it is passed as the <paramref name="era" /> parameter.</span></span> <span data-ttu-id="d1976-323">Una manera de admitir <see cref="F:System.Globalization.Calendar.CurrentEra" /> está reemplazando por el valor almacenado en <c>Eras [0]</c>, que es el valor de la era actual del calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-323">One way to support <see cref="F:System.Globalization.Calendar.CurrentEra" /> is by replacing it with the value stored in <c>Eras[0]</c>, which is the value for the current era of the calendar.</span></span></para>
        </block>
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public abstract int GetEra (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetEra(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEra (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetEra(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="d1976-324">Objeto <see cref="T:System.DateTime" /> que se va a leer.</span><span class="sxs-lookup"><span data-stu-id="d1976-324">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="d1976-325">Cuando se invalida en una clase derivada, devuelve la era del <see cref="T:System.DateTime" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="d1976-325">When overridden in a derived class, returns the era in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="d1976-326">Entero que representa la era de <paramref name="time" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-326">An integer that represents the era in <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d1976-327">En el ejemplo de código siguiente se muestra los miembros de la <xref:System.Globalization.Calendar> clase.</span><span class="sxs-lookup"><span data-stu-id="d1976-327">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetHour">
      <MemberSignature Language="C#" Value="public virtual int GetHour (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHour(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHour (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHour(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="d1976-328">Objeto <see cref="T:System.DateTime" /> que se va a leer.</span><span class="sxs-lookup"><span data-stu-id="d1976-328">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="d1976-329">Devuelve el valor de las horas del <see cref="T:System.DateTime" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="d1976-329">Returns the hours value in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="d1976-330">Entero de 0 a 23 que representa la hora de <paramref name="time" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-330">An integer from 0 to 23 that represents the hour in <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d1976-331">En el ejemplo de código siguiente se muestra los miembros de la <xref:System.Globalization.Calendar> clase.</span><span class="sxs-lookup"><span data-stu-id="d1976-331">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Hour" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLeapMonth">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d1976-332">Calcula el mes bisiesto para un año especificado o un año y era especificados.</span><span class="sxs-lookup"><span data-stu-id="d1976-332">Calculates the leap month for a specified year, or year and era.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public virtual int GetLeapMonth (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetLeapMonth(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetLeapMonth(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLeapMonth (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetLeapMonth(int year);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="d1976-333">Un año.</span><span class="sxs-lookup"><span data-stu-id="d1976-333">A year.</span></span></param>
        <summary><span data-ttu-id="d1976-334">Calcula el mes bisiesto para un año especificado.</span><span class="sxs-lookup"><span data-stu-id="d1976-334">Calculates the leap month for a specified year.</span></span></summary>
        <returns><span data-ttu-id="d1976-335">Un entero positivo que indica el mes bisiesto del año especificado.</span><span class="sxs-lookup"><span data-stu-id="d1976-335">A positive integer that indicates the leap month in the specified year.</span></span>  
  
 <span data-ttu-id="d1976-336">O bien</span><span class="sxs-lookup"><span data-stu-id="d1976-336">-or-</span></span>  
  
 <span data-ttu-id="d1976-337">Cero si este calendario no admite meses bisiestos o si el parámetro <paramref name="year" /> no representa un año bisiesto.</span><span class="sxs-lookup"><span data-stu-id="d1976-337">Zero if this calendar does not support a leap month or if the <paramref name="year" /> parameter does not represent a leap year.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1976-338">En un calendario que admite la noción de mes bisiesto, el mes bisiesto puede aparecer después de un mes determinado o después de cualquier mes del año.</span><span class="sxs-lookup"><span data-stu-id="d1976-338">In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year.</span></span> <span data-ttu-id="d1976-339">Por ejemplo, el <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> método devuelve un número entre 1 y 13 que indica el mes asociado a una fecha especificada.</span><span class="sxs-lookup"><span data-stu-id="d1976-339">For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> method returns a number between 1 and 13 that indicates the month associated with a specified date.</span></span> <span data-ttu-id="d1976-340">Si hay un mes bisiesto entre los meses octavo y noveno del año, el <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> método devuelve 8 para el octavo mes, 9 para el octavo mes bisiesto y 10 para el noveno mes.</span><span class="sxs-lookup"><span data-stu-id="d1976-340">If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public virtual int GetLeapMonth (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetLeapMonth(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetLeapMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLeapMonth (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetLeapMonth(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="d1976-341">Un año.</span><span class="sxs-lookup"><span data-stu-id="d1976-341">A year.</span></span></param>
        <param name="era"><span data-ttu-id="d1976-342">Una era.</span><span class="sxs-lookup"><span data-stu-id="d1976-342">An era.</span></span></param>
        <summary><span data-ttu-id="d1976-343">Calcula el mes bisiesto para un año y era especificados.</span><span class="sxs-lookup"><span data-stu-id="d1976-343">Calculates the leap month for a specified year and era.</span></span></summary>
        <returns><span data-ttu-id="d1976-344">Un entero positivo que indica el mes bisiesto del año y era especificados.</span><span class="sxs-lookup"><span data-stu-id="d1976-344">A positive integer that indicates the leap month in the specified year and era.</span></span>  
  
 <span data-ttu-id="d1976-345">O bien</span><span class="sxs-lookup"><span data-stu-id="d1976-345">-or-</span></span>  
  
 <span data-ttu-id="d1976-346">Cero si este calendario no admite meses bisiestos o si los parámetros <paramref name="year" /> y <paramref name="era" /> no especifican un año bisiesto.</span><span class="sxs-lookup"><span data-stu-id="d1976-346">Zero if this calendar does not support a leap month or if the <paramref name="year" /> and <paramref name="era" /> parameters do not specify a leap year.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1976-347">En un calendario que admite la noción de mes bisiesto, el mes bisiesto puede aparecer después de un mes determinado o después de cualquier mes del año.</span><span class="sxs-lookup"><span data-stu-id="d1976-347">In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year.</span></span> <span data-ttu-id="d1976-348">Por ejemplo, el <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> método devuelve un número entre 1 y 13 que indica el mes asociado a una fecha especificada.</span><span class="sxs-lookup"><span data-stu-id="d1976-348">For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> method returns a number between 1 and 13 that indicates the month associated with a specified date.</span></span> <span data-ttu-id="d1976-349">Si hay un mes bisiesto entre los meses octavo y noveno del año, el <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> método devuelve 8 para el octavo mes, 9 para el octavo mes bisiesto y 10 para el noveno mes.</span><span class="sxs-lookup"><span data-stu-id="d1976-349">If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMilliseconds">
      <MemberSignature Language="C#" Value="public virtual double GetMilliseconds (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GetMilliseconds(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMilliseconds (time As DateTime) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual double GetMilliseconds(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="d1976-350">Objeto <see cref="T:System.DateTime" /> que se va a leer.</span><span class="sxs-lookup"><span data-stu-id="d1976-350">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="d1976-351">Devuelve el valor de los milisegundos del <see cref="T:System.DateTime" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="d1976-351">Returns the milliseconds value in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="d1976-352">Un número de punto flotante de precisión doble comprendido entre 0 y 999 que representa los milisegundos del parámetro <paramref name="time" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-352">A double-precision floating-point number from 0 to 999 that represents the milliseconds in the <paramref name="time" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d1976-353">En el ejemplo de código siguiente se muestra los miembros de la <xref:System.Globalization.Calendar> clase.</span><span class="sxs-lookup"><span data-stu-id="d1976-353">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Millisecond" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetMinute">
      <MemberSignature Language="C#" Value="public virtual int GetMinute (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMinute(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMinute (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetMinute(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="d1976-354">Objeto <see cref="T:System.DateTime" /> que se va a leer.</span><span class="sxs-lookup"><span data-stu-id="d1976-354">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="d1976-355">Devuelve el valor de los minutos del <see cref="T:System.DateTime" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="d1976-355">Returns the minutes value in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="d1976-356">Entero de 0 a 59 que representa los minutos de <paramref name="time" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-356">An integer from 0 to 59 that represents the minutes in <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d1976-357">En el ejemplo de código siguiente se muestra los miembros de la <xref:System.Globalization.Calendar> clase.</span><span class="sxs-lookup"><span data-stu-id="d1976-357">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Minute" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetMonth">
      <MemberSignature Language="C#" Value="public abstract int GetMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetMonth(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="d1976-358">Objeto <see cref="T:System.DateTime" /> que se va a leer.</span><span class="sxs-lookup"><span data-stu-id="d1976-358">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="d1976-359">Cuando se invalida en una clase derivada, devuelve el mes del <see cref="T:System.DateTime" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="d1976-359">When overridden in a derived class, returns the month in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="d1976-360">Un entero positivo que representa el mes de <paramref name="time" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-360">A positive integer that represents the month in <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1976-361">Por ejemplo, en <xref:System.Globalization.HebrewCalendar>, <xref:System.Globalization.Calendar.GetMonth%2A> tishrí devuelve 1, y <xref:System.Globalization.Calendar.GetMonth%2A> Elul devuelve 12 en un año normal o 13 en un año bisiesto.</span><span class="sxs-lookup"><span data-stu-id="d1976-361">For example, in <xref:System.Globalization.HebrewCalendar>, <xref:System.Globalization.Calendar.GetMonth%2A> for Tishrei returns 1, and <xref:System.Globalization.Calendar.GetMonth%2A> for Elul returns 12 in a common year or 13 in a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1976-362">En el ejemplo de código siguiente se muestra los miembros de la <xref:System.Globalization.Calendar> clase.</span><span class="sxs-lookup"><span data-stu-id="d1976-362">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Month" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMonthsInYear">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d1976-363">Cuando se invalida en una clase derivada, devuelve el número de meses del año especificado.</span><span class="sxs-lookup"><span data-stu-id="d1976-363">When overridden in a derived class, returns the number of months in the specified year.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public virtual int GetMonthsInYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMonthsInYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMonthsInYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetMonthsInYear(int year);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="d1976-364">Entero que representa el año.</span><span class="sxs-lookup"><span data-stu-id="d1976-364">An integer that represents the year.</span></span></param>
        <summary><span data-ttu-id="d1976-365">Devuelve el número de meses del año especificado de la era actual.</span><span class="sxs-lookup"><span data-stu-id="d1976-365">Returns the number of months in the specified year in the current era.</span></span></summary>
        <returns><span data-ttu-id="d1976-366">Número de meses del año especificado de la era actual.</span><span class="sxs-lookup"><span data-stu-id="d1976-366">The number of months in the specified year in the current era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1976-367">Por ejemplo, en <xref:System.Globalization.HebrewCalendar>, <xref:System.Globalization.Calendar.GetMonthsInYear%2A> devuelve 12 para un año normal o 13 para un año bisiesto.</span><span class="sxs-lookup"><span data-stu-id="d1976-367">For example, in <xref:System.Globalization.HebrewCalendar>, <xref:System.Globalization.Calendar.GetMonthsInYear%2A> returns 12 for a common year or 13 for a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1976-368">En el ejemplo de código siguiente se compara diferentes implementaciones de la <xref:System.Globalization.Calendar> clase.</span><span class="sxs-lookup"><span data-stu-id="d1976-368">The following code example compares different implementations of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]
 [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]
 [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d1976-369"><paramref name="year" /> está fuera del intervalo que admite el calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-369"><paramref name="year" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="M:System.Globalization.Calendar.GetDaysInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public abstract int GetMonthsInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMonthsInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetMonthsInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetMonthsInYear(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="d1976-370">Entero que representa el año.</span><span class="sxs-lookup"><span data-stu-id="d1976-370">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="d1976-371">Entero que representa la era.</span><span class="sxs-lookup"><span data-stu-id="d1976-371">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="d1976-372">Cuando se invalida en una clase derivada, devuelve el número de meses del año especificado de la era especificada.</span><span class="sxs-lookup"><span data-stu-id="d1976-372">When overridden in a derived class, returns the number of months in the specified year in the specified era.</span></span></summary>
        <returns><span data-ttu-id="d1976-373">Número de meses del año especificado de la era especificada.</span><span class="sxs-lookup"><span data-stu-id="d1976-373">The number of months in the specified year in the specified era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1976-374">Por ejemplo, en <xref:System.Globalization.HebrewCalendar>, <xref:System.Globalization.Calendar.GetMonthsInYear%2A> devuelve 12 para un año normal o 13 para un año bisiesto.</span><span class="sxs-lookup"><span data-stu-id="d1976-374">For example, in <xref:System.Globalization.HebrewCalendar>, <xref:System.Globalization.Calendar.GetMonthsInYear%2A> returns 12 for a common year or 13 for a leap year.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d1976-375"><paramref name="year" /> está fuera del intervalo que admite el calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-375"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="d1976-376">O bien</span><span class="sxs-lookup"><span data-stu-id="d1976-376">-or-</span></span>  
  
 <span data-ttu-id="d1976-377"><paramref name="era" /> está fuera del intervalo que admite el calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-377"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="d1976-378">La clase derivada debe admitir <see cref="F:System.Globalization.Calendar.CurrentEra" /> cuando se pasa como el <paramref name="era" /> parámetro.</span><span class="sxs-lookup"><span data-stu-id="d1976-378">The derived class must support <see cref="F:System.Globalization.Calendar.CurrentEra" /> when it is passed as the <paramref name="era" /> parameter.</span></span> <span data-ttu-id="d1976-379">Una manera de admitir <see cref="F:System.Globalization.Calendar.CurrentEra" /> está reemplazando por el valor almacenado en <c>Eras [0]</c>, que es el valor de la era actual del calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-379">One way to support <see cref="F:System.Globalization.Calendar.CurrentEra" /> is by replacing it with the value stored in <c>Eras[0]</c>, which is the value for the current era of the calendar.</span></span></para>
        </block>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetSecond">
      <MemberSignature Language="C#" Value="public virtual int GetSecond (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetSecond(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecond (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetSecond(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="d1976-380">Objeto <see cref="T:System.DateTime" /> que se va a leer.</span><span class="sxs-lookup"><span data-stu-id="d1976-380">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="d1976-381">Devuelve el valor de los segundos del <see cref="T:System.DateTime" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="d1976-381">Returns the seconds value in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="d1976-382">Entero de 0 a 59 que representa los segundos de <paramref name="time" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-382">An integer from 0 to 59 that represents the seconds in <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d1976-383">En el ejemplo de código siguiente se muestra los miembros de la <xref:System.Globalization.Calendar> clase.</span><span class="sxs-lookup"><span data-stu-id="d1976-383">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Second" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetWeekOfYear">
      <MemberSignature Language="C#" Value="public virtual int GetWeekOfYear (DateTime time, System.Globalization.CalendarWeekRule rule, DayOfWeek firstDayOfWeek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetWeekOfYear(valuetype System.DateTime time, valuetype System.Globalization.CalendarWeekRule rule, valuetype System.DayOfWeek firstDayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWeekOfYear (time As DateTime, rule As CalendarWeekRule, firstDayOfWeek As DayOfWeek) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetWeekOfYear(DateTime time, System::Globalization::CalendarWeekRule rule, DayOfWeek firstDayOfWeek);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="rule" Type="System.Globalization.CalendarWeekRule" />
        <Parameter Name="firstDayOfWeek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="d1976-384">Valor de fecha y hora.</span><span class="sxs-lookup"><span data-stu-id="d1976-384">A date and time value.</span></span></param>
        <param name="rule"><span data-ttu-id="d1976-385">Valor de enumeración que define una semana del calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-385">An enumeration value that defines a calendar week.</span></span></param>
        <param name="firstDayOfWeek"><span data-ttu-id="d1976-386">Valor de enumeración que representa el primer día de la semana.</span><span class="sxs-lookup"><span data-stu-id="d1976-386">An enumeration value that represents the first day of the week.</span></span></param>
        <summary><span data-ttu-id="d1976-387">Devuelve la semana del año que incluye la fecha en el valor <see cref="T:System.DateTime" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="d1976-387">Returns the week of the year that includes the date in the specified <see cref="T:System.DateTime" /> value.</span></span></summary>
        <returns><span data-ttu-id="d1976-388">Un entero positivo que representa la semana del año que incluye la fecha del parámetro <paramref name="time" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-388">A positive integer that represents the week of the year that includes the date in the <paramref name="time" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1976-389">Este método puede utilizarse para determinar el número de semanas del año estableciendo `time` y el último día del año.</span><span class="sxs-lookup"><span data-stu-id="d1976-389">This method can be used to determine the number of weeks in the year by setting `time` to the last day of the year.</span></span>  
  
 <span data-ttu-id="d1976-390">El <xref:System.Globalization.DateTimeFormatInfo> objeto para una determinada referencia cultural que utiliza el calendario indicado por la <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> propiedad incluye los siguientes valores específicos de la referencia cultural que se pueden usar para la `rule` y `firstDayOfWeek` parámetros:</span><span class="sxs-lookup"><span data-stu-id="d1976-390">The <xref:System.Globalization.DateTimeFormatInfo> object for a particular culture that uses the calendar indicated by the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> property includes the following culture-specific values that can be used for the `rule` and `firstDayOfWeek` parameters:</span></span>  
  
-   <span data-ttu-id="d1976-391">El <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A?displayProperty=nameWithType> propiedad contiene de forma predeterminada el primer día de la semana en que se puede utilizar para la `firstDayOfWeek` parámetro.</span><span class="sxs-lookup"><span data-stu-id="d1976-391">The <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A?displayProperty=nameWithType> property contains the default first day of the week that can be used for the `firstDayOfWeek` parameter.</span></span>  
  
-   <span data-ttu-id="d1976-392">El <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A?displayProperty=nameWithType> propiedad contiene la regla de semana del calendario predeterminado que se puede usar para la `rule` parámetro.</span><span class="sxs-lookup"><span data-stu-id="d1976-392">The <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A?displayProperty=nameWithType> property contains the default calendar week rule that can be used for the `rule` parameter.</span></span>  
  
 <span data-ttu-id="d1976-393">En el ejemplo siguiente se usa la referencia cultural actual <xref:System.Globalization.DateTimeFormatInfo> objeto para determinar que el 1 de enero de 2011 se encuentra en la primera semana del año en el calendario gregoriano.</span><span class="sxs-lookup"><span data-stu-id="d1976-393">The following example uses the current culture's <xref:System.Globalization.DateTimeFormatInfo> object to determine that January 1, 2011 is in the first week of the year in the Gregorian calendar.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.GetWeekOfYear#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CS/getweekofyearex1.cs#2)]
 [!code-vb[System.Globalization.Calendar.GetWeekOfYear#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/VB/getweekofyearex1.vb#2)]  
  
 <span data-ttu-id="d1976-394">Para algunos calendarios, una llamada a la <xref:System.Globalization.Calendar.GetWeekOfYear%2A> método produce una <xref:System.ArgumentOutOfRangeException> para combinaciones particulares de `rule` y `firstDayOfWeek` aunque se utilicen valores `time` es mayor que la fecha devuelta por dicho calendario <xref:System.Globalization.Calendar.MinSupportedDateTime%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="d1976-394">For some calendars, a call to the <xref:System.Globalization.Calendar.GetWeekOfYear%2A> method throws an <xref:System.ArgumentOutOfRangeException> for particular combinations of `rule` and `firstDayOfWeek` values even if `time` is greater than the date returned by that calendar's <xref:System.Globalization.Calendar.MinSupportedDateTime%2A> property.</span></span> <span data-ttu-id="d1976-395">En la tabla siguiente se enumera los calendarios afectados, específico del `rule` valores y el intervalo de la primera compatibles `time` valores.</span><span class="sxs-lookup"><span data-stu-id="d1976-395">The following table lists the affected calendars, the specific `rule` values, and the range of the earliest supported `time` values.</span></span> <span data-ttu-id="d1976-396">El mínimo específico <xref:System.DateTime> valor depende del valor de la `firstDayOfWeek` parámetro.</span><span class="sxs-lookup"><span data-stu-id="d1976-396">The specific minimum <xref:System.DateTime> value depends on the value of the `firstDayOfWeek` parameter.</span></span>  
  
|<span data-ttu-id="d1976-397">Calendario</span><span class="sxs-lookup"><span data-stu-id="d1976-397">Calendar</span></span>|<span data-ttu-id="d1976-398">Valor CalendarWeekRule</span><span class="sxs-lookup"><span data-stu-id="d1976-398">CalendarWeekRule value</span></span>|<span data-ttu-id="d1976-399">Fecha del calendario gregoriano (M/dd/aaaa)</span><span class="sxs-lookup"><span data-stu-id="d1976-399">Gregorian date (M/dd/yyyy)</span></span>|<span data-ttu-id="d1976-400">Fecha de calendario (M/dd/aaaa)</span><span class="sxs-lookup"><span data-stu-id="d1976-400">Date in calendar (M/dd/yyyy)</span></span>|  
|--------------|----------------------------|------------------------------------|--------------------------------------|  
|<xref:System.Globalization.ChineseLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|<span data-ttu-id="d1976-401">2/19/1901 a 2/25/1901</span><span class="sxs-lookup"><span data-stu-id="d1976-401">2/19/1901 to 2/25/1901</span></span>|<span data-ttu-id="d1976-402">1/1/1901 a 1/7/1901</span><span class="sxs-lookup"><span data-stu-id="d1976-402">1/1/1901 to 1/7/1901</span></span>|  
|<xref:System.Globalization.ChineseLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|<span data-ttu-id="d1976-403">2/19/1901 a 22/2/1901</span><span class="sxs-lookup"><span data-stu-id="d1976-403">2/19/1901 to 2/22/1901</span></span>|<span data-ttu-id="d1976-404">01/1/1901 a 04/1/1901</span><span class="sxs-lookup"><span data-stu-id="d1976-404">1/01/1901 to 1/04/1901</span></span>|  
|<xref:System.Globalization.HebrewCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstDay>|<span data-ttu-id="d1976-405">9/17/1583</span><span class="sxs-lookup"><span data-stu-id="d1976-405">9/17/1583</span></span>|<span data-ttu-id="d1976-406">1/01/5344</span><span class="sxs-lookup"><span data-stu-id="d1976-406">1/01/5344</span></span>|  
|<xref:System.Globalization.HebrewCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|<span data-ttu-id="d1976-407">9/17/1583 a 23/9/1583</span><span class="sxs-lookup"><span data-stu-id="d1976-407">9/17/1583 to 9/23/1583</span></span>|<span data-ttu-id="d1976-408">1/01/5344 a 1/07/5344</span><span class="sxs-lookup"><span data-stu-id="d1976-408">1/01/5344 to 1/07/5344</span></span>|  
|<xref:System.Globalization.HebrewCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|<span data-ttu-id="d1976-409">9/17/1583 a 9/20/1583</span><span class="sxs-lookup"><span data-stu-id="d1976-409">9/17/1583 to 9/20/1583</span></span>|<span data-ttu-id="d1976-410">1/01/5344 a 1/04/5344</span><span class="sxs-lookup"><span data-stu-id="d1976-410">1/01/5344 to 1/04/5344</span></span>|  
|<xref:System.Globalization.HijriCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|<span data-ttu-id="d1976-411">18/7/0622 a 7/24/0622</span><span class="sxs-lookup"><span data-stu-id="d1976-411">7/18/0622 to 7/24/0622</span></span>|<span data-ttu-id="d1976-412">01/1/0001 a 07/1/0001</span><span class="sxs-lookup"><span data-stu-id="d1976-412">1/01/0001 to 1/07/0001</span></span>|  
|<xref:System.Globalization.HijriCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|<span data-ttu-id="d1976-413">18/7/0622 a 7/21/0622</span><span class="sxs-lookup"><span data-stu-id="d1976-413">7/18/0622 to 7/21/0622</span></span>|<span data-ttu-id="d1976-414">01/1/0001 a 04/1/0001</span><span class="sxs-lookup"><span data-stu-id="d1976-414">1/01/0001 to 1/04/0001</span></span>|  
|<xref:System.Globalization.JapaneseLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|<span data-ttu-id="d1976-415">1/28/1960 a 2/03/1960</span><span class="sxs-lookup"><span data-stu-id="d1976-415">1/28/1960 to 2/03/1960</span></span>|<span data-ttu-id="d1976-416">1/01/35 a 1/07/0035</span><span class="sxs-lookup"><span data-stu-id="d1976-416">1/01/35 to 1/07/0035</span></span>|  
|<xref:System.Globalization.JapaneseLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|<span data-ttu-id="d1976-417">1/28/1960 a 1/31/1960</span><span class="sxs-lookup"><span data-stu-id="d1976-417">1/28/1960 to 1/31/1960</span></span>|<span data-ttu-id="d1976-418">1/01/0035 a 1/04/0035</span><span class="sxs-lookup"><span data-stu-id="d1976-418">1/01/0035 to 1/04/0035</span></span>|  
|<xref:System.Globalization.JulianCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|<span data-ttu-id="d1976-419">01/1/0001 a 05/1/0001</span><span class="sxs-lookup"><span data-stu-id="d1976-419">1/01/0001 to 1/05/0001</span></span>|<span data-ttu-id="d1976-420">03/1/0001 a 07/1/0001</span><span class="sxs-lookup"><span data-stu-id="d1976-420">1/03/0001 to 1/07/0001</span></span>|  
|<xref:System.Globalization.JulianCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|<span data-ttu-id="d1976-421">01/1/0001 a 02/1/0001</span><span class="sxs-lookup"><span data-stu-id="d1976-421">1/01/0001 to 1/02/0001</span></span>|<span data-ttu-id="d1976-422">03/1/0001 a 04/1/0001</span><span class="sxs-lookup"><span data-stu-id="d1976-422">1/03/0001 to 1/04/0001</span></span>|  
|<xref:System.Globalization.KoreanLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|<span data-ttu-id="d1976-423">2/14/0918 a 2/20/0918</span><span class="sxs-lookup"><span data-stu-id="d1976-423">2/14/0918 to 2/20/0918</span></span>|<span data-ttu-id="d1976-424">1/01/0918 a 1/07/0918</span><span class="sxs-lookup"><span data-stu-id="d1976-424">1/01/0918 to 1/07/0918</span></span>|  
|<xref:System.Globalization.KoreanLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|<span data-ttu-id="d1976-425">2/14/0918 a 2/17/0918</span><span class="sxs-lookup"><span data-stu-id="d1976-425">2/14/0918 to 2/17/0918</span></span>|<span data-ttu-id="d1976-426">1/01/0918 a 1/04/0918</span><span class="sxs-lookup"><span data-stu-id="d1976-426">1/01/0918 to 1/04/0918</span></span>|  
|<xref:System.Globalization.PersianCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|<span data-ttu-id="d1976-427">21/3/0622 a 3/27/0622</span><span class="sxs-lookup"><span data-stu-id="d1976-427">3/21/0622 to 3/27/0622</span></span>|<span data-ttu-id="d1976-428">01/1/0001 a 07/1/0001</span><span class="sxs-lookup"><span data-stu-id="d1976-428">1/01/0001 to 1/07/0001</span></span>|  
|<xref:System.Globalization.PersianCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|<span data-ttu-id="d1976-429">21/3/0622 a 3/24/0622</span><span class="sxs-lookup"><span data-stu-id="d1976-429">3/21/0622 to 3/24/0622</span></span>|<span data-ttu-id="d1976-430">01/1/0001 a 04/1/0001</span><span class="sxs-lookup"><span data-stu-id="d1976-430">1/01/0001 to 1/04/0001</span></span>|  
|<xref:System.Globalization.TaiwanLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|<span data-ttu-id="d1976-431">2/18/1912 al 24/2/1912</span><span class="sxs-lookup"><span data-stu-id="d1976-431">2/18/1912 to 2/24/1912</span></span>|<span data-ttu-id="d1976-432">01/1/0001 a 07/1/0001</span><span class="sxs-lookup"><span data-stu-id="d1976-432">1/01/0001 to 1/07/0001</span></span>|  
|<xref:System.Globalization.TaiwanLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|<span data-ttu-id="d1976-433">2/18/1912 al 21/2/1912</span><span class="sxs-lookup"><span data-stu-id="d1976-433">2/18/1912 to 2/21/1912</span></span>|<span data-ttu-id="d1976-434">01/1/0001 a 04/1/0001</span><span class="sxs-lookup"><span data-stu-id="d1976-434">1/01/0001 to 1/04/0001</span></span>|  
|<xref:System.Globalization.UmAlQuraCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|<span data-ttu-id="d1976-435">30/4/1900 a 5/06/1900</span><span class="sxs-lookup"><span data-stu-id="d1976-435">4/30/1900 to 5/06/1900</span></span>|<span data-ttu-id="d1976-436">1/01/1318 a 1/07/1318</span><span class="sxs-lookup"><span data-stu-id="d1976-436">1/01/1318 to 1/07/1318</span></span>|  
|<xref:System.Globalization.UmAlQuraCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|<span data-ttu-id="d1976-437">30/4/1900 a 5/03/1900</span><span class="sxs-lookup"><span data-stu-id="d1976-437">4/30/1900 to 5/03/1900</span></span>|<span data-ttu-id="d1976-438">1/01/1318 a 1/04/1318</span><span class="sxs-lookup"><span data-stu-id="d1976-438">1/01/1318 to 1/04/1318</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="d1976-439">El siguiente ejemplo de código muestra cómo el resultado de <xref:System.Globalization.Calendar.GetWeekOfYear%2A> varía en función de la <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> y <xref:System.Globalization.CalendarWeekRule> utiliza.</span><span class="sxs-lookup"><span data-stu-id="d1976-439">The following code example shows how the result of <xref:System.Globalization.Calendar.GetWeekOfYear%2A> varies depending on the <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> and the <xref:System.Globalization.CalendarWeekRule> used.</span></span> <span data-ttu-id="d1976-440">Si la fecha especificada es el último día del año, <xref:System.Globalization.Calendar.GetWeekOfYear%2A> devuelve el número total de semanas de ese año.</span><span class="sxs-lookup"><span data-stu-id="d1976-440">If the specified date is the last day of the year, <xref:System.Globalization.Calendar.GetWeekOfYear%2A> returns the total number of weeks in that year.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CPP/yslin_calendar_getweekofyear.cpp#1)]
 [!code-csharp[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CS/yslin_calendar_getweekofyear.cs#1)]
 [!code-vb[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/VB/yslin_calendar_getweekofyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d1976-441"><paramref name="time" /> es anterior que <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> o posterior que <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-441"><paramref name="time" /> is earlier than <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> or later than <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />.</span></span>  
  
 <span data-ttu-id="d1976-442">O bien</span><span class="sxs-lookup"><span data-stu-id="d1976-442">-or-</span></span>  
  
 <span data-ttu-id="d1976-443"><paramref name="firstDayOfWeek" /> no es un valor <see cref="T:System.DayOfWeek" /> válido.</span><span class="sxs-lookup"><span data-stu-id="d1976-443"><paramref name="firstDayOfWeek" /> is not a valid <see cref="T:System.DayOfWeek" /> value.</span></span>  
  
 <span data-ttu-id="d1976-444">O bien</span><span class="sxs-lookup"><span data-stu-id="d1976-444">-or-</span></span>  
  
 <span data-ttu-id="d1976-445"><paramref name="rule" /> no es un valor <see cref="T:System.Globalization.CalendarWeekRule" /> válido.</span><span class="sxs-lookup"><span data-stu-id="d1976-445"><paramref name="rule" /> is not a valid <see cref="T:System.Globalization.CalendarWeekRule" /> value.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.Globalization.CalendarWeekRule" />
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetYear">
      <MemberSignature Language="C#" Value="public abstract int GetYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetYear(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="d1976-446">Objeto <see cref="T:System.DateTime" /> que se va a leer.</span><span class="sxs-lookup"><span data-stu-id="d1976-446">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="d1976-447">Cuando se invalida en una clase derivada, devuelve el año del <see cref="T:System.DateTime" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="d1976-447">When overridden in a derived class, returns the year in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="d1976-448">Entero que representa el año de <paramref name="time" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-448">An integer that represents the year in <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d1976-449">En el ejemplo de código siguiente se muestra los miembros de la <xref:System.Globalization.Calendar> clase.</span><span class="sxs-lookup"><span data-stu-id="d1976-449">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Year" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLeapDay">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d1976-450">Cuando se invalida en una clase derivada, determina si una fecha es un día bisiesto.</span><span class="sxs-lookup"><span data-stu-id="d1976-450">When overridden in a derived class, determines whether a date is a leap day.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public virtual bool IsLeapDay (int year, int month, int day);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLeapDay(int32 year, int32 month, int32 day) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsLeapDay (year As Integer, month As Integer, day As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsLeapDay(int year, int month, int day);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="d1976-451">Entero que representa el año.</span><span class="sxs-lookup"><span data-stu-id="d1976-451">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="d1976-452">Un entero positivo que representa el mes.</span><span class="sxs-lookup"><span data-stu-id="d1976-452">A positive integer that represents the month.</span></span></param>
        <param name="day"><span data-ttu-id="d1976-453">Un entero positivo que representa el día.</span><span class="sxs-lookup"><span data-stu-id="d1976-453">A positive integer that represents the day.</span></span></param>
        <summary><span data-ttu-id="d1976-454">Determina si la fecha especificada de la era actual es un día bisiesto.</span><span class="sxs-lookup"><span data-stu-id="d1976-454">Determines whether the specified date in the current era is a leap day.</span></span></summary>
        <returns>
          <span data-ttu-id="d1976-455">Es <see langword="true" /> si el día especificado es un día bisiesto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-455"><see langword="true" /> if the specified day is a leap day; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1976-456">Para compensar la diferencia entre el año natural y el tiempo real que la Tierra gira alrededor del sol o el tiempo real que la luna gira en torno a la tierra, un año bisiesto con un número diferente de días de un año de calendario estándar.</span><span class="sxs-lookup"><span data-stu-id="d1976-456">To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year.</span></span> <span data-ttu-id="d1976-457">Cada <xref:System.Globalization.Calendar> implementación define los años bisiestos de manera diferente.</span><span class="sxs-lookup"><span data-stu-id="d1976-457">Each <xref:System.Globalization.Calendar> implementation defines leap years differently.</span></span>  
  
 <span data-ttu-id="d1976-458">Un día bisiesto es un día en que se produce únicamente en un año bisiesto.</span><span class="sxs-lookup"><span data-stu-id="d1976-458">A leap day is a day that occurs only in a leap year.</span></span> <span data-ttu-id="d1976-459">Por ejemplo, en el calendario gregoriano, el día 29 de febrero es el único día bisiesto.</span><span class="sxs-lookup"><span data-stu-id="d1976-459">For example, in the Gregorian calendar, the 29th day of February is the only leap day.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1976-460">En el ejemplo de código siguiente se compara diferentes implementaciones de la <xref:System.Globalization.Calendar> clase.</span><span class="sxs-lookup"><span data-stu-id="d1976-460">The following code example compares different implementations of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]
 [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]
 [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d1976-461"><paramref name="year" /> está fuera del intervalo que admite el calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-461"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="d1976-462">O bien</span><span class="sxs-lookup"><span data-stu-id="d1976-462">-or-</span></span>  
  
 <span data-ttu-id="d1976-463"><paramref name="month" /> está fuera del intervalo que admite el calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-463"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="d1976-464">O bien</span><span class="sxs-lookup"><span data-stu-id="d1976-464">-or-</span></span>  
  
 <span data-ttu-id="d1976-465"><paramref name="day" /> está fuera del intervalo que admite el calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-465"><paramref name="day" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public abstract bool IsLeapDay (int year, int month, int day, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLeapDay(int32 year, int32 month, int32 day, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsLeapDay (year As Integer, month As Integer, day As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsLeapDay(int year, int month, int day, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="d1976-466">Entero que representa el año.</span><span class="sxs-lookup"><span data-stu-id="d1976-466">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="d1976-467">Un entero positivo que representa el mes.</span><span class="sxs-lookup"><span data-stu-id="d1976-467">A positive integer that represents the month.</span></span></param>
        <param name="day"><span data-ttu-id="d1976-468">Un entero positivo que representa el día.</span><span class="sxs-lookup"><span data-stu-id="d1976-468">A positive integer that represents the day.</span></span></param>
        <param name="era"><span data-ttu-id="d1976-469">Entero que representa la era.</span><span class="sxs-lookup"><span data-stu-id="d1976-469">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="d1976-470">Cuando se invalida en una clase derivada, determina si la fecha especificada de la era especificada es un día bisiesto.</span><span class="sxs-lookup"><span data-stu-id="d1976-470">When overridden in a derived class, determines whether the specified date in the specified era is a leap day.</span></span></summary>
        <returns>
          <span data-ttu-id="d1976-471">Es <see langword="true" /> si el día especificado es un día bisiesto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-471"><see langword="true" /> if the specified day is a leap day; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1976-472">Para compensar la diferencia entre el año natural y el tiempo real que la Tierra gira alrededor del sol o el tiempo real que la luna gira en torno a la tierra, un año bisiesto con un número diferente de días de un año de calendario estándar.</span><span class="sxs-lookup"><span data-stu-id="d1976-472">To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year.</span></span> <span data-ttu-id="d1976-473">Cada <xref:System.Globalization.Calendar> implementación define los años bisiestos de manera diferente.</span><span class="sxs-lookup"><span data-stu-id="d1976-473">Each <xref:System.Globalization.Calendar> implementation defines leap years differently.</span></span>  
  
 <span data-ttu-id="d1976-474">Un día bisiesto es un día en que se produce únicamente en un año bisiesto.</span><span class="sxs-lookup"><span data-stu-id="d1976-474">A leap day is a day that occurs only in a leap year.</span></span> <span data-ttu-id="d1976-475">Por ejemplo, en el calendario gregoriano, el día 29 de febrero es el único día bisiesto.</span><span class="sxs-lookup"><span data-stu-id="d1976-475">For example, in the Gregorian calendar, the 29th day of February is the only leap day.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d1976-476"><paramref name="year" /> está fuera del intervalo que admite el calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-476"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="d1976-477">O bien</span><span class="sxs-lookup"><span data-stu-id="d1976-477">-or-</span></span>  
  
 <span data-ttu-id="d1976-478"><paramref name="month" /> está fuera del intervalo que admite el calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-478"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="d1976-479">O bien</span><span class="sxs-lookup"><span data-stu-id="d1976-479">-or-</span></span>  
  
 <span data-ttu-id="d1976-480"><paramref name="day" /> está fuera del intervalo que admite el calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-480"><paramref name="day" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="d1976-481">O bien</span><span class="sxs-lookup"><span data-stu-id="d1976-481">-or-</span></span>  
  
 <span data-ttu-id="d1976-482"><paramref name="era" /> está fuera del intervalo que admite el calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-482"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="d1976-483">La clase derivada debe admitir <see cref="F:System.Globalization.Calendar.CurrentEra" /> cuando se pasa como el <paramref name="era" /> parámetro.</span><span class="sxs-lookup"><span data-stu-id="d1976-483">The derived class must support <see cref="F:System.Globalization.Calendar.CurrentEra" /> when it is passed as the <paramref name="era" /> parameter.</span></span> <span data-ttu-id="d1976-484">Una manera de admitir <see cref="F:System.Globalization.Calendar.CurrentEra" /> está reemplazando por el valor almacenado en <c>Eras [0]</c>, que es el valor de la era actual del calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-484">One way to support <see cref="F:System.Globalization.Calendar.CurrentEra" /> is by replacing it with the value stored in <c>Eras[0]</c>, which is the value for the current era of the calendar.</span></span></para>
        </block>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLeapMonth">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d1976-485">Cuando se invalida en una clase derivada, determina si un mes es bisiesto.</span><span class="sxs-lookup"><span data-stu-id="d1976-485">When overridden in a derived class, determines whether a month is a leap month.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public virtual bool IsLeapMonth (int year, int month);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLeapMonth(int32 year, int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsLeapMonth (year As Integer, month As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsLeapMonth(int year, int month);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="d1976-486">Entero que representa el año.</span><span class="sxs-lookup"><span data-stu-id="d1976-486">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="d1976-487">Un entero positivo que representa el mes.</span><span class="sxs-lookup"><span data-stu-id="d1976-487">A positive integer that represents the month.</span></span></param>
        <summary><span data-ttu-id="d1976-488">Determina si el mes especificado del año especificado de la era actual es un mes bisiesto.</span><span class="sxs-lookup"><span data-stu-id="d1976-488">Determines whether the specified month in the specified year in the current era is a leap month.</span></span></summary>
        <returns>
          <span data-ttu-id="d1976-489"><see langword="true" /> si el mes especificado es un mes bisiesto; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-489"><see langword="true" /> if the specified month is a leap month; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1976-490">Para compensar la diferencia entre el año natural y el tiempo real que la Tierra gira alrededor del sol o el tiempo real que la luna gira en torno a la tierra, un año bisiesto con un número diferente de días de un año de calendario estándar.</span><span class="sxs-lookup"><span data-stu-id="d1976-490">To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year.</span></span> <span data-ttu-id="d1976-491">Cada <xref:System.Globalization.Calendar> implementación define los años bisiestos de manera diferente.</span><span class="sxs-lookup"><span data-stu-id="d1976-491">Each <xref:System.Globalization.Calendar> implementation defines leap years differently.</span></span>  
  
 <span data-ttu-id="d1976-492">Un mes bisiesto es todo un mes que sólo se produce en un año bisiesto.</span><span class="sxs-lookup"><span data-stu-id="d1976-492">A leap month is an entire month that occurs only in a leap year.</span></span> <span data-ttu-id="d1976-493">Por ejemplo, en el calendario hebreo, Adar bet es el único mes bisiesto.</span><span class="sxs-lookup"><span data-stu-id="d1976-493">For example, in the Hebrew calendar, Adar Beit is the only leap month.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1976-494">En el ejemplo de código siguiente se compara diferentes implementaciones de la <xref:System.Globalization.Calendar> clase.</span><span class="sxs-lookup"><span data-stu-id="d1976-494">The following code example compares different implementations of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]
 [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]
 [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d1976-495"><paramref name="year" /> está fuera del intervalo que admite el calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-495"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="d1976-496">O bien</span><span class="sxs-lookup"><span data-stu-id="d1976-496">-or-</span></span>  
  
 <span data-ttu-id="d1976-497"><paramref name="month" /> está fuera del intervalo que admite el calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-497"><paramref name="month" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public abstract bool IsLeapMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLeapMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsLeapMonth (year As Integer, month As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsLeapMonth(int year, int month, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="d1976-498">Entero que representa el año.</span><span class="sxs-lookup"><span data-stu-id="d1976-498">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="d1976-499">Un entero positivo que representa el mes.</span><span class="sxs-lookup"><span data-stu-id="d1976-499">A positive integer that represents the month.</span></span></param>
        <param name="era"><span data-ttu-id="d1976-500">Entero que representa la era.</span><span class="sxs-lookup"><span data-stu-id="d1976-500">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="d1976-501">Cuando se invalida en una clase derivada, determina si el mes especificado del año especificado de la era especificada es un mes bisiesto.</span><span class="sxs-lookup"><span data-stu-id="d1976-501">When overridden in a derived class, determines whether the specified month in the specified year in the specified era is a leap month.</span></span></summary>
        <returns>
          <span data-ttu-id="d1976-502"><see langword="true" /> si el mes especificado es un mes bisiesto; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-502"><see langword="true" /> if the specified month is a leap month; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1976-503">Para compensar la diferencia entre el año natural y el tiempo real que la Tierra gira alrededor del sol o el tiempo real que la luna gira en torno a la tierra, un año bisiesto con un número diferente de días de un año de calendario estándar.</span><span class="sxs-lookup"><span data-stu-id="d1976-503">To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year.</span></span> <span data-ttu-id="d1976-504">Cada <xref:System.Globalization.Calendar> implementación define los años bisiestos de manera diferente.</span><span class="sxs-lookup"><span data-stu-id="d1976-504">Each <xref:System.Globalization.Calendar> implementation defines leap years differently.</span></span>  
  
 <span data-ttu-id="d1976-505">Un mes bisiesto es todo un mes que sólo se produce en un año bisiesto.</span><span class="sxs-lookup"><span data-stu-id="d1976-505">A leap month is an entire month that occurs only in a leap year.</span></span> <span data-ttu-id="d1976-506">Por ejemplo, en el calendario hebreo, Adar bet es el único mes bisiesto.</span><span class="sxs-lookup"><span data-stu-id="d1976-506">For example, in the Hebrew calendar, Adar Beit is the only leap month.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d1976-507"><paramref name="year" /> está fuera del intervalo que admite el calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-507"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="d1976-508">O bien</span><span class="sxs-lookup"><span data-stu-id="d1976-508">-or-</span></span>  
  
 <span data-ttu-id="d1976-509"><paramref name="month" /> está fuera del intervalo que admite el calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-509"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="d1976-510">O bien</span><span class="sxs-lookup"><span data-stu-id="d1976-510">-or-</span></span>  
  
 <span data-ttu-id="d1976-511"><paramref name="era" /> está fuera del intervalo que admite el calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-511"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="d1976-512">La clase derivada debe admitir <see cref="F:System.Globalization.Calendar.CurrentEra" /> cuando se pasa como el <paramref name="era" /> parámetro.</span><span class="sxs-lookup"><span data-stu-id="d1976-512">The derived class must support <see cref="F:System.Globalization.Calendar.CurrentEra" /> when it is passed as the <paramref name="era" /> parameter.</span></span> <span data-ttu-id="d1976-513">Una manera de admitir <see cref="F:System.Globalization.Calendar.CurrentEra" /> está reemplazando por el valor almacenado en <c>Eras [0]</c>, que es el valor de la era actual del calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-513">One way to support <see cref="F:System.Globalization.Calendar.CurrentEra" /> is by replacing it with the value stored in <c>Eras[0]</c>, which is the value for the current era of the calendar.</span></span></para>
        </block>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLeapYear">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d1976-514">Cuando se invalida en una clase derivada, determina si un año es bisiesto.</span><span class="sxs-lookup"><span data-stu-id="d1976-514">When overridden in a derived class, determines whether a year is a leap year.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public virtual bool IsLeapYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLeapYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.IsLeapYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsLeapYear (year As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsLeapYear(int year);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="d1976-515">Entero que representa el año.</span><span class="sxs-lookup"><span data-stu-id="d1976-515">An integer that represents the year.</span></span></param>
        <summary><span data-ttu-id="d1976-516">Determina si el año especificado de la era actual es un año bisiesto.</span><span class="sxs-lookup"><span data-stu-id="d1976-516">Determines whether the specified year in the current era is a leap year.</span></span></summary>
        <returns>
          <span data-ttu-id="d1976-517">Es <see langword="true" /> si el año especificado es un año bisiesto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-517"><see langword="true" /> if the specified year is a leap year; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1976-518">Para compensar la diferencia entre el año natural y el tiempo real que la Tierra gira alrededor del sol o el tiempo real que la luna gira en torno a la tierra, un año bisiesto con un número diferente de días de un año de calendario estándar.</span><span class="sxs-lookup"><span data-stu-id="d1976-518">To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year.</span></span> <span data-ttu-id="d1976-519">Cada <xref:System.Globalization.Calendar> implementación define los años bisiestos de manera diferente.</span><span class="sxs-lookup"><span data-stu-id="d1976-519">Each <xref:System.Globalization.Calendar> implementation defines leap years differently.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1976-520">En el ejemplo de código siguiente se compara diferentes implementaciones de la <xref:System.Globalization.Calendar> clase.</span><span class="sxs-lookup"><span data-stu-id="d1976-520">The following code example compares different implementations of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]
 [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]
 [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d1976-521"><paramref name="year" /> está fuera del intervalo que admite el calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-521"><paramref name="year" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public abstract bool IsLeapYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLeapYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.IsLeapYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsLeapYear (year As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsLeapYear(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="d1976-522">Entero que representa el año.</span><span class="sxs-lookup"><span data-stu-id="d1976-522">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="d1976-523">Entero que representa la era.</span><span class="sxs-lookup"><span data-stu-id="d1976-523">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="d1976-524">Cuando se invalida en una clase derivada, determina si el año especificado de la era especificada es un año bisiesto.</span><span class="sxs-lookup"><span data-stu-id="d1976-524">When overridden in a derived class, determines whether the specified year in the specified era is a leap year.</span></span></summary>
        <returns>
          <span data-ttu-id="d1976-525">Es <see langword="true" /> si el año especificado es un año bisiesto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-525"><see langword="true" /> if the specified year is a leap year; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1976-526">Para compensar la diferencia entre el año natural y el tiempo real que la Tierra gira alrededor del sol o el tiempo real que la luna gira en torno a la tierra, un año bisiesto con un número diferente de días de un año de calendario estándar.</span><span class="sxs-lookup"><span data-stu-id="d1976-526">To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year.</span></span> <span data-ttu-id="d1976-527">Cada <xref:System.Globalization.Calendar> implementación define los años bisiestos de manera diferente.</span><span class="sxs-lookup"><span data-stu-id="d1976-527">Each <xref:System.Globalization.Calendar> implementation defines leap years differently.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d1976-528"><paramref name="year" /> está fuera del intervalo que admite el calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-528"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="d1976-529">O bien</span><span class="sxs-lookup"><span data-stu-id="d1976-529">-or-</span></span>  
  
 <span data-ttu-id="d1976-530"><paramref name="era" /> está fuera del intervalo que admite el calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-530"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="d1976-531">La clase derivada debe admitir <see cref="F:System.Globalization.Calendar.CurrentEra" /> cuando se pasa como el <paramref name="era" /> parámetro.</span><span class="sxs-lookup"><span data-stu-id="d1976-531">The derived class must support <see cref="F:System.Globalization.Calendar.CurrentEra" /> when it is passed as the <paramref name="era" /> parameter.</span></span> <span data-ttu-id="d1976-532">Una manera de admitir <see cref="F:System.Globalization.Calendar.CurrentEra" /> está reemplazando por el valor almacenado en <c>Eras [0]</c>, que es el valor de la era actual del calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-532">One way to support <see cref="F:System.Globalization.Calendar.CurrentEra" /> is by replacing it with the value stored in <c>Eras[0]</c>, which is the value for the current era of the calendar.</span></span></para>
        </block>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.Calendar.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1976-533">Obtiene un valor que indica si este objeto <see cref="T:System.Globalization.Calendar" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="d1976-533">Gets a value indicating whether this <see cref="T:System.Globalization.Calendar" /> object is read-only.</span></span></summary>
        <value>
          <span data-ttu-id="d1976-534">Es <see langword="true" /> si el objeto <see cref="T:System.Globalization.Calendar" /> es de solo lectura; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-534"><see langword="true" /> if this <see cref="T:System.Globalization.Calendar" /> object is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxSupportedDateTime">
      <MemberSignature Language="C#" Value="public virtual DateTime MaxSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.Calendar.MaxSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaxSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MaxSupportedDateTime { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1976-535">Obtiene las últimas fecha y hora admitidas por este objeto <see cref="T:System.Globalization.Calendar" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-535">Gets the latest date and time supported by this <see cref="T:System.Globalization.Calendar" /> object.</span></span></summary>
        <value><span data-ttu-id="d1976-536">Las últimas fecha y hora admitidas por este calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-536">The latest date and time supported by this calendar.</span></span> <span data-ttu-id="d1976-537">El valor predeterminado es <see cref="F:System.DateTime.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-537">The default is <see cref="F:System.DateTime.MaxValue" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Globalization.Calendar.MinSupportedDateTime" />
      </Docs>
    </Member>
    <Member MemberName="MinSupportedDateTime">
      <MemberSignature Language="C#" Value="public virtual DateTime MinSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.Calendar.MinSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MinSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MinSupportedDateTime { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1976-538">Obtiene las primeras fecha y hora admitidas por este objeto <see cref="T:System.Globalization.Calendar" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-538">Gets the earliest date and time supported by this <see cref="T:System.Globalization.Calendar" /> object.</span></span></summary>
        <value><span data-ttu-id="d1976-539">Las primeras fecha y hora admitidas por este calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-539">The earliest date and time supported by this calendar.</span></span> <span data-ttu-id="d1976-540">El valor predeterminado es <see cref="F:System.DateTime.MinValue" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-540">The default is <see cref="F:System.DateTime.MinValue" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Globalization.Calendar ReadOnly (System.Globalization.Calendar calendar);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.Calendar ReadOnly(class System.Globalization.Calendar calendar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.ReadOnly(System.Globalization.Calendar)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::Calendar ^ ReadOnly(System::Globalization::Calendar ^ calendar);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="calendar" Type="System.Globalization.Calendar" />
      </Parameters>
      <Docs>
        <param name="calendar"><span data-ttu-id="d1976-541">Un objeto <see cref="T:System.Globalization.Calendar" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-541">A <see cref="T:System.Globalization.Calendar" /> object.</span></span></param>
        <summary><span data-ttu-id="d1976-542">Devuelve una versión de solo lectura del objeto <see cref="T:System.Globalization.Calendar" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="d1976-542">Returns a read-only version of the specified <see cref="T:System.Globalization.Calendar" /> object.</span></span></summary>
        <returns><span data-ttu-id="d1976-543">Objeto <see cref="T:System.Globalization.Calendar" /> especificado por el parámetro <paramref name="calendar" />, si <paramref name="calendar" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="d1976-543">The <see cref="T:System.Globalization.Calendar" /> object specified by the <paramref name="calendar" /> parameter, if <paramref name="calendar" /> is read-only.</span></span>  
  
 <span data-ttu-id="d1976-544">O bien</span><span class="sxs-lookup"><span data-stu-id="d1976-544">-or-</span></span>  
  
 <span data-ttu-id="d1976-545">Clon miembro a miembro de solo lectura del objeto <see cref="T:System.Globalization.Calendar" /> especificado por <paramref name="calendar" />, si <paramref name="calendar" /> no es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="d1976-545">A read-only memberwise clone of the <see cref="T:System.Globalization.Calendar" /> object specified by <paramref name="calendar" />, if <paramref name="calendar" /> is not read-only.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d1976-546"><paramref name="calendar" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-546"><paramref name="calendar" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Object.MemberwiseClone" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToDateTime">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d1976-547">Cuando se invalida en una clase derivada, devuelve un valor <see cref="T:System.DateTime" /> que se establece en la fecha y hora especificadas.</span><span class="sxs-lookup"><span data-stu-id="d1976-547">When overridden in a derived class, returns a <see cref="T:System.DateTime" /> that is set to the specified date and time.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public virtual DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToDateTime (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="d1976-548">Entero que representa el año.</span><span class="sxs-lookup"><span data-stu-id="d1976-548">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="d1976-549">Un entero positivo que representa el mes.</span><span class="sxs-lookup"><span data-stu-id="d1976-549">A positive integer that represents the month.</span></span></param>
        <param name="day"><span data-ttu-id="d1976-550">Un entero positivo que representa el día.</span><span class="sxs-lookup"><span data-stu-id="d1976-550">A positive integer that represents the day.</span></span></param>
        <param name="hour"><span data-ttu-id="d1976-551">Entero de 0 a 23 que representa la hora.</span><span class="sxs-lookup"><span data-stu-id="d1976-551">An integer from 0 to 23 that represents the hour.</span></span></param>
        <param name="minute"><span data-ttu-id="d1976-552">Entero de 0 a 59 que representa el minuto.</span><span class="sxs-lookup"><span data-stu-id="d1976-552">An integer from 0 to 59 that represents the minute.</span></span></param>
        <param name="second"><span data-ttu-id="d1976-553">Entero de 0 a 59 que representa el segundo.</span><span class="sxs-lookup"><span data-stu-id="d1976-553">An integer from 0 to 59 that represents the second.</span></span></param>
        <param name="millisecond"><span data-ttu-id="d1976-554">Entero de 0 a 999 que representa el milisegundo.</span><span class="sxs-lookup"><span data-stu-id="d1976-554">An integer from 0 to 999 that represents the millisecond.</span></span></param>
        <summary><span data-ttu-id="d1976-555">Devuelve un <see cref="T:System.DateTime" /> que se establece en la fecha y la hora especificadas de la era actual.</span><span class="sxs-lookup"><span data-stu-id="d1976-555">Returns a <see cref="T:System.DateTime" /> that is set to the specified date and time in the current era.</span></span></summary>
        <returns><span data-ttu-id="d1976-556">Objeto <see cref="T:System.DateTime" /> que se establece en la fecha y hora especificadas de la era actual.</span><span class="sxs-lookup"><span data-stu-id="d1976-556">The <see cref="T:System.DateTime" /> that is set to the specified date and time in the current era.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d1976-557"><paramref name="year" /> está fuera del intervalo que admite el calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-557"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="d1976-558">O bien</span><span class="sxs-lookup"><span data-stu-id="d1976-558">-or-</span></span>  
  
 <span data-ttu-id="d1976-559"><paramref name="month" /> está fuera del intervalo que admite el calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-559"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="d1976-560">O bien</span><span class="sxs-lookup"><span data-stu-id="d1976-560">-or-</span></span>  
  
 <span data-ttu-id="d1976-561"><paramref name="day" /> está fuera del intervalo que admite el calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-561"><paramref name="day" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="d1976-562">O bien</span><span class="sxs-lookup"><span data-stu-id="d1976-562">-or-</span></span>  
  
 <span data-ttu-id="d1976-563"><paramref name="hour" /> es menor que cero o mayor que 23.</span><span class="sxs-lookup"><span data-stu-id="d1976-563"><paramref name="hour" /> is less than zero or greater than 23.</span></span>  
  
 <span data-ttu-id="d1976-564">O bien</span><span class="sxs-lookup"><span data-stu-id="d1976-564">-or-</span></span>  
  
 <span data-ttu-id="d1976-565"><paramref name="minute" /> es menor que cero o mayor que 59.</span><span class="sxs-lookup"><span data-stu-id="d1976-565"><paramref name="minute" /> is less than zero or greater than 59.</span></span>  
  
 <span data-ttu-id="d1976-566">O bien</span><span class="sxs-lookup"><span data-stu-id="d1976-566">-or-</span></span>  
  
 <span data-ttu-id="d1976-567"><paramref name="second" /> es menor que cero o mayor que 59.</span><span class="sxs-lookup"><span data-stu-id="d1976-567"><paramref name="second" /> is less than zero or greater than 59.</span></span>  
  
 <span data-ttu-id="d1976-568">O bien</span><span class="sxs-lookup"><span data-stu-id="d1976-568">-or-</span></span>  
  
 <span data-ttu-id="d1976-569"><paramref name="millisecond" /> es menor que cero o mayor que 999.</span><span class="sxs-lookup"><span data-stu-id="d1976-569"><paramref name="millisecond" /> is less than zero or greater than 999.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public abstract DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ToDateTime (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="d1976-570">Entero que representa el año.</span><span class="sxs-lookup"><span data-stu-id="d1976-570">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="d1976-571">Un entero positivo que representa el mes.</span><span class="sxs-lookup"><span data-stu-id="d1976-571">A positive integer that represents the month.</span></span></param>
        <param name="day"><span data-ttu-id="d1976-572">Un entero positivo que representa el día.</span><span class="sxs-lookup"><span data-stu-id="d1976-572">A positive integer that represents the day.</span></span></param>
        <param name="hour"><span data-ttu-id="d1976-573">Entero de 0 a 23 que representa la hora.</span><span class="sxs-lookup"><span data-stu-id="d1976-573">An integer from 0 to 23 that represents the hour.</span></span></param>
        <param name="minute"><span data-ttu-id="d1976-574">Entero de 0 a 59 que representa el minuto.</span><span class="sxs-lookup"><span data-stu-id="d1976-574">An integer from 0 to 59 that represents the minute.</span></span></param>
        <param name="second"><span data-ttu-id="d1976-575">Entero de 0 a 59 que representa el segundo.</span><span class="sxs-lookup"><span data-stu-id="d1976-575">An integer from 0 to 59 that represents the second.</span></span></param>
        <param name="millisecond"><span data-ttu-id="d1976-576">Entero de 0 a 999 que representa el milisegundo.</span><span class="sxs-lookup"><span data-stu-id="d1976-576">An integer from 0 to 999 that represents the millisecond.</span></span></param>
        <param name="era"><span data-ttu-id="d1976-577">Entero que representa la era.</span><span class="sxs-lookup"><span data-stu-id="d1976-577">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="d1976-578">Cuando se invalida en una clase derivada, devuelve un <see cref="T:System.DateTime" /> que se establece en la fecha y la hora especificadas de la era especificada.</span><span class="sxs-lookup"><span data-stu-id="d1976-578">When overridden in a derived class, returns a <see cref="T:System.DateTime" /> that is set to the specified date and time in the specified era.</span></span></summary>
        <returns><span data-ttu-id="d1976-579">Objeto <see cref="T:System.DateTime" /> que se establece en la fecha y hora especificadas de la era actual.</span><span class="sxs-lookup"><span data-stu-id="d1976-579">The <see cref="T:System.DateTime" /> that is set to the specified date and time in the current era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1976-580">El <xref:System.Globalization.Calendar.ToDateTime%2A> método es útil porque puede convertir cualquier fecha del calendario actual a una fecha del calendario gregoriano.</span><span class="sxs-lookup"><span data-stu-id="d1976-580">The <xref:System.Globalization.Calendar.ToDateTime%2A> method is useful because it can convert any date in the current calendar to a Gregorian calendar date.</span></span> <span data-ttu-id="d1976-581">La fecha gregoriana puede posteriormente utilizar, por ejemplo, para comparar las fechas en calendarios, o crear una fecha equivalente en un calendario determinado.</span><span class="sxs-lookup"><span data-stu-id="d1976-581">The Gregorian date can subsequently be used, for example, to compare dates in different calendars or create an equivalent date in a particular calendar.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d1976-582"><paramref name="year" /> está fuera del intervalo que admite el calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-582"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="d1976-583">O bien</span><span class="sxs-lookup"><span data-stu-id="d1976-583">-or-</span></span>  
  
 <span data-ttu-id="d1976-584"><paramref name="month" /> está fuera del intervalo que admite el calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-584"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="d1976-585">O bien</span><span class="sxs-lookup"><span data-stu-id="d1976-585">-or-</span></span>  
  
 <span data-ttu-id="d1976-586"><paramref name="day" /> está fuera del intervalo que admite el calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-586"><paramref name="day" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="d1976-587">O bien</span><span class="sxs-lookup"><span data-stu-id="d1976-587">-or-</span></span>  
  
 <span data-ttu-id="d1976-588"><paramref name="hour" /> es menor que cero o mayor que 23.</span><span class="sxs-lookup"><span data-stu-id="d1976-588"><paramref name="hour" /> is less than zero or greater than 23.</span></span>  
  
 <span data-ttu-id="d1976-589">O bien</span><span class="sxs-lookup"><span data-stu-id="d1976-589">-or-</span></span>  
  
 <span data-ttu-id="d1976-590"><paramref name="minute" /> es menor que cero o mayor que 59.</span><span class="sxs-lookup"><span data-stu-id="d1976-590"><paramref name="minute" /> is less than zero or greater than 59.</span></span>  
  
 <span data-ttu-id="d1976-591">O bien</span><span class="sxs-lookup"><span data-stu-id="d1976-591">-or-</span></span>  
  
 <span data-ttu-id="d1976-592"><paramref name="second" /> es menor que cero o mayor que 59.</span><span class="sxs-lookup"><span data-stu-id="d1976-592"><paramref name="second" /> is less than zero or greater than 59.</span></span>  
  
 <span data-ttu-id="d1976-593">O bien</span><span class="sxs-lookup"><span data-stu-id="d1976-593">-or-</span></span>  
  
 <span data-ttu-id="d1976-594"><paramref name="millisecond" /> es menor que cero o mayor que 999.</span><span class="sxs-lookup"><span data-stu-id="d1976-594"><paramref name="millisecond" /> is less than zero or greater than 999.</span></span>  
  
 <span data-ttu-id="d1976-595">O bien</span><span class="sxs-lookup"><span data-stu-id="d1976-595">-or-</span></span>  
  
 <span data-ttu-id="d1976-596"><paramref name="era" /> está fuera del intervalo que admite el calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-596"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="d1976-597">La clase derivada debe admitir <see cref="F:System.Globalization.Calendar.CurrentEra" /> cuando se pasa como el <paramref name="era" /> parámetro.</span><span class="sxs-lookup"><span data-stu-id="d1976-597">The derived class must support <see cref="F:System.Globalization.Calendar.CurrentEra" /> when it is passed as the <paramref name="era" /> parameter.</span></span> <span data-ttu-id="d1976-598">Una manera de admitir <see cref="F:System.Globalization.Calendar.CurrentEra" /> está reemplazando por el valor almacenado en el primer elemento de la <see cref="P:System.Globalization.Calendar.Eras" /> matriz de propiedades, que es el valor de la era actual del calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-598">One way to support <see cref="F:System.Globalization.Calendar.CurrentEra" /> is by replacing it with the value stored in the first element of the <see cref="P:System.Globalization.Calendar.Eras" /> property array, which is the value for the current era of the calendar.</span></span></para>
        </block>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToFourDigitYear">
      <MemberSignature Language="C#" Value="public virtual int ToFourDigitYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ToFourDigitYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.ToFourDigitYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToFourDigitYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ToFourDigitYear(int year);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="d1976-599">Entero de dos dígitos o de cuatro dígitos que representa el año que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="d1976-599">A two-digit or four-digit integer that represents the year to convert.</span></span></param>
        <summary><span data-ttu-id="d1976-600">Convierte el año especificado en un año de 4 dígitos mediante la propiedad <see cref="P:System.Globalization.Calendar.TwoDigitYearMax" /> para determinar el siglo adecuado.</span><span class="sxs-lookup"><span data-stu-id="d1976-600">Converts the specified year to a four-digit year by using the <see cref="P:System.Globalization.Calendar.TwoDigitYearMax" /> property to determine the appropriate century.</span></span></summary>
        <returns><span data-ttu-id="d1976-601">Entero que contiene la representación de cuatro dígitos de <paramref name="year" />.</span><span class="sxs-lookup"><span data-stu-id="d1976-601">An integer that contains the four-digit representation of <paramref name="year" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1976-602"><xref:System.Globalization.Calendar.TwoDigitYearMax%2A> es el último año del intervalo de 100 años que puede representarse por un año de dos dígitos.</span><span class="sxs-lookup"><span data-stu-id="d1976-602"><xref:System.Globalization.Calendar.TwoDigitYearMax%2A> is the last year in the 100-year range that can be represented by a two-digit year.</span></span> <span data-ttu-id="d1976-603">El siglo se determina buscando la única coincidencia de dos dígitos `year` dentro de ese intervalo de 100 años.</span><span class="sxs-lookup"><span data-stu-id="d1976-603">The century is determined by finding the sole occurrence of the two-digit `year` within that 100-year range.</span></span> <span data-ttu-id="d1976-604">Por ejemplo, si <xref:System.Globalization.Calendar.TwoDigitYearMax%2A> se establece en 2029, el intervalo de 100 años es de 1930 a 2029.</span><span class="sxs-lookup"><span data-stu-id="d1976-604">For example, if <xref:System.Globalization.Calendar.TwoDigitYearMax%2A> is set to 2029, the 100-year range is from 1930 to 2029.</span></span> <span data-ttu-id="d1976-605">Por lo tanto, un valor de 2 dígitos de 30 se interpreta como 1930, mientras que un valor de 2 dígitos de 29 se interpreta como 2029.</span><span class="sxs-lookup"><span data-stu-id="d1976-605">Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.</span></span>  
  
 <span data-ttu-id="d1976-606">Si `year` es mayor o igual a 100, el valor de `year` se devuelve sin cambios.</span><span class="sxs-lookup"><span data-stu-id="d1976-606">If `year` is greater than or equal to 100, the value of `year` is returned unchanged.</span></span>  
  
 <span data-ttu-id="d1976-607"><xref:System.Globalization.Calendar.ToFourDigitYear%2A> admite un año de dos dígitos o un año de cuatro dígitos.</span><span class="sxs-lookup"><span data-stu-id="d1976-607"><xref:System.Globalization.Calendar.ToFourDigitYear%2A> supports either a two-digit year or a four-digit year.</span></span> <span data-ttu-id="d1976-608">Se pasa un valor de año de dos dígitos (menor que 100) hace que el método convertir el valor en un valor de cuatro dígitos según el <xref:System.Globalization.Calendar.TwoDigitYearMax%2A> valor que representa el siglo adecuado.</span><span class="sxs-lookup"><span data-stu-id="d1976-608">Passing a two-digit year value (less than 100) causes the method to convert the value to a four-digit value according to the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A> value representing the appropriate century.</span></span> <span data-ttu-id="d1976-609">Si la aplicación proporciona un valor de año de cuatro dígitos que está dentro del intervalo del calendario admitido para <xref:System.Globalization.Calendar.ToFourDigitYear%2A>, el método devuelve el valor de entrada real.</span><span class="sxs-lookup"><span data-stu-id="d1976-609">If the application supplies a four-digit year value that is within the supported calendar range to <xref:System.Globalization.Calendar.ToFourDigitYear%2A>, the method returns the actual input value.</span></span> <span data-ttu-id="d1976-610">Si la aplicación proporciona un valor de cuatro dígitos que está fuera del intervalo del calendario admitido, o si proporciona un valor negativo, el método produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="d1976-610">If the application supplies a four-digit value that is outside the supported calendar range, or if it supplies a negative value, the method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d1976-611"><paramref name="year" /> está fuera del intervalo que admite el calendario.</span><span class="sxs-lookup"><span data-stu-id="d1976-611"><paramref name="year" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="P:System.Globalization.Calendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="TwoDigitYearMax">
      <MemberSignature Language="C#" Value="public virtual int TwoDigitYearMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TwoDigitYearMax" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.Calendar.TwoDigitYearMax" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TwoDigitYearMax As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TwoDigitYearMax { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1976-612">Obtiene o establece el último año de un intervalo de 100 años que puede representarse mediante un año de dos dígitos.</span><span class="sxs-lookup"><span data-stu-id="d1976-612">Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</span></span></summary>
        <value><span data-ttu-id="d1976-613">Último año de un intervalo de 100 años que puede representarse por un año de dos dígitos.</span><span class="sxs-lookup"><span data-stu-id="d1976-613">The last year of a 100-year range that can be represented by a 2-digit year.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1976-614">Esta propiedad permite que un año de 2 dígitos convertir correctamente un año de 4 dígitos.</span><span class="sxs-lookup"><span data-stu-id="d1976-614">This property allows a 2-digit year to be properly translated to a 4-digit year.</span></span> <span data-ttu-id="d1976-615">Por ejemplo, si esta propiedad se establece en 2029, el intervalo de 100 años es de 1930 a 2029.</span><span class="sxs-lookup"><span data-stu-id="d1976-615">For example, if this property is set to 2029, the 100-year range is from 1930 to 2029.</span></span> <span data-ttu-id="d1976-616">Por lo tanto, un valor de 2 dígitos de 30 se interpreta como 1930, mientras que un valor de 2 dígitos de 29 se interpreta como 2029.</span><span class="sxs-lookup"><span data-stu-id="d1976-616">Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.</span></span>  
  
 <span data-ttu-id="d1976-617">El valor inicial de esta propiedad se deriva de la configuración en la parte de opciones de configuración regional y de idioma del Panel de Control.</span><span class="sxs-lookup"><span data-stu-id="d1976-617">The initial value of this property is derived from the settings in the regional and language options portion of Control Panel.</span></span> <span data-ttu-id="d1976-618">Sin embargo, esa información puede cambiar durante la vida de la <xref:System.AppDomain>.</span><span class="sxs-lookup"><span data-stu-id="d1976-618">However, that information can change during the life of the <xref:System.AppDomain>.</span></span> <span data-ttu-id="d1976-619">La <xref:System.Globalization.Calendar> clase no detecta cambios en la configuración del sistema automáticamente.</span><span class="sxs-lookup"><span data-stu-id="d1976-619">The <xref:System.Globalization.Calendar> class does not detect changes in the system settings automatically.</span></span> <span data-ttu-id="d1976-620">Si el calendario no se admite en las opciones de configuración regional y de idioma, el valor inicial de esta propiedad es el valor predeterminado definido por el <xref:System.Globalization.Calendar> clase.</span><span class="sxs-lookup"><span data-stu-id="d1976-620">If the calendar is not supported in the regional and language options, the initial value of this property is the default value defined by the <xref:System.Globalization.Calendar> class.</span></span>  
  
 <span data-ttu-id="d1976-621">La aplicación debe establecer este valor en 99 para indicar que los años de 2 dígitos se tomarán literalmente.</span><span class="sxs-lookup"><span data-stu-id="d1976-621">Your application should set this value to 99 to indicate that 2-digit years are to be taken literally.</span></span> <span data-ttu-id="d1976-622">Por ejemplo, si esta propiedad se establece en 99, el intervalo de 100 años es de 0 (no un valor válido para la mayoría de los calendarios) a 99.</span><span class="sxs-lookup"><span data-stu-id="d1976-622">For example, if this property is set to 99, the 100-year range is from 0 (not a valid value for most calendars) to 99.</span></span> <span data-ttu-id="d1976-623">Por lo tanto, un valor de 2 dígitos de 30 se interpreta como 30.</span><span class="sxs-lookup"><span data-stu-id="d1976-623">Therefore, a 2-digit value of 30 is interpreted as 30.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d1976-624">El objeto <see cref="T:System.Globalization.Calendar" /> actual es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="d1976-624">The current <see cref="T:System.Globalization.Calendar" /> object is read-only.</span></span></exception>
        <altmember cref="M:System.Globalization.Calendar.ToFourDigitYear(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>