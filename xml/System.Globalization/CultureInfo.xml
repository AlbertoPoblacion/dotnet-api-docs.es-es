<Type Name="CultureInfo" FullName="System.Globalization.CultureInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="20f85a6cb4579e78bf1f47378a660c0d61c9f819" /><Meta Name="ms.sourcegitcommit" Value="9a6da88bd5455e8274257ca7ad259b42f1de114f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="05/22/2019" /><Meta Name="ms.locfileid" Value="66006696" /></Metadata><TypeSignature Language="C#" Value="public class CultureInfo : ICloneable, IFormatProvider" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable beforefieldinit CultureInfo extends System.Object implements class System.ICloneable, class System.IFormatProvider" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.CultureInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class CultureInfo&#xA;Implements ICloneable, IFormatProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class CultureInfo : ICloneable, IFormatProvider" />
  <TypeSignature Language="F#" Value="type CultureInfo = class&#xA;    interface ICloneable&#xA;    interface IFormatProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormatProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Proporciona información sobre una referencia cultural concreta (lo que se denomina *configuración regional* en desarrollo de código no administrado). La información incluye los nombres de la referencia cultural, el sistema de escritura, el calendario usado, el criterio de ordenación y el formato de las fechas y los números.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Globalization.CultureInfo> clase proporciona información específica de la referencia cultural, como el lenguaje subidioma, país o región, calendario y las convenciones asociadas a una referencia cultural determinada. Esta clase también proporciona acceso a instancias específicas de la referencia cultural de la <xref:System.Globalization.DateTimeFormatInfo>, <xref:System.Globalization.NumberFormatInfo>, <xref:System.Globalization.CompareInfo>, y <xref:System.Globalization.TextInfo> objetos. Estos objetos contienen la información necesaria para las operaciones específicas de referencias culturales, como las mayúsculas y minúsculas, dar formato a fechas y números y comparar cadenas. El <xref:System.Globalization.CultureInfo> clase se usa directa o indirectamente por las clases que dar formato, analizarán o manipulan datos específicos de la referencia cultural, tales como <xref:System.String>, <xref:System.DateTime>, <xref:System.DateTimeOffset>y los tipos numéricos.  
  
 En esta sección:  
  
 [Los identificadores y nombres de referencias culturales](#CultureNames)   
 [Todos los idiomas, neutras y específicas de referencias culturales](#Invariant)   
 [Referencias culturales personalizadas](#Custom)   
 [Datos de referencia cultural dinámico](#Dynamic)   
 [CultureInfo y datos de referencia culturales](#cultureinfo-and-cultural-data) [la referencia cultural actual y la referencia cultural de interfaz de usuario actual](#Current)   
 [Obtener todas las referencias culturales](#GetAll)   
 [Referencia cultural y los subprocesos](#Threads)   
 [Dominios de referencia cultural y la aplicación](#AppDomain)   
 [Referencia cultural y operaciones asincrónicas basadas en tareas](#Async)   
 [Serialización de objeto CultureInfo](#Serialization)   
 [Invalida el Panel de control](#CPanel)   
 [Criterios de ordenación alternativos](#AlternateSort)   
 [Aplicaciones de la referencia cultural y de Windows](#Windows)  

<a name="CultureNames"></a>   
## <a name="culture-names-and-identifiers"></a>Los identificadores y nombres de referencias culturales  
 La <xref:System.Globalization.CultureInfo> clase especifica un nombre único para cada referencia cultural, según RFC 4646. El nombre es una combinación de un código de referencia cultural de dos letras en minúsculas de ISO 639 asociado con un idioma y un código de secundaria de dos letras en mayúscula de ISO 3166 asociado con un país o región. Además, para las aplicaciones que tienen como destino [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] o una versión posterior y se ejecutan en Windows 10 o versiones posteriores, los nombres de referencia cultural que se corresponden con el idioma BCP-47 válido las etiquetas son compatibles.  
  
> [!NOTE]
>  Cuando se pasa un nombre de referencia cultural a un constructor de clase o un método como <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> o <xref:System.Globalization.CultureInfo>, su caso no es significativo.  
  
 Es el formato para el nombre de referencia cultural según RFC 4646 *languagecode2*>-*códigopaís/Región2*, donde *languagecode2* es el código de idioma de dos letras y *códigopaís/Región2* es el código de secundaria de dos letras. Algunos ejemplos son a ja-JP para japonés (Japón) y en-US para inglés (Estados Unidos). En casos donde un código de idioma de dos letras no está disponible, se usa un código de tres letras proveniente de ISO 639-2.  
  
 Tenga en cuenta que algunos nombres de referencia cultural también especifican una secuencia de comandos 15924 ISO. Por ejemplo, Cyrl especifica el script cirílico y Latn especifica el alfabeto latino. Un nombre de referencia cultural que incluye una secuencia de comandos usa el patrón de *languagecode2*-*scripttag*-*códigopaís/Región2*. Un ejemplo de este tipo de nombre de referencia cultural es uz-Cyrl-UZ para Uzbeko (cirílico, Uzbekistán). En sistemas operativos de Windows anteriores a Windows Vista, un nombre de referencia cultural que incluye una secuencia de comandos usa el patrón de *languagecode2*-*códigopaís/Región2* -  *scripttag*, por ejemplo, uz-UZ-Cyrl para Uzbeko (cirílico, Uzbekistán).  
  
 Una referencia cultural neutra se especifica solo el código de idioma de dos letras en minúsculas. Por ejemplo, fr especifica la referencia cultural neutra para francés y de especifica la referencia cultural neutra para alemán.  
  
> [!NOTE]
>  Hay dos nombres de referencias culturales que contradicen esta regla. Las referencias culturales, chino (simplificado), denominado zh-Hans y chino (tradicional), denominado zh-Hant, son referencias culturales neutras. Los nombres de referencia cultural representan el estándar actual y se deben usar a menos que tenga una razón para usar los nombres zh-CHS y zh-CHT anteriores.  
  
 Un identificador de referencia cultural es una abreviatura numérica internacional estándar y los componentes necesarios para identificar una de las referencias culturales instaladas. La aplicación puede usar los identificadores de referencias culturales predefinidos o definir identificadores personalizados.  
  
 Ciertos predefinidas nombres de referencia cultural y los identificadores se usan por esta y otras clases en el <xref:System.Globalization?displayProperty=nameWithType> espacio de nombres. Aparece información detallada de referencia cultural en el [referencia de National Language Support (NLS) API](https://go.microsoft.com/fwlink/?LinkId=200048) en el centro de desarrolladores Go Global.  
  
 Recuerde que los nombres de referencia cultural y los identificadores representan solo un subconjunto de las referencias culturales que puede encontrarse en un equipo determinado. Las versiones de Windows o los service packs pueden cambiar las referencias culturales disponibles. Las aplicaciones agregar referencias culturales personalizadas mediante la <xref:System.Globalization.CultureAndRegionInfoBuilder> clase. Los usuarios agregar sus propias referencias culturales personalizadas mediante la herramienta Microsoft Locale Builder. Microsoft Locale Builder está escrito en código administrado mediante la `CultureAndRegionInfoBuilder` clase.  
  
 Algunos nombres están estrechamente asociados a una referencia cultural, en particular los nombres asociados con los miembros de clase siguientes:  
  
-   <xref:System.Globalization.CultureInfo.ToString%2A?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.CompareInfo.Name%2A?displayProperty=nameWithType>  
  
<a name="Invariant"></a>   
## <a name="invariant-neutral-and-specific-cultures"></a>Todos los idiomas, neutras y específicas de referencias culturales  
 Las referencias culturales generalmente se agrupan en tres grupos: todos los idiomas y referencias culturales, neutras, referencias culturales específicas.  
  
 Una referencia cultural invariable es cuenta la referencia cultural. La aplicación especifica la referencia cultural invariable por nombre mediante una cadena vacía ("") o por su identificador. <xref:System.Globalization.CultureInfo.InvariantCulture%2A> define una instancia de la referencia cultural invariable. Está asociado con el idioma inglés, pero no con cualquier país o región. Se usa en casi todos los métodos en el `Globalization` espacio de nombres que requiere una referencia cultural.  
  
 Una referencia cultural neutra es una referencia cultural que se asocia con un lenguaje pero no con un país o región. Una referencia cultural específica es una referencia cultural que se asocia con un idioma y un país o región. Por ejemplo, fr es el nombre neutro para la referencia cultural de francés y fr-FR es el nombre de la referencia cultural de francés (Francia) específica. Tenga en cuenta que chino (simplificado) y chino (tradicional) también se considera referencias culturales neutras.  
  
 Crear una instancia de un <xref:System.Globalization.CompareInfo> la clase para una referencia cultural neutra no se recomienda porque los datos que contiene están arbitrarios. Para ver y ordenar los datos, especificar el idioma y la región. Además, el <xref:System.Globalization.CompareInfo.Name%2A> propiedad de un <xref:System.Globalization.CompareInfo> objeto creado para una referencia cultural neutra devuelve sólo el país y no incluye la región.  
  
 Las referencias culturales definidas tienen una jerarquía en la que el elemento primario de una referencia cultural específica es una referencia cultural neutra y el elemento primario de una referencia cultural neutra es la referencia cultural invariable. El <xref:System.Globalization.CultureInfo.Parent%2A> propiedad contiene la referencia cultural neutra asociada con una referencia cultural concreta. Las referencias culturales personalizadas deben definir el <xref:System.Globalization.CultureInfo.Parent%2A> propiedad de acuerdo con este patrón.  
  
 Si los recursos para una referencia cultural concreta no están disponibles en el sistema operativo, se usan los recursos de la referencia cultural neutra asociada. Si no están disponibles los recursos de la referencia cultural neutra, se usan los recursos incrustados en el ensamblado principal. Para obtener más información sobre el proceso de reserva de recursos, consulte [empaquetar e implementar recursos](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).  
  
 La lista de configuraciones regionales de la API de Windows es ligeramente diferente de la lista de referencias culturales que admite .NET Framework. Si se requiere la interoperabilidad con Windows, por ejemplo, mediante el mecanismo p/invoke, la aplicación debe usar una referencia cultural que se define para el sistema operativo. Uso de la referencia cultural específica garantiza la coherencia con la configuración regional de Windows equivalente, que se identifica con un identificador de configuración regional que es el mismo que <xref:System.Globalization.CultureInfo.LCID%2A>.  
  
 Un <xref:System.Globalization.DateTimeFormatInfo> o <xref:System.Globalization.NumberFormatInfo> pueden crearse únicamente para la referencia cultural invariable o para referencias culturales específicas, pero no para referencias culturales neutras.  
  
 Si <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> es el <xref:System.Globalization.TaiwanCalendar> pero la <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> no está establecido en zh-TW, a continuación, <xref:System.Globalization.DateTimeFormatInfo.NativeCalendarName%2A?displayProperty=nameWithType>, <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A?displayProperty=nameWithType>, y <xref:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName%2A?displayProperty=nameWithType> devuelve una cadena vacía ("").  
  
<a name="Custom"></a>   
## <a name="custom-cultures"></a>Referencias culturales personalizadas  
 Además de las referencias culturales predefinidas admitidas por el sistema operativo de Windows y .NET Framework, .NET Framework admite tres tipos de referencias culturales personalizadas:  
  
-   Nuevas referencias culturales que complementa las referencias culturales en Windows o .NET Framework. Por ejemplo, podría instalar una aplicación un <xref:System.Globalization.CultureInfo> objeto que representa el fj-FJ (o Fijan (de Fiyi)) de la referencia cultural en un sistema.  
  
-   Referencias culturales de reemplazo cuyas propiedades son diferentes de las propiedades de las referencias culturales estándares admitidas por Windows y .NET Framework.  
  
-   Referencias culturales estándares con invalidaciones del usuario. El usuario puede utilizar el **región e idioma** aplicación **Panel de Control** para personalizar los valores de propiedad de una existente de la referencia cultural.  
  
> [!NOTE]
>  Puede usar el <xref:System.Globalization.CultureAndRegionInfoBuilder> clase para definir, guardar y registrar las referencias culturales personalizadas que complementan o reemplazan las referencias culturales existentes. El <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A?displayProperty=nameWithType> método crea un archivo de configuración regional Data Markup Language (LDML) que puede usarse para instalar una referencia cultural personalizada en los sistemas de destino. Para información paso a paso sobre el uso de la <xref:System.Globalization.CultureAndRegionInfoBuilder> clase para crear una nueva o la referencia cultural de reemplazo, vea el <xref:System.Globalization.CultureAndRegionInfoBuilder> tema de la clase.  
  
 Dado que .NET Framework admite las referencias culturales personalizadas, debe considerar lo siguiente al trabajar con datos de referencia cultural específica:  
  
-   Las referencias culturales personalizadas pueden tener valores que superen los intervalos de las referencias culturales predefinidos. Por ejemplo, algunas referencias culturales tienen nombres de mes largos, fecha inesperado o formatos de hora u otros datos inusuales.  
  
-   Cuando muestra datos específicos de la referencia cultural en la interfaz de usuario, debe respetar las personalizaciones del usuario; Por ejemplo, el usuario podría desear un reloj de 24 horas o un formato de fecha AAAAMMDD.  
  
-   Recuerde que las referencias culturales personalizadas invalidan los valores de forma predeterminada. Por tanto, no se puede considerar los datos de referencia cultural que sean estables. Nombres de los países, formatos de número y fecha y ortografías pueden cambiar en el futuro. Si desea serializar los datos de la referencia cultural como cadenas de fecha y hora en que se pasarán a la fecha y hora de funciones de análisis, debe usar la referencia cultural invariable o una específica.  
  
 El <xref:System.Globalization.CultureInfo.CultureTypes%2A> incluye el valor de propiedad de las referencias culturales personalizadas instalado en un sistema el <xref:System.Globalization.CultureTypes?displayProperty=nameWithType> marca y las referencias culturales personalizadas se asignan una <xref:System.Globalization.CultureInfo.LCID%2A> el valor de propiedad `LOCALE_CUSTOM_UNSPECIFIED` (0 x 1000 o 4096). Tenga en cuenta que, a partir de Windows 10, este valor también está asignado a referencias culturales definidas por el sistema que no tienen datos de referencia culturales completo.  

## <a name="cultureinfo-and-cultural-data"></a>Datos de referencia culturales y CultureInfo

.NET se deriva sus datos de referencia culturales de uno de diversos orígenes, dependiendo de la implementación, la plataforma y versión:

- En .NET Framework 3.5 y versiones anteriores, el sistema operativo de Windows y .NET Framework proporciona datos de referencia culturales.

- En .NET Framework 4 y versiones posteriores, los datos de referencia culturales se proporcionan por el sistema operativo de Windows.

- En todas las versiones de .NET Core que se ejecutan en Windows, el sistema operativo de Windows proporciona datos de referencia culturales.

- En todas las versiones de .NET Core que se ejecutan en plataformas Unix, proporciona datos de referencia culturales del [International Components for Unicode (ICU) biblioteca](http://site.icu-project.org/). La versión específica de la biblioteca de ICU depende del sistema operativo individual.

Por este motivo, no estén disponible en una implementación, plataforma o versión diferente de .NET una referencia cultural disponible en una determinada implementación. NET, plataforma o versión.

Algunos `CultureInfo` objetos varían según la plataforma subyacente. En concreto, "zh-CN", o chino (simplificado, China) y zh-TW o chino (tradicional, Taiwán), es referencias culturales disponibles en sistemas Windows, pero son referencias culturales con alias en sistemas Unix. "zh-CN" es un alias para la referencia cultural "zh-Hans-CN" y "zh-TW" es un alias para la referencia cultural "zh-Hant-TW". Referencias culturales con alias no se devuelven mediante llamadas a la <xref:System.Globalization.CultureInfo.GetCultures%2A> método y puede tener distintos valores de propiedad, incluidas distintas <xref:System.Globalization.CultureInfo.Parent> las referencias culturales que sus equivalentes de Windows. Para las referencias culturales zh-CN y zh-TW, estos differenes incluyen lo siguiente:

- En los sistemas Windows, la referencia cultural principal de la referencia cultural "zh-CN" es "zh-Hans" y la referencia cultural principal de la referencia cultural "zh-TW" es "zh-Hant". La referencia cultural principal de ambos estas referencias culturales es "zh". En sistemas Unix, los elementos primarios de ambas referencias culturales son "zh". Esto significa que, si no proporciona recursos específicos de la referencia cultural para las referencias culturales "zh-CN" o "zh-TW", pero especifique recursos neutros "zh-Hans" o "zh-Hant" cultura, la aplicación cargará los recursos de la referencia cultural neutra en Windows, pero no en Unix . En sistemas Unix, debe establecer explícitamente el subproceso <xref:System.Globalization.CultureInfo.CurrentUICulture> "zh-Hans" o "zh-Hant". 

- En los sistemas de Windows, una llamada a <xref:System.Globalization.CultureInfo.Equals%2A?displayProperty=nameWithType> en una instancia que representa la referencia cultural "zh-CN" y pasándole una instancia de "zh-Hans-CN" devuelve `true`. En sistemas Unix, se devuelve la llamada al método `false`. Este comportamiento también se aplica a una llamada a <xref:System.Globalization.CultureInfo.Equals%2A> en un "zh-TW" <xref:System.Globalization.CultureInfo> instancia y pasarlo en una instancia de "zh-Hant-Tw".

<a name="Dynamic"></a>   
## <a name="dynamic-culture-data"></a>Datos de referencia cultural dinámico  
 Excepto la referencia cultural, los datos de referencia cultural están dinámicos. Esto es verdad incluso para las referencias culturales predefinidas. Por ejemplo, los países o regiones adoptan nuevas monedas, cambian la ortografía de sus palabras o cambiar su calendario preferido y cambiarán las definiciones de la referencia cultural para realizar un seguimiento de esto.  Las referencias culturales personalizadas están sujetos a cambios sin previo aviso y cualquier referencia cultural específica puede ser reemplazada por una referencia cultural personalizada. Además, como se describe a continuación, un usuario individual puede invalidar las preferencias culturales. Las aplicaciones siempre deben obtener los datos de referencia cultural en tiempo de ejecución.  
  
> [!CAUTION]
>  Al guardar los datos, la aplicación debe usar la referencia cultural invariable, un formato binario o un formato independiente de la referencia cultural específico. Datos guardados según los valores actuales asociados con una referencia cultural determinada, que no sea la referencia cultural invariable, es posible que no sea legible o podrían cambiar en significado si esa referencia cultural cambia.  
  
<a name="Current"></a>   
## <a name="the-current-culture-and-current-ui-culture"></a>La referencia cultural actual y la referencia cultural de interfaz de usuario actual  
 Todos los subprocesos en una aplicación .NET tienen una referencia cultural actual y una referencia cultural de interfaz de usuario actual. La referencia cultural determina las convenciones de formato de fechas, horas, números y los valores de moneda, el criterio de ordenación de texto, las convenciones de mayúsculas y minúsculas y las maneras en que se comparan cadenas. La referencia cultural de interfaz de usuario actual se usa para recuperar recursos específicos de referencias culturales en tiempo de ejecución.  
  
> [!NOTE]
>  Para obtener información sobre cómo se determina la referencia cultural de interfaz de usuario actual y actual por subproceso, vea el [referencia cultural y los subprocesos](#Threads) sección. Para obtener información sobre cómo se determina la referencia cultural de interfaz de usuario actual y actual de subprocesos en ejecución en un nuevo dominio de aplicación y en los subprocesos que cruzan los límites del dominio de aplicación, vea el [referencia cultural y los dominios de aplicación](#AppDomain) sección. Para obtener información sobre cómo se determina el actual y actual de subprocesos que realizan operaciones asincrónicas basadas en tareas, consulte el [referencia cultural y operaciones asincrónicas basadas en tareas](#Async) sección.  
  
 Para obtener más información sobre la referencia cultural actual, consulte el <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> tema de la propiedad. Para obtener más información sobre la referencia cultural de interfaz de usuario actual, consulte el <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> tema de la propiedad.  
  
### <a name="retrieving-the-current-and-current-ui-cultures"></a>Recuperando las referencias culturales de interfaz de usuario actuales y actuales  
 Puede obtener un <xref:System.Globalization.CultureInfo> objeto que representa la referencia cultural actual de dos maneras:  
  
-   Recuperando el valor de la <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> propiedad.  
  
-   Recuperando el valor de la [Thread.CurrentThread.CurrentCulture](<xref:System.Threading.Thread.CurrentCulture>) propiedad.  
  
 El siguiente ejemplo se recupera ambos valores de propiedad, se compara para mostrar que son iguales y muestra el nombre de la referencia cultural actual.  
  
 [!code-csharp[System.Globalization.CultureInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/Current1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/Current1.vb#1)]  
  
 Puede obtener un <xref:System.Globalization.CultureInfo> objeto que representa la referencia cultural actual de la interfaz de usuario de dos maneras:  
  
-   Recuperando el valor de la <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> propiedad.  
  
-   Recuperando el valor de la [Thread.CurrentThread.CurrentUICulture](<xref:System.Threading.Thread.CurrentUICulture>) propiedad.  
  
 El siguiente ejemplo se recupera ambos valores de propiedad, se compara para mostrar que son iguales y muestra el nombre de la referencia cultural de interfaz de usuario actual.  
  
 [!code-csharp[System.Globalization.CultureInfo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/CurrentUI1.cs#2)]
 [!code-vb[System.Globalization.CultureInfo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/CurrentUI1.vb#2)]  
  
### <a name="setting-the-current-and-current-ui-cultures"></a>Configuración de las referencias culturales de interfaz de usuario actuales y actuales  
 Para cambiar la referencia cultural y la referencia cultural de interfaz de usuario de un subproceso, realice lo siguiente:  
  
1.  Crear una instancia de un <xref:System.Globalization.CultureInfo> objeto que representa esa referencia cultural mediante una llamada a un <xref:System.Globalization.CultureInfo> clase constructor y pásele el nombre de la referencia cultural. El <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> constructor crea un <xref:System.Globalization.CultureInfo> objeto que refleja el usuario reemplaza si la nueva referencia cultural es igual que la referencia cultural actual de Windows.   El <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29> constructor le permite especificar si la instancia recién creada <xref:System.Globalization.CultureInfo> objeto refleja las invalidaciones de usuario si la nueva referencia cultural es igual que la referencia cultural actual de Windows.  
  
2.  Asignar el <xref:System.Globalization.CultureInfo> de objeto para el <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> o <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> propiedad en .NET Core y .NET Framework 4.6 y versiones posteriores. (En .NET Framework 4.5.2 y versiones anteriores, youc asignar el `CultureInfo` de objeto para el <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> o <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> propiedad.)   
  
 El ejemplo siguiente recupera la referencia cultural actual. Si es distinto de la referencia cultural Francés (Francia), cambia la referencia cultural actual al francés (Francia). En caso contrario, cambia la referencia cultural actual a francés (Luxemburgo).  
  
 [!code-csharp[System.Globalization.CultureInfo#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/Change1.cs#3)]
 [!code-vb[System.Globalization.CultureInfo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/Change1.vb#3)]  
  
 El ejemplo siguiente recupera la referencia cultural actual. Si todo lo demás es la referencia cultural esloveno (Eslovenia), cambia la referencia cultural actual a esloveno (Eslovenia). En caso contrario, cambia la referencia cultural actual a croata (Croacia).  
  
 [!code-csharp[System.Globalization.CultureInfo#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/ChangeUI1.cs#4)]
 [!code-vb[System.Globalization.CultureInfo#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/ChangeUI1.vb#4)]  
  
<a name="GetAll"></a>   
## <a name="getting-all-cultures"></a>Obtener todas las referencias culturales  
 Puede recuperar un categorías específicas de matriz de referencias culturales o de las referencias culturales disponibles en el equipo local mediante una llamada a la <xref:System.Globalization.CultureInfo.GetCultures%2A> método. Por ejemplo, puede recuperar las referencias culturales personalizadas, referencias culturales específicas o las referencias culturales neutras solos o en combinación.  
  
 El ejemplo siguiente se llama el <xref:System.Globalization.CultureInfo.GetCultures%2A> método dos veces, primero con el <xref:System.Globalization.CultureTypes?displayProperty=nameWithType> miembro de enumeración para recuperar todas las referencias culturales personalizadas y, a continuación, con el <xref:System.Globalization.CultureTypes?displayProperty=nameWithType> miembro de enumeración para recuperar todas las referencias culturales de reemplazo.  
  
 [!code-csharp[System.Globalization.CultureInfo#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/GetCultures1.cs#5)]
 [!code-vb[System.Globalization.CultureInfo#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/GetCultures1.vb#5)]  
  
<a name="Threads"></a>   
## <a name="culture-and-threads"></a>Referencia cultural y los subprocesos  
 Cuando se inicia un nuevo subproceso de aplicación, su referencia cultural actual y la actual referencia cultural de interfaz de usuario se definen por la referencia cultural actual del sistema y no por la referencia cultural del subproceso actual. En el siguiente ejemplo se ilustra la diferencia. Establece la referencia cultural actual y la actual referencia cultural de interfaz de usuario de un subproceso de aplicación a la referencia cultural de francés (Francia) (fr-FR). Si la referencia cultural actual ya está fr-FR, en el ejemplo se establece en la referencia cultural de inglés (Estados Unidos) (en-US). Muestra tres números aleatorios como valores de moneda y, a continuación, crea un nuevo subproceso, que, a su vez, muestra tres números aleatorios más valores de moneda. Pero como la salida se muestra en el ejemplo, los valores de moneda mostrados por el nuevo subproceso no reflejan las convenciones de formato de la referencia cultural de francés (Francia), a diferencia de la salida desde el subproceso principal de la aplicación.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Thread#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/cs/defaultthread1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Class.Thread#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/vb/defaultthread1.vb#1)]  
  
 En las versiones de .NET Framework anteriores a la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], más comunes para asegurarse de que el subproceso principal de la aplicación comparte la misma referencia cultural con todos los demás subprocesos de trabajo consiste en pasar el nombre de la referencia cultural de toda la aplicación o un <xref:System.Globalization.CultureInfo> de objeto que representa la referencia cultural de toda la aplicación a un <xref:System.Threading.ParameterizedThreadStart?displayProperty=nameWithType> delegar. El ejemplo siguiente usa este enfoque para asegurarse de que los valores de moneda mostrados por dos subprocesos reflejan las convenciones de formato de la misma referencia cultural.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Thread#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/cs/perthread1.cs#2)]
 [!code-vb[System.Globalization.CultureInfo.Class.Thread#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/vb/perthread1.vb#2)]  
  
 Puede establecer la referencia cultural y la referencia cultural de interfaz de usuario del subproceso del grupo de subprocesos de manera similar mediante una llamada a la <xref:System.Threading.ThreadPool.QueueUserWorkItem%28System.Threading.WaitCallback%2CSystem.Object%29?displayProperty=nameWithType> método.  
  
 A partir de la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], puede establecer la referencia cultural y la referencia cultural de interfaz de usuario de todos los subprocesos en un dominio de aplicación más directamente mediante la asignación de un <xref:System.Globalization.CultureInfo> objeto que representa esa referencia cultural a la <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> y <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> propiedades. El ejemplo siguiente utiliza estas propiedades para asegurarse de que todos los subprocesos en el dominio de aplicación predeterminado comparten la misma referencia cultural.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Thread#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/cs/setthreads1.cs#3)]
 [!code-vb[System.Globalization.CultureInfo.Class.Thread#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/vb/setthreads1.vb#3)]  
  
> [!WARNING]
>  Aunque el <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> y <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> las propiedades son miembros estáticos, que definen la referencia cultural predeterminada y la referencia cultural de interfaz de usuario predeterminada solo para el dominio de aplicación que esté vigente en el momento en que se establecen estos valores de propiedad. Para obtener más información, consulte la sección siguiente, [referencia cultural y los dominios de aplicación](#AppDomain).  
  
 Al asignar valores a la <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> y <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> propiedades, la referencia cultural y la referencia cultural de interfaz de usuario de los subprocesos en el dominio de aplicación también cambiarán si ha no se ha asignado explícitamente una referencia cultural. Sin embargo, estos subprocesos reflejan la nueva configuración de la referencia cultural solo mientras se ejecutan en el dominio de aplicación actual. Si estos subprocesos se ejecutan en otro dominio de aplicación, su referencia cultural se convierte en la referencia cultural predeterminada definida para ese dominio de aplicación. Como resultado, se recomienda que siempre se establece la referencia cultural del subproceso principal de la aplicación y no depender de la <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> y <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> propiedades para cambiarlo.  
  
<a name="AppDomain"></a>   
## <a name="culture-and-application-domains"></a>Dominios de referencia cultural y la aplicación  
 <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> y <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> son propiedades estáticas que definen explícitamente una referencia cultural predeterminada solo para el dominio de aplicación actual cuando se establece o recupera el valor de propiedad. El ejemplo siguiente se establece la referencia cultural predeterminada y la referencia cultural de interfaz de usuario predeterminada en el dominio de aplicación predeterminado a francés (Francia) y, a continuación, usa el <xref:System.AppDomainSetup> clase y el <xref:System.AppDomainInitializer> delegado para establecer la referencia cultural predeterminada y la referencia cultural de interfaz de usuario en un nuevo dominio de aplicación Ruso (Rusia). Un único subproceso, a continuación, ejecuta dos métodos en cada dominio de aplicación. Tenga en cuenta que el subproceso de la referencia cultural y referencia cultural de interfaz de usuario no se establecen explícitamente; se deriven de la referencia cultural predeterminada y la referencia cultural de interfaz de usuario del dominio de aplicación en el que se está ejecutando el subproceso. Tenga en cuenta también que la <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> y <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> propiedades devuelven el valor predeterminado <xref:System.Globalization.CultureInfo> valores del dominio de aplicación actual cuando se realiza la llamada al método.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.AppDomain#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.appdomain/cs/appdomainex1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Class.AppDomain#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.appdomain/vb/appdomainex1.vb#1)]  
  
 Para obtener más información acerca de las referencias culturales y dominios de aplicación, consulte la sección "Dominios de aplicación y subprocesos" en el [dominios de aplicación](~/docs/framework/app-domains/application-domains.md) tema.  
  
<a name="Async"></a>   
## <a name="culture-and-task-based-asynchronous-operations"></a>Referencia cultural y operaciones asincrónicas basadas en tareas  
 El [modelo de programación asincrónico basado en tareas](~/docs/standard/parallel-programming/task-based-asynchronous-programming.md) usa <xref:System.Threading.Tasks.Task> y <xref:System.Threading.Tasks.Task%601> objetos que se va a ejecutar de manera asincrónica los delegados en subprocesos del grupo de subprocesos. El subproceso concreto en el que se ejecuta una tarea determinada no se conoce de antemano, pero se determina en tiempo de ejecución.  
  
 Para las aplicaciones que tienen como destino el [!INCLUDE[net_v46](~/includes/net-v46-md.md)] o versiones posteriores, la referencia cultural es parte del contexto de una operación asincrónica. En otras palabras, empezando por las aplicaciones que tienen como destino el [!INCLUDE[net_v46](~/includes/net-v46-md.md)], las operaciones asincrónicas de forma predeterminada heredan los valores de la <xref:System.Globalization.CultureInfo.CurrentCulture%2A> y <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> propiedades del subproceso desde el que se inician. Si la referencia cultural actual o la referencia cultural de interfaz de usuario actual es diferente de la referencia cultural del sistema, la referencia cultural actual cruza límites de subprocesos y se convierte en la referencia cultural del subproceso de grupo que se está ejecutando una operación asincrónica.  
  
 Esto se muestra en el ejemplo siguiente. Usa el <xref:System.Runtime.Versioning.TargetFrameworkAttribute> atributo al destino la [!INCLUDE[net_v46](~/includes/net-v46-md.md)]. El ejemplo define un <xref:System.Func%601> delegar, `formatDelegate`, que devuelve algunos números con formato de los valores de moneda. El ejemplo cambia la referencia cultural del sistema actual a francés (Francia) o bien, si francés (Francia) es la referencia cultural actual, inglés (Estados Unidos). A continuación:  
  
-   Invoca al delegado directamente para que se ejecute de forma sincrónica en el subproceso de aplicación principal.  
  
-   Crea una tarea que ejecuta al delegado de forma asincrónica en un subproceso ThreadPool.  
  
-   Crea una tarea que se ejecuta sincrónicamente el delegado en el subproceso de aplicación principal mediante una llamada a la <xref:System.Threading.Tasks.Task.RunSynchronously%2A?displayProperty=nameWithType> método.  
  
 Como muestra el resultado del ejemplo, cuando se cambia la referencia cultural actual al francés (Francia), la referencia cultural del subproceso desde el que las tareas se invocan de forma asincrónica se convierte en la referencia cultural actual para esa operación asincrónica.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Async#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/cs/asyncculture1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Class.Async#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/vb/asyncculture1.vb#1)]  
  
 Para las aplicaciones destinadas a versiones de .NET Framework anteriores a la [!INCLUDE[net_v46](~/includes/net-v46-md.md)], o para las aplicaciones que tienen como destino una versión concreta de .NET Framework, la referencia cultural del subproceso que realiza la llamada no forma parte del contexto de una tarea. En su lugar, a menos que se define explícitamente, la referencia cultural de los nuevos subprocesos de forma predeterminada es la referencia cultural del sistema. El ejemplo siguiente, que es idéntico al ejemplo anterior, salvo que carece la <xref:System.Runtime.Versioning.TargetFrameworkAttribute> atributo, se muestra cómo hacerlo. Debido a que la referencia cultural del sistema en el que se ejecuta el ejemplo era inglés (Estados Unidos), la referencia cultural de la tarea que se ejecuta de forma asincrónica en un subproceso del grupo de subprocesos es en-US, en lugar de fr-FR.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Async#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/cs/asyncculture2.cs#2)]
 [!code-vb[System.Globalization.CultureInfo.Class.Async#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/vb/asyncculture2.vb#2)]  
  
 Para las aplicaciones destinadas a versiones de .NET Framework desde el [!INCLUDE[net_v45](~/includes/net-v45-md.md)] y más adelante, pero antes de la [!INCLUDE[net_v46](~/includes/net-v46-md.md)], puede usar el <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> y <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> las tareas de propiedades para asegurarse de que se usa la referencia cultural del subproceso que realiza la llamada asincrónica ejecutar en subprocesos de grupo. El ejemplo siguiente es idéntico al ejemplo anterior, salvo que usa el <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> propiedad para garantizar que ese subproceso del grupo de subprocesos tiene la misma referencia cultural que el subproceso de aplicación principal.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Async#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/cs/asyncculture3.cs#3)]
 [!code-vb[System.Globalization.CultureInfo.Class.Async#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/vb/asyncculture3.vb#3)]  
  
 <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> y <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> es por aplicación propiedades de dominio; es decir, que establece una referencia cultural predeterminada para todos los subprocesos asignan no explícitamente una referencia cultural en un dominio de aplicación concreto. Sin embargo, para las aplicaciones que tienen como destino el [!INCLUDE[net_v46](~/includes/net-v46-md.md)] o versiones posteriores, la referencia cultural del subproceso que realiza la llamada se mantiene parte del contexto de una tarea asincrónica incluso si la tarea cruza los límites del dominio de aplicación.  
  
 El ejemplo siguiente se muestra que la referencia cultural del subproceso que realiza la llamada permanece la referencia cultural actual de una operación asincrónica basada en tareas incluso si el método que se está ejecutando la tarea cruza los límites del dominio de aplicación. Se define una clase, `DataRetriever`, con un único método, `GetFormattedNumber`, que devuelve un número de punto flotante de precisión doble aleatorio entre 1 y 1.000 con formato como un valor de divisa. Se ejecuta una tarea de la primera que simplemente crea una instancia de un `DataRetriever` instancia y llama a su `GetFormattedNumber` método. Una segunda tarea informa de su dominio de aplicación actual, se crea un nuevo dominio de aplicación, crea una instancia de un `DataRetriever` instancia en el nuevo dominio de aplicación y llama a su `GetFormattedNumber` método. Como se muestra el resultado del ejemplo, la referencia cultural actual ha permanecido igual en ambas el subproceso de llamada, la primera tarea y la segunda tarea cuando estaba ejecutando en el dominio de aplicación principal y el segundo dominio de aplicación.  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Async#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/cs/asyncculture4.cs#4)]
 [!code-vb[System.Globalization.CultureInfo.Class.Async#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/vb/asyncculture4.vb#4)]  
  
<a name="Serialization"></a>  
## <a name="cultureinfo-object-serialization"></a>Serialización de objeto CultureInfo  
 Cuando un <xref:System.Globalization.CultureInfo> se serializa el objeto, todo lo que se almacena realmente es <xref:System.Globalization.CultureInfo.Name%2A> y <xref:System.Globalization.CultureInfo.UseUserOverride%2A>. Resulta correctamente deserializado en un entorno donde que <xref:System.Globalization.CultureInfo.Name%2A> tiene el mismo significado. Los tres ejemplos siguientes muestran por qué no es siempre el caso:  
  
- Si el <xref:System.Globalization.CultureInfo.CultureTypes%2A> es el valor de propiedad <xref:System.Globalization.CultureTypes.InstalledWin32Cultures?displayProperty=nameWithType>, y si esa referencia cultural se introdujo por primera vez en una versión concreta del sistema operativo Windows, no es posible deserializarlo en una versión anterior de Windows. Por ejemplo, si una referencia cultural se introdujo en Windows 10, no se puede deserializar en Windows 8.  
  
-   Si el <xref:System.Globalization.CultureInfo.CultureTypes%2A> valor es <xref:System.Globalization.CultureTypes.UserCustomCulture?displayProperty=nameWithType>y el equipo en el que se deserializa no tiene esta referencia cultural personalizada instalada, no es posible deserializarlo.  
  
-   Si el <xref:System.Globalization.CultureInfo.CultureTypes%2A> valor es <xref:System.Globalization.CultureTypes.ReplacementCultures?displayProperty=nameWithType>y el equipo en el que se deserializa no tiene esta referencia cultural de reemplazo, se deserializa en el mismo nombre, pero no todas las mismas características. Por ejemplo, si en-US es una referencia cultural de reemplazo en el equipo, pero no en el equipo B y si un <xref:System.Globalization.CultureInfo> de objeto que hace referencia a esta referencia cultural se serializa en el equipo y se deserializa en el equipo B, a continuación, ninguna de las características de la referencia cultural personalizadas es transmite. La referencia cultural deserializa correctamente, pero con un significado diferente.  
  
<a name="CPanel"></a>   
## <a name="control-panel-overrides"></a>Invalida el Panel de control  
 El usuario puede optar por invalidar algunos de los valores asociados con la referencia cultural actual de Windows a través de la parte de opciones de configuración regional y de idioma del Panel de Control. Por ejemplo, el usuario podría elegir para mostrar la fecha en un formato diferente o use una divisa distinta a la predeterminada para la referencia cultural. En general, las aplicaciones deben respetar estas invalidaciones del usuario.  
  
 Si <xref:System.Globalization.CultureInfo.UseUserOverride%2A> es `true` y la referencia cultural especificada coincide con la referencia cultural actual de Windows, el <xref:System.Globalization.CultureInfo> utiliza las nuevas, incluida la configuración de usuario para las propiedades de la <xref:System.Globalization.DateTimeFormatInfo> instancia devuelta por la <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> propiedad, y las propiedades de la <xref:System.Globalization.NumberFormatInfo> instancia devuelta por la <xref:System.Globalization.CultureInfo.NumberFormat%2A> propiedad. Si la configuración de usuario no es compatible con la referencia cultural asociada con el <xref:System.Globalization.CultureInfo>, por ejemplo, si el calendario seleccionado no es uno de los <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, los resultados de los métodos y los valores de las propiedades no están definidos.  
  
<a name="AlternateSort"></a>   
## <a name="alternate-sort-orders"></a>Criterios de ordenación alternativos  
 Algunas referencias culturales admiten más de un criterio de ordenación. Por ejemplo:  
  
-   La referencia cultural de español (España) tiene dos criterios de ordenación: el criterio de ordenación internacional predeterminada y el criterio de ordenación tradicional. Cuando cree una instancia un <xref:System.Globalization.CultureInfo> objeto con el nombre de referencia cultural es-es al directorio, se utiliza el criterio de ordenación internacional. Cuando cree una instancia un <xref:System.Globalization.CultureInfo> objeto con el nombre de la referencia cultural es-tradnl-ES, se utiliza el criterio de ordenación tradicional.  
  
-   La referencia cultural zh-CN (chino (simplificado, RPC)) es compatible con dos criterios de ordenación: por pronunciación (predeterminado) y por número de trazos. Cuando cree una instancia un <xref:System.Globalization.CultureInfo> objeto con el nombre de referencia cultural zh-CN, se utiliza el criterio de ordenación predeterminado. Cuando cree una instancia un <xref:System.Globalization.CultureInfo> objeto con un identificador local de 0 x 00020804, las cadenas se ordenan por número de trazos.  
  
 En la tabla siguiente se enumeran las referencias culturales que admiten criterios de ordenación alternativos, y los identificadores para los criterios de ordenación predeterminados y alternativos.  
  
|Nombre de referencia cultural|culture|Nombre e identificador de ordenación predeterminada|Nombre e identificador de ordenación alternativa|  
|------------------|-------------|--------------------------------------|----------------------------------------|  
|es-ES|Español (España)|Internacional: 0x00000C0A|Tradicional: 0x0000040A|  
|zh-TW|Chino (Taiwán)|Número de trazos: 0x00000404|Bopomofo: 0x00030404|  
|zh-CN|Chino (RPC)|Pronunciación: 0x00000804|Número de trazos: 0x00020804|  
|zh-HK|Chino (Zona administrativa especial de Hong Kong)|Número de trazos: 0x00000c04|Número de trazos: 0x00020c04|  
|zh-sg|Chino (Singapur)|Pronunciación: 0x00001004|Número de trazos: 0x00021004|  
|zh-MO|Chino (Macao RAE)|Pronunciación: 0x00001404|Número de trazos: 0x00021404|  
|ja-JP|Japonés (Japón)|Predeterminada: 0x00000411|Unicode: 0x00010411|  
|ko-KR|Coreano (Corea)|Predeterminada: 0x00000412|Xwansung coreano - Unicode: 0x00010412|  
|de-DE|Alemán (Alemania)|Diccionario: 0x00000407|Ordenación de libreta de teléfonos DIN: 0x00010407|  
|hu-HU|Húngaro (Hungría)|Predeterminada: 0x0000040e|Ordenación técnica: 0x0001040e|  
|ka-GE|Georgiano (Georgia)|Tradicional: 0x00000437|Alfabetización internacional: 0x00010437|  
  
<a name="Windows"></a>   
## <a name="the-current-culture-and-uwp-apps"></a>La referencia cultural actual y las aplicaciones para UWP  
 En las aplicaciones de la plataforma Universal de Windows (UWP), el <xref:System.Globalization.CultureInfo.CurrentCulture%2A> y <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> propiedades son de lectura y escritura, tal como aparecen en las aplicaciones de .NET Framework y .NET Core. Sin embargo, las aplicaciones para UWP reconocen una sola referencia cultural. El <xref:System.Globalization.CultureInfo.CurrentCulture%2A> y <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> mapa de propiedades en el primer valor de la [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) colección.  

En las aplicaciones de .NET Framework y .NET Core, la referencia cultural actual es una configuración de cada subproceso y el <xref:System.Globalization.CultureInfo.CurrentCulture%2A> y <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> propiedades reflejan la referencia cultural y la referencia cultural de interfaz de usuario de solo el subproceso actual. En aplicaciones UWP, la referencia cultural actual se asigna a la [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) colección, que es una configuración global. Establecer el <xref:System.Globalization.CultureInfo.CurrentCulture%2A> o <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> propiedad cambia la referencia cultural de la aplicación completa; no se puede establecer la referencia cultural en una base por subproceso.
  
## Examples  
 El ejemplo siguiente muestra cómo crear un <xref:System.Globalization.CultureInfo> objeto para el idioma de español (España) con la ordenación internacional y otro <xref:System.Globalization.CultureInfo> objeto con la ordenación tradicional.  
  
 [!code-cpp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CPP/spanishspain.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CS/spanishspain.cs#1)]
 [!code-vb[System.Globalization.CultureInfo_esES#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/VB/spanishspain.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.CultureAndRegionInfoBuilder" />
    <altmember cref="T:System.Globalization.RegionInfo" />
    <related type="Article" href="/globalization/index">Ir al Centro para desarrolladores Global</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Globalization.CultureInfo" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureInfo (int culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CultureInfo(int culture);" />
      <MemberSignature Language="F#" Value="new System.Globalization.CultureInfo : int -&gt; System.Globalization.CultureInfo" Usage="new System.Globalization.CultureInfo culture" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="culture">Identificador <see cref="T:System.Globalization.CultureInfo" /> predefinido, propiedad <see cref="P:System.Globalization.CultureInfo.LCID" /> de un objeto <see cref="T:System.Globalization.CultureInfo" /> existente, o identificador de referencia cultural solo de Windows.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Globalization.CultureInfo" /> de acuerdo con la referencia cultural especificada por el identificador de dicha referencia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identificadores de referencias culturales predefinidos se incluyen en el [referencia de National Language Support (NLS) API](https://go.microsoft.com/fwlink/?LinkId=200048) en el centro de desarrolladores Go Global.  
  
 En la mayoría de los casos, el `culture` parámetro se asigna a la correspondiente identificador de configuración regional de National Language Support (NLS). El valor de la `culture` parámetro se convierte en el valor de la <xref:System.Globalization.CultureInfo.LCID%2A> propiedad del nuevo <xref:System.Globalization.CultureInfo>.  
  
 Se recomienda que llame al constructor de la configuración regional <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType>, porque los nombres de configuración regional son preferibles a los LCID. Para las configuraciones regionales personalizadas, se requiere un nombre de la configuración regional.  
  
 El usuario puede optar por invalidar algunos de los valores asociados con la referencia cultural actual de Windows a través de la parte de opciones de configuración regional y de idioma del Panel de Control. Por ejemplo, el usuario podría elegir para mostrar la fecha en un formato diferente o use una divisa distinta a la predeterminada para la referencia cultural. Si el identificador de referencia cultural especificada coincide con el identificador de referencia cultural de la referencia cultural actual de Windows, este constructor crea un <xref:System.Globalization.CultureInfo> que utiliza las nuevas, incluida la configuración de usuario para las propiedades de la <xref:System.Globalization.DateTimeFormatInfo> instancia devuelta por la <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> propiedad y las propiedades de la <xref:System.Globalization.NumberFormatInfo> instancia devuelta por la <xref:System.Globalization.CultureInfo.NumberFormat%2A> propiedad. Si la configuración de usuario no es compatible con la referencia cultural asociada con el <xref:System.Globalization.CultureInfo> (por ejemplo, si el calendario seleccionado no es uno de los <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>) los resultados de los métodos y los valores de las propiedades no están definidos.  
  
 Si el identificador de referencia cultural especificada no coincide con el identificador de la referencia cultural actual de Windows, este constructor crea un <xref:System.Globalization.CultureInfo> que usa los valores predeterminados para la referencia cultural especificada.  
  
 El <xref:System.Globalization.CultureInfo.UseUserOverride%2A> propiedad siempre está establecida en `true`.  
  
 Por ejemplo, suponga que árabe (Arabia Saudí) es la referencia cultural actual de Windows y el usuario ha cambiado el calendario en Hijri a gregoriano.  
  
-   Con `CultureInfo("0x0401")` (referencia cultural ar-SA de nombre), <xref:System.Globalization.CultureInfo.Calendar%2A> está establecido en <xref:System.Globalization.GregorianCalendar> (que es la configuración de usuario) y <xref:System.Globalization.CultureInfo.UseUserOverride%2A> está establecido en `true`.  
  
-   Con `CultureInfo("0x041E")` (referencia cultural nombre th-TH), <xref:System.Globalization.CultureInfo.Calendar%2A> está establecido en <xref:System.Globalization.ThaiBuddhistCalendar> (que es el calendario predeterminado para th-TH) y <xref:System.Globalization.CultureInfo.UseUserOverride%2A> está establecido en `true`.  
  
 Las referencias culturales que utilizan el euro, .NET Framework y Windows XP establecen la moneda predeterminada euro como. Sin embargo, las versiones anteriores de Windows no lo hacen. Por lo tanto, si el usuario de una versión anterior de Windows no ha cambiado el valor de moneda a través de la parte de opciones de configuración regional y de idioma del Panel de Control, la moneda podría ser incorrecta. Para usar la configuración predeterminada de .NET Framework para la moneda, la aplicación debe utilizar un <xref:System.Globalization.CultureInfo> sobrecarga del constructor que acepta un `useUserOverride` parámetro y establézcalo en `false`.  
  
> [!NOTE]
>  Para hacia atrás compatibilidad, una referencia cultural que se construye utilizando un `culture` parámetro de 0 x 0004 o 0x7c04 tendrá un <xref:System.Globalization.CultureInfo.Name%2A> propiedad de zh-CHS o zh-CHT, respectivamente. En su lugar, es preferible construir la referencia cultural mediante los nombres de referencia cultural estándar actual de zh-Hans o zh-Hant, a menos que tenga una razón para usar los nombres antiguos.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="culture" /> es menor que cero.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException"><paramref name="culture" /> no es un identificador de referencia cultural válido. Vea la sección Notas para los llamadores para obtener más información.</exception>
        <block subset="none" type="usage"><para>El [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] y versiones anteriores a producir un <see cref="T:System.ArgumentException" /> si <paramref name="culture" /> no es un identificador de referencia cultural válido. A partir de la [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], el constructor produce una <see cref="T:System.Globalization.CultureNotFoundException" />. A partir de las aplicaciones que se ejecutan en el [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] o posterior en Windows 7 o versiones posteriores, el método intenta recuperar un <see cref="T:System.Globalization.CultureInfo" /> objeto cuyo identificador es <paramref name="culture" /> desde el sistema operativo; si el sistema operativo no admite esa referencia cultural, el método produce una <see cref="T:System.Globalization.CultureNotFoundException" /> excepción.</para></block>
        <altmember cref="P:System.Globalization.CultureInfo.LCID" />
        <altmember cref="P:System.Globalization.CultureInfo.UseUserOverride" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureInfo (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CultureInfo(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Globalization.CultureInfo : string -&gt; System.Globalization.CultureInfo" Usage="new System.Globalization.CultureInfo name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nombre de <see cref="T:System.Globalization.CultureInfo" /> predefinido, <see cref="P:System.Globalization.CultureInfo.Name" /> de un <see cref="T:System.Globalization.CultureInfo" /> existente, o nombre de referencia cultural solo de Windows. <paramref name="name" /> no distingue entre mayúsculas y minúsculas.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Globalization.CultureInfo" /> de acuerdo con la referencia cultural especificada mediante un nombre.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener una lista de nombres de referencias culturales predefinidos, vea la [referencia de National Language Support (NLS) API](https://go.microsoft.com/fwlink/?LinkId=200048) en el centro de desarrolladores Go Global. Además, a partir de Windows 10, `name` puede ser cualquier etiqueta de idioma BCP-47 válida.  
  
 Si `name` es <xref:System.String.Empty?displayProperty=nameWithType>, el constructor crea una instancia de la referencia cultural invariable; esto es equivalente a recuperar el valor de la <xref:System.Globalization.CultureInfo.InvariantCulture%2A> propiedad.  
  
 El usuario puede optar por invalidar algunos de los valores asociados con la referencia cultural actual de Windows a través de la parte de opciones de configuración regional y de idioma del Panel de Control. Por ejemplo, el usuario podría elegir para mostrar la fecha en un formato diferente o use una divisa distinta a la predeterminada para la referencia cultural. Si el identificador de referencia cultural asociada `name` coincide con el identificador de referencia cultural de la cultura actual de Windows, este constructor crea un <xref:System.Globalization.CultureInfo> objeto que utiliza las nuevas, incluida la configuración de usuario para las propiedades de la <xref:System.Globalization.DateTimeFormatInfo>instancia devuelta por la <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> propiedad y las propiedades de la <xref:System.Globalization.NumberFormatInfo> instancia devuelta por la <xref:System.Globalization.CultureInfo.NumberFormat%2A> propiedad. Si la configuración de usuario no es compatible con la referencia cultural asociada con el <xref:System.Globalization.CultureInfo>, por ejemplo, si el calendario seleccionado no es uno de los <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, los resultados de los métodos y los valores de las propiedades no están definidos.  
  
 Si el identificador de referencia cultural asociada `name` no coincide con el identificador de referencia cultural de la cultura actual de Windows, este constructor crea un <xref:System.Globalization.CultureInfo> objeto que usa los valores predeterminados para la referencia cultural especificada.  
  
 El <xref:System.Globalization.CultureInfo.UseUserOverride%2A> propiedad siempre está establecida en `true`.  
  
 Por ejemplo, suponga que árabe (Arabia Saudí) es la referencia cultural actual de Windows y el usuario cambia el calendario en Hijri a gregoriano.  
  
-   Con `CultureInfo("ar-SA")`, <xref:System.Globalization.CultureInfo.Calendar%2A> está establecido en <xref:System.Globalization.GregorianCalendar> (que es la configuración de usuario) y <xref:System.Globalization.CultureInfo.UseUserOverride%2A> está establecido en `true`.  
  
-   Con `CultureInfo("th-TH")`, <xref:System.Globalization.CultureInfo.Calendar%2A> está establecido en <xref:System.Globalization.ThaiBuddhistCalendar> (que es el calendario predeterminado para th-TH) y <xref:System.Globalization.CultureInfo.UseUserOverride%2A> está establecido en `true`.  
  
 El <xref:System.Globalization.CultureInfo.LCID%2A> propiedad del nuevo <xref:System.Globalization.CultureInfo> se establece en el identificador de referencia cultural asociado con el nombre especificado.  
  
 Las referencias culturales que utilizan el euro, .NET Framework y Windows XP establecen la moneda predeterminada euro como. Sin embargo, las versiones anteriores de Windows no lo hace. Por lo tanto, si el usuario de una versión anterior de Windows no ha cambiado el valor de moneda a través de la parte de opciones de configuración regional y de idioma del Panel de Control, la moneda podría ser incorrecta. Para usar la configuración predeterminada de .NET Framework para la moneda, la aplicación debe utilizar un <xref:System.Globalization.CultureInfo> sobrecarga del constructor que acepta un `useUserOverride` parámetro y establézcalo en `false`.  
  
   
  
## Examples  
 El ejemplo siguiente recupera la referencia cultural actual. Si es distinto de la referencia cultural Francés (Francia), llama a la <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> constructor para crear instancias de un <xref:System.Globalization.CultureInfo> objeto que representa la referencia cultural de francés (Francia) y hace que la referencia cultural del subproceso actual. En caso contrario, crea una instancia de un <xref:System.Globalization.CultureInfo> objeto que representa la referencia cultural Francés (Luxemburgo) y hace que la referencia cultural actual.  
  
 [!code-csharp[System.Globalization.CultureInfo#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/Change1.cs#3)]
 [!code-vb[System.Globalization.CultureInfo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/Change1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> es null.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException"><paramref name="name" /> no es un nombre de referencia cultural válido. Para obtener más información, consulte la sección Notas para los autores de llamada.</exception>
        <block subset="none" type="usage"><para>El [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] y versiones anteriores a producir un <see cref="T:System.ArgumentException" /> si <paramref name="name" /> no es un nombre de referencia cultural válido. A partir de la [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], el constructor produce una <see cref="T:System.Globalization.CultureNotFoundException" />. A partir de las aplicaciones que se ejecutan en el [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] o posterior en Windows 7 o versiones posteriores, el método intenta recuperar un <see cref="T:System.Globalization.CultureInfo" /> objeto cuyo identificador es <paramref name="name" /> desde el sistema operativo; si el sistema operativo no admite esa referencia cultural y si <paramref name="name" /> no es el nombre de una referencia cultural complementaria o de reemplazo, el método inicia una <see cref="T:System.Globalization.CultureNotFoundException" /> excepción.</para></block>
        <altmember cref="P:System.Globalization.CultureInfo.LCID" />
        <altmember cref="P:System.Globalization.CultureInfo.UseUserOverride" />
        <altmember cref="M:System.Globalization.CultureInfo.CreateSpecificCulture(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureInfo (int culture, bool useUserOverride);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 culture, bool useUserOverride) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.#ctor(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As Integer, useUserOverride As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CultureInfo(int culture, bool useUserOverride);" />
      <MemberSignature Language="F#" Value="new System.Globalization.CultureInfo : int * bool -&gt; System.Globalization.CultureInfo" Usage="new System.Globalization.CultureInfo (culture, useUserOverride)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="useUserOverride" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="culture">Identificador <see cref="T:System.Globalization.CultureInfo" /> predefinido, propiedad <see cref="P:System.Globalization.CultureInfo.LCID" /> de un objeto <see cref="T:System.Globalization.CultureInfo" /> existente, o identificador de referencia cultural solo de Windows.</param>
        <param name="useUserOverride">Valor booleano que indica si se utiliza la configuración de referencia cultural seleccionada por el usuario (<see langword="true" />) o la configuración de referencia cultural predeterminada (<see langword="false" />).</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Globalization.CultureInfo" /> de acuerdo con la referencia cultural especificada por el identificador y con el valor booleano que especifica si se va a utilizar la configuración de referencia cultural del sistema seleccionada por el usuario.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identificadores de referencias culturales predefinidos se incluyen en el [referencia de National Language Support (NLS) API](https://go.microsoft.com/fwlink/?LinkId=200048) en el centro de desarrolladores Go Global.  
  
 En la mayoría de los casos, el `culture` parámetro se asigna a la correspondiente identificador de configuración regional de National Language Support (NLS). El valor de la `culture` parámetro se convierte en el valor de la <xref:System.Globalization.CultureInfo.LCID%2A> propiedad del nuevo <xref:System.Globalization.CultureInfo>.  
  
 Se recomienda que llame al constructor de la configuración regional <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType>, porque los nombres de configuración regional son preferibles a los LCID. Para las configuraciones regionales personalizadas, se requiere un nombre de la configuración regional.  
  
 El usuario puede optar por invalidar algunos de los valores asociados con la referencia cultural actual de Windows a través de la parte de opciones de configuración regional y de idioma del Panel de Control. Por ejemplo, el usuario podría elegir para mostrar la fecha en un formato diferente o use una divisa distinta a la predeterminada para la referencia cultural.  
  
 Las aplicaciones normalmente no deberían permitir invalidaciones del usuario. Tenga en cuenta que no permitir reemplazos no garantiza la estabilidad de los datos; Consulte la entrada de blog [no deben interpretarse como datos de referencia cultural estables (excepto invariable)](https://go.microsoft.com/fwlink/?LinkId=156850).  
  
 Si el <xref:System.Globalization.CultureInfo.UseUserOverride%2A> propiedad está establecida en `true` y el identificador de referencia cultural especificada coincide con el identificador de la referencia cultural actual de Windows, este constructor crea un <xref:System.Globalization.CultureInfo> que utiliza las nuevas, incluida la configuración de usuario para las propiedades de la <xref:System.Globalization.DateTimeFormatInfo> instancia devuelta por la <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> propiedad y las propiedades de la <xref:System.Globalization.NumberFormatInfo> instancia devuelta por la <xref:System.Globalization.CultureInfo.NumberFormat%2A> propiedad. Si la configuración de usuario no es compatible con la referencia cultural asociada con el <xref:System.Globalization.CultureInfo>, por ejemplo, si el calendario seleccionado no es uno de los <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, los resultados de los métodos y los valores de las propiedades no están definidos.  
  
 En caso contrario, este constructor crea un <xref:System.Globalization.CultureInfo> que usa los valores predeterminados para la referencia cultural especificada.  
  
 El valor de la `useUserOverride` parámetro se convierte en el valor de la <xref:System.Globalization.CultureInfo.UseUserOverride%2A> propiedad.  
  
 Por ejemplo, suponga que árabe (Arabia Saudí) es la referencia cultural actual de Windows y el usuario ha cambiado el calendario en Hijri a gregoriano.  
  
-   Con `CultureInfo("0x0401", true)` (referencia cultural ar-SA de nombre), <xref:System.Globalization.CultureInfo.Calendar%2A> está establecido en <xref:System.Globalization.GregorianCalendar> (que es la configuración de usuario) y <xref:System.Globalization.CultureInfo.UseUserOverride%2A> está establecido en `true`.  
  
-   Con `CultureInfo("0x0401", false)` (referencia cultural ar-SA de nombre), <xref:System.Globalization.CultureInfo.Calendar%2A> está establecido en <xref:System.Globalization.HijriCalendar> (que es el calendario predeterminado para ar-SA) y <xref:System.Globalization.CultureInfo.UseUserOverride%2A> está establecido en `false`.  
  
-   Con `CultureInfo("0x041E", true)` (referencia cultural nombre th-TH), <xref:System.Globalization.CultureInfo.Calendar%2A> está establecido en <xref:System.Globalization.ThaiBuddhistCalendar> (que es el calendario predeterminado para th-TH) y <xref:System.Globalization.CultureInfo.UseUserOverride%2A> está establecido en `true`.  
  
-   Con `CultureInfo("0x041E", false)` (referencia cultural nombre th-TH), <xref:System.Globalization.CultureInfo.Calendar%2A> está establecido en <xref:System.Globalization.ThaiBuddhistCalendar> (que es el calendario predeterminado para th-TH) y <xref:System.Globalization.CultureInfo.UseUserOverride%2A> está establecido en `false`.  
  
 Las referencias culturales que utilizan el euro, .NET Framework y Windows XP establecen la moneda predeterminada euro como. Sin embargo, las versiones anteriores de Windows no lo hacen. Por lo tanto, si el usuario de una versión anterior de Windows no ha cambiado el valor de moneda a través de la parte de opciones de configuración regional y de idioma del Panel de Control, la moneda podría ser incorrecta. Para usar la configuración predeterminada de .NET Framework para la moneda, la aplicación debe establecer el `useUserOverride` parámetro `false`.  
  
> [!NOTE]
>  Para hacia atrás compatibilidad, una referencia cultural que se construye utilizando un `culture` parámetro de 0 x 0004 o 0x7c04 tendrá un <xref:System.Globalization.CultureInfo.Name%2A> propiedad de zh-CHS o zh-CHT, respectivamente. En su lugar, es preferible construir la referencia cultural mediante los nombres de referencia cultural estándar actual de zh-Hans o zh-Hant, a menos que tenga una razón para usar los nombres antiguos.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="culture" /> es menor que cero.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException"><paramref name="culture" /> no es un identificador de referencia cultural válido. Vea la sección Notas para los llamadores para obtener más información.</exception>
        <block subset="none" type="usage"><para>El [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] y versiones anteriores a producir un <see cref="T:System.ArgumentException" /> si <paramref name="culture" /> no es un identificador de referencia cultural válido. A partir de la [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], el constructor produce una <see cref="T:System.Globalization.CultureNotFoundException" />. A partir de las aplicaciones que se ejecutan en el [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] o posterior en Windows 7 o versiones posteriores, el método intenta recuperar un <see cref="T:System.Globalization.CultureInfo" /> objeto cuyo identificador es <paramref name="culture" /> desde el sistema operativo; si el sistema operativo no admite esa referencia cultural, el método produce una <see cref="T:System.Globalization.CultureNotFoundException" /> excepción.</para></block>
        <altmember cref="P:System.Globalization.CultureInfo.LCID" />
        <altmember cref="P:System.Globalization.CultureInfo.UseUserOverride" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureInfo (string name, bool useUserOverride);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, bool useUserOverride) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, useUserOverride As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CultureInfo(System::String ^ name, bool useUserOverride);" />
      <MemberSignature Language="F#" Value="new System.Globalization.CultureInfo : string * bool -&gt; System.Globalization.CultureInfo" Usage="new System.Globalization.CultureInfo (name, useUserOverride)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="useUserOverride" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name">Nombre de <see cref="T:System.Globalization.CultureInfo" /> predefinido, <see cref="P:System.Globalization.CultureInfo.Name" /> de un <see cref="T:System.Globalization.CultureInfo" /> existente, o nombre de referencia cultural solo de Windows. <paramref name="name" /> no distingue entre mayúsculas y minúsculas.</param>
        <param name="useUserOverride">Valor booleano que indica si se utiliza la configuración de referencia cultural seleccionada por el usuario (<see langword="true" />) o la configuración de referencia cultural predeterminada (<see langword="false" />).</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Globalization.CultureInfo" /> de acuerdo con la referencia cultural especificada mediante un nombre y con el valor booleano que indica si se va a utilizar la configuración de referencia cultural del sistema seleccionada por el usuario.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener una lista de nombres de referencias culturales predefinidos, vea la [referencia de National Language Support (NLS) API](https://go.microsoft.com/fwlink/?LinkId=200048) en el centro de desarrolladores Go Global. Además, a partir de Windows 10, `name` puede ser cualquier etiqueta de idioma BCP-47 válida.  
  
 Si `name` es <xref:System.String.Empty?displayProperty=nameWithType>, el constructor crea una instancia de la referencia cultural invariable; esto es equivalente a recuperar el valor de la <xref:System.Globalization.CultureInfo.InvariantCulture%2A> propiedad.  
  
 El usuario puede optar por invalidar algunos de los valores asociados con la referencia cultural actual de Windows a través de la parte de opciones de configuración regional y de idioma del Panel de Control. Por ejemplo, el usuario podría elegir para mostrar la fecha en un formato diferente o use una divisa distinta a la predeterminada para la referencia cultural.  
  
 Las aplicaciones normalmente no deberían permitir invalidaciones del usuario. Tenga en cuenta que no permitir reemplazos no garantiza la estabilidad de los datos; Consulte la entrada de blog [no deben interpretarse como datos de referencia cultural estables (excepto invariable)](https://go.microsoft.com/fwlink/?LinkId=156850).  
  
 Si el <xref:System.Globalization.CultureInfo.UseUserOverride%2A> propiedad está establecida en `true` y el identificador de referencia cultural asociado al nombre de la referencia cultural especificada coincide con el identificador de referencia cultural de la referencia cultural actual de Windows, este constructor crea un <xref:System.Globalization.CultureInfo> que utiliza esas invalidaciones, incluida la configuración de usuario para las propiedades de la <xref:System.Globalization.DateTimeFormatInfo> instancia devuelta por la <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> propiedad y las propiedades de la <xref:System.Globalization.NumberFormatInfo> instancia devuelta por la <xref:System.Globalization.CultureInfo.NumberFormat%2A> propiedad. Si la configuración de usuario no es compatible con la referencia cultural asociada con el <xref:System.Globalization.CultureInfo>, por ejemplo, si el calendario seleccionado no es uno de los <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, los resultados de los métodos y los valores de las propiedades no están definidos.  
  
 En caso contrario, este constructor crea un <xref:System.Globalization.CultureInfo> que usa los valores predeterminados para la referencia cultural especificada.  
  
 El valor de la `useUserOverride` parámetro se convierte en el valor de la <xref:System.Globalization.CultureInfo.UseUserOverride%2A> propiedad.  
  
 Por ejemplo, suponga que árabe (Arabia Saudí) es la referencia cultural actual de Windows y el usuario cambia el calendario en Hijri a gregoriano.  
  
-   Con `CultureInfo("ar-SA", true)`, <xref:System.Globalization.CultureInfo.Calendar%2A> está establecido en <xref:System.Globalization.GregorianCalendar> (que es la configuración de usuario) y <xref:System.Globalization.CultureInfo.UseUserOverride%2A> está establecido en `true`.  
  
-   Con `CultureInfo("ar-SA", false)`, <xref:System.Globalization.CultureInfo.Calendar%2A> está establecido en <xref:System.Globalization.HijriCalendar> (que es el calendario predeterminado para ar-SA) y <xref:System.Globalization.CultureInfo.UseUserOverride%2A> está establecido en `false`.  
  
-   Con `CultureInfo("th-TH", true)`, <xref:System.Globalization.CultureInfo.Calendar%2A> está establecido en <xref:System.Globalization.ThaiBuddhistCalendar> (que es el calendario predeterminado para th-TH) y <xref:System.Globalization.CultureInfo.UseUserOverride%2A> está establecido en `true`.  
  
-   Con `CultureInfo("th-TH", false)`, <xref:System.Globalization.CultureInfo.Calendar%2A> está establecido en <xref:System.Globalization.ThaiBuddhistCalendar> (que es el calendario predeterminado para th-TH) y <xref:System.Globalization.CultureInfo.UseUserOverride%2A> está establecido en `false`.  
  
 El <xref:System.Globalization.CultureInfo.LCID%2A> propiedad del nuevo <xref:System.Globalization.CultureInfo> se establece en el identificador de referencia cultural asociado con el nombre especificado.  
  
 Las referencias culturales que utilizan el euro, .NET Framework y Windows XP establecen la moneda predeterminada euro como. Sin embargo, las versiones anteriores de Windows no lo hace. Por lo tanto, si el usuario de una versión anterior de Windows no ha cambiado el valor de moneda a través de la parte de opciones de configuración regional y de idioma del Panel de Control, la moneda podría ser incorrecta. Para usar la configuración predeterminada de .NET Framework para la moneda, la aplicación debe establecer el `useUserOverride` parámetro `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> es null.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException"><paramref name="name" /> no es un nombre de referencia cultural válido. Vea la sección Notas para los llamadores para obtener más información.</exception>
        <block subset="none" type="usage"><para>El [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] y versiones anteriores a producir un <see cref="T:System.ArgumentException" /> si <paramref name="name" /> no es un nombre de referencia cultural válido. A partir de la [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], el constructor produce una <see cref="T:System.Globalization.CultureNotFoundException" />. A partir de las aplicaciones que se ejecutan en el [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] o posterior en Windows 7 o versiones posteriores, el método intenta recuperar un <see cref="T:System.Globalization.CultureInfo" /> objeto cuyo identificador es <paramref name="name" /> desde el sistema operativo; si el sistema operativo no admite esa referencia cultural y si <paramref name="name" /> no es el nombre de una referencia cultural complementaria o de reemplazo, el método inicia una <see cref="T:System.Globalization.CultureNotFoundException" /> excepción.</para></block>
        <altmember cref="P:System.Globalization.CultureInfo.LCID" />
        <altmember cref="P:System.Globalization.CultureInfo.UseUserOverride" />
        <altmember cref="M:System.Globalization.CultureInfo.CreateSpecificCulture(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Calendar">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.Calendar Calendar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.Calendar Calendar" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.Calendar" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Calendar As Calendar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::Calendar ^ Calendar { System::Globalization::Calendar ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Calendar : System.Globalization.Calendar" Usage="System.Globalization.CultureInfo.Calendar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el calendario predeterminado utilizado por la referencia cultural.</summary>
        <value><see cref="T:System.Globalization.Calendar" /> que representa el calendario predeterminado utilizado por la referencia cultural.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El usuario puede optar por invalidar algunos de los valores asociados con la referencia cultural actual de Windows a través de la parte de opciones de configuración regional y de idioma del Panel de Control. Por ejemplo, el usuario podría elegir para mostrar la fecha en un formato diferente o use una divisa distinta a la predeterminada para la referencia cultural.  
  
 Si <xref:System.Globalization.CultureInfo.UseUserOverride%2A> es `true` y la referencia cultural especificada coincide con la referencia cultural actual de Windows, el <xref:System.Globalization.CultureInfo> utiliza las nuevas, incluida la configuración de usuario para las propiedades de la <xref:System.Globalization.DateTimeFormatInfo> instancia devuelta por la <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> propiedad, y las propiedades de la <xref:System.Globalization.NumberFormatInfo> instancia devuelta por la <xref:System.Globalization.CultureInfo.NumberFormat%2A> propiedad. Si la configuración de usuario no es compatible con la referencia cultural asociada con el <xref:System.Globalization.CultureInfo>, por ejemplo, si el calendario seleccionado no es uno de los <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, los resultados de los métodos y los valores de las propiedades no están definidos.  
  
 Por lo tanto, si <xref:System.Globalization.CultureInfo.UseUserOverride%2A> es `true`, el valor de esta propiedad podría ser diferente en el calendario predeterminado utilizado por la referencia cultural.  
  
 La aplicación cambia el calendario usado por el actual <xref:System.Globalization.CultureInfo> estableciendo el <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> propiedad de <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, que es una instancia de la <xref:System.Globalization.DateTimeFormatInfo> clase. El nuevo calendario debe ser uno de los calendarios enumerados en <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>. <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> También incluye otras propiedades que personalización el formato de fecha y hora asociada con dicho <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
      </Docs>
    </Member>
    <Member MemberName="ClearCachedData">
      <MemberSignature Language="C#" Value="public void ClearCachedData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearCachedData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.ClearCachedData" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearCachedData ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearCachedData();" />
      <MemberSignature Language="F#" Value="member this.ClearCachedData : unit -&gt; unit" Usage="cultureInfo.ClearCachedData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Actualiza la información relativa a la referencia cultural almacenada en caché.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obtener información, como los patrones de referencia cultural y el formato de forma predeterminada, se almacena en caché la primera vez que se solicita. Que puede cambiar la información durante la vigencia de la <xref:System.AppDomain>, por ejemplo, cuando el usuario modifica la parte de opciones de configuración regional y de idioma del Panel de Control. Sin embargo, la <xref:System.Globalization.CultureInfo> clase no detecta automáticamente los cambios en la configuración del sistema.  
  
 El <xref:System.Globalization.CultureInfo.ClearCachedData%2A> método borra la memoria caché de <xref:System.Globalization.CultureInfo> los objetos creados por <xref:System.Globalization.CultureInfo.GetCultureInfo%2A> y actualiza la información en el <xref:System.Globalization.CultureInfo.CurrentCulture%2A>, <xref:System.Globalization.CultureInfo.CurrentUICulture%2A>, y <xref:System.Globalization.RegionInfo.CurrentRegion%2A> propiedades, según la configuración del sistema actual.  
  
 El <xref:System.Globalization.CultureInfo.ClearCachedData%2A> método no actualiza la información de la <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> propiedad para los subprocesos existentes. Sin embargo, los subprocesos futuros tendrán cualquier nuevo <xref:System.Globalization.CultureInfo> los valores de propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="cultureInfo.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una copia del objeto <see cref="T:System.Globalization.CultureInfo" /> actual.</summary>
        <returns>Copia del objeto <see cref="T:System.Globalization.CultureInfo" /> actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El clon es grabable aunque original <xref:System.Globalization.CultureInfo> es de solo lectura. Por lo tanto, se pueden modificar las propiedades del clon.  
  
 Una copia superficial de un objeto es una copia del objeto únicamente. Si el objeto contiene referencias a otros objetos, la copia superficial no crea copias de los objetos que se hace referencia. Se refiere a los objetos originales en su lugar. En cambio, una copia en profundidad de un objeto crea una copia del objeto y una copia de todo lo que hace referencia directa o indirectamente por ese objeto.  
  
 El <xref:System.Globalization.CultureInfo.Clone%2A> método crea una copia superficial mejorada. Los objetos devueltos por la <xref:System.Globalization.CultureInfo.NumberFormat%2A>, <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, <xref:System.Globalization.CultureInfo.TextInfo%2A>, y <xref:System.Globalization.CultureInfo.Calendar%2A> también se copian las propiedades. Por lo tanto, clonado <xref:System.Globalization.CultureInfo> objeto puede modificar sus propiedades copiadas sin afectar al original <xref:System.Globalization.CultureInfo> objeto.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra que cómo CultureInfo.Clone también clona el <xref:System.Globalization.DateTimeFormatInfo> y <xref:System.Globalization.NumberFormatInfo> las instancias asociadas a la <xref:System.Globalization.CultureInfo>.  
  
 [!code-cpp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CPP/yslin_cultureinfo_clone.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CS/yslin_cultureinfo_clone.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/VB/yslin_cultureinfo_clone.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="CompareInfo">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.CompareInfo CompareInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CompareInfo CompareInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.CompareInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CompareInfo As CompareInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CompareInfo ^ CompareInfo { System::Globalization::CompareInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CompareInfo : System.Globalization.CompareInfo" Usage="System.Globalization.CultureInfo.CompareInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Globalization.CompareInfo" /> que define el modo en que se comparan las cadenas para la referencia cultural.</summary>
        <value><see cref="T:System.Globalization.CompareInfo" /> que define el modo en que se comparan las cadenas para la referencia cultural.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Globalization.CultureInfo.CompareInfo%2A> propiedad devuelve un <xref:System.Globalization.CompareInfo> objeto que proporciona información específica de la referencia cultural usada en operaciones de comparación de cadenas y de ordenación de la referencia cultural.  
  
 El usuario puede optar por invalidar algunos de los valores asociados con la referencia cultural actual de Windows a través de la parte de opciones de configuración regional y de idioma del Panel de Control. Por ejemplo, el usuario podría elegir para mostrar la fecha en un formato diferente o use una divisa distinta a la predeterminada para la referencia cultural.  
  
 Si <xref:System.Globalization.CultureInfo.UseUserOverride%2A> es `true` y la referencia cultural especificada coincide con la referencia cultural actual de Windows, el <xref:System.Globalization.CultureInfo> utiliza las nuevas, incluida la configuración de usuario para las propiedades de la <xref:System.Globalization.DateTimeFormatInfo> instancia devuelta por la <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> propiedad, y las propiedades de la <xref:System.Globalization.NumberFormatInfo> instancia devuelta por la <xref:System.Globalization.CultureInfo.NumberFormat%2A> propiedad. Si la configuración de usuario no es compatible con la referencia cultural asociada con el <xref:System.Globalization.CultureInfo>, por ejemplo, si el calendario seleccionado no es uno de los <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, los resultados de los métodos y los valores de las propiedades no están definidos.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear un <xref:System.Globalization.CultureInfo> para español (España) con la ordenación internacional y otra <xref:System.Globalization.CultureInfo> con la ordenación tradicional.  
  
 [!code-cpp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CPP/spanishspain.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CS/spanishspain.cs#1)]
 [!code-vb[System.Globalization.CultureInfo_esES#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/VB/spanishspain.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CompareInfo" />
      </Docs>
    </Member>
    <Member MemberName="CreateSpecificCulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo CreateSpecificCulture (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo CreateSpecificCulture(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.CreateSpecificCulture(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSpecificCulture (name As String) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ CreateSpecificCulture(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member CreateSpecificCulture : string -&gt; System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.CreateSpecificCulture name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name">Nombre <see cref="T:System.Globalization.CultureInfo" /> predefinido o el nombre de un objeto <see cref="T:System.Globalization.CultureInfo" /> existente. <paramref name="name" /> no distingue entre mayúsculas y minúsculas.</param>
        <summary>Crea un objeto <see cref="T:System.Globalization.CultureInfo" /> que representa la referencia cultural específica asociada al nombre especificado.</summary>
        <returns>Objeto <see cref="T:System.Globalization.CultureInfo" /> que representa: 
La referencia cultural invariable, si <paramref name="name" /> es una cadena vacía ("").  
  
O bien 
La referencia cultural específica asociada a <paramref name="name" />, si <paramref name="name" /> es una referencia cultural neutra.  
  
O bien 
La referencia cultural especificada por <paramref name="name" />, si <paramref name="name" /> ya es una referencia cultural específica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> método ajusta una llamada a la <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> constructor.  
  
> [!NOTE]
>  Para obtener una lista de nombres de referencias culturales predefinidos, vea la [referencia de National Language Support (NLS) API](https://go.microsoft.com/fwlink/?LinkId=200048) en el centro de desarrolladores Go Global. Además, a partir de Windows 10, `name` puede ser cualquier etiqueta de idioma BCP-47 válida.  
  
 Las referencias culturales se agrupan en tres conjuntos: la referencia cultural invariable, las referencias culturales neutras y las referencias culturales específicas. Para obtener más información, vea la descripción de la <xref:System.Globalization.CultureInfo> clase.  
  
 Si el identificador de referencia cultural de la referencia cultural específica que devuelve este método coincide con el identificador de referencia cultural de la referencia cultural actual de Windows, este método crea un <xref:System.Globalization.CultureInfo> reemplaza el objeto que usa la referencia cultural de Windows. Las invalidaciones incluyen la configuración de usuario para las propiedades de la <xref:System.Globalization.DateTimeFormatInfo> objeto devuelto por la <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> propiedad y el <xref:System.Globalization.NumberFormatInfo> objeto devuelto por la <xref:System.Globalization.CultureInfo.NumberFormat%2A> propiedad. Para crear instancias de un <xref:System.Globalization.CultureInfo> objeto que no tiene valor predeterminado la configuración de referencia cultural en lugar de invalidaciones de usuario, llamar a la <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29> constructor con un valor de `false` para el `useUserOverride` argumento.  
  
 Aunque el <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> nombre del método incluye el término "Específico", recuerde que los datos de referencia cultural pueden cambiar entre las versiones, o debido a las referencias culturales personalizadas o debido a invalidaciones del usuario. Use la referencia cultural invariable o formularios binarios o fijos para guardar los datos.  
  
   
  
## Examples  
 El ejemplo siguiente recupera una matriz de <xref:System.Globalization.CultureInfo> objetos que representan las referencias culturales neutras desde el <xref:System.Globalization.CultureInfo.GetCultures%2A> método y ordena la matriz. Cuando recorre en iteración los elementos de la matriz, pasa el nombre de cada referencia cultural neutra para el <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> método y muestra el nombre de la referencia cultural específica devueltos por el método.  
  
> [!NOTE]
>  El ejemplo utiliza los nombres de referencia cultural zh-CHS y zh-CHT. Sin embargo, las aplicaciones destinadas a Windows Vista y posterior se deben usar zh-Hans en lugar de zh-CHS y zh-Hant en lugar de zh-CHT. zh-Hans y zh-Hant representan el estándar actual y se deben usar a menos que tenga una razón para usar los nombres antiguos.  
>   
>  Tenga en cuenta también que los resultados del ejemplo pueden diferir en una instalación de Windows taiwanés, donde la entrada chino (tradicional) referencia cultural neutral (zh, zh-CHT o zh-Hant) devolverá zh-TW.  
  
 [!code-csharp[System.Globalization.CultureInfo.CreateSpecificCulture2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CreateSpecificCulture2/CS/createspecificculture2.cs#2)]
 [!code-vb[System.Globalization.CultureInfo.CreateSpecificCulture2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CreateSpecificCulture2/VB/createspecificculture2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Globalization.CultureNotFoundException"><paramref name="name" /> no es un nombre de referencia cultural válido.  
  
O bien 
La referencia cultural especificada por <paramref name="name" /> no tiene una referencia cultural específica asociada.</exception>
        <exception cref="T:System.NullReferenceException"><paramref name="name" /> es null.</exception>
        <block subset="none" type="usage"><para>El [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] y versiones anteriores a producir un <see cref="T:System.ArgumentException" /> si <paramref name="name" /> no es un nombre de referencia cultural válido. A partir de la [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], este método produce una <see cref="T:System.Globalization.CultureNotFoundException" />.</para></block>
        <altmember cref="Overload:System.Globalization.CultureInfo.#ctor" />
        <altmember cref="P:System.Globalization.CultureInfo.Parent" />
      </Docs>
    </Member>
    <Member MemberName="CultureTypes">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureTypes CultureTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CultureTypes CultureTypes" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.CultureTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CultureTypes As CultureTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureTypes CultureTypes { System::Globalization::CultureTypes get(); };" />
      <MemberSignature Language="F#" Value="member this.CultureTypes : System.Globalization.CultureTypes" Usage="System.Globalization.CultureInfo.CultureTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene los tipos de referencia cultural que pertenecen al objeto <see cref="T:System.Globalization.CultureInfo" /> actual.</summary>
        <value>Una combinación bit a bit de uno o más valores de <see cref="T:System.Globalization.CultureTypes" />. No existe ningún valor predeterminado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se muestra el <xref:System.Globalization.CultureTypes> enumeración y <xref:System.Globalization.CultureInfo.CultureTypes%2A> propiedad.  
  
 [!code-csharp[system.globalization.cultureTypes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureTypes/cs/ct.cs#1)]
 [!code-vb[system.globalization.cultureTypes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureTypes/vb/ct.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureTypes" />
      </Docs>
    </Member>
    <Member MemberName="CurrentCulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo CurrentCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo CurrentCulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.CurrentCulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CurrentCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ CurrentCulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentCulture : System.Globalization.CultureInfo with get, set" Usage="System.Globalization.CultureInfo.CurrentCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el objeto <see cref="T:System.Globalization.CultureInfo" /> que representa la referencia cultural utilizada por el subproceso actual.</summary>
        <value>El objeto que representa la referencia cultural utilizada por el subproceso actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Globalization.CultureInfo> objeto devuelto por esta propiedad y sus objetos asociados determinar el formato predeterminado para las fechas, horas, números, valores de moneda, el criterio de ordenación de texto, las mayúsculas y minúsculas de las convenciones y comparaciones de cadenas.  
  
 La referencia cultural actual es una propiedad del subproceso en ejecución. Recuperar el valor de la <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> propiedad es equivalente a una más eficaz de recuperar el <xref:System.Globalization.CultureInfo> objeto devuelto por la `Thread.CurrentThread.CurrentCulture` propiedad.
  
> [!NOTE]
>  En .NET Framework 4.5.2 y versiones anteriores, el <xref:System.Globalization.CultureInfo.CurrentCulture%2A> propiedad es de solo lectura.  es decir, puede recuperar el valor de propiedad, pero no puede establecerlo. Para cambiar la referencia cultural actual, asigna el <xref:System.Globalization.CultureInfo> objeto que representa la nueva referencia cultural a la `Thread.CurrentThread.CurrentCulture` propiedad. A partir de la [!INCLUDE[net_v46](~/includes/net-v46-md.md)], el <xref:System.Globalization.CultureInfo.CurrentCulture%2A> propiedad es de lectura y escritura; puede establecer y recuperar el valor de propiedad. Si establece el valor de propiedad en un <xref:System.Globalization.CultureInfo> objeto que representa una nueva referencia cultural, el valor de la `Thread.CurrentThread.CurrentCulture` propiedad también cambia.  
  
 En esta sección:  
  
 [Cómo se determina la referencia cultural del subproceso](#ThreadCulture)   
 [Introducción a la referencia cultural actual](#Getting)   
 [Configurar explícitamente la propiedad CurrentCulture](#ExplicitSetting)   
 [La referencia cultural actual y las invalidaciones del usuario](#Overrides)   
 [Referencia cultural y las aplicaciones de Windows](#WindowsAndCurr)  
  
<a name="ThreadCulture"></a>   
## <a name="how-a-threads-culture-is-determined"></a>Cómo se determina la referencia cultural del subproceso  
 Cuando se inicia un subproceso, su referencia cultural se determina inicialmente como sigue:  
  
-   Recuperando la referencia cultural especificada por el <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> propiedad del dominio de aplicación en el que está ejecutando el subproceso, si el valor de propiedad no es `null`.  
  
-   Si el subproceso es un subproceso de grupo que se está ejecutando una operación asincrónica basada en tareas y la aplicación tiene como destino el [!INCLUDE[net_v46](~/includes/net-v46-md.md)] o una versión posterior de .NET Framework, su referencia cultural viene determinada por la referencia cultural del subproceso que realiza la llamada.  El ejemplo siguiente cambia la referencia cultural actual para portugués (Brasil) y seis tareas, cada uno de los cuales muestra su Id. de subproceso, su Id. de tarea y su referencia cultural actual inicia. Cada una de las tareas (y los subprocesos) ha heredado la referencia cultural del subproceso que realiza la llamada.  
  
     [!code-csharp[System.Globalization.CultureInfo.CurrentCulture#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/Async1.cs#14)]
     [!code-vb[System.Globalization.CultureInfo.CurrentCulture#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/Async1.vb#14)]  
  
     Para obtener más información, consulte la sección "Referencia cultural y operaciones asincrónicas basadas en tareas" en el <xref:System.Globalization.CultureInfo> tema.  
  
-   Mediante una llamada a la Windows `GetUserDefaultLocaleName` función.  
  
 Tenga en cuenta que si establece una referencia cultural específica que es diferente de la referencia cultural instalada por el sistema o la referencia cultural preferida del usuario y la aplicación inicia varios subprocesos, la referencia cultural actual de esos subprocesos será la referencia cultural devuelta por la `GetUserDefaultLocaleName` función, a menos que se asignará una referencia cultural para la <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> propiedad del dominio de aplicación en el que se está ejecutando el subproceso.  
  
 Para obtener más información acerca de cómo se determina la referencia cultural de un subproceso, vea la sección "Referencia cultural y los subprocesos" en la <xref:System.Globalization.CultureInfo> página de referencia.  
  
<a name="Getting"></a>   
## <a name="getting-the-current-culture"></a>Introducción a la referencia cultural actual  
 El <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> propiedad es una configuración para cada subproceso; es decir, cada subproceso puede tener su propia referencia cultural. Obtener la referencia cultural del subproceso actual, recupere el valor de la <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> propiedad, como en el ejemplo siguiente se muestra.  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/Get1.cs#5)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/Get1.vb#5)]  
  
 También puede recuperar el valor de referencia cultural del subproceso actual desde el <xref:System.Threading.Thread.CurrentThread%2A?displayProperty=nameWithType> propiedad.  
  
<a name="ExplicitSetting"></a>   
## <a name="explicitly-setting-the-currentculture-property"></a>Configurar explícitamente la propiedad CurrentCulture  
 Que comience por la [!INCLUDE[net_v46](~/includes/net-v46-md.md)], para cambiar la referencia cultural que utiliza un subproceso existente, se establece la <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> propiedad a la nueva referencia cultural. Si cambia una referencia cultural de subproceso de este modo, por lo que cambiar explícitamente continúa si el subproceso cruce los límites del dominio de aplicación. El ejemplo siguiente cambia la referencia cultural del subproceso actual en neerlandés (Países Bajos). También muestra que, cuando el actual subproceso cruce los límites del dominio de aplicación, su referencia cultural actual permanece cambiada.  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/changeculture11.cs#11)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/changeculture11.vb#11)]  
  
> [!NOTE]
>  Cambiar la referencia cultural mediante la <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> propiedad requiere un <xref:System.Security.Permissions.SecurityPermission> permiso con el <xref:System.Security.Permissions.SecurityPermissionFlag.ControlThread> valor establecido. Manipular subprocesos es peligrosa debido al estado de seguridad asociado a ellos. Por lo tanto, debe tener este permiso sólo a código de confianza y únicamente cuando sea necesario. No se puede cambiar la referencia cultural del subproceso en código de confianza parcial.  
  
 A partir de la [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], puede cambiar explícitamente la referencia cultural del subproceso actual para una referencia cultural concreta (por ejemplo, francés (Canadá)) o una referencia cultural neutra (por ejemplo, francés). Cuando un <xref:System.Globalization.CultureInfo> objeto representa una referencia cultural neutra, los valores de <xref:System.Globalization.CultureInfo> propiedades como <xref:System.Globalization.CultureInfo.Calendar%2A>, <xref:System.Globalization.CultureInfo.CompareInfo%2A>, <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, <xref:System.Globalization.CultureInfo.NumberFormat%2A>, y <xref:System.Globalization.CultureInfo.TextInfo%2A> reflejar la referencia cultural específica que está asociada con el referencia cultural neutra. Por ejemplo, la referencia cultural dominante para la referencia cultural inglés es inglés (Estados Unidos); la referencia cultural dominante para la referencia cultural de alemán es alemán (Alemania). El ejemplo siguiente muestra la diferencia en el formato cuando se establece la referencia cultural actual en una referencia cultural Francés (Canadá) y una referencia cultural neutra, francés.  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/specific12.cs#12)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/specific12.vb#12)]  
  
 También puede usar el <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> propiedad junto con la <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> propiedad para establecer el <xref:System.Globalization.CultureInfo.CurrentCulture%2A> propiedad de una aplicación ASP.NET para el usuario preferido de la referencia cultural, como se muestra en el ejemplo siguiente.  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/aspculture13.cs#13)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/aspculture13.vb#13)]  
  
<a name="Overrides"></a>   
## <a name="the-current-culture-and-user-overrides"></a>La referencia cultural actual y las invalidaciones del usuario  
 Windows permite a los usuarios reemplazar los valores de propiedad estándar de la <xref:System.Globalization.CultureInfo> objeto y sus objetos asociados mediante el uso de **regional e idioma** en el Panel de Control. El <xref:System.Globalization.CultureInfo> objeto devuelto por la <xref:System.Globalization.CultureInfo.CurrentCulture%2A> propiedad refleja reemplaza estos usuarios en los casos siguientes:  
  
-   Si la referencia cultural del subproceso actual se establece implícitamente por el Windows `GetUserDefaultLocaleName` función.  
  
-   Si la referencia cultural del subproceso actual definida por el <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> propiedad se corresponde con la referencia cultural actual del sistema de Windows.  
  
-   Si la referencia cultural del subproceso actual se establece explícitamente en una referencia cultural devuelta por la <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> método y que la referencia cultural se corresponde con la referencia cultural actual del sistema de Windows.  
  
-   Si la referencia cultural del subproceso actual se establece explícitamente en una referencia cultural que se crea una instancia por el <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> constructor y que la referencia cultural se corresponde con la referencia cultural actual del sistema de Windows.  
  
 En algunos casos, especialmente para aplicaciones de servidor, establecer la referencia cultural actual en un <xref:System.Globalization.CultureInfo> objeto que refleja las invalidaciones del usuario puede no ser deseable. En su lugar, puede establecer la referencia cultural del subproceso actual en un <xref:System.Globalization.CultureInfo> reemplaza el objeto que no refleje el usuario de las maneras siguientes:  
  
-   Mediante una llamada a la <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29> constructor con un valor de `false` para el `useUserOverride` argumento.  
  
-   Mediante una llamada a la <xref:System.Globalization.CultureInfo.GetCultureInfo%2A> método, que devuelve una caché de solo lectura <xref:System.Globalization.CultureInfo> objeto.  
  
<a name="WindowsAndCurr"></a>   
## <a name="the-current-culture-and-uwp-apps"></a>La referencia cultural actual y las aplicaciones para UWP  
 En las aplicaciones de la plataforma Universal de Windows (UWP), el <xref:System.Globalization.CultureInfo.CurrentCulture%2A> propiedad es de lectura y escritura, al igual que en las aplicaciones de .NET Framework y .NET Core; puede usar para obtener y establecer la referencia cultural actual. Sin embargo, las aplicaciones para UWP no distinguen entre la referencia cultural actual y la referencia cultural de interfaz de usuario actual. El <xref:System.Globalization.CultureInfo.CurrentCulture%2A> y <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> mapa de propiedades en el primer valor de la [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) colección.  

En las aplicaciones de .NET Framework y .NET Core, la referencia cultural actual es una configuración de cada subproceso y el <xref:System.Globalization.CultureInfo.CurrentCulture%2A> propiedad refleja la referencia cultural del subproceso actual únicamente. En aplicaciones UWP, la referencia cultural actual se asigna a la [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) propiedad, que es una configuración global. Establecer el <xref:System.Globalization.CultureInfo.CurrentCulture%2A> propiedad cambia la referencia cultural de la aplicación completa; no se puede establecer la referencia cultural en una base por subproceso.
  
## Examples  
 En el ejemplo siguiente se muestra cómo cambiar el <xref:System.Globalization.CultureInfo.CurrentCulture%2A> y <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> del subproceso actual.  
  
 [!code-cpp[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/CPP/currentculture.cpp#11)]
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/CS/currentculture.cs#11)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/VB/currentculture.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La propiedad se establece en <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Para establecer la referencia cultural actual. Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" /></permission>
        <altmember cref="P:System.Globalization.CultureInfo.DefaultThreadCurrentCulture" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InstalledUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.Parent" />
        <altmember cref="T:System.Security.Permissions.SecurityPermission" />
        <altmember cref="T:System.Security.Permissions.SecurityPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="CurrentUICulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo CurrentUICulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo CurrentUICulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.CurrentUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CurrentUICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ CurrentUICulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentUICulture : System.Globalization.CultureInfo with get, set" Usage="System.Globalization.CultureInfo.CurrentUICulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el objeto <see cref="T:System.Globalization.CultureInfo" /> que representa la referencia cultural de la interfaz de usuario actual utilizada por el Administrador de recursos para buscar los recursos específicos de la referencia cultural en tiempo de ejecución.</summary>
        <value>Referencia cultural actual usada por el Administrador de recursos para buscar recursos específicos de la referencia cultural en tiempo de ejecución.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La referencia cultural de interfaz de usuario actual es una propiedad de cada subproceso. Es decir, cada subproceso tiene su propia referencia cultural de interfaz de usuario actual. Esta propiedad es equivalente a la recuperación o, a partir de la [!INCLUDE[net_v46](~/includes/net-v46-md.md)], estableciendo el <xref:System.Globalization.CultureInfo> objeto asignado a la `System.Threading.Thread.CurrentThread.CurrentUICulture` propiedad. Cuando se inicia un subproceso, su referencia cultural de interfaz de usuario se determina inicialmente como sigue:  
  
-   Recuperando la referencia cultural especificada por el <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> propiedad del dominio de aplicación en el que está ejecutando el subproceso, si el valor de propiedad no es `null`.  
  
-   Si el subproceso es un subproceso de grupo que se está ejecutando una operación asincrónica basada en tareas y la aplicación tiene como destino el [!INCLUDE[net_v46](~/includes/net-v46-md.md)] o una versión posterior de .NET Framework, su referencia cultural de interfaz de usuario viene determinada por la referencia cultural de interfaz de usuario del subproceso que realiza la llamada.  El ejemplo siguiente cambia la referencia cultural de interfaz de usuario actual para portugués (Brasil) y seis tareas, cada uno de los cuales muestra su Id. de subproceso, su Id. de tarea y su referencia cultural de interfaz de usuario actual inicia. Cada una de las tareas (y los subprocesos) ha heredado la referencia cultural de interfaz de usuario del subproceso que realiza la llamada.  
  
     [!code-csharp[System.Globalization.CultureInfo.CurrentUICulture#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/cs/Async1.cs#14)]
     [!code-vb[System.Globalization.CultureInfo.CurrentUICulture#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/vb/Async1.vb#14)]  
  
     Para obtener más información, consulte la sección "Referencia cultural y operaciones asincrónicas basadas en tareas" en el <xref:System.Globalization.CultureInfo> tema.  
  
-   Mediante una llamada a la Windows `GetUserDefaultUILanguage` función.  
  
> [!NOTE]
>  En el [!INCLUDE[Compact](~/includes/compact-md.md)], el <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> propiedad es de solo lectura. La referencia cultural de interfaz de usuario actual se determina mediante la configuración regional del sistema y no se puede cambiar mediante programación.  
  
 A partir de la [!INCLUDE[net_v46](~/includes/net-v46-md.md)]cambiar la referencia cultural de interfaz de usuario utilizada por un subproceso, establezca el <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> propiedad a la nueva referencia cultural. Si se modifica explícitamente la referencia cultural de interfaz de usuario de un subproceso de este modo, que cambian continúa si el subproceso cruce los límites del dominio de aplicación.  
  
> [!NOTE]
>  En .NET Framework 4.5.2 y versiones anteriores, el <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> propiedad es de solo lectura.  es decir, puede recuperar el valor de propiedad, pero no puede establecerlo. Para cambiar la referencia cultural de interfaz de usuario actual, asigna el <xref:System.Globalization.CultureInfo> objeto que representa la nueva referencia cultural de interfaz de usuario para el `Thread.CurrentThread.CurrentUICulture` propiedad. A partir de la [!INCLUDE[net_v46](~/includes/net-v46-md.md)], el <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> propiedad es de lectura y escritura; puede establecer y recuperar el valor de propiedad. Si establece el valor de propiedad en un <xref:System.Globalization.CultureInfo> objeto que representa una nueva referencia cultural, el valor de la `Thread.CurrentThread.CurrentCulture` propiedad también cambia.  
  
 En esta sección:  
  
 [Introducción a la referencia cultural de interfaz de usuario actual](#Getting)   
 [Establecer explícitamente la referencia cultural de interfaz de usuario actual](#Explicit)   
 [Configurar implícitamente la referencia cultural de interfaz de usuario actual](#Implicit)   
 [Consideraciones de seguridad](#Security)   
 [Las aplicaciones de Windows y referencia cultural de interfaz de usuario actuales](#WindowsAndCurrUI)  
  
<a name="Getting"></a>   
## <a name="getting-the-current-ui-culture"></a>Introducción a la referencia cultural de interfaz de usuario actual  
 El <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> propiedad es una configuración para cada subproceso; es decir, cada subproceso puede tener su propia referencia cultural de interfaz de usuario. Obtener la referencia cultural de interfaz de usuario del subproceso actual, recupere el valor de la <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> propiedad, como en el ejemplo siguiente se muestra.  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentUICulture#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/cs/Get1.cs#5)]
 [!code-vb[System.Globalization.CultureInfo.CurrentUICulture#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/vb/Get1.vb#5)]  
  
 También puede recuperar el valor de referencia cultural de interfaz de usuario del subproceso actual desde el <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> propiedad.  
  
<a name="Explicit"></a>   
## <a name="explicitly-setting-the-current-ui-culture"></a>Establecer explícitamente la referencia cultural de interfaz de usuario actual  
 A partir de la [!INCLUDE[net_v46](~/includes/net-v46-md.md)], puede cambiar la referencia cultural de interfaz de usuario actual mediante la asignación de un <xref:System.Globalization.CultureInfo> objeto que representa la nueva referencia cultural a la <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> propiedad. La referencia cultural de interfaz de usuario actual se puede establecer una referencia cultural neutra (como en o de) o bien una referencia cultural concreta (por ejemplo, en-US o de-DE). El ejemplo siguiente establece la referencia cultural de interfaz de usuario actual en fr-FR o francés (Francia).  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentUICulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/cs/currentuiculture1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.CurrentUICulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/vb/currentuiculture1.vb#1)]  
  
 En una aplicación multiproceso, puede establecer explícitamente la referencia cultural de interfaz de usuario de cualquier subproceso asignando un <xref:System.Globalization.CultureInfo> objeto que representa esa referencia cultural del subproceso <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> propiedad. Si el subproceso cuya referencia cultural que se va a establecer es el subproceso actual, puede asignar la nueva referencia cultural a la <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> propiedad. Cuando la referencia cultural de interfaz de usuario de un subproceso se establece explícitamente, que el subproceso mantiene la misma referencia cultural incluso si se cruza los límites del dominio de aplicación y se ejecuta código en otro dominio de aplicación.  
  
<a name="Implicit"></a>   
## <a name="implicitly-setting-the-current-ui-culture"></a>Configurar implícitamente la referencia cultural de interfaz de usuario actual  
 Cuando un subproceso, incluido el subproceso principal de la aplicación, es el primero crean, de forma predeterminada, que su referencia cultural de interfaz de usuario actual se establece como sigue:  
  
-   Mediante el uso de la referencia cultural definida por el <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> propiedad del dominio de aplicación actual si el valor de propiedad no es `null`.  
  
-   Utilizando la referencia cultural predeterminada del sistema. En los sistemas que usan el sistema operativo de Windows, common language runtime llama a la Windows `GetUserDefaultUILanguage` función para establecer la referencia cultural de interfaz de usuario actual. `GetUserDefaultUILanguage` Devuelve la referencia cultural de la interfaz de usuario predeterminado establecida por el usuario. Si el usuario no ha establecido un idioma de interfaz de usuario de forma predeterminada, devuelve la referencia cultural que se instaló originalmente en el sistema.  
  
 Si el subproceso cruce los límites de la aplicación y ejecuta código en otro dominio de aplicación, su referencia cultural se determina de la misma manera que el de un subproceso recién creado.  
  
 Tenga en cuenta que si establece una interfaz de usuario referencia cultural diferente de la referencia cultural instalada por el sistema de la interfaz de usuario o la referencia cultural preferida del usuario y la aplicación inicia varios subprocesos, la referencia cultural actual de la interfaz de usuario de esos subprocesos será la referencia cultural devuelta por la `GetUserDefaultUILanguage`funcione, a menos que asigne una referencia cultural para la <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> propiedad del dominio de aplicación en el que se está ejecutando el subproceso.  
  
<a name="Security"></a>   
## <a name="security-considerations"></a>Consideraciones de seguridad  
 Cambiar la referencia cultural del subproceso actual requiere una <xref:System.Security.Permissions.SecurityPermission> permiso con el <xref:System.Security.Permissions.SecurityPermissionFlag.ControlThread> valor establecido.  
  
> [!CAUTION]
>  Manipular subprocesos es peligrosa debido al estado de seguridad asociado a ellos. Por lo tanto, debe tener este permiso sólo a código de confianza y únicamente cuando sea necesario. No se puede cambiar la referencia cultural del subproceso en código de confianza parcial.  
  
<a name="WindowsAndCurrUI"></a>   
## <a name="the-current-ui-culture-and-uwp-apps"></a>La referencia cultural actual de la interfaz de usuario y aplicaciones para UWP  
 
En las aplicaciones de la plataforma Universal de Windows (UWP), el <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> propiedad es de lectura y escritura, al igual que en las aplicaciones de .NET Framework y .NET Core; puede usar para obtener y establecer la referencia cultural actual. Sin embargo, las aplicaciones para UWP no distinguen entre la referencia cultural actual y la referencia cultural de interfaz de usuario actual. El <xref:System.Globalization.CultureInfo.CurrentCulture%2A> y <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> mapa de propiedades en el primer valor de la [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) colección.

En las aplicaciones de .NET Framework y .NET Core, la referencia cultural de interfaz de usuario actual es una configuración de cada subproceso y el <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> propiedad refleja la referencia cultural de interfaz de usuario de solo el subproceso actual. En aplicaciones UWP, la referencia cultural actual se asigna a la [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) propiedad, que es una configuración global. Establecer el <xref:System.Globalization.CultureInfo.CurrentCulture%2A> propiedad cambia la referencia cultural de la aplicación completa; no se puede establecer la referencia cultural en una base por subproceso.    
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo cambiar el <xref:System.Globalization.CultureInfo.CurrentCulture%2A> y <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> del subproceso actual.  
  
 [!code-cpp[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/CPP/currentculture.cpp#11)]
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/CS/currentculture.cs#11)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/VB/currentculture.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La propiedad se establece en <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">La propiedad se establece en un nombre de referencia cultural que no se puede usar para buscar un archivo de recursos. Los nombres de archivo de recursos pueden incluir solo letras, números, guiones o caracteres de subrayado.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Para establecer la referencia cultural de interfaz de usuario actual. Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread" /></permission>
        <altmember cref="T:System.Resources.ResourceManager" />
        <altmember cref="P:System.Threading.Thread.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InstalledUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture" />
      </Docs>
    </Member>
    <Member MemberName="DateTimeFormat">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.DateTimeFormatInfo DateTimeFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.DateTimeFormatInfo DateTimeFormat" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.DateTimeFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DateTimeFormat As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::DateTimeFormatInfo ^ DateTimeFormat { System::Globalization::DateTimeFormatInfo ^ get(); void set(System::Globalization::DateTimeFormatInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DateTimeFormat : System.Globalization.DateTimeFormatInfo with get, set" Usage="System.Globalization.CultureInfo.DateTimeFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un objeto <see cref="T:System.Globalization.DateTimeFormatInfo" /> que define el formato de presentación de fechas y horas culturalmente apropiado.</summary>
        <value><see cref="T:System.Globalization.DateTimeFormatInfo" /> que define el formato de presentación de fechas y horas culturalmente apropiado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="overrides"></a>Overrides  
 El usuario puede optar por invalidar algunos de los valores asociados con la referencia cultural actual de Windows a través de la parte de opciones de configuración regional y de idioma del Panel de Control. Por ejemplo, el usuario podría elegir para mostrar la fecha en un formato diferente o use una divisa distinta a la predeterminada para la referencia cultural.  
  
 Si <xref:System.Globalization.CultureInfo.UseUserOverride%2A> es `true` y la referencia cultural especificada coincide con la referencia cultural actual de Windows, el <xref:System.Globalization.CultureInfo> utiliza las nuevas, incluida la configuración de usuario para las propiedades de la <xref:System.Globalization.DateTimeFormatInfo> instancia devuelta por la <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> propiedad, y las propiedades de la <xref:System.Globalization.NumberFormatInfo> instancia devuelta por la <xref:System.Globalization.CultureInfo.NumberFormat%2A> propiedad. Si la configuración de usuario no es compatible con la referencia cultural asociada con el <xref:System.Globalization.CultureInfo>, por ejemplo, si el calendario seleccionado no es uno de los <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, los resultados de los métodos y los valores de las propiedades no están definidos.  
  
 El valor de la <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> propiedad y el <xref:System.Globalization.CultureInfo.NumberFormat%2A> propiedad no se calcula hasta que la aplicación accede a la propiedad. Si el usuario puede cambiar la referencia cultural actual a una nueva referencia cultural mientras se ejecuta la aplicación y, a continuación, la aplicación obtiene acceso a la <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> o <xref:System.Globalization.CultureInfo.NumberFormat%2A> propiedad, la aplicación recupera los valores predeterminados para la nueva referencia cultural en lugar de las invalidaciones de la referencia cultural original. Para conservar las invalidaciones de la referencia cultural original, la aplicación debe tener acceso a la <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> y <xref:System.Globalization.CultureInfo.NumberFormat%2A> propiedades antes de cambiar la referencia cultural actual.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra que cómo CultureInfo.Clone también clona el <xref:System.Globalization.DateTimeFormatInfo> y <xref:System.Globalization.NumberFormatInfo> las instancias asociadas a la <xref:System.Globalization.CultureInfo>.  
  
 [!code-cpp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CPP/yslin_cultureinfo_clone.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CS/yslin_cultureinfo_clone.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/VB/yslin_cultureinfo_clone.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La propiedad se ha establecido en null.</exception>
        <exception cref="T:System.InvalidOperationException">Se establece la propiedad <see cref="P:System.Globalization.CultureInfo.DateTimeFormat" /> o cualquiera de las propiedades <see cref="T:System.Globalization.DateTimeFormatInfo" />, y <see cref="T:System.Globalization.CultureInfo" /> es de solo lectura.</exception>
        <block subset="none" type="usage"><para>Si <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> es el <see cref="T:System.Globalization.TaiwanCalendar" /> pero la <see cref="P:System.Threading.Thread.CurrentCulture" /> no está establecido en chino (Taiwán), denominado zh-TW, a continuación, <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, y <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> devuelve una cadena vacía ("").</para></block>
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="M:System.Globalization.CultureInfo.GetFormat(System.Type)" />
        <altmember cref="P:System.Globalization.CultureInfo.NumberFormat" />
      </Docs>
    </Member>
    <Member MemberName="DefaultThreadCurrentCulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo DefaultThreadCurrentCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo DefaultThreadCurrentCulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.DefaultThreadCurrentCulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultThreadCurrentCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ DefaultThreadCurrentCulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultThreadCurrentCulture : System.Globalization.CultureInfo with get, set" Usage="System.Globalization.CultureInfo.DefaultThreadCurrentCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la referencia cultural predeterminada para los subprocesos del dominio de aplicación actual.</summary>
        <value>Referencia cultural predeterminada para los subprocesos del dominio de aplicación actual, o <see langword="null" /> si la referencia cultural actual del sistema es la referencia cultural predeterminada del subproceso en el dominio de aplicación.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En el [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] y versiones anteriores, de forma predeterminada, se establece la referencia cultural de todos los subprocesos en la referencia cultural del sistema de Windows. Para las aplicaciones cuya referencia cultural actual difiere de la referencia cultural del sistema de forma predeterminada, este comportamiento suele ser deseable. En el [!INCLUDE[net_v45](~/includes/net-v45-md.md)], el <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> propiedad permite que una aplicación definir la referencia cultural predeterminada de todos los subprocesos en un dominio de aplicación.  
  
> [!IMPORTANT]
>  Si no estableció explícitamente la referencia cultural de cualquier existente subprocesos que se ejecutan en un dominio de aplicación, establecer el <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> propiedad también cambia la referencia cultural de estos subprocesos. Sin embargo, si estos subprocesos se ejecutan en otro dominio de aplicación, su referencia cultural se define mediante el <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> propiedad en ese dominio de aplicación o bien, si no se define ningún valor predeterminado, mediante la referencia cultural predeterminada del sistema. Por este motivo, se recomienda que establezca siempre explícitamente la referencia cultural del subproceso principal de la aplicación de y no depender de la <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> propiedad para definir la referencia cultural del subproceso principal de la aplicación.  
  
 A menos que se establecen explícitamente, el valor de la <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> propiedad es `null`, y la referencia cultural de subprocesos en un dominio de aplicación que no se ha asignado una referencia cultural explícita se define mediante la referencia cultural del sistema de Windows de forma predeterminada.  
  
 Para obtener más información acerca de las referencias culturales, subprocesos y dominios de aplicación, vea "referencia cultural y los subprocesos" y "referencia cultural y los dominios de aplicación" secciones en el <xref:System.Globalization.CultureInfo> página de referencia.  
  
   
  
## Examples  
 El ejemplo siguiente muestra el comportamiento predeterminado de .NET Framework en la definición de la referencia cultural actual de un nuevo subproceso. Al iniciarse, el ejemplo establece la referencia cultural actual y la referencia cultural de interfaz de usuario actual al francés (Francia) en todos los sistemas, excepto aquellos en los que la referencia cultural predeterminada del sistema ya es francés (Francia). Si la referencia cultural predeterminada del sistema ya está en francés (Francia), el código establece la referencia cultural actual y la referencia cultural de interfaz de usuario actual en inglés (Estados Unidos). A continuación, llama el `DisplayRandomNumbers` rutina, que genera tres números aleatorios y los muestra como valores de moneda. A continuación, crea un nuevo subproceso, que también ejecuta el `DisplayRandomNumbers` rutina.  
  
 [!code-csharp[System.Globalization.CultureInfo.DefaultThreadCurrentCulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentculture/cs/defaultculture1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.DefaultThreadCurrentCulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentculture/vb/defaultculture1.vb#1)]  
  
 Como muestra el resultado del ejemplo, cuando se ejecuta el ejemplo en un equipo cuya referencia cultural del sistema es inglés (Estados Unidos), el subproceso principal muestra sus valores de moneda mediante las convenciones de formato de la referencia cultural de francés (Francia). Sin embargo, porque la referencia cultural del subproceso de trabajo se deriva de la referencia cultural actual del sistema de Windows en lugar de la referencia cultural actual de la aplicación, el subproceso de trabajo muestra sus valores de moneda mediante las convenciones de formato de la referencia cultural inglés (Estados Unidos).  
  
 En el ejemplo siguiente se usa el <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> y <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> las propiedades para definir la referencia cultural actual y la actual referencia cultural de interfaz de usuario de un nuevo subproceso de aplicación. Al iniciarse, el ejemplo establece la referencia cultural actual y la referencia cultural de interfaz de usuario actual al francés (Francia) en todos los sistemas, excepto aquellos en los que la referencia cultural predeterminada del sistema ya es francés (Francia). Si la referencia cultural predeterminada del sistema ya está en francés (Francia), Establece la referencia cultural actual y la referencia cultural de interfaz de usuario actual para inglés (Estados Unidos). A continuación, llama el `DisplayRandomNumbers` rutina, que genera tres números aleatorios y los muestra como valores de moneda. A continuación, crea un nuevo subproceso, que también ejecuta el `DisplayRandomNumbers` rutina.  
  
 [!code-csharp[System.Globalization.CultureInfo.DefaultThreadCurrentCulture#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentculture/cs/defaultculture2.cs#2)]
 [!code-vb[System.Globalization.CultureInfo.DefaultThreadCurrentCulture#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentculture/vb/defaultculture2.vb#2)]  
  
 Como muestra el resultado del ejemplo, cuando se ejecuta el ejemplo en un equipo cuya referencia cultural del sistema es inglés (Estados Unidos), el subproceso principal y el subproceso de trabajo mostrar sus valores de moneda mediante las convenciones de formato de la referencia cultural de francés (Francia).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture" />
      </Docs>
    </Member>
    <Member MemberName="DefaultThreadCurrentUICulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo DefaultThreadCurrentUICulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo DefaultThreadCurrentUICulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultThreadCurrentUICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ DefaultThreadCurrentUICulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultThreadCurrentUICulture : System.Globalization.CultureInfo with get, set" Usage="System.Globalization.CultureInfo.DefaultThreadCurrentUICulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la referencia cultural predeterminada de la interfaz de usuario para los subprocesos del dominio de aplicación actual.</summary>
        <value>Referencia cultural de la interfaz de usuario predeterminada para los subprocesos del dominio de aplicación actual, o <see langword="null" /> si la referencia cultural de la interfaz de usuario actual del sistema es la referencia cultural de la interfaz de usuario predeterminada del subproceso en el dominio de aplicación.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En el [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] y versiones anteriores, de forma predeterminada, se establece la referencia cultural de interfaz de usuario de todos los subprocesos en la referencia cultural del sistema de Windows. Para las aplicaciones cuya referencia cultural de interfaz de usuario actual difiere de la referencia cultural del sistema de forma predeterminada, este comportamiento suele ser deseable. En el [!INCLUDE[net_v45](~/includes/net-v45-md.md)], el <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> propiedad le permite definir la referencia cultural de interfaz de usuario predeterminada de todos los subprocesos en un dominio de aplicación.  
  
> [!IMPORTANT]
>  Si no estableció explícitamente la referencia cultural de interfaz de usuario de cualquier existente subprocesos que se ejecutan en un dominio de aplicación, establecer el <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> propiedad también cambia la referencia cultural de estos subprocesos. Sin embargo, si estos subprocesos se ejecutan en otro dominio de aplicación, su referencia cultural se define mediante el <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> propiedad en ese dominio de aplicación o bien, si no se define ningún valor predeterminado, mediante la referencia cultural predeterminada del sistema. Por este motivo, recomendamos que siempre explícitamente establecer la referencia cultural del subproceso principal de la aplicación de y no confíe en el <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> propiedad para definir la referencia cultural del subproceso principal de la aplicación.  
  
 A menos que se establecen explícitamente, el valor de la <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> propiedad es `null`, y la referencia cultural de todos los subprocesos en un dominio de aplicación que no se ha asignado una referencia cultural explícita se define mediante la referencia cultural del sistema de Windows de forma predeterminada.  
  
 Para obtener más información acerca de las referencias culturales, subprocesos y dominios de aplicación, vea "referencia cultural y los subprocesos" y "referencia cultural y los dominios de aplicación" secciones en el <xref:System.Globalization.CultureInfo> página de referencia.  
  
   
  
## Examples  
 El ejemplo siguiente muestra el comportamiento predeterminado de .NET Framework en la definición de la referencia cultural actual de un nuevo subproceso. Usa los recursos de idioma inglés y ruso. El siguiente archivo de texto denominado GreetingStrings.txt contiene los recursos de idioma inglés:  
  
```  
greeting =Hello again!  
newGreeting=Hello!  
```  
  
 Se compila en un archivo .resources binario denominado GreetingStrings.resources mediante el [Resource File Generator](~/docs/framework/tools/resgen-exe-resource-file-generator.md) con el siguiente comando.  
  
```console  
resgen greetingstrings.txt  
```  
  
 El siguiente archivo de texto denominado GreetingStrings.ru-RU. txt contiene los recursos de idioma ruso:  
  
```  
greeting=Еще раз привет!  
newGreeting=Привет!  
```  
  
 Se compila en un archivo .resources binario denominado GreetingStrings.ru RU.resources mediante el [Resource File Generator](~/docs/framework/tools/resgen-exe-resource-file-generator.md) con el siguiente comando.  
  
```console  
resgen greetingstrings.ru-RU.txt  
```  
  
 El código de aplicación, que se muestra a continuación, se encuentra en un archivo denominado Example1.cs o Example1.vb. Se compila en un ejecutable mediante el comando siguiente para el compilador de Visual Basic:  
  
```console  
vbc Example1.vb /resource:GreetingStrings.resources  
```  
  
 Para el compilador de C#, el comando es similar:  
  
```console  
csc /resource:GreetingStrings.resources Example1.cs  
```  
  
 Esto crea un ensamblado que incluye código ejecutable del ejemplo junto con los recursos para su referencia cultural de reserva. También puede usar el [Assembly Linker](~/docs/framework/tools/al-exe-assembly-linker.md) para crear el archivo de recursos para la referencia cultural de ruso (Rusia) con el siguiente comando:  
  
```console  
>al /embed:greetingstrings.ru-RU.resources /c:ru-RU /template:example1.exe /out:ru-RU\Example1.resources.dll  
```  
  
 Al iniciarse, el ejemplo establece la referencia cultural actual y la referencia cultural de interfaz de usuario actual en ruso (Rusia) en todos los sistemas, excepto aquellos en los que la referencia cultural predeterminada del sistema ya es el rusa (Rusia). Si la referencia cultural predeterminada del sistema está ruso (Rusia), el código establece la referencia cultural actual y la interfaz de usuario actual de la referencia cultural para inglés (Estados Unidos). A continuación, llama el `ShowGreeting` rutina, que muestra una cadena simple, la primera vez que se llama y una cadena ligeramente diferente en llamadas posteriores a métodos. A continuación, crea un nuevo subproceso, que también ejecuta el `ShowGreeting` rutina.  
  
 [!code-csharp[System.Globalization.CultureInfo.DefaultThreadCurrentUICulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentuiculture/cs/example1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.DefaultThreadCurrentUICulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentuiculture/vb/example1.vb#1)]  
  
 Como muestra el resultado del ejemplo, cuando se ejecuta el ejemplo en un equipo cuya referencia cultural del sistema es inglés (Estados Unidos), el subproceso principal muestra la cadena inicial en ruso. Sin embargo, porque la referencia cultural del subproceso de trabajo se deriva de la referencia cultural actual del sistema de Windows en lugar de la referencia cultural actual de la aplicación, el subproceso de trabajo muestra la cadena en inglés.  
  
 En el ejemplo siguiente se usa el <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> y <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> las propiedades para definir la referencia cultural actual y la actual referencia cultural de interfaz de usuario de un nuevo subproceso de aplicación.  
  
 El ejemplo utiliza los mismos archivos de recursos que el ejemplo anterior. Los comandos para compilar e incrustar los recursos de idioma ruso localizado en un ensamblado satélite también son idénticos, salvo que cambia el nombre del ensamblado ejecutable.  
  
 Al iniciarse, el ejemplo establece la referencia cultural actual y la referencia cultural de interfaz de usuario actual en ruso (Rusia) en todos los sistemas, excepto aquellos en los que la referencia cultural predeterminada del sistema ya es el rusa (Rusia). Si la referencia cultural predeterminada del sistema ya es el rusa (Rusia), Establece la referencia cultural actual y la referencia cultural de interfaz de usuario actual en inglés (Estados Unidos). A continuación, llama el `ShowGreeting` rutina, que muestra una cadena simple, la primera vez que se llama y una cadena ligeramente diferente en llamadas posteriores a métodos. A continuación, crea un nuevo subproceso, que también ejecuta el `ShowGreeting` rutina.  
  
 [!code-csharp[System.Globalization.CultureInfo.DefaultThreadCurrentUICulture#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentuiculture/cs/example2.cs#2)]
 [!code-vb[System.Globalization.CultureInfo.DefaultThreadCurrentUICulture#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentuiculture/vb/example2.vb#2)]  
  
 Como muestra el resultado del ejemplo, cuando se ejecuta el ejemplo en un equipo cuya referencia cultural del sistema es inglés (Estados Unidos), el subproceso principal y el subproceso de trabajo muestran sus cadenas en ruso.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">En una operación de conjunto, el valor de la propiedad <see cref="P:System.Globalization.CultureInfo.Name" /> no es válido.</exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.DefaultThreadCurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public virtual string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Globalization.CultureInfo.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de referencia cultural localizado completo.</summary>
        <value>El nombre de referencia cultural localizado completo en el formato *languagefull* [*country/regionfull*], donde *languagefull* es el nombre completo del idioma y  *Country/regionfull* es el nombre completo del país o región.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad representa el nombre localizado de la <xref:System.Globalization.CultureInfo> objeto.  
  
 Nombres de referencia cultural pueden variar debido a secuencias de comandos o las convenciones de formato. Debe usar el nombre devuelto para su presentación y no intentar analizarlo.  
  
 Si se crea una referencia cultural personalizada por medio de la <xref:System.Globalization.CultureAndRegionInfoBuilder> (clase), el <xref:System.Globalization.CultureInfo.DisplayName%2A> propiedad se inicializa en el valor de la <xref:System.Globalization.CultureInfo.NativeName%2A> propiedad.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra varias propiedades de las referencias culturales neutras.  
  
> [!NOTE]
>  El ejemplo muestra las referencias culturales de zh-CHS y zh-CHT con los identificadores de referencia cultural 0 x 0004 y 0x7C04, respectivamente. Sin embargo, las aplicaciones de Windows Vista deben usar el nombre de zh-Hans en lugar de zh-CHS y el nombre de zh-Hant en lugar de zh-CHT. El zh-Hans y zh-Hant nombres representan el estándar actual y se debe usar a menos que tenga una razón para usar los nombres antiguos.  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="EnglishName">
      <MemberSignature Language="C#" Value="public virtual string EnglishName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EnglishName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.EnglishName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EnglishName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EnglishName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnglishName : string" Usage="System.Globalization.CultureInfo.EnglishName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de la referencia cultural en el formato *languagefull* [*country/regionfull*] en inglés.</summary>
        <value>El nombre de referencia cultural en el formato *languagefull* [*country/regionfull*] en inglés, donde *languagefull* es el nombre completo del idioma y *país / regionfull* es el nombre completo del país o región.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por ejemplo, el <xref:System.Globalization.CultureInfo.EnglishName%2A> para la referencia cultural en-US de nombre es "Inglés (Estados Unidos)".  
  
 El valor de esta propiedad es el mismo, independientemente de la versión de idioma de .NET Framework.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra varias propiedades de las referencias culturales neutras.  
  
> [!NOTE]
>  En el ejemplo se muestra el zh-CHS anteriores y los nombres de referencia cultural zh-CHT con los identificadores de referencia cultural 0 x 0004 y 0x7C04, respectivamente. Sin embargo, las aplicaciones de Windows Vista deben usar el nombre de zh-Hans en lugar de zh-CHS y el nombre de zh-Hant en lugar de zh-CHT. El zh-Hans y zh-Hant nombres representan el estándar actual y se debe usar a menos que tenga una razón para usar los nombres antiguos.  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="cultureInfo.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Objeto que se va a comparar con el objeto <see cref="T:System.Globalization.CultureInfo" /> actual.</param>
        <summary>Determina si el objeto especificado es la misma referencia cultural que el objeto <see cref="T:System.Globalization.CultureInfo" /> actual.</summary>
        <returns><see langword="true" /> si <paramref name="value" /> es la misma referencia cultural que el <see cref="T:System.Globalization.CultureInfo" /> actual; en caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método invalida <xref:System.Object.Equals%2A?displayProperty=nameWithType>.  
  
 Dos <xref:System.Globalization.CultureInfo> objetos se consideran iguales si sus <xref:System.Globalization.CultureInfo.Name%2A> y <xref:System.Globalization.CultureInfo.CompareInfo%2A> propiedades son iguales.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetConsoleFallbackUICulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo GetConsoleFallbackUICulture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Globalization.CultureInfo GetConsoleFallbackUICulture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetConsoleFallbackUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConsoleFallbackUICulture () As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Globalization::CultureInfo ^ GetConsoleFallbackUICulture();" />
      <MemberSignature Language="F#" Value="member this.GetConsoleFallbackUICulture : unit -&gt; System.Globalization.CultureInfo" Usage="cultureInfo.GetConsoleFallbackUICulture " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene una referencia cultural de la interfaz de usuario alternativa apta para las aplicaciones de consola cuando la referencia cultural de la interfaz gráfica de usuario predeterminada no es apropiada.</summary>
        <returns>Una referencia cultural alternativa que se utiliza para leer y mostrar texto en la consola.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Idiomas como el árabe, hebreo, urdú y sirio se basan en texto bidireccional. Las aplicaciones de Windows, que tienen una interfaz gráfica de usuario, admiten idiomas bidireccionales. Sin embargo, las aplicaciones de consola, que emplean la interfaz de usuario de texto de la consola del sistema operativo, no proporcionan compatibilidad bidireccional. Por lo tanto, si localiza una aplicación de consola a árabe o hebreo, la aplicación muestra un texto ilegible en la pantalla de la consola.  
  
 La referencia cultural de interfaz de usuario especifica los recursos de una aplicación debe admitir la entrada de usuario y la salida y de forma predeterminada es igual que la referencia cultural del sistema operativo. Por ejemplo, el <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> propiedad devuelve una referencia cultural árabe para un sistema operativo árabe. Use el <xref:System.Globalization.CultureInfo.GetConsoleFallbackUICulture%2A> método para recuperar una referencia cultural apropiada para una interfaz de usuario de la aplicación de consola. Una vez que la aplicación recupera la referencia cultural de interfaz de usuario de reserva, debe asignar la referencia cultural para la referencia cultural actual interfaz de usuario del subproceso actual. Para obtener más información, vea la sección "Explícitamente configuración la interfaz de usuario referencia cultural actual" de la <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> propiedad.  
  
 Las siguientes son las referencias culturales predefinidas que tienen un nombre de referencia cultural de interfaz de usuario reserva diferente del nombre de referencias culturales predefinidos.  
  
|Referencias culturales predefinidos|Nombre de referencia cultural|Nombre de referencia cultural de interfaz de usuario de reserva|  
|------------------------|------------------|------------------------------------------|  
|Amárico|am|en-US|  
|Amárico (Etiopía)|am-ET|en-US|  
|(árabe neutro)|ar|en-US|  
|Árabe (Emiratos Árabes Unidos)|ar-AE|en-US|  
|Árabe (Bahréin)|ar-BH|en-US|  
|Árabe (Argelia)|ar-DZ|fr-FR|  
|Árabe (Egipto)|ar-EG|en-US|  
|Árabe (Iraq)|ar-IQ|en-US|  
|Árabe (Jordania)|ar-JO|en-US|  
|Árabe (Kuwait)|ar-KW|en-US|  
|Árabe (Líbano)|ar-LB|en-US|  
|Árabe (Libia)|ar-LY|en-US|  
|Árabe (Marruecos)|ar-MA|fr-FR|  
|Árabe (Omán)|ar-OM|en-US|  
|Árabe (Qatar)|ar-QA|en-US|  
|Árabe (Arabia Saudí)|ar-SA|en-US|  
|Árabe (Siria)|ar SY|en-US|  
|Árabe (Túnez)|ar-TN|fr-FR|  
|Árabe (Yemen)|ar-YE|en-US|  
|Assamese|as|en-US|  
|Asamés (India)|as-IN|en-US|  
|Bengalí|bn|en-US|  
|Bengali (Bangladesh)|bn-BD|en-US|  
|Bengali (India)|bn-IN|en-US|  
|Tibetano|bo|en-US|  
|Tibetano (RPC)|bo-CN|en-US|  
|Divehi|dv|en-US|  
|Divehi (India)|dv-MV|en-US|  
|Persa|fa|en-US|  
|Persa (irán)|fa-IR|en-US|  
|Gujarati|gu|en-US|  
|Guyaratí (India)|gu-IN|en-US|  
|Hebreo|he|en-US|  
|Hebrew (Israel)|he-IL|en-US|  
|Hindi|hi|en-US|  
|Hindi (India)|hi-IN|en-US|  
|Yi|ii|en-US|  
|Yi (RPC)|ii-CN|en-US|  
|Inuktitut silábico|Latas de IU|en-US|  
|Inuktitut (silábico, Canadá)|iu-Cans-CA|en-US|  
|Jemer|km|en-US|  
|Khmer (Camboya)|km-KH|en-US|  
|Canarés|kn|en-US|  
|Kannada (India)|kn-IN|en-US|  
|Konkani|kok|en-US|  
|Konkani (India)|kok IN|en-US|  
|Lao|lo|en-US|  
|Lao (R.d.p. de Laos)|lo-LA|en-US|  
|Malayalam|ml|en-US|  
|Malayalam (India)|ml-IN|en-US|  
|Mohawk|MOH|en-US|  
|Mohawk (Canadá)|moh-CA|en-US|  
|Marathi|MR|en-US|  
|Marathi (India)|mr-IN|en-US|  
|Nepali|ne|en-US|  
|Nepali (Nepal)|ne-NP|en-US|  
|Noruego|No|nb-NO|  
|Oriya|o|en-US|  
|Oriya (India)|or-IN|en-US|  
|Punjabi|pa|en-US|  
|Punjabi (India)|pa-IN|en-US|  
|Dari|incorporación de cambios|en-US|  
|Dari (Afganistán)|prs-AF|en-US|  
|Pashto|ps|en-US|  
|Pashto (Afganistán)|ps-AF|en-US|  
|Sánscrito|sa|en-US|  
|Sánscrito (India)|sa-IN|en-US|  
|Cingalés|si|en-US|  
|Sinhala (Sri Lanka)|si-LK|en-US|  
|Siríaco|SYR|en-US|  
|Sirio (Siria)|SYR SY|en-US|  
|Tamul|ta|en-US|  
|Tamil (India)|ta-IN|en-US|  
|Telugu|te|en-US|  
|Telugu (India)|te-IN|en-US|  
|Tailandés|TH|en-US|  
|Tailandés (Tailandia)|th-Th|en-US|  
|Uigur|UG|en-US|  
|Uigur (RPC)|ug-CN|en-US|  
|Urdú|su|en-US|  
|Urdú (Pakistán)|ur-PK|en-US|  
|Vietnamita|vi|en-US|  
|Vietnamita (Vietnam)|vi-VN|en-US|  
  
 Puede usar la aplicación <xref:System.Globalization.CultureAndRegionInfoBuilder> para crear un reemplazo para una referencia cultural y esa referencia cultural pueden tener una referencia cultural de reserva consola de su elección.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra la referencia cultural de interfaz de usuario de reserva asociada con un objeto culture.  
  
 [!code-cpp[sys.glob.ci.getCFUIC#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.ci.getCFUIC/cpp/cfuic.cpp#1)]
 [!code-csharp[sys.glob.ci.getCFUIC#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.ci.getCFUIC/CS/cfuic.cs#1)]
 [!code-vb[sys.glob.ci.getCFUIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.ci.getCFUIC/VB/cfuic.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCultureInfo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera una instancia almacenada en memoria caché, de solo lectura, de una referencia cultural.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCultureInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo GetCultureInfo (int culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo GetCultureInfo(int32 culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetCultureInfo(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultureInfo (culture As Integer) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ GetCultureInfo(int culture);" />
      <MemberSignature Language="F#" Value="static member GetCultureInfo : int -&gt; System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.GetCultureInfo culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="culture">Identificador de configuración regional (LCID).</param>
        <summary>Recupera una instancia almacenada en memoria caché, de solo lectura, de una referencia cultural usando el identificador de referencia cultural especificado.</summary>
        <returns>Un objeto <see cref="T:System.Globalization.CultureInfo" /> de solo lectura.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le recomendamos que use la sobrecarga de la cadena de este método (<xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29>), ya que se deben usar nombres de configuración regional en lugar de LCID. Para las configuraciones regionales personalizadas, se requiere el nombre de la configuración regional.  
  
 Si `culture` es el identificador de configuración regional de la referencia cultural, el valor devuelto <xref:System.Globalization.CultureInfo> objeto no refleja las invalidaciones del usuario.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="culture" /> es menor que cero.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException"><paramref name="culture" /> especifica una referencia cultural que no se admite. Para obtener más información, vea la sección Notas para los autores de llamada.</exception>
        <block subset="none" type="usage"><para>El [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] y versiones anteriores a producir un <see cref="T:System.ArgumentException" /> si <paramref name="culture" /> no es un identificador de referencia cultural válido. A partir de la [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], este método produce una <see cref="T:System.Globalization.CultureNotFoundException" />. A partir de las aplicaciones que se ejecutan en el [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] o posterior en Windows 7 o versiones posteriores, el método intenta recuperar un <see cref="T:System.Globalization.CultureInfo" /> objeto cuyo identificador es <paramref name="culture" /> desde el sistema operativo; si el sistema operativo no admite esa referencia cultural, el método produce una <see cref="T:System.Globalization.CultureNotFoundException" />.</para></block>
        <altmember cref="P:System.Globalization.CultureInfo.LCID" />
        <altmember cref="M:System.Globalization.CultureInfo.ClearCachedData" />
      </Docs>
    </Member>
    <Member MemberName="GetCultureInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo GetCultureInfo (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo GetCultureInfo(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetCultureInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultureInfo (name As String) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ GetCultureInfo(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetCultureInfo : string -&gt; System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.GetCultureInfo name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name">Nombre de una referencia cultural. <paramref name="name" /> no distingue entre mayúsculas y minúsculas.</param>
        <summary>Recupera una instancia almacenada en memoria caché, de solo lectura, de una referencia cultural utilizando el nombre de referencia cultural especificado.</summary>
        <returns>Un objeto <see cref="T:System.Globalization.CultureInfo" /> de solo lectura.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener una lista de nombres de referencias culturales predefinidos, vea la [referencia de National Language Support (NLS) API](https://go.microsoft.com/fwlink/?LinkId=200048) en el centro de desarrolladores Go Global. Además, a partir de Windows 10, `name` puede ser cualquier etiqueta de idioma BCP-47 válida.  
  
 El <xref:System.Globalization.CultureInfo.GetCultureInfo%2A> método recupera una caché de solo lectura <xref:System.Globalization.CultureInfo> objeto. Ofrece un rendimiento mejor que una llamada correspondiente a la <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29?displayProperty=nameWithType> constructor.  
  
 Si `name` es el nombre de la referencia cultural, el valor devuelto <xref:System.Globalization.CultureInfo> objeto no refleja las invalidaciones del usuario. Esto hace que el método adecuado para aplicaciones de servidor o herramientas que no tienen una cuenta de usuario real en el sistema y que deba cargar varias referencias culturales de manera eficaz.  
  
 Si `name` es <xref:System.String.Empty?displayProperty=nameWithType>, el método devuelve la referencia cultural invariable. Esto es equivalente a recuperar el valor de la <xref:System.Globalization.CultureInfo.InvariantCulture%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> es null.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException"><paramref name="name" /> especifica una referencia cultural que no se admite. Vea la sección Notas para los llamadores para obtener más información.</exception>
        <block subset="none" type="usage"><para>El [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] y versiones anteriores a producir un <see cref="T:System.ArgumentException" /> si <paramref name="name" /> no es un nombre de referencia cultural válido. A partir de la [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], este método produce una <see cref="T:System.Globalization.CultureNotFoundException" />. A partir de las aplicaciones que se ejecutan en el [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] o posterior en Windows 7 o versiones posteriores, el método intenta recuperar un <see cref="T:System.Globalization.CultureInfo" /> objeto cuyo identificador es <paramref name="name" /> desde el sistema operativo; si el sistema operativo no admite esa referencia cultural y si <paramref name="name" /> no es el nombre de una referencia cultural complementaria o de reemplazo, el método inicia una <see cref="T:System.Globalization.CultureNotFoundException" />.</para></block>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
      </Docs>
    </Member>
    <Member MemberName="GetCultureInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo GetCultureInfo (string name, string altName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo GetCultureInfo(string name, string altName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetCultureInfo(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultureInfo (name As String, altName As String) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ GetCultureInfo(System::String ^ name, System::String ^ altName);" />
      <MemberSignature Language="F#" Value="static member GetCultureInfo : string * string -&gt; System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.GetCultureInfo (name, altName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="altName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name">Nombre de una referencia cultural. <paramref name="name" /> no distingue entre mayúsculas y minúsculas.</param>
        <param name="altName">Nombre de una referencia cultural que proporciona los objetos <see cref="T:System.Globalization.TextInfo" /> y <see cref="T:System.Globalization.CompareInfo" /> utilizados para inicializar <paramref name="name" />. <paramref name="altName" /> no distingue entre mayúsculas y minúsculas.</param>
        <summary>Recupera una instancia almacenada en memoria caché, de solo lectura, de una referencia cultural. Los parámetros especifican una referencia cultural que se inicializa con los objetos <see cref="T:System.Globalization.TextInfo" /> y <see cref="T:System.Globalization.CompareInfo" /> especificados por otra referencia cultural.</summary>
        <returns>Un objeto <see cref="T:System.Globalization.CultureInfo" /> de solo lectura.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener una lista de nombres de referencias culturales predefinidos, vea la [referencia de National Language Support (NLS) API](https://go.microsoft.com/fwlink/?LinkId=200048) en el centro de desarrolladores Go Global. Además, a partir de Windows 10, `name` puede ser cualquier etiqueta de idioma BCP-47 válida.  
  
 El <xref:System.Globalization.CultureInfo.GetCultureInfo%2A> método obtiene una caché de solo lectura <xref:System.Globalization.CultureInfo> objeto. Ofrece un rendimiento mejor que una llamada correspondiente a un <xref:System.Globalization.CultureInfo.%23ctor%2A> constructor. El método se utiliza para crear una referencia cultural similar a la especificada por el `name` reglas de parámetro, pero con distintas mayúsculas y minúsculas y de ordenación.  
  
 Si `name` o `altName` es el nombre de la referencia cultural actual, los objetos devueltos no reflejan las invalidaciones del usuario. Si `name` es <xref:System.String.Empty?displayProperty=nameWithType>, el método devuelve la referencia cultural invariable. Esto es equivalente a recuperar el valor de la <xref:System.Globalization.CultureInfo.InvariantCulture%2A> propiedad. Si `altName` es <xref:System.String.Empty?displayProperty=nameWithType>, el método usa el sistema de escritura y la comparación de las reglas especificadas por la referencia cultural invariable.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> o <paramref name="altName" /> es null.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException"><paramref name="name" /> o <paramref name="altName" /> especifica una referencia cultural que no se admite. Vea la sección Notas para los llamadores para obtener más información.</exception>
        <block subset="none" type="usage"><para>El [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] y versiones anteriores a producir un <see cref="T:System.ArgumentException" /> si <paramref name="name" /> o <paramref name="altName" /> no es un nombre de referencia cultural válido. A partir de la [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], este método produce una <see cref="T:System.Globalization.CultureNotFoundException" />. A partir de las aplicaciones que se ejecutan en el [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] o posterior en Windows 7 o versiones posteriores, el método intenta recuperar un <see cref="T:System.Globalization.CultureInfo" /> objeto cuyo identificador es <paramref name="name" /> desde el sistema operativo; si el sistema operativo no admite esa referencia cultural y si <paramref name="name" /> no es el nombre de una referencia cultural complementaria o de reemplazo, el método inicia una <see cref="T:System.Globalization.CultureNotFoundException" /> excepción. A partir de las aplicaciones que se ejecutan en el [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] o posterior en Windows 7 o versiones posteriores, el método intenta recuperar un <see cref="T:System.Globalization.CultureInfo" /> objeto cuyo identificador es <paramref name="name" /> desde el sistema operativo; si el sistema operativo no admite esa referencia cultural y si <paramref name="name" /> no es el nombre de una referencia cultural complementaria o de reemplazo, el método inicia una <see cref="T:System.Globalization.CultureNotFoundException" /> excepción.</para></block>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="M:System.Globalization.CultureInfo.ClearCachedData" />
      </Docs>
    </Member>
    <Member MemberName="GetCultureInfoByIetfLanguageTag">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo GetCultureInfoByIetfLanguageTag (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo GetCultureInfoByIetfLanguageTag(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultureInfoByIetfLanguageTag (name As String) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ GetCultureInfoByIetfLanguageTag(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetCultureInfoByIetfLanguageTag : string -&gt; System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="name">Nombre de un idioma especificado por el estándar RFC 4646.</param>
        <summary>Desusado. Recupera un objeto <see cref="T:System.Globalization.CultureInfo" /> de solo lectura cuyas características lingüísticas se identifican por la etiqueta de idioma RFC 4646 especificada.</summary>
        <returns>Un objeto <see cref="T:System.Globalization.CultureInfo" /> de solo lectura.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Este método y el <xref:System.Globalization.CultureInfo.IetfLanguageTag%2A> propiedad están en desuso. En lugar de usar estos elementos, la aplicación debe usar un nuevo <xref:System.Globalization.CultureInfo> objeto y llama a la <xref:System.Globalization.CultureInfo.Name%2A> propiedad. Las etiquetas IETF y los nombres son idénticos.  
  
 El estándar RFC 4646, que se mantiene por Internet Engineering Task Force (IETF) define una etiqueta de idioma IETF, que proporciona un medio uniforme para identificar un idioma. El formato de una etiqueta de idioma IETF es el mismo que el nombre de la referencia cultural devolviendo por la <xref:System.Globalization.CultureInfo.Name%2A> propiedad, pero no identifica de forma única una referencia cultural. Las distintas referencias culturales comparten la misma etiqueta de idioma IETF si esas referencias culturales tienen características lingüísticas idénticas. Las características lingüísticas de una referencia cultural que se encuentran en el <xref:System.Globalization.TextInfo> objeto asociado con un <xref:System.Globalization.CultureInfo> objeto.  
  
 Una etiqueta de idioma IETF consta de un identificador de idioma obligatorio, un identificador de secuencia de comandos opcional y un identificador de región opcional.  
  
 Las aplicaciones deben utilizar la referencia cultural recuperada para controlar tareas específicas del idioma, como la administración de un corrector ortográfico o gramática. Las aplicaciones no deben usar la referencia cultural recuperada para controlar tareas específicas de referencias culturales, como ordenar el texto o dar formato a horas y fechas.  
  
 Para obtener más información, vea RFC 4646, "Tags for identificar Languages" y la más reciente borrador estándar, Draft-phillips-langtags-05.txt, en [ http://go.microsoft.com/fwlink/?LinkId=100231 ](https://go.microsoft.com/fwlink/?LinkId=100231).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> es null.</exception>
        <exception cref="T:System.Globalization.CultureNotFoundException"><paramref name="name" /> no corresponde a una referencia cultural admitida.</exception>
        <block subset="none" type="usage"><para>El [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] y versiones anteriores a producir un <see cref="T:System.ArgumentException" /> si <paramref name="name" /> no se corresponde con el nombre de una referencia cultural admitida. A partir de la [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], este método produce una <see cref="T:System.Globalization.CultureNotFoundException" />.</para></block>
        <altmember cref="P:System.Globalization.CultureInfo.TextInfo" />
        <altmember cref="T:System.Globalization.CultureAndRegionInfoBuilder" />
        <altmember cref="M:System.Globalization.CultureInfo.ClearCachedData" />
      </Docs>
    </Member>
    <Member MemberName="GetCultures">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo[] GetCultures (System.Globalization.CultureTypes types);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo[] GetCultures(valuetype System.Globalization.CultureTypes types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetCultures(System.Globalization.CultureTypes)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultures (types As CultureTypes) As CultureInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Globalization::CultureInfo ^&gt; ^ GetCultures(System::Globalization::CultureTypes types);" />
      <MemberSignature Language="F#" Value="static member GetCultures : System.Globalization.CultureTypes -&gt; System.Globalization.CultureInfo[]" Usage="System.Globalization.CultureInfo.GetCultures types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Globalization.CultureTypes" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="types">Combinación bit a bit de los valores de la enumeración que filtran las referencias culturales que se van a obtener.</param>
        <summary>Obtiene la lista de referencias culturales admitidas filtradas por el parámetro <see cref="T:System.Globalization.CultureTypes" /> especificado.</summary>
        <returns>Matriz que contiene las referencias culturales especificadas por el parámetro <paramref name="types" />. La matriz de referencias culturales no está ordenada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Globalization.CultureInfo.GetCultures%2A> método normalmente se denomina con el `types` parámetro establecido en los siguientes valores:  
  
-   <xref:System.Globalization.CultureTypes.SpecificCultures>, que devuelve todas las referencias culturales específicas.  
  
-   <xref:System.Globalization.CultureTypes.NeutralCultures>, que devuelve todas las referencias culturales neutras y la referencia cultural invariable.  
  
-   <xref:System.Globalization.CultureTypes.AllCultures>, que devuelve todas las referencias culturales neutras y específicas, las referencias culturales instaladas en el sistema de Windows y las referencias culturales personalizadas creadas por el usuario.  
  
-   <xref:System.Globalization.CultureTypes.UserCustomCulture>, que devuelve todas las referencias culturales personalizadas, como los registrados por el <xref:System.Globalization.CultureAndRegionInfoBuilder> clase. En las versiones de Windows anteriores a Windows 10, la <xref:System.Globalization.CultureTypes.UserCustomCulture> valor se aplica a todas las referencias culturales personalizadas definidas por el usuario. A partir de Windows 10, se aplica a las referencias culturales de sistema que carecen de los datos de referencia culturales completo y que no tienen un identificador único local, tal y como indica la <xref:System.Globalization.CultureInfo.LCID%2A> valor de propiedad. Como resultado, el código como el siguiente devolverá resultados diferentes cuando se ejecutan en Windows 10 y en una versión anterior de Windows.  
  
     [!code-csharp[System.Globalization.CultureInfo.GetCultures#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures3.cs#2)]
     [!code-vb[System.Globalization.CultureInfo.GetCultures#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures3.vb#2)]  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra varias propiedades de las referencias culturales neutras.  
  
> [!NOTE]
>  El ejemplo muestra las referencias culturales de zh-CHS y zh-CHT con los identificadores de referencia cultural 0 x 0004 y 0x7C04, respectivamente. Sin embargo, las aplicaciones de Windows Vista deben usar el nombre de zh-Hans en lugar de zh-CHS y el nombre de zh-Hant en lugar de zh-CHT. El zh-Hans y zh-Hant nombres representan el estándar actual y se debe usar a menos que tenga una razón para usar los nombres antiguos.  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="types" /> especifica una combinación no válida de valores de <see cref="T:System.Globalization.CultureTypes" />.</exception>
        <altmember cref="T:System.Globalization.CultureTypes" />
      </Docs>
    </Member>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public virtual object GetFormat (Type formatType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormat(class System.Type formatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetFormat(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFormat (formatType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetFormat(Type ^ formatType);" />
      <MemberSignature Language="F#" Value="abstract member GetFormat : Type -&gt; obj&#xA;override this.GetFormat : Type -&gt; obj" Usage="cultureInfo.GetFormat formatType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormatProvider.GetFormat(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="formatType"><see cref="T:System.Type" /> para el que se va a obtener un objeto de aplicación de formato. Este método solo admite los tipos <see cref="T:System.Globalization.NumberFormatInfo" /> y <see cref="T:System.Globalization.DateTimeFormatInfo" />.</param>
        <summary>Obtiene un objeto que define cómo se aplica el formato al tipo especificado.</summary>
        <returns>Valor de la propiedad <see cref="P:System.Globalization.CultureInfo.NumberFormat" />, que es una clase <see cref="T:System.Globalization.NumberFormatInfo" /> que contiene información sobre el formato predeterminado de número para la clase <see cref="T:System.Globalization.CultureInfo" /> actual, si <paramref name="formatType" /> es el objeto <see cref="T:System.Type" /> de la clase <see cref="T:System.Globalization.NumberFormatInfo" />.  
  
O bien 
Valor de la propiedad <see cref="P:System.Globalization.CultureInfo.DateTimeFormat" />, que es una clase <see cref="T:System.Globalization.DateTimeFormatInfo" /> que contiene información sobre el formato predeterminado de fecha y hora para la clase <see cref="T:System.Globalization.CultureInfo" /> actual, si <paramref name="formatType" /> es el objeto <see cref="T:System.Type" /> de la clase <see cref="T:System.Globalization.DateTimeFormatInfo" />.  
  
O bien 
null, si <paramref name="formatType" /> es cualquier otro objeto.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureInfo.GetFormat%2A> implementa <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>.  
  
 `NumberFormatInfo` proporciona el formato numérico específico de la referencia cultural utilizado junto con los métodos de formato de los tipos de base de datos. `DateTimeFormatInfo` controla cómo se da formato a los valores de fecha y hora para una referencia cultural concreta.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.NumberFormat" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="cultureInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sirve como función hash para la <see cref="T:System.Globalization.CultureInfo" /> actual, que se puede usar en algoritmos hash y estructuras de datos, como una tabla hash.</summary>
        <returns>Código hash para el objeto <see cref="T:System.Globalization.CultureInfo" /> actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método invalida <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.  
  
 Este método genera el mismo código hash para dos objetos que son iguales de acuerdo con el método <xref:System.Globalization.CultureInfo.Equals%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.Globalization.CultureInfo.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IetfLanguageTag">
      <MemberSignature Language="C#" Value="public string IetfLanguageTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IetfLanguageTag" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.IetfLanguageTag" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IetfLanguageTag As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IetfLanguageTag { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IetfLanguageTag : string" Usage="System.Globalization.CultureInfo.IetfLanguageTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Desusado. Obtiene la identificación del estándar RFC 4646 de un idioma.</summary>
        <value>Cadena que es la identificación del estándar RFC 4646 de un idioma.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Esta propiedad y el <xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A> método están en desuso. En su lugar, debe usar un el <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType> propiedad. Las etiquetas IETF y los nombres son idénticos.  
  
 El estándar RFC 4646, que se mantiene por Internet Engineering Task Force (IETF) define una etiqueta de idioma IETF, que proporciona un medio uniforme para identificar un idioma. El formato de una etiqueta de idioma IETF es similar al nombre de referencia cultural devolviendo por la <xref:System.Globalization.CultureInfo.Name%2A> propiedad, pero no identifica de forma única una referencia cultural. Es decir, las distintas referencias culturales comparten la misma etiqueta de idioma IETF si esas referencias culturales tienen características lingüísticas idénticas. Las características lingüísticas de una referencia cultural que se encuentran en el <xref:System.Globalization.TextInfo> objeto asociado con un <xref:System.Globalization.CultureInfo> objeto.  
  
 Una etiqueta de idioma IETF consta de un identificador de idioma obligatorio, un identificador de secuencia de comandos opcional y un identificador de región opcional.  
  
 Para obtener más información, consulte [RFC 5646, "etiquetas para identificar idiomas](https://go.microsoft.com/fwlink/?LinkId=230876). Para obtener una lista de las subetiquetas, consulte [el registro de subetiquetas del lenguaje de IANA](https://go.microsoft.com/fwlink/?LinkId=230877).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.TextInfo" />
        <altmember cref="T:System.Globalization.CultureAndRegionInfoBuilder" />
      </Docs>
    </Member>
    <Member MemberName="InstalledUICulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo InstalledUICulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo InstalledUICulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.InstalledUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InstalledUICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ InstalledUICulture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InstalledUICulture : System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.InstalledUICulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Globalization.CultureInfo" /> que representa la referencia cultural instalada con el sistema operativo.</summary>
        <value><see cref="T:System.Globalization.CultureInfo" /> que representa la referencia cultural instalada con el sistema operativo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En un sistema operativo localizado, por ejemplo, una edición en japonés de Windows, esta propiedad devuelve la referencia cultural del sistema operativo. Esta propiedad es el equivalente de `GetSystemDefaultUILanguage` en la API de Windows.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Resources.ResourceManager" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.Parent" />
      </Docs>
    </Member>
    <Member MemberName="InvariantCulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo InvariantCulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo InvariantCulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.InvariantCulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ InvariantCulture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InvariantCulture : System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.InvariantCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Globalization.CultureInfo" /> que es independiente de la referencia cultural (invariable).</summary>
        <value>Objeto que es independiente de la referencia cultural (invariable).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La referencia cultural invariable es culturales; está asociado con el idioma inglés, pero no con cualquier país o región. Especificar la referencia cultural invariable por nombre mediante el uso de una cadena vacía ("") en la llamada a un <xref:System.Globalization.CultureInfo> método de creación de instancias. <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> También recupera una instancia de la referencia cultural invariable. Se puede utilizar en casi todos los métodos en el <xref:System.Globalization> espacio de nombres que requiere una referencia cultural. Los objetos devueltos por propiedades tales como <xref:System.Globalization.CultureInfo.CompareInfo%2A>, <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, y <xref:System.Globalization.CultureInfo.NumberFormat%2A> también reflejan la comparación de cadenas y dar formato a las convenciones de la referencia cultural invariable.  
  
 A diferencia de los datos de la referencia cultural, que está sujeta a cambios mediante la personalización del usuario o por las actualizaciones de .NET Framework o el sistema operativo, datos de referencia cultural invariable están estables con el tiempo y entre referencias culturales instaladas y no se pueden personalizar los usuarios. Esto hace que la referencia cultural invariable especialmente útil para las operaciones que requieren resultados independientes de la referencia cultural, como el formato y análisis de las operaciones que se conservan con formato de datos, u ordenando y orden de las operaciones que requieren que los datos se muestran en un orden fijo, independientemente de la referencia cultural.  
  
## <a name="string-operations"></a>Operaciones de cadena  
 Puede usar la referencia cultural invariable para las operaciones de cadenas dependientes de la referencia cultural que no se ven afectados por las convenciones de la referencia cultural del subproceso actual y que son coherentes entre distintas referencias culturales. Por ejemplo, es posible que desee datos ordenados aparezcan en un orden fijo o aplicar un conjunto estándar de convenciones de mayúsculas y minúsculas en las cadenas sin tener en cuenta la referencia cultural del subproceso actual. Para ello, pase el <xref:System.Globalization.CultureInfo.InvariantCulture%2A> objeto a un método que tiene un <xref:System.Globalization.CultureInfo> parámetro, como <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%2CSystem.Globalization.CultureInfo%29> y <xref:System.String.ToUpper%28System.Globalization.CultureInfo%29>.  
  
## <a name="persisting-data"></a>Almacenamiento de datos  
 El <xref:System.Globalization.CultureInfo.InvariantCulture%2A> propiedad puede usarse para conservar los datos en un formato independiente de la referencia cultural. Esto proporciona un formato conocido que no cambia y que se puede utilizar para serializar y deserializar los datos en distintas referencias culturales. Después de que se deserializan los datos, se puede aplicar el formato adecuado según las convenciones culturales del usuario actual.  
  
 Por ejemplo, si decide conservar los datos de fecha y hora en forma de cadena, puede pasar el <xref:System.Globalization.CultureInfo.InvariantCulture%2A> de objeto para el <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> o <xref:System.DateTimeOffset.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> método para crear la cadena y se puede pasar el <xref:System.Globalization.CultureInfo.InvariantCulture%2A> de objeto para el <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> o <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> método para convertir la cadena a un valor de fecha y hora. Esta técnica garantiza que la fecha subyacente y los valores de hora no cambian cuando los datos se leen o escritos los usuarios de diferentes referencias culturales.  
  
 El ejemplo siguiente usa la referencia cultural para conservar un <xref:System.DateTime> valor como una cadena. A continuación, se analiza la cadena y se muestra su valor mediante las convenciones de formato de las referencias culturales de alemán (Alemania) y el francés (Francia).  
  
 [!code-csharp[System.Globalization.CultureInfo.InvariantCulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.invariantculture/cs/persist1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.InvariantCulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.invariantculture/vb/persist1.vb#1)]  
  
## <a name="security-decisions"></a>Decisiones de seguridad  
 Si está realizando una decisión de seguridad (por ejemplo, si se debe permitir el acceso a un recurso del sistema) en función del resultado de una comparación de cadenas o un cambio de mayúsculas, no debe usar la referencia cultural invariable. En su lugar, debe realizar una comparación ordinal entre mayúsculas y minúsculas o mayúsculas y minúsculas mediante una llamada a un método que incluye un <xref:System.StringComparison> parámetro y suministro <xref:System.StringComparison.Ordinal?displayProperty=nameWithType> o <xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType> como argumento. Código que realiza operaciones de cadena de la referencia cultural puede provocar vulnerabilidades de seguridad si se cambia la referencia cultural actual o si la referencia cultural en el equipo que ejecuta el código difiere de la referencia cultural que se usa para probar el código. En cambio, una comparación ordinal depende únicamente el valor binario de los caracteres comparados.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InstalledUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.Parent" />
        <altmember cref="P:System.Globalization.CultureInfo.IsNeutralCulture" />
      </Docs>
    </Member>
    <Member MemberName="IsNeutralCulture">
      <MemberSignature Language="C#" Value="public virtual bool IsNeutralCulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNeutralCulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.IsNeutralCulture" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsNeutralCulture As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsNeutralCulture { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNeutralCulture : bool" Usage="System.Globalization.CultureInfo.IsNeutralCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el <see cref="T:System.Globalization.CultureInfo" /> actual representa una referencia cultural neutra.</summary>
        <value><see langword="true" /> si el <see cref="T:System.Globalization.CultureInfo" /> actual representa una referencia cultural neutra; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una referencia cultural neutra es una referencia cultural que se asocia con un lenguaje pero no con un país o región. Difiere de una referencia cultural específica, que es una referencia cultural que está asociada con un idioma y un país o región. Por ejemplo, fr es el nombre para la referencia cultural de francés, mientras fr-FR es el nombre de la referencia cultural de francés de Francia.  
  
 Si esta propiedad devuelve `false`, la referencia cultural es una referencia cultural específica o la referencia cultural invariable.  
  
   
  
## Examples  
 El ejemplo de código siguiente determina qué referencias culturales con el idioma chino son referencias culturales neutras.  
  
> [!NOTE]
>  En el ejemplo se muestra el zh-CHS anteriores y los nombres de referencia cultural zh-CHT con los identificadores de referencia cultural 0 x 0004 y 0x7C04, respectivamente. Sin embargo, las aplicaciones de Windows Vista deben usar el nombre de zh-Hans en lugar de zh-CHS y el nombre de zh-Hant en lugar de zh-CHT. El zh-Hans y zh-Hant nombres representan el estándar actual y se debe usar a menos que tenga una razón para usar los nombres antiguos.  
  
 [!code-cpp[System.Globalization.CultureInfo.IsNeutralCulture2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.IsNeutralCulture2/CPP/neutralculture.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.IsNeutralCulture2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.IsNeutralCulture2/CS/neutralculture.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.IsNeutralCulture2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.IsNeutralCulture2/VB/neutralculture.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Globalization.CultureInfo.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el <see cref="T:System.Globalization.CultureInfo" /> actual es de solo lectura.</summary>
        <value><see langword="true" /> si el <see cref="T:System.Globalization.CultureInfo" /> actual es de sólo lectura; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Globalization.CultureInfo> es de solo lectura, el <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> y <xref:System.Globalization.CultureInfo.NumberFormat%2A> instancias también son de solo lectura.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra que <xref:System.Globalization.CultureInfo.IsReadOnly%2A> también ayuda a proteger el <xref:System.Globalization.DateTimeFormatInfo> y <xref:System.Globalization.NumberFormatInfo> las instancias asociadas a la <xref:System.Globalization.CultureInfo>.  
  
 [!code-cpp[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/CPP/yslin_cultureinfo_readonly.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/CS/yslin_cultureinfo_readonly.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/VB/yslin_cultureinfo_readonly.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.CultureInfo.ReadOnly(System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="KeyboardLayoutId">
      <MemberSignature Language="C#" Value="public virtual int KeyboardLayoutId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyboardLayoutId" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.KeyboardLayoutId" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyboardLayoutId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeyboardLayoutId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyboardLayoutId : int" Usage="System.Globalization.CultureInfo.KeyboardLayoutId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el identificador de configuración regional de entrada activo.</summary>
        <value>Un número de 32 bits con signo que especifica un identificador de configuración regional de entrada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El identificador de configuración regional de entrada se denominaba la distribución del teclado. Un identificador de configuración regional de entrada es un concepto más amplio que una distribución del teclado, puesto que también puede indicar un convertidor de voz a texto, un Editor de métodos de entrada (IME) o cualquier otra forma de entrada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public virtual int LCID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.LCID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int LCID { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LCID : int" Usage="System.Globalization.CultureInfo.LCID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el identificador de referencia cultural del objeto <see cref="T:System.Globalization.CultureInfo" /> actual.</summary>
        <value>Identificador de referencia cultural del objeto <see cref="T:System.Globalization.CultureInfo" /> actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En la mayoría de los casos, el identificador de referencia cultural se asigna al identificador de configuración regional NLS correspondiente.  
  
 En las versiones de Windows anteriores a Windows 10, el identificador de configuración regional `LOCALE_CUSTOM_UNSPECIFIED` (0 x 1000 o 4096) se asigna a las referencias culturales personalizadas creadas por el usuario. A partir de Windows 10, se asigna a cualquier referencia cultural que no tiene un identificador de configuración regional única y no tiene los datos proporcionados por el sistema completo. Como resultado, código que recorre en iteración las referencias culturales y recupera los que tienen un <xref:System.Globalization.CultureInfo.LCID%2A> valor `LOCALE_CUSTOM_UNSPECIFIED` devuelve un subconjunto más grande de <xref:System.Globalization.CultureInfo> objetos si se ejecutan en Windows 10.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear un <xref:System.Globalization.CultureInfo> para español (España) con el criterio de ordenación internacional y otra <xref:System.Globalization.CultureInfo> con el criterio de ordenación tradicional.  
  
 [!code-cpp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CPP/spanishspain.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CS/spanishspain.cs#1)]
 [!code-vb[System.Globalization.CultureInfo_esES#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/VB/spanishspain.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Globalization.CultureInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de la referencia cultural en el formato *languagecode2*-*country/regioncode2*.</summary>
        <value>El nombre de referencia cultural en el formato *languagecode2*-*códigopaís/Región2*. *códigoidioma2* es un código de dos letras en minúsculas derivado de ISO 639-1. *códigopaís/Región2* se deriva de ISO 3166 y suele estar compuesto por dos letras mayúsculas o una etiqueta de idioma BCP-47.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener una lista de nombres de referencias culturales predefinidos y los identificadores que la <xref:System.Globalization.CultureInfo.Name%2A> puede devolver la propiedad, vea el [referencia de National Language Support (NLS) API](https://go.microsoft.com/fwlink/?LinkId=200048) en el centro de desarrolladores Go Global. Además, a partir de Windows 10, `name` puede ser cualquier etiqueta de idioma BCP-47 válida. Tenga en cuenta que los nombres de referencias culturales están sujetos a cambios, y que también puede reflejan los nombres de las referencias culturales personalizadas.  
  
 El <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType> propiedad sigue los estándares de nomenclatura proporcionados en el <xref:System.Globalization.CultureInfo> tema de la clase. Devuelve la forma abreviada del nombre de referencia cultural que se excluye ninguna indicación de un criterio de ordenación alternativo. Por ejemplo, si crea instancias de un <xref:System.Globalization.CultureInfo> objeto mediante el uso de la cadena "de-DE_phoneb" para reflejar el criterio de ordenación alternativo, el <xref:System.Globalization.CultureInfo.Name%2A> propiedad devuelve "de-DE".  
  
 Para obtener el nombre completo de la referencia cultural, se debe utilizar el <xref:System.Globalization.CultureInfo.DisplayName%2A>, <xref:System.Globalization.CultureInfo.EnglishName%2A>, o <xref:System.Globalization.CultureInfo.NativeName%2A> propiedad.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra varias propiedades de las referencias culturales neutras.  
  
> [!NOTE]
>  En el ejemplo se muestra el zh-CHS anteriores y los nombres de referencia cultural zh-CHT con los identificadores de referencia cultural 0 x 0004 y 0x7C04, respectivamente. Sin embargo, las aplicaciones de Windows Vista deben usar el nombre de zh-Hans en lugar de zh-CHS y el nombre de zh-Hant en lugar de zh-CHT. El zh-Hans y zh-Hant nombres representan el estándar actual y se debe usar a menos que tenga una razón para usar los nombres antiguos.  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="NativeName">
      <MemberSignature Language="C#" Value="public virtual string NativeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NativeName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.NativeName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NativeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NativeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NativeName : string" Usage="System.Globalization.CultureInfo.NativeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de la referencia cultural, que consta del idioma, país o región y alfabeto opcional establecidos para que los muestre la referencia cultural.</summary>
        <value>Nombre de la referencia cultural formado por el nombre completo del idioma, el nombre completo del país o región y el script opcional.  El formato se detalla en la descripción de la clase <see cref="T:System.Globalization.CultureInfo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de esta propiedad es el mismo, independientemente de la versión de idioma de .NET Framework.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.NumberFormatInfo NumberFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.NumberFormatInfo NumberFormat" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NumberFormat As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::NumberFormatInfo ^ NumberFormat { System::Globalization::NumberFormatInfo ^ get(); void set(System::Globalization::NumberFormatInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NumberFormat : System.Globalization.NumberFormatInfo with get, set" Usage="System.Globalization.CultureInfo.NumberFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define el formato de presentación de números, moneda y porcentaje culturalmente apropiado.</summary>
        <value><see cref="T:System.Globalization.NumberFormatInfo" /> que define el formato de presentación de números, moneda y porcentaje culturalmente apropiado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="overrides"></a>Overrides  
 El usuario puede optar por invalidar algunos de los valores asociados con la referencia cultural actual de Windows a través de la parte de opciones de configuración regional y de idioma del Panel de Control. Por ejemplo, el usuario podría elegir para mostrar la fecha en un formato diferente o use una divisa distinta a la predeterminada para la referencia cultural.  
  
 Si <xref:System.Globalization.CultureInfo.UseUserOverride%2A> es `true` y la referencia cultural especificada coincide con la referencia cultural actual de Windows, el <xref:System.Globalization.CultureInfo> utiliza las nuevas, incluida la configuración de usuario para las propiedades de la <xref:System.Globalization.DateTimeFormatInfo> instancia devuelta por la <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> propiedad, y las propiedades de la <xref:System.Globalization.NumberFormatInfo> instancia devuelta por la <xref:System.Globalization.CultureInfo.NumberFormat%2A> propiedad. Si la configuración de usuario no es compatible con la referencia cultural asociada con el <xref:System.Globalization.CultureInfo>, por ejemplo, si el calendario seleccionado no es uno de los <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, los resultados de los métodos y los valores de las propiedades no están definidos.  
  
 Los valores de la <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> propiedad y el <xref:System.Globalization.CultureInfo.NumberFormat%2A> propiedad no se calculan hasta que el usuario tiene acceso a la propiedad. Si el usuario usa el Panel de Control para cambiar la referencia cultural actual a una nueva referencia cultural mientras la aplicación está en ejecución y, a continuación, tiene acceso a la <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> o <xref:System.Globalization.CultureInfo.NumberFormat%2A> propiedad, la aplicación recupera los valores predeterminados para la nueva referencia cultural. no las invalidaciones de la referencia cultural original. Para conservar las invalidaciones de la referencia cultural original, la aplicación debe tener acceso a la <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> y <xref:System.Globalization.CultureInfo.NumberFormat%2A> propiedades antes de cambiar la referencia cultural actual.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra que cómo CultureInfo.Clone también clona el <xref:System.Globalization.DateTimeFormatInfo> y <xref:System.Globalization.NumberFormatInfo> las instancias asociadas a la <xref:System.Globalization.CultureInfo>.  
  
 [!code-cpp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CPP/yslin_cultureinfo_clone.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CS/yslin_cultureinfo_clone.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/VB/yslin_cultureinfo_clone.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La propiedad se ha establecido en null.</exception>
        <exception cref="T:System.InvalidOperationException">Se establece la propiedad <see cref="P:System.Globalization.CultureInfo.NumberFormat" /> o cualquiera de las propiedades <see cref="T:System.Globalization.NumberFormatInfo" />, y <see cref="T:System.Globalization.CultureInfo" /> es de solo lectura.</exception>
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="M:System.Globalization.CultureInfo.GetFormat(System.Type)" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
      </Docs>
    </Member>
    <Member MemberName="OptionalCalendars">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.Calendar[] OptionalCalendars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.Calendar[] OptionalCalendars" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.OptionalCalendars" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OptionalCalendars As Calendar()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Globalization::Calendar ^&gt; ^ OptionalCalendars { cli::array &lt;System::Globalization::Calendar ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OptionalCalendars : System.Globalization.Calendar[]" Usage="System.Globalization.CultureInfo.OptionalCalendars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la lista de calendarios que puede utilizar la referencia cultural.</summary>
        <value>Matriz de tipo <see cref="T:System.Globalization.Calendar" /> que representa los calendarios que puede utilizar la referencia cultural representada por el objeto <see cref="T:System.Globalization.CultureInfo" /> actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La aplicación cambia el calendario usado por el actual <xref:System.Globalization.CultureInfo> estableciendo el <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> propiedad de <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, que es una instancia de la <xref:System.Globalization.DateTimeFormatInfo> clase. El nuevo calendario debe ser uno de los calendarios enumerados en <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>. <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> También incluye otras propiedades que personalización el formato de fecha y hora asociada con dicho <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo se determina el <xref:System.Globalization.GregorianCalendar> versiones admitidas por la referencia cultural.  
  
 [!code-cpp[System.Globalization.GregorianCalendarTypes#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarTypes/CPP/gregoriancalendartypes.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendarTypes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarTypes/CS/gregoriancalendartypes.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendarTypes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarTypes/VB/gregoriancalendartypes.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.CultureInfo Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Parent" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Parent As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CultureInfo ^ Parent { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Globalization.CultureInfo" /> que representa la referencia cultural principal del <see cref="T:System.Globalization.CultureInfo" /> actual.</summary>
        <value><see cref="T:System.Globalization.CultureInfo" /> que representa la referencia cultural principal del <see cref="T:System.Globalization.CultureInfo" /> actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las referencias culturales tienen una jerarquía en el que el elemento primario de una referencia cultural específica es una referencia cultural neutra, el elemento primario de una referencia cultural neutra es la <xref:System.Globalization.CultureInfo.InvariantCulture%2A>y el elemento primario de la <xref:System.Globalization.CultureInfo.InvariantCulture%2A> es la referencia cultural invariable propio. La referencia cultural principal abarca solo el conjunto de información que es común entre sus elementos secundarios.  
  
 Si no están disponibles en el sistema de los recursos de la referencia cultural específica, se usan los recursos de la referencia cultural neutra. Si no están disponibles los recursos de la referencia cultural neutra, se usan los recursos incrustados en el ensamblado principal. Para obtener más información sobre el proceso de reserva de recursos, consulte [empaquetar e implementar recursos](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).  
  
   
  
## Examples  
 El ejemplo de código siguiente determina la referencia cultural principal de cada referencia cultural específica con el idioma chino.  
  
> [!NOTE]
>  En el ejemplo se muestra el zh-CHS anteriores y los nombres de referencia cultural zh-CHT con los identificadores de referencia cultural 0 x 0004 y 0x7C04, respectivamente. Sin embargo, las aplicaciones de Windows Vista deben usar el nombre de zh-Hans en lugar de zh-CHS y el nombre de zh-Hant en lugar de zh-CHT. El zh-Hans y zh-Hant nombres representan el estándar actual y se debe usar a menos que tenga una razón para usar los nombres antiguos.  
  
 [!code-cpp[System.Globalization.CultureInfo.Parent#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Parent/CPP/parentculture.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.Parent#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Parent/CS/parentculture.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Parent#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Parent/VB/parentculture.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Globalization.CultureInfo.#ctor" />
        <altmember cref="M:System.Globalization.CultureInfo.CreateSpecificCulture(System.String)" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InstalledUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo ReadOnly (System.Globalization.CultureInfo ci);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo ReadOnly(class System.Globalization.CultureInfo ci) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.ReadOnly(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (ci As CultureInfo) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ ReadOnly(System::Globalization::CultureInfo ^ ci);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Globalization.CultureInfo -&gt; System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.ReadOnly ci" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ci" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="ci">Objeto <see cref="T:System.Globalization.CultureInfo" /> que se va a encapsular.</param>
        <summary>Devuelve un contenedor de solo lectura en torno al objeto <see cref="T:System.Globalization.CultureInfo" /> especificado.</summary>
        <returns>Contenedor de <see cref="T:System.Globalization.CultureInfo" /> de solo lectura para <paramref name="ci" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este contenedor impide cualquier modificación a `ci`, o los objetos devueltos por la `ci`.<xref:System.Globalization.CultureInfo.DateTimeFormat%2A> y `ci`.<xref:System.Globalization.CultureInfo.NumberFormat%2A> Propiedades.  
  
   
  
## Examples  
 El ejemplo siguiente muestra que el <xref:System.Globalization.CultureInfo.ReadOnly%2A> método ayuda a proteger el <xref:System.Globalization.DateTimeFormatInfo> y <xref:System.Globalization.NumberFormatInfo> las instancias asociadas a la <xref:System.Globalization.CultureInfo>.  
  
 [!code-cpp[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/CPP/yslin_cultureinfo_readonly.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/CS/yslin_cultureinfo_readonly.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/VB/yslin_cultureinfo_readonly.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="ci" /> es null.</exception>
        <altmember cref="P:System.Globalization.CultureInfo.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="TextInfo">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.TextInfo TextInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.TextInfo TextInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.TextInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TextInfo As TextInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::TextInfo ^ TextInfo { System::Globalization::TextInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TextInfo : System.Globalization.TextInfo" Usage="System.Globalization.CultureInfo.TextInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Globalization.TextInfo" /> que define el sistema de escritura asociado a la referencia cultural.</summary>
        <value><see cref="T:System.Globalization.TextInfo" /> que define el sistema de escritura asociado a la referencia cultural.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Globalization.CultureInfo.TextInfo%2A> propiedad proporciona información de mayúsculas y minúsculas específicas de la referencia cultural para las cadenas. Para realizar la referencia cultural de distinción de mayúsculas y minúsculas, la aplicación debe utilizar el <xref:System.Globalization.CultureInfo.TextInfo%2A> propiedad de <xref:System.Globalization.CultureInfo.InvariantCulture%2A>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear un <xref:System.Globalization.CultureInfo> para español (España) con el criterio de ordenación internacional y otra <xref:System.Globalization.CultureInfo> con el criterio de ordenación tradicional.  
  
 [!code-cpp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CPP/spanishspain.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CS/spanishspain.cs#1)]
 [!code-vb[System.Globalization.CultureInfo_esES#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/VB/spanishspain.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.TextInfo" />
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterISOLanguageName">
      <MemberSignature Language="C#" Value="public virtual string ThreeLetterISOLanguageName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterISOLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ThreeLetterISOLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ThreeLetterISOLanguageName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterISOLanguageName : string" Usage="System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el código de tres letras ISO 639-2 del idioma del objeto<see cref="T:System.Globalization.CultureInfo" /> actual.</summary>
        <value>Código de tres letras ISO 639-2 del idioma del objeto <see cref="T:System.Globalization.CultureInfo" /> actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por ejemplo, la abreviatura de tres letras para el inglés es "eng".  
  
> [!NOTE]
>  Cuando la comunicación entre procesos o almacenamiento de datos suele ser mejor usar el completo <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>. Usar solo en el idioma puede perder el contexto y los datos.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra varias propiedades de las referencias culturales neutras.  
  
> [!NOTE]
>  En el ejemplo se muestra el zh-CHS anteriores y los nombres de referencia cultural zh-CHT con los identificadores de referencia cultural 0 x 0004 y 0x7C04, respectivamente. Sin embargo, las aplicaciones de Windows Vista deben usar el nombre de zh-Hans en lugar de zh-CHS y el nombre de zh-Hant en lugar de zh-CHT. El zh-Hans y zh-Hant nombres representan el estándar actual y se debe usar a menos que tenga una razón para usar los nombres antiguos.  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterWindowsLanguageName">
      <MemberSignature Language="C#" Value="public virtual string ThreeLetterWindowsLanguageName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterWindowsLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ThreeLetterWindowsLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ThreeLetterWindowsLanguageName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterWindowsLanguageName : string" Usage="System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el código de tres letras del idioma tal como se ha definido en la API de Windows.</summary>
        <value>Código de tres letras del idioma tal como se ha definido en la API de Windows.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad devuelve el mismo valor que el método de API de Windows `GetLocaleInfo` con el valor LOCALE_SABBREVLANGNAME. Por ejemplo, el código de tres letras para inglés (Estados Unidos) tal como se define en la API de Windows es "enu".  
  
> [!NOTE]
>  Cuando la comunicación entre procesos o almacenamiento de datos suele ser mejor usar el completo <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>. Usar solo en el idioma puede perder el contexto y los datos.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra varias propiedades de las referencias culturales neutras.  
  
> [!NOTE]
>  En el ejemplo se muestra el zh-CHS anteriores y los nombres de referencia cultural zh-CHT con los identificadores de referencia cultural 0 x 0004 y 0x7C04, respectivamente. Sin embargo, las aplicaciones de Windows Vista deben usar el nombre de zh-Hans en lugar de zh-CHS y el nombre de zh-Hant en lugar de zh-CHT. El zh-Hans y zh-Hant nombres representan el estándar actual y se debe usar a menos que tenga una razón para usar los nombres antiguos.  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="cultureInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve una cadena que contiene el nombre del elemento <see cref="T:System.Globalization.CultureInfo" /> actual en el formato *languagecode2*-*country/regioncode2*.</summary>
        <returns>Cadena que contiene el nombre del objeto <see cref="T:System.Globalization.CultureInfo" /> actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método invalida <xref:System.Object.ToString%2A?displayProperty=nameWithType>. Devuelve una versión normalizada del nombre de referencia cultural que se pasa a la <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> o <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29> constructor o a la <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> o <xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29> método. Normaliza la cadena de resultado mediante la conversión de caracteres en *languagecode2* a los caracteres en minúsculas y convertir en *códigopaís/Región2* a mayúscula si es necesario.  
  
 Los nombres de referencias culturales predefinidos que se muestran en el [referencia de National Language Support (NLS) API](https://go.microsoft.com/fwlink/?LinkId=200048) página en el centro de desarrolladores Go Global.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.ToString" />
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
      </Docs>
    </Member>
    <Member MemberName="TwoLetterISOLanguageName">
      <MemberSignature Language="C#" Value="public virtual string TwoLetterISOLanguageName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TwoLetterISOLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TwoLetterISOLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TwoLetterISOLanguageName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TwoLetterISOLanguageName : string" Usage="System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el código de dos letras ISO 639-1 del idioma del objeto <see cref="T:System.Globalization.CultureInfo" /> actual.</summary>
        <value>Código de dos letras ISO 639-1 del idioma del objeto <see cref="T:System.Globalization.CultureInfo" /> actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por ejemplo, la abreviatura de dos letras para el inglés es "es-es". El <xref:System.Globalization.CultureInfo.TwoLetterISOLanguageName%2A> valor de propiedad para la referencia cultural invariable es "iv".  
  
> [!NOTE]
>  Cuando la comunicación entre procesos o almacenamiento de datos suele ser mejor usar el completo <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>. Usar solo en el idioma puede perder el contexto y los datos.  
  
 Si no define un código de idioma de dos letras para una determinada referencia cultural ISO 639-1 del <xref:System.Globalization.CultureInfo.TwoLetterISOLanguageName%2A> propiedad devuelve una cadena que consta de tres o más letras. Para obtener más información, vea el ejemplo.  
  
   
  
## Examples  
 En el ejemplo siguiente se enumeran las referencias culturales cuyos <xref:System.Globalization.CultureInfo.TwoLetterISOLanguageName%2A> propiedad no consta de un código de idioma de dos letras.  
  
 [!code-csharp[System.Globalization.CultureInfo.TwoLetterISOLanguageName#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.twoletterisolanguagename/cs/twoletterisolanguagename1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.TwoLetterISOLanguageName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.twoletterisolanguagename/vb/twoletterisolanguagename1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="UseUserOverride">
      <MemberSignature Language="C#" Value="public bool UseUserOverride { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseUserOverride" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.UseUserOverride" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseUserOverride As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseUserOverride { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UseUserOverride : bool" Usage="System.Globalization.CultureInfo.UseUserOverride" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el objeto <see cref="T:System.Globalization.CultureInfo" /> actual usa la configuración de la referencia cultural seleccionada por el usuario.</summary>
        <value><see langword="true" /> si el <see cref="T:System.Globalization.CultureInfo" /> actual utiliza la configuración de referencia cultural seleccionada por el usuario; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El usuario puede optar por invalidar algunos de los valores asociados con la referencia cultural actual de Windows a través de la parte de opciones de configuración regional y de idioma del Panel de Control. Por ejemplo, el usuario podría elegir para mostrar la fecha en un formato diferente o use una divisa distinta a la predeterminada para la referencia cultural.  
  
 Si <xref:System.Globalization.CultureInfo.UseUserOverride%2A> es `true` y la referencia cultural especificada coincide con la referencia cultural actual de Windows, el <xref:System.Globalization.CultureInfo> utiliza las nuevas, incluida la configuración de usuario para las propiedades de la <xref:System.Globalization.DateTimeFormatInfo> instancia devuelta por la <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> propiedad, y las propiedades de la <xref:System.Globalization.NumberFormatInfo> instancia devuelta por la <xref:System.Globalization.CultureInfo.NumberFormat%2A> propiedad. Si la configuración de usuario no es compatible con la referencia cultural asociada con el <xref:System.Globalization.CultureInfo>, por ejemplo, si el calendario seleccionado no es uno de los <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, los resultados de los métodos y los valores de las propiedades no están definidos.  
  
 Esta propiedad se establece cuando el <xref:System.Globalization.CultureInfo> se crea.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>