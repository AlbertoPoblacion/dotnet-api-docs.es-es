<Type Name="TextElementEnumerator" FullName="System.Globalization.TextElementEnumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cbf8e17410599af369261ad8f54a24ddedaa1f83" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52375896" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TextElementEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TextElementEnumerator extends System.Object implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.TextElementEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Class TextElementEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextElementEnumerator : System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type TextElementEnumerator = class&#xA;    interface IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Enumera los elementos de texto de una cadena.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework define un elemento de texto como una unidad de texto que se muestra como un carácter único, es decir, un grafemas. Un elemento de texto puede ser cualquiera de las siguientes acciones:  
  
-   Un carácter base, que se representa como una sola <xref:System.Char> valor. Por ejemplo, LATIN CAPITAL LETTER A (u+0041) y LATIN pequeña letra AE (00E6) son caracteres bases.  
  
-   Una combinación de caracteres de secuencia, que consta de un carácter base y uno o más caracteres de combinación. Por ejemplo, ejemplo, mayúscula latina A (u+0041) seguido de combinar acento largo (0304) es una combinación secuencia de caracteres.  
  
-   Suplentes pares, lo que la [estándar Unicode](https://go.microsoft.com/fwlink/?linkid=37123) define como una representación de caracteres codificados para un único carácter abstracto que consta de una secuencia de dos unidades de código: un suplente alto y un suplente bajo. Los pares suplentes se utilizan para representar los caracteres fuera del plano multilingüe básico de Unicode como caracteres con codificación UTF-16. Por ejemplo, GOTHIC letra SAUIL (U + 1034 entrante3) se representa en la codificación como un suplente alto cuyo valor es 0xD800 y un suplente bajo cuyo valor es 0xDF43 UTF-16. Un par suplente puede representar un carácter base o un carácter de combinación.  
  
 El <xref:System.Globalization.TextElementEnumerator> clase le permite trabajar con los elementos de texto en una cadena en lugar de con solo <xref:System.Char> objetos.  
  
 Crea instancias de un <xref:System.Globalization.TextElementEnumerator> objeto que representa una cadena determinada, pase la cadena para el <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A?displayProperty=nameWithType> método. Esto devuelve un enumerador que se coloca antes del primer elemento de texto en la cadena. Una llamada a la <xref:System.Globalization.TextElementEnumerator.Reset%2A> método también devuelve el enumerador a esta posición. Dado que esto representa un estado no válido, debe llamar a <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> para hacer avanzar el enumerador hasta el primer elemento de texto de la cadena antes de leer el valor de la <xref:System.Globalization.TextElementEnumerator.Current%2A> propiedad para devolver el elemento de texto actual.  
  
 Cuando se trabaja con un <xref:System.Globalization.TextElementEnumerator> de objeto, usted es responsable de colocar el enumerador. El <xref:System.Globalization.TextElementEnumerator.Current%2A> propiedad devuelve el mismo elemento de texto hasta que llame a cualquiera <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> o <xref:System.Globalization.TextElementEnumerator.Reset%2A>. El enumerador se encuentra en un estado no válido si se coloca antes del primer elemento de texto o después del último elemento de texto en la cadena. Cuando el enumerador está en un estado no válido, intenta recuperar el valor de la <xref:System.Globalization.TextElementEnumerator.Current%2A> propiedad produce una excepción. Puede determinar si el enumerador se encuentra en un estado no válido mediante la comprobación de si el valor devuelto de la <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> propiedad es `false`.  
  
 El <xref:System.Globalization.TextElementEnumerator> objeto representa una instantánea del estado actual de una variable de cadena o literal de cadena en el momento en que el <xref:System.Globalization.TextElementEnumerator> se crea una instancia de objeto. Ten en cuenta lo siguiente:  
  
-   Los enumeradores de elemento de texto solo sirve para leer datos de una cadena. No pueden modificar la cadena subyacente.  
  
-   Un enumerador no tiene acceso exclusivo a la cadena que representa. Una variable de cadena se puede modificar después de crear el enumerador.  
  
-   Un <xref:System.Globalization.TextElementEnumerator> objeto enumera los elementos de texto está presentes en la cadena en el momento en que el <xref:System.Globalization.TextElementEnumerator> se crea una instancia de objeto. No refleja los cambios posteriores a la variable de cadena si esa variable se puede modificar posteriormente.  
  
-   Dado que el <xref:System.Globalization.TextElementEnumerator> no invalide la clase <xref:System.Object.Equals%2A?displayProperty=nameWithType>, dos <xref:System.Globalization.TextElementEnumerator> objetos que representan la misma cadena se considerarán iguales.  
  
   
  
## Examples  
 En el ejemplo siguiente se usa el <xref:System.Globalization.TextElementEnumerator> clase para enumerar los elementos de texto de una cadena.  
  
 [!code-cpp[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/CPP/tee_summary.cpp#1)]
 [!code-csharp[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/CS/tee_summary.cs#1)]
 [!code-vb[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/VB/tee_summary.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.StringInfo" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextElementEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.Globalization.TextElementEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el elemento de texto actual de la cadena.</summary>
        <value>Objeto que contiene el elemento de texto actual de la cadena.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Después de crea un enumerador o después de un <xref:System.Globalization.TextElementEnumerator.Reset%2A> se llama, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> debe llamarse para hacer avanzar el enumerador hasta el primer elemento de texto de la cadena antes de leer el valor de <xref:System.Globalization.TextElementEnumerator.Current%2A>. En caso contrario, <xref:System.Globalization.TextElementEnumerator.Current%2A> es indefinido.  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> también produce una excepción si la última llamada a <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> devuelve `false`, lo que indica el final de la cadena.  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> no se mueve la posición del enumerador y las llamadas consecutivas a <xref:System.Globalization.TextElementEnumerator.Current%2A> devuelven el mismo objeto hasta que <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> o <xref:System.Globalization.TextElementEnumerator.Reset%2A> se llama.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El enumerador se sitúa antes del primer elemento de texto de la cadena o después del último.</exception>
        <altmember cref="M:System.Globalization.TextElementEnumerator.GetTextElement" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.ElementIndex" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.MoveNext" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="ElementIndex">
      <MemberSignature Language="C#" Value="public int ElementIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ElementIndex" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextElementEnumerator.ElementIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ElementIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementIndex : int" Usage="System.Globalization.TextElementEnumerator.ElementIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el índice del elemento de texto en el que está situado actualmente el enumerador.</summary>
        <value>Índice del elemento de texto en el que está situado actualmente el enumerador.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">El enumerador se sitúa antes del primer elemento de texto de la cadena o después del último.</exception>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.GetTextElement" />
      </Docs>
    </Member>
    <Member MemberName="GetTextElement">
      <MemberSignature Language="C#" Value="public string GetTextElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTextElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.GetTextElement" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextElement () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTextElement();" />
      <MemberSignature Language="F#" Value="member this.GetTextElement : unit -&gt; string" Usage="textElementEnumerator.GetTextElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene el elemento de texto actual de la cadena.</summary>
        <returns>Nueva cadena que contiene el elemento de texto actual de la cadena que se va a leer.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método devuelve el mismo elemento de texto como el <xref:System.Globalization.TextElementEnumerator.Current%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El enumerador se sitúa antes del primer elemento de texto de la cadena o después del último.</exception>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.ElementIndex" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="textElementEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Desplaza el enumerador al siguiente elemento de texto de la cadena.</summary>
        <returns>Es <see langword="true" /> si el enumerador avanzó con éxito hasta el siguiente elemento de texto; y <see langword="false" /> si el enumerador alcanzó el final de la cadena.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Después de crea un enumerador o después de un <xref:System.Globalization.TextElementEnumerator.Reset%2A> es llama, el enumerador se coloca antes del primer elemento de texto de la cadena y la primera llamada a <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> desplaza el enumerador hasta el primer elemento de texto de la cadena.  
  
 Si se modifica la cadena de una vez creado el enumerador, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> produce una excepción.  
  
 Tras el final de la cadena, las siguientes llamadas a <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> devolver `false` hasta <xref:System.Globalization.TextElementEnumerator.Reset%2A> se llama.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="textElementEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Establece el enumerador en su posición inicial (antes del primer elemento de texto de la cadena).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Globalization.TextElementEnumerator.Reset%2A> método mueve el enumerador al principio de la cadena, antes del primer elemento de texto. Después de llamar a <xref:System.Globalization.TextElementEnumerator.Reset%2A>, debe llamar a <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> para hacer avanzar el enumerador hasta el primer elemento de texto de la cadena antes de llamar a <xref:System.Globalization.TextElementEnumerator.Current%2A> para leer el valor del primer elemento de texto.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.TextElementEnumerator.MoveNext" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
      </Docs>
    </Member>
  </Members>
</Type>