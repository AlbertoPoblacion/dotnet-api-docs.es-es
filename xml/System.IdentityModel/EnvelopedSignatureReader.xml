<Type Name="EnvelopedSignatureReader" FullName="System.IdentityModel.EnvelopedSignatureReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a838df99c58b9bd59e894189c282f754be629703" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36556050" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EnvelopedSignatureReader : System.IdentityModel.DelegatingXmlDictionaryReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EnvelopedSignatureReader extends System.IdentityModel.DelegatingXmlDictionaryReader" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.EnvelopedSignatureReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EnvelopedSignatureReader&#xA;Inherits DelegatingXmlDictionaryReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class EnvelopedSignatureReader sealed : System::IdentityModel::DelegatingXmlDictionaryReader" />
  <TypeSignature Language="F#" Value="type EnvelopedSignatureReader = class&#xA;    inherit DelegatingXmlDictionaryReader" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.DelegatingXmlDictionaryReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="69a71-101">Contiene un lector que apunta a XML firmado envuelto para proporcionar un lector que se pueda usar para leer el contenido sin tener que procesar la signatura.</span>
      <span class="sxs-lookup">
        <span data-stu-id="69a71-101">Wraps a reader that is pointing to enveloped signed XML to provide a reader that can be used to read the content without having to process the signature.</span>
      </span>
      <span data-ttu-id="69a71-102">La signatura se valida automáticamente cuando se lee el último elemento del sobre.</span>
      <span class="sxs-lookup">
        <span data-stu-id="69a71-102">The signature is automatically validated when the last element of the envelope is read.</span>
      </span>
      <span data-ttu-id="69a71-103">Esta clase no puede heredarse.</span>
      <span class="sxs-lookup">
        <span data-stu-id="69a71-103">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="69a71-104">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.EnvelopedSignatureReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69a71-104">Initializes a new instance of the <see cref="T:System.IdentityModel.EnvelopedSignatureReader" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnvelopedSignatureReader (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer securityTokenSerializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader reader, class System.IdentityModel.Selectors.SecurityTokenSerializer securityTokenSerializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EnvelopedSignatureReader(System::Xml::XmlReader ^ reader, System::IdentityModel::Selectors::SecurityTokenSerializer ^ securityTokenSerializer);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.EnvelopedSignatureReader : System.Xml.XmlReader * System.IdentityModel.Selectors.SecurityTokenSerializer -&gt; System.IdentityModel.EnvelopedSignatureReader" Usage="new System.IdentityModel.EnvelopedSignatureReader (reader, securityTokenSerializer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="securityTokenSerializer" Type="System.IdentityModel.Selectors.SecurityTokenSerializer" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="69a71-105">Lector que señala al XML firmado con doble cifrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69a71-105">A reader that is pointing to the enveloped signed XML.</span>
          </span>
        </param>
        <param name="securityTokenSerializer">
          <span data-ttu-id="69a71-106">El serializador de token que se usará para deserializar <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> de la signatura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69a71-106">The token serializer to be used to deserialize the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> of the signature.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69a71-107">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.EnvelopedSignatureReader" /> usando el lector y el serializador de token de seguridad especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69a71-107">Initializes a new instance of the <see cref="T:System.IdentityModel.EnvelopedSignatureReader" /> class by using the specified reader and security token serializer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69a71-108">El <xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> se invoca el constructor con parámetros adicionales siguientes:</span><span class="sxs-lookup"><span data-stu-id="69a71-108">The <xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor is invoked with the following additional parameters:</span></span>  
  
|<span data-ttu-id="69a71-109">Nombre de parámetro</span><span class="sxs-lookup"><span data-stu-id="69a71-109">Parameter Name</span></span>|<span data-ttu-id="69a71-110">Valor</span><span class="sxs-lookup"><span data-stu-id="69a71-110">Value</span></span>|  
|--------------------|-----------|  
|`signingTokenResolver`|`null`|  
|`requireSignature`|`true`|  
|`automaticallyReadSignature`|`true`|  
|`resolveIntrinsicSigningKeys`|`true`|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="69a71-111">
            <paramref name="reader" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69a71-111">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="69a71-112">-o bien- <paramref name="securityTokenSerializer" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69a71-112">-or-  <paramref name="securityTokenSerializer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnvelopedSignatureReader (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer securityTokenSerializer, System.IdentityModel.Selectors.SecurityTokenResolver signingTokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader reader, class System.IdentityModel.Selectors.SecurityTokenSerializer securityTokenSerializer, class System.IdentityModel.Selectors.SecurityTokenResolver signingTokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EnvelopedSignatureReader(System::Xml::XmlReader ^ reader, System::IdentityModel::Selectors::SecurityTokenSerializer ^ securityTokenSerializer, System::IdentityModel::Selectors::SecurityTokenResolver ^ signingTokenResolver);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.EnvelopedSignatureReader : System.Xml.XmlReader * System.IdentityModel.Selectors.SecurityTokenSerializer * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; System.IdentityModel.EnvelopedSignatureReader" Usage="new System.IdentityModel.EnvelopedSignatureReader (reader, securityTokenSerializer, signingTokenResolver)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="securityTokenSerializer" Type="System.IdentityModel.Selectors.SecurityTokenSerializer" />
        <Parameter Name="signingTokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="69a71-113">Lector que señala al XML firmado con doble cifrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69a71-113">A reader that is pointing to the enveloped signed XML.</span>
          </span>
        </param>
        <param name="securityTokenSerializer">
          <span data-ttu-id="69a71-114">El serializador de token que se usará para deserializar <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> de la signatura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69a71-114">The token serializer to be used to deserialize the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> of the signature.</span>
          </span>
        </param>
        <param name="signingTokenResolver">
          <span data-ttu-id="69a71-115">La resolución de token que se usará para resolver el token de signatura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69a71-115">The token resolver to be used to resolve the signing token.</span>
          </span>
          <span data-ttu-id="69a71-116">
            <see langword="null" /> especifica que se debe utilizar una resolución del token de seguridad predeterminada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69a71-116">
              <see langword="null" /> specifies that a default security token resolver should be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69a71-117">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.EnvelopedSignatureReader" /> mediante el lector, serializador del token de seguridad y resolución de token especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69a71-117">Initializes a new instance of the <see cref="T:System.IdentityModel.EnvelopedSignatureReader" /> class by using the specified reader, security token serializer, and token resolver.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69a71-118">El <xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> se invoca el constructor con parámetros adicionales siguientes:</span><span class="sxs-lookup"><span data-stu-id="69a71-118">The <xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor is invoked with the following additional parameters:</span></span>  
  
|<span data-ttu-id="69a71-119">Nombre de parámetro</span><span class="sxs-lookup"><span data-stu-id="69a71-119">Parameter Name</span></span>|<span data-ttu-id="69a71-120">Valor</span><span class="sxs-lookup"><span data-stu-id="69a71-120">Value</span></span>|  
|--------------------|-----------|  
|`requireSignature`|`true`|  
|`automaticallyReadSignature`|`true`|  
|`resolveIntrinsicSigningKeys`|`true`|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="69a71-121">
            <paramref name="reader" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69a71-121">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="69a71-122">-o bien- <paramref name="securityTokenSerializer" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69a71-122">-or-  <paramref name="securityTokenSerializer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnvelopedSignatureReader (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer securityTokenSerializer, System.IdentityModel.Selectors.SecurityTokenResolver signingTokenResolver, bool requireSignature, bool automaticallyReadSignature, bool resolveIntrinsicSigningKeys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader reader, class System.IdentityModel.Selectors.SecurityTokenSerializer securityTokenSerializer, class System.IdentityModel.Selectors.SecurityTokenResolver signingTokenResolver, bool requireSignature, bool automaticallyReadSignature, bool resolveIntrinsicSigningKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EnvelopedSignatureReader(System::Xml::XmlReader ^ reader, System::IdentityModel::Selectors::SecurityTokenSerializer ^ securityTokenSerializer, System::IdentityModel::Selectors::SecurityTokenResolver ^ signingTokenResolver, bool requireSignature, bool automaticallyReadSignature, bool resolveIntrinsicSigningKeys);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.EnvelopedSignatureReader : System.Xml.XmlReader * System.IdentityModel.Selectors.SecurityTokenSerializer * System.IdentityModel.Selectors.SecurityTokenResolver * bool * bool * bool -&gt; System.IdentityModel.EnvelopedSignatureReader" Usage="new System.IdentityModel.EnvelopedSignatureReader (reader, securityTokenSerializer, signingTokenResolver, requireSignature, automaticallyReadSignature, resolveIntrinsicSigningKeys)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="securityTokenSerializer" Type="System.IdentityModel.Selectors.SecurityTokenSerializer" />
        <Parameter Name="signingTokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
        <Parameter Name="requireSignature" Type="System.Boolean" />
        <Parameter Name="automaticallyReadSignature" Type="System.Boolean" />
        <Parameter Name="resolveIntrinsicSigningKeys" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="69a71-123">Lector que señala al XML firmado con doble cifrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69a71-123">A reader that is pointing to the enveloped signed XML.</span>
          </span>
        </param>
        <param name="securityTokenSerializer">
          <span data-ttu-id="69a71-124">El serializador de token que se usará para deserializar <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> de la signatura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69a71-124">The token serializer to be used to deserialize the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> of the signature.</span>
          </span>
        </param>
        <param name="signingTokenResolver">
          <span data-ttu-id="69a71-125">La resolución de token que se usará para resolver el token de signatura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69a71-125">The token resolver to be used to resolve the signing token.</span>
          </span>
          <span data-ttu-id="69a71-126">
            <see langword="null" /> especifica que se debe utilizar una resolución del token de seguridad predeterminada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69a71-126">
              <see langword="null" /> specifies that a default security token resolver should be used.</span>
          </span>
        </param>
        <param name="requireSignature">
          <span data-ttu-id="69a71-127">
            <see langword="true" /> si la signatura es necesaria; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69a71-127">
              <see langword="true" /> if the signature is required; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="automaticallyReadSignature">
          <span data-ttu-id="69a71-128">
            <see langword="true" /> si se debe leer la signatura; si no, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69a71-128">
              <see langword="true" /> if the signature should be read; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="resolveIntrinsicSigningKeys">
          <span data-ttu-id="69a71-129">
            <see langword="true" /> si las claves de firma intrínseca se deben resolver; si no, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69a71-129">
              <see langword="true" /> if intrinsic signing keys should be resolved; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="69a71-130">Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.EnvelopedSignatureReader" /> mediante el lector, serializador del token de seguridad y resolución de token y comportamiento especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69a71-130">Initializes a new instance of the <see cref="T:System.IdentityModel.EnvelopedSignatureReader" /> class by using the specified reader, security token serializer, token resolver, and behavior.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="69a71-131">
            <paramref name="reader" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69a71-131">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="69a71-132">-o bien- <paramref name="securityTokenSerializer" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69a71-132">-or-  <paramref name="securityTokenSerializer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.EnvelopedSignatureReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="envelopedSignatureReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.EnvelopedSignatureReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="envelopedSignatureReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="69a71-133">Lee el siguiente nodo de la secuencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69a71-133">Reads the next node from the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="69a71-134">Es <see langword="true" /> si se lee correctamente el siguiente nodo; es <see langword="false" /> si no hay más nodos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69a71-134">
              <see langword="true" /> if the next node was read successfully; <see langword="false" /> if there are no more nodes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69a71-135">Comprueba si se alcanza el final de la envoltura y si valida la firma si el `requireSignature` se especificó un parámetro `true` en el constructor.</span><span class="sxs-lookup"><span data-stu-id="69a71-135">Checks whether the end of the envelope is reached and validates the signature if the `requireSignature` parameter was specified `true` in the constructor.</span></span> <span data-ttu-id="69a71-136">Si obtiene el lector en un `<Signature>` elemento, se lee la firma completa en if el `automaticallyReadSignature` se especificó un parámetro `true` en el constructor.</span><span class="sxs-lookup"><span data-stu-id="69a71-136">If the reader gets positioned on a `<Signature>` element, the whole signature is read in if the `automaticallyReadSignature` parameter was specified `true` in the constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningCredentials">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SigningCredentials SigningCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SigningCredentials SigningCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.EnvelopedSignatureReader.SigningCredentials" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SigningCredentials As SigningCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SigningCredentials ^ SigningCredentials { System::IdentityModel::Tokens::SigningCredentials ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SigningCredentials : System.IdentityModel.Tokens.SigningCredentials" Usage="System.IdentityModel.EnvelopedSignatureReader.SigningCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SigningCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="69a71-137">Obtiene las credenciales de firma que se usan en la signatura, después de que se consume el sobre y cuando se valida la signatura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69a71-137">Gets the signing credentials that are used in the signature, after the envelope is consumed and when the signature is validated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="69a71-138">Las credenciales de firma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69a71-138">The signing credentials.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReadSignature">
      <MemberSignature Language="C#" Value="public bool TryReadSignature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryReadSignature() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.EnvelopedSignatureReader.TryReadSignature" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReadSignature () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryReadSignature();" />
      <MemberSignature Language="F#" Value="member this.TryReadSignature : unit -&gt; bool" Usage="envelopedSignatureReader.TryReadSignature " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="69a71-139">Lee la signatura si el lector se encuentra actualmente en un elemento <see langword="&lt;Signature&gt;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69a71-139">Reads the signature if the reader is currently positioned at a <see langword="&lt;Signature&gt;" /> element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="69a71-140">
            <see langword="true" /> si la signatura se leyó correctamente; si no, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="69a71-140">
              <see langword="true" /> if the signature was successfully read; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69a71-141">Si el lector está situado actualmente un `<Signature>` elemento, se invoca el <xref:System.IdentityModel.EnvelopedSignatureReader.Read%2A> método para leer la firma.</span><span class="sxs-lookup"><span data-stu-id="69a71-141">If the reader is currently positioned on a `<Signature>` element, invokes the <xref:System.IdentityModel.EnvelopedSignatureReader.Read%2A> method to read the signature.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>