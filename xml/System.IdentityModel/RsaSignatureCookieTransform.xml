<Type Name="RsaSignatureCookieTransform" FullName="System.IdentityModel.RsaSignatureCookieTransform">
  <Metadata><Meta Name="ms.openlocfilehash" Value="28aa1c87c1c338c2018612dfc9de8f883286046e" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36479655" /></Metadata><TypeSignature Language="C#" Value="public class RsaSignatureCookieTransform : System.IdentityModel.CookieTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RsaSignatureCookieTransform extends System.IdentityModel.CookieTransform" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.RsaSignatureCookieTransform" />
  <TypeSignature Language="VB.NET" Value="Public Class RsaSignatureCookieTransform&#xA;Inherits CookieTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class RsaSignatureCookieTransform : System::IdentityModel::CookieTransform" />
  <TypeSignature Language="F#" Value="type RsaSignatureCookieTransform = class&#xA;    inherit CookieTransform" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.CookieTransform</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona integridad de las cookies utilizando una signatura de <see cref="T:System.Security.Cryptography.RSA" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.RsaSignatureCookieTransform> Agrega un MAC RSA a los datos de la cookie. Esto proporciona integridad, pero no la confidencialidad. De forma predeterminada, el equipo MAC usa SHA-256, pero se puede solicitar SHA-1.  
  
 Las cookies protegidas con esta transformación pueden leer cualquier equipo que comparte la misma clave privada RSA (generalmente se relaciona con un X509 certificado).  
  
> [!IMPORTANT]
>  Cuando se usa el <xref:System.IdentityModel.RsaSignatureCookieTransform> con un servicio, si una clave de un certificado se cambia el servicio debe reiniciarse.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.RsaSignatureCookieTransform" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RsaSignatureCookieTransform (System.Security.Cryptography.RSA key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.RSA key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.RsaSignatureCookieTransform.#ctor(System.Security.Cryptography.RSA)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As RSA)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RsaSignatureCookieTransform(System::Security::Cryptography::RSA ^ key);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.RsaSignatureCookieTransform : System.Security.Cryptography.RSA -&gt; System.IdentityModel.RsaSignatureCookieTransform" Usage="new System.IdentityModel.RsaSignatureCookieTransform key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.RSA" />
      </Parameters>
      <Docs>
        <param name="key">La clave RSA que se usará como clave de firma y comprobación predeterminada.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.RsaSignatureCookieTransform" /> usando la clave RSA especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La propiedad <xref:System.IdentityModel.RsaSignatureCookieTransform.SigningKey%2A> se inicializa en `key`. El <xref:System.IdentityModel.RsaSignatureCookieTransform.VerificationKeys%2A> propiedad se inicializa en una colección que contiene `key` como su único elemento.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="key" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RsaSignatureCookieTransform (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.RsaSignatureCookieTransform.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificate As X509Certificate2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RsaSignatureCookieTransform(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.RsaSignatureCookieTransform : System.Security.Cryptography.X509Certificates.X509Certificate2 -&gt; System.IdentityModel.RsaSignatureCookieTransform" Usage="new System.IdentityModel.RsaSignatureCookieTransform certificate" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="certificate">El certificado cuya clave privada debe utilizarse para firmar y comprobar.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.IdentityModel.RsaSignatureCookieTransform" /> usando la clave privada del certificado especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.IdentityModel.RsaSignatureCookieTransform.SigningKey%2A> se inicializa la propiedad a la clave privada del certificado. El <xref:System.IdentityModel.RsaSignatureCookieTransform.VerificationKeys%2A> se inicializa la propiedad a una colección que contiene la clave privada del certificado como su único elemento.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="certificate" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="certificate" /> no tiene ninguna clave privada 
O bien 
La clave privada de <paramref name="certificate" /> no es una clave RSA.</exception>
      </Docs>
    </Member>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public override byte[] Decode (byte[] encoded);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] Decode(unsigned int8[] encoded) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.RsaSignatureCookieTransform.Decode(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Decode (encoded As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ Decode(cli::array &lt;System::Byte&gt; ^ encoded);" />
      <MemberSignature Language="F#" Value="override this.Decode : byte[] -&gt; byte[]" Usage="rsaSignatureCookieTransform.Decode encoded" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoded" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="encoded">Datos devueltos previamente por el método <see cref="M:System.IdentityModel.RsaSignatureCookieTransform.Encode(System.Byte[])" />.</param>
        <summary>Comprueba la signatura especificada y devuelve los datos originales sin firmar.</summary>
        <returns>Datos originales (sin firmar).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Todas las claves de la colección especificada en el <xref:System.IdentityModel.RsaSignatureCookieTransform.VerificationKeys%2A> se prueban la propiedad.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="encoded" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="encoded" /> contiene cero bytes.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">La signatura no es válida.</exception>
        <exception cref="T:System.FormatException">El formato de los datos no es válido.</exception>
        <exception cref="T:System.InvalidOperationException">No hay claves de comprobación.</exception>
        <exception cref="T:System.NotSupportedException">La plataforma no admite el algoritmo especificado.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public override byte[] Encode (byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] Encode(unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.RsaSignatureCookieTransform.Encode(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Encode (value As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ Encode(cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberSignature Language="F#" Value="override this.Encode : byte[] -&gt; byte[]" Usage="rsaSignatureCookieTransform.Encode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="value">Datos que van a firmar.</param>
        <summary>Firma los datos especificados.</summary>
        <returns>Datos firmados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La clave especificada por el <xref:System.IdentityModel.RsaSignatureCookieTransform.SigningKey%2A> propiedad debe incluir la clave privada para firmar los datos.  
  
 Se pueden comprobar los datos firmados mediante una llamada a la <xref:System.IdentityModel.RsaSignatureCookieTransform.Decode%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="value" /> contiene cero bytes.</exception>
        <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.IdentityModel.RsaSignatureCookieTransform.SigningKey" /> es <see langword="null" />.  
  
O bien 
La clave especificada por la propiedad <see cref="P:System.IdentityModel.RsaSignatureCookieTransform.SigningKey" /> no es asignable como <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" />.  
  
O bien 
La clave especificada por la propiedad <see cref="P:System.IdentityModel.RsaSignatureCookieTransform.SigningKey" /> no contiene una clave privada.</exception>
        <exception cref="T:System.NotSupportedException">El sistema operativo no admite el algoritmo especificado.</exception>
      </Docs>
    </Member>
    <Member MemberName="HashName">
      <MemberSignature Language="C#" Value="public string HashName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HashName" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.RsaSignatureCookieTransform.HashName" />
      <MemberSignature Language="VB.NET" Value="Public Property HashName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HashName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HashName : string with get, set" Usage="System.IdentityModel.RsaSignatureCookieTransform.HashName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre del algoritmo hash que se va a utilizar.</summary>
        <value>Nombre del algoritmo hash. El valor predeterminado es "SHA256".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SHA256 es el algoritmo predeterminado. Esto puede requerir un sistema operativo mínimo de [!INCLUDE[winxpsvr](~/includes/winxpsvr-md.md)] y .NET 3.5 SP1.  
  
 Si no se admite SHA256, establezca el <xref:System.IdentityModel.RsaSignatureCookieTransform.HashName%2A> propiedad en "SHA1".  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningKey">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.RSA SigningKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.RSA SigningKey" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.RsaSignatureCookieTransform.SigningKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SigningKey As RSA" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::RSA ^ SigningKey { System::Security::Cryptography::RSA ^ get(); void set(System::Security::Cryptography::RSA ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SigningKey : System.Security.Cryptography.RSA with get, set" Usage="System.IdentityModel.RsaSignatureCookieTransform.SigningKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.RSA</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la clave RSA que se utiliza para la firma.</summary>
        <value>La clave RSA que se usa para firmar.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerificationKeys">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Cryptography.RSA&gt; VerificationKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Cryptography.RSA&gt; VerificationKeys" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.RsaSignatureCookieTransform.VerificationKeys" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property VerificationKeys As ReadOnlyCollection(Of RSA)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Cryptography::RSA ^&gt; ^ VerificationKeys { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Cryptography::RSA ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VerificationKeys : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Cryptography.RSA&gt;" Usage="System.IdentityModel.RsaSignatureCookieTransform.VerificationKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Cryptography.RSA&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la colección de claves utilizadas para la comprobación de signaturas.  
  
De forma predeterminada, esta propiedad devuelve una lista que contiene solo la clave de firma.</summary>
        <value>La colección de claves utilizadas para la comprobación de signaturas.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>