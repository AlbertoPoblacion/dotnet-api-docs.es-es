<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AsyncResult.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac523d8860c780243a3a6d8738333fbea20284fb841.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">23d8860c780243a3a6d8738333fbea20284fb841</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.AsyncResult">
          <source>An abstract base class that implements the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> interface.</source>
          <target state="translated">Clase base abstracta que implementa la interfaz <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.AsyncResult">
          <source>Serves as a base class from which to derive <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> objects that can be used for common asynchronous programming scenarios.</source>
          <target state="translated">Actúa como clase base de la que derivar los objetos <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> que se pueden utilizar para los escenarios de programación asincrónica comunes.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.AsyncResult">
          <source>For more information see the <ph id="ph1">&lt;xref:System.IAsyncResult?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated">Para obtener más información, consulte el <ph id="ph1">&lt;xref:System.IAsyncResult?displayProperty=nameWithType&gt;</ph> interfaz.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.AsyncResult">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.TypedAsyncResult%601&gt;</ph> class derives from <ph id="ph2">&lt;xref:System.IdentityModel.AsyncResult&gt;</ph>.</source>
          <target state="translated">La clase <ph id="ph1">&lt;xref:System.IdentityModel.TypedAsyncResult%601&gt;</ph> se deriva de <ph id="ph2">&lt;xref:System.IdentityModel.AsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.AsyncResult">
          <source>Called from constructors in derived classes to initialize the <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> class.</source>
          <target state="translated">Se llama desde constructores de clases derivadas para inicializar la clase <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.#ctor">
          <source>Called from constructors in derived classes to initialize an instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> class that does not have a callback delegate or  a state object.</source>
          <target state="translated">Llamado desde constructores en clases derivadas para inicializar una instancia de la clase de <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> que no tiene un delegado de devolución de llamada ni un objeto de estado.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.#ctor(System.Object)">
          <source>A user-defined object that qualifies or contains information about an asynchronous operation.</source>
          <target state="translated">Objeto definido por el usuario que califica o contiene información sobre una operación asincrónica.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.#ctor(System.Object)">
          <source>Called from constructors in derived classes to initialize an instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> class that does not have a callback delegate but does have  a state object.</source>
          <target state="translated">Llamado desde constructores en clases derivadas para inicializar una instancia de la clase de <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> que no tiene un delegado de devolución de llamada pero tiene un objeto de estados.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.#ctor(System.AsyncCallback,System.Object)">
          <source>The method to be called when the asynchronous operation completes.</source>
          <target state="translated">Método al que se va a llamar cuando se complete la operación de lectura asincrónica.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.#ctor(System.AsyncCallback,System.Object)">
          <source>A user-defined object that qualifies or contains information about an asynchronous operation.</source>
          <target state="translated">Objeto definido por el usuario que califica o contiene información sobre una operación asincrónica.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.#ctor(System.AsyncCallback,System.Object)">
          <source>Called from constructors in derived classes to initialize an instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> class that has a callback delegate and  a state object.</source>
          <target state="translated">Llamado desde constructores en clases derivadas para inicializar una instancia de la clase de <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> que tiene un delegado de devolución de llamada y un objeto de estado.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.AsyncResult.AsyncState">
          <source>Gets a user-defined object that qualifies or contains information about an asynchronous operation.</source>
          <target state="translated">Obtiene un objeto definido por el usuario que califica o contiene información sobre una operación asincrónica.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.AsyncResult.AsyncState">
          <source>A user-defined object that qualifies or contains information about an asynchronous operation.</source>
          <target state="translated">Objeto definido por el usuario que califica o contiene información sobre una operación asincrónica.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.AsyncResult.AsyncState">
          <source>For more information see the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncState%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Para obtener más información, consulte el <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncState%2A?displayProperty=nameWithType&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.AsyncResult.AsyncWaitHandle">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> that is used to wait for an asynchronous operation to complete.</source>
          <target state="translated">Obtiene <ph id="ph1">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> que se utiliza para esperar a que finalice una operación asincrónica.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.AsyncResult.AsyncWaitHandle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> that is used to wait for an asynchronous operation to complete.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> que se utiliza para esperar a que finalice una operación asincrónica.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.AsyncResult.AsyncWaitHandle">
          <source>For more information see the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Para obtener más información, consulte el <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A?displayProperty=nameWithType&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.AsyncResult">
          <source>Called to complete the asynchronous operation.</source>
          <target state="translated">Se llama a este método para completar la operación asincrónica.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Complete(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the asynchronous operation completed synchronously; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la operación asincrónica finalizó sincrónicamente; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Complete(System.Boolean)">
          <source>Call this version of complete when your asynchronous operation is complete and no exception was encountered.</source>
          <target state="translated">Llame a esta versión de complete cuando se complete la operación asincrónica y no se encuentre ninguna excepción.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Complete(System.Boolean)">
          <source>It updates the state of the operation and notifies the callback.</source>
          <target state="translated">Actualiza el estado de la operación y notifica la devolución de llamada.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the asynchronous operation completed synchronously; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la operación asincrónica finalizó sincrónicamente; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)">
          <source>The exception that occurred during the processing of the asynchronous operation.</source>
          <target state="translated">Excepción producida durante el procesamiento de una operación asincrónica.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)">
          <source>Call this version of complete if you raise an exception during processing.</source>
          <target state="translated">Llame a esta versión de complete si inicia una excepción durante el procesamiento.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)">
          <source>In addition to notifying the callback, it captures the exception and stores it to be thrown during the call to the <ph id="ph1">&lt;see cref="M:System.IdentityModel.AsyncResult.End(System.IAsyncResult)" /&gt;</ph> method.</source>
          <target state="translated">Además de notificar la devolución de llamada, captura la excepción y la almacena para que se inicie durante la llamada al método <ph id="ph1">&lt;see cref="M:System.IdentityModel.AsyncResult.End(System.IAsyncResult)" /&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.AsyncResult.CompletedSynchronously">
          <source>Gets a value that indicates whether the asynchronous operation completed synchronously.</source>
          <target state="translated">Obtiene un valor que indica si se completó la operación asincrónica de forma sincrónica.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.AsyncResult.CompletedSynchronously">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the asynchronous operation completed synchronously; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la operación asincrónica se completó de forma sincrónica; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.AsyncResult.CompletedSynchronously">
          <source>For more information see the <ph id="ph1">&lt;xref:System.IAsyncResult.CompletedSynchronously%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Para obtener más información, consulte el <ph id="ph1">&lt;xref:System.IAsyncResult.CompletedSynchronously%2A?displayProperty=nameWithType&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.AsyncResult">
          <source>Releases the resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> class.</source>
          <target state="translated">Libera los recursos utilizados por la instancia actual de la clase <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Dispose">
          <source>Releases the resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> class.</source>
          <target state="translated">Libera los recursos utilizados por la instancia actual de la clase <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para liberar tanto los recursos administrados como los no administrados, <ph id="ph2">&lt;see langword="false" /&gt;</ph> para liberar solo los recursos no administrados.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> indicates that this is an explicit call to Dispose.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> indica que se trata de una llamada explícita a Dispose.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Dispose(System.Boolean)">
          <source>Called by the <ph id="ph1">&lt;see cref="M:System.IdentityModel.AsyncResult.Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.IdentityModel.AsyncResult.Finalize" /&gt;</ph> methods to release the managed and unmanaged resources used by the current instance of the <ph id="ph3">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> class.</source>
          <target state="translated">Lo llaman los métodos <ph id="ph1">&lt;see cref="M:System.IdentityModel.AsyncResult.Dispose" /&gt;</ph> y <ph id="ph2">&lt;see cref="M:System.IdentityModel.AsyncResult.Finalize" /&gt;</ph> para liberar los recursos administrados y no administrados usados por la instancia actual de la clase <ph id="ph3">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.End(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> representing the status of the asynchronous operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> que representa el estado de la operación asincrónica.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.End(System.IAsyncResult)">
          <source>Call this method when the <bpt id="p1">&lt;c&gt;</bpt>End<ept id="p1">&lt;/c&gt;</ept> function for the asynchronous operation is complete.</source>
          <target state="translated">Llame a este método cuando la función <bpt id="p1">&lt;c&gt;</bpt>End<ept id="p1">&lt;/c&gt;</ept> para la operación asincrónica se complete.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.End(System.IAsyncResult)">
          <source>It ensures that the asynchronous operation is complete, and does some common validation.</source>
          <target state="translated">Se asegura de que la operación asincrónica está completa y realiza alguna validación común.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Finalize">
          <source>Allows the <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">Permite que el objeto <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> intente liberar recursos y realizar otras operaciones de limpieza antes de ser reclamado por la recolección de elementos no utilizados.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.AsyncResult.IsCompleted">
          <source>Gets a value that indicates whether the asynchronous operation has completed.</source>
          <target state="translated">Obtiene un valor que indica si se completó la operación asincrónica.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.AsyncResult.IsCompleted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the operation is complete; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la operación se ha completado; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>