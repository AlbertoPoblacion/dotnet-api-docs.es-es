<Type Name="IUriContext" FullName="System.Windows.Markup.IUriContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3fd478d70e9ef3abbe912f7bac55cf5016da8da7" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36502717" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IUriContext" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IUriContext" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IUriContext" />
  <TypeSignature Language="VB.NET" Value="Public Interface IUriContext" />
  <TypeSignature Language="C++ CLI" Value="public interface class IUriContext" />
  <TypeSignature Language="F#" Value="type IUriContext = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationCore, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa un servicio que puede usar el contexto de la aplicación para resolver el identificador URI relativo proporcionado como un identificador URI absoluto.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.IUriContext> se implementa como un servicio permite a los convertidores de tipos usar un contexto específico de la aplicación que podría ser capaz de completar una propiedad de tipo de URI.  
  
 Pueden consultar los convertidores de tipos y extensiones de marcado <xref:System.Windows.Markup.IUriContext> como un servicio en el contexto de servicio que proporciona un escritor de objetos XAML, cuando el escritor de objetos XAML invoca el comportamiento de conversión de valor. Para obtener más información, consulte [convertidores de tipos y extensiones de marcado para XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) y [contextos de servicio disponibles para los convertidores de tipos y extensiones de marcado](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).  
  
 <xref:System.Windows.Markup.IUriContext> no es solo para conversión de valor y el contexto de servicio. También puede implementar la lógica de clase para elementos de interfaz de usuario o de otras clases que admiten la contención de <xref:System.Windows.Markup.IUriContext> services como un modelo reconocido que los elementos secundarios pueden llamar para obtener información de URI base, o almacenar información del identificador URI que se obtiene de XAML de base de análisis de la elemento raíz.  
  
 En versiones anteriores de .NET Framework, esta interfaz existía en el ensamblado PresentationCore de específico de WPF. En [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.IUriContext> en el ensamblado System.Xaml. Para obtener más información, consulte [tipos migrados de WPF a System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
## <a name="wpf-usage-notes"></a>Notas de uso de WPF  
 Escenarios de ejemplo para <xref:System.Windows.Markup.IUriContext> existen en WPF.  
  
 Como ejemplo de un convertidor de valores, el <xref:System.Windows.Media.FontFamilyConverter> clase puede usar un URI relativo que se proporciona para las propiedades como <xref:System.Windows.Controls.Page.FontFamily%2A?displayProperty=nameWithType>si <xref:System.Windows.Markup.IUriContext> está disponible como un servicio en el <xref:System.ComponentModel.ITypeDescriptorContext> entrada.  
  
 Como ejemplo del caso de elemento, <xref:System.Windows.Documents.Hyperlink> implementa <xref:System.Windows.Markup.IUriContext> para que pueda pasar a través de los valores de URI base al analizar, que luego modifica <xref:System.Windows.Documents.Hyperlink.NavigateUri%2A>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IUriContext.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseUri : Uri with get, set" Usage="System.Windows.Markup.IUriContext.BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el identificador URI base del contexto de aplicación actual.</summary>
        <value>URI base del contexto de la aplicación.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>