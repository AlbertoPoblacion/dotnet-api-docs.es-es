<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IReceiveMarkupExtension.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50d590f413cad5fd1e1bf753c645edf4ec35b2826.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0d590f413cad5fd1e1bf753c645edf4ec35b2826</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.IReceiveMarkupExtension">
          <source>Provides a mechanism whereby types can declare that they can receive an expression (or another class) from a markup extension, where the output is a different property type than the target property.</source>
          <target state="translated">Proporciona un mecanismo mediante el cual los tipos pueden declarar que pueden recibir una expresión (u otra clase) de una extensión de marcado, donde el resultado es un tipo de propiedad diferente que la propiedad de destino.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.IReceiveMarkupExtension">
          <source>Do not use for .NET Framework 4 implementations.</source>
          <target state="translated">No lo use para implementaciones de .NET Framework 4.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IReceiveMarkupExtension">
          <source>In <ph id="ph1">[!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.IReceiveMarkupExtension&gt;</ph> was a WPF-specific technique for permitting types to enter a different codepath whenever any of its XAML-accessible members where set as markup extensions during XAML parsing.</source>
          <target state="translated">En <ph id="ph1">[!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.IReceiveMarkupExtension&gt;</ph> fue una técnica específica de WPF para permitir tipos escribir una codepath diferente cada vez que cualquiera de sus miembros accesibles a XAML donde se establecen como extensiones de marcado durante el análisis de XAML.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IReceiveMarkupExtension">
          <source>In <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, this interface is obsolete, and is replaced with a .NET Framework XAML Services implementation for how markup extensions can receive services or types can invoke markup-extension specific setter logic.</source>
          <target state="translated">En <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, esta interfaz está obsoleta y se reemplaza con una implementación de servicios XAML de .NET Framework para cómo las extensiones de marcado pueden recibir servicios o tipos puedan invocar la lógica de establecedor específica de extensión de marcado.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IReceiveMarkupExtension">
          <source>For <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> implementations, if types want to perform special processing when setting properties by markup extension rather than by other means, types should be defined with <ph id="ph2">&lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;</ph> attributes applied.</source>
          <target state="translated">Para <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> implementaciones, si desean que los tipos realizar un procesamiento especial al establecer las propiedades por extensión de marcado, en lugar de por otros medios, tipos deben definirse con <ph id="ph2">&lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;</ph> atributos aplicados.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IReceiveMarkupExtension">
          <source>The attribute specifies a callback, which is typically defined as a private member of the type.</source>
          <target state="translated">El atributo especifica una devolución de llamada, que normalmente se define como un miembro privado del tipo.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IReceiveMarkupExtension">
          <source>In infrastructure implementations of WPF classes, most cases where <ph id="ph1">&lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;</ph> is applied reference a <ph id="ph2">`ReceiveMarkupExtension`</ph> method that previously implemented this interface, but now instead use context through the callback.</source>
          <target state="translated">En las implementaciones de infraestructura de las clases de WPF, más casos donde <ph id="ph1">&lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute&gt;</ph> es aplicar referencia un <ph id="ph2">`ReceiveMarkupExtension`</ph> método que previamente implementó esta interfaz, pero ahora en su lugar utilice contexto a través de la devolución de llamada.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)">
          <source>The name of the target property.</source>
          <target state="translated">Nombre de la propiedad de destino.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)">
          <source>The markup extension instance of the incoming data.</source>
          <target state="translated">Instancia de la extensión de marcado de los datos entrantes.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)">
          <source>Can provide additional services that should be performed when processing the markup extension data for a property value.</source>
          <target state="translated">Puede proporcionar los servicios adicionales que deben realizarse al procesar los datos de extensión de marcado para un valor de propiedad.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)">
          <source>Provides the handling for markup extensions that provide property values.</source>
          <target state="translated">Proporciona el control para las extensiones de marcado que proporcionan valores de propiedad.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)">
          <source>Do not use for <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> implementations; see <ph id="ph2">&lt;see cref="T:System.Windows.Markup.IReceiveMarkupExtension" /&gt;</ph>.</source>
          <target state="translated">No lo use para las implementaciones de <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>; vea <ph id="ph2">&lt;see cref="T:System.Windows.Markup.IReceiveMarkupExtension" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>