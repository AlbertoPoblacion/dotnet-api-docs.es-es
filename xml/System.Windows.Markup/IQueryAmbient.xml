<Type Name="IQueryAmbient" FullName="System.Windows.Markup.IQueryAmbient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5b1419b6b996eab65fbdcda1f6ed9782df12197d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36502769" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IQueryAmbient" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IQueryAmbient" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="VB.NET" Value="Public Interface IQueryAmbient" />
  <TypeSignature Language="C++ CLI" Value="public interface class IQueryAmbient" />
  <TypeSignature Language="F#" Value="type IQueryAmbient = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Consulta si una propiedad especificada debe tratarse como de ambiente en el ámbito actual.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El propósito de un mecanismo de propiedad de ambiente es mejorar el tiempo de análisis informando un escritor de objetos XAML para evitar crear instancias de ciertos objetos, en casos donde se sabe que los objetos son para los valores que son temporales y no son útiles para un tiempo de ejecución típico aplicación. Normalmente, búsquedas XAML o el procesamiento de XAML de un descriptor de acceso de propiedad get tendría que crear instancias de estos objetos para llenar la representación del gráfico de objeto con valores de listas para usar.  
  
 <xref:System.Windows.Markup.IQueryAmbient> contiene un miembro: <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>.  
  
 <xref:System.Windows.Markup.IQueryAmbient> es un mecanismo paralelo para <xref:System.Windows.Markup.AmbientAttribute>. <xref:System.Windows.Markup.IQueryAmbient> es el mecanismo especializado que evita el uso de reflexión para determinar información y también puede actuar de resultar (un objeto dado podría elegir informe `true` o `false` para <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>), mientras que el atributo es esencialmente estático análisis). <xref:System.Windows.Markup.AmbientAttribute> es el mecanismo general que puede usarse por los escritores de objetos XAML y que normalmente se correlaciona con las propiedades del sistema de tipo XAML dedicadas <xref:System.Xaml.XamlMember.IsAmbient%2A> y <xref:System.Xaml.XamlType.IsAmbient%2A>.  
  
## <a name="wpf-implementations-of-iqueryambient"></a>Implementaciones de WPF de IQueryAmbient  
 En WPF, <xref:System.Windows.Markup.IQueryAmbient> se usa para el proceso de búsqueda de diccionario de recursos. El proceso de búsqueda obtiene sucesivas `Resources` valores a lo largo del árbol lógico de WPF, funcionando hacia la raíz del ámbito de recurso hasta que una clave no se encuentra o la clave se determina que no existe en el ámbito. Normalmente, si lo hace, necesitaría crear instancias de un <xref:System.Windows.ResourceDictionary> cada vez que reciba los resultados. Declarar el contenido de `Resources` como ambiente siempre que `Resources` existe se optimiza el proceso de búsqueda. En WPF, esta interfaz se implementa en los casos siguientes:  
  
-   <xref:System.Windows.FrameworkElement> implementa <xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A> para devolver `true` para todos los nombres de propiedad si contiene una existente <xref:System.Windows.ResourceDictionary> para <xref:System.Windows.FrameworkElement.Resources%2A>, y siempre y cuando la consulta no es para el <xref:System.Windows.FrameworkElement.Resources%2A> propiedad en Sí.  
  
-   <xref:System.Windows.Style> implementa el mismo modelo para su <xref:System.Windows.Style.Resources%2A>.  
  
-   <xref:System.Windows.Application> implementa el mismo modelo para su <xref:System.Windows.Application.Resources%2A>.  
  
-   <xref:System.Windows.FrameworkContentElement> implementa el mismo modelo para su <xref:System.Windows.FrameworkContentElement.Resources%2A>.  
  
-   <xref:System.Windows.FrameworkTemplate> implementa el mismo modelo para su <xref:System.Windows.FrameworkTemplate.Resources%2A>. También informa <xref:System.Windows.FrameworkTemplate.Template%2A> contenido como ambiente pero devuelve `false` si consultar <xref:System.Windows.FrameworkTemplate.Template%2A> propio.  
  
-   En cada uno de estos casos, la correspondiente `Resources` propiedad (y <xref:System.Windows.FrameworkTemplate.Template%2A>) se atribuyen como <xref:System.Windows.Markup.AmbientAttribute>. El uso habitual consiste en consultas sobre las propiedades que no sean el <xref:System.Windows.Markup.AmbientAttribute> con atributos de propiedades del objeto que define la interfaz. En otras palabras, siempre y cuando existe un diccionario de recursos con el fin de proporcionar el valor de tiempo de ejecución potencial cuando se crea el gráfico de objetos, cualquier otra propiedad además de contenedor de propiedad del diccionario de recursos se puede tratar como ambiente.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
  </Docs>
  <Members>
    <Member MemberName="IsAmbientPropertyAvailable">
      <MemberSignature Language="C#" Value="public bool IsAmbientPropertyAvailable (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAmbientPropertyAvailable(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAmbientPropertyAvailable (propertyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAmbientPropertyAvailable(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="abstract member IsAmbientPropertyAvailable : string -&gt; bool" Usage="iQueryAmbient.IsAmbientPropertyAvailable propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Nombre de la propiedad cuyo estado ambiente se va a comprobar.</param>
        <summary>Consulta si una propiedad con nombre especificada se puede considerar como de ambiente en el ámbito actual.</summary>
        <returns>Es <see langword="true" /> si la propiedad solicitada se puede considerar como de ambiente; de lo contrario, es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>