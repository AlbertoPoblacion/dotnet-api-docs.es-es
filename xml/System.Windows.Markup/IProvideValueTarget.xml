<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IProvideValueTarget.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5fe449848bcdce05ca59b27ae4a3b23e50137f9b6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fe449848bcdce05ca59b27ae4a3b23e50137f9b6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>Represents a service that reports situational object-property relationships for markup extension evaluation.</source>
          <target state="translated">Representa un servicio que notifica las relaciones situacionales de objetos y propiedades para la evaluación de la extensión de marcado.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> represents a service that reports information regarding the object-property structure surrounding where a value converter is invoked.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> Representa un servicio que notifica información con respecto a la estructura de objetos y propiedades que rodean donde se invoca un convertidor de valores.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>Type converters and markup extensions can query for <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> as a service on the service context that is provided by a XAML object writer, when the XAML object writer invokes value conversion behavior.</source>
          <target state="translated">Pueden consultar los convertidores de tipos y extensiones de marcado <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> como un servicio en el contexto de servicio que proporciona un escritor de objetos XAML, cuando el escritor de objetos XAML invoca el comportamiento de conversión de valor.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>For more information, see <bpt id="p1">[</bpt>Type Converters and Markup Extensions for XAML<ept id="p1">](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)</ept> and <bpt id="p2">[</bpt>Service Contexts Available to Type Converters and Markup Extensions<ept id="p2">](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>convertidores de tipos y extensiones de marcado para XAML<ept id="p1">](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)</ept> y <bpt id="p2">[</bpt>contextos de servicio disponibles para los convertidores de tipos y extensiones de marcado<ept id="p2">](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>For markup extensions specifically, a scenario where <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> is useful is to determine the validity of your markup extension's situational usage.</source>
          <target state="translated">Para las extensiones de marcado específicamente, un escenario donde <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> es útil consiste en determinar la validez de buen uso de la extensión de marcado.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>For example, your markup extension might implement a value deferral mechanism, but using that mechanism might only be appropriate if the target object is capable of using other components of your deferral mechanism at run time.</source>
          <target state="translated">Por ejemplo, la extensión de marcado podría implementar un mecanismo de aplazamiento de valor, pero utilizar ese mecanismo sólo podría ser adecuado si el objeto de destino es capaz de utilizar otros componentes de su mecanismo de aplazamiento en tiempo de ejecución.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>You could check the type system characteristics of the object returned as <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph> and make sure that object supports your deferral technique.</source>
          <target state="translated">Puede comprobar las características del sistema de tipo del objeto devuelto como <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph> y asegúrese de que ese objeto admite la técnica del aplazamiento.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>If so, your markup extension returns a value, and if not, your markup extension throws an exception that will be picked up as an inner exception by a XAML object writer.</source>
          <target state="translated">Si es así, la extensión de marcado devuelve un valor, y si no es así, la extensión de marcado produce una excepción que se recogerán como una excepción interna mediante un escritor de objetos XAML.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>A similar scenario is assuring that a particular property supports a capability, by checking type system characteristics of the <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A&gt;</ph>.</source>
          <target state="translated">Un escenario similar asegura que una propiedad determinada admite una capacidad mediante la comprobación de características del tipo de sistema de la <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>Although the API name <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> might imply an association with <ph id="ph2">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A?displayProperty=nameWithType&gt;</ph>, the information reported by <ph id="ph3">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> can also be useful to a <ph id="ph4">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> or <ph id="ph5">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph>.</source>
          <target state="translated">Aunque el nombre de la API <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> podrían implicar una asociación con <ph id="ph2">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A?displayProperty=nameWithType&gt;</ph>, la información que informan <ph id="ph3">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> también puede ser útil para un <ph id="ph4">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> o <ph id="ph5">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph> typically have more context than a markup extension because they are dedicated to a particular target type or target property, and thus the situational validity is usually predictable in the type system.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> o <ph id="ph2">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph> suelen tener más contexto que una extensión de marcado porque se dedican a un tipo de destino concreto o una propiedad de destino y, por tanto, la validez de la situación es normalmente predecible en el sistema de tipos.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>However, other scenarios exist.</source>
          <target state="translated">Sin embargo, existen otros escenarios.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>The following is a list of some scenarios that might be implemented by either a type converter or a markup extension:</source>
          <target state="translated">La siguiente es una lista de algunos escenarios que podrían ser implementados por un convertidor de tipos o una extensión de marcado:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>Get <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph> to read instance values of other properties on that object.</source>
          <target state="translated">Obtener <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph> para leer los valores de la instancia de otras propiedades en ese objeto.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>Note that your handling here might need to be robust for unset values, because the processing order of XAML members on the target object can be nondeterministic.</source>
          <target state="translated">Tenga en cuenta que el control aquí posible que deba ser eficaces para los valores sin establecer, porque el orden de procesamiento de los miembros XAML en el objeto de destino puede ser no determinista.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>Get <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph> to read type-level metadata, or to verify that required interfaces are implemented by the type.</source>
          <target state="translated">Obtener <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph> para leer los metadatos de nivel de tipo, o para comprobar que el tipo implementa las interfaces necesarias.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>Get <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A&gt;</ph> to read property metadata.</source>
          <target state="translated">Obtener <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A&gt;</ph> para leer los metadatos de propiedad.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>One scenario is to use <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> information to limit which objects or properties are permitted to be set by your markup extension.</source>
          <target state="translated">Un escenario consiste en utilizar <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> información para limitar qué objetos o propiedades se permite para establecerse por su extensión de marcado.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>Before attempting to use the service, make sure that the service itself is not <ph id="ph1">`null`</ph> when returned by the relevant service provider parameter you are using for context.</source>
          <target state="translated">Antes de intentar usar el servicio, asegúrese de que no es el propio servicio <ph id="ph1">`null`</ph> al devuelto por el parámetro de proveedor de servicio en cuestión se utiliza para el contexto.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>When using the service, it is particularly important not to modify the object referenced by the <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph> property, or other objects referenced by that object.</source>
          <target state="translated">Cuando se usa el servicio, es particularmente importante no modificar el objeto al que hace referencia el <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph> propiedad u otros objetos que se hace referencia a ese objeto.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>For WPF specifically, these changes could cause unexpected changes that would invalidate the WPF property system.</source>
          <target state="translated">Para WPF en concreto, estos cambios podrían producir cambios inesperados que invalidarían el sistema de propiedades WPF.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>Do not use the type of <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A&gt;</ph> to determine which precise type a markup extension or type converter should return.</source>
          <target state="translated">No utilice el tipo de <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A&gt;</ph> determinar el tipo que precisa un convertidor de tipos o extensión de marcado debe devolver.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>That is not a best practice.</source>
          <target state="translated">No es una práctica recomendada.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>Your return type should be consistent with attributing (<ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&gt;</ph> for markup extensions) or patterns (class name of the type converter).</source>
          <target state="translated">El tipo de valor devuelto debe ser coherente con atribución (<ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&gt;</ph> para las extensiones de marcado) o modelos (nombre de clase del convertidor de tipo).</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>In previous versions of the .NET Framework, this interface existed in the WPF-specific assembly WindowsBase.</source>
          <target state="translated">En versiones anteriores de .NET Framework, esta interfaz existía en el ensamblado específico de WPF WindowsBase.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>In <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> is in the System.Xaml assembly.</source>
          <target state="translated">En <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> en el ensamblado System.Xaml.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>For more information, see <bpt id="p1">[</bpt>Types Migrated from WPF to System.Xaml<ept id="p1">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>tipos migrados de WPF a System.Xaml<ept id="p1">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>WPF Usage Notes</source>
          <target state="translated">Notas de uso de WPF</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>This service supports framework features such as binding on a dependency property.</source>
          <target state="translated">Este servicio admite características del marco de trabajo, como el enlace en una propiedad de dependencia.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>In WPF, the service represented by <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> can return objects and properties for situations where the value to return from a markup extension or type converter depends on context.</source>
          <target state="translated">En WPF, el servicio representado por <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> puede devolver objetos y propiedades para las situaciones donde el valor devuelto de un convertidor de tipos o extensión de marcado depende de contexto.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> is leveraged heavily in the internal implementation of <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase&gt;</ph>, the class that implements the binding mechanism for dependency properties in WPF.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> se aprovecha considerablemente en la implementación interna de <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase&gt;</ph>, la clase que implementa el mecanismo de enlace para propiedades de dependencia de WPF.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>A default internal service provider for WPF implements <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> for usage by a custom markup extension or type converter.</source>
          <target state="translated">Un proveedor de servicio interno predeterminado para WPF implementa <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> para uso por parte de un convertidor de tipos o extensión de marcado personalizada.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>The object and property reported by <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> can only be set by the internal WPF service.</source>
          <target state="translated">El objeto y propiedad notifican por <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> sólo se puede establecer el servicio de WPF interno.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>Going beyond this definition of how <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> operates would require defining your own service provider for markup extension and type converter usages that implements at the very least the <ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;</ph> services, and that is an advanced scenario that is not described here.</source>
          <target state="translated">Más allá de esta definición de cómo <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> funciona requeriría definir su propio proveedor de servicio para los usos de convertidor de extensión y el tipo de marcado que se implementa como mínimo el <ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> y <ph id="ph3">&lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;</ph> servicios y que es un escenario avanzado que no se describe aquí.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>A null value for <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph> does not necessarily mean that a markup extension or type converter cannot act, although that depends on your implementation.</source>
          <target state="translated">Un valor null para <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph> no significa necesariamente que no puede actuar un convertidor de tipos o extensión de marcado, aunque eso depende de su implementación.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>An example case where the values from <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> are null even if the service is available is if your markup extension is nested within another markup extension, such as a <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>.</source>
          <target state="translated">Un ejemplo de casos donde los valores de <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> son null incluso si el servicio está disponible es si su extensión de marcado está anidada dentro de otra extensión de marcado, como un <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>An implementation that relies on <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> should always check for null values if only for the purpose of throwing a specific exception, if that is your intended design.</source>
          <target state="translated">Una implementación que se basa en <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> siempre debe comprobar para valores null si sólo con el fin de producir una excepción concreta, si ese es el diseño previsto.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.IProvideValueTarget.TargetObject">
          <source>Gets the target object being reported.</source>
          <target state="translated">Obtiene el objeto de destino que se va a notificar.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.IProvideValueTarget.TargetObject">
          <source>The target object being reported.</source>
          <target state="translated">Objeto de destino que se va a notificar.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.IProvideValueTarget.TargetObject">
          <source>The value returned by <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph> is the actual reference, not a type system identifier or other identifier.</source>
          <target state="translated">El valor devuelto por <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph> es la referencia real, no un identificador de tipo de sistema u otro identificador.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.IProvideValueTarget.TargetObject">
          <source>The value can also be <ph id="ph1">`null`</ph>; see <ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph>.</source>
          <target state="translated">El valor también puede ser <ph id="ph1">`null`</ph>; vea <ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.IProvideValueTarget.TargetObject">
          <source>When using the service, it is particularly important not to modify the object referenced by the <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph> property, or other objects referenced by that object as properties that are not specifically the value-conversion case you are handling.</source>
          <target state="translated">Cuando se usa el servicio, es particularmente importante no modificar el objeto al que hace referencia el <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph> propiedad u otros objetos que se hace referencia a ese objeto como propiedades que no son específicamente la conversión de valor caso se están controlando.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.IProvideValueTarget.TargetObject">
          <source>For WPF specifically, changing the target object could cause unexpected changes that would invalidate the WPF  property system.</source>
          <target state="translated">Para WPF específicamente, cambiar el objeto de destino podría producir cambios inesperados que invalidarían el sistema de propiedades WPF.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.IProvideValueTarget.TargetProperty">
          <source>Gets an identifier for the target property being reported.</source>
          <target state="translated">Obtiene un identificador de la propiedad de destino que se está notificando.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.IProvideValueTarget.TargetProperty">
          <source>An identifier for the target property being reported.</source>
          <target state="translated">Identificador de la propiedad de destino que se está notificando.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.IProvideValueTarget.TargetProperty">
          <source>The value can also be <ph id="ph1">`null`</ph>; see <ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph>.</source>
          <target state="translated">El valor también puede ser <ph id="ph1">`null`</ph>; vea <ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.IProvideValueTarget.TargetProperty">
          <source>WPF Usage Notes</source>
          <target state="translated">Notas de uso de WPF</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.IProvideValueTarget.TargetProperty">
          <source>For a dependency property, the default WPF service may return a <ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph>, such that the markup extension or type converter can use metadata.</source>
          <target state="translated">Para una propiedad de dependencia, el servicio WPF predeterminado puede devolver un <ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph>, de modo que el convertidor de tipos o extensión de marcado puede utilizar metadatos.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.IProvideValueTarget.TargetProperty">
          <source>Otherwise, the returned object can be a <ph id="ph1">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> for a CLR property.</source>
          <target state="translated">En caso contrario, el objeto devuelto puede ser un <ph id="ph1">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> para una propiedad CLR.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>