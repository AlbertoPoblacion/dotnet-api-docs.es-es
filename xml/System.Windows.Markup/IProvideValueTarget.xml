<Type Name="IProvideValueTarget" FullName="System.Windows.Markup.IProvideValueTarget">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe449848bcdce05ca59b27ae4a3b23e50137f9b6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30657979" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IProvideValueTarget" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProvideValueTarget" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IProvideValueTarget" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProvideValueTarget" />
  <TypeSignature Language="C++ CLI" Value="public interface class IProvideValueTarget" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationFramework, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa un servicio que notifica las relaciones situacionales de objetos y propiedades para la evaluación de la extensión de marcado.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.IProvideValueTarget> Representa un servicio que notifica información con respecto a la estructura de objetos y propiedades que rodean donde se invoca un convertidor de valores.  
  
 Pueden consultar los convertidores de tipos y extensiones de marcado <xref:System.Windows.Markup.IProvideValueTarget> como un servicio en el contexto de servicio que proporciona un escritor de objetos XAML, cuando el escritor de objetos XAML invoca el comportamiento de conversión de valor. Para obtener más información, consulte [convertidores de tipos y extensiones de marcado para XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) y [contextos de servicio disponibles para los convertidores de tipos y extensiones de marcado](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).  
  
 Para las extensiones de marcado específicamente, un escenario donde <xref:System.Windows.Markup.IProvideValueTarget> es útil consiste en determinar la validez de buen uso de la extensión de marcado. Por ejemplo, la extensión de marcado podría implementar un mecanismo de aplazamiento de valor, pero utilizar ese mecanismo sólo podría ser adecuado si el objeto de destino es capaz de utilizar otros componentes de su mecanismo de aplazamiento en tiempo de ejecución. Puede comprobar las características del sistema de tipo del objeto devuelto como <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> y asegúrese de que ese objeto admite la técnica del aplazamiento. Si es así, la extensión de marcado devuelve un valor, y si no es así, la extensión de marcado produce una excepción que se recogerán como una excepción interna mediante un escritor de objetos XAML. Un escenario similar asegura que una propiedad determinada admite una capacidad mediante la comprobación de características del tipo de sistema de la <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>.  
  
 Aunque el nombre de la API <xref:System.Windows.Markup.IProvideValueTarget> podrían implicar una asociación con <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A?displayProperty=nameWithType>, la información que informan <xref:System.Windows.Markup.IProvideValueTarget> también puede ser útil para un <xref:System.ComponentModel.TypeConverter> o <xref:System.Windows.Markup.ValueSerializer>. A <xref:System.ComponentModel.TypeConverter> o <xref:System.Windows.Markup.ValueSerializer> suelen tener más contexto que una extensión de marcado porque se dedican a un tipo de destino concreto o una propiedad de destino y, por tanto, la validez de la situación es normalmente predecible en el sistema de tipos. Sin embargo, existen otros escenarios. La siguiente es una lista de algunos escenarios que podrían ser implementados por un convertidor de tipos o una extensión de marcado:  
  
-   Obtener <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> para leer los valores de la instancia de otras propiedades en ese objeto. Tenga en cuenta que el control aquí posible que deba ser eficaces para los valores sin establecer, porque el orden de procesamiento de los miembros XAML en el objeto de destino puede ser no determinista.  
  
-   Obtener <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> para leer los metadatos de nivel de tipo, o para comprobar que el tipo implementa las interfaces necesarias.  
  
-   Obtener <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> para leer los metadatos de propiedad.  
  
 Un escenario consiste en utilizar <xref:System.Windows.Markup.IProvideValueTarget> información para limitar qué objetos o propiedades se permite para establecerse por su extensión de marcado.  
  
 Antes de intentar usar el servicio, asegúrese de que no es el propio servicio `null` al devuelto por el parámetro de proveedor de servicio en cuestión se utiliza para el contexto.  
  
> [!IMPORTANT]
>  Cuando se usa el servicio, es particularmente importante no modificar el objeto al que hace referencia el <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> propiedad u otros objetos que se hace referencia a ese objeto. Para WPF en concreto, estos cambios podrían producir cambios inesperados que invalidarían el sistema de propiedades WPF.  
  
> [!NOTE]
>  No utilice el tipo de <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> determinar el tipo que precisa un convertidor de tipos o extensión de marcado debe devolver. No es una práctica recomendada. El tipo de valor devuelto debe ser coherente con atribución (<xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> para las extensiones de marcado) o modelos (nombre de clase del convertidor de tipo).  
  
 En versiones anteriores de .NET Framework, esta interfaz existía en el ensamblado específico de WPF WindowsBase. En [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.IProvideValueTarget> en el ensamblado System.Xaml. Para obtener más información, consulte [tipos migrados de WPF a System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
## <a name="wpf-usage-notes"></a>Notas de uso de WPF  
 Este servicio admite características del marco de trabajo, como el enlace en una propiedad de dependencia.  
  
 En WPF, el servicio representado por <xref:System.Windows.Markup.IProvideValueTarget> puede devolver objetos y propiedades para las situaciones donde el valor devuelto de un convertidor de tipos o extensión de marcado depende de contexto.  
  
 <xref:System.Windows.Markup.IProvideValueTarget> se aprovecha considerablemente en la implementación interna de <xref:System.Windows.Data.BindingBase>, la clase que implementa el mecanismo de enlace para propiedades de dependencia de WPF.  
  
 Un proveedor de servicio interno predeterminado para WPF implementa <xref:System.Windows.Markup.IProvideValueTarget> para uso por parte de un convertidor de tipos o extensión de marcado personalizada. El objeto y propiedad notifican por <xref:System.Windows.Markup.IProvideValueTarget> sólo se puede establecer el servicio de WPF interno. Más allá de esta definición de cómo <xref:System.Windows.Markup.IProvideValueTarget> funciona requeriría definir su propio proveedor de servicio para los usos de convertidor de extensión y el tipo de marcado que se implementa como mínimo el <xref:System.Windows.Markup.IProvideValueTarget> y <xref:System.Windows.Markup.IXamlTypeResolver> servicios y que es un escenario avanzado que no se describe aquí.  
  
 Un valor null para <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> o <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> no significa necesariamente que no puede actuar un convertidor de tipos o extensión de marcado, aunque eso depende de su implementación. Un ejemplo de casos donde los valores de <xref:System.Windows.Markup.IProvideValueTarget> son null incluso si el servicio está disponible es si su extensión de marcado está anidada dentro de otra extensión de marcado, como un <xref:System.Windows.Data.Binding>. Una implementación que se basa en <xref:System.Windows.Markup.IProvideValueTarget> siempre debe comprobar para valores null si sólo con el fin de producir una excepción concreta, si ese es el diseño previsto.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
    <altmember cref="T:System.Windows.Markup.MarkupExtension" />
    <altmember cref="T:System.IServiceProvider" />
  </Docs>
  <Members>
    <Member MemberName="TargetObject">
      <MemberSignature Language="C#" Value="public object TargetObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetObject { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto de destino que se va a notificar.</summary>
        <value>Objeto de destino que se va a notificar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor devuelto por <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> es la referencia real, no un identificador de tipo de sistema u otro identificador. El valor también puede ser `null`; vea <xref:System.Windows.Markup.IProvideValueTarget>.  
  
> [!IMPORTANT]
>  Cuando se usa el servicio, es particularmente importante no modificar el objeto al que hace referencia el <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> propiedad u otros objetos que se hace referencia a ese objeto como propiedades que no son específicamente la conversión de valor caso se están controlando. Para WPF específicamente, cambiar el objeto de destino podría producir cambios inesperados que invalidarían el sistema de propiedades WPF.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public object TargetProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetProperty As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetProperty { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un identificador de la propiedad de destino que se está notificando.</summary>
        <value>Identificador de la propiedad de destino que se está notificando.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor también puede ser `null`; vea <xref:System.Windows.Markup.IProvideValueTarget>.  
  
## <a name="wpf-usage-notes"></a>Notas de uso de WPF  
 Para una propiedad de dependencia, el servicio WPF predeterminado puede devolver un <xref:System.Windows.DependencyProperty>, de modo que el convertidor de tipos o extensión de marcado puede utilizar metadatos. En caso contrario, el objeto devuelto puede ser un <xref:System.Reflection.PropertyInfo> para una propiedad CLR.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
      </Docs>
    </Member>
  </Members>
</Type>