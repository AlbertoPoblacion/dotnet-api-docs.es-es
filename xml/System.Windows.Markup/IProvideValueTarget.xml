<Type Name="IProvideValueTarget" FullName="System.Windows.Markup.IProvideValueTarget">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="20bc28a7b54d4b6710755392db9e9c8c5438354a" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48677066" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IProvideValueTarget" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProvideValueTarget" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IProvideValueTarget" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProvideValueTarget" />
  <TypeSignature Language="C++ CLI" Value="public interface class IProvideValueTarget" />
  <TypeSignature Language="F#" Value="type IProvideValueTarget = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationFramework, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa un servicio que notifica las relaciones situacionales de objetos y propiedades para la evaluación de la extensión de marcado.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.IProvideValueTarget> Representa un servicio que notifica la información relativa a la estructura de propiedad del objeto que rodean a donde se invoca un convertidor de valores.  
  
 Pueden consultar los convertidores de tipos y extensiones de marcado <xref:System.Windows.Markup.IProvideValueTarget> como un servicio en el contexto de servicio que proporciona un escritor de objetos XAML, cuando el escritor de objetos XAML invoca el comportamiento de conversión de valor. Para obtener más información, consulte [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) y [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).  
  
 Las extensiones de marcado en concreto, un escenario donde <xref:System.Windows.Markup.IProvideValueTarget> es útil consiste en determinar la validez del uso de conocimiento de su extensión de marcado. Por ejemplo, la extensión de marcado podría implementar un mecanismo de aplazamiento de valor, pero utilizar ese mecanismo sólo podría ser adecuado si el objeto de destino es capaz de usar otros componentes de su mecanismo de aplazamiento en tiempo de ejecución. Puede comprobar las características del sistema de tipo del objeto devuelto como <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> y asegúrese de que ese objeto es compatible con la técnica del aplazamiento. Si es así, la extensión de marcado devuelve un valor y, si no, la extensión de marcado produce una excepción que se recogerán como una excepción interna mediante un escritor de objetos XAML. Un escenario similar asegura que una propiedad determinada admite una capacidad mediante la comprobación de características del sistema de tipo de la <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>.  
  
 Aunque el nombre de la API <xref:System.Windows.Markup.IProvideValueTarget> podrían implicar una asociación con <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A?displayProperty=nameWithType>, la información notificada por <xref:System.Windows.Markup.IProvideValueTarget> también puede ser útil para un <xref:System.ComponentModel.TypeConverter> o <xref:System.Windows.Markup.ValueSerializer>. Un <xref:System.ComponentModel.TypeConverter> o <xref:System.Windows.Markup.ValueSerializer> suelen tener más contexto que una extensión de marcado, porque se dedican a un tipo de destino determinado o una propiedad de destino y, por tanto, la validez de conocimiento es normalmente predecible en el sistema de tipos. Sin embargo, existen otros escenarios. La siguiente es una lista de algunos escenarios que podrían ser implementados por un convertidor de tipos o una extensión de marcado:  
  
-   Obtener <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> para leer los valores de la instancia de otras propiedades en ese objeto. Tenga en cuenta que su control aquí posible que deba ser sólido para valores sin establecer, porque el orden de procesamiento de miembros XAML del objeto de destino puede ser no determinista.  
  
-   Obtener <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> para leer los metadatos de nivel de tipo, o para comprobar que el tipo implementa las interfaces necesarias.  
  
-   Obtener <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> para leer los metadatos de propiedad.  
  
 Un escenario consiste en usar <xref:System.Windows.Markup.IProvideValueTarget> información para limitar qué objetos o propiedades pueden establecerse mediante su extensión de marcado.  
  
 Antes de intentar usar el servicio, asegúrese de que no es el propio servicio `null` al devuelto por el parámetro de proveedor de servicio correspondiente se está utilizando para el contexto.  
  
> [!IMPORTANT]
>  Cuando se usa el servicio, es particularmente importante no modificar el objeto al que hace referencia el <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> propiedad u otros objetos que se hace referencia a ese objeto. Para WPF en concreto, estos cambios podrían producir cambios inesperados que invalidarían el sistema de propiedades WPF.  
  
> [!NOTE]
>  No utilice el tipo de <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> determinar un convertidor de tipos o extensión de marcado que precisa el tipo debe devolver. No es una práctica recomendada. El tipo de valor devuelto debe ser coherente con la atribución (<xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> para las extensiones de marcado) o patrones (nombre de clase del convertidor de tipo).  
  
 En versiones anteriores de .NET Framework, esta interfaz existía en el ensamblado específico de WPF WindowsBase. En [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.IProvideValueTarget> está en el ensamblado System.Xaml. Para obtener más información, consulte [tipos migrados de WPF a System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
## <a name="wpf-usage-notes"></a>Notas de uso de WPF  
 Este servicio admite características de framework, como el enlace en una propiedad de dependencia.  
  
 En WPF, el servicio representado por <xref:System.Windows.Markup.IProvideValueTarget> puede devolver objetos y propiedades para las situaciones donde el valor devuelto de un convertidor de tipos o extensión de marcado depende de contexto.  
  
 <xref:System.Windows.Markup.IProvideValueTarget> se aprovecha en gran medida en la implementación interna de <xref:System.Windows.Data.BindingBase>, la clase que implementa el mecanismo de enlace para las propiedades de dependencia en WPF.  
  
 Proveedor de servicios interno predeterminado para WPF implementa <xref:System.Windows.Markup.IProvideValueTarget> para su uso por un convertidor de tipos o extensión de marcado personalizada. El objeto y propiedad notifican por <xref:System.Windows.Markup.IProvideValueTarget> solo puede establecerse mediante el servicio WPF interno. Más allá de esta definición de cómo <xref:System.Windows.Markup.IProvideValueTarget> funciona sería necesario definir su propio proveedor de servicios para los usos de convertidor de tipos de extensión y el tipo de marcado que implemente al menos el <xref:System.Windows.Markup.IProvideValueTarget> y <xref:System.Windows.Markup.IXamlTypeResolver> servicios y que es un avanzado escenario que no se describe aquí.  
  
 Un valor null para <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> o <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> no significa necesariamente que no puede actuar un convertidor de tipos o extensión de marcado, aunque eso depende de la implementación. Un ejemplo de casos donde los valores de <xref:System.Windows.Markup.IProvideValueTarget> son null incluso si el servicio está disponible es si su extensión de marcado está anidada dentro de otra extensión de marcado, como un <xref:System.Windows.Data.Binding>. Una implementación que se basa en <xref:System.Windows.Markup.IProvideValueTarget> debe comprobar siempre para los valores nulos si sólo con el fin de producir una excepción específica, si ese es el diseño previsto.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
    <altmember cref="T:System.Windows.Markup.MarkupExtension" />
    <altmember cref="T:System.IServiceProvider" />
  </Docs>
  <Members>
    <Member MemberName="TargetObject">
      <MemberSignature Language="C#" Value="public object TargetObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetObject : obj" Usage="System.Windows.Markup.IProvideValueTarget.TargetObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto de destino que se va a notificar.</summary>
        <value>Objeto de destino que se va a notificar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor devuelto por <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> es la referencia real, no un identificador de sistema de tipo u otro identificador. El valor puede ser también `null`; vea <xref:System.Windows.Markup.IProvideValueTarget>.  
  
> [!IMPORTANT]
>  Cuando se usa el servicio, es particularmente importante no modificar el objeto al que hace referencia el <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> están manejando de propiedad u otros objetos que se hace referencia a ese objeto como el caso de las propiedades que no son específicamente la conversión de valor. Para WPF en concreto, cambiar el objeto de destino podría provocar cambios inesperados que invalidarían el sistema de propiedades WPF.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
        <related type="Article" href="http://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326">Convertidores de tipos o extensiones de marcado para XAML</related>
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public object TargetProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetProperty As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetProperty { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetProperty : obj" Usage="System.Windows.Markup.IProvideValueTarget.TargetProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un identificador de la propiedad de destino que se está notificando.</summary>
        <value>Identificador de la propiedad de destino que se está notificando.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor puede ser también `null`; vea <xref:System.Windows.Markup.IProvideValueTarget>.  
  
## <a name="wpf-usage-notes"></a>Notas de uso de WPF  
 Para una propiedad de dependencia, el servicio WPF predeterminado puede devolver un <xref:System.Windows.DependencyProperty>, de modo que el convertidor de tipos o extensión de marcado puede utilizar los metadatos. En caso contrario, el objeto devuelto puede ser un <xref:System.Reflection.PropertyInfo> para una propiedad CLR.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
        <related type="Article" href="http://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326">Convertidores de tipos o extensiones de marcado para XAML</related>
      </Docs>
    </Member>
  </Members>
</Type>