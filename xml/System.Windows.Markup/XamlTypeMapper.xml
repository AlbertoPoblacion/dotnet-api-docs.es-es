<Type Name="XamlTypeMapper" FullName="System.Windows.Markup.XamlTypeMapper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a6f664bcc67e42f1fe335fc9674d969c02752f7b" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52239421" /></Metadata><TypeSignature Language="C#" Value="public class XamlTypeMapper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlTypeMapper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.XamlTypeMapper" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlTypeMapper" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlTypeMapper" />
  <TypeSignature Language="F#" Value="type XamlTypeMapper = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Asigna un nombre de elemento XAML al <see cref="T:System.Type" /> de CLR apropiado en los ensamblados.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.XamlTypeMapper> forma parte de un escenario WPF avanzado que proporciona el contexto alternativo para <xref:System.Windows.Markup.XamlReader> y <xref:System.Windows.Markup.XamlWriter>. Para [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] aplicaciones de WPF, debe considerar reemplazar <xref:System.Xaml.XamlSchemaContext> para este escenario, en lugar de intentar usar <xref:System.Windows.Markup.XamlTypeMapper>.  
  
 <xref:System.Windows.Markup.XamlTypeMapper> se puede usar para proporcionar el analizador XAML con la información de asignación personalizada a través de una técnica más directa que la aplicación de <xref:System.Windows.Markup.XmlnsDefinitionAttribute> valores en el código de ensamblado. Esto puede resultar útil para la consolidación de todos los espacios de nombres CLR en un ensamblado, o para hacer referencia a tipos que están listos para XAML en un ensamblado existente sin tener que volver a compilarlo simplemente para agregar <xref:System.Windows.Markup.XmlnsDefinitionAttribute> atribución.  
  
 Normalmente crea un <xref:System.Windows.Markup.XamlTypeMapper> instancia con el fin de especificar el <xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A> valor de propiedad para un <xref:System.Windows.Markup.ParserContext>. El <xref:System.Windows.Markup.ParserContext> a su vez, se puede usar como el contexto para un <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=nameWithType> llamar.  
  
## <a name="default-mapper"></a>Asignador predeterminado  
 Puede obtener un asignador predeterminado mediante el <xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A> propiedad estática. El asignador predeterminado solo funciona en una lista de ensamblados de forma predeterminada. No hay información específica acerca de los ensamblados (como se especifica en <xref:System.Windows.Markup.XamlTypeMapper> constructores) se utiliza.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.NamespaceMapEntry" />
    <altmember cref="T:System.Windows.Markup.ParserContext" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.XamlTypeMapper" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeMapper (string[] assemblyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] assemblyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeMapper(cli::array &lt;System::String ^&gt; ^ assemblyNames);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.XamlTypeMapper : string[] -&gt; System.Windows.Markup.XamlTypeMapper" Usage="new System.Windows.Markup.XamlTypeMapper assemblyNames" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="assemblyNames">Matriz de nombres de ensamblado que <see cref="T:System.Windows.Markup.XamlTypeMapper" /> debe usar.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.XamlTypeMapper" /> especificando la matriz de nombres de ensamblado que <see cref="T:System.Windows.Markup.XamlTypeMapper" /> debe usar.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="assemblyNames" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeMapper (string[] assemblyNames, System.Windows.Markup.NamespaceMapEntry[] namespaceMaps);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] assemblyNames, class System.Windows.Markup.NamespaceMapEntry[] namespaceMaps) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyNames As String(), namespaceMaps As NamespaceMapEntry())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeMapper(cli::array &lt;System::String ^&gt; ^ assemblyNames, cli::array &lt;System::Windows::Markup::NamespaceMapEntry ^&gt; ^ namespaceMaps);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.XamlTypeMapper : string[] * System.Windows.Markup.NamespaceMapEntry[] -&gt; System.Windows.Markup.XamlTypeMapper" Usage="new System.Windows.Markup.XamlTypeMapper (assemblyNames, namespaceMaps)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyNames" Type="System.String[]" />
        <Parameter Name="namespaceMaps" Type="System.Windows.Markup.NamespaceMapEntry[]" />
      </Parameters>
      <Docs>
        <param name="assemblyNames">Matriz de nombres de ensamblado que <see cref="T:System.Windows.Markup.XamlTypeMapper" /> debe usar.</param>
        <param name="namespaceMaps">Matriz de asignaciones de espacios de nombres que <see cref="T:System.Windows.Markup.XamlTypeMapper" /> debe usar.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.XamlTypeMapper" /> usando la matriz de nombres de ensamblado especificada y las asignaciones de espacios de nombres indicadas.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="assemblyNames" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddMappingProcessingInstruction">
      <MemberSignature Language="C#" Value="public void AddMappingProcessingInstruction (string xmlNamespace, string clrNamespace, string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMappingProcessingInstruction(string xmlNamespace, string clrNamespace, string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMappingProcessingInstruction (xmlNamespace As String, clrNamespace As String, assemblyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMappingProcessingInstruction(System::String ^ xmlNamespace, System::String ^ clrNamespace, System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="member this.AddMappingProcessingInstruction : string * string * string -&gt; unit" Usage="xamlTypeMapper.AddMappingProcessingInstruction (xmlNamespace, clrNamespace, assemblyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlNamespace" Type="System.String" />
        <Parameter Name="clrNamespace" Type="System.String" />
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlNamespace">Prefijo del espacio de nombres XML.</param>
        <param name="clrNamespace">Espacio de nombres CLR que contiene los tipos que se van a asignar.</param>
        <param name="assemblyName">Ensamblado que contiene el espacio de nombres CLR.</param>
        <summary>Define una asignación entre un espacio de nombres XML y los espacios de nombres CLR de los ensamblados, y la agrega a la información de <see cref="T:System.Windows.Markup.XamlTypeMapper" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A> es una manera mediante programación para agregar una asignación.  Por ejemplo, las distintas partes de la siguiente instrucción de asignación de XAML se corresponden con los parámetros de la <xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A>:  
  
```  
<Window xmlns:SDK="clr-namespace:Samples;assembly=SDKSamples">  
...  
```  
  
 El `xmlNamespace` es `SDK`, `clrNamespace` es `Samples`y el `assemblyName` es `SDKSamples`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="xmlNamespace" /> es <see langword="null" />  
  
O bien 
 <paramref name="clrNamespace" /> es <see langword="null" />  
  
O bien 
 El valor de <paramref name="assemblyName" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AllowInternalType">
      <MemberSignature Language="C#" Value="protected virtual bool AllowInternalType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool AllowInternalType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool AllowInternalType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member AllowInternalType : Type -&gt; bool&#xA;override this.AllowInternalType : Type -&gt; bool" Usage="xamlTypeMapper.AllowInternalType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Tipo al que se va a obtener acceso.</param>
        <summary>Solicita permiso para un tipo derivado de <see cref="T:System.Windows.Markup.XamlTypeMapper" /> al que se llama con plena confianza para obtener acceso a un tipo interno concreto.</summary>
        <returns><see langword="true" /> si se puede tener acceso al tipo interno; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si no se reemplaza por una subclase, <xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A> siempre devuelve `false`.  
  
 Cuando se reemplaza por una subclase, debería ser el comportamiento que <xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A> debe devolver `true` si el tipo interno puede ser que se tiene acceso; de lo contrario, `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMapper">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.XamlTypeMapper DefaultMapper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Markup.XamlTypeMapper DefaultMapper" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XamlTypeMapper.DefaultMapper" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultMapper As XamlTypeMapper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Markup::XamlTypeMapper ^ DefaultMapper { System::Windows::Markup::XamlTypeMapper ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMapper : System.Windows.Markup.XamlTypeMapper" Usage="System.Windows.Markup.XamlTypeMapper.DefaultMapper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.XamlTypeMapper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una instancia de <see cref="T:System.Windows.Markup.XamlTypeMapper" /> que se va a utilizar si no se ha especificado ninguna otra.</summary>
        <value>El asignador de tipos predeterminado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El asignador predeterminado solo funciona en una lista de ensamblados de forma predeterminada. No hay información específica acerca de los ensamblados (como se especifica en <xref:System.Windows.Markup.XamlTypeMapper> constructores) se utiliza. En la implementación actual es la lista de ensamblados predeterminado: `WindowsBase`, `PresentationCore`, `PresentationFramework`.  
  
 Utilizando al asignador predeterminado no significa que no se puede usar ensamblados o tipos personalizados en XAML en absoluto. Sólo significa que si utiliza tipos/ensamblados personalizados, a continuación, debe usar la técnica XAML convencional de crear las asignaciones como `xmlns` atributos en cada página XAML donde hay referencias a los ensamblados de tipos, en lugar de una asignación del tipo de API. Para obtener más información, consulte [los espacios de nombres XAML y Namespace Mapping for WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string xmlNamespace, string localName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetType(string xmlNamespace, string localName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (xmlNamespace As String, localName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ xmlNamespace, System::String ^ localName);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * string -&gt; Type" Usage="xamlTypeMapper.GetType (xmlNamespace, localName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlNamespace" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlNamespace">Prefijo de espacio de nombres XML especificado.</param>
        <param name="localName">Nombre "local" del elemento XAML para el que se va a obtener el <see cref="T:System.Type" /> asignado. En este contexto, local significa asignado en contraposición al <paramref name="xmlNamespace" /> proporcionado.</param>
        <summary>Obtiene el <see cref="T:System.Type" /> de CLR al que está asignado un elemento XAML concreto, usando el prefijo de espacio de nombres XML y el nombre de elemento especificados.</summary>
        <returns><see cref="T:System.Type" /> del objeto o <see langword="null" /> si no se pudo resolver ninguna asignación.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si no se encuentra un tipo que se asigna a la información proporcionada, `null` se devuelve.  
  
 No incluyen el prefijo como parte de `localName`. Para cualquier prefijo de información del elemento XAML, separarlo en `xmlNamespace` y `localName` componentes para esta llamada API.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="xmlNamespace" /> es <see langword="null" />  
  
O bien 
 El valor de <paramref name="localName" /> es <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Markup.IXamlTypeResolver" />
      </Docs>
    </Member>
    <Member MemberName="SetAssemblyPath">
      <MemberSignature Language="C#" Value="public void SetAssemblyPath (string assemblyName, string assemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAssemblyPath(string assemblyName, string assemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAssemblyPath (assemblyName As String, assemblyPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAssemblyPath(System::String ^ assemblyName, System::String ^ assemblyPath);" />
      <MemberSignature Language="F#" Value="member this.SetAssemblyPath : string * string -&gt; unit" Usage="xamlTypeMapper.SetAssemblyPath (assemblyName, assemblyPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="assemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">Nombre corto del ensamblado sin especificar la extensión ni la ruta de acceso (equivale a <see cref="P:System.Reflection.AssemblyName.Name" />).</param>
        <param name="assemblyPath">Ruta de acceso del archivo del ensamblado. La ruta de acceso del ensamblado debe ser una ruta de acceso de archivo completa que contiene una extensión de archivo.</param>
        <summary>Especifica la ruta de acceso que se va a utilizar al cargar un ensamblado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="assemblyName" /> es <see langword="null" />  
  
O bien 
 El valor de <paramref name="assemblyPath" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Windows.Markup.XamlParseException"><paramref name="assemblyName" /> es <see cref="F:System.String.Empty" />  
  
O bien 
 <paramref name="assemblyPath" /> es <see cref="F:System.String.Empty" />  
  
O bien 
 <paramref name="assemblyPath" /> no es una ruta de acceso del archivo completa que contiene una extensión de archivo.</exception>
      </Docs>
    </Member>
  </Members>
</Type>