<Type Name="IComponentConnector" FullName="System.Windows.Markup.IComponentConnector">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="111e269e9a5af3fdc48b73b79203c7542816013a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36502824" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IComponentConnector" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComponentConnector" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IComponentConnector" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComponentConnector" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComponentConnector" />
  <TypeSignature Language="F#" Value="type IComponentConnector = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Proporciona compatibilidad con compilación y herramientas de marcado para los elementos XAML con nombre y para adjuntar controladores de evento a dichos elementos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta interfaz se utiliza internamente por <xref:System.Windows.Baml2006.Baml2006Reader>.  
  
 Las implementaciones de <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> son ampliamente observable como parte de la infraestructura proporcionada por marcos o tecnologías que usan XAML combinan con la aplicación y los modelos de programación. Por ejemplo, cada vez que examina las clases generadas para los elementos de la raíz XAML en WPF páginas y aplicaciones, verá <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> definido en la salida. Ese método también existe en el ensamblado compilado y desempeña un papel en el modelo de aplicación de WPF de cargar el contenido XAML UI en tiempo de análisis XAML. Para obtener más información sobre la integración de WPF de la `InitializeComponent` concepto, consulte [Application Management Overview](~/docs/framework/wpf/app-development/application-management-overview.md) o [código subyacente y XAML en WPF](~/docs/framework/wpf/advanced/code-behind-and-xaml-in-wpf.md).  
  
 En versiones anteriores de .NET Framework, esta interfaz existía en el ensamblado específico de WPF WindowsBase. En [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.IComponentConnector> en el ensamblado System.Xaml. . Para obtener más información, consulte [tipos migrados de WPF a System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
> [!TIP]
>  Un error al resolver <xref:System.Windows.Markup.IComponentConnector> durante un intento de compilación es a menudo un indicador que no ha actualizado su proyecto WPF correctamente. En concreto, el proyecto no hace referencia el ensamblado System.Xaml para un proyecto destinado a [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]. Intentar ejecutar el `devenv /upgrade` opción para el proyecto o en caso contrario, ajuste las referencias de ensamblado del proyecto para que System.Xaml se encuentra en la lista de referencias.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (int connectionId, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Connect(int32 connectionId, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (connectionId As Integer, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(int connectionId, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Connect : int * obj -&gt; unit" Usage="iComponentConnector.Connect (connectionId, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.Int32" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="connectionId">Token de identificador para distinguir las llamadas.</param>
        <param name="target">Destino al que se van a conectar los eventos y nombres.</param>
        <summary>Asocia eventos y nombres con el contenido compilado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.IComponentConnector> se utiliza internamente por <xref:System.Windows.Baml2006.Baml2006Reader>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeComponent">
      <MemberSignature Language="C#" Value="public void InitializeComponent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeComponent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IComponentConnector.InitializeComponent" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitializeComponent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitializeComponent();" />
      <MemberSignature Language="F#" Value="abstract member InitializeComponent : unit -&gt; unit" Usage="iComponentConnector.InitializeComponent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Carga la página compilada de un componente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.IComponentConnector> se utiliza internamente por <xref:System.Windows.Baml2006.Baml2006Reader>.  
  
 Las implementaciones de <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> son ampliamente observable como parte de la infraestructura proporcionada por marcos o tecnologías que usan XAML combinan con la aplicación y los modelos de programación. Por ejemplo, cada vez que examina las clases generadas para los elementos de la raíz XAML en WPF páginas y aplicaciones, verá <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> definido en la salida. Ese método también existe en el ensamblado compilado y desempeña un papel en el modelo de aplicación de WPF de cargar el contenido XAML UI en tiempo de análisis XAML. Para obtener más información sobre la integración de WPF de la `InitializeComponent` concepto, consulte [Application Management Overview](~/docs/framework/wpf/app-development/application-management-overview.md) o [código subyacente y XAML en WPF](~/docs/framework/wpf/advanced/code-behind-and-xaml-in-wpf.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>