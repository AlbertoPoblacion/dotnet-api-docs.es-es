<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DependsOnAttribute.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57a54265820b84732300967ef429bbd1b8b96d7b3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7a54265820b84732300967ef429bbd1b8b96d7b3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.DependsOnAttribute">
          <source>Indicates that the attributed property is dependent on the value of another property.</source>
          <target state="translated">Indica que la propiedad con atributos depende del valor de otra propiedad.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.DependsOnAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Markup.XamlWriter.Save%2A&gt;</ph> method on <ph id="ph2">&lt;xref:System.Windows.Markup.XamlWriter&gt;</ph> will process the specified property before processing the property that this attribute is set on.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Markup.XamlWriter.Save%2A&gt;</ph> método en <ph id="ph2">&lt;xref:System.Windows.Markup.XamlWriter&gt;</ph> procesará la propiedad especificada antes de procesar la propiedad que este atributo está establecido en.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.DependsOnAttribute">
          <source>The <ph id="ph1">`name`</ph> value applied to this attribute must be the simple unqualified name of a property that exists in the same type.</source>
          <target state="translated">El <ph id="ph1">`name`</ph> valor que se aplica a este atributo debe ser el nombre no calificado simple de una propiedad que exista en el mismo tipo.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.DependsOnAttribute">
          <source>You cannot  specify attached properties as being dependent.</source>
          <target state="translated">No puede especificar las propiedades adjuntas como dependientes.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.DependsOnAttribute">
          <source>When applying this attribute, care must be taken to avoid circular dependencies.</source>
          <target state="translated">Al aplicar este atributo, se debe tener cuidado para evitar dependencias circulares.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.DependsOnAttribute">
          <source>Circular dependencies are only detected when all the properties in the cycle have been written and even so the behavior is nondeterministic.</source>
          <target state="translated">Las dependencias circulares solo se detectan cuando todas las propiedades en el ciclo se han escrito e incluso así el comportamiento es no determinista.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.DependsOnAttribute">
          <source>Applying this attribute to a property definition ensures that the dependent properties are processed first in XAML object writing.</source>
          <target state="translated">Este atributo se aplica a una definición de propiedad garantiza que las propiedades dependientes se procesan primero en la escritura de objeto XAML.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.DependsOnAttribute">
          <source>It is part of the general rules of XAML markup that attribute values applied for a created object should be able to be processed in any order.</source>
          <target state="translated">Forma parte de las reglas generales de marcado XAML que los valores de atributo aplicados para un objeto creado deben ser capaz de procesar en cualquier orden.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.DependsOnAttribute">
          <source>Usages of <ph id="ph1">&lt;xref:System.Windows.Markup.DependsOnAttribute&gt;</ph> specify the exceptional cases of properties on types where a specific order of parsing must be followed for valid object creation.</source>
          <target state="translated">Usos de <ph id="ph1">&lt;xref:System.Windows.Markup.DependsOnAttribute&gt;</ph> especifican los casos excepcionales de propiedades en tipos donde se debe seguir un orden concreto de análisis para la creación de objeto válido.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.DependsOnAttribute">
          <source>In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</source>
          <target state="translated">En versiones anteriores de .NET Framework, esta clase existía en el ensamblado específico de WPF WindowsBase.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.DependsOnAttribute">
          <source>In <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.DependsOnAttribute&gt;</ph> is in the System.Xaml assembly.</source>
          <target state="translated">En <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.DependsOnAttribute&gt;</ph> en el ensamblado System.Xaml.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.DependsOnAttribute">
          <source>For more information, see <bpt id="p1">[</bpt>Types Migrated from WPF to System.Xaml<ept id="p1">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>tipos migrados de WPF a System.Xaml<ept id="p1">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.DependsOnAttribute">
          <source>WPF Usage Notes</source>
          <target state="translated">Notas de uso de WPF</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.DependsOnAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Setter.Value%2A&gt;</ph> property on the <ph id="ph2">&lt;xref:System.Windows.Setter&gt;</ph> class is an example of a property in WPF where the <ph id="ph3">&lt;xref:System.Windows.Markup.DependsOnAttribute&gt;</ph> attribute is applied.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Setter.Value%2A&gt;</ph> propiedad en el <ph id="ph2">&lt;xref:System.Windows.Setter&gt;</ph> clase es un ejemplo de una propiedad en WPF donde el <ph id="ph3">&lt;xref:System.Windows.Markup.DependsOnAttribute&gt;</ph> se aplica el atributo.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.DependsOnAttribute">
          <source><ph id="ph1">&lt;xref:System.Windows.Setter.Value%2A&gt;</ph> depends on <ph id="ph2">&lt;xref:System.Windows.Setter.Property%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Setter.TargetName%2A&gt;</ph> being processed first, otherwise there is no way to know what type is supposed to be created for value converter cases.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Setter.Value%2A&gt;</ph> depende de <ph id="ph2">&lt;xref:System.Windows.Setter.Property%2A&gt;</ph> y <ph id="ph3">&lt;xref:System.Windows.Setter.TargetName%2A&gt;</ph> que no se procesa en primer lugar, en caso contrario, hay ninguna manera de saber qué tipo se supone que se crean para los casos de convertidor de valor.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.DependsOnAttribute.#ctor(System.String)">
          <source>The property that the property associated with this <ph id="ph1">&lt;see cref="T:System.Windows.Markup.DependsOnAttribute" /&gt;</ph> depends on.</source>
          <target state="translated">La propiedad de la que depende la propiedad asociada a este elemento <ph id="ph1">&lt;see cref="T:System.Windows.Markup.DependsOnAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.DependsOnAttribute.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.DependsOnAttribute" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Windows.Markup.DependsOnAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.DependsOnAttribute.Name">
          <source>Gets the name of the related property declared in this <ph id="ph1">&lt;see cref="T:System.Windows.Markup.DependsOnAttribute" /&gt;</ph>.</source>
          <target state="translated">Obtiene el nombre de la propiedad relacionada que se declara en este atributo <ph id="ph1">&lt;see cref="T:System.Windows.Markup.DependsOnAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.DependsOnAttribute.Name">
          <source>The name of the related property.</source>
          <target state="translated">Nombre de la propiedad relacionada.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.DependsOnAttribute.TypeId">
          <source>Gets a unique identifier for this <ph id="ph1">&lt;see cref="T:System.Windows.Markup.DependsOnAttribute" /&gt;</ph>.</source>
          <target state="translated">Obtiene un identificador único para esta clase <ph id="ph1">&lt;see cref="T:System.Windows.Markup.DependsOnAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.DependsOnAttribute.TypeId">
          <source>The unique identifier.</source>
          <target state="translated">Identificador único.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.DependsOnAttribute.TypeId">
          <source>This is a generated value that uses an override behavior in order to permit multiple attributes with the same <ph id="ph1">&lt;xref:System.Windows.Markup.DependsOnAttribute.Name%2A&gt;</ph> to be applied.</source>
          <target state="translated">Se trata de un valor generado que usa un comportamiento de invalidación con el fin de permitir que varios atributos con el mismo <ph id="ph1">&lt;xref:System.Windows.Markup.DependsOnAttribute.Name%2A&gt;</ph> que se aplicará.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.DependsOnAttribute.TypeId">
          <source>So long as dependencies are not circular or otherwise ambiguous, multiple <ph id="ph1">&lt;xref:System.Windows.Markup.DependsOnAttribute&gt;</ph> references to the same property name are supported.</source>
          <target state="translated">Siempre y cuando las dependencias no son circulares o ambiguas, varias <ph id="ph1">&lt;xref:System.Windows.Markup.DependsOnAttribute&gt;</ph> se admiten referencias en el mismo nombre de propiedad.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>