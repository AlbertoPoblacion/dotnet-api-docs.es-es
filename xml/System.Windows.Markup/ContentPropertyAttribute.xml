<Type Name="ContentPropertyAttribute" FullName="System.Windows.Markup.ContentPropertyAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fccb72bf425ea39ebd2388db38ab8ee9c1c77e49" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32691245" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ContentPropertyAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ContentPropertyAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.ContentPropertyAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ContentPropertyAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContentPropertyAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b91a6-101">Indica qué propiedad de un tipo es la propiedad de contenido XAML.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b91a6-101">Indicates which property of a type is the XAML content property.</span>
      </span>
      <span data-ttu-id="b91a6-102">Un procesador XAML usa esta información al procesar elementos secundarios XAML de representaciones XAML del tipo con atributos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b91a6-102">A XAML processor uses this information when processing XAML child elements of XAML representations of the attributed type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b91a6-103">Si la propiedad asociada de un <xref:System.Windows.Markup.ContentPropertyAttribute> no es del tipo `string` o `object`, un procesador XAML intenta identificar una técnica de conversión de valor.</span><span class="sxs-lookup"><span data-stu-id="b91a6-103">If the associated property of a <xref:System.Windows.Markup.ContentPropertyAttribute> is not of type `string` or `object`, a XAML processor attempts to identify a value conversion technique.</span></span> <span data-ttu-id="b91a6-104">La primera comprobación es para la conversión de tipo nativo, ya sea de las primitivas del lenguaje XAML o de conversiones nativo específicas habilitadas por esa implementación concreta de escritor XAML.</span><span class="sxs-lookup"><span data-stu-id="b91a6-104">The first check is for native type conversion, either of the XAML language primitives or of specific native conversions enabled by that particular XAML writer implementation.</span></span> <span data-ttu-id="b91a6-105">El paso siguiente consiste en Buscar un convertidor de tipos.</span><span class="sxs-lookup"><span data-stu-id="b91a6-105">The next step is to look for a type converter.</span></span> <span data-ttu-id="b91a6-106">En las implementaciones de. NET, un convertidor de tipos se identifica en función de <xref:System.ComponentModel.TypeConverterAttribute> en cualquier el nivel o tipo de nivel definición de miembro que se aplica.</span><span class="sxs-lookup"><span data-stu-id="b91a6-106">In the .NET implementations, a type converter is identified based on <xref:System.ComponentModel.TypeConverterAttribute> on either the member level or type level definition that applies.</span></span> <span data-ttu-id="b91a6-107">Si no se puede identificar ninguna conversión de valor, un escritor de objetos XAML normalmente produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="b91a6-107">If no value conversion can be identified, a XAML object writer typically throws an exception.</span></span>  
  
 <span data-ttu-id="b91a6-108">Más de un elemento de objeto único como contenido, con el fin de aceptar el tipo de la propiedad de contenido XAML debe ser compatible como un tipo de colección.</span><span class="sxs-lookup"><span data-stu-id="b91a6-108">In order to accept more than a single object element as content, the type of the XAML content property must be supportable as a collection type.</span></span>  
  
 <span data-ttu-id="b91a6-109">Causa de la `Inherited=true` declaración del atributo, un valor para un <xref:System.Windows.Markup.ContentPropertyAttribute> normalmente se aplica una designación de propiedad de contenido para todas las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="b91a6-109">Because of the `Inherited=true` declaration of the attribute, a value for a <xref:System.Windows.Markup.ContentPropertyAttribute> normally applies a content property designation to all derived classes as well.</span></span> <span data-ttu-id="b91a6-110">Aplicar vacío <xref:System.Windows.Markup.ContentPropertyAttribute> permite que una clase derivada para quitar una declaración de un atributo de propiedad de contenido mediante una clase base (y observe que la clase no tiene ninguna propiedad de contenido).</span><span class="sxs-lookup"><span data-stu-id="b91a6-110">Applying an empty <xref:System.Windows.Markup.ContentPropertyAttribute> enables a derived class to remove a declaration of a content property attribute by a base class (and to note that the class has no content property).</span></span> <span data-ttu-id="b91a6-111">Aplicar un nombre diferente <xref:System.Windows.Markup.ContentPropertyAttribute> reemplaza la heredados <xref:System.Windows.Markup.ContentPropertyAttribute> con uno nuevo.</span><span class="sxs-lookup"><span data-stu-id="b91a6-111">Applying a differently named <xref:System.Windows.Markup.ContentPropertyAttribute> replaces the inherited <xref:System.Windows.Markup.ContentPropertyAttribute> with the new one.</span></span>  
  
 <span data-ttu-id="b91a6-112">En versiones anteriores de .NET Framework, esta clase existía en el ensamblado específico de WPF WindowsBase y también tenía una implementación paralela en Windows Communication Foundation (WCF).</span><span class="sxs-lookup"><span data-stu-id="b91a6-112">In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase, and also had a parallel implementation in Windows Communication Foundation (WCF).</span></span> <span data-ttu-id="b91a6-113">A partir de .NET Framework 4.0, <xref:System.Windows.Markup.ContentPropertyAttribute> en el ensamblado System.Xaml.</span><span class="sxs-lookup"><span data-stu-id="b91a6-113">Starting with the .NET Framework 4.0, <xref:System.Windows.Markup.ContentPropertyAttribute> is in the System.Xaml assembly.</span></span> <span data-ttu-id="b91a6-114">Para obtener más información, consulte [tipos migrados de WPF a System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="b91a6-114">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="b91a6-115">Notas de uso de WPF</span><span class="sxs-lookup"><span data-stu-id="b91a6-115">WPF Usage Notes</span></span>  
 <span data-ttu-id="b91a6-116">Un ejemplo de una clase en Windows Presentation Foundation (WPF) que usa el <xref:System.Windows.Markup.ContentPropertyAttribute> es <xref:System.Windows.Controls.ContentControl>, que la <xref:System.Windows.Controls.Button> clase hereda de.</span><span class="sxs-lookup"><span data-stu-id="b91a6-116">An example of a class in Windows Presentation Foundation (WPF) that uses the <xref:System.Windows.Markup.ContentPropertyAttribute> is <xref:System.Windows.Controls.ContentControl>, which the <xref:System.Windows.Controls.Button> class inherits from.</span></span>  <span data-ttu-id="b91a6-117">El <xref:System.Windows.Controls.ContentControl.Content%2A?displayProperty=nameWithType> es la propiedad de contenido establecida por la <xref:System.Windows.Markup.ContentPropertyAttribute>.</span><span class="sxs-lookup"><span data-stu-id="b91a6-117">The <xref:System.Windows.Controls.ContentControl.Content%2A?displayProperty=nameWithType> property is the content property set by the <xref:System.Windows.Markup.ContentPropertyAttribute>.</span></span>  <span data-ttu-id="b91a6-118">Si un <xref:System.Windows.Controls.Button> se crea una instancia en XAML, el <xref:System.Windows.Controls.ContentControl.Content%2A> de la <xref:System.Windows.Controls.Button> se establecerá en el elemento que se encuentra entre las etiquetas de botón de inicio y finalización.</span><span class="sxs-lookup"><span data-stu-id="b91a6-118">If a <xref:System.Windows.Controls.Button> is instantiated in XAML, the <xref:System.Windows.Controls.ContentControl.Content%2A> of the <xref:System.Windows.Controls.Button> will be set to the element that is between the start and end button tags.</span></span>  
    
## Examples  
 <span data-ttu-id="b91a6-119">En el ejemplo siguiente se crea una clase denominada `Film` que tiene una <xref:System.Windows.Markup.ContentPropertyAttribute> aplicada.</span><span class="sxs-lookup"><span data-stu-id="b91a6-119">The following example creates a class named `Film` that has a <xref:System.Windows.Markup.ContentPropertyAttribute> applied.</span></span>  <span data-ttu-id="b91a6-120">La propiedad denominada `Title` se indica como la propiedad de contenido.</span><span class="sxs-lookup"><span data-stu-id="b91a6-120">The property named `Title` is indicated as the content property.</span></span>  
  
 [!code-csharp[MarkupSnippets#MarkupContentPropertyAttribute](~/samples/snippets/csharp/VS_Snippets_Wpf/MarkupSnippets/CSharp/Window1.xaml.cs#markupcontentpropertyattribute)]
 [!code-vb[MarkupSnippets#MarkupContentPropertyAttribute](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MarkupSnippets/visualbasic/window1.xaml.vb#markupcontentpropertyattribute)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b91a6-121">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.ContentPropertyAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a6-121">Initializes a new instance of the <see cref="T:System.Windows.Markup.ContentPropertyAttribute" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentPropertyAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ContentPropertyAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContentPropertyAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b91a6-122">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.ContentPropertyAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a6-122">Initializes a new instance of the <see cref="T:System.Windows.Markup.ContentPropertyAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b91a6-123">Causa de la `Inherited=true` declaración del atributo, un valor para un <xref:System.Windows.Markup.ContentPropertyAttribute> normalmente se aplica una designación de propiedad de contenido para todas las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="b91a6-123">Because of the `Inherited=true` declaration of the attribute, a value for a <xref:System.Windows.Markup.ContentPropertyAttribute> normally applies a content property designation to all derived classes as well.</span></span> <span data-ttu-id="b91a6-124">Con esta firma, o aplicar vacío <xref:System.Windows.Markup.ContentPropertyAttribute>, permite que una clase derivada para quitar una declaración de un atributo de propiedad de contenido mediante una clase base (y observe que la clase no tiene ninguna propiedad de contenido).</span><span class="sxs-lookup"><span data-stu-id="b91a6-124">Using this signature, or applying an empty <xref:System.Windows.Markup.ContentPropertyAttribute>, enables a derived class to remove a declaration of a content property attribute by a base class (and note that the class has no content property).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentPropertyAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ContentPropertyAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContentPropertyAttribute(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="b91a6-125">Nombre de la propiedad de contenido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a6-125">The property name for the property that is the content property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b91a6-126">Inicializa una instancia nueva de la clase <see cref="T:System.Windows.Markup.ContentPropertyAttribute" /> con el nombre especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a6-126">Initializes a new instance of the <see cref="T:System.Windows.Markup.ContentPropertyAttribute" /> class, by using the specified name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b91a6-127">Suponiendo que copias de seguridad de CLR, proporcionado `name` debe coincidir con el <xref:System.Reflection.MemberInfo.Name%2A?displayProperty=nameWithType> de la propiedad relevante en el CLR de sistema de tipos.</span><span class="sxs-lookup"><span data-stu-id="b91a6-127">Assuming CLR backing, the provided `name` should match the <xref:System.Reflection.MemberInfo.Name%2A?displayProperty=nameWithType> of the relevant property in the CLR type system.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.ContentPropertyAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b91a6-128">Obtiene el nombre de la propiedad de contenido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a6-128">Gets the name of the property that is the content property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b91a6-129">Nombre de la propiedad de contenido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b91a6-129">The name of the property that is the content property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>