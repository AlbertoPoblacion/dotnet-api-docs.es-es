<Type Name="ContentPropertyAttribute" FullName="System.Windows.Markup.ContentPropertyAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fccb72bf425ea39ebd2388db38ab8ee9c1c77e49" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32691245" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ContentPropertyAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ContentPropertyAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.ContentPropertyAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ContentPropertyAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContentPropertyAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Indica qué propiedad de un tipo es la propiedad de contenido XAML. Un procesador XAML usa esta información al procesar elementos secundarios XAML de representaciones XAML del tipo con atributos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la propiedad asociada de un <xref:System.Windows.Markup.ContentPropertyAttribute> no es del tipo `string` o `object`, un procesador XAML intenta identificar una técnica de conversión de valor. La primera comprobación es para la conversión de tipo nativo, ya sea de las primitivas del lenguaje XAML o de conversiones nativo específicas habilitadas por esa implementación concreta de escritor XAML. El paso siguiente consiste en Buscar un convertidor de tipos. En las implementaciones de. NET, un convertidor de tipos se identifica en función de <xref:System.ComponentModel.TypeConverterAttribute> en cualquier el nivel o tipo de nivel definición de miembro que se aplica. Si no se puede identificar ninguna conversión de valor, un escritor de objetos XAML normalmente produce una excepción.  
  
 Más de un elemento de objeto único como contenido, con el fin de aceptar el tipo de la propiedad de contenido XAML debe ser compatible como un tipo de colección.  
  
 Causa de la `Inherited=true` declaración del atributo, un valor para un <xref:System.Windows.Markup.ContentPropertyAttribute> normalmente se aplica una designación de propiedad de contenido para todas las clases derivadas. Aplicar vacío <xref:System.Windows.Markup.ContentPropertyAttribute> permite que una clase derivada para quitar una declaración de un atributo de propiedad de contenido mediante una clase base (y observe que la clase no tiene ninguna propiedad de contenido). Aplicar un nombre diferente <xref:System.Windows.Markup.ContentPropertyAttribute> reemplaza la heredados <xref:System.Windows.Markup.ContentPropertyAttribute> con uno nuevo.  
  
 En versiones anteriores de .NET Framework, esta clase existía en el ensamblado específico de WPF WindowsBase y también tenía una implementación paralela en Windows Communication Foundation (WCF). A partir de .NET Framework 4.0, <xref:System.Windows.Markup.ContentPropertyAttribute> en el ensamblado System.Xaml. Para obtener más información, consulte [tipos migrados de WPF a System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
## <a name="wpf-usage-notes"></a>Notas de uso de WPF  
 Un ejemplo de una clase en Windows Presentation Foundation (WPF) que usa el <xref:System.Windows.Markup.ContentPropertyAttribute> es <xref:System.Windows.Controls.ContentControl>, que la <xref:System.Windows.Controls.Button> clase hereda de.  El <xref:System.Windows.Controls.ContentControl.Content%2A?displayProperty=nameWithType> es la propiedad de contenido establecida por la <xref:System.Windows.Markup.ContentPropertyAttribute>.  Si un <xref:System.Windows.Controls.Button> se crea una instancia en XAML, el <xref:System.Windows.Controls.ContentControl.Content%2A> de la <xref:System.Windows.Controls.Button> se establecerá en el elemento que se encuentra entre las etiquetas de botón de inicio y finalización.  
    
## Examples  
 En el ejemplo siguiente se crea una clase denominada `Film` que tiene una <xref:System.Windows.Markup.ContentPropertyAttribute> aplicada.  La propiedad denominada `Title` se indica como la propiedad de contenido.  
  
 [!code-csharp[MarkupSnippets#MarkupContentPropertyAttribute](~/samples/snippets/csharp/VS_Snippets_Wpf/MarkupSnippets/CSharp/Window1.xaml.cs#markupcontentpropertyattribute)]
 [!code-vb[MarkupSnippets#MarkupContentPropertyAttribute](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MarkupSnippets/visualbasic/window1.xaml.vb#markupcontentpropertyattribute)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.ContentPropertyAttribute" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentPropertyAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ContentPropertyAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContentPropertyAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.ContentPropertyAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Causa de la `Inherited=true` declaración del atributo, un valor para un <xref:System.Windows.Markup.ContentPropertyAttribute> normalmente se aplica una designación de propiedad de contenido para todas las clases derivadas. Con esta firma, o aplicar vacío <xref:System.Windows.Markup.ContentPropertyAttribute>, permite que una clase derivada para quitar una declaración de un atributo de propiedad de contenido mediante una clase base (y observe que la clase no tiene ninguna propiedad de contenido).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentPropertyAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ContentPropertyAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContentPropertyAttribute(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nombre de la propiedad de contenido.</param>
        <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Windows.Markup.ContentPropertyAttribute" /> con el nombre especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Suponiendo que copias de seguridad de CLR, proporcionado `name` debe coincidir con el <xref:System.Reflection.MemberInfo.Name%2A?displayProperty=nameWithType> de la propiedad relevante en el CLR de sistema de tipos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.ContentPropertyAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de la propiedad de contenido.</summary>
        <value>Nombre de la propiedad de contenido.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>