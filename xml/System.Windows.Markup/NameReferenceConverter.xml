<Type Name="NameReferenceConverter" FullName="System.Windows.Markup.NameReferenceConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3fe180c4a8507c43b3f74c44980716f3c7c0466b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36502528" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NameReferenceConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NameReferenceConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.NameReferenceConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class NameReferenceConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class NameReferenceConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type NameReferenceConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="edd03-101">Proporciona la conversión de tipos para convertir un nombre de cadena en una referencia al objeto con ese nombre o para devolver el nombre de un objeto de un gráfico de objetos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="edd03-101">Provides type conversion to convert a string name into an object reference to the object with that name, or to return the name of an object from the object graph.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edd03-102">Esta clase proporciona un contenedor de convertidor de tipos alrededor de dos servicios.</span><span class="sxs-lookup"><span data-stu-id="edd03-102">This class provides a type converter wrapper around two services.</span></span>  
  
 <span data-ttu-id="edd03-103">El <xref:System.Windows.Markup.NameReferenceConverter.ConvertFrom%2A> implementación utiliza <xref:System.Xaml.IXamlNameResolver> servicio del contexto al realizar la resolución de un objeto por nombre en XAML.</span><span class="sxs-lookup"><span data-stu-id="edd03-103">The <xref:System.Windows.Markup.NameReferenceConverter.ConvertFrom%2A> implementation uses <xref:System.Xaml.IXamlNameResolver> service from context to perform the resolution of an object by name in XAML.</span></span> <span data-ttu-id="edd03-104">Esto forma parte del lector XAML pertinente y las implementaciones de sistema de escritura XAML en los servicios XAML de .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="edd03-104">This is part of the relevant XAML reader and XAML writer implementations in .NET Framework XAML Services.</span></span> <span data-ttu-id="edd03-105">Función correcta de este convertidor requiere que el <xref:System.Xaml.IXamlNameResolver> servicio está disponible desde el contexto de servicio.</span><span class="sxs-lookup"><span data-stu-id="edd03-105">Proper function of this converter requires that the <xref:System.Xaml.IXamlNameResolver> service is available from service context.</span></span>  
  
 <span data-ttu-id="edd03-106">El <xref:System.Windows.Markup.NameReferenceConverter.ConvertTo%2A> implementación utiliza <xref:System.Xaml.IXamlNameProvider> servicio del contexto al realizar la resolución de un nombre de referencia de un objeto durante la serialización o guardar.</span><span class="sxs-lookup"><span data-stu-id="edd03-106">The <xref:System.Windows.Markup.NameReferenceConverter.ConvertTo%2A> implementation uses <xref:System.Xaml.IXamlNameProvider> service from context to perform the resolution of a reference name for an object during save/serialization.</span></span> <span data-ttu-id="edd03-107">Esto forma parte de las implementaciones de lector y escritor relevantes y su contexto.</span><span class="sxs-lookup"><span data-stu-id="edd03-107">This is part of the relevant reader and writer implementations and their context.</span></span> <span data-ttu-id="edd03-108">Función correcta de este convertidor requiere que haya una subyacente <xref:System.Xaml.IXamlNameProvider> servicio disponible.</span><span class="sxs-lookup"><span data-stu-id="edd03-108">Proper function of this converter requires that there be an underlying <xref:System.Xaml.IXamlNameProvider> service available.</span></span>  
  
 <span data-ttu-id="edd03-109">Esta implementación de convertidor de tipo es inusual para el <xref:System.ComponentModel.TypeConverter> tipo base ya no se ciñen a un tipo de conversión discreta.</span><span class="sxs-lookup"><span data-stu-id="edd03-109">This type converter implementation is atypical for the <xref:System.ComponentModel.TypeConverter> base type because it is not scoped to a discrete conversion type.</span></span> <span data-ttu-id="edd03-110">Potencialmente puede convertir cualquier objeto a y desde un nombre de referencia, siempre y cuando ese objeto podría tener un nombre asignado a él en XAML y el contexto de respaldo tiene los servicios necesarios para devolver resultados.</span><span class="sxs-lookup"><span data-stu-id="edd03-110">It can potentially convert any object to and from a referencing name so long as that object could have a name assigned to it in XAML, and the supporting context has the necessary services to return results.</span></span>  
  
 <span data-ttu-id="edd03-111">Como parte de la compatibilidad con los servicios general, la implementación de base la System.Xaml <xref:System.Xaml.XamlObjectWriter> y <xref:System.Xaml.XamlXmlWriter> proporcionar <xref:System.Xaml.IXamlNameProvider> y <xref:System.Xaml.IXamlNameResolver> servicios para su uso por <xref:System.Windows.Markup.NameReferenceConverter>.</span><span class="sxs-lookup"><span data-stu-id="edd03-111">As part of general services support, the System.Xaml base implementation of <xref:System.Xaml.XamlObjectWriter> and <xref:System.Xaml.XamlXmlWriter> provide <xref:System.Xaml.IXamlNameProvider> and <xref:System.Xaml.IXamlNameResolver> services for use by <xref:System.Windows.Markup.NameReferenceConverter>.</span></span> <span data-ttu-id="edd03-112">Use la base del nombre para estos servicios `x:Name` o <xref:System.Windows.Markup.RuntimeNamePropertyAttribute> con atributos de propiedad de alias.</span><span class="sxs-lookup"><span data-stu-id="edd03-112">The name basis for these services uses either `x:Name` or a <xref:System.Windows.Markup.RuntimeNamePropertyAttribute> attributed alias property.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameReferenceConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.NameReferenceConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameReferenceConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="edd03-113">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.NameReferenceConverter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd03-113">Initializes a new instance of the <see cref="T:System.Windows.Markup.NameReferenceConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.NameReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="nameReferenceConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="edd03-114">Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd03-114">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="edd03-115">
            <see cref="T:System.Type" /> que representa el tipo a partir del cual se desea realizar la conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd03-115">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="edd03-116">Devuelve un valor que indica si este convertidor puede convertir un objeto de un tipo en otro objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd03-116">Returns whether this converter can convert an object of one type to another object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="edd03-117">
            <see langword="true" /> si este convertidor puede realizar la conversión; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd03-117">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edd03-118">Esta implementación sólo puede procesar una `sourceType` de <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="edd03-118">This implementation can only process a `sourceType` of <xref:System.String>.</span></span> <span data-ttu-id="edd03-119">Otros tipos devuelven `false`.</span><span class="sxs-lookup"><span data-stu-id="edd03-119">Other types return `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.NameReferenceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="nameReferenceConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="edd03-120">Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd03-120">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="edd03-121">Tipo en el que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd03-121">The type to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="edd03-122">Devuelve un valor que indica si el convertidor puede convertir un objeto en el tipo de destino especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd03-122">Returns a value that indicates whether the converter can convert an object to the specified destination type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="edd03-123">Es <see langword="true" /> si el convertidor puede realizar la conversión; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd03-123">
              <see langword="true" /> if the converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edd03-124">A `destinationType` que hace referencia a la <xref:System.String> escriba devuelve `true`; todos los demás `destinationType` valores return `false`.</span><span class="sxs-lookup"><span data-stu-id="edd03-124">A `destinationType` that references the <xref:System.String> type returns `true`; all other `destinationType` values return `false`.</span></span>  
  
 <span data-ttu-id="edd03-125">Este método devuelve false si `context` es `null`, o si <xref:System.Xaml.IXamlNameProvider> no se puede obtener como un servicio de `context`.</span><span class="sxs-lookup"><span data-stu-id="edd03-125">This method returns false if `context` is `null`, or if <xref:System.Xaml.IXamlNameProvider> cannot be obtained as a service from `context`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.NameReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="nameReferenceConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="edd03-126">Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd03-126">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="edd03-127">
            <see cref="T:System.Globalization.CultureInfo" /> que se va a utilizar como la referencia cultural actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd03-127">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="edd03-128">Cadena de nombre de referencia que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd03-128">The reference name string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="edd03-129">Convierte el objeto proporcionado en otro objeto usando el contexto y la información de referencia cultural especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd03-129">Converts the provided object to another object, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="edd03-130">Objeto devuelto, que puede ser cualquier objeto al que se asigne un tipo en los ensamblados de respaldo pertinentes y que pueda declararse en XAML con una referencia de nombre XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd03-130">The returned object, which is potentially any object that is type-mapped in the relevant backing assemblies and capable of being declared in XAML with a XAML name reference.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edd03-131">Solo un <xref:System.String> entrada proporciona un resultado de la conversión.</span><span class="sxs-lookup"><span data-stu-id="edd03-131">Only a <xref:System.String> input provides a conversion result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="edd03-132">El valor de <paramref name="value" /> es una cadena null o una cadena vacía.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd03-132">
              <paramref name="value" /> is a null string or empty string.</span>
          </span>
          <span data-ttu-id="edd03-133">-o bien- El servicio <see cref="T:System.Xaml.IXamlNameResolver" /> falta o no es válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd03-133">-or-  <see cref="T:System.Xaml.IXamlNameResolver" /> service is missing or invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="edd03-134">
            <paramref name="context" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd03-134">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.NameReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="nameReferenceConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="edd03-135">Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd03-135">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="edd03-136">
            <see cref="T:System.Globalization.CultureInfo" /> que se va a utilizar como la referencia cultural actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd03-136">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="edd03-137">Objeto cuyo nombre de referencia se va a recuperar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd03-137">The object to retrieve the reference name for.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="edd03-138">Tipo que se devuelve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd03-138">The type to return.</span>
          </span>
          <span data-ttu-id="edd03-139">Siempre se debe hacer referencia al tipo <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd03-139">You should always reference the <see cref="T:System.String" /> type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="edd03-140">Convierte un objeto al tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd03-140">Converts an object to the specified type.</span>
          </span>
          <span data-ttu-id="edd03-141">Sirve para devolver nombres de referencia XAML para los objetos de un gráfico de objetos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd03-141">This is intended to return XAML reference names for objects in an object graph.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="edd03-142">Nombre de referencia del objeto <paramref name="value" /> de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd03-142">The reference name of the input <paramref name="value" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="edd03-143">El servicio <see cref="T:System.Xaml.IXamlNameProvider" /> falta o no es válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd03-143">
              <see cref="T:System.Xaml.IXamlNameProvider" /> service is missing or invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="edd03-144">
            <paramref name="context" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edd03-144">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>