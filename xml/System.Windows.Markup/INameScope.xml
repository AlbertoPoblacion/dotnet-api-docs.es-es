<Type Name="INameScope" FullName="System.Windows.Markup.INameScope">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ac045db164c4d2d4320bd924bd6f858a4e66c0aa" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52239085" /></Metadata><TypeSignature Language="C#" Value="public interface INameScope" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INameScope" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.INameScope" />
  <TypeSignature Language="VB.NET" Value="Public Interface INameScope" />
  <TypeSignature Language="C++ CLI" Value="public interface class INameScope" />
  <TypeSignature Language="F#" Value="type INameScope = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Define un contrato de cómo se debe tener acceso a los nombres de elementos dentro de un ámbito de nombres XAML determinado y cómo aplicar la unicidad de nombres dentro de ese ámbito de nombres XAML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta interfaz se implementa mediante las clases que tienen elementos secundarios que están diseñados para volver a utilizarse a través de la plantilla o metáfora aplazada. Las plantillas, generadores y construcciones similares deben tener los ámbitos de nombres XAML únicos que son independientes de un gráfico de objetos principal y raíz XAML. El principio aquí es que no debe haber ninguna colisión de nombre cuando los objetos creados a partir de esos elementos secundarios se incorporan en el gráfico de objetos de la aplicación, de modo que las operaciones de DOM y las técnicas de referencia XAML que se basan en el identificador de nombre pueden depender de nombre unicidad en cada ámbito de nombres XAML.  
  
 En versiones anteriores de .NET Framework, esta interfaz existía en el ensamblado específico de WPF WindowsBase. En [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.INameScope> está en el ensamblado System.Xaml. Para obtener más información, consulta [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
## <a name="wpf-usage-notes"></a>Notas de uso de WPF  
 Esta interfaz se implementa mediante la clase de WPF <xref:System.Windows.NameScope>. Las operaciones de ámbito de nombres XAML mayoría en [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] funcionando con <xref:System.Windows.NameScope> instancias, pero la información en ocasiones se comunica internamente mediante el uso de <xref:System.Windows.Markup.INameScope> referencias.  
  
 Ejemplos de clases WPF que usan un generador o metáfora aplazada combinados con representación de XAML son <xref:System.Windows.Style> y <xref:System.Windows.FrameworkTemplate>. Estas implementaciones normalmente se basan en las versiones explícitas de los métodos de interfaz disponibles desde el <xref:System.Windows.NameScope> clase.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.NameScope" />
    <altmember cref="T:System.Windows.Markup.INameScopeDictionary" />
    <related type="Article" href="https://msdn.microsoft.com/library/b7e61222-e8cf-48d2-acd0-6df3b7685d48">Atributo x: Name</related>
  </Docs>
  <Members>
    <Member MemberName="FindName">
      <MemberSignature Language="C#" Value="public object FindName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FindName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.INameScope.FindName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindName (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FindName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member FindName : string -&gt; obj" Usage="iNameScope.FindName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Identificador del nombre para el objeto que se solicita.</param>
        <summary>Devuelve un objeto que tiene el nombre de identificación proporcionado.</summary>
        <returns>El objeto, si se encuentra. Devuelve <see langword="null" /> si no se encuentra ningún objeto de ese nombre.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las cadenas de nombre válido en el marcado XAML deben coincidir con los requisitos documentados en [gramática de XamlName](~/docs/framework/xaml-services/xamlname-grammar.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.NameScope" />
        <related type="Article" href="https://msdn.microsoft.com/library/b7e61222-e8cf-48d2-acd0-6df3b7685d48">Atributo x: Name</related>
      </Docs>
    </Member>
    <Member MemberName="RegisterName">
      <MemberSignature Language="C#" Value="public void RegisterName (string name, object scopedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterName(string name, object scopedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterName (name As String, scopedElement As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterName(System::String ^ name, System::Object ^ scopedElement);" />
      <MemberSignature Language="F#" Value="abstract member RegisterName : string * obj -&gt; unit" Usage="iNameScope.RegisterName (name, scopedElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="scopedElement" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">Nombre que se va a registrar.</param>
        <param name="scopedElement">Elemento específico que al que hace referencia el <paramref name="name" /> proporcionado.</param>
        <summary>Registra el nombre proporcionado en el ámbito de nombres XAML actual.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No se permiten nombres duplicados en un ámbito de nombres XAML.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>No se permiten nombres duplicados se registre. Si la entrada <paramref name="name" /> ya está asignado a un elemento existente en la representación de la colección interna del ámbito de nombres XAML (incluso si es igual a <paramref name="scopedElement" />), producir una excepción.  
  
También considere la posibilidad de producir una excepción si el nombre proporcionado no se ajusta a [gramática de XamlName](~/docs/framework/xaml-services/xamlname-grammar.md).</para></block>
        <altmember cref="T:System.Windows.NameScope" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterName">
      <MemberSignature Language="C#" Value="public void UnregisterName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.INameScope.UnregisterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member UnregisterName : string -&gt; unit" Usage="iNameScope.UnregisterName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nombre cuyo registro se va a anular.</param>
        <summary>Anula el registro del nombre proporcionado en el ámbito de nombres XAML actual.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Si no existe el nombre de entrada, inicia una excepción.  
  
Debe quitar el nombre y el elemento previamente registrado que hace referencia a partir de la representación de la colección del ámbito de nombres XAML, para que el mismo nombre podría registrarse de nuevo en el futuro.</para></block>
        <altmember cref="T:System.Windows.NameScope" />
      </Docs>
    </Member>
  </Members>
</Type>