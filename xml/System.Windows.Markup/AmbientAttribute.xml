<Type Name="AmbientAttribute" FullName="System.Windows.Markup.AmbientAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="baa263074eed8e44641b6e694586499e323d9183" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65004521" /></Metadata><TypeSignature Language="C#" Value="public sealed class AmbientAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AmbientAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.AmbientAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AmbientAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbientAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type AmbientAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Especifica que una propiedad o un tipo debe tratarse como ambiente. El concepto de ambiente se relaciona con la forma en que los procesadores XAML determinan los propietarios de tipos de los miembros.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una propiedad de ambiente es una propiedad donde el valor debe estar disponible en el contexto del analizador al crear un gráfico de objetos, pero donde se suspende la búsqueda de miembros de tipo típico para fines de conjunto que se crea el nodo XAML más próximo. Hay dos escenarios principales para el concepto de ambiente:  
  
-   Otra propiedad del mismo objeto influye y califica el funcionamiento de que la búsqueda de objetos y propiedades.  
  
-   La propiedad representa un mecanismo de aplazamiento mayor y amplían las capacidades de ambiente para buscar un valor de miembro a todos los objetos contenidos dentro del objeto actual.  
  
 Este atributo puede aplicarse a las propiedades específicas que han esperado contenedores que permiten un comportamiento de búsqueda de la propiedad de ambiente o se puede aplicar a una clase para habilitar el comportamiento de la propiedad de ambiente en todos los casos de ese tipo de valor para una propiedad.  
  
 <xref:System.Windows.Markup.AmbientAttribute> También puede aplicarse a un método CLR, para admitir la atribución de una propiedad adjuntable XAML como ambiente. Esto es potencialmente necesario porque en una implementación de CLR un XAML propiedad adjunta se implementa/representa a la reflexión como un patrón de descriptor de acceso con `get` y `set` métodos. No existe ninguna propiedad CLR real al atributo, por lo que restringe el uso de <xref:System.AttributeTargets> a `Property` no habría permitido especificar un miembro adjuntable como ambiente. Para un miembro adjuntable que desea notificar como ambiente, atributo el `get` descriptor de acceso. No debe intentar los métodos de atributos que no son específicamente los métodos de compatibilidad de miembros adjuntables.  
  
 En versiones anteriores de .NET Framework, esta clase existía en el ensamblado específico de WPF WindowsBase. En [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.AmbientAttribute> está en el ensamblado System.Xaml. Para obtener más información, consulta [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
 Tipos de ambiente (tipos where <xref:System.Windows.Markup.AmbientAttribute> se aplica en el nivel de tipo) puede utilizarse en determinadas situaciones de procesamiento de XAML donde el tipo de una propiedad debe resolverse en el orden correcto.  
  
## <a name="object-writer-scenarios"></a>Escenarios del escritor de objetos  
 Si está definiendo un escritor de objetos XAML, y encuentra un tipo, método o propiedad donde <xref:System.Windows.Markup.AmbientAttribute> es aplican, normalmente debe acceder a un servicio para determinar el comportamiento de búsqueda de la propiedad de ambiente deseada que se necesita para escribir objetos. Para obtener más información, consulta <xref:System.Xaml.IAmbientProvider>.  
  
## <a name="value-converters"></a>Convertidores de valores  
 Convertidores de tipos o extensiones de marcado que necesite conocer la información de ambiente para procesar las propiedades que representan las asignaciones de tipos indirecta, como las propiedades que especifican los miembros o tipos por los nombres de cadena con o sin calificación. En este escenario, <xref:System.Windows.Markup.AmbientAttribute> no está pensado para usarse directamente para la lógica de código del convertidor de valores. En su lugar, el convertidor de valores debe confiar en el comportamiento de procesamiento de escritor XAML, que pasará <xref:System.Xaml.IAmbientProvider> en sus contextos de servicio a los métodos de convertidor de tipos de valor cuando se llama.  
  
## <a name="wpf-scenarios-for-ambientattribute"></a>Escenarios de WPF para AmbientAttribute  
  
-   Una propiedad de un <xref:System.Windows.Style> (<xref:System.Windows.Style.TargetType%2A>) puede calificar las búsquedas de nombre de propiedad necesarios que son necesarios para buscar las referencias de respaldo para los nombres de propiedad en <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> valores.  
  
-   Todo el contenido dentro de un `Resources` propiedad (elementos de un <xref:System.Windows.ResourceDictionary>), así como contenido de la plantilla, debe poder tener acceso a otros elementos del mismo nivel como valores. Declarar toda la `Resources` propiedad como ambiente invoca la lógica que permite esto en el analizador de WPF XAML.  
  
 Consulte <xref:System.Windows.ResourceDictionary> para obtener un ejemplo de un escenario de configuración <xref:System.Windows.Markup.AmbientAttribute> en nivel de tipo.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
    <altmember cref="T:System.Xaml.XamlMember" />
    <altmember cref="T:System.Xaml.IAmbientProvider" />
    <related type="Article" href="https://msdn.microsoft.com/library/5dfb299a-b6e2-41b8-8694-e6ac987547f1">Atributos CLR relacionados con XAML para los tipos y bibliotecas personalizados</related>
    <related type="Article" href="https://msdn.microsoft.com/library/c2667cbd-2f46-4a7f-9dfc-53696e35e8e4">Definir tipos personalizados para usarlos con los servicios XAML de .NET Framework</related>
    <related type="Article" href="https://msdn.microsoft.com/library/0e11f386-808c-4eae-9ba6-029ad7ba2211">Documentación Conceptual de los servicios XAML de NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.AmbientAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbientAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.AmbientAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>