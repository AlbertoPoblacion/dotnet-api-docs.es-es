<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AmbientAttribute.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac555dd6cc03b82733e7cc9502b48929ccdfcd92546.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">55dd6cc03b82733e7cc9502b48929ccdfcd92546</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>Specifies that a property or type should be treated as ambient.</source>
          <target state="translated">Especifica que una propiedad o un tipo debe tratarse como ambiente.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>The ambient concept relates to how XAML processors determine type owners of members.</source>
          <target state="translated">El concepto de ambiente se relaciona con la forma en que los procesadores XAML determinan los propietarios de tipos de los miembros.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>An ambient property is a property where the value is expected to be available in the parser context when creating an object graph, but where typical type-member lookup is suspended for purposes of the immediate XAML node set being created.</source>
          <target state="translated">Una propiedad de ambiente es una propiedad donde se espera que el valor esté disponible en el contexto del analizador al crear un gráfico de objetos, pero donde se suspende la búsqueda típica de miembro de tipo para los fines de nodos XAML inmediato establecido que se está creando.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>There are two main scenarios for the ambient concept:</source>
          <target state="translated">Hay dos escenarios principales para el concepto de ambiente:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>Some other property of the same object influences and qualifies how that object-property lookup should work.</source>
          <target state="translated">Alguna otra propiedad del mismo objeto influye y califica cómo debería funcionar esa búsqueda de objetos y propiedades.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>The property represents a larger deferral mechanism and the ambient capabilities for looking up a member value extend to all objects contained within the current object.</source>
          <target state="translated">La propiedad representa un mecanismo de aplazamiento mayor y amplían las capacidades de ambiente para buscar un valor de miembro a todos los objetos contenidos en el objeto actual.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>This attribute can be applied to specific properties that have expected containers that enable an ambient property lookup behavior, or can be applied to a class to enable the ambient property behavior in all cases of that value type for a property.</source>
          <target state="translated">Este atributo se puede aplicar a propiedades concretas que han esperado contenedores que habilitan un comportamiento de búsqueda de la propiedad de ambiente, o puede aplicarse a una clase para habilitar el comportamiento de la propiedad de ambiente en todos los casos de ese tipo de valor para una propiedad.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> can also be applied to a CLR method, to support attributing a XAML attachable property as ambient.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> También puede aplicarse a un método CLR, para admitir la atribución de una propiedad que se puede asociar XAML como ambiente.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>This is potentially necessary because in a CLR implementation a XAML attached property is implemented/represented to reflection as an accessor pattern with <ph id="ph1">`get`</ph> and <ph id="ph2">`set`</ph> methods.</source>
          <target state="translated">Esto es potencialmente necesario porque en una implementación de CLR una XAML propiedad adjunta se implementa/representa en la reflexión como un patrón de descriptor de acceso con <ph id="ph1">`get`</ph> y <ph id="ph2">`set`</ph> métodos.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>No actual CLR property to attribute exists, so restricting usage for <ph id="ph1">&lt;xref:System.AttributeTargets&gt;</ph> to <ph id="ph2">`Property`</ph> would not have enabled specifying an attachable member as ambient.</source>
          <target state="translated">No existe ninguna propiedad CLR real al atributo, por lo que restringir el uso de <ph id="ph1">&lt;xref:System.AttributeTargets&gt;</ph> a <ph id="ph2">`Property`</ph> no habría habilitado la especificación de un miembro adjuntable como ambiente.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>For an attachable member that you want to report as ambient, attribute the <ph id="ph1">`get`</ph> accessor.</source>
          <target state="translated">Para un miembro adjuntable que desea notificar como ambiente, atributo el <ph id="ph1">`get`</ph> descriptor de acceso.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>You should not attempt to attribute methods that are not specifically support methods of attachable members.</source>
          <target state="translated">No debe intentar atribuir métodos que no son específicamente los métodos de compatibilidad de miembros que se puede asociar.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</source>
          <target state="translated">En versiones anteriores de .NET Framework, esta clase existía en el ensamblado específico de WPF WindowsBase.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>In <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> is in the System.Xaml assembly.</source>
          <target state="translated">En <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> en el ensamblado System.Xaml.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>For more information, see <bpt id="p1">[</bpt>Types Migrated from WPF to System.Xaml<ept id="p1">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>tipos migrados de WPF a System.Xaml<ept id="p1">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>Ambient types (types where <ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> is applied at type level) can be used for certain XAML processing situations where the type of a property needs to be resolved out of order.</source>
          <target state="translated">Tipos de ambiente (tipos where <ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> se aplica en el nivel de tipo) se puede utilizar para determinadas situaciones de procesamiento de XAML donde el tipo de una propiedad debe resolverse en el orden correcto.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>Object Writer Scenarios</source>
          <target state="translated">Escenarios del escritor de objetos</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>If you are defining a XAML object writer, and you encounter a property, method or type where <ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> is applied, you typically must access a service to determine the intended ambient property lookup behavior that is needed for writing out objects.</source>
          <target state="translated">Si está definiendo un escritor de objetos XAML y se encuentra una propiedad, método o tipo donde <ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> es aplican, normalmente debe acceder a un servicio para determinar el comportamiento de búsqueda de la propiedad de ambiente previsto que se necesita para la escritura de los objetos.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Xaml.IAmbientProvider&gt;</ph>.</source>
          <target state="translated">Para obtener más información, vea <ph id="ph1">&lt;xref:System.Xaml.IAmbientProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>Value Converters</source>
          <target state="translated">Convertidores de valores</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>Type converters or markup extensions might need to know the ambient information in order to process properties that represent indirect type mappings, such as properties that specify members or types by string names with or without qualification.</source>
          <target state="translated">Extensiones de marcado o los convertidores de tipos que necesite conocer la información de ambiente para procesar las propiedades que representan asignaciones de tipo indirecta, como las propiedades que especifican los miembros o tipos por los nombres de cadena con o sin calificación.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>In this scenario, <ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> is not intended to be used directly for value converter code logic.</source>
          <target state="translated">En este escenario, <ph id="ph1">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> no está diseñada para usarse directamente para la lógica de código del convertidor de valores.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>Rather, the value converter should rely on the XAML writer processing behavior, which will pass <ph id="ph1">&lt;xref:System.Xaml.IAmbientProvider&gt;</ph> in its service contexts to your value converter methods when called.</source>
          <target state="translated">En su lugar, el convertidor de valores debe confiar en el comportamiento de procesamiento de escritor XAML, que pasará <ph id="ph1">&lt;xref:System.Xaml.IAmbientProvider&gt;</ph> en sus contextos de servicio a los métodos de convertidor de valor cuando se llama.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>WPF Scenarios for AmbientAttribute</source>
          <target state="translated">Escenarios WPF para AmbientAttribute</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>A property of a <ph id="ph1">&lt;xref:System.Windows.Style&gt;</ph> (<ph id="ph2">&lt;xref:System.Windows.Style.TargetType%2A&gt;</ph>) can qualify the necessary property name lookups that are needed to find the backing references for property names in <ph id="ph3">&lt;xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType&gt;</ph> values.</source>
          <target state="translated">Una propiedad de un <ph id="ph1">&lt;xref:System.Windows.Style&gt;</ph> (<ph id="ph2">&lt;xref:System.Windows.Style.TargetType%2A&gt;</ph>) puede calificar las búsquedas de nombre de propiedad necesarias que se necesitan para encontrar las referencias de respaldo para los nombres de propiedad en <ph id="ph3">&lt;xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>All content within a <ph id="ph1">`Resources`</ph> property (items of a <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>) as well as template content, should be able to access other peers as values.</source>
          <target state="translated">Todo el contenido dentro de un <ph id="ph1">`Resources`</ph> propiedad (elementos de un <ph id="ph2">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>), así como contenido de la plantilla, debe poder tener acceso a otros pares como valores.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>Declaring the entire <ph id="ph1">`Resources`</ph> property as ambient invokes logic that enables this in the WPF XAML parser.</source>
          <target state="translated">Declarar toda la matriz <ph id="ph1">`Resources`</ph> propiedad como ambiente invoca una lógica que hace posible que en el analizador de XAML de WPF.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.AmbientAttribute">
          <source>See <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> for an example of a scenario for setting <ph id="ph2">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> at type level.</source>
          <target state="translated">Vea <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph> para obtener un ejemplo de un escenario de configuración <ph id="ph2">&lt;xref:System.Windows.Markup.AmbientAttribute&gt;</ph> en el nivel de tipo.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.AmbientAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.AmbientAttribute" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Windows.Markup.AmbientAttribute" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>