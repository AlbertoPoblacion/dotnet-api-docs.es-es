<Type Name="TreeView" FullName="System.Web.UI.WebControls.TreeView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2f90f7b29eb010b5251f3890771308c516407037" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30600759" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TreeView : System.Web.UI.WebControls.HierarchicalDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IPostBackDataHandler, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TreeView extends System.Web.UI.WebControls.HierarchicalDataBoundControl implements class System.Web.UI.ICallbackEventHandler, class System.Web.UI.IPostBackDataHandler, class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TreeView" />
  <TypeSignature Language="VB.NET" Value="Public Class TreeView&#xA;Inherits HierarchicalDataBoundControl&#xA;Implements ICallbackEventHandler, IPostBackDataHandler, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeView : System::Web::UI::WebControls::HierarchicalDataBoundControl, System::Web::UI::ICallbackEventHandler, System::Web::UI::IPostBackDataHandler, System::Web::UI::IPostBackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.HierarchicalDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ICallbackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedNodeChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.TreeViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Muestra datos jerárquicos, como una tabla de contenido, en una estructura de árbol.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En este tema:  
  
-   [Introducción](#introduction)  
  
-   [Nodos](#nodes)  
  
-   [Datos estáticos](#static_data)  
  
-   [Enlace a datos](#binding_to_data)  
  
-   [Llenado de nodos dinámico](#dynamic_node_population)  
  
-   [Personalizar la interfaz de usuario](#customizing_the_user_interface)  
  
-   [Eventos](#events)  
  
-   [Desplazamiento](#scrolling)  
  
-   [Accesibilidad](#accessibility)  
  
-   [Sintaxis declarativa](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introducción  
 El <xref:System.Web.UI.WebControls.TreeView> control se usa para mostrar datos jerárquicos, como una tabla de contenido o el directorio de archivos, en una estructura de árbol y admite las siguientes características:  
  
-   Enlace de datos que permiten que los nodos del control se puede enlazar a datos XML, tabulares o relacionales.  
  
-   Sitio navegación mediante la integración con el <xref:System.Web.UI.WebControls.SiteMapDataSource> control.  
  
-   Texto del nodo que se puede mostrar como texto sin formato o hipervínculos.  
  
-   Acceso mediante programación a los <xref:System.Web.UI.WebControls.TreeView> modelo de objetos para crear árboles, rellenar nodos, establecer propiedades, y así sucesivamente dinámicamente.  
  
-   Llenado de nodos en el cliente (en exploradores compatibles).  
  
-   La capacidad para mostrar una casilla de verificación junto a cada nodo.  
  
-   Personalización del aspecto mediante temas, imágenes definidas por el usuario y estilos.  
  
    > [!NOTE]
    >  El <xref:System.Web.UI.WebControls.TreeView> control está diseñado para usarse dentro de un <xref:System.Web.UI.UpdatePanel> controlar solo cuando <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> está establecido en `true`. <xref:System.Web.UI.UpdatePanel> los controles se usan para actualizar regiones seleccionadas de una página en lugar de actualizar la página entera con una devolución de datos. Para obtener más información, consulte [información general del Control UpdatePanel](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) y [Partial-Page Rendering Overview](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
<a name="nodes"></a>   
## <a name="nodes"></a>Nodos  
 El <xref:System.Web.UI.WebControls.TreeView> control se compone de nodos. Cada entrada en el árbol se denomina nodo y se representa mediante un <xref:System.Web.UI.WebControls.TreeNode> objeto. Tipos de nodo se definen como sigue:  
  
-   Un nodo que contiene otros nodos se denomina un *nodo primario*.  
  
-   El nodo que está contenido en otro nodo se denomina un *nodo secundario*.  
  
-   Un nodo que no tiene ningún elemento secundario se denomina un *nodo hoja*.  
  
-   El nodo que no está incluido en ningún otro nodo, pero es el antecesor de todos los demás nodos es el *nodo raíz*.  
  
 Un nodo puede ser un elemento primario y un elemento secundario, pero raíz, primario y nodos hoja son mutuamente excluyentes. Varias propiedades visuales y comportamientos de nodos dependen de si un nodo es raíz, secundario u hoja.  
  
 Aunque una estructura de árbol típica tiene sólo un nodo raíz, el <xref:System.Web.UI.WebControls.TreeView> control le permite agregar varios nodos raíz a la estructura de árbol. Esto es útil cuando desea mostrar listas de elementos sin mostrar un único nodo raíz, como se muestra en una lista de categorías de producto.  
  
 Cada nodo tiene un <xref:System.Web.UI.WebControls.TreeNode.Text%2A> propiedad y un <xref:System.Web.UI.WebControls.TreeNode.Value%2A> propiedad. El valor de la <xref:System.Web.UI.WebControls.TreeNode.Text%2A> propiedad se muestra en el <xref:System.Web.UI.WebControls.TreeView>, mientras que la <xref:System.Web.UI.WebControls.TreeNode.Value%2A> propiedad se utiliza para almacenar datos adicionales sobre el nodo, como los datos que se pasan al evento de postback que está asociado con el nodo.  
  
 Un nodo puede estar en uno de dos modos: modo de selección y el modo de exploración. De forma predeterminada, un nodo está en modo de selección. Para poner un nodo en modo de exploración, establezca la <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> propiedad del nodo en un valor distinto de una cadena vacía (""). Para poner un nodo en modo de selección, establezca el <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> propiedad del nodo en una cadena vacía ("").  
  
> [!NOTE]
>  Algunos exploradores de Internet tienen una limitación que puede afectar al rendimiento de la <xref:System.Web.UI.WebControls.TreeView> control. Por ejemplo, Microsoft Internet Explorer 6.0 tiene un límite de caracteres de la dirección URL de 2067 caracteres que envía. Si el número de caracteres en una dirección URL de un nodo es mayor que este número, se producirá un error al expandir ese nodo y se inicia ninguna excepción.  
  
<a name="static_data"></a>   
## <a name="static-data"></a>Datos estáticos  
 El modelo de datos más sencillo de la <xref:System.Web.UI.WebControls.TreeView> control es datos estáticos. Para mostrar datos estáticos mediante sintaxis declarativa, primero anide de apertura y cierre `<Nodes>` etiquetas entre las etiquetas apertura y cierre de la <xref:System.Web.UI.WebControls.TreeView> control. A continuación, cree la estructura de árbol anidando `<asp:TreeNode>` elementos entre la apertura y cierre `<Nodes>` etiquetas. Cada `<asp:TreeNode>` elemento representa un nodo en el árbol y se asigna a un <xref:System.Web.UI.WebControls.TreeNode> objeto. Puede establecer las propiedades de cada nodo estableciendo los atributos de su `<asp:TreeNode>` elemento. Para crear nodos secundarios, anidar adicionales `<asp:TreeNode>` elementos entre la apertura y cierre `<asp:TreeNode>` etiquetas del nodo primario.  
  
<a name="binding_to_data"></a>   
## <a name="binding-to-data"></a>Enlace a datos  
 El <xref:System.Web.UI.WebControls.TreeView> control también puede estar enlazado a datos. Puede utilizar cualquiera de estos dos métodos para enlazar el <xref:System.Web.UI.WebControls.TreeView> control para el tipo de origen de datos adecuado:  
  
-   El <xref:System.Web.UI.WebControls.TreeView> control puede utilizar cualquier control de origen de datos que implementa el <xref:System.Web.UI.IHierarchicalDataSource> interfaz, como un <xref:System.Web.UI.WebControls.XmlDataSource> control o un <xref:System.Web.UI.WebControls.SiteMapDataSource> control. Para enlazar a un control de origen de datos, establezca la <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> propiedad de la <xref:System.Web.UI.WebControls.TreeView> el control a la <xref:System.Web.UI.Control.ID%2A> valor del control de origen de datos. El <xref:System.Web.UI.WebControls.TreeView> control se enlaza automáticamente al control de origen de datos especificado. Este es el método preferido para enlazar a datos.  
  
-   El <xref:System.Web.UI.WebControls.TreeView> control también puede estar enlazado a un <xref:System.Xml.XmlDocument> objeto o un <xref:System.Data.DataSet> objeto con las relaciones. Para enlazar a uno de estos orígenes de datos, establezca la <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> propiedad de la <xref:System.Web.UI.WebControls.TreeView> control al origen de datos y, a continuación, llame a la <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> método.  
  
 Al enlazar a un origen de datos donde cada elemento de datos contiene varias propiedades (por ejemplo, un elemento XML con varios atributos), un nodo muestra el valor devuelto por la `ToString` método del elemento de datos, de forma predeterminada. En el caso de un elemento XML, el nodo muestra el nombre del elemento, que muestra la estructura subyacente del árbol, pero no es muy útil en caso contrario. Puede enlazar un nodo a una propiedad de elemento de datos específico mediante la especificación de enlaces de nodo de árbol con el <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> colección. El <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> colección contiene `TreeNodeBinding` objetos que definen la relación entre un elemento de datos y el nodo al que se enlaza. Puede especificar los criterios de enlace y la propiedad de elemento de datos mostrar en el nodo. Para obtener más información sobre los enlaces de nodo de árbol, vea <xref:System.Web.UI.WebControls.TreeNodeBinding>.  
  
> [!IMPORTANT]
>  Un usuario malintencionado puede crear una solicitud de devolución de llamada y obtener datos para los nodos de la <xref:System.Web.UI.WebControls.TreeView> control que el desarrollador de páginas no se muestra. Por lo tanto, se debe implementar la seguridad de los datos por el origen de datos. No utilice la <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> propiedad para ocultar los datos.  
  
<a name="dynamic_node_population"></a>   
## <a name="dynamic-node-population"></a>Llenado de nodos dinámico  
 A veces, no resulta práctico definir estáticamente la estructura de árbol porque el origen de datos devuelve demasiados datos o porque los datos que se va a mostrar dependen de la información que se obtiene en tiempo de ejecución. Por este motivo, el <xref:System.Web.UI.WebControls.TreeView> control admite el llenado de nodos dinámico. Cuando el <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> propiedad de un nodo se establece en `true`, ese nodo se rellena en tiempo de ejecución cuando se expande el nodo. Para rellenar un nodo dinámicamente, debe definir un método de control de eventos que contiene la lógica para rellenar un nodo para el <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> eventos.  
  
 Los exploradores que admiten scripts de devolución de llamada también pueden aprovechar las ventajas de llenado de nodos en el cliente. (Esto incluye Internet Explorer 5.5 y versiones posteriores y algunos otros exploradores.) Llenado de nodos en el cliente permite que el <xref:System.Web.UI.WebControls.TreeView> control para rellenar un nodo mediante script de cliente cuando los usuarios expanden el nodo, sin necesidad de ida y vuelta al servidor. Para obtener más información sobre el llenado de nodos de cliente, consulte <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.  
  
<a name="customizing_the_user_interface"></a>   
## <a name="customizing-the-user-interface"></a>Personalizar la interfaz de usuario  
 Hay muchas maneras de personalizar la apariencia de la <xref:System.Web.UI.WebControls.TreeView> control. En primer lugar, puede especificar un estilo diferente (por ejemplo, el tamaño de fuente y color) para cada uno de los tipos de nodos.  
  
 Si utiliza hojas de estilos en cascada (CSS) para personalizar la apariencia del control, utilice estilos en línea o un archivo CSS independiente, pero no ambos. Uso de estilos en línea y un archivo CSS independiente podría producir resultados inesperados. Para obtener más información sobre el uso de hojas de estilos con controles, vea [controles de servidor Web y estilos CSS](http://msdn.microsoft.com/library/782c2db6-fc9b-4243-8df9-a8ffe2f4cc42).  
  
 En la tabla siguiente se enumera los estilos de nodo disponible.  
  
|Propiedad de estilo de nodo|Descripción|  
|-------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>|La configuración de estilo para un nodo cuando el puntero del mouse se sitúa sobre él.|  
|<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>|La configuración de estilo para los nodos hoja.|  
|<xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>|La configuración de estilo predeterminado para un nodo.|  
|<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>|La configuración de estilo para los nodos primarios.|  
|<xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>|La configuración de estilo para el nodo raíz.|  
|<xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>|La configuración de estilo para un nodo seleccionado.|  
  
 También puede controlar el estilo de los nodos a profundidades concretas dentro del árbol mediante la <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> colección. El primer estilo de la colección corresponde al estilo de los nodos en el primer nivel en el árbol. El segundo estilo de la colección corresponde al estilo de los nodos en el segundo nivel en el árbol y así sucesivamente. Esto se utiliza con más frecuencia para generar las tablas de los menús de navegación de estilo contenido donde los nodos de una cierta profundidad deberían tener el mismo aspecto, independientemente de si tienen nodos secundarios.  
  
> [!NOTE]
>  Si se define un estilo de un determinado profundidad nivel mediante el <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> colección, que estilo invalida cualquier raíz, primario o valores de estilo de nodo de hoja para los nodos a esa profundidad.  
  
 Otra manera de modificar la apariencia del control consiste en Personalizar las imágenes que se muestran en el <xref:System.Web.UI.WebControls.TreeView> control. Puede especificar su propio conjunto de imágenes para las diferentes partes del control personalizado estableciendo las propiedades mostradas en la tabla siguiente.  
  
|Propiedad de imagen|Descripción|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>|La dirección URL a una imagen mostrada para el indicador de nodo contraíble. Esta imagen normalmente es un signo menos (-).|  
|<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>|La dirección URL a una imagen mostrada para el indicador de nodo expansible. Esta imagen normalmente es un signo más (+).|  
|<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>|La dirección URL a la carpeta que contiene las imágenes de línea utilizadas para conectar los nodos primarios a los nodos secundarios. El <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> propiedad debe establecerse en `true` para esta propiedad para que tenga un efecto.|  
|<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>|La dirección URL a una imagen mostrada para el indicador de nodo no expansible.|  
  
> [!NOTE]
>  No es necesario personalizar todas las propiedades de imagen. Si no se establece explícitamente una propiedad de imagen, se utiliza la imagen predeterminada integrada.  
  
 El <xref:System.Web.UI.WebControls.TreeView> control también permite mostrar una casilla de verificación junto a un nodo. Cuando el <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> propiedad se establece en un valor distinto de `TreeNodeTypes.None`, se muestran casillas al lado de los tipos de nodo especificado.  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> propiedad puede establecerse en una combinación bit a bit de los <xref:System.Web.UI.WebControls.TreeNodeTypes> valores de miembro de enumeración.  
  
 Cada vez que la página se envía al servidor, el <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> colección se rellena automáticamente con los nodos seleccionados. Cuando se muestran casillas de verificación, puede utilizar el <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> evento para ejecutar una rutina personalizada cada vez que cambia el estado de una casilla de verificación entre cada envío al servidor.  
  
<a name="events"></a>   
## <a name="events"></a>Eventos  
 El <xref:System.Web.UI.WebControls.TreeView> control proporciona varios eventos que se pueden programar. Esto permite ejecutar una rutina personalizada cada vez que se produce un evento. En la tabla siguiente se enumera los eventos que son compatibles con el <xref:System.Web.UI.WebControls.TreeView> control.  
  
|evento|Descripción|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>|Se produce cuando las casillas de verificación de la <xref:System.Web.UI.WebControls.TreeView> control cambian entre cada envío al servidor.|  
|<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>|Se desencadena cuando se selecciona un nodo en el control <xref:System.Web.UI.WebControls.TreeView>.|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>|Se desencadena cuando se expande un nodo en el control <xref:System.Web.UI.WebControls.TreeView>.|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>|Se desencadena cuando se contrae un nodo en el control <xref:System.Web.UI.WebControls.TreeView>.|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>|Aparece cuando un nodo con su propiedad <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> establecida en `true` se expande en el control <xref:System.Web.UI.WebControls.TreeView>.|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>|Se desencadena cuando un elemento de datos se enlaza a un nodo en el control <xref:System.Web.UI.WebControls.TreeView>.|  
  
<a name="scrolling"></a>   
## <a name="scrolling"></a>Desplazamiento  
 El <xref:System.Web.UI.WebControls.TreeView> control no tiene desplazamiento integrado. Para agregar el desplazamiento, coloque el <xref:System.Web.UI.WebControls.TreeView> controlar en un <xref:System.Web.UI.WebControls.Panel> controlar y agregar barras de desplazamiento a la <xref:System.Web.UI.WebControls.Panel> control. Para obtener más información, consulte [información general sobre el Control de servidor Web Panel](http://msdn.microsoft.com/library/127b61ed-87f2-46f4-92a3-785166e7245b).  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>Accesibilidad  
 El marcado que se representa de forma predeterminada para este control no puede cumplir los estándares de accesibilidad. Para obtener más información sobre la compatibilidad de accesibilidad para este control, vea [controles ASP.NET y accesibilidad](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Sintaxis declarativa  
  
```  
<asp:TreeView  
    AccessKey="string"  
    AutoGenerateDataBindings="True|False"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CollapseImageToolTip="string"  
    CollapseImageUrl="uri"  
    CssClass="string"  
    DataSource="string"  
    DataSourceID="string"  
    EnableClientScript="True|False"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ExpandDepth="string|FullyExpand|0|1|2|3|4|5|6|7|8|9|10|11|12|13|  
        14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30"  
    ExpandImageToolTip="string"  
    ExpandImageUrl="uri"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
       Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    ImageSet="Custom|XPFileExplorer|Msdn|WindowsHelp|Simple|Simple2|  
        BulletedList|BulletedList2|BulletedList3|BulletedList4|  
        Arrows|News|Contacts|Inbox|Events|Faq"  
    LineImagesFolder="string"  
    MaxDataBindDepth="integer"  
    NodeIndent="integer"  
    NodeWrap="True|False"  
    NoExpandImageUrl="uri"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelectedNodeChanged="SelectedNodeChanged event handler"  
    OnTreeNodeCheckChanged="TreeNodeCheckChanged event handler"  
    OnTreeNodeCollapsed="TreeNodeCollapsed event handler"  
    OnTreeNodeDataBound="TreeNodeDataBound event handler"  
    OnTreeNodeExpanded="TreeNodeExpanded event handler"  
    OnTreeNodePopulate="TreeNodePopulate event handler"  
    OnUnload="Unload event handler"  
    PathSeparator="string"  
    PopulateNodesFromClient="True|False"  
    runat="server"  
    ShowCheckBoxes="None|Root|Parent|Leaf|All"  
    ShowExpandCollapse="True|False"  
    ShowLines="True|False"  
    SkinID="string"  
    SkipLinkText="string"  
    Style="string"  
    TabIndex="integer"  
    Target="string"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <DataBindings>  
                <asp:TreeNodeBinding  
                    DataMember="string"  
                    Depth="integer"  
                    FormatString="string"  
                    ImageToolTip="string"  
                    ImageToolTipField="string"  
                    ImageUrl="uri"  
                    ImageUrlField="string"  
                    NavigateUrl="uri"  
                    NavigateUrlField="string"  
                    PopulateOnDemand="True|False"  
                    SelectAction="Select|Expand|SelectExpand|None"  
                    ShowCheckBox="string"  
                    Target="string"  
                    TargetField="string"  
                    Text="string"  
                    TextField="string"  
                    ToolTip="string"  
                    ToolTipField="string"  
                    Value="string"  
                    ValueField="string"  
                />  
        </DataBindings>  
        <HoverNodeStyle />  
        <LeafNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <LevelStyles>  
                <asp:TreeNodeStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    ChildNodesPadding="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    ImageUrl="uri"  
                    NodeSpacing="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelStyles>  
        <Nodes>  
                <asp:TreeNode  
                    Checked="True|False"  
                    Expanded="string"  
                    ImageToolTip="string"  
                    ImageUrl="uri"  
                    NavigateUrl="uri"  
                    PopulateOnDemand="True|False"  
                    SelectAction="Select|Expand|SelectExpand|None"  
                    Selected="True|False"  
                    ShowCheckBox="string"  
                    Target="string"  
                    Text="string"  
                    ToolTip="string"  
                    Value="string"  
>  
                </asp:TreeNode>  
        </Nodes>  
        <NodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <ParentNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <RootNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <SelectedNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
</asp:TreeView>  
```  
  
   
  
## Examples  
 Esta sección contiene siete ejemplos de código:  
  
-   El primer ejemplo de código muestra cómo configurar los marcos para el segundo ejemplo de código.  
  
-   El segundo ejemplo de código muestra cómo utilizar la sintaxis declarativa para mostrar datos estáticos en el <xref:System.Web.UI.WebControls.TreeView> control.  
  
-   El tercer ejemplo de código muestra cómo enlazar el <xref:System.Web.UI.WebControls.TreeView> control a un origen de datos XML.  
  
-   El cuarto ejemplo de código proporciona datos XML de ejemplo para el tercer ejemplo de código.  
  
-   El quinto ejemplo de código muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView> control de navegación del sitio mediante el enlace a un <xref:System.Web.UI.WebControls.SiteMapDataSource> control.  
  
-   El sexto ejemplo de código proporciona datos de mapa del sitio de ejemplo para el quinto ejemplo de código.  
  
-   El séptimo ejemplo de código muestra cómo rellenar los nodos en el <xref:System.Web.UI.WebControls.TreeView> control desde el cliente.  
  
 En el ejemplo de código siguiente se muestra cómo configurar los marcos para el ejemplo de código siguiente.  
  
 [!code-aspx-csharp[TreeViewFrameSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameSet/CS/framecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameSet/VB/framevb.aspx#1)]  
  
 En el ejemplo de código siguiente se muestra cómo utilizar la sintaxis declarativa para mostrar datos estáticos en el <xref:System.Web.UI.WebControls.TreeView> control. En este ejemplo se utiliza dentro del conjunto de fotogramas del ejemplo anterior para mostrar una tabla de contenido.  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 En el ejemplo de código siguiente se muestra cómo enlazar el <xref:System.Web.UI.WebControls.TreeView> control a un origen de datos XML. En este ejemplo funcione correctamente, debe copiar los datos XML de ejemplo, proporcionados después de este ejemplo de código, en un archivo denominado Book.xml.  
  
 [!code-aspx-csharp[TreeViewXml#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewXml/CS/treeviewxmlcs.aspx#1)]
 [!code-aspx-vb[TreeViewXml#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewXml/VB/treeviewxmlvb.aspx#1)]  
  
 En el ejemplo de código siguiente se proporciona datos XML de ejemplo para el ejemplo anterior.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView> control de navegación del sitio mediante el enlace a un <xref:System.Web.UI.WebControls.SiteMapDataSource> control. En este ejemplo funcione correctamente, debe copiar los datos de mapa del sitio de ejemplo, proporcionados después de este ejemplo de código, a un archivo denominado Web.sitemap.  
  
 [!code-aspx-csharp[TreeViewAutoGenerateBindings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/CS/treeviewautogeneratebindingscs.aspx#1)]
 [!code-aspx-vb[TreeViewAutoGenerateBindings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/VB/treeviewautogeneratebindingsvb.aspx#1)]  
  
 En el ejemplo de código siguiente se proporciona datos de mapa del sitio de ejemplo para el ejemplo de código anterior.  
  
```  
<siteMap>  
    <siteMapNode title="Home" description="Home" url="default.aspx">  
        <siteMapNode title="Products" description="Products" url="Products.aspx">  
            <siteMapNode title="Computers" url="Computers.aspx"/>  
            <siteMapNode title="Accessories" url="Accessories.aspx"/>       
        </siteMapNode>  
    </siteMapNode>  
</siteMap>  
```  
  
 En el ejemplo de código siguiente se muestra cómo rellenar los nodos en el <xref:System.Web.UI.WebControls.TreeView> control desde el cliente. Cuando se habilita el relleno de nodos del lado cliente, los nodos se rellenan dinámicamente en el cliente, sin necesidad de enviar datos al servidor.  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
    <altmember cref="T:System.Web.UI.IHierarchicalDataSource" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
    <altmember cref="T:System.Web.UI.WebControls.SiteMapDataSource" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.TreeView.%23ctor%2A> constructor para crear e inicializar una nueva instancia de la <xref:System.Web.UI.WebControls.TreeView> clase. Para agregar una <xref:System.Web.UI.WebControls.TreeView> dinámicamente el control a una página, cree un nuevo <xref:System.Web.UI.WebControls.TreeView> objeto, establecer sus propiedades y, a continuación, agregarlo a la <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> colección de un contenedor de control, como el <xref:System.Web.UI.WebControls.PlaceHolder> control.  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos de código. El primer ejemplo de código muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.%23ctor%2A> constructor para agregar un <xref:System.Web.UI.WebControls.TreeView> dinámicamente el control a una página. El segundo ejemplo de código proporciona datos XML de ejemplo para el primer ejemplo de código.  
  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.%23ctor%2A> constructor para agregar un <xref:System.Web.UI.WebControls.TreeView> dinámicamente el control a una página. En este ejemplo funcione correctamente, debe copiar los datos XML de ejemplo proporcionados después de este ejemplo de código, en un archivo denominado Book.xml.  
  
 [!code-aspx-csharp[TreeViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCtor/CS/treeviewctorcs.aspx#1)]
 [!code-aspx-vb[TreeViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCtor/VB/treeviewctorvb.aspx#1)]  
  
 En el ejemplo de código siguiente se proporciona datos XML de ejemplo para el ejemplo anterior.  
  
```  
<Book Title="Book Title">  
  <Chapter Heading="Chapter 1">  
    <Section Heading="Section 1">  
    </Section>  
    <Section Heading="Section 2">  
    </Section>  
  </Chapter>  
  <Chapter Heading="Chapter 2">  
    <Section Heading="Section 1">  
    </Section>  
  </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> que representa el flujo de salida para representar contenido HTML en el cliente.</param>
        <summary>Agrega atributos y estilos HTML que se deben representar en el control <see cref="T:System.Web.UI.HtmlTextWriter" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.TreeView.AddAttributesToRender%2A> método la usan principalmente los programadores de controles.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateDataBindings">
      <MemberSignature Language="C#" Value="public bool AutoGenerateDataBindings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateDataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGenerateDataBindings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGenerateDataBindings { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el control <see cref="T:System.Web.UI.WebControls.TreeView" /> genera automáticamente los enlaces del nodo de árbol.</summary>
        <value>
          <see langword="true" /> para hacer que el control <see cref="T:System.Web.UI.WebControls.TreeView" /> genere automáticamente los enlaces del nodo de árbol; de lo contrario, <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Enlaces de nodo de árbol definen la relación entre un elemento de datos y el nodo que enlaza. Cuando se enlaza a un origen de datos donde cada elemento de datos contiene varias propiedades (por ejemplo, un elemento XML con varios atributos), el <xref:System.Web.UI.WebControls.TreeView> control necesita saber qué propiedad de elemento de datos para enlazar a la que <xref:System.Web.UI.WebControls.TreeNode> propiedad. Si el <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> propiedad está establecida en `true`, el <xref:System.Web.UI.WebControls.TreeView> control genera automáticamente los enlaces de nodo de árbol predeterminados que establecen la <xref:System.Web.UI.WebControls.TreeNode.Text%2A> propiedad de la <xref:System.Web.UI.WebControls.TreeNode> objeto que está asociado con el enlace para el valor devuelto por la `ToString` método del elemento de datos.  
  
> [!NOTE]
>  Los enlaces de nodo de árbol generados automáticamente no se agregan a la <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> colección.  
  
 En el caso de un elemento XML, el valor devuelto por la `ToString` método es el nombre del elemento, que muestra la estructura subyacente del archivo XML, pero no es muy útil en caso contrario. Para crear un árbol más útil, debe definir sus propios enlaces de nodo de árbol rellenando la <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> colección.  
  
> [!NOTE]
>  Si define un <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> colección, el <xref:System.Web.UI.WebControls.TreeView> control utiliza esos valores en lugar de los enlaces de nodo de árbol generados automáticamente.  
  
 El valor de esta propiedad se almacena en estado de vista.  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos de código. El primer ejemplo de código muestra cómo deshabilitar la generación de enlaces de nodo de árbol automática estableciendo la <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> propiedad `false`. El segundo ejemplo de código proporciona datos de mapa del sitio de ejemplo para el primer ejemplo de código.  
  
 En el ejemplo de código siguiente se muestra cómo deshabilitar la generación de enlace de nodo de árbol automática estableciendo la <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> propiedad `false`. A <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> , a continuación, se define la colección para establecer la relación entre los elementos de datos en un <xref:System.Web.UI.WebControls.SiteMapDataSource> control y los nodos de la <xref:System.Web.UI.WebControls.TreeView> control. En este ejemplo funcione correctamente, debe copiar los datos de mapa del sitio de ejemplo, proporcionados después de este ejemplo de código, a un archivo denominado Web.sitemap.  
  
 [!code-aspx-csharp[TreeViewAutoGenerateBindings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/CS/treeviewautogeneratebindingscs.aspx#1)]
 [!code-aspx-vb[TreeViewAutoGenerateBindings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/VB/treeviewautogeneratebindingsvb.aspx#1)]  
  
 En el ejemplo de código siguiente se proporciona datos de mapa del sitio de ejemplo para el ejemplo anterior.  
  
```  
<siteMap>  
    <siteMapNode title="Home" description="Home" url="default.aspx">  
        <siteMapNode title="Products" description="Products" url="Products.aspx">  
            <siteMapNode title="Computers" url="Computers.aspx"/>  
            <siteMapNode title="Accessories" url="Accessories.aspx"/>       
        </siteMapNode>  
    </siteMapNode>  
</siteMap>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />
      </Docs>
    </Member>
    <Member MemberName="CheckedNodes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeCollection CheckedNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeCollection CheckedNodes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckedNodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeCollection ^ CheckedNodes { System::Web::UI::WebControls::TreeNodeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una colección de objetos <see cref="T:System.Web.UI.WebControls.TreeNode" /> que representan los nodos del control <see cref="T:System.Web.UI.WebControls.TreeView" /> que muestra una casilla activada.</summary>
        <value>Una colección <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> que contiene los nodos del objeto <see cref="T:System.Web.UI.WebControls.TreeView" /> que muestran una casilla activada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se muestran casillas de verificación en la <xref:System.Web.UI.WebControls.TreeView> control (estableciendo la <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> propiedad en un valor distinto de `TreeNodeType.None`), use el <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> propiedad para determinar qué nodos muestran una casilla activada. Esta colección se suele utilizar para recorrer en iteración todos los nodos que tienen una casilla de verificación seleccionada en el árbol.  
  
 El <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> evento se desencadena cuando las casillas de verificación de la <xref:System.Web.UI.WebControls.TreeView> control cambian entre cada envío al servidor. Esto le permite proporcionar un método de control de eventos que realiza una rutina personalizada, como actualizar una base de datos o el contenido mostrado, siempre que se produce este evento.  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> colección se rellena con un corte transversal de prioridad de la estructura de árbol: cada nodo primario se procesa hasta sus nodos secundarios antes de que se rellena el siguiente nodo primario.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> propiedad para determinar qué nodos tienen una casilla de verificación seleccionada en el <xref:System.Web.UI.WebControls.TreeView> control.  
  
 [!code-aspx-csharp[TreeViewShowCheckBoxes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowCheckBoxes/CS/treeviewshowcheckboxescs.aspx#1)]
 [!code-aspx-vb[TreeViewShowCheckBoxes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowCheckBoxes/VB/treeviewshowcheckboxesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName="CollapseAll">
      <MemberSignature Language="C#" Value="public void CollapseAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CollapseAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub CollapseAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CollapseAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cierra cada nodo en el árbol.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A> método proporciona una manera cómoda para cerrar todos los nodos en el árbol.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A> método para contraer todos los nodos en el <xref:System.Web.UI.WebControls.TreeView> control al mismo tiempo.  
  
 [!code-aspx-csharp[TreeViewExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewExpandAll/CS/treeviewexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeViewExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewExpandAll/VB/treeviewexpandallvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="CollapseImageToolTip">
      <MemberSignature Language="C#" Value="public string CollapseImageToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CollapseImageToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property CollapseImageToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CollapseImageToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la información sobre herramientas para la imagen que se muestra para el indicador de nodo contraíble.</summary>
        <value>La información sobre herramientas para la imagen mostrada para el indicador de nodo contraíble.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A> propiedad para especificar una información sobre herramientas para la imagen que se puede contraer. El texto que especifique proporciona dispositivos de tecnología de asistencia con una descripción de la imagen que puede usarse para hacer que el control sea más accesible.  
  
 El valor de esta propiedad se almacena en estado de vista.  
  
 El valor de esta propiedad, cuando se establece, pueden guardar automáticamente en un archivo de recursos utilizando una herramienta de diseñador. Para obtener más información, consulte <xref:System.ComponentModel.LocalizableAttribute> y [globalización y localización](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A> propiedad para especificar una información sobre herramientas para una imagen que se muestra para el indicador de nodo contraíble.  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      </Docs>
    </Member>
    <Member MemberName="CollapseImageUrl">
      <MemberSignature Language="C#" Value="public string CollapseImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CollapseImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property CollapseImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CollapseImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la dirección URL a una imagen personalizada para el indicador de nodo contraíble.</summary>
        <value>La dirección URL a una imagen personalizada para mostrar para los nodos contraíbles. El valor predeterminado es una cadena vacía (""), que muestra la imagen predeterminada del signo menos (-).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> propiedad para especificar una imagen personalizada para el indicador de nodo contraíble. Esta imagen se muestra junto a un nodo que puede contraerse y normalmente es un signo menos (-).  
  
 Cuando el <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> propiedad está establecida en `true`, el <xref:System.Web.UI.WebControls.TreeView> control muestra un signo más (+) o un signo menos, una imagen de marcador de posición junto a un nodo para indicar si el nodo es expansible, contraíble o no contraíble, respectivamente. Puede especificar imágenes personalizadas estableciendo primero la <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> propiedad `TreeViewImageSet.Custom`y, a continuación, establecer el <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, y <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> propiedades a las direcciones URL para las imágenes personalizadas. Si no se especifica ninguna imagen, se utilizan las imágenes predeterminadas. Para ocultar los indicadores de nodo de expansión, establezca la <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> propiedad `false`.  
  
> [!NOTE]
>  Para asegurarse de que los nodos se alinean correctamente en el <xref:System.Web.UI.WebControls.TreeView> controlar cuando se usa imágenes personalizadas, asegúrese de que todas las imágenes que se especifican mediante el <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, y <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> propiedades tienen las mismas dimensiones.  
  
 Cuando se usa una imagen personalizada para el indicador de nodo contraíble, también debería considerar la configuración de la <xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A> propiedad para especificar una información sobre herramientas para la imagen.  
  
 El valor de esta propiedad se almacena en estado de vista.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> propiedad para especificar una imagen personalizada para el indicador de nodo contraíble. En el ejemplo de código para mostrar y la imagen aparezca en el control, debe proporcionar su propia imagen y <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> propiedad debe establecerse en `TreeNodeImageSet.Custom`.  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una colección para almacenar controles secundarios.</summary>
        <returns>Siempre devuelve un objeto <see cref="T:System.Web.UI.EmptyControlCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.TreeView> control no es compatible con la incrustación de controles secundarios. Este método se ha reemplazado para evitar la adición de controles secundarios y siempre devuelve un <xref:System.Web.UI.EmptyControlCollection?displayProperty=nameWithType> objeto.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.EmptyControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateNode">
      <MemberSignature Language="C#" Value="protected internal virtual System.Web.UI.WebControls.TreeNode CreateNode ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Web.UI.WebControls.TreeNode CreateNode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CreateNode" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateNode () As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Web::UI::WebControls::TreeNode ^ CreateNode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.TreeNode" />. El método <see cref="M:System.Web.UI.WebControls.TreeView.CreateNode" /> es un método auxiliar.</summary>
        <returns>Nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.TreeNode" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.TreeView.CreateNode%2A> método es un método auxiliar que devuelve una nueva instancia de la <xref:System.Web.UI.WebControls.TreeNode> clase.  
  
 El <xref:System.Web.UI.WebControls.TreeView.CreateNode%2A> método la usan principalmente los programadores de controles. Controlar los desarrolladores que desean extender a la <xref:System.Web.UI.WebControls.TreeView> clase extendiendo la <xref:System.Web.UI.WebControls.TreeNode> clase debe reemplazar este método para devolver un objeto que se deriva de la <xref:System.Web.UI.WebControls.TreeNode>. Una razón común para extender la <xref:System.Web.UI.WebControls.TreeNode> clase consiste en reemplazar el <xref:System.Web.UI.WebControls.TreeNode.RenderPreText%2A> y <xref:System.Web.UI.WebControls.TreeNode.RenderPostText%2A> métodos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Llama al método <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> de la clase base.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controles enlazados a datos debe invalidar el <xref:System.Web.UI.WebControls.TreeView.PerformDataBinding%2A> en lugar del método la <xref:System.Web.UI.WebControls.TreeView.DataBind%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.PerformDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="DataBindings">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeBindingCollection DataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeBindingCollection DataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.DataBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBindings As TreeNodeBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeBindingCollection ^ DataBindings { System::Web::UI::WebControls::TreeNodeBindingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeViewBindingsEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una colección de objetos <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> que definen la relación entre un elemento de datos y el nodo al que se enlaza.</summary>
        <value>Colección <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" /> que representa la relación entre un elemento de datos y el nodo al que se enlaza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> colección contiene <xref:System.Web.UI.WebControls.TreeNodeBinding> objetos que definen la relación entre un elemento de datos y el nodo al que se enlaza. Al enlazar a un origen de datos donde cada elemento de datos contiene varias propiedades (por ejemplo, un elemento XML con varios atributos), un nodo muestra el valor devuelto por la `ToString` método del elemento de datos, de forma predeterminada. En el caso de un elemento XML, el nodo muestra el nombre del elemento, que muestra la estructura subyacente del árbol, pero no es muy útil en caso contrario. Puede enlazar un nodo a una propiedad de elemento de datos específico mediante la especificación de enlaces de nodo de árbol.  
  
 Al definir la relación entre un elemento de datos y un nodo, debe especificar tanto los criterios de enlace y los valores enlazar a las propiedades de <xref:System.Web.UI.WebControls.TreeNode> objeto. Los criterios de indican cuándo un elemento de datos se debería enlazar a un nodo. Pueden especificar los criterios con una profundidad de nodo, un miembro de datos o ambos. Una profundidad de nodo especifica el nivel de nodo que se enlaza. Por ejemplo, si especifica una profundidad de nodo de 0, todos los nodos de la estructura de árbol en el nivel 0 se enlazan mediante el enlace de nodo de árbol. Un miembro de datos especifica el tipo del elemento de datos en el origen de datos subyacente, pero puede representar información diferente dependiendo del origen de datos. Por ejemplo, el miembro de datos para un elemento XML especifica el nombre del elemento.  
  
 Si hay varios <xref:System.Web.UI.WebControls.TreeNodeBinding> se definen los objetos que están en conflicto entre sí, el <xref:System.Web.UI.WebControls.TreeView> control aplica a los enlaces de nodo de árbol en el siguiente orden de prioridad:  
  
1.  La <xref:System.Web.UI.WebControls.TreeNodeBinding> objeto que define una profundidad y un miembro de datos.  
  
2.  La <xref:System.Web.UI.WebControls.TreeNodeBinding> objeto que define sólo la profundidad.  
  
3.  La <xref:System.Web.UI.WebControls.TreeNodeBinding> objeto que define el miembro de datos.  
  
4.  La <xref:System.Web.UI.WebControls.TreeNodeBinding> objeto que define la profundidad ni el miembro de datos.  
  
 Si se especifican varios enlaces que cumplan los mismos criterios de prioridad, se aplica el primer enlace de la colección.  
  
 Una vez que se establece los criterios de enlace, a continuación, puede enlazar una propiedad de un <xref:System.Web.UI.WebControls.TreeNode> objeto que se puede enlazar a un valor. Puede enlazar a un atributo o un campo de un elemento de datos o mostrar un valor estático. Para obtener más información sobre cómo enlazar las propiedades de un <xref:System.Web.UI.WebControls.TreeNode> en un valor de objeto, vea <xref:System.Web.UI.WebControls.TreeNodeBinding>.  
  
 Aunque el <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> colección se puede rellenar mediante programación, normalmente se establece mediante declaración. Para especificar los enlaces de nodo de árbol, primero anide de apertura y cierre `<DataBindings>` etiquetas entre las etiquetas apertura y cierre de la <xref:System.Web.UI.WebControls.TreeView> control. A continuación, coloque `<asp:TreeNodeBinding>` elementos entre la apertura y cierre `<DataBindings>` etiquetas para cada nodo de árbol de enlace desea especificar.  
  
 Cuando se crean enlaces de datos estableciendo el <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> propiedad de la <xref:System.Web.UI.WebControls.TreeView> el control a `true`, los enlaces que se crean tienen la <xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A> propiedad establecida en `true`. Enlaces de datos que se crean mediante declaración tienen la <xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A> propiedad establecida en `false`. Utilice la sintaxis declarativa permite controlar el comportamiento de enlaces de datos individuales.  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos de código. El primer ejemplo de código muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> colección para definir la relación entre un elemento de datos y el nodo al que se enlaza. El segundo ejemplo de código proporciona datos XML de ejemplo para el primer ejemplo de código.  
  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> colección para definir la relación entre un elemento de datos y el nodo al que se enlaza. En este ejemplo funcione correctamente, debe copiar los datos XML de ejemplo, proporcionados después de este ejemplo de código, en un archivo denominado Book.xml. En este ejemplo se especifica solo el <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> propiedad del enlace. Puede agregarse una ligera mejora del rendimiento especificando también la <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> propiedad.  
  
 [!code-aspx-csharp[TreeViewXml#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewXml/CS/treeviewxmlcs.aspx#1)]
 [!code-aspx-vb[TreeViewXml#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewXml/VB/treeviewxmlvb.aspx#1)]  
  
 En el ejemplo de código siguiente se proporciona datos XML de ejemplo para el ejemplo anterior.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />
      </Docs>
    </Member>
    <Member MemberName="EnableClientScript">
      <MemberSignature Language="C#" Value="public bool EnableClientScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableClientScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableClientScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableClientScript { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el control <see cref="T:System.Web.UI.WebControls.TreeView" /> representa script de cliente para controlar los eventos de expansión y contracción.</summary>
        <value>
          <see langword="true" /> para representar el script de cliente en exploradores compatibles; de lo contrario, <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> propiedad para especificar si el <xref:System.Web.UI.WebControls.TreeView> control representa el script de cliente en exploradores compatibles para controlar expandir y contraer los eventos. Cuando esta propiedad se establece en `true`, los exploradores compatibles ejecutan el código para expandir y contraer los nodos en el cliente. Los datos del nodo de árbol se deben saber por adelantado para que el script de cliente para que funcione. Mediante script de cliente evita que una entrada de blog en el servidor cada vez que un nodo está expandido o contraído.  
  
 Cuando los datos del nodo de árbol no se conoce de antemano, los nodos pueden rellenar desde el cliente, si la `PopulateNodesFromClient` propiedad también se establece en `true`. En este escenario, también debe proporcionar un método de control de eventos para el <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> eventos para rellenar los nodos. Para obtener más información sobre el llenado de nodos de cliente, consulte <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.  
  
> [!NOTE]
>  Si el <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> propiedad está establecida en `false`, el <xref:System.Web.UI.WebControls.TreeView> control devuelve datos al servidor cada vez que un nodo está expandido o contraído.  
  
 El valor de esta propiedad se almacena en estado de vista.  
  
 Esta propiedad no se puede establecer mediante temas o temas de la hoja de estilos. Para obtener más información, consulte <xref:System.Web.UI.ThemeableAttribute> y [ASP.NET temas y máscaras](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos de código. El primer ejemplo de código muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> propiedad que se va a representar el script de cliente que se usa para expandir y contraer nodos en exploradores compatibles. El segundo ejemplo de código proporciona datos XML de ejemplo para el primer ejemplo de código.  
  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> propiedad que se va a representar el script de cliente que se usa para expandir y contraer nodos en exploradores compatibles. Tenga en cuenta que se necesita un envío al servidor para expandir y contraer un nodo cuando el <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> propiedad está establecida en `false`. En este ejemplo funcione correctamente, debe copiar los datos XML de ejemplo, proporcionados después de este ejemplo de código, en un archivo denominado Book.xml.  
  
 [!code-aspx-csharp[TreeViewEnableClientScript#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewEnableClientScript/CS/treeviewenableclientscriptcs.aspx#1)]
 [!code-aspx-vb[TreeViewEnableClientScript#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewEnableClientScript/VB/treeviewenableclientscriptvb.aspx#1)]  
  
 En el ejemplo de código siguiente se proporciona datos XML de ejemplo para el ejemplo de código anterior.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
      </Docs>
    </Member>
    <Member MemberName="ExpandAll">
      <MemberSignature Language="C#" Value="public void ExpandAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExpandAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExpandAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExpandAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Abre cada nodo del árbol.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A> método proporciona una manera cómoda para abrir todos los nodos en el árbol.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A> método para expandir todos los nodos en el <xref:System.Web.UI.WebControls.TreeView> control al mismo tiempo.  
  
 [!code-aspx-csharp[TreeViewExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewExpandAll/CS/treeviewexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeViewExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewExpandAll/VB/treeviewexpandallvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="ExpandDepth">
      <MemberSignature Language="C#" Value="public int ExpandDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExpandDepth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ExpandDepth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.TreeView/TreeViewExpandDepthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el número de niveles que se expanden cuando se muestra un control <see cref="T:System.Web.UI.WebControls.TreeView" /> por primera vez.</summary>
        <value>La profundidad a mostrar cuando se muestra inicialmente <see cref="T:System.Web.UI.WebControls.TreeView" /> . El valor predeterminado es -1, que muestra todos los nodos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.TreeView.ExpandDepth%2A> propiedad para controlar la representación de la <xref:System.Web.UI.WebControls.TreeView> controlar la primera vez que se muestra. En postbacks posteriores, los nodos retienen su estado expandido actual.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LevelStyles" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="ExpandImageToolTip">
      <MemberSignature Language="C#" Value="public string ExpandImageToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpandImageToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandImageToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpandImageToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la información sobre herramientas para la imagen que se muestra para el indicador de nodo expansible.</summary>
        <value>La información sobre herramientas para la imagen mostrada para el indicador de nodo expansible.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A> propiedad para especificar una información sobre herramientas para la imagen. El texto que especifique proporciona dispositivos de tecnología de asistencia con una descripción de la imagen que puede usarse para hacer que el control sea más accesible.  
  
 El valor de esta propiedad se almacena en estado de vista.  
  
 El valor de esta propiedad, cuando se establece, pueden guardar automáticamente en un archivo de recursos utilizando una herramienta de diseñador. Para obtener más información, consulte <xref:System.ComponentModel.LocalizableAttribute> y [globalización y localización](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A> propiedad para especificar una información sobre herramientas para una imagen que se muestra para el indicador de nodo expansible.  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      </Docs>
    </Member>
    <Member MemberName="ExpandImageUrl">
      <MemberSignature Language="C#" Value="public string ExpandImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpandImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpandImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la dirección URL a una imagen personalizada para el indicador de nodo expansible.</summary>
        <value>La dirección URL a una imagen personalizada para mostrar para los nodos expansibles. El valor predeterminado es una cadena vacía (""), que muestra la imagen predeterminada del signo más (+).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> propiedad para especificar una imagen personalizada para el indicador de nodo expansible. Esta imagen se muestra junto a un nodo expansible y normalmente es un signo más (+).  
  
 Cuando el <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> propiedad está establecida en `true`, el <xref:System.Web.UI.WebControls.TreeView> control muestra un signo más (+) o signo menos (-) o una imagen de marcador de posición junto a un nodo para indicar si el nodo es expansible, contraíble o no contraíble, respectivamente. Puede especificar imágenes personalizadas estableciendo primero la <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> propiedad `TreeViewImageSet.Custom`y, a continuación, establecer el <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, y <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> propiedades a las direcciones URL para las imágenes personalizadas. Si no se especifica ninguna imagen, se utilizan las imágenes predeterminadas. Para ocultar los indicadores de nodo de expansión, establezca la <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> propiedad `false`.  
  
> [!NOTE]
>  Para asegurarse de que los nodos se alinean correctamente en el <xref:System.Web.UI.WebControls.TreeView> controlar cuando se usa imágenes personalizadas, asegúrese de que todas las imágenes que se especifican mediante el <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, y <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> propiedades tienen las mismas dimensiones.  
  
 Para mostrar una imagen personalizada correctamente, puede que necesite establecer <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> a `false`.  
  
 Cuando se usa una imagen personalizada para el indicador de nodo expansible, también debería considerar la configuración de la <xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A> propiedad para especificar una información sobre herramientas para la imagen.  
  
 El valor de esta propiedad se almacena en estado de vista.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> propiedad para especificar una imagen personalizada para el indicador de nodo expansible. En el ejemplo de código para mostrar y la imagen aparezca en el control, debe proporcionar su propia imagen y <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> propiedad debe establecerse en `TreeNodeImageSet.Custom`.  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
      </Docs>
    </Member>
    <Member MemberName="FindNode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode FindNode (string valuePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.TreeNode FindNode(string valuePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.FindNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNode (valuePath As String) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::TreeNode ^ FindNode(System::String ^ valuePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valuePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valuePath">La ruta de acceso de valor de un nodo.</param>
        <summary>Recupera el objeto <see cref="T:System.Web.UI.WebControls.TreeNode" /> del control <see cref="T:System.Web.UI.WebControls.TreeView" /> en la ruta de acceso del valor especificado.</summary>
        <returns>El nodo <see cref="T:System.Web.UI.WebControls.TreeNode" /> en la ruta de acceso del valor especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.TreeView.FindNode%2A> método para obtener un nodo de la <xref:System.Web.UI.WebControls.TreeView> control en la ruta de acceso del valor especificado. La ruta de acceso del valor contiene una lista separada por delimitador de valores de los nodos que forman una ruta de acceso desde el nodo raíz al nodo actual. Cada nodo almacena su ruta de acceso de valor en el <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> propiedad. El <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A> propiedad especifica el carácter delimitador que se utiliza para separar los valores de nodo.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.FindNode%2A> método para recuperar un nodo de la <xref:System.Web.UI.WebControls.TreeView> control.  
  
> [!IMPORTANT]
>  Este ejemplo tiene un cuadro de texto que acepta datos proporcionados por el usuario, lo que puede suponer una amenaza para la seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[TreeViewFindNode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFindNode/CS/treeviewfindnodecs.aspx#1)]
 [!code-aspx-vb[TreeViewFindNode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFindNode/VB/treeviewfindnodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PathSeparator" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="protected virtual string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCallbackResult () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetCallbackResult();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.GetCallbackResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve el resultado de un evento de devolución de llamada que tiene como destino un control.</summary>
        <returns>El resultado de la devolución de llamada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.TreeView> controlar implementa la <xref:System.Web.UI.ICallbackEventHandler> interfaz y se utiliza el <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> para recuperar datos y el <xref:System.Web.UI.WebControls.TreeView.GetCallbackResult%2A> método para devolver los datos recuperados al control.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HoverNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style HoverNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style HoverNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HoverNodeStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ HoverNodeStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una referencia al objeto <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> que permite establecer el aspecto de un nodo cuando el puntero del mouse se coloca sobre él.</summary>
        <value>Referencia al objeto <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> que representa el estilo de un nodo cuando el puntero del mouse se coloca sobre él.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> propiedad para controlar el aspecto de un nodo cuando el puntero del mouse se sitúa sobre él. Esta propiedad es de solo lectura; Sin embargo, puede establecer las propiedades de la <xref:System.Web.UI.WebControls.TreeNodeStyle> objeto que devuelve. Las propiedades pueden establecerse mediante declaración con el formato `Property-Subproperty`, donde `Subproperty` es una propiedad de la <xref:System.Web.UI.WebControls.TreeNodeStyle> objeto (por ejemplo, `HoverNodeStyle-ForeColor`). Las propiedades también pueden establecerse mediante programación con el formato `Property.Subproperty` (por ejemplo, `HoverNodeStyle.ForeColor`). Esta característica solo se admite en los clientes compatibles con la secuencia de comandos.  
  
> [!NOTE]
>  Para usar el <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> propiedad, se debe incluir un `<head>` elemento con un `runat="server"` atributo.  
  
 Configuración común normalmente incluye un color de fondo, color de primer plano, propiedades de fuente y el espaciado de nodo. Propiedades de estilo se aplican en el orden siguiente:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, o <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, según el tipo de nodo. Si el <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> la colección está definida, se aplica en este momento, reemplazando las demás propiedades de estilo de nodo.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.  
  
> [!NOTE]
>  La configuración de estilo para el <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> propiedad invalidar cualquier configuración de estilo de nodo correspondiente que se encuentran en el <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, o <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A> propiedad.  
  
 El <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> propiedad no se representa para un nodo con su <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> propiedad establecida en `TreeNodeSelectAction.None`.  
  
 A diferencia de la <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> y <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> propiedades, que son <xref:System.Web.UI.WebControls.TreeNodeStyle> objetos, el <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> propiedad es una <xref:System.Web.UI.WebControls.Style> objeto.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> propiedad para controlar el aspecto de un nodo cuando el puntero del mouse se sitúa sobre él. Para que este ejemplo funcione, debe incluir un `<head>` elemento con un `runat="server"` atributo.  
  
 [!code-aspx-csharp[TreeViewHoverNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewHoverNodeStyle/CS/treeviewhovernodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewHoverNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewHoverNodeStyle/VB/treeviewhovernodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LevelStyles" />
      </Docs>
    </Member>
    <Member MemberName="ImageSet">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeViewImageSet ImageSet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TreeViewImageSet ImageSet" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageSet As TreeViewImageSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeViewImageSet ImageSet { System::Web::UI::WebControls::TreeViewImageSet get(); void set(System::Web::UI::WebControls::TreeViewImageSet value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeViewImageSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el grupo de imágenes a utilizar para el control <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <value>Uno de los valores de <see cref="T:System.Web.UI.WebControls.TreeViewImageSet" />. El valor predeterminado es <see langword="TreeViewImageSet.Custom" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice la <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> propiedad para especificar el grupo de imágenes a utilizar para el <xref:System.Web.UI.WebControls.TreeView> control. Puede seleccionar un conjunto predefinido de imágenes que se proporcionan al control un aspecto estándar o definir su propio conjunto personalizado.  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> propiedad no afecta a cualquier configuración de estilo para un nodo. Establecer la propiedad de estilo adecuado, como el <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> propiedad, si desea agregar colores personalizados y el espaciado.  
  
 En la tabla siguiente se enumera los valores válidos para el <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> propiedad.  
  
|Conjunto de imágenes|Descripción|  
|---------------|-----------------|  
|`TreeViewImageSet.Arrows`|Un conjunto de imágenes predefinido que utiliza imágenes de flecha.|  
|`TreeViewImageSet.BulletedList`|Un conjunto predefinido de imágenes que utiliza imágenes de viñeta en forma de rombo.|  
|`TreeViewImageSet.BulletedList2`|Un conjunto de imágenes predefinido que utiliza imágenes de viñeta cuadradas.|  
|`TreeViewImageSet.BulletedList3`|Un conjunto predefinido de imágenes de viñeta en forma de rombo, en secciones.|  
|`TreeViewImageSet.BulletedList4`|Un conjunto predefinido de imágenes alternativas de viñeta en forma de rombo, en secciones, en tamaños que varían por nivel.|  
|`TreeViewImageSet.Contacts`|Un conjunto de imágenes predefinido que utiliza imágenes de MSN Messenger.|  
|`TreeViewImageSet.Custom`|Un conjunto de imágenes definido por el usuario.|  
|`TreeViewImageSet.Events`|Un conjunto de imágenes predefinido que utiliza imágenes de estilo de registro de eventos.|  
|`TreeViewImageSet.Faq`|Un conjunto de imágenes predefinido que utiliza imágenes de estilo P+F.|  
|`TreeViewImageSet.Inbox`|Un conjunto de imágenes predefinido que utiliza imágenes de estilo correo electrónico.|  
|`TreeViewImageSet.News`|Un conjunto predefinido de imágenes que utiliza imágenes de estilo de un grupo de noticias.|  
|`TreeViewImageSet.Simple`|Describe un conjunto de imágenes predefinido que utiliza de forma simple.|  
|`TreeViewImageSet.Simple2`|Un conjunto predefinido de imágenes que utiliza formas rellenas simples.|  
|`TreeViewImageSet.Msdn`|Un conjunto predefinido de imágenes que utiliza imágenes de MSDN.|  
|`TreeViewImageSet.WindowsHelp`|Un conjunto de imágenes predefinido que utiliza imágenes de la Ayuda de Microsoft Windows.|  
|`TreeViewImageSet.XPFileExplorer`|Un conjunto de imágenes predefinido que utiliza imágenes del explorador de Windows disponibles en Microsoft Windows XP.|  
  
 Al definir un conjunto personalizado de imágenes, debe especificar una imagen para cada una de las propiedades en la tabla siguiente. En caso contrario, se utiliza la imagen predeterminada para esa propiedad.  
  
|Propiedad.|Descripción|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>|La dirección URL a una imagen personalizada para el indicador de nodo contraíble.|  
|<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>|La dirección URL a una imagen personalizada para el indicador de nodo expansible.|  
|<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>|La dirección URL a una carpeta que contiene imágenes personalizadas para las líneas que conectan nodos.|  
|<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>|La dirección URL a una imagen personalizada para el indicador de nodo no se puede expandir.|  
  
 El valor de esta propiedad se almacena en estado de vista.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> propiedad para mostrar el conjunto de explorador de Windows de las imágenes en el <xref:System.Web.UI.WebControls.TreeView> control.  
  
 [!code-aspx-csharp[TreeViewImageSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewImageSet/CS/treeviewimagesetcs.aspx#1)]
 [!code-aspx-vb[TreeViewImageSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewImageSet/VB/treeviewimagesetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El conjunto de imágenes establecido no es ninguno de los valores de <see cref="T:System.Web.UI.WebControls.TreeViewImageSet" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      </Docs>
    </Member>
    <Member MemberName="LeafNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle LeafNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle LeafNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LeafNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ LeafNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una referencia al objeto <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> que permite establecer el aspecto de los nodos de hoja.</summary>
        <value>Referencia al objeto <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> que representa el estilo de los nodos de hoja en el control <see cref="T:System.Web.UI.WebControls.TreeView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> propiedad para controlar el aspecto de los nodos de hoja en el <xref:System.Web.UI.WebControls.TreeView> control. Esta propiedad es de solo lectura; Sin embargo, puede establecer las propiedades de la <xref:System.Web.UI.WebControls.TreeNodeStyle> objeto devuelve. Las propiedades pueden establecerse mediante declaración con el formato `Property-Subproperty`, donde `Subproperty` es una propiedad de la <xref:System.Web.UI.WebControls.TreeNodeStyle> objeto (por ejemplo, `LeafNodeStyle-ForeColor`). Las propiedades también pueden establecerse mediante programación con el formato `Property.Subproperty` (por ejemplo, `LeafNodeStyle.ForeColor`). Configuración común normalmente incluye un color de fondo, color de primer plano, propiedades de fuente y el espaciado de nodo. Propiedades de estilo se aplican en el siguiente orden de prioridad:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, o <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, según el tipo de nodo. Si el <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> la colección está definida, se aplica en este momento, reemplazando las demás propiedades de estilo de nodo.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.  
  
 Si tiene que generar tabla de los menús de navegación de estilo contenido donde los nodos de un determinado nivel deben tener el mismo aspecto, independientemente de si tienen nodos secundarios, se puede utilizar el <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> propiedad en lugar de establecer las propiedades de estilo individuales.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> propiedad para controlar el aspecto de los nodos de hoja en el <xref:System.Web.UI.WebControls.TreeView> control.  
  
 [!code-aspx-csharp[TreeViewLeafNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLeafNodeStyle/CS/treeviewleafnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewLeafNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLeafNodeStyle/VB/treeviewleafnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="LevelStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyleCollection LevelStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyleCollection LevelStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LevelStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelStyles As TreeNodeStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyleCollection ^ LevelStyles { System::Web::UI::WebControls::TreeNodeStyleCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una colección de objetos <see cref="T:System.Web.UI.WebControls.Style" /> que representan estilos de nodo en los niveles individuales del árbol.</summary>
        <value>Una colección <see cref="T:System.Web.UI.WebControls.StyleCollection" /> que representa los estilos de nodo en los niveles individuales del árbol.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> colección como una alternativa a las propiedades de estilo individuales (como el <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> propiedad) para controlar el estilo de los nodos en los niveles individuales del árbol. El primer estilo de la colección corresponde al estilo de nodos en el primer nivel del árbol. El segundo estilo de la colección corresponde al estilo de nodos en el segundo nivel del árbol y así sucesivamente. Esta propiedad se utiliza frecuentemente para generar las tablas de los menús de navegación de estilo contenido donde los nodos de un determinado nivel deben tener el mismo aspecto, independientemente de si tienen nodos secundarios.  
  
 Propiedades de estilo se aplican en el orden siguiente:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, o <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, según el tipo de nodo. Si el <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> la colección está definida, se aplica en este momento, reemplazando las demás propiedades de estilo de nodo.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> propiedad que se va a crear un menú de navegación. El control siempre está completamente expandido, con los indicadores de nodo de expansión y las imágenes ocultadas. Además, la <xref:System.Web.UI.WebControls.TreeNodeStyle.ChildNodesPadding%2A> propiedad se utiliza para controlar el espaciado de los niveles de nodo.  
  
 [!code-aspx-csharp[TreeViewLevelStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLevelStyles/CS/treeviewlevelstylescs.aspx#1)]
 [!code-aspx-vb[TreeViewLevelStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLevelStyles/VB/treeviewlevelstylesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.StyleCollection" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="LineImagesFolder">
      <MemberSignature Language="C#" Value="public string LineImagesFolder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LineImagesFolder" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      <MemberSignature Language="VB.NET" Value="Public Property LineImagesFolder As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LineImagesFolder { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la ruta de acceso a una carpeta que contiene las imágenes de la línea que se utilizan para conectar los nodos secundarios a los nodos primarios.</summary>
        <value>La ruta de acceso a una carpeta que contiene las imágenes de línea utilizadas para conectar los nodos. El valor predeterminado es una cadena vacía (""), lo que indica que no se ha establecido la propiedad <see cref="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.TreeView> control puede mostrar líneas que conectan los nodos secundarios a los nodos primarios cuando la <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> propiedad está establecida en `true`. Cuando se muestran las líneas, utilice la <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> propiedad para especificar una carpeta accesible desde la Web que contiene el conjunto de imágenes previamente representados que se usará para las líneas. La tabla siguiente describen las imágenes que se usan por el <xref:System.Web.UI.WebControls.TreeView> control.  
  
|Imagen|Descripción|  
|-----------|-----------------|  
|Dash.gif|Una imagen de línea que se muestra junto al nodo raíz cuando hay un solo nodo raíz en la estructura de árbol y el nodo raíz es una hoja.|  
|Dashminus.gif|Una imagen de signo menos (-) aparece junto al nodo raíz cuando hay un solo nodo raíz en la estructura de árbol para indicar que se expande el nodo raíz.|  
|Dashplus.gif|Imagen de signo más (+) que se muestra junto al nodo raíz cuando hay un solo nodo raíz en la estructura de árbol para indicar que el nodo raíz está contraído.|  
|I.gif|Imagen de línea que se muestra para conectar nodos adyacentes.|  
|L.gif|Una imagen de línea que muestra junto al último nodo en una bifurcación cuando el nodo es una hoja.|  
|Lminus.gif|Una imagen de línea que muestra a continuación hasta el último nodo de una bifurcación para indicar que el nodo está expandido.|  
|Lplus.gif|Una imagen de línea que muestra junto al último nodo de una bifurcación para indicar que el nodo está contraído.|  
|MINUS.gif|Una imagen de signo menos (-) aparece junto al primer nodo raíz en una estructura de árbol que contiene varios nodos raíz para indicar que el nodo está expandido. Esta imagen no contiene una línea adicional y se muestra solo después de que se ha contraído una vez el nodo raíz. Cuando se carga la página por primera vez, se muestra la imagen Rminus.gif.|  
|NOEXPAND.gif|Imagen de espacio en blanco que se muestra junto a un nodo de hoja. Esta imagen permite texto se alinean verticalmente.|  
|Plus.gif|Una imagen de signo más (+) que se muestra junto al primer nodo raíz en una estructura de árbol que contiene varios nodos raíz para indicar que el nodo está contraída. Esta imagen no contiene una línea adicional y se muestra solo después de que el nodo raíz se amplió una vez. Cuando se carga la página por primera vez, se muestra la imagen Rplus.gif.|  
|R.gif|Una imagen de línea que se muestra junto al primer nodo raíz en una estructura de árbol que contiene varios nodos raíz para indicar que el nodo es un nodo de hoja.|  
|Rminus.gif|Una imagen de signo menos (-) aparece junto al primer nodo raíz en una estructura de árbol que contiene varios nodos raíz para indicar que el nodo está expandido. Esta imagen contiene una línea adicional y sólo se muestra cuando se carga la página por primera vez. Después de la raíz del nodo se ha contraído una vez, se muestra la imagen de Minus.gif.|  
|Rplus.gif|Una imagen de signo más (+) que se muestra junto al primer nodo raíz en una estructura de árbol que contiene varios nodos raíz para indicar que el nodo está contraída. Esta imagen contiene una línea adicional y sólo se muestra cuando se carga la página por primera vez. Después de la raíz del nodo se ha expandido una vez, se muestra la imagen Plus.gif.|  
|T.gif|Una imagen de línea que se muestra junto a un nodo en el medio de la estructura de árbol (en una ramificación) para indicar que el nodo es una hoja.|  
|Tminus.gif|Una imagen de signo menos (-) aparece junto a un nodo en el medio de la estructura de árbol (en una ramificación) para indicar que el nodo está expandido.|  
|Tplus.gif|Una imagen de signo más (+) que se muestra junto a un nodo en el medio de la estructura de árbol (en una ramificación) para indicar que el nodo está contraído.|  
  
> [!NOTE]
>  Si el <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> propiedad no está establecida, el <xref:System.Web.UI.WebControls.TreeView> control utilizará las imágenes predeterminadas integradas (20 x 20 píxeles).  
  
 Algunos diseñadores visuales, como Microsoft Visual Studio, proporcionan herramientas para generar las imágenes de línea.  
  
 El tiempo de ejecución no voltea las imágenes personalizadas para las pantallas de derecha a izquierda. Para admitir páginas Web de izquierda a derecha y de derecha a izquierda, debe crear conjuntos de imágenes para ambas direcciones.  
  
 El valor de esta propiedad se almacena en estado de vista.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> propiedad para especificar la carpeta que contiene las imágenes de líneas para mostrar en el <xref:System.Web.UI.WebControls.TreeView> control. Para trabajar con este ejemplo, utilice la herramienta de diseñador de línea con antelación para crear un conjunto de imágenes de líneas. Colóquelos en una carpeta denominada LineImages dentro del directorio para la aplicación de ejemplo.  
  
 [!code-aspx-csharp[TreeViewLineImagesFolderUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/CS/treeviewlineimagesfolderurlcs.aspx#1)]
 [!code-aspx-vb[TreeViewLineImagesFolderUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/VB/treeviewlineimagesfolderurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowLines" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Identificador de clave del control.</param>
        <param name="postCollection">Colección de todos los valores de nombre entrantes.</param>
        <summary>Procesa los datos de postback del control <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <returns>
          Es <see langword="true" /> si el estado del control <see cref="T:System.Web.UI.WebControls.TreeView" /> ha cambiado a consecuencia del evento de postback; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El marco de páginas ASP.NET realiza un seguimiento de todos los controles de servidor que devuelven `true` desde el <xref:System.Web.UI.WebControls.TreeView.LoadPostData%2A> llamada al método y, a continuación, se invoca el <xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A> método en esos controles.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Un objeto que contiene los valores de estado de vista guardados para el control.</param>
        <summary>Carga el estado de vista guardado previamente del control <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDataBindDepth">
      <MemberSignature Language="C#" Value="public int MaxDataBindDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDataBindDepth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.MaxDataBindDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDataBindDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxDataBindDepth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el número máximo de niveles del árbol a enlazar al control <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <value>El número máximo de niveles del árbol a enlazar al control <see cref="T:System.Web.UI.WebControls.TreeView" />. El valor predeterminado es -1, que enlaza al control todos los niveles del árbol del origen de datos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al enlazar la <xref:System.Web.UI.WebControls.TreeView> control a un origen de datos, use la <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> propiedad para limitar el número de niveles del árbol a enlazar al control. Por ejemplo, establecer esta propiedad en `2` enlaza sólo el nodo raíz y los nodos que estén inmediatamente bajo el nodo raíz para el <xref:System.Web.UI.WebControls.TreeView> control. Se omiten todos los nodos restantes del origen de datos.  
  
> [!IMPORTANT]
>  Un usuario malintencionado puede crear una solicitud de devolución de llamada y obtener datos para los nodos de la <xref:System.Web.UI.WebControls.TreeView> control que el desarrollador de páginas no se muestra. Por lo tanto, se debe implementar la seguridad de los datos por el origen de datos. No utilice la <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> propiedad para ocultar los datos.  
  
 El valor de esta propiedad se almacena en estado de vista.  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos de código. El primer ejemplo de código muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> propiedad que se va a enlazar solo los primeros niveles de dos nodos (profundidades 0 y 1) a la <xref:System.Web.UI.WebControls.TreeView> control. El segundo ejemplo de código proporciona datos XML de ejemplo para el primer ejemplo de código.  
  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> propiedad que se va a enlazar solo los primeros niveles de dos nodos (profundidades 0 y 1) a la <xref:System.Web.UI.WebControls.TreeView> control. Se omiten todos los niveles de nodos en el origen de datos. En este ejemplo funcione correctamente, debe copiar los datos XML de ejemplo, proporcionados después de este ejemplo de código, en un archivo denominado Book.xml.  
  
 [!code-aspx-csharp[TreeViewMaxDataBindDepth#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewMaxDataBindDepth/CS/treeviewmaxdatabinddepthcs.aspx#1)]
 [!code-aspx-vb[TreeViewMaxDataBindDepth#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewMaxDataBindDepth/VB/treeviewmaxdatabinddepthvb.aspx#1)]  
  
 En el ejemplo de código siguiente se proporciona datos XML de ejemplo para el ejemplo de código anterior.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El valor seleccionado es menor que <see langword="-1" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandDepth" />
      </Docs>
    </Member>
    <Member MemberName="NodeIndent">
      <MemberSignature Language="C#" Value="public int NodeIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NodeIndent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeIndent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NodeIndent { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(20)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la cantidad de sangría (en píxeles) para los nodos secundarios del control <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <value>La cantidad de espacio (en píxeles) entre el borde izquierdo de un nodo secundario y el borde izquierdo de su nodo primario. El valor predeterminado es 20.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A> propiedad para controlar la cantidad de espacio entre el borde izquierdo de un nodo secundario y el borde izquierdo de su nodo primario.  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A> propiedad afecta a todos los nodos secundarios en el <xref:System.Web.UI.WebControls.TreeView> control. No es posible controlar la cantidad de sangría de cada nodo individualmente.  
  
 El valor de esta propiedad se almacena en estado de vista.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A> propiedad para controlar la sangría de los nodos secundarios.  
  
 [!code-aspx-csharp[TreeViewNodeIndent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeIndent/CS/treeviewnodeindentcs.aspx#1)]
 [!code-aspx-vb[TreeViewNodeIndent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeIndent/VB/treeviewnodeindentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.ChildNodesPadding" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.HorizontalPadding" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.NodeSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.VerticalPadding" />
      </Docs>
    </Member>
    <Member MemberName="Nodes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeCollection Nodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeCollection Nodes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Nodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Nodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeCollection ^ Nodes { System::Web::UI::WebControls::TreeNodeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una colección de objetos <see cref="T:System.Web.UI.WebControls.TreeNode" /> que representa los nodos raíz del control <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <value>Una colección <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> que contiene los nodos raíz del objeto <see cref="T:System.Web.UI.WebControls.TreeView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> propiedad que se va a obtener un <xref:System.Web.UI.WebControls.TreeNodeCollection> objeto que contiene todos los nodos raíz en el árbol. Esta colección se utiliza habitualmente rápidamente recorrer en iteración todos los nodos raíz, o tener acceso a un nodo raíz concreto en el árbol.  
  
> [!NOTE]
>  Una estructura de árbol típica tiene sólo un nodo raíz; Sin embargo, puede agregar varios nodos raíz para el <xref:System.Web.UI.WebControls.TreeView> control.  
  
 El <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> propiedad también puede utilizarse para administrar mediante programación los nodos raíz en el árbol. Puede agregar, insertar, eliminar y recuperar <xref:System.Web.UI.WebControls.TreeNode> objetos de la colección. Las actualizaciones de la colección se reflejan automáticamente en el <xref:System.Web.UI.WebControls.TreeView> control después del próximo viaje de ida y vuelta al servidor.  
  
 Para obtener acceso a los nodos secundarios de un nodo raíz, use la <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> propiedad del nodo. Use la <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> propiedad de cada nodo de nivel primario subsiguiente para desplazarse hacia abajo en los niveles de nodo.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> propiedad para recorrer el árbol.  
  
 [!code-aspx-csharp[TreeNodeCollectionCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCount/CS/treenodecollectioncountcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCount/VB/treenodecollectioncountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="NodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle NodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle NodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ NodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una referencia al objeto <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> que permite establecer la apariencia predeterminada de los nodos del control <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <value>Una referencia al objeto <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> que representa el estilo predeterminad de un nodo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> propiedad para controlar la apariencia predeterminada de un nodo en el <xref:System.Web.UI.WebControls.TreeView> control. Esta propiedad es de solo lectura; Sin embargo, puede establecer las propiedades de la <xref:System.Web.UI.WebControls.TreeNodeStyle> objeto devuelve. Las propiedades pueden establecerse mediante declaración con el formato `Property-Subproperty`, donde `Subproperty` es una propiedad de la <xref:System.Web.UI.WebControls.TreeNodeStyle> objeto (por ejemplo, `NodeStyle-ForeColor`). Las propiedades también pueden establecerse mediante programación con el formato `Property.Subproperty` (por ejemplo, `NodeStyle.ForeColor`). Configuración común normalmente incluye un color de fondo, color de primer plano, propiedades de fuente y el espaciado de nodo. Propiedades de estilo se aplican en el siguiente orden de prioridad:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, o <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, según el tipo de nodo. Si el <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> la colección está definida, se aplica en este momento, reemplazando las demás propiedades de estilo de nodo.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.  
  
> [!NOTE]
>  La configuración de estilo de nodo correspondiente en el <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, o <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> propiedades invalidación la configuración de estilo de la <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> propiedad.  
  
 Si tiene que generar tabla de menús de navegación de estilo de contenido donde los nodos de un determinado nivel deben tener el mismo aspecto, independientemente de si tienen nodos secundarios, se puede utilizar el <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> propiedad en lugar de establecer las propiedades de estilo individuales.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> propiedad para controlar el aspecto de los nodos en el <xref:System.Web.UI.WebControls.TreeView> control.  
  
 [!code-aspx-csharp[TreeViewNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeStyle/CS/treeviewnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeStyle/VB/treeviewnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="NodeWrap">
      <MemberSignature Language="C#" Value="public bool NodeWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NodeWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NodeWrap { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el texto se ajusta en un nodo cuando el nodo se queda sin espacio.</summary>
        <value>
          Es <see langword="true" /> para ajustar el texto; de lo contrario, <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.TreeView.NodeWrap%2A> propiedad para especificar si el texto que se muestra en cada nodo se ajusta cuando se queda sin espacio.  
  
 El valor de esta propiedad se almacena en estado de vista.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.NodeWrap%2A> propiedad que se va a ajustar el texto de la <xref:System.Web.UI.WebControls.TreeView> control.  
  
 [!code-aspx-csharp[TreeViewNodeWrap#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeWrap/CS/treeviewnodewrapcs.aspx#1)]
 [!code-aspx-vb[TreeViewNodeWrap#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeWrap/VB/treeviewnodewrapvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Font" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeIndent" />
      </Docs>
    </Member>
    <Member MemberName="NoExpandImageUrl">
      <MemberSignature Language="C#" Value="public string NoExpandImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NoExpandImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property NoExpandImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NoExpandImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la dirección URL a una imagen personalizada para el indicador de nodo no expansible.</summary>
        <value>La dirección URL a una imagen personalizada para mostrar para los nodos no expansibles. El valor predeterminado es una cadena vacía (""), que muestra la imagen en blanco predeterminada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> propiedad para especificar una imagen personalizada para el indicador de nodo no se puede expandir. La imagen del indicador de nodo no expansible (o espaciador) se muestra junto a los nodos de hoja (en lugar de los indicadores de nodo expansible y contraíble) para alinear los nodos de hoja con nodos primarios o raíz.  
  
 Cuando el <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> propiedad está establecida en `true`, el <xref:System.Web.UI.WebControls.TreeView> control muestra un signo más (+) o signo menos (-) o una imagen de marcador de posición junto a un nodo para indicar si el nodo es expansible, contraíble o no contraíble, respectivamente. Puede especificar imágenes personalizadas estableciendo primero la <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> propiedad `TreeViewImageSet.Custom`y, a continuación, establecer el <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, y <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> propiedades a las direcciones URL de las imágenes personalizadas. Si no se especifica ninguna imagen, se utilizan las imágenes predeterminadas. Para ocultar los indicadores de nodo de expansión, establezca la <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> propiedad `false`.  
  
> [!NOTE]
>  Para asegurarse de que los nodos se alinean correctamente en el <xref:System.Web.UI.WebControls.TreeView> controlar cuando se usa imágenes personalizadas, asegúrese de que todas las imágenes que se especifican mediante el <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, y <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> propiedades tienen las mismas dimensiones.  
  
 El valor de esta propiedad se almacena en estado de vista.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> propiedad para especificar una imagen personalizada para el indicador de nodo no se puede expandir. En el ejemplo de código para mostrar y la imagen aparezca en el control, debe proporcionar su propia imagen y <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> propiedad debe establecerse en `TreeNodeImageSet.Custom`.  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Web.UI.Control.Init" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.TreeView.OnInit%2A> llama al método el <xref:System.Web.UI.WebControls.TreeView> control para generar el <xref:System.Web.UI.Control.Init> eventos. Se utilizan generalmente los desarrolladores de controles al extender la <xref:System.Web.UI.WebControls.TreeView> clase.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Web.UI.WebControls.TreeView.OnInit%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar el <see cref="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" /> método en una clase derivada, asegúrese de llamar a la <see cref="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" /> método de la clase base para que los delegados registrados reciban el evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.Control.Init" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> que contiene datos de eventos.</param>
        <summary>Genera el evento <see cref="E:System.Web.UI.Control.PreRender" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.TreeView.OnPreRender%2A> método se invalida para registrar para el postback. Si está habilitado el script de cliente, sino que también presenta la secuencia de comandos necesario y los campos ocultos.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 El método <xref:System.Web.UI.WebControls.TreeView.OnPreRender%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar el <see cref="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" /> método en una clase derivada, asegúrese de llamar a la <see cref="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" /> método de la clase base para que los delegados registrados reciban el evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectedNodeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedNodeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedNodeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedNodeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedNodeChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> que contiene datos de eventos.</param>
        <summary>Provoca el evento <see cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" /> del control <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> evento se desencadena cuando se selecciona un nodo en el <xref:System.Web.UI.WebControls.TreeView> control. Esto le permite proporcionar un método de control de eventos que realiza una rutina personalizada, como actualizar el contenido mostrado, siempre que se produce este evento.  
  
 Opcionalmente, puede establecer el <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> propiedad de un nodo para especificar qué evento se provoca cuando se selecciona ese nodo.  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> no se representa para un nodo con su <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> propiedad establecida en `TreeNodeSelectAction.None`.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 El método <xref:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar el <see cref="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" /> método en una clase derivada, asegúrese de llamar a la <see cref="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" /> método de la clase base para que los delegados registrados reciban el evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeCheckChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeCheckChanged (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeCheckChanged(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeCheckChanged (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeCheckChanged(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" /> que contiene datos de eventos.</param>
        <summary>Provoca el evento <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" /> del control <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> evento se desencadena cuando una casilla de verificación en el <xref:System.Web.UI.WebControls.TreeView> control cambia el estado entre cada envío al servidor. Esto le permite proporcionar un método de control de eventos que realiza una rutina personalizada, como actualizar una base de datos o el contenido mostrado, siempre que se produce este evento.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 El método <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar el <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" /> en una clase derivada, asegúrese de llamar a la <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" /> método de la clase base para que los delegados registrados reciban el evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeCollapsed">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeCollapsed (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeCollapsed(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeCollapsed (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeCollapsed(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" /> que contiene datos de eventos.</param>
        <summary>Provoca el evento <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" /> del control <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> evento se desencadena cuando se contrae un nodo en el <xref:System.Web.UI.WebControls.TreeView> control. Esto le permite proporcionar un método de control de eventos que realiza una rutina personalizada siempre que se produce este evento.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 El método <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar el <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" /> método en una clase derivada, asegúrese de llamar a la <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" /> método de la clase base para que los delegados registrados reciban el evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeDataBound (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeDataBound(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeDataBound (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeDataBound(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" /> que contiene datos de eventos.</param>
        <summary>Provoca el evento <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" /> del control <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound> evento se desencadena cuando un elemento de datos se enlaza a un nodo en el <xref:System.Web.UI.WebControls.TreeView> control. Esto le permite proporcionar un método de control de eventos que realiza una rutina personalizada siempre que se produce este evento.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 El método <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar el <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" /> método en una clase derivada, asegúrese de llamar a la <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" /> método de la clase base para que los delegados registrados reciban el evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeExpanded">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeExpanded (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeExpanded(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeExpanded (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeExpanded(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" /> que contiene datos de eventos.</param>
        <summary>Provoca el evento <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" /> del control <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> evento se desencadena cuando se expande un nodo en el <xref:System.Web.UI.WebControls.TreeView> control. Esto le permite proporcionar un método de control de eventos que realiza una rutina personalizada siempre que se produce este evento.  
  
> [!NOTE]
>  Si el <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> propiedad de un nodo se establece en <xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand> o <xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand>, <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> evento también se genera cuando se hace clic en ese nodo en el <xref:System.Web.UI.WebControls.TreeView> control.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 El método <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar el <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" /> método en una clase derivada, asegúrese de llamar a la <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" /> método de la clase base para que los delegados registrados reciban el evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodePopulate">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodePopulate (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodePopulate(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodePopulate (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodePopulate(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" /> que contiene datos de eventos.</param>
        <summary>Provoca el evento <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" /> del control <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A veces, no es práctico estáticamente predefinir la estructura de árbol debido al tamaño de los datos o el contenido personalizado que depende proporcionados por el usuario. Por este motivo, el <xref:System.Web.UI.WebControls.TreeView> control admite el llenado de nodos dinámico. Cuando el <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> propiedad de un nodo se establece en `true`, ese nodo se rellena en tiempo de ejecución cuando se expande el nodo.  
  
 Para rellenar dinámicamente un nodo, establezca primero la <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> propiedad para que el nodo `true`. A continuación, defina un método de control de eventos para el <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> eventos que se rellena mediante programación el nodo. Un método típico de control de eventos recupera datos del nodo de un origen de datos, coloca los datos en una estructura de nodo y, a continuación, agrega la estructura del nodo para el <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> colección del nodo que se va a rellenar. Se crea una estructura de nodo mediante la adición de <xref:System.Web.UI.WebControls.TreeNode> objetos a la <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> colección de un nodo primario.  
  
> [!NOTE]
>  Cuando el <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> propiedad de un nodo se establece en `true`, el nodo se debe rellenar de forma dinámica. No se pueden anidar mediante declaración otro nodo debajo de él; en caso contrario, se producirá un error en la página.  
  
 Exploradores compatibles (exploradores compatibles con 4.0 de Microsoft Internet Explorer y versiones posteriores) también pueden aprovechar el llenado de nodos de cliente. Cuando se habilita, esto permite la <xref:System.Web.UI.WebControls.TreeView> control para rellenar dinámicamente un nodo en el cliente cuando se expande el nodo, lo que evita la necesidad de enviar datos al servidor. Para obtener más información sobre el llenado de nodos de cliente, consulte <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 El método <xref:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar el <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" /> método en una clase derivada, asegúrese de llamar a la <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" /> método de la clase base para que los delegados registrados reciban el evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
      </Docs>
    </Member>
    <Member MemberName="ParentNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle ParentNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle ParentNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ ParentNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una referencia al objeto <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> que permite establecer la apariencia de los nodos primarios del control <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <value>Referencia al objeto <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> que representa el estilo de los nodos primarios en el control <see cref="T:System.Web.UI.WebControls.TreeView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> propiedad para controlar el aspecto de los nodos primarios en el <xref:System.Web.UI.WebControls.TreeView> control. Esta propiedad es de solo lectura; Sin embargo, puede establecer las propiedades de la <xref:System.Web.UI.WebControls.TreeNodeStyle> objeto devuelve. Las propiedades pueden establecerse mediante declaración con el formato `Property-Subproperty`, donde `Subproperty` es una propiedad de la <xref:System.Web.UI.WebControls.TreeNodeStyle> objeto (por ejemplo, `ParentNodeStyle-ForeColor`). Las propiedades también pueden establecerse mediante programación con el formato `Property.Subproperty` (por ejemplo, `ParentNodeStyle.ForeColor`). Configuración común normalmente incluye un color de fondo, color de primer plano, propiedades de fuente y el espaciado de nodo. Propiedades de estilo se aplican en el siguiente orden de prioridad:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, o <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, según el tipo de nodo. Si el <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> la colección está definida, se aplica en este momento, reemplazando las demás propiedades de estilo de nodo.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.  
  
 Si tiene que generar tabla de menús de navegación de estilo de contenido donde los nodos de un determinado nivel deben tener el mismo aspecto, independientemente de si tienen nodos secundarios, se puede utilizar el <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> propiedad en lugar de establecer las propiedades de estilo individuales.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> propiedad para controlar el aspecto de los nodos primarios en el <xref:System.Web.UI.WebControls.TreeView> control.  
  
 [!code-aspx-csharp[TreeViewParentNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewParentNodeStyle/CS/treeviewparentnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewParentNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewParentNodeStyle/VB/treeviewparentnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public char PathSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PathSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PathSeparator As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PathSeparator { char get(); void set(char value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue('/')</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el carácter que se utiliza para delimitar los valores de nodo especificados por la propiedad <see cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />.</summary>
        <value>El carácter utilizado para delimitar los valores de nodo especificados en la propiedad <see cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />. El valor predeterminado es una barra diagonal (/).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> propiedad contiene una lista separada por delimitador de valores de los nodos que forman una ruta de acceso desde el nodo raíz al nodo actual. Use la <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A> propiedad para especificar el delimitador de caracteres que se usa para separar los valores de nodo. Este valor se utiliza normalmente al analizar la lista de los valores individuales.  
  
 Dependiendo del texto que se muestra en el <xref:System.Web.UI.WebControls.TreeView> (control), el carácter delimitador posible que deba cambiarse para evitar cualquier conflicto. Por ejemplo, si establece el carácter delimitador en una coma, el texto mostrado no debería contener ninguna coma; en caso contrario, el <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> propiedad no se puede analizar con precisión.  
  
 El valor de esta propiedad se almacena en estado de vista.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A> propiedad para especificar el carácter delimitador para el <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> propiedad de un nodo. Este valor, a continuación, se utiliza para analizar el <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> propiedad de los valores individuales.  
  
 [!code-aspx-csharp[TreeViewPathSeparator2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPathSeparator2/CS/treeviewpathseparatorcs.aspx#1)]
 [!code-aspx-vb[TreeViewPathSeparator2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPathSeparator2/VB/treeviewpathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.PerformDataBinding" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea todos los nodos basándose en el origen de datos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.TreeView.PerformDataBinding%2A> método es un método auxiliar que llama a la <xref:System.Web.UI.WebControls.TreeView> control para enlazar el origen de datos especificado al control.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Dado que la <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> método está sellado, debe invalidar el <see cref="M:System.Web.UI.WebControls.TreeView.PerformDataBinding" /> método, si necesita realizar cualquier tarea adicional al enlazar datos.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PopulateNodesFromClient">
      <MemberSignature Language="C#" Value="public bool PopulateNodesFromClient { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PopulateNodesFromClient" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      <MemberSignature Language="VB.NET" Value="Public Property PopulateNodesFromClient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PopulateNodesFromClient { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si los datos de nodo se rellenan a demanda del cliente.</summary>
        <value>
          <see langword="true" /> para rellenar los datos del nodo de árbol a demanda del cliente; de lo contrario, <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A veces, no es práctico estáticamente predefinir la estructura de árbol debido al tamaño de los datos o el contenido personalizado que depende proporcionados por el usuario. Por este motivo, el <xref:System.Web.UI.WebControls.TreeView> control admite el llenado de nodos dinámico. Cuando el <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> propiedad de un nodo se establece en `true`, ese nodo se rellena en tiempo de ejecución cuando se expande el nodo.  
  
 Además de rellenar nodos a petición, es posible rellenar los nodos directamente en un explorador de cliente admitidos. Cuando el <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> propiedad está establecida en `true`, se llama a un servicio desde el cliente para rellenar los nodos de árbol, lo que elimina la necesidad de enviar datos al servidor. En caso contrario, el <xref:System.Web.UI.WebControls.TreeView> control devuelve datos al servidor para rellenar los nodos.  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> propiedad debe establecerse en `true` en orden para el <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> propiedad se establezca en `true`.  
  
 Para rellenar un nodo en el cliente, establezca primero la <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> propiedad `true` y, a continuación, establezca el <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> propiedad para que el nodo `true`. A continuación, defina un método de control de eventos para el <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> eventos que se rellena mediante programación el nodo. Un método típico de control de eventos recupera datos del nodo de un origen de datos, coloca los datos en una estructura de nodo y, a continuación, agrega la estructura del nodo para el <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> colección del nodo que se va a rellenar. Crear una estructura de nodos mediante la adición de <xref:System.Web.UI.WebControls.TreeNode> objetos a la <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> colección de un nodo primario.  
  
> [!NOTE]
>  Cuando el <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> propiedad de un nodo se establece en `true`, el nodo se debe rellenar de forma dinámica. No se pueden anidar mediante declaración otro nodo debajo de él; en caso contrario, se producirá un error en la página.  
  
> [!NOTE]
>  Se admite la característica de llenado de nodos en el cliente en los exploradores que admiten scripts de devolución de llamada. Para comprobar si un explorador admite el acceso de las secuencias de comandos de devolución de llamada, use la <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> propiedad de la <xref:System.Web.HttpBrowserCapabilities> clase. Puede tener acceso a la instancia de la <xref:System.Web.HttpBrowserCapabilities> clase para la solicitud actual a través de la <xref:System.Web.HttpRequest.Browser%2A> propiedad de la <xref:System.Web.HttpRequest> clase.  
  
 El valor de esta propiedad se almacena en estado de vista.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> propiedad para habilitar el rellenado de cliente de los nodos en el <xref:System.Web.UI.WebControls.TreeView> control. Tenga en cuenta que cuando se habilita el relleno de nodos del lado cliente, los nodos se rellenan dinámicamente en el cliente, sin necesidad de enviar datos al servidor.  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaiseCallbackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaiseCallbackEvent(System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Cadena que representa un argumento de evento opcional que se pasará al controlador de eventos.</param>
        <summary>Genera el evento de devolución de llamada con los argumentos especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El método <xref:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent%2A> es un método auxiliar para el método <xref:System.Web.UI.WebControls.TreeView.System%23Web%23UI%23ICallbackEventHandler%23RaiseCallbackEvent%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Cadena que representa un argumento de evento opcional que se pasará al controlador de eventos.</param>
        <summary>Permite que el control <see cref="T:System.Web.UI.WebControls.TreeView" /> procese un evento provocado al devolver un formulario al servidor. El método <see cref="M:System.Web.UI.WebControls.TreeView.RaisePostBackEvent(System.String)" /> es un método auxiliar para el método <see cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La página pasa el valor de la `eventArgument` parámetro a la <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> método del control que implementa el <xref:System.Web.UI.IPostBackEventHandler?displayProperty=nameWithType> interfaz. Esto <xref:System.Web.UI.WebControls.TreeView> control también representa el elemento HTML que hace que se produzca el evento de postback. Si el control representa el script de cliente para enviar datos al servidor, el argumento de la secuencia de comandos se pasa en el `eventArgument` parámetro. Si se produce un evento de postback mediante un sencillo enviar al servidor, el `eventArgument` parámetro es `null`.  
  
 El <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> método proporciona la funcionalidad para muchos eventos que se implementan mediante controles de servidor HTML y Web.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostDataChangedEvent();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica al control <see cref="T:System.Web.UI.WebControls.TreeView" /> que debe notificar a la aplicación ASP.NET que el estado del control ha cambiado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para los eventos de cambio del <xref:System.Web.UI.WebControls.TreeView> control se generan a partir del <xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderBeginTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderBeginTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> que representa el flujo de salida para representar contenido HTML en el cliente.</param>
        <summary>Representa la etiqueta HTML de apertura del control en el sistema de escritura especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.TreeView.RenderBeginTag%2A> método la usan principalmente los programadores de controles.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> que representa el flujo de salida utilizado para escribir contenido en una página web.</param>
        <summary>Representa los nodos del control <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.TreeView.RenderContents%2A> método para representar los nodos en el <xref:System.Web.UI.WebControls.TreeView> control al cliente.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> que representa el flujo de salida para representar contenido HTML en el cliente.</param>
        <summary>Representa la etiqueta HTML de cierre del control en el sistema de escritura especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.TreeView.RenderEndTag%2A> método la usan principalmente los programadores de controles.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RootNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle RootNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle RootNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ RootNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una referencia al objeto <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> que permite establecer la apariencia del nodo raíz del control <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <value>Referencia al objeto <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> que representa el estilo del nodo raíz en el control <see cref="T:System.Web.UI.WebControls.TreeView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> propiedad para controlar la apariencia del nodo raíz en el <xref:System.Web.UI.WebControls.TreeView> control. Esta propiedad es de solo lectura; Sin embargo, puede establecer las propiedades de la <xref:System.Web.UI.WebControls.TreeNodeStyle> objeto devuelve. Las propiedades pueden establecerse mediante declaración con el formato `Property-Subproperty`, donde `Subproperty` es una propiedad de la <xref:System.Web.UI.WebControls.TreeNodeStyle> objeto (por ejemplo, `RootNodeStyle-ForeColor`). Las propiedades también pueden establecerse mediante programación con el formato `Property.Subproperty` (por ejemplo, `RootNodeStyle.ForeColor`). Configuración común normalmente incluye un color de fondo, color de primer plano, propiedades de fuente y el espaciado de nodo. Propiedades de estilo se aplican en el siguiente orden de prioridad:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, o <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, según el tipo de nodo. Si el <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> la colección está definida, se aplica en este momento, reemplazando las demás propiedades de estilo de nodo.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.  
  
 Si tiene que generar tabla de menús de navegación de estilo de contenido donde los nodos de un determinado nivel deben tener el mismo aspecto, independientemente de si tienen nodos secundarios, se puede utilizar el <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> propiedad en lugar de establecer las propiedades de estilo individuales.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> propiedad para controlar la apariencia del nodo raíz en el <xref:System.Web.UI.WebControls.TreeView> control.  
  
 [!code-aspx-csharp[TreeViewRootNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewRootNodeStyle/CS/treeviewrootnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewRootNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewRootNodeStyle/VB/treeviewrootnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Guarda el estado del control <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <returns>El estado de vista actual del control de servidor; de lo contrario, <see langword="null" />, si no hay ningún estado de vista asociado al control.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedNode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode SelectedNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNode SelectedNode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNode ^ SelectedNode { System::Web::UI::WebControls::TreeNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un objeto <see cref="T:System.Web.UI.WebControls.TreeNode" /> que representa el nodo seleccionado del control <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <value>Objeto <see cref="T:System.Web.UI.WebControls.TreeNode" /> que representa el nodo seleccionado en el control <see cref="T:System.Web.UI.WebControls.TreeView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El texto de un nodo en el <xref:System.Web.UI.WebControls.TreeView> control puede estar en uno de dos modos: modo de selección y el modo de exploración. De forma predeterminada, un nodo está en modo de selección. Para poner un nodo en modo de exploración, establezca la <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> propiedad del nodo en un valor distinto de una cadena vacía (""). Para poner un nodo en modo de selección, establezca el <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> propiedad del nodo en una cadena vacía ("").  
  
 Cuando un nodo está en modo de selección, el usuario puede seleccionar un nodo haciendo clic en el texto del nodo. Use la <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> propiedad para determinar qué nodo está seleccionado en el <xref:System.Web.UI.WebControls.TreeView> control.  
  
> [!NOTE]
>  No puede ser un nodo seleccionado cuando la <xref:System.Web.UI.WebControls.TreeView> control muestra hipervínculos. Cuando se muestran hipervínculos, el <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> propiedad siempre devuelve `null`.  
  
 Cuando el usuario selecciona un nodo diferente en el <xref:System.Web.UI.WebControls.TreeView> control haciendo clic en el texto en el nuevo nodo, el <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> se genera el evento, de forma predeterminada. Puede especificar un evento diferente estableciendo la <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> propiedad para la propiedad. En la siguiente tabla se enumeran las opciones disponibles.  
  
|Acción de selección|Descripción|  
|----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand>|Alterna el nodo entre expandido y contraído. Genera el <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> o <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> eventos, según corresponda.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.None>|No provoca ningún evento cuando se selecciona un nodo.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Select>|Genera el evento <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> cuando se selecciona un nodo.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand>|Provoca los eventos <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> y <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> cuando se selecciona un nodo. Solo se expanden los nodos, nunca se contraen.|  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> no se representa para un nodo con su <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> propiedad establecida en `TreeNodeSelectAction.None`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> propiedad para determinar el valor del nodo seleccionado en el <xref:System.Web.UI.WebControls.TreeView> control.  
  
 [!code-aspx-csharp[TreeViewSelectedNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewSelectedNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="SelectedNodeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedNodeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedNodeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedNodeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectedNodeChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se desencadena cuando se selecciona un nodo en el control <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> evento se desencadena cuando se selecciona un nodo en el <xref:System.Web.UI.WebControls.TreeView> control. Esto le permite proporcionar un método de control de eventos que realiza una rutina personalizada, como actualizar el contenido mostrado, siempre que se produce este evento.  
  
 Opcionalmente, puede establecer el <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> propiedad de un nodo especificar qué evento se provoca cuando se selecciona ese nodo. En la siguiente tabla se enumeran las opciones disponibles.  
  
|Acción de selección|Descripción|  
|----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand>|Alterna el nodo entre expandido y contraído. Genera el <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> o <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> eventos, según corresponda.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.None>|No provoca ningún evento cuando se selecciona un nodo.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Select>|Genera el evento <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> cuando se selecciona un nodo.|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand>|Provoca los eventos <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> y <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> cuando se selecciona un nodo. Solo se expanden los nodos, nunca se contraen.|  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> no se representa para un nodo con su <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> propiedad establecida en `TreeNodeSelectAction.None`.  
  
 El <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> se desencadena el evento solo en post cuando un usuario hace clic en un nodo. El evento no se desencadena si el <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> se cambia mediante programación la propiedad.  
  
 Para obtener más información sobre el control de eventos, vea [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> evento para actualizar una <xref:System.Web.UI.WebControls.Label> controlar cuando se selecciona un nodo en el <xref:System.Web.UI.WebControls.TreeView> control.  
  
 [!code-aspx-csharp[TreeViewSelectedNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewSelectedNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SelectedNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle SelectedNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle SelectedNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ SelectedNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> que controla el aspecto del nodo seleccionado en el control <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <value>Objeto <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> que representa el estilo del nodo seleccionado en el control <see cref="T:System.Web.UI.WebControls.TreeView" />. El valor predeterminado es <see langword="null" />, que indica que no se ha establecido la propiedad <see cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A> propiedad para controlar el aspecto del nodo seleccionado en el <xref:System.Web.UI.WebControls.TreeView> control. Esta propiedad es de solo lectura; Sin embargo, puede establecer las propiedades de la <xref:System.Web.UI.WebControls.TreeNodeStyle> objeto devuelve. Las propiedades pueden establecerse mediante declaración con el formato `Property-Subproperty`, donde `Subproperty` es una propiedad de la <xref:System.Web.UI.WebControls.TreeNodeStyle> objeto (por ejemplo, `SelectedNodeStyle-ForeColor`). Las propiedades también pueden establecerse mediante programación con el formato `Property.Subproperty` (por ejemplo, `SelectedNodeStyle.ForeColor`). Configuración común normalmente incluye un color de fondo, color de primer plano, propiedades de fuente y el espaciado de nodo. Propiedades de estilo se aplican en el siguiente orden de prioridad:  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, o <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, según el tipo de nodo. Si el <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> la colección está definida, se aplica en este momento, reemplazando las demás propiedades de estilo de nodo.  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A> propiedad para controlar el aspecto del nodo seleccionado en el <xref:System.Web.UI.WebControls.TreeView> control.  
  
 [!code-aspx-csharp[TreeViewSelectedNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewSelectedNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public string SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedValue { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor del nodo seleccionado.</summary>
        <value>Valor del nodo seleccionado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.TreeView.SelectedValue%2A> propiedad proporciona una manera cómoda para determinar el valor del nodo seleccionado. Esta propiedad devuelve simplemente el valor de la <xref:System.Web.UI.WebControls.TreeNode.Value%2A> propiedad de la <xref:System.Web.UI.WebControls.TreeNode> objeto que hace referencia el <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> propiedad. Si ningún nodo está seleccionado actualmente en el <xref:System.Web.UI.WebControls.TreeView> controlar, una cadena vacía ("") se devuelve.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataBound">
      <MemberSignature Language="C#" Value="protected void SetNodeDataBound (System.Web.UI.WebControls.TreeNode node, bool dataBound);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataBound(class System.Web.UI.WebControls.TreeNode node, bool dataBound) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNodeDataBound (node As TreeNode, dataBound As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNodeDataBound(System::Web::UI::WebControls::TreeNode ^ node, bool dataBound);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataBound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="node">Objeto <see cref="T:System.Web.UI.WebControls.TreeNode" /> que se va a establecer.</param>
        <param name="dataBound">
          Es <see langword="true" /> para establecer el nodo como enlazado a datos; de lo contrario, es <see langword="false" />.</param>
        <summary>Permite a una clase derivada establecer si el control <see cref="T:System.Web.UI.WebControls.TreeNode" /> especificado está enlazado a datos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.TreeView.SetNodeDataBound%2A> método para indicar si especificado <xref:System.Web.UI.WebControls.TreeNode> está enlazado a datos.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>El <see cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" /> método se proporciona para permitir que un control que se deriva de la <see cref="T:System.Web.UI.WebControls.TreeView" /> control para establecer el <see cref="P:System.Web.UI.WebControls.TreeNode.DataBound" /> propiedad en un nodo.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataItem">
      <MemberSignature Language="C#" Value="protected void SetNodeDataItem (System.Web.UI.WebControls.TreeNode node, object dataItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataItem(class System.Web.UI.WebControls.TreeNode node, object dataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNodeDataItem (node As TreeNode, dataItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNodeDataItem(System::Web::UI::WebControls::TreeNode ^ node, System::Object ^ dataItem);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node">Objeto <see cref="T:System.Web.UI.WebControls.TreeNode" /> que se va a establecer.</param>
        <param name="dataItem">Elemento de datos de <see cref="T:System.Web.UI.WebControls.TreeNode" />.</param>
        <summary>Permite que una clase derivada establezca el elemento de datos para el control <see cref="T:System.Web.UI.WebControls.TreeNode" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.TreeView.SetNodeDataItem%2A> método para especificar el elemento de datos para el elemento especificado <xref:System.Web.UI.WebControls.TreeNode> control.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataPath">
      <MemberSignature Language="C#" Value="protected void SetNodeDataPath (System.Web.UI.WebControls.TreeNode node, string dataPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataPath(class System.Web.UI.WebControls.TreeNode node, string dataPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNodeDataPath (node As TreeNode, dataPath As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNodeDataPath(System::Web::UI::WebControls::TreeNode ^ node, System::String ^ dataPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">Objeto <see cref="T:System.Web.UI.WebControls.TreeNode" /> que se va a establecer.</param>
        <param name="dataPath">Ruta de acceso a datos de <see cref="T:System.Web.UI.WebControls.TreeNode" />.</param>
        <summary>Permite que una clase derivada establezca la ruta de datos para el control <see cref="T:System.Web.UI.WebControls.TreeNode" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.TreeView.SetNodeDataPath%2A> método para establecer la ruta de acceso de datos para el elemento especificado <xref:System.Web.UI.WebControls.TreeNode> control.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ShowCheckBoxes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeTypes ShowCheckBoxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TreeNodeTypes ShowCheckBoxes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowCheckBoxes As TreeNodeTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeTypes ShowCheckBoxes { System::Web::UI::WebControls::TreeNodeTypes get(); void set(System::Web::UI::WebControls::TreeNodeTypes value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica qué tipos de nodo mostrarán una casilla en el control <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <value>Combinación bit a bit de los valores de <see cref="T:System.Web.UI.WebControls.TreeNodeTypes" />. El valor predeterminado es <see langword="TreeNodeType.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para proporcionar compatibilidad de selección de varios nodos en el <xref:System.Web.UI.WebControls.TreeView> control, puede mostrar casillas de verificación junto a la imagen de un nodo. Use la <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> propiedad para especificar qué tipos de nodo mostrarán una casilla de verificación. Por ejemplo, si esta propiedad se establece en `TreeNodeType.Parent`, se muestran casillas de verificación para cada nodo primario del árbol. En la tabla siguiente se enumera los valores válidos para esta propiedad.  
  
|Tipo de nodo|Descripción|  
|---------------|-----------------|  
|`TreeNodeType.All`|Casillas de verificación se muestran para todos los nodos.|  
|`TreeNodeType.Leaf`|Casillas de verificación se muestran para todos los nodos de hoja.|  
|`TreeNodeType.None`|No se muestran casillas de verificación.|  
|`TreeNodeType.Parent`|Casillas de verificación se muestran para todos los nodos primarios.|  
|`TreeNodeType.Root`|Casillas de verificación se muestran para todos los nodos raíz.|  
  
 El tipo de enumeración que se usa para la <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> propiedad es una enumeración de marca, lo que permite combinar valores mediante operaciones bit a bit. Por ejemplo, para mostrar casillas de verificación de los nodos primarios y de hoja, utilice el operador OR bit a bit para combinar el `TreeNodeType.Parent` y `TreeNodeType.Leaf` valores.  
  
 Para determinar qué nodos tienen su casilla activada, recorra en iteración los nodos de la <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> colección.  
  
> [!NOTE]
>  Puede invalidar la <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> estableciendo el <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> propiedad para cada nodo.  
  
 Si tiene que proporcionar compatibilidad de selección única, considere el uso de la <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> propiedad.  
  
 El valor de esta propiedad se almacena en estado de vista.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> propiedad para mostrar y ocultar las casillas de verificación para los tipos de nodo.  
  
 [!code-aspx-csharp[TreeViewShowCheckBoxes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowCheckBoxes/CS/treeviewshowcheckboxescs.aspx#1)]
 [!code-aspx-vb[TreeViewShowCheckBoxes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowCheckBoxes/VB/treeviewshowcheckboxesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El valor de combinación bit a bit está fuera del intervalo de la enumeración <see cref="T:System.Web.UI.WebControls.TreeNodeTypes" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeTypes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="ShowExpandCollapse">
      <MemberSignature Language="C#" Value="public bool ShowExpandCollapse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowExpandCollapse" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowExpandCollapse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowExpandCollapse { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se muestran los indicadores de nodo de expansión.</summary>
        <value>
          Es <see langword="true" /> para mostrar los indicadores de nodo de expansión; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Indicadores de nodo de expansión se usan para mostrar si un nodo está expandido, contraído o no expandible. Use la <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> propiedad para especificar si los indicadores de nodo de expansión se muestran en el <xref:System.Web.UI.WebControls.TreeView> control.  
  
 Cuando el <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> propiedad está establecida en `true`, el <xref:System.Web.UI.WebControls.TreeView> control muestra un signo más (+) o signo menos (-) o una imagen de marcador de posición junto a un nodo para indicar si el nodo es expansible, contraíble o no contraíble, respectivamente. Puede especificar imágenes personalizadas estableciendo primero la <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> propiedad `TreeViewImageSet.Custom`y, a continuación, establecer el <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, y <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> propiedades a las direcciones URL de las imágenes personalizadas. Si no se especifica ninguna imagen, se utilizan las imágenes predeterminadas.  
  
 El valor de esta propiedad se almacena en estado de vista.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> propiedad para mostrar y ocultar los iconos de nodo de expansión.  
  
 [!code-aspx-csharp[TreeViewShowExpandCollapse#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowExpandCollapse/CS/treeviewshowexpandcollapsecs.aspx#1)]
 [!code-aspx-vb[TreeViewShowExpandCollapse#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowExpandCollapse/VB/treeviewshowexpandcollapsevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="ShowLines">
      <MemberSignature Language="C#" Value="public bool ShowLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowLines" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowLines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowLines { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica se muestran si las líneas que conectan los nodos secundarios a los nodos primarios.</summary>
        <value>
          <see langword="true" /> para mostrar las líneas que conectan los nodos; de lo contrario, <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> propiedad para especificar si se muestran las líneas que se conectan los nodos secundarios a los nodos primarios. Cuando esta propiedad se establece en `true`, <xref:System.Web.UI.WebControls.TreeView> control busca la carpeta accesible desde la Web que se especifica mediante el <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> propiedad para las imágenes de línea.  
  
> [!NOTE]
>  Si el <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> propiedad no está establecida, el <xref:System.Web.UI.WebControls.TreeView> control utilizará las imágenes predeterminadas integradas (20 x 20 píxeles).  
  
 El valor de esta propiedad se almacena en estado de vista.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> propiedad para mostrar las líneas que conectan los nodos en el <xref:System.Web.UI.WebControls.TreeView> control. Asegúrese de usar la herramienta Diseñador de línea para crear un conjunto de imágenes de líneas y colocarlos en una carpeta denominada LineImages dentro del directorio para la aplicación de ejemplo.  
  
 [!code-aspx-csharp[TreeViewLineImagesFolderUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/CS/treeviewlineimagesfolderurlcs.aspx#1)]
 [!code-aspx-vb[TreeViewLineImagesFolderUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/VB/treeviewlineimagesfolderurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      </Docs>
    </Member>
    <Member MemberName="SkipLinkText">
      <MemberSignature Language="C#" Value="public string SkipLinkText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkipLinkText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SkipLinkText" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipLinkText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SkipLinkText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que se utiliza para representar texto alternativo para que los lectores de pantalla omitan el contenido del control.</summary>
        <value>Cadena que representa el control <see cref="T:System.Web.UI.WebControls.TreeView" /> como texto alternativo con una imagen invisible, a modo de indicación para los lectores de pantalla. El valor predeterminado es "Omitir vínculos de navegación".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> es una propiedad que se puede establecer para que una página Web más o menos accesible. Páginas Web que incluyen contenido que se repite puede proporcionar un mecanismo para que los usuarios de lectores de pantalla que se va a evitar el contenido se lea en voz alta.  
  
 El <xref:System.Web.UI.WebControls.TreeView> control proporciona el <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> propiedad como una manera para todo el control se omitan los lectores de pantalla. Si el <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> propiedad está establecida, se representa una imagen invisible con texto alternativo, dando al usuario la opción de saltar al final del control. Los lectores de pantalla leen el texto alternativo en voz alta, mientras que la imagen ocupa espacio en un único píxel. Para un control preciso de los píxeles en la representación de la página, establezca la <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> propiedad en una cadena vacía ("") y proporcionar su propio mecanismo para omitir el árbol.  
  
 El <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> propiedad se establece en la cadena vacía de forma predeterminada, lo que hace que los lectores de pantalla no omitan el control.  
  
 El valor de esta propiedad se almacena en estado de vista.  
  
 El valor de esta propiedad, cuando se establece, pueden guardar automáticamente en un archivo de recursos utilizando una herramienta de diseñador. Para obtener más información, consulte <xref:System.ComponentModel.LocalizableAttribute> y [globalización y localización](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.GetCallbackResult">
      <MemberSignature Language="C#" Value="string ICallbackEventHandler.GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.ICallbackEventHandler.GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Function GetCallbackResult () As String Implements ICallbackEventHandler.GetCallbackResult" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.ICallbackEventHandler.GetCallbackResult() = System::Web::UI::ICallbackEventHandler::GetCallbackResult;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.GetCallbackResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve el resultado de un evento de devolución de llamada que tiene como destino un control.</summary>
        <returns>El resultado de la devolución de llamada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.TreeView> controlar implementa la <xref:System.Web.UI.ICallbackEventHandler> interfaz y se utiliza el <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> para recuperar datos y el <xref:System.Web.UI.WebControls.TreeView.GetCallbackResult%2A> método para devolver los datos recuperados al control.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="void ICallbackEventHandler.RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaiseCallbackEvent (eventArgument As String) Implements ICallbackEventHandler.RaiseCallbackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System::String ^ eventArgument) = System::Web::UI::ICallbackEventHandler::RaiseCallbackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Cadena que representa un argumento de evento opcional que se pasará al controlador de eventos.</param>
        <summary>Genera el evento de devolución de llamada con los argumentos especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los programadores de controles deben reemplazar el <xref:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Identificador de clave del control.</param>
        <param name="postCollection">Colección de todos los valores de nombre entrantes.</param>
        <summary>Procesa los datos de postback del control <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <returns>
          Es <see langword="true" /> si el estado del control <see cref="T:System.Web.UI.WebControls.TreeView" /> ha cambiado a consecuencia del evento de postback; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los programadores de controles deben reemplazar el <xref:System.Web.UI.WebControls.TreeView.LoadPostData%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica al control <see cref="T:System.Web.UI.WebControls.TreeView" /> que debe notificar a la aplicación ASP.NET que el estado del control ha cambiado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los programadores de controles deben reemplazar el <xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Cadena que representa un argumento de evento opcional que se pasará al controlador de eventos.</param>
        <summary>Permite que el control <see cref="T:System.Web.UI.WebControls.TreeView" /> procese un evento provocado al devolver un formulario al servidor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los programadores de controles deben reemplazar el <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor <see cref="T:System.Web.UI.HtmlTextWriterTag" /> del control <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <value>Siempre devuelve un valor <see cref="F:System.Web.UI.HtmlTextWriterTag.Div" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.TreeView.TagKey%2A> propiedad permite que la secuencia de salida escriba el HTML adecuado para el <xref:System.Web.UI.WebControls.TreeView> control.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Puede invalidar la <see cref="P:System.Web.UI.WebControls.TreeView.TagKey" /> propiedad para especificar qué <see cref="T:System.Web.UI.HtmlTextWriterTag" /> valor que se usará para un control derivado.</para>
        </block>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la ventana o el marco de destino donde se mostrará el contenido de una página Web asociada a un nodo.</summary>
        <value>Ventana o marco de destino en que se debe mostrar el contenido de página web vinculado. Los valores deben empezar con una letra de la A a la Z (sin distinción de mayúsculas y minúsculas), excepto en el caso de ciertos valores especiales que empiezan con un carácter de subrayado, como se muestra en la siguiente tabla.  
  
 <list type="table"><listheader><term> Valor de destino  
  
 </term><description> Representa el contenido de  
  
 </description></listheader><item><term><see langword="_blank" /></term><description> Una nueva ventana sin marcos.  
  
 </description></item><item><term><see langword="_parent" /></term><description> El elemento primario inmediato del conjunto de marcos.  
  
 </description></item><item><term><see langword="_search" /></term><description> El panel de búsqueda.  
  
 </description></item><item><term><see langword="_self" /></term><description> El marco con el foco.  
  
 </description></item><item><term><see langword="_top" /></term><description> La ventana completa sin marcos.  
  
 </description></item></list><block subset="none" type="note"><para>  
 Consulte la documentación del explorador para determinar si admite el valor <see langword="_search" />.  Por ejemplo, Microsoft Internet Explorer 5.0 y versiones posteriores admiten el valor de destino <see langword="_search" />.  
  
</para></block>  
  
 El valor predeterminado es una cadena vacía (""), que actualiza la ventana o marco con el foco.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.TreeView.Target%2A> propiedad para especificar la ventana o el marco en el que se va a mostrar contenido Web que está vinculado a un nodo cuando se hace clic en ese nodo.  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.TreeView.Target%2A> propiedad se representa como un `target` atributo. El `target` atributo `anchor` elementos no se permite en la definición de tipo de documento XHTML 1.1. No establezca la <xref:System.Web.UI.WebControls.TreeView.Target%2A> propiedad, si el resultado representado para el <xref:System.Web.UI.WebControls.TreeView> debe ser conforme a XHTML 1.1. Para obtener más información, consulte [estándares de XHTML en Visual Studio y ASP.NET](http://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97).  
>   
>  Al crear páginas Web accesibles, debe evitar usar el <xref:System.Web.UI.WebControls.TreeView.Target%2A> propiedad para dirigirse a otra ventana. Para obtener más información, consulte [controles ASP.NET y accesibilidad](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
 El valor de esta propiedad se almacena en estado de vista.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.Target%2A> propiedad para mostrar el contenido Web que está vinculado a un nodo en una nueva ventana cuando se hace clic en ese nodo.  
  
 [!code-aspx-csharp[TreeViewTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTarget/CS/treeviewtargetcs.aspx#1)]
 [!code-aspx-vb[TreeViewTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTarget/VB/treeviewtargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Target" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Efectúa el seguimiento de los cambios en el estado de vista del control <see cref="T:System.Web.UI.WebControls.TreeView" /> para poder almacenarlos en el objeto <see cref="T:System.Web.UI.StateBag" /> del control. Se obtiene acceso al objeto <see cref="T:System.Web.UI.StateBag" /> a través de la propiedad <see cref="P:System.Web.UI.Control.ViewState" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.TreeView.TrackViewState%2A> método se invalida para marcar el punto de partida para comenzar el seguimiento y guardar cambios en el control como parte del estado de vista para el control.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeCheckChanged">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCheckChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCheckChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeCheckChanged As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeCheckChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando una casilla del control <see cref="T:System.Web.UI.WebControls.TreeView" /> cambia de estado entre cada envío al servidor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> evento se desencadena cuando una casilla de verificación en el <xref:System.Web.UI.WebControls.TreeView> control cambia el estado entre cada envío al servidor. Esto le permite proporcionar un método de control de eventos que realiza una rutina personalizada, como actualizar una base de datos o el contenido mostrado, siempre que se produce este evento.  
  
 Aunque el <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> evento se desencadena en la devolución, cambiar una casilla de verificación no provoca una devolución de datos.  
  
 Para obtener más información sobre el control de eventos, vea [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> evento para actualizar una <xref:System.Web.UI.WebControls.Label> controlar cuándo las casillas de verificación de la <xref:System.Web.UI.WebControls.TreeView> control cambian entre cada envío al servidor.  
  
 [!code-aspx-csharp[TreeViewCheckChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCheckChanged/CS/treeviewcheckchangedcs.aspx#1)]
 [!code-aspx-vb[TreeViewCheckChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCheckChanged/VB/treeviewcheckchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeCollapsed">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCollapsed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCollapsed" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeCollapsed As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeCollapsed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se desencadena cuando se contrae un nodo en el control <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> evento se desencadena cuando se contrae un nodo en el <xref:System.Web.UI.WebControls.TreeView> control. Esto le permite proporcionar un método de control de eventos que realiza una rutina personalizada siempre que se produce este evento.  
  
 Para obtener más información sobre el control de eventos, vea [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> eventos para actualizar el contenido de un <xref:System.Web.UI.WebControls.Label> controlar cuando el usuario lo contrae un nodo en el <xref:System.Web.UI.WebControls.TreeView> control.  
  
 [!code-aspx-csharp[TreeViewTreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeExpand/CS/treeviewtreenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeExpand/VB/treeviewtreenodeexpandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeDataBound As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeDataBound;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se desencadena cuando un elemento de datos se enlaza a un nodo en el control <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound> evento se desencadena cuando un elemento de datos se enlaza a un nodo en el <xref:System.Web.UI.WebControls.TreeView> control. Esto le permite proporcionar un método de control de eventos que realiza una rutina personalizada siempre que se produce este evento.  
  
 Para obtener más información sobre el control de eventos, vea [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos de código. El primer ejemplo de código muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound> evento para cambiar la imagen de un nodo cuando se cumple alguna condición. El segundo ejemplo de código proporciona datos XML de ejemplo para el primer ejemplo de código.  
  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound> evento para cambiar la imagen de un nodo cuando se cumple alguna condición. En este ejemplo funcione correctamente, debe copiar los datos XML de ejemplo, proporcionados después de este ejemplo de código, en un archivo denominado Book.xml. Además, asegúrese de proporcionar sus propias imágenes para que este ejemplo mostrar.  
  
 [!code-aspx-csharp[TreeViewTreeNodeDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/CS/treeviewtreenodedataboundcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/VB/treeviewtreenodedataboundvb.aspx#1)]  
  
 En el ejemplo de código siguiente se proporciona datos XML de ejemplo para el ejemplo de código anterior.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeExpanded">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeExpanded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeExpanded" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeExpanded As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeExpanded;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se desencadena cuando se expande un nodo en el control <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> evento se desencadena cuando se expande un nodo en el <xref:System.Web.UI.WebControls.TreeView> control. Esto le permite proporcionar un método de control de eventos que realiza una rutina personalizada siempre que se produce este evento.  
  
> [!NOTE]
>  Si el <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> propiedad de un nodo se establece en `TreeNodeSelectAction.Expand` o `TreeNodeSelectAction.SelectExpand`, <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> evento también se genera cuando se hace clic en ese nodo en el <xref:System.Web.UI.WebControls.TreeView> control.  
  
 Para obtener más información sobre el control de eventos, vea [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> eventos para actualizar el contenido de un <xref:System.Web.UI.WebControls.Label> controlar cuando el usuario expande un nodo en el <xref:System.Web.UI.WebControls.TreeView> control.  
  
 [!code-aspx-csharp[TreeViewTreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeExpand/CS/treeviewtreenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeExpand/VB/treeviewtreenodeexpandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodePopulate">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodePopulate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodePopulate" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodePopulate As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodePopulate;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aparece cuando un nodo con su propiedad <see cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" /> establecida en <see langword="true" /> se expande en el control <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A veces, no es práctico estáticamente predefinir la estructura de árbol debido al tamaño de los datos o el contenido personalizado que depende proporcionados por el usuario. Por este motivo, el <xref:System.Web.UI.WebControls.TreeView> control admite el llenado de nodos dinámico. Cuando el <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> propiedad de un nodo se establece en `true`, ese nodo se rellena en tiempo de ejecución cuando se expande el nodo.  
  
 Para rellenar dinámicamente un nodo, establezca primero la <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> propiedad para que el nodo `true`. A continuación, defina un método de control de eventos para el <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> eventos que rellena el nodo mediante programación. Un método típico de control de eventos recupera datos del nodo de un origen de datos, coloca los datos en una estructura de nodo y, a continuación, agrega la estructura del nodo para el <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> colección del nodo que se va a rellenar. Se crea una estructura de nodo mediante la adición de <xref:System.Web.UI.WebControls.TreeNode> objetos a la <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> colección de un nodo primario.  
  
> [!NOTE]
>  Cuando el <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> propiedad de un nodo se establece en `true`, el nodo se debe rellenar de forma dinámica. No se pueden anidar mediante declaración otro nodo debajo de él; en caso contrario, se producirá un error en la página.  
  
 Exploradores compatibles (exploradores compatibles con 4.0 de Microsoft Internet Explorer y versiones posteriores) también pueden aprovechar el llenado de nodos de cliente. Cuando se habilita, esto permite la <xref:System.Web.UI.WebControls.TreeView> control para rellenar un nodo dinámicamente en el cliente cuando se expande el nodo, lo que evita la necesidad de enviar datos al servidor. Para obtener más información sobre el llenado de nodos de cliente, consulte <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.  
  
 Para obtener más información sobre el control de eventos, vea [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> eventos para rellenar los nodos en el <xref:System.Web.UI.WebControls.TreeView> control dinámicamente en el servidor. Tenga en cuenta que la <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> propiedad está establecida en `false` para impedir que los eventos de expansión de nodo que se administran en el cliente.  
  
 [!code-aspx-csharp[TreeViewTreeNodePopulate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodePopulate/CS/treeviewtreenodepopulatecs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodePopulate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodePopulate/VB/treeviewtreenodepopulatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el control se debe representar como interfaz de usuario en la página.</summary>
        <value>
          Es <see langword="true" /> si el control está visible en la página; de lo contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Web.UI.WebControls.TreeView.Visible%2A> propiedad está establecida en `false`, no se representa el control.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
  </Members>
</Type>