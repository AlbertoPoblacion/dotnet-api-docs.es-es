<Type Name="ObjectDataSourceDisposingEventArgs" FullName="System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="513e9b62e6f83c25d0f5d5aef2c9e905e1686eb4" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36579982" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ObjectDataSourceDisposingEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSourceDisposingEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSourceDisposingEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSourceDisposingEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type ObjectDataSourceDisposingEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona datos para el evento <see cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" /> del control <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> clase se utiliza en el <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A> método para proporcionar acceso a la instancia del objeto comercial después de cualquier operación de datos que usa el <xref:System.Web.UI.WebControls.ObjectDataSource> control y el objeto comercial se llevan a cabo, pero antes de la empresa se destruye el objeto. El objeto de negocio se tiene acceso con el <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance%2A> propiedad. Mediante la adición de un delegado para controlar el <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> evento, se pueden tener acceso a los miembros expuestos públicamente del objeto comercial para realizar cualquier trabajo final o limpiar.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A> no se llama al método el <xref:System.Web.UI.WebControls.ObjectDataSource> el control, si el método que realiza operaciones de datos es un `static` método. Cuando el método es estático, no se crea ninguna instancia del objeto comercial.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource> control expone muchos eventos que puede controlar para trabajar con el objeto comercial subyacente en distintos momentos de su ciclo de vida. En la tabla siguiente se enumera los eventos y asociado <xref:System.EventArgs> clases y los delegados de controladores de eventos.  
  
|evento|EventArgs|EventHandler|  
|-----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>.<br /><br /> Se produce inmediatamente antes de que se crea la instancia del objeto comercial.|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>.<br /><br /> Se produce inmediatamente después de que se crea la instancia del objeto comercial.|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>.<br /><br /> Se produce antes de que se recuperen los datos.|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> y <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>.<br /><br /> Se producen antes de realiza una operación de inserción, actualización o eliminación.|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selected><br /><br /> Se produce una vez recuperados los datos.|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> y <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>.<br /><br /> Se produce una vez completada la operación de inserción, actualización o delete.|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>.<br /><br /> Se produce antes de que se destruye un objeto comercial.|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos de código. El primer ejemplo de código muestra cómo utilizar un <xref:System.Web.UI.WebControls.ObjectDataSource> control con un objeto comercial y un <xref:System.Web.UI.WebControls.GridView> control para mostrar información. El segundo ejemplo de código proporciona el objeto de negocio de nivel intermedio de ejemplo que utiliza el primer ejemplo de código.  
  
 En el ejemplo de código siguiente se muestra cómo utilizar un <xref:System.Web.UI.WebControls.ObjectDataSource> control con un objeto comercial y un <xref:System.Web.UI.WebControls.GridView> control para mostrar información. También puede trabajar con un objeto comercial que es muy costoso (en términos de tiempo o recursos) crear para cada operación de datos que realiza su página Web. Una manera de trabajar con un objeto caro podría ser crear una instancia de ella una vez y, a continuación, almacenarla en la caché para las operaciones posteriores en lugar de crear y destruir para cada operación de datos. En este ejemplo se demuestra este patrón. Puede controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> eventos para comprobar la memoria caché para un objeto en primer lugar y, a continuación, cree una instancia, solo si uno no está ya en la caché. A continuación, controlar el <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> eventos para almacenar en caché el objeto de negocios para un uso futuro, en lugar de destruirlo. En este ejemplo, el <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> objeto se establece en `true`, para dirigir el <xref:System.Web.UI.WebControls.ObjectDataSource> no llamar a la <xref:System.IDisposable.Dispose%2A> en la instancia.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 En el ejemplo de código siguiente se proporciona un ejemplo de un objeto comercial de nivel medio que utiliza el ejemplo de código anterior. El ejemplo de código consta de un objeto comercial básico, definido por el `EmployeeLogic` (clase), que es una clase que mantiene el estado y encapsula la lógica de negocios. Para obtener un ejemplo completo, debe compilar este código como una biblioteca y, a continuación, utilizar estas clases desde una página ASP.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/northwindemployee16.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/northwindemployee16.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
    <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceDisposingEventArgs (object objectInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object objectInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (objectInstance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceDisposingEventArgs(System::Object ^ objectInstance);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs : obj -&gt; System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" Usage="new System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs objectInstance" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="objectInstance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objectInstance">Objeto comercial con el que interactúa <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> para realizar operaciones de datos.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" /> usando el objeto especificado.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ObjectInstance">
      <MemberSignature Language="C#" Value="public object ObjectInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ObjectInstance" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ObjectInstance As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ObjectInstance { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ObjectInstance : obj" Usage="System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un objeto que representa el objeto comercial con el que realiza operaciones de datos el control <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <value>Objeto comercial que utiliza <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> para realizar operaciones de datos; en caso contrario, <see langword="null" />, si se pasa <see langword="null" /> a <see cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si los métodos de operación de datos (<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>, y <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>) son métodos de instancia, una instancia de la empresa de objeto se crea antes de que se ejecuta el método. Puede impedir que el objeto comercial se crea para cada llamada guardando el objeto en el <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance%2A> propiedad en el <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> controlador de eventos. En las siguientes <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> eventos, puede recuperar el objeto comercial desde el <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar un <xref:System.Web.UI.WebControls.ObjectDataSource> control con un objeto comercial y un <xref:System.Web.UI.WebControls.GridView> control para mostrar información. También puede trabajar con un objeto comercial que es muy costoso (en términos de tiempo o recursos) crear para cada operación de datos que realiza su página Web. Una manera de trabajar con un objeto caro podría ser crear una instancia de ella una vez y, a continuación, almacenarla en la caché para las operaciones posteriores en lugar de crear y destruir para cada operación de datos. En este ejemplo se demuestra este patrón. Puede controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> eventos para comprobar la memoria caché para un objeto en primer lugar y, a continuación, cree una instancia, solo si uno no está ya en la caché. A continuación, controlar el <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> eventos para almacenar en caché el objeto de negocios para un uso futuro, en lugar de destruirlo. En este ejemplo, el <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> clase se establece en `true`, para dirigir el <xref:System.Web.UI.WebControls.ObjectDataSource> no llamar a <xref:System.IDisposable.Dispose%2A> en la instancia.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance" />
      </Docs>
    </Member>
  </Members>
</Type>