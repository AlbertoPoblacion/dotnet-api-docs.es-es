<Type Name="WizardStepBase" FullName="System.Web.UI.WebControls.WizardStepBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5981e7c18390097f7357c75fda929484a656009d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36378239" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WizardStepBase : System.Web.UI.WebControls.View" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WizardStepBase extends System.Web.UI.WebControls.View" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WizardStepBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WizardStepBase&#xA;Inherits View" />
  <TypeSignature Language="C++ CLI" Value="public ref class WizardStepBase abstract : System::Web::UI::WebControls::View" />
  <TypeSignature Language="F#" Value="type WizardStepBase = class&#xA;    inherit View" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.View</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.WizardStepControlBuilder))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Implements the basic functionality required by a step in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No se puede crear directamente una instancia de la <xref:System.Web.UI.WebControls.WizardStepBase> clase. En su lugar, esta clase es heredada por la <xref:System.Web.UI.WebControls.WizardStep> clase y la <xref:System.Web.UI.WebControls.TemplatedWizardStep> clase para proporcionar la funcionalidad básica de un paso en un control que actúa como un asistente.  
  
 Puede derivar de la <xref:System.Web.UI.WebControls.WizardStepBase> clase para crear una clase personalizada que representa un único paso en un control de asistente.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
    <altmember cref="T:System.Web.UI.WebControls.Wizard" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WizardStepBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WizardStepBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowReturn">
      <MemberSignature Language="C#" Value="public virtual bool AllowReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowReturn" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.AllowReturn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowReturn { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowReturn : bool with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.AllowReturn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the user is allowed to return to the current step from a subsequent step in a <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> collection.</summary>
        <value>
          <see langword="true" /> Si el usuario puede volver al paso actual; en caso contrario, <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> propiedad puede utilizarse para exigir la exploración lineal en un <xref:System.Web.UI.WebControls.Wizard> control. Si cada paso tiene su <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> propiedad establecida en `false`, el usuario no podrá volver a un paso una vez se haya accedido. Un escenario donde se podría utilizar esta funcionalidad es para no permitir a un usuario para devolver a un paso una vez se ha completado debido a conservar los datos a una base de datos como cada paso se ha completado. Si guarda los datos después de cada paso y permitir al usuario volver a un paso y cambiar la información después de que se ha guardado, se dañe los datos guardados. Estableciendo la <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> propiedad `false`, una vez que el usuario ha dejado un paso, que no podrá volver a él y cambiar los valores.  
  
 El <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> propiedad determina cómo y cuándo la **anterior** botón no se representa. La tabla siguiente se describen los **anterior** botón el comportamiento de representación.  
  
|Escenario|Comportamiento|  
|--------------|--------------|  
|Lineal: Paso1 tiene <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> establecido en `false` y acción del usuario va al paso 2.|Paso 2 no muestra el **anterior** botón.|  
|No lineal: Paso1 tiene <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> establecido en `false` y acción del usuario va al paso 3.|Paso 3 no muestra el **anterior** botón.|  
|Botones de barra lateral: Paso 2 tiene <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> establecido en `false` , <xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> se establece en `true`, y un usuario hace clic en el botón de barra lateral.|No hay botones se deshabilitan automáticamente en la barra lateral cuando <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> está establecido en `false`. Si un usuario hace clic en el botón, se omite la acción.|  
|Lineal y no lineal con plantilla personalizada: el paso tiene una plantilla de navegación personalizados.|No automático oculta ni se muestra que se produce si <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> está establecido en `false` cuando utiliza una plantilla para la navegación. El **anterior** botón debe ser opcional en la plantilla.|  
|Mediante el Diseñador de Visual Studio y <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> : el control tiene 5 pasos, está trabajando en el paso 4 y ejecute la página.|Cuando el paso 4 es la <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>, la **anterior** botón que se representa. El **anterior** botón sólo estará oculta para <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> establecido en <xref:System.Web.UI.WebControls.WizardStepType.Step> cuando tenga el paso anterior en el historial de <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> establecido en `false`. Puesto que el paso 4 se representa primero y no hay ningún paso en el historial, el **anterior** botón no está oculto.|  
|Iniciar paso y la navegación no lineal: un usuario visita el paso 3 y el paso 4 y, a continuación, el paso 1 que tiene <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> establecido en <xref:System.Web.UI.WebControls.WizardStepType.Start>.|El asistente no agrega un **anterior** botón cuando el <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> está establecido en <xref:System.Web.UI.WebControls.WizardStepType.Start> sin tener en cuenta cómo el usuario navega a ese paso.|  
|Mismo paso en historial: Un usuario visita el paso 3 donde <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> está establecido en <xref:System.Web.UI.WebControls.WizardStepType.Step> y el usuario no confirma sus acciones. , A continuación, haga clic en el botón anterior en el paso 3.|El control de asistente comprueba si el **anterior** paso en el historial es el "mismo" que se encuentra el usuario. Si el paso es el mismo, el control de asistente examina el historial para determinar el paso "diferente" anterior y basa la presentación de la **anterior** botón y destino según el "paso diferente" en el historial.|  
  
> [!NOTE]
>  Cuando el <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> propiedad está establecida en `false`, pero la <xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> propiedad del control primario de <xref:System.Web.UI.WebControls.WizardStepBase> se establece en `true`, al hacer clic en un botón en el área de sidebar no tiene ningún efecto. Por lo general se muestra el área de la barra lateral para proporcionar navegación no lineal, por lo que si no se utiliza la funcionalidad de navegación no lineal, puede que desee establecer el <xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> propiedad `false`.  
  
 No se puede establecer esta propiedad por temas o temas de hoja de estilos. Para obtener más información, consulte <xref:System.Web.UI.ThemeableAttribute> y [ASP.NET temas y máscaras](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> propiedad para impedir que el usuario pueda volver a un paso en el <xref:System.Web.UI.WebControls.Wizard> control después de que se ha accedido a. En el ejemplo, el `Step1` paso tiene su <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> propiedad establecida en `false`. Después de que el usuario deja la `Step1` paso, no aparece ningún botón anterior en el `Step2` paso.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepBaseAllowReturn#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseAllowReturn/CS/wizardstepbaseallowreturncs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepBaseAllowReturn#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseAllowReturn/VB/wizardstepbaseallowreturnvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether themes apply to this control.</summary>
        <value>
          <see langword="true" /> Para usar temas; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> propiedad indica si los temas están habilitados para el <xref:System.Web.UI.WebControls.WizardStepBase> control. El <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> propiedad también afecta a si se habilitan los temas para los controles incluidos en su colección de controles. Cuando el <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> propiedad es `true`, directorio de temas de la aplicación se busca máscaras para los controles. Si no existe ninguna máscara para un control determinado en el directorio de temas, no se aplica una máscara. Cuando el <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> propiedad es `false`, no se busca en el directorio de temas y el valor de la <xref:System.Web.UI.Control.SkinID%2A> no se utiliza la propiedad.  
  
 Un control puede invalidar la <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> valor establecido por su control principal o por la página que lo contiene. Por ejemplo, si un <xref:System.Web.UI.WebControls.WizardStepBase> control tiene <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> establecido en `false`, puede aplicar temas selectivamente a controles secundarios contenidos en el paso del asistente estableciendo la <xref:System.Web.UI.Control.EnableTheming%2A> propiedad `true` en los controles secundarios individuales.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public override string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.ID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ID : string with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the programmatic identifier assigned to the server control.</summary>
        <value>El identificador de programación asignado al control.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> propiedad para identificar y hacer referencia a un control de paso de asistente determinado en una página de formularios Web Forms. El <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> valor se convierte en el nombre de la instancia del control en la página, lo que permite acceder fácilmente a un paso determinado en el código para esa página. Por ejemplo, si establece la <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> propiedad de un <xref:System.Web.UI.WebControls.WizardStepBase> control en "Step1", puede hacer referencia a los controles secundarios del paso del asistente en el código para esa página como `Step1.Controls`.  
  
 El <xref:System.Web.UI.WebControls.WizardStepBase> control garantiza que cada paso en un <xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A> control tiene un identificador único válido cuando se agregan o modifican en tiempo de diseño pasos. Por ejemplo, al establecer el <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> para un paso en tiempo de diseño, no puede coincidir con el identificador para otro paso contenido en el <xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A> control y no pueden coincidir con el <xref:System.Web.UI.Control.ID%2A> para el que contiene <xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A> control.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se define tres pasos del Asistente para un <xref:System.Web.UI.WebControls.Wizard> control en una página de formularios Web Forms. En el código de la página, las instancias de paso del asistente se denominan mediante sus valores de Id. y sí pueden hacer referencia en el código como `WizardStep1`, `WizardStep2`, y `WizardStep3`.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardActiveStep#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStep/CS/wizardactivestepcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardActiveStep#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStep/VB/wizardactivestepvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The property was set to an invalid identifier string at design time.  -or-  The property was set to the same identifier as the containing <see cref="P:System.Web.UI.WebControls.WizardStepBase.Wizard" /> control at design time.  -or-  The property was set to the same identifier as another step in the containing <see cref="P:System.Web.UI.WebControls.WizardStepBase.Wizard" /> control at design time.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="wizardStepBase.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">An <see cref="T:System.Object" /> that represents the that represents the control state to be restored.</param>
        <summary>Restores view-state information from a previous page request that was saved by the <see cref="M:System.Web.UI.WebControls.WebControl.SaveViewState" /> method.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.UI.WebControls.WizardStepBase.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name associated with a step in a control that acts as a wizard.</summary>
        <value>El nombre asociado a un paso de un control que actúa como un asistente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> propiedad devuelve una cadena que identifica un paso en un control de asistente. Si se especifica un valor para el <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> propiedad, el <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> propiedad devuelve ese valor. Si se especifica ningún valor para el <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> propiedad, el <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> propiedad devuelve el valor de la <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> propiedad. Si no se especifican valores para cada uno el <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> o <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> propiedad, el <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> propiedad devuelve `null`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.ID" />
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLoad : EventArgs -&gt; unit" Usage="wizardStepBase.OnLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">The <see cref="T:System.EventArgs" /> object that contains the event data.</param>
        <summary>Raises the <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /> event.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="wizardStepBase.RenderChildren writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream to render HTML content on the client.</param>
        <summary>Outputs the content of the <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> control's child controls to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object, which writes the content to be rendered on the client.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StepType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WizardStepType StepType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WizardStepType StepType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.StepType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StepType As WizardStepType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WizardStepType StepType { System::Web::UI::WebControls::WizardStepType get(); void set(System::Web::UI::WebControls::WizardStepType value); };" />
      <MemberSignature Language="F#" Value="member this.StepType : System.Web.UI.WebControls.WizardStepType with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.StepType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardStepType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the type of navigation user interface (UI) to display for a step in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</summary>
        <value>Uno de los valores de enumeración de <see cref="T:System.Web.UI.WebControls.WizardStepType" />. El valor predeterminado es <see langword="WizardStepType.Auto" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> propiedad para especificar el tipo de botones de navegación para mostrar en un paso de un <xref:System.Web.UI.WebControls.Wizard> control. Si especifica un valor para esta propiedad, todos los pasos marcarán como <xref:System.Web.UI.WebControls.WizardStepType.Complete> muestra en un estado deshabilitado en la barra lateral.  
  
 Si no especifica un valor para esta propiedad, el valor predeterminado es `WizardStepType.Auto`.  
  
 En la tabla siguiente se enumera las opciones disponibles para el <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> propiedad y el comportamiento resultante del paso:  
  
 `WizardStepType.Auto`  
 La interfaz de usuario que se representa para el paso de navegación está determinada por el orden en el que se declara el paso.  
  
 `WizardStepType.Complete`  
 El paso es el último que aparece. No presenta ningún botón de navegación.  
  
 `WizardStepType.Finish`  
 El paso es el paso de recopilación de datos final. Los botones anterior y finalizar se representan para la navegación.  
  
 `WizardStepType.Start`  
 El paso es la primera de ellas que aparezcan. No se representa un botón anterior.  
  
 `WizardStepType.Step`  
 El paso es cualquier paso entre el inicio y el paso Finalizar. Aparecen los botones de navegación anterior y siguiente. Este tipo de paso es útil para reemplazar el <xref:System.Web.UI.WebControls.WizardStepType.Auto> el paso, escriba.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The selected value is not one of the <see cref="T:System.Web.UI.WebControls.WizardStepType" /> enumeration values.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepType" />
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public virtual string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the title to use for a step in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control when the sidebar feature is enabled.</summary>
        <value>El título que se utilizará en un paso de un <see cref="T:System.Web.UI.WebControls.Wizard" /> controlar cuando se habilita la característica de sidebar. El valor predeterminado es una cadena vacía ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> propiedad para mostrar un título descriptivo para un paso en un <xref:System.Web.UI.WebControls.Wizard> controlar cuando se habilita la característica de sidebar. Si el <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> propiedad no está establecida y está habilitada la característica de sidebar, el valor de la <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> propiedad se muestra para el botón de barra lateral.  
  
 El valor de esta propiedad, cuando se establece, pueden guardar automáticamente en un archivo de recursos utilizando una herramienta de diseñador. Para obtener más información, consulte <xref:System.ComponentModel.LocalizableAttribute> y [globalización y localización](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> propiedad para mostrar un título descriptivo para un paso en el <xref:System.Web.UI.WebControls.Wizard> control. En el ejemplo, `Step1` no tiene su <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> establece la propiedad, por lo que aparece en el <xref:System.Web.UI.WebControls.Wizard> control como "WizardStep1". `Step2` ¿tiene su <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> establece la propiedad, por lo que aparece como "Paso 2".  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepBaseTitle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseTitle/CS/wizardstepbasetitlecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepBaseTitle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseTitle/VB/wizardstepbasetitlevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.Name" />
      </Docs>
    </Member>
    <Member MemberName="Wizard">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Wizard Wizard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Wizard Wizard" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Wizard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Wizard As Wizard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Wizard ^ Wizard { System::Web::UI::WebControls::Wizard ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Wizard : System.Web.UI.WebControls.Wizard" Usage="System.Web.UI.WebControls.WizardStepBase.Wizard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Wizard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Web.UI.WebControls.Wizard" /> control that is the parent of the object derived from <see cref="T:System.Web.UI.WebControls.WizardStepBase" />.</summary>
        <value>El <see cref="T:System.Web.UI.WebControls.Wizard" /> control que es el elemento primario del objeto derivado de <see cref="T:System.Web.UI.WebControls.WizardStepBase" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
      </Docs>
    </Member>
  </Members>
</Type>