<Type Name="Button" FullName="System.Web.UI.WebControls.Button">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4ef5181f43fba5a7c2d8ed99f7ff8c4dbc175734" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48664564" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Button : System.Web.UI.WebControls.WebControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IButtonControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Button extends System.Web.UI.WebControls.WebControl implements class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.IButtonControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Button" />
  <TypeSignature Language="VB.NET" Value="Public Class Button&#xA;Inherits WebControl&#xA;Implements IButtonControl, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class Button : System::Web::UI::WebControls::WebControl, System::Web::UI::IPostBackEventHandler, System::Web::UI::WebControls::IButtonControl" />
  <TypeSignature Language="F#" Value="type Button = class&#xA;    inherit WebControl&#xA;    interface IButtonControl&#xA;    interface IPostBackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IButtonControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:Button runat="server" Text="Button"&gt;&lt;/{0}:Button&gt;")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:Button runat=server Text="Button"&gt;&lt;/{0}:Button&gt;")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Muestra un control de botón de comando en la página web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En este tema:  
  
-   [Introducción](#Introduction)  
  
-   [Comportamiento de Postback de botón y eventos de servidor](#ButtonPostbackBehaviorandServerEvents)  
  
-   [Control de eventos de botón en el Script de cliente](#HandlingButtonEventsinClientScript)  
  
-   [Controles de botón y validación](#ButtonControlsAndValidation)  
  
-   [Botones en controles de datos](#ButtonsInDataControls)  
  
-   [Enlazar datos a los controles](#BindingDataToTheControls)  
  
-   [Uso de botones con controles UpdatePanel](#UsingButtonsWithUpdatePanelControls)  
  
-   [Sintaxis declarativa](#DeclarativeSyntax)  
  
<a name="Introduction"></a>   
## <a name="introduction"></a>Introducción  
 Use el <xref:System.Web.UI.WebControls.Button> control para crear un botón de comando en la página Web que permite a los usuarios para publicar una página en el servidor. El control desencadena un evento en el código de servidor que puede controlar para responder a la devolución de datos. También puede generar un evento en el script de cliente que puede controlar antes de que se envía la página o que se puede ejecutar y, a continuación, cancelar el envío de la página.  
  
> [!NOTE]
>  ASP.NET incluye varios tipos de controles de botón, cada uno de los cuales aparece de forma distinta en las páginas Web. Son el <xref:System.Web.UI.WebControls.Button> control, que se representa como un botón de comando; el <xref:System.Web.UI.WebControls.LinkButton> control, que se representa como un vínculo; y la <xref:System.Web.UI.WebControls.ImageButton> control, que se representa como una imagen; y el <xref:System.Web.UI.WebControls.ImageMap> control, que le permite crear un gráfico que tiene puntos de conexión que los usuarios pueden hacer clic. De forma predeterminada, todos los controles de botón envían la página al hacer clic en. También puede usar el <xref:System.Web.UI.HtmlControls.HtmlButton> y <xref:System.Web.UI.HtmlControls.HtmlInputButton> controles para crear botones en la página que se pueden programables en código del servidor. Para obtener más información sobre las diferencias entre los controles de servidor Web y HTML, vea [información general sobre controles de ASP.NET Web Server](http://msdn.microsoft.com/library/0d4854a3-6e79-4b7b-a27f-ac57cd9c2a84).  
  
 De forma predeterminada, un <xref:System.Web.UI.WebControls.Button> control es un botón de envío. Un botón de envío no tiene un nombre de comando (especificado por el <xref:System.Web.UI.WebControls.Button.CommandName%2A> propiedades) asociadas con el botón y simplemente devuelve realizar una copia de la página Web en el servidor. Puede proporcionar un controlador de eventos para el <xref:System.Web.UI.WebControls.Button.Click> eventos para controlar mediante programación las acciones realizan cuando se hace clic en el botón Enviar.  
  
 Un botón de comando tiene un nombre de comando asociado con el botón, como `Sort`, estableciendo el <xref:System.Web.UI.WebControls.Button.CommandName%2A> propiedad. Esto le permite crear varios <xref:System.Web.UI.WebControls.Button> controles en un servidor Web, página y determinar mediante programación qué <xref:System.Web.UI.WebControls.Button> se hace clic en el control. También puede usar el <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> propiedad con un botón de comando para proporcionar información adicional acerca del comando para realizar, como `Ascending`. Puede proporcionar un controlador de eventos para el <xref:System.Web.UI.WebControls.Button.Command> eventos para controlar mediante programación las acciones realizan cuando se hace clic en el botón de comando.  
  
<a name="ButtonPostbackBehaviorandServerEvents"></a>   
## <a name="button-postback-behavior-and-server-events"></a>Comportamiento de Postback de botón y eventos de servidor  
 Cuando un usuario hace clic en cualquier botón de control de servidor Web, la página se envía al servidor. Esto hace que la página Web para procesar y los eventos pendientes que se generará código basado en servidor. Cuando haya finalizado todas las página y controlar el procesamiento, la página se representa en el explorador nuevo.  
  
 Los botones pueden generar sus propios <xref:System.Web.UI.WebControls.Button.Click> eventos o <xref:System.Web.UI.WebControls.Button.Command> eventos, que puede controlar mediante código basado en servidor. Esto es diferente de eventos en las páginas HTML tradicionales o en aplicaciones Web basadas en cliente, donde un botón `onclick` evento se controla mediante el uso de JavaScript que se ejecuta en el cliente. Para obtener más información, consulte [modelo de eventos de Control de servidor ASP.NET Web Forms](http://msdn.microsoft.com/library/6304bff7-1b0e-4641-8acb-6d3b0badc4a3).  
  
 Cuando los usuarios, haga clic en un control de botón, la página se envía al servidor. De forma predeterminada, la página se registra a sí mismo,  
  
 Puede configurar los botones para devolver la página actual a otra página. Esto puede ser útil para crear formularios de varias páginas. Para obtener más información, consulte [entre páginas de registro en los formularios Web Forms ASP.NET](http://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b).  
  
<a name="HandlingButtonEventsinClientScript"></a>   
## <a name="handling-button-events-in-client-script"></a>Control de eventos de botón en el Script de cliente  
 Controles de botón pueden desencadenar eventos de servidor y eventos de cliente. Eventos de servidor se producen después del postback y se controlan en el código del lado servidor que se escribe para la página. Eventos de cliente se controlan en un script de cliente, normalmente ECMAScript (JavaScript) y se generan antes de enviar la página. Mediante la adición de eventos de cliente a los controles de botón ASP.NET, puede realizar tareas como mostrar cuadros de diálogo de confirmación antes de enviar la página y, potencialmente cancelar el envío. Para obtener más información, consulte [Script de cliente en ASP.NET Web Pages](http://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa) y [Cómo: responder a eventos de Control de botón Web Server en el Script de cliente](http://msdn.microsoft.com/library/1ab97f0b-1c38-4897-85b0-ac915f6a182b).  
  
 Puede que le interese el <xref:System.Web.UI.WebControls.Button> control también usar script de cliente para realizar la devolución de datos (en lugar de simplemente realizar una operación HTTP POST). Esto puede ser útil si desea manipular mediante programación la devolución de datos, por ejemplo, conectarlo a otros elementos de la página. Puede establecer el <xref:System.Web.UI.WebControls.Button> del control <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> propiedad `true` para hacer que el <xref:System.Web.UI.WebControls.Button> control para usar el script de cliente en función de devolución de datos.  
  
<a name="ButtonControlsAndValidation"></a>   
## <a name="button-controls-and-validation"></a>Controles de botón y validación  
 Si una página contiene controles de validador ASP.NET, de forma predeterminada, al hacer clic en un control de botón hace que el control de validación realizar su comprobación. Si está habilitada la validación del lado cliente para un control de validación, no se envía la página si ha fallado una comprobación de validación.  
  
 En la tabla siguiente se describe las propiedades admitidas por los controles de botón que le permiten controlar con mayor precisión el proceso de validación.  
  
|Propiedad.|Descripción|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>|Especifica si al hacer clic en el botón también realiza una comprobación de validación. Establezca esta propiedad en `false` para evitar que una comprobación de validación.|  
|<xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>|Permite especificar qué validadores en la página se invocan cuando se hace clic en el botón. Si no se puede establecer ningún grupo de validaciones, un clic del botón llama a todos los validadores que se encuentran en la página.|  
  
 Para obtener más información, consulte [Validar la información especificada por el usuario en ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
<a name="ButtonsInDataControls"></a>   
## <a name="buttons-in-data-controls"></a>Botones en controles de datos  
 Controles de servidor Web de botón se utilizan a menudo en controles de datos, como en el <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.GridView>, y <xref:System.Web.UI.WebControls.Repeater> controles de lista. En esos casos, normalmente no responde directamente al botón evento click. En su lugar, un botón en un control de datos genera un evento que es específico del control de datos. Por ejemplo, en el <xref:System.Web.UI.WebControls.DataList> control, un botón puede provocar el <xref:System.Web.UI.WebControls.DataList> del control <xref:System.Web.UI.WebControls.DataList.ItemCommand> eventos en lugar de generar el <xref:System.Web.UI.WebControls.Button> del control <xref:System.Web.UI.WebControls.Button.Click> eventos.  
  
 Dado que los controles de lista enlazado a datos pueden contener muchos botones, puede establecer el botón <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> propiedad para especificar un valor que se pasará como parte del evento. A continuación, puede probar para que este argumento ver qué botón se hizo clic.  
  
<a name="BindingDataToTheControls"></a>   
## <a name="binding-data-to-the-controls"></a>Enlazar datos a los controles  
 Puede enlazar los controles de servidor Web de botón a un origen de datos con el fin de controlar la configuración de propiedad dinámicamente. Por ejemplo, puede establecer un botón <xref:System.Web.UI.WebControls.Button.Text%2A> propiedad utilizando el enlace de datos.  
  
<a name="UsingButtonsWithUpdatePanelControls"></a>   
## <a name="using-buttons-with-updatepanel-controls"></a>Uso de botones con controles UpdatePanel  
 Representación parcial de página permite actualizar partes de una página sin un postback. <xref:System.Web.UI.UpdatePanel> los controles permiten marcar partes de la página que participan en la representación parcial de página. De forma predeterminada, el comportamiento de los controles dentro de un <xref:System.Web.UI.UpdatePanel> controlar, incluidos <xref:System.Web.UI.WebControls.Button> controla, consiste en realizar un postback asincrónico en lugar de una devolución de datos. Esto actualiza solo el contenido de la <xref:System.Web.UI.UpdatePanel> controlar desde la que se origina el postback.  
  
 Además del escenario de un <xref:System.Web.UI.WebControls.Button> control que está dentro de un <xref:System.Web.UI.UpdatePanel> control, puede usar <xref:System.Web.UI.WebControls.Button> controla con <xref:System.Web.UI.UpdatePanel> controles en los escenarios siguientes:  
  
-   Definir un <xref:System.Web.UI.WebControls.Button> control que está fuera de un <xref:System.Web.UI.UpdatePanel> control como un <xref:System.Web.UI.AsyncPostBackTrigger> control para ese panel. Cuando se hace clic en el botón, se realiza un postback asincrónico y actualiza el contenido del panel.  
  
-   Definir un <xref:System.Web.UI.WebControls.Button> control que está dentro de un <xref:System.Web.UI.UpdatePanel> control como un <xref:System.Web.UI.PostBackTrigger> para el panel. Cuando se hace clic en el botón, realiza una devolución de datos incluso si está dentro de un <xref:System.Web.UI.UpdatePanel> control.  
  
 Para obtener más información acerca de página parcial de representación y el uso de <xref:System.Web.UI.UpdatePanel> los controles, vea [información general del Control UpdatePanel](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) y [Introducción a la representación parcial de página](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
<a name="DeclarativeSyntax"></a>   
## <a name="declarative-syntax"></a>Sintaxis declarativa  
  
```  
<asp:Button  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CausesValidation="True|False"  
    CommandArgument="string"  
    CommandName="string"  
    CssClass="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    OnClick="Click event handler"  
    OnClientClick="string"  
    OnCommand="Command event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    PostBackUrl="uri"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    Text="string"  
    ToolTip="string"  
    UseSubmitBehavior="True|False"  
    ValidationGroup="string"  
    Visible="True|False"  
    Width="size"  
/>  
```  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear un envío <xref:System.Web.UI.WebControls.Button> control que envía la página Web de contenido al servidor.  
  
 [!code-aspx-csharp[Classic Button Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Button Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Button Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Button Example/VB/sourcevb.aspx#1)]  
  
 En el ejemplo de código siguiente se muestra cómo crear un comando <xref:System.Web.UI.WebControls.Button> control que ordena una lista.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.Button.CommandName" />
    <altmember cref="P:System.Web.UI.WebControls.Button.CommandArgument" />
    <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
    <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
    <related type="Article" href="http://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Controles de servidor Web de botón</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Button ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Button();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.Button" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este constructor para crear e inicializar una nueva instancia de la <xref:System.Web.UI.WebControls.Button> clase.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear e inicializar una nueva instancia de la <xref:System.Web.UI.WebControls.Button> clase.  
  
 [!code-aspx-csharp[ButtonCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCtor/CS/buttonctorcs.aspx#1)]
 [!code-aspx-vb[ButtonCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCtor/VB/buttonctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Controles de servidor Web de botón</related>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="button.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Un control <see cref="T:System.Web.UI.HtmlTextWriter" /> que contiene el flujo de salida que se representará en el cliente.</param>
        <summary>Agrega los atributos del control <see cref="T:System.Web.UI.WebControls.Button" /> al flujo de salida para representar en el cliente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.WebControls.Button.AddAttributesToRender%2A> método en un control de servidor personalizado, para que el <xref:System.Web.UI.WebControls.Button> texto siempre se muestran en rojo.  
  
 [!code-aspx-csharp[CustomButtonAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/CS/custombuttonaddattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomButtonAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/VB/custombuttonaddattributestorendervb.aspx#1)]  
[!code-csharp[CustomButtonAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/CS/custombuttonaddattributestorender.cs#2)]
[!code-vb[CustomButtonAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/VB/custombuttonaddattributestorender.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Controles de servidor Web de botón</related>
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CausesValidation : bool with get, set" Usage="System.Web.UI.WebControls.Button.CausesValidation" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CausesValidation</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si la validación se realiza al hacer clic en el control <see cref="T:System.Web.UI.WebControls.Button" />.</summary>
        <value>Es <see langword="true" /> si se realiza la validación cuando se hace clic en el control <see cref="T:System.Web.UI.WebControls.Button" />; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada, la validación se realiza cuando un <xref:System.Web.UI.WebControls.Button> se hace clic en el control. Validación de la página determina si los controles de entrada asociados con un control de validación en la página que se pasan las reglas de validación especificadas por el control de validación.  
  
 Puede especificar o determinar si la validación se realiza en el cliente y el servidor cuando un <xref:System.Web.UI.WebControls.Button> se hace clic en control utilizando el <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> propiedad. Para evitar que se realice la validación, establezca la <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> propiedad `false`.  
  
> [!NOTE]
>  Debe establecer el <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> propiedad `false` cuando se utiliza el <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> propiedad devuelva datos a una página diferente. Debe comprobar explícitamente si validación al devolver datos a una página diferente. Para obtener un ejemplo, vea la sección Comentarios de la <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> propiedad.  
  
 Esta propiedad se establece normalmente en `false` para un `reset` o `clear` botón para evitar que la validación se realiza cuando se hace clic en el botón.  
  
 Cuando el valor de la <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> propiedad está establecida en `true`, también puede usar el <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> propiedad para especificar el nombre del grupo de validación para el que el <xref:System.Web.UI.WebControls.Button> control origina la validación.  
  
 Esta propiedad no se puede establecer mediante temas o temas de la hoja de estilos. Para obtener más información, consulte <xref:System.Web.UI.ThemeableAttribute> y [ASP.NET temas y máscaras](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> propiedad para evitar que se produzca la validación de la página. Tenga en cuenta que el <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> método activa cada control de validación de forma independiente.  
  
> [!IMPORTANT]
>  Este ejemplo tiene un cuadro de texto que acepta datos proporcionados por el usuario, lo que puede suponer una amenaza para la seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[ButtonControlCausesValidation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonControlCausesValidation/CS/buttoncausesvalidationcs.aspx#1)]
 [!code-aspx-vb[ButtonControlCausesValidation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonControlCausesValidation/VB/buttoncausesvalidationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.WebControls.Button.ValidationGroup" />
        <related type="Article" href="http://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Controles de servidor Web de botón</related>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Button.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.WebControls.IButtonControl.Click</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando se hace clic en el control <see cref="T:System.Web.UI.WebControls.Button" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Button.Click> evento se desencadena cuando el <xref:System.Web.UI.WebControls.Button> se hace clic en el control. Este evento suele utilizarse cuando ningún nombre de comando que está asociado con el <xref:System.Web.UI.WebControls.Button> control (por ejemplo, con un botón de envío).  
  
 Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 El código siguiente muestra cómo especificar y codificar un controlador de eventos para el <xref:System.Web.UI.WebControls.Button.Click> página de eventos con el fin de mostrar un mensaje en la Web cuando el <xref:System.Web.UI.WebControls.Button> se hace clic en el control.  
  
 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventHandler" />
        <related type="Article" href="http://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Controles de servidor Web de botón</related>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.CommandEventHandler Command;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.CommandEventHandler Command" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Button.Command" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Command As CommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Web::UI::WebControls::CommandEventHandler ^ Command;" />
      <MemberSignature Language="F#" Value="member this.Command : System.Web.UI.WebControls.CommandEventHandler " Usage="member this.Command : System.Web.UI.WebControls.CommandEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.WebControls.IButtonControl.Command</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.CommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando se hace clic en el control <see cref="T:System.Web.UI.WebControls.Button" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Button.Command> evento se desencadena cuando el <xref:System.Web.UI.WebControls.Button> se hace clic en el control. Este evento se utiliza normalmente cuando un nombre de comando, como `Sort`, está asociado con el <xref:System.Web.UI.WebControls.Button> control. Esto le permite crear varios <xref:System.Web.UI.WebControls.Button> controles en un servidor Web, página y determinar mediante programación qué <xref:System.Web.UI.WebControls.Button> se hace clic en el control.  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.Button.Command> evento se genera a través de la jerarquía de controles en el formulario de la `BubbleEvent`.  
  
 Para obtener más información acerca de cómo controlar eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 El código siguiente muestra cómo especificar y codificar un controlador de eventos para el <xref:System.Web.UI.WebControls.Button.Command> eventos para ordenar una lista cuando la <xref:System.Web.UI.WebControls.Button> se hace clic en el control. En este ejemplo especifica el controlador de eventos de forma declarativa, utilizando el <xref:System.Web.UI.WebControls.Button.OnClick%2A> propiedad de la <xref:System.Web.UI.WebControls.Button> control.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 El código siguiente muestra cómo especificar el controlador de eventos y agregarlo mediante programación al evento en el `Page_Load` método.  
  
 [!code-aspx-csharp[ButtonCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommand/CS/buttoncommandcs.aspx#1)]
 [!code-aspx-vb[ButtonCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommand/VB/buttoncommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventHandler" />
        <related type="Article" href="http://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Controles de servidor Web de botón</related>
      </Docs>
    </Member>
    <Member MemberName="CommandArgument">
      <MemberSignature Language="C#" Value="public string CommandArgument { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandArgument" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CommandArgument" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandArgument As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandArgument { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandArgument : string with get, set" Usage="System.Web.UI.WebControls.Button.CommandArgument" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CommandArgument</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un parámetro opcional que se pasa al evento <see cref="E:System.Web.UI.WebControls.Button.Command" /> junto con la propiedad <see cref="P:System.Web.UI.WebControls.Button.CommandName" /> asociada.</summary>
        <value>Parámetro opcional pasado al evento <see cref="E:System.Web.UI.WebControls.Button.Command" /> junto con la propiedad <see cref="P:System.Web.UI.WebControls.Button.CommandName" /> asociada. El valor predeterminado es <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> propiedad para especificar un parámetro que complementa la <xref:System.Web.UI.WebControls.Button.CommandName%2A> propiedad.  
  
> [!NOTE]
>  Aunque puede establecer el <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> propiedad por sí mismo, es normalmente sólo se utiliza cuando el <xref:System.Web.UI.WebControls.Button.CommandName%2A> también se establece la propiedad.  
  
 El <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> propiedad complementa el <xref:System.Web.UI.WebControls.Button.CommandName%2A> propiedad por lo que permite proporcionar información adicional sobre el comando que se ejecuta. Por ejemplo, si establece el <xref:System.Web.UI.WebControls.Button.CommandName%2A> propiedad `Sort` y el <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> propiedad `Ascending`, especifique un comando para ordenar en orden ascendente.  
  
 Esta propiedad no se puede establecer mediante temas o temas de la hoja de estilos. Para obtener más información, consulte <xref:System.Web.UI.ThemeableAttribute> y [ASP.NET temas y máscaras](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> propiedad para crear un <xref:System.Web.UI.WebControls.Button> control que ordena una lista en orden ascendente.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandName" />
        <related type="Article" href="http://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Controles de servidor Web de botón</related>
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public string CommandName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandName : string with get, set" Usage="System.Web.UI.WebControls.Button.CommandName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CommandName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre de comando asociado al control <see cref="T:System.Web.UI.WebControls.Button" /> que se pasa al evento <see cref="E:System.Web.UI.WebControls.Button.Command" />.</summary>
        <value>Nombre de comando del control <see cref="T:System.Web.UI.WebControls.Button" />. El valor predeterminado es <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando hay varios <xref:System.Web.UI.WebControls.Button> controles en una página Web, utilice el <xref:System.Web.UI.WebControls.Button.CommandName%2A> propiedad para especificar o determinar el nombre de comando asociado a cada <xref:System.Web.UI.WebControls.Button> control. Puede establecer el <xref:System.Web.UI.WebControls.Button.CommandName%2A> propiedad con cualquier cadena que identifica el comando que se ejecuta. A continuación, se puede determinar mediante programación el nombre de comando de la <xref:System.Web.UI.WebControls.Button> controlar y realizar las acciones adecuadas.  
  
 Información adicional acerca del comando, como `Ascending`, puede especificarse mediante la <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> propiedad.  
  
 Esta propiedad no se puede establecer mediante temas o temas de la hoja de estilos. Para obtener más información, consulte <xref:System.Web.UI.ThemeableAttribute> y [ASP.NET temas y máscaras](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Button.CommandName%2A> propiedad para crear un <xref:System.Web.UI.WebControls.Button> control que ordena una lista.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandArgument" />
        <related type="Article" href="http://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Controles de servidor Web de botón</related>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackOptions">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.PostBackOptions GetPostBackOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.PostBackOptions GetPostBackOptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.GetPostBackOptions" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetPostBackOptions () As PostBackOptions" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::PostBackOptions ^ GetPostBackOptions();" />
      <MemberSignature Language="F#" Value="abstract member GetPostBackOptions : unit -&gt; System.Web.UI.PostBackOptions&#xA;override this.GetPostBackOptions : unit -&gt; System.Web.UI.PostBackOptions" Usage="button.GetPostBackOptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un objeto <see cref="T:System.Web.UI.PostBackOptions" /> que representa el comportamiento de postback del control <see cref="T:System.Web.UI.WebControls.Button" />.</summary>
        <returns>Un <see cref="T:System.Web.UI.PostBackOptions" /> que representa el comportamiento de postback del control <see cref="T:System.Web.UI.WebControls.Button" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Button.GetPostBackOptions%2A> método crea un <xref:System.Web.UI.PostBackOptions> objeto que representa el <xref:System.Web.UI.WebControls.Button> comportamiento de postback del control. El <xref:System.Web.UI.PostBackOptions> , a continuación, suele pasarse a la <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=nameWithType> método, que se usa para obtener una referencia a una función de script de cliente que, cuando se invoca, hace que el servidor devuelva datos a la página.  
  
 Este método se utiliza principalmente los desarrolladores de controles al extender el <xref:System.Web.UI.WebControls.Button> clase.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Puede invalidar el <see cref="M:System.Web.UI.WebControls.Button.GetPostBackOptions" /> método en su clase derivada para modificar las opciones de devolución de datos para el control de botón, o para llamar al script de cliente cuando se hace clic en el botón. No olvide llamar a la clase base <see cref="M:System.Web.UI.WebControls.Button.GetPostBackOptions" /> método para que se establecen las opciones de devolución de datos estándar.</para>
        </block>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <related type="Article" href="http://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Controles de servidor Web de botón</related>
        <related type="Article" href="http://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa">Script de cliente de ASP.NET Web Pages</related>
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClick : EventArgs -&gt; unit&#xA;override this.OnClick : EventArgs -&gt; unit" Usage="button.OnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Datos del evento.</param>
        <summary>Provoca el evento <see cref="E:System.Web.UI.WebControls.Button.Click" /> del control <see cref="T:System.Web.UI.WebControls.Button" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Button.Click> evento se desencadena cuando el <xref:System.Web.UI.WebControls.Button> se hace clic en el control. Este evento suele utilizarse cuando ningún nombre de comando que está asociado con el <xref:System.Web.UI.WebControls.Button> control (por ejemplo, con un botón de envío).  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Web.UI.WebControls.Button.OnClick%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
   
  
## Examples  
 El código siguiente muestra cómo especificar y codificar un controlador de eventos para el <xref:System.Web.UI.WebControls.Button.Click> eventos con el fin de mostrar un mensaje sencillo en la página Web.  
  
 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar <see cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="T:System.EventArgs" />
        <related type="Article" href="http://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Controles de servidor Web de botón</related>
      </Docs>
    </Member>
    <Member MemberName="OnClientClick">
      <MemberSignature Language="C#" Value="public virtual string OnClientClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnClientClick" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.OnClientClick" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property OnClientClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OnClientClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OnClientClick : string with get, set" Usage="System.Web.UI.WebControls.Button.OnClientClick" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el script de cliente que se ejecuta cuando se provoca un evento <see cref="T:System.Web.UI.WebControls.Button" /> del control  <see cref="E:System.Web.UI.WebControls.Button.Click" />.</summary>
        <value>El script de cliente que se ejecuta cuando se provoca un evento <see cref="T:System.Web.UI.WebControls.Button" /> del control <see cref="E:System.Web.UI.WebControls.Button.Click" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> propiedad para especificar un script de cliente adicional que se ejecuta cuando un <xref:System.Web.UI.WebControls.Button> del control <xref:System.Web.UI.WebControls.Button.Click> provoca el evento. La secuencia de comandos que especifique para esta propiedad se representa en el <xref:System.Web.UI.WebControls.Button> del control `OnClick` predefinidos de atributo además del control del script de cliente.  
  
 Esta propiedad no se puede establecer mediante temas o temas de la hoja de estilos. Para obtener más información, consulte <xref:System.Web.UI.ThemeableAttribute> y [ASP.NET temas y máscaras](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Un proyecto de sitio Web de Visual Studio con código fuente está disponible como acompañamiento de este tema: [descargar](http://go.microsoft.com/fwlink/?LinkId=192871).  
  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> propiedad para especificar un script de cliente adicional que se ejecuta cuando un <xref:System.Web.UI.WebControls.Button> se hace clic en el control.  
  
 [!code-aspx-csharp[Button.OnClientClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.OnClientClick/cs/button.onclientclickcs.aspx#1)]
 [!code-aspx-vb[Button.OnClientClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.OnClientClick/vb/button.onclientclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <related type="Article" href="http://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Controles de servidor Web de botón</related>
      </Docs>
    </Member>
    <Member MemberName="OnCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnCommand (System.Web.UI.WebControls.CommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCommand(class System.Web.UI.WebControls.CommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCommand (e As CommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCommand(System::Web::UI::WebControls::CommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCommand : System.Web.UI.WebControls.CommandEventArgs -&gt; unit&#xA;override this.OnCommand : System.Web.UI.WebControls.CommandEventArgs -&gt; unit" Usage="button.OnCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.CommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Datos del evento.</param>
        <summary>Provoca el evento <see cref="E:System.Web.UI.WebControls.Button.Command" /> del control <see cref="T:System.Web.UI.WebControls.Button" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Button.Command> evento se desencadena cuando el <xref:System.Web.UI.WebControls.Button> se hace clic en el control. Este evento se utiliza normalmente cuando un nombre de comando, como `Sort`, está asociado con el <xref:System.Web.UI.WebControls.Button> control. Esto le permite crear varios <xref:System.Web.UI.WebControls.Button> controles en un servidor Web, página y determinar mediante programación qué <xref:System.Web.UI.WebControls.Button> se hace clic en el control.  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.Button.Command> evento se genera a través de la jerarquía de controles en el formulario de la `BubbleEvent`.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Web.UI.WebControls.Button.OnCommand%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
   
  
## Examples  
 El código siguiente muestra cómo especificar y codificar un controlador de eventos para el <xref:System.Web.UI.WebControls.Button.Command> eventos para ordenar una lista cuando la <xref:System.Web.UI.WebControls.Button> se hace clic en el control. En este ejemplo especifica el controlador de eventos de forma declarativa, utilizando el <xref:System.Web.UI.WebControls.Button.OnClick%2A> propiedad de la <xref:System.Web.UI.WebControls.Button> control.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 El código siguiente muestra cómo especificar el controlador de eventos y agregarlo mediante programación al evento en el `Page_Load` método.  
  
 [!code-aspx-csharp[ButtonCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommand/CS/buttoncommandcs.aspx#1)]
 [!code-aspx-vb[ButtonCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommand/VB/buttoncommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar <see cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <related type="Article" href="http://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Controles de servidor Web de botón</related>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="button.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Datos del evento.</param>
        <summary>Determina si se ha hecho clic en el botón antes de representarlo en el cliente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Button.OnPreRender%2A> método se utiliza principalmente los desarrolladores de controles al derivar una clase personalizada desde el <xref:System.Web.UI.WebControls.Button> control.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Controles de servidor Web de botón</related>
      </Docs>
    </Member>
    <Member MemberName="PostBackUrl">
      <MemberSignature Language="C#" Value="public virtual string PostBackUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PostBackUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.PostBackUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PostBackUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PostBackUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PostBackUrl : string with get, set" Usage="System.Web.UI.WebControls.Button.PostBackUrl" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.PostBackUrl</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.UrlProperty("*.aspx")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la dirección URL de la página de destino del envío desde la página actual cuando se hace clic en el control <see cref="T:System.Web.UI.WebControls.Button" />.</summary>
        <value>La dirección URL de la página Web de destino del envío desde la página actual cuando se hace clic en el control <see cref="T:System.Web.UI.WebControls.Button" />. El valor predeterminado es una cadena vacía ("") que hace que la página se devuelva datos a sí misma.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> propiedad le permite realizar entre páginas mediante post la <xref:System.Web.UI.WebControls.Button> control.  
  
> [!NOTE]
>  Las rutas de acceso especificadas correctamente solo funcionan con esta propiedad. Por ejemplo, rutas de acceso relativas (Test/default.aspx), las rutas de acceso absolutas (https://localhost/WebApp/default.aspx) y virtuales (~ \Test\default.aspx) funcione correctamente. Ha formado incorrectamente las rutas de acceso como "/ Test/default.aspx" o "\Test\default.aspx" no funcionan. Consulte [rutas de acceso del proyecto de ASP.NET Web](http://msdn.microsoft.com/library/2447f50c-b849-483c-8093-85ed53e7a5bd) para obtener una explicación sobre la creación de rutas de acceso correctas.  
  
 Establecer el <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> propiedad a la dirección URL de la página Web para registrar cuándo el <xref:System.Web.UI.WebControls.Button> se hace clic en el control. Por ejemplo, si se especifica `Page2.aspx` hace que la página que contiene el <xref:System.Web.UI.WebControls.Button> control a `Page2.aspx`. Si no especifica un valor para el <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> propiedad, la página de capacidad de respuesta.  
  
> [!IMPORTANT]
>  Al realizar un postback entre páginas con controles con validación del lado servidor, debe comprobar que la página <xref:System.Web.UI.Page.IsValid%2A> propiedad es `true` antes de procesar el postback. En el caso de un postback entre páginas, es la página para comprobar la <xref:System.Web.UI.Page.PreviousPage%2A>. El código VB siguiente muestra cómo hacerlo:  
  
```  
Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load  
        If Page.PreviousPage.IsValid Then  
            ' Handle the post back  
        Else  
            Response.Write("Invalid")  
        End If  
End Sub  
```  
  
 Para obtener más información sobre las técnicas de publicación entre páginas, vea [entre páginas de registro en los formularios Web Forms ASP.NET](http://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b).  
  
 Esta propiedad no se puede establecer mediante temas o temas de la hoja de estilos. Para obtener más información, consulte <xref:System.Web.UI.ThemeableAttribute> y [ASP.NET temas y máscaras](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> propiedad para realizar una publicación entre páginas. Cuando el usuario hace clic en el <xref:System.Web.UI.WebControls.Button> control, la página devuelve el valor especificado en el cuadro de texto a la página de destino especificada por el <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> propiedad. Para ejecutar este ejemplo, también debe crear un archivo de la página de destino en el mismo directorio que este ejemplo de código. En el ejemplo siguiente, se proporciona el código de página de destino.  
  
 [!code-aspx-csharp[Button.PostBackUrlProperty#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.PostBackUrlProperty/CS/button.postbackurlpropertycs.aspx#1)]
 [!code-aspx-vb[Button.PostBackUrlProperty#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.PostBackUrlProperty/VB/button.postbackurlpropertyvb.aspx#1)]  
  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.Page.PreviousPage%2A?displayProperty=nameWithType> propiedad para tener acceso a un valor que se ha registrado desde otra página mediante el <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> propiedad. Esta página obtiene la cadena que se ha registrado desde la página anterior y lo muestra al usuario. Si intenta ejecutar este ejemplo de código directamente, obtendrá un error porque el valor de la `text` campo será `null`. En su lugar, use este código para crear una página de destino y coloque el archivo en el mismo directorio que el código del ejemplo anterior. El nombre del archivo debe corresponder al valor especificado para el <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> propiedad en el ejemplo anterior. Al ejecutar el código del ejemplo anterior, esta página se ejecutará automáticamente cuando se produce la publicación entre páginas.  
  
> [!IMPORTANT]
>  Este ejemplo tiene un cuadro de texto que acepta datos proporcionados por el usuario, lo que puede suponer una amenaza para la seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Button.PostBackUrlPage2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.PostBackUrlPage2/CS/button.postbackurlpage2cs.aspx#1)]
 [!code-aspx-vb[Button.PostBackUrlPage2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.PostBackUrlPage2/VB/button.postbackurlpage2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.PreviousPage" />
        <related type="Article" href="http://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b">Entre páginas de registro en una página Web ASP.NET</related>
        <related type="Article" href="http://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Controles de servidor Web de botón</related>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="button.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Argumento para el evento.</param>
        <summary>Genera eventos para el control <see cref="T:System.Web.UI.WebControls.Button" /> cuando devuelve datos al servidor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este evento se usa internamente el <xref:System.Web.UI.WebControls.Button> control, cuando se hace clic, para generar un <xref:System.Web.UI.WebControls.Button.Click> eventos y si ha definido, un <xref:System.Web.UI.WebControls.Button.Command> eventos.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <related type="Article" href="http://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Controles de servidor Web de botón</related>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="button.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> que representa el flujo de salida para representar contenido HTML en el cliente.</param>
        <summary>Representa el contenido del control en el sistema de escritura especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.WebControls.Button.RenderContents%2A> controlar el método en un servidor personalizado para que siempre muestre texto que sigue a una personalizada <xref:System.Web.UI.WebControls.Button> control de servidor.  
  
 [!code-aspx-csharp[CustomButtonRenderContents#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRenderContents/CS/custombuttonrendercontentscs.aspx#1)]
 [!code-aspx-vb[CustomButtonRenderContents#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRenderContents/VB/custombuttonrendercontentsvb.aspx#1)]  
[!code-csharp[CustomButtonRenderContents#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRenderContents/CS/custombuttonrendercontents.cs#2)]
[!code-vb[CustomButtonRenderContents#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRenderContents/VB/custombuttonrendercontents.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <related type="Article" href="http://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Controles de servidor Web de botón</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Argumento para el evento.</param>
        <summary>Genera eventos para el control <see cref="T:System.Web.UI.WebControls.Button" /> cuando devuelve datos al servidor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este evento se usa internamente el <xref:System.Web.UI.WebControls.Button> control, cuando se hace clic, para generar un <xref:System.Web.UI.WebControls.Button.Click> eventos y si ha definido, un <xref:System.Web.UI.WebControls.Button.Command> eventos.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.WebControls.Button.System%23Web%23UI%23IPostBackEventHandler%23RaisePostBackEvent%2A> método por lo que TI siempre provoca la <xref:System.Web.UI.WebControls.Button.OnClick%2A> eventos en un personalizado <xref:System.Web.UI.WebControls.Button> control.  
  
 [!code-csharp[CustomButtonRaisePostBackEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRaisePostBackEvent/CS/custombuttonraisepostbackevent.cs#2)]
 [!code-vb[CustomButtonRaisePostBackEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRaisePostBackEvent/VB/custombuttonraisepostbackevent.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <related type="Article" href="http://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Controles de servidor Web de botón</related>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.Button.Text" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.Text</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el título de texto que se muestra en el control <see cref="T:System.Web.UI.WebControls.Button" />.</summary>
        <value>Título de texto que se muestra en el control <see cref="T:System.Web.UI.WebControls.Button" />. El valor predeterminado es <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.Button.Text%2A> propiedad para especificar o determinar el título que se muestra en el <xref:System.Web.UI.WebControls.Button> control.  
  
 El valor de esta propiedad, cuando se establece, se pueden guardar automáticamente en un archivo de recursos utilizando una herramienta de diseñador. Para obtener más información, consulte <xref:System.ComponentModel.LocalizableAttribute> y [globalización y localización](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Button.Text%2A> propiedad para especificar el título mostrado en el <xref:System.Web.UI.WebControls.Button> control.  
  
 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
        <related type="Article" href="http://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Controles de servidor Web de botón</related>
      </Docs>
    </Member>
    <Member MemberName="UseSubmitBehavior">
      <MemberSignature Language="C#" Value="public virtual bool UseSubmitBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSubmitBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.UseSubmitBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UseSubmitBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseSubmitBehavior { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseSubmitBehavior : bool with get, set" Usage="System.Web.UI.WebControls.Button.UseSubmitBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el control <see cref="T:System.Web.UI.WebControls.Button" /> utiliza el mecanismo de envío del explorador del cliente o el mecanismo de postback de ASP.NET.</summary>
        <value>Es <see langword="true" /> si el control utiliza el mecanismo de envío del explorador del cliente; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> propiedad para especificar si un <xref:System.Web.UI.WebControls.Button> control usa el cliente el mecanismo de devolución de ASP.NET o de mecanismo de envío del explorador. De forma predeterminada, el valor de esta propiedad es `true`, haciendo que el <xref:System.Web.UI.WebControls.Button> mecanismo de envío de control usando el explorador. Si especifica `false`, el marco de páginas ASP.NET agrega el script de cliente a la página para enviar el formulario al servidor.  
  
 Cuando el <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> propiedad es `false`, pueden usar los desarrolladores de controles el <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> evento de devolución de método para devolver el cliente la <xref:System.Web.UI.WebControls.Button>. La cadena devuelta por la <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> método contiene el texto de la llamada de función del lado cliente y se pueden insertar en un controlador de eventos del lado cliente.  
  
 Esta propiedad no se puede establecer mediante temas o temas de la hoja de estilos. Para obtener más información, consulte <xref:System.Web.UI.ThemeableAttribute> y [ASP.NET temas y máscaras](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> propiedad para especificar el mecanismo de envío que un <xref:System.Web.UI.WebControls.Button> control utiliza cuando realiza devoluciones al servidor. El <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> propiedad está establecida en `false`, lo que hace que el botón para usar ASP.NET mecanismo de devolución de datos. Si ve el código fuente de la página representada mediante el comando Ver código fuente de su explorador, verá que se ha agregado el script de cliente mediante el marco de páginas ASP.NET para enviar el formulario al servidor.  
  
 [!code-aspx-csharp[Button.UseSubmitBehavior#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.UseSubmitBehavior/CS/button.usesubmitbehaviorcs.aspx#1)]
 [!code-aspx-vb[Button.UseSubmitBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.UseSubmitBehavior/VB/button.usesubmitbehaviorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
        <related type="Article" href="http://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Controles de servidor Web de botón</related>
        <related type="Article" href="http://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa">Script de cliente de ASP.NET Web Pages</related>
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationGroup : string with get, set" Usage="System.Web.UI.WebControls.Button.ValidationGroup" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.ValidationGroup</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el grupo de controles para los que el control <see cref="T:System.Web.UI.WebControls.Button" /> ejecuta la validación cuando realiza devoluciones al servidor.</summary>
        <value>Grupo de controles para los que el control <see cref="T:System.Web.UI.WebControls.Button" /> ejecuta la validación cuando realiza devoluciones al servidor. El valor predeterminado es una cadena vacía ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Grupos de validación permiten asignar controles de validación de una página a una categoría específica. Cada grupo de validación puede validarse independientemente de otros grupos de validación en la página. Use la <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> propiedad para especificar el nombre del grupo de validación para el que el <xref:System.Web.UI.WebControls.Button> control origina la validación cuando realiza devoluciones al servidor.  
  
 Esta propiedad no tiene un efecto solo cuando el valor de la <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> propiedad está establecida en `true`. Cuando se especifica un valor para el <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> son de propiedad, sólo los controles de validación que forman parte del grupo especificado cuando valida el <xref:System.Web.UI.WebControls.Button> control realiza devoluciones al servidor. Si no especifica un valor para esta propiedad y el <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> propiedad está establecida en `true`, todos los controles de validación en la página que no están asignados a un grupo de validación se validan cuando el control se devuelve al servidor.  
  
 Esta propiedad no se puede establecer mediante temas o temas de la hoja de estilos. Para obtener más información, consulte <xref:System.Web.UI.ThemeableAttribute> y [ASP.NET temas y máscaras](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> propiedad para especificar los controles para la validación cuando un <xref:System.Web.UI.WebControls.Button> control realiza devoluciones al servidor. La página contiene tres cuadros de texto para capturar datos del usuario y tres <xref:System.Web.UI.WebControls.RequiredFieldValidator> controles para asegurarse de que el usuario no abandonan un cuadro de texto en blanco. El <xref:System.Web.UI.WebControls.RequiredFieldValidator> controla los cuadros de texto en primer lugar dos están en el `PersonalInfoGroup` grupo de validación y el <xref:System.Web.UI.WebControls.RequiredFieldValidator> control para el tercer cuadro de texto está en el `LocationInfoGroup` grupo de validación. Cuando `Button1` se hace clic en, solo los controles de grupo de validación `PersonalInfoGroup` se validan. Cuando `Button2` se hace clic en, solo el control de grupo de validación `LocationInfoGroup` se valida.  
  
> [!IMPORTANT]
>  Este ejemplo tiene un cuadro de texto que acepta datos proporcionados por el usuario, lo que puede suponer una amenaza para la seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Button.ValidationGroup#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.ValidationGroup/CS/button.validationgroupcs.aspx#1)]
 [!code-aspx-vb[Button.ValidationGroup#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.ValidationGroup/VB/button.validationgroupvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Button.CausesValidation" />
        <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
        <related type="Article" href="http://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Controles de servidor Web de botón</related>
      </Docs>
    </Member>
  </Members>
</Type>