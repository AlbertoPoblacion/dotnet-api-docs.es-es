<Type Name="XmlDataSource" FullName="System.Web.UI.WebControls.XmlDataSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="86b729c8a5965965316ecf6ffead7f52ce244e6d" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51882187" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlDataSource : System.Web.UI.HierarchicalDataSourceControl, System.ComponentModel.IListSource, System.Web.UI.IDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDataSource extends System.Web.UI.HierarchicalDataSourceControl implements class System.ComponentModel.IListSource, class System.Web.UI.IDataSource" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.XmlDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlDataSource&#xA;Inherits HierarchicalDataSourceControl&#xA;Implements IDataSource, IListSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlDataSource : System::Web::UI::HierarchicalDataSourceControl, System::ComponentModel::IListSource, System::Web::UI::IDataSource" />
  <TypeSignature Language="F#" Value="type XmlDataSource = class&#xA;    inherit HierarchicalDataSourceControl&#xA;    interface IDataSource&#xA;    interface IListSource" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HierarchicalDataSourceControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IDataSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("Transforming")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultProperty("DataFile")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.XmlDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.XmlDataSource))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.XmlDataSourceDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa un origen de datos XML para controles enlazados a datos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En este tema:  
  
-   [Introducción](#introduction)  
  
-   [Orígenes de datos XML](#source_of_xml_data)  
  
-   [Actualización de datos XML](#updating_xml_data)  
  
-   [Especifica una transformación XSL](#specifying_an_xsl_transformation)  
  
-   [Filtrar mediante una expresión XPath](#filtering_using_an_xpath_expression)  
  
-   [Almacenamiento en caché](#caching)  
  
-   [Características adicionales](#additional_features)  
  
-   [Objeto de vista de datos](#data_view_object)  
  
-   [Sintaxis declarativa](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introducción  
 El <xref:System.Web.UI.WebControls.XmlDataSource> control es un control de origen de datos que presenta los datos XML a los controles enlazados a datos. El <xref:System.Web.UI.WebControls.XmlDataSource> control puede usarse por los controles enlazados a datos para mostrar datos jerárquicos como tabulares. El <xref:System.Web.UI.WebControls.XmlDataSource> control normalmente se usa para mostrar datos XML jerárquicos en escenarios de solo lectura. Dado que el <xref:System.Web.UI.WebControls.XmlDataSource> control se extiende el <xref:System.Web.UI.HierarchicalDataSourceControl> (clase), funciona con datos jerárquicos. El <xref:System.Web.UI.WebControls.XmlDataSource> también implementa el control el <xref:System.Web.UI.IDataSource> interfaz y funciona con tabular, o estilo de lista, los datos.  
  
> [!NOTE]
>  Por motivos de seguridad, ninguno de los <xref:System.Web.UI.WebControls.XmlDataSource> las propiedades de control se almacenan en estado de vista. Puesto que es técnicamente posible descodificar el contenido del estado de vista en el cliente, almacenar información confidencial sobre la estructura de datos o su contenido podría suponer una amenaza de divulgación de información. Tenga en cuenta que si necesita almacenar información como <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> propiedad en la vista de estado, puede habilitar el cifrado proteger el contenido estableciendo <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> en el `@ Page` directiva.  
  
 Página de los desarrolladores usan el <xref:System.Web.UI.WebControls.XmlDataSource> control para mostrar datos XML mediante controles enlazados a datos.  
  
<a name="source_of_xml_data"></a>   
## <a name="sources-of-xml-data"></a>Orígenes de datos XML  
 El <xref:System.Web.UI.WebControls.XmlDataSource> normalmente carga datos XML desde un archivo XML, que se especifica mediante el <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> propiedad. También se pueden almacenar datos XML directamente por el control de origen de datos en forma de cadena con el <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> propiedad. Si desea transformar los datos XML antes de que se muestre un control enlazado a datos, puede proporcionar una hoja de estilos Extensible Stylesheet Language (XSL) para la transformación. Como con los datos XML, normalmente se carga la hoja de estilos desde un archivo, indicado por el <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> propiedad, pero también puede almacenar en forma de cadena directamente mediante el <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> propiedad.  
  
<a name="updating_xml_data"></a>   
## <a name="updating-xml-data"></a>Actualización de datos XML  
 El <xref:System.Web.UI.WebControls.XmlDataSource> control se utiliza normalmente en escenarios de datos de solo lectura donde un control enlazado a datos muestra datos XML. Sin embargo, también puede usar el <xref:System.Web.UI.WebControls.XmlDataSource> control para editar datos XML. Para editar los datos XML, llame a la <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> método para recuperar un <xref:System.Xml.XmlDataDocument> objeto que es una representación en memoria de los datos XML. Puede usar el modelo de objetos expuesto por el <xref:System.Xml.XmlDataDocument> y <xref:System.Xml.XmlNode> objetos que contiene o utilizar una expresión de filtro de XPath para manipular los datos en el documento. Cuando haya realizado los cambios a la representación en memoria de los datos XML, puede guardarlo en el disco mediante una llamada a la <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> método.  
  
 Hay algunas restricciones a las capacidades de edición de la <xref:System.Web.UI.WebControls.XmlDataSource> control:  
  
-   Se deben cargar los datos XML desde un archivo XML que se indica mediante el <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> propiedad, no de inline XML especificado en el <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> propiedad.  
  
-   No se puede especificar ninguna transformación XSLT en el <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> o <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> propiedades.  
  
-   El <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> método no controla operaciones de guardado simultáneas por diferentes solicitudes. Si más de un usuario edita un archivo XML a través de la <xref:System.Web.UI.WebControls.XmlDataSource>, no hay ninguna garantía de que todos los usuarios que están trabajando con los mismos datos. También es posible que un <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> operación produzca un error debido a estos mismos problemas de simultaneidad.  
  
<a name="specifying_an_xsl_transformation"></a>   
## <a name="specifying-an-xsl-transformation"></a>Especifica una transformación XSL  
 Una operación común que se realiza con datos XML es la transformación de un conjunto de datos XML a otro. El <xref:System.Web.UI.WebControls.XmlDataSource> control es compatible con las transformaciones XML con el <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> y <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> propiedades, que especifican una hoja de estilos XSL que se aplicará a los datos XML antes de pasarlo a un control enlazado a datos, y el <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> propiedad, que le permite proporcionar argumentos de hoja de estilo XSLT dinámicos para utilizar una hoja de estilos XSL durante la transformación. Si especifica una expresión de XPath utilizando la expresión de filtrado el <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> propiedad, se aplica después de la transformación.  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.XmlDataSource> clase usa el desuso <xref:System.Xml.Xsl.XslTransform> clase para realizar transformaciones XSL. Si desea usar las características de hoja de estilo que se introdujeron después de la <xref:System.Xml.Xsl.XslTransform> clase ha quedado en desuso, aplicar las transformaciones manualmente utilizando el <xref:System.Xml.Xsl.XslCompiledTransform> clase.  
  
<a name="filtering_using_an_xpath_expression"></a>   
## <a name="filtering-using-an-xpath-expression"></a>Filtrar mediante una expresión XPath  
 De forma predeterminada, el <xref:System.Web.UI.WebControls.XmlDataSource> control carga todos los datos XML en el archivo XML identificado por el <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> propiedad o se encuentra en línea en el <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> propiedad, pero se pueden filtrar los datos mediante una expresión XPath. El <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> propiedad es compatible con un filtro de la sintaxis de XPath que se aplica después de cargar y transformar los datos XML.  
  
<a name="caching"></a>   
## <a name="caching"></a>Almacenamiento en memoria caché  
 Para mejorar el rendimiento, almacenamiento en caché está habilitado para el <xref:System.Web.UI.WebControls.XmlDataSource> control de forma predeterminada. Abrir y leer un archivo XML en el servidor cada vez que solicita una página pueden reducir el rendimiento de la aplicación. Almacenamiento en caché permite reducir la carga de procesamiento en el servidor a costa de la memoria en el servidor Web; en la mayoría de los casos, esto es un buen equilibrio. El <xref:System.Web.UI.WebControls.XmlDataSource> automáticamente almacena en caché datos cuando el <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> propiedad está establecida en `true`y el <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> propiedad está establecida en el número de segundos que la memoria caché almacena los datos antes de que se invalide la memoria caché. Puede usar el <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> para ajustar aún más el comportamiento de almacenamiento en caché de control de origen de datos.  
  
<a name="additional_features"></a>   
## <a name="additional-features"></a>Características adicionales  
 En la tabla siguiente se enumera las características adicionales que son compatibles con el <xref:System.Web.UI.WebControls.XmlDataSource> control.  
  
|Función|Descripción|  
|----------------|-----------------|  
|Ordenar|No se admite por el <xref:System.Web.UI.WebControls.XmlDataSource> control.|  
|Filtrado|El <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> propiedad puede usarse para filtrar los datos XML mediante una expresión XPath adecuada.|  
|Paginación|No se admite por el <xref:System.Web.UI.WebControls.XmlDataSource> control.|  
|Updating|Admite manipulando el <xref:System.Xml.XmlDataDocument> directamente y, a continuación, llamar a la <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> método.|  
|Eliminando|Admite manipulando el <xref:System.Xml.XmlDataDocument> directamente y, a continuación, llamar a la <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> método.|  
|Inserción|Admite manipulando el <xref:System.Xml.XmlDataDocument> directamente y, a continuación, llamar a la <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> método.|  
|Almacenamiento en memoria caché|Habilitado de forma predeterminada, con el <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> propiedad establecida en 0 (infinito) y la <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> propiedad establecida en <xref:System.Web.UI.DataSourceCacheExpiry.Absolute>.|  
  
<a name="data_view_object"></a>   
## <a name="data-view-object"></a>Objeto de vista de datos  
 Dado que el <xref:System.Web.UI.WebControls.XmlDataSource> control es compatible con los controles enlazados a datos que mostrar datos jerárquicos, así como los controles que muestran datos tabulares, el control de origen de datos admite varios tipos de objetos de vista del origen de datos en sus datos XML subyacentes. El <xref:System.Web.UI.WebControls.XmlDataSource> control recupera un único denominado <xref:System.Web.UI.WebControls.XmlDataSourceView> objeto cuando se utiliza con un control enlazado a datos que muestra datos tabulares. El <xref:System.Web.UI.IDataSource.GetViewNames%2A> método identifica este único con el nombre de vista. Cuando se usa con un control enlazado a datos que muestra datos jerárquicos, el <xref:System.Web.UI.WebControls.XmlDataSource> control recupera un <xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView> para cualquier ruta de acceso jerárquica única que se pasa a la <xref:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView%2A> método.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Sintaxis declarativa  
  
```  
<asp:XmlDataSource  
    CacheDuration="string|Infinite"  
    CacheExpirationPolicy="Absolute|Sliding"  
    CacheKeyDependency="string"  
    DataFile="string"  
    EnableCaching="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnTransforming="Transforming event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SkinID="string"  
    TransformArgumentList="string"  
    TransformFile="string"  
    Visible="True|False"  
    XPath="string"  
>  
    <Data>string</Data>  
    <Transform>string</Transform>  
</asp:XmlDataSource>  
```  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos de código. El primer ejemplo de código muestra cómo usar un <xref:System.Web.UI.WebControls.XmlDataSource> controlar con un <xref:System.Web.UI.WebControls.TreeView> control para mostrar los datos XML desde el archivo XML de ejemplo. El segundo ejemplo muestra cómo usar un <xref:System.Web.UI.WebControls.XmlDataSource> control con una plantilla <xref:System.Web.UI.WebControls.Repeater> control para mostrar datos XML.  
  
 En el ejemplo de código siguiente se muestra cómo usar un <xref:System.Web.UI.WebControls.XmlDataSource> controlar con un <xref:System.Web.UI.WebControls.TreeView> control para mostrar datos XML. El <xref:System.Web.UI.WebControls.XmlDataSource> carga datos XML desde el archivo XML identificado por el <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> propiedad.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_1/CS/xmlds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_1/VB/xmlds1vb.aspx#1)]  
  
 El archivo XML en el ejemplo de código tiene los siguientes datos:  
  
```  
<books>  
   <computerbooks>  
     <book title="Secrets of Silicon Valley" author="Sheryl Hunter"/>  
     <book title="Straight Talk About Computers" author="Dean Straight"/>  
     <book title="You Can Combat Computer Stress!" author="Marjorie Green"/>                  
   </computerbooks>  
   <cookbooks>  
     <book title="Silicon Valley Gastronomic Treats" author="Innes del Castill"/>  
   </cookbooks>  
</books>  
```  
  
 En el ejemplo de código siguiente se muestra cómo usar un <xref:System.Web.UI.WebControls.XmlDataSource> control con una plantilla <xref:System.Web.UI.WebControls.Repeater> control para mostrar datos XML. El <xref:System.Web.UI.WebControls.Repeater> usa control elementos de una expresión de enlace de datos de XPath para enlazar a datos dentro de XML que documentar la <xref:System.Web.UI.WebControls.XmlDataSource> representa. Para obtener más información acerca de `XPath` y `XPathSelect` sintaxis de enlace de datos, vea el <xref:System.Web.UI.XPathBinder> clase.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_14#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_14/CS/xmlds14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_14#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_14/VB/xmlds14vb.aspx#1)]  
  
 El archivo XML en el ejemplo de código tiene los siguientes datos:  
  
```  
<?xml version="1.0" encoding="iso-8859-1"?>  
 <orders>  
   <order>  
     <customer id="12345" />  
     <customername>  
         <firstn>John</firstn>  
         <lastn>Smith</lastn>  
     </customername>  
     <transaction id="12345" />  
     <shipaddress>  
         <address1>1234 Tenth Avenue</address1>  
         <city>Bellevue</city>  
         <state>Washington</state>  
         <zip>98001</zip>  
     </shipaddress>  
     <summary>  
         <item dept="tools">screwdriver</item>  
         <item dept="tools">hammer</item>  
         <item dept="plumbing">fixture</item>  
     </summary>  
   </order>  
</orders>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Web.UI.IDataSource.GetViewNames" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Crea una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.XmlDataSource" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public virtual int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CacheDuration { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CacheDuration : int with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.CacheDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataSourceCacheDurationConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el período de tiempo, en segundos, durante el cual el control de origen de datos almacena en memoria caché los datos que ha recuperado.</summary>
        <value>Número de segundos durante los cuales el control <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> almacena en memoria caché los resultados de una operación de recuperación de datos. El valor predeterminado es 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.XmlDataSource> control automáticamente almacena en caché datos cuando se aplica lo siguiente:  
  
-   La propiedad <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> se establece en `true`.  
  
-   El <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> propiedad se establece en un valor mayor que 0, lo que indica el número de segundos que la memoria caché almacena los datos antes de que se invalide la memoria caché.  
  
 Cualquier cambio en el <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> propiedad o el contenido del archivo que contiene los datos XML hace que se invaliden la caché.  
  
 De forma predeterminada, el <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> propiedad está establecida en 0, lo que indica una caché indefinida, y el origen de datos se almacenen en caché hasta que se modifica el archivo XML que depende.  
  
 El comportamiento de la memoria caché se rige por una combinación de la duración y el <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> configuración. Si <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> está establecido en <xref:System.Web.UI.DataSourceCacheExpiry.Absolute>, <xref:System.Web.UI.WebControls.XmlDataSource> control almacena en caché datos en la primera operación de recuperación de datos, lo guarda en la memoria durante el tiempo especificado por <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>y se invalida una vez transcurrido el tiempo. A continuación, se actualiza la caché con la siguiente operación. Si <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> está establecido en <xref:System.Web.UI.DataSourceCacheExpiry.Sliding>, el control de origen de datos se almacena en caché datos en la primera operación de recuperación de datos, pero se restablece el período de tiempo que mantiene la memoria caché para cada operación subsiguiente. La memoria caché expira si no hay ninguna actividad durante un tiempo igual que el <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> desde la última recuperación de datos.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra cómo habilitar el almacenamiento en caché cuando se usa el <xref:System.Web.UI.WebControls.XmlDataSource> control para mostrar los datos contenidos en un archivo XML. Almacenamiento en caché está habilitado cuando la <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> propiedad está establecida en `true` y <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> se establece en el número de segundos que se almacena en caché los datos por el control de origen de datos.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_16/CS/xmlds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_16/VB/xmlds16vb.aspx#1)]  
  
 El archivo XML en el ejemplo de código tiene los siguientes datos:  
  
```  
<books>  
   <computerbooks>  
     <book title="Secrets of Silicon Valley" author="Sheryl Hunter"/>  
     <book title="Straight Talk About Computers" author="Dean Straight"/>  
     <book title="You Can Combat Computer Stress!" author="Marjorie Green"/>  
   </computerbooks>  
   <cookbooks>  
     <book title="Silicon Valley Gastronomic Treats" author="Innes del Castill"/>  
   </cookbooks>  
</books>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="CacheExpirationPolicy">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheExpirationPolicy As DataSourceCacheExpiry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::DataSourceCacheExpiry CacheExpirationPolicy { System::Web::UI::DataSourceCacheExpiry get(); void set(System::Web::UI::DataSourceCacheExpiry value); };" />
      <MemberSignature Language="F#" Value="member this.CacheExpirationPolicy : System.Web.UI.DataSourceCacheExpiry with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceCacheExpiry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la directiva de expiración de la memoria caché que se combina con la duración de la caché para describir el comportamiento del almacenamiento en caché de la caché que utiliza el control de origen de datos.</summary>
        <value>Uno de los valores de <see cref="T:System.Web.UI.DataSourceCacheExpiry" />. El valor predeterminado de la directiva de expiración de la memoria caché es <see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El comportamiento de la memoria caché se rige por una combinación de la <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> y <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> configuración. Si el <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> está establecido en <xref:System.Web.UI.DataSourceCacheExpiry.Absolute>, <xref:System.Web.UI.WebControls.XmlDataSource> almacena en caché datos en la primera operación de recuperación de datos, lo guarda en la memoria durante el tiempo especificado por <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>y se invalida una vez transcurrido el tiempo. A continuación, se actualiza la caché con la siguiente operación. Si el <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> está establecido en <xref:System.Web.UI.DataSourceCacheExpiry.Sliding>, el control de origen de datos se almacena en caché datos en la primera operación de recuperación de datos, pero se restablece el período de tiempo que mantiene la memoria caché para cada operación subsiguiente. La memoria caché expirará solo si hay ninguna actividad durante un tiempo igual que el <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> desde la última recuperación de datos.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra cómo habilitar el almacenamiento en caché cuando se usa el <xref:System.Web.UI.WebControls.XmlDataSource> control para mostrar los datos contenidos en un archivo XML. Almacenamiento en caché está habilitado cuando la <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> propiedad está establecida en `true` y <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> se establece en el número de segundos que se almacena en caché los datos por el control de origen de datos.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_16/CS/xmlds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_16/VB/xmlds16vb.aspx#1)]  
  
 El archivo XML en el ejemplo de código tiene los siguientes datos:  
  
```  
<books>  
   <computerbooks>  
     <book title="Secrets of Silicon Valley" author="Sheryl Hunter"/>  
     <book title="Straight Talk About Computers" author="Dean Straight"/>  
     <book title="You Can Combat Computer Stress!" author="Marjorie Green"/>                  
   </computerbooks>  
   <cookbooks>  
     <book title="Silicon Valley Gastronomic Treats" author="Innes del Castill"/>  
   </cookbooks>  
</books>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="CacheKeyContext">
      <MemberSignature Language="C#" Value="public virtual string CacheKeyContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheKeyContext" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyContext" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheKeyContext As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CacheKeyContext { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CacheKeyContext : string with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.CacheKeyContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el valor de la clave de caché para el control de origen de datos del estado de vista o agrega la clave de caché al estado de vista.</summary>
        <value>Valor de la clave de caché o una cadena vacía si la clave de caché no está en el estado de vista.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyContext%2A> propiedad le permite crear manualmente una clave de caché para el <xref:System.Web.UI.WebControls.XmlDataSource> control. Esto solo es necesario si se va a asignar un objeto que contiene los datos XML o XSLT al control en lugar de especificar un archivo que contiene los datos. Al asignar datos al control, los datos no se usan para generar la clave de caché. En su lugar, debe generar una clave de caché única manualmente si tiene previsto actualizar el objeto de datos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheKeyDependency">
      <MemberSignature Language="C#" Value="public virtual string CacheKeyDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheKeyDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheKeyDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CacheKeyDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CacheKeyDependency : string with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una dependencia de clave definida por el usuario que se vincula a todos los objetos de caché de datos creada por el control de origen de datos. Todos los objetos almacenados en caché expiran explícitamente cuando la clave expira.</summary>
        <value>Clave que identifica todos los objetos de caché creados por el control <see cref="T:System.Web.UI.WebControls.XmlDataSource" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.XmlDataSource> control admite el almacenamiento en caché de datos. Mientras se almacena en caché de datos, el <xref:System.Web.UI.WebControls.XmlDataSource> recupera los datos de la memoria caché en lugar de desde el archivo de datos subyacente. Cuando la memoria caché expira, recupera los datos del archivo subyacente y vuelve a almacenar en los datos.  
  
 Puede establecer el <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A> propiedad para crear una dependencia entre todas las entradas de caché creados por el <xref:System.Web.UI.WebControls.XmlDataSource> control y la clave. Todas las entradas de caché mediante programación, puede invalidar en cualquier momento mediante la expiración de la clave.  
  
 Debido a las propiedades utilizadas para crear el <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A>, es posible que varios <xref:System.Web.UI.WebControls.XmlDataSource> controles pueden utilizar la misma caché en escenarios donde cargar los mismos datos desde el mismo archivo XML y archivo de transformación y tienen el mismo <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> y <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A>establecido.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual string Data { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Data" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Data As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Data { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Data : string with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.ComponentModel.MultilineStringConverter,System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.ComponentModel.MultilineStringConverter,System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un bloque de datos XML al que se enlaza el control de origen de datos.</summary>
        <value>Una cadena de datos XML en línea a la que se enlaza el control <see cref="T:System.Web.UI.WebControls.XmlDataSource" />. El valor predeterminado es <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En escenarios declarativos, la <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> propiedad se especifica como una propiedad interna varias líneas de la <xref:System.Web.UI.WebControls.XmlDataSource> objeto. Una propiedad interna es compatible con datos XML, porque le permite dar formato a los datos XML de cualquier forma y evita los problemas de relleno de caracteres, como el relleno de caracteres de comillas.  
  
 Si tanto el <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> y <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> propiedades están establecidas, el <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> propiedad tiene prioridad y los datos en el archivo XML se utilizan en lugar de los datos XML especificados en el <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> propiedad.  
  
 Si cambia el valor de la <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> propiedad, el <xref:System.Web.UI.IDataSource.DataSourceChanged> provoca el evento. Si está habilitada la caché y cambie el valor de <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>, invalida la memoria caché.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar un <xref:System.Web.UI.WebControls.XmlDataSource> control para mostrar los datos XML en línea que contiene el <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> propiedad con un <xref:System.Web.UI.WebControls.TreeView> control.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_10/CS/xmlds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_10/VB/xmlds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El documento se está cargando.</exception>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
      </Docs>
    </Member>
    <Member MemberName="DataFile">
      <MemberSignature Language="C#" Value="public virtual string DataFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataFile : string with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.DataFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.XmlDataFileEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.XmlDataFileEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Especifica el nombre de un archivo XML al que se enlaza el origen de datos.</summary>
        <value>La ruta de acceso física absoluta o relativa del archivo XML que contiene los datos que representa el control <see cref="T:System.Web.UI.WebControls.XmlDataSource" />. El valor predeterminado es <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si tanto el <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> y <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> propiedades están establecidas, el <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> propiedad tiene prioridad y los datos en el archivo XML se utilizan en lugar de los datos XML especificados en el <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> propiedad.  
  
 Si cambia el valor de la <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> propiedad, el <xref:System.Web.UI.IDataSource.DataSourceChanged> provoca el evento. Si está habilitada la caché y cambie el valor de <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>, invalida la memoria caché.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar un <xref:System.Web.UI.WebControls.XmlDataSource> control para mostrar datos XML contenidos en un archivo con un <xref:System.Web.UI.WebControls.TreeView> control.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_1/CS/xmlds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_1/VB/xmlds1vb.aspx#1)]  
  
 El archivo XML en el ejemplo de código tiene los siguientes datos:  
  
```  
<books>  
   <computerbooks>  
     <book title="Secrets of Silicon Valley" author="Sheryl Hunter"/>  
     <book title="Straight Talk About Computers" author="Dean Straight"/>  
     <book title="You Can Combat Computer Stress!" author="Marjorie Green"/>                  
   </computerbooks>  
   <cookbooks>  
     <book title="Silicon Valley Gastronomic Treats" author="Innes del Castill"/>  
   </cookbooks>  
</books>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El documento se está cargando.</exception>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.Data" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
      </Docs>
    </Member>
    <Member MemberName="EnableCaching">
      <MemberSignature Language="C#" Value="public virtual bool EnableCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.EnableCaching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableCaching : bool with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.EnableCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el control <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> está habilitado.</summary>
        <value>Es <see langword="true" /> si el almacenamiento de datos en caché está habilitado para el control de origen de datos; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.XmlDataSource> control automáticamente almacena en caché los datos cuando el <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> propiedad está establecida en `true`. De forma predeterminada, el <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> propiedad está establecida en 0, lo que indica una caché indefinida, y el origen de datos se almacenen en caché hasta que se modifica el archivo XML que depende. Si establece la <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> propiedad un valor mayor que 0, la memoria caché almacena los datos para que el número de segundos antes de recuperar un nuevo conjunto.  
  
 Si el <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> propiedad está establecida en `true` y <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> propiedad está establecida, no se invalidan automáticamente las entradas de caché cuando cambian los parámetros en la lista de argumentos de transformaciones. En ese caso, debe escribir código para invalidar la memoria caché estableciendo el <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A> propiedad.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra cómo habilitar el almacenamiento en caché cuando se usa el <xref:System.Web.UI.WebControls.XmlDataSource> control para mostrar los datos contenidos en un archivo XML. Almacenamiento en caché está habilitado cuando la <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> propiedad está establecida en `true` y <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> se establece en el número de segundos que se almacena en caché los datos por el control de origen de datos.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_16/CS/xmlds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_16/VB/xmlds16vb.aspx#1)]  
  
 El archivo XML en el ejemplo de código tiene los siguientes datos:  
  
```  
<books>  
   <computerbooks>  
     <book title="Secrets of Silicon Valley" author="Sheryl Hunter"/>  
     <book title="Straight Talk About Computers" author="Dean Straight"/>  
     <book title="You Can Combat Computer Stress!" author="Marjorie Green"/>                  
   </computerbooks>  
   <cookbooks>  
     <book title="Silicon Valley Gastronomic Treats" author="Innes del Castill"/>  
   </cookbooks>  
</books>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy" />
      </Docs>
    </Member>
    <Member MemberName="GetHierarchicalView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HierarchicalDataSourceView GetHierarchicalView (string viewPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.HierarchicalDataSourceView GetHierarchicalView(string viewPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetHierarchicalView (viewPath As String) As HierarchicalDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::HierarchicalDataSourceView ^ GetHierarchicalView(System::String ^ viewPath);" />
      <MemberSignature Language="F#" Value="override this.GetHierarchicalView : string -&gt; System.Web.UI.HierarchicalDataSourceView" Usage="xmlDataSource.GetHierarchicalView viewPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HierarchicalDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewPath">Expresión XPath que identifica un nodo del que se crea la vista jerárquica actual.</param>
        <summary>Obtiene el objeto de vista del origen de datos para el control <see cref="T:System.Web.UI.WebControls.XmlDataSource" />. El parámetro <paramref name="viewPath" /> puede ser una expresión XPath.</summary>
        <returns>Devuelve un objeto <see cref="T:System.Web.UI.WebControls.XmlHierarchicalDataSourceView" /> que representa una vista única de los datos empezando con el nodo de datos identificado por <paramref name="viewPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede llamar a la <xref:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView%2A> método para recuperar un <xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView> objeto asociado con el <xref:System.Web.UI.WebControls.XmlDataSource> control. Si especifica `viewPath` valor, el <xref:System.Web.UI.WebControls.XmlDataSource> devuelve un objeto de vista del origen de datos que representa la vista en el nodo identificado por el control `viewPath`, junto con todos sus nodos secundarios. Si establece `viewPath` a <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Web.UI.WebControls.XmlDataSource> controlar las comprobaciones de la <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> propiedad para determinar el nodo raíz de la que se va a generar la vista del origen de datos. Si el <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> propiedad está establecida, el <xref:System.Web.UI.WebControls.XmlDataSource> control lo usa para devolver una vista del origen de datos en la misma forma que las `viewPath` se usa la expresión. Si el <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> no se establece la propiedad, el <xref:System.Web.UI.WebControls.XmlDataSource> control devuelve una vista de todos los nodos de datos en los datos XML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXmlDocument">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDocument GetXmlDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlDocument GetXmlDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument" />
      <MemberSignature Language="VB.NET" Value="Public Function GetXmlDocument () As XmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlDocument ^ GetXmlDocument();" />
      <MemberSignature Language="F#" Value="member this.GetXmlDocument : unit -&gt; System.Xml.XmlDocument" Usage="xmlDataSource.GetXmlDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocument</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Carga los datos XML en la memoria, ya sea directamente a partir del almacén de datos subyacentes o desde la caché, y los devuelve con el formato de un objeto <see cref="T:System.Xml.XmlDataDocument" />.</summary>
        <returns>Un objeto <see cref="T:System.Xml.XmlDataDocument" /> que representa los datos XML especificados en la propiedad <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> o en el archivo que identifica la propiedad <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />, con las transformaciones y consultas <see cref="P:System.Web.UI.WebControls.XmlDataSource.XPath" /> aplicadas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> método para el acceso directo a una representación en memoria de los datos XML subyacentes.  
  
 Puede manipular el valor devuelto <xref:System.Xml.XmlDataDocument> objeto y, a continuación, llame a <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> para conservar los cambios realizados en el archivo XML especificado por el <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> propiedad. Deben cumplirse varios requisitos antes de la <xref:System.Xml.XmlDataDocument> objeto puede guardarse correctamente. Para obtener más información, vea el método <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>.  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos de código. El primer ejemplo muestra cómo usar un <xref:System.Web.UI.WebControls.XmlDataSource> controlar con un <xref:System.Web.UI.WebControls.TreeView> control para mostrar y editar datos XML contenidos en un archivo XML. El segundo ejemplo muestra cómo usar un <xref:System.Web.UI.WebControls.XmlDataSource> control con una plantilla <xref:System.Web.UI.WebControls.Repeater> control para mostrar y editar datos XML contenidos en un archivo XML.  
  
 En el ejemplo de código siguiente se muestra cómo usar un <xref:System.Web.UI.WebControls.XmlDataSource> controlar con un <xref:System.Web.UI.WebControls.TreeView> control para mostrar y editar datos XML contenidos en un archivo XML. Los datos se manipulan en memoria mediante la <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> método cada vez que se selecciona un <xref:System.Web.UI.WebControls.TreeView> nodo y, a continuación, se guarda en el archivo XML. Por último, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> se llama en el <xref:System.Web.UI.WebControls.TreeView> control para actualizar los datos que muestra.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_17/CS/xmlds17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_17/VB/xmlds17vb.aspx#1)]  
  
 En el ejemplo de código siguiente se muestra cómo usar un <xref:System.Web.UI.WebControls.XmlDataSource> control con una plantilla <xref:System.Web.UI.WebControls.Repeater> control para mostrar y editar datos XML contenidos en un archivo XML. Como en el ejemplo anterior, se manipulan los datos en memoria mediante la <xref:System.Xml.XmlDataDocument> recuperados por el <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> método. Por último, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> se llama en el <xref:System.Web.UI.WebControls.TreeView> control para actualizar los datos que muestra.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_18/CS/xmlds18cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_18/VB/xmlds18vb.aspx#1)]  
  
 El archivo XML en los ejemplos de código tiene los siguientes datos:  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
 <bookstore xmlns:bk="urn:samples">  
   <book genre="novel" publicationdate="1999" bk:ISBN="0000000000">  
     <title>Secrets of Silicon Valley</title>  
     <author>  
       <first-name>Sheryl</first-name>  
       <last-name>Hunter</last-name>  
     </author>  
     <price>24.95</price>"   
     </book>  
   <book genre="novel" publicationdate="1985" bk:ISBN="1111111111">  
     <title>Straight Talk About Computers</title>  
     <author>  
       <first-name>Dean</first-name>  
       <last-name>Straight</last-name>  
     </author>  
     <price>29.95</price>  
   </book>  
</bookstore>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Se ha especificado una dirección URL para la propiedad <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />; sin embargo, el control <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> no tiene los permisos adecuados para el recurso Web.</exception>
        <exception cref="T:System.NotSupportedException">Se ha especificado una dirección URL para la propiedad <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />; sin embargo, no es una dirección URL basada en HTTP.  
  
\- o - 
El diseñador no ha asignado correctamente una ruta de acceso relativa en tiempo de diseño antes de utilizar el control <see cref="T:System.Web.UI.WebControls.XmlDataSource" />.  
  
\- o - 
Están habilitados tanto el almacenamiento en caché como la suplantación del cliente. El control <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> no admite el almacenamiento en caché cuando la suplantación de cliente está habilitada.</exception>
        <exception cref="T:System.Web.HttpException">Se ha denegado el acceso a la ruta especificada para la propiedad <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.XmlDataSource.Save" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />
      </Docs>
    </Member>
    <Member MemberName="OnTransforming">
      <MemberSignature Language="C#" Value="protected virtual void OnTransforming (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTransforming(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTransforming (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTransforming(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTransforming : EventArgs -&gt; unit&#xA;override this.OnTransforming : EventArgs -&gt; unit" Usage="xmlDataSource.OnTransforming e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Provoca el evento <see cref="E:System.Web.UI.WebControls.XmlDataSource.Transforming" /> antes de que el control <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> realice una transformación XSLT en sus datos XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información acerca de cómo controlar eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Web.UI.WebControls.XmlDataSource.OnTransforming%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar un <xref:System.Web.UI.WebControls.XmlDataSource> controlar con un <xref:System.Web.UI.WebControls.TreeView> control para mostrar datos XML transformados. La transformación XML se realiza mediante la hoja de estilos indicada por el <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> propiedad. Además, la hoja de estilos utiliza argumentos de transformación que se pasan al control de origen de datos en un <xref:System.Xml.Xsl.XsltArgumentList> objeto en tiempo de ejecución. El ejemplo de código muestra cómo pasar el <xref:System.Xml.Xsl.XsltArgumentList> objeto para el control de origen de datos controlando el <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> conjunto de eventos con un controlador de eventos personalizado, que se identifica mediante el nombre del método para el <xref:System.Web.UI.WebControls.XmlDataSource.OnTransforming%2A> método.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_9/CS/xmlds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_9/VB/xmlds9vb.aspx#1)]  
  
 El archivo XML en el ejemplo de código tiene los siguientes datos:  
  
```  
<bookstore>  
   <genre name="fiction">  
     <book ISBN="0000000000">  
       <title>Secrets of Silicon Valley</title>  
       <price>12.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />             
         <chapter num="2" name="Body" />            
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
   <genre name="novel">  
     <book genre="novel" ISBN="1111111111">  
       <title>Straight Talk About Computers</title>  
       <price>24.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />   
         <chapter num="2" name="Body" />  
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
</bookstore>  
```  
  
 La transformación XML se realiza mediante la siguiente hoja de estilos.  
  
```  
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">  
 <xsl:param name="purchdate"/>  
 <xsl:template match="bookstore">  
   <bookstore>  
     <xsl:apply-templates select="genre"/>  
   </bookstore>  
 </xsl:template>  
 <xsl:template match="genre">  
   <genre>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates select="book"/>  
   </genre>  
 </xsl:template>  
 <xsl:template match="book">  
   <book>  
     <xsl:attribute name="ISBN">  
       <xsl:value-of select="@ISBN"/>  
     </xsl:attribute>  
     <xsl:attribute name="title">  
       <xsl:value-of select="title"/>  
       Price: <xsl:value-of select="price"/>  
           15% discount if purchased by: <xsl:value-of select="$purchdate"/>        
     </xsl:attribute>  
     <xsl:apply-templates select="chapters/chapter" />  
   </book>  
 </xsl:template>  
 <xsl:template match="chapter">  
   <chapter>  
     <xsl:attribute name="num">  
       <xsl:value-of select="@num"/>  
     </xsl:attribute>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates/>  
   </chapter>  
 </xsl:template>  
</xsl:stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see cref="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la <see cref="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)" /> método de la clase base para que los delegados registrados reciban el evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.XmlDataSource.Transforming" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.Transform" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" />
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.Save" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save();" />
      <MemberSignature Language="F#" Value="member this.Save : unit -&gt; unit" Usage="xmlDataSource.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Guarda en disco los datos XML que el control <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> mantiene actualmente en memoria si se establece la propiedad <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mientras el <xref:System.Web.UI.WebControls.XmlDataSource> control se utiliza normalmente en escenarios de enlace de datos de solo lectura, puede usar el <xref:System.Web.UI.WebControls.XmlDataSource> control para editar datos XML en el archivo de datos XML subyacente. En estos casos, los datos XML se cargan desde un archivo XML por el <xref:System.Web.UI.WebControls.XmlDataSource> control. Modifica el <xref:System.Xml.XmlDataDocument> en memoria mediante la <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> método y, a continuación, guardar en el archivo de datos XML mediante una llamada a la <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> método. Este escenario XML modificable es posible cuando se cumplen las condiciones siguientes:  
  
-   Los datos XML se cargan desde un archivo XML que indica la <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> propiedad, no de los datos XML en línea especificados en el <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> propiedad.  
  
-   No se ha especificado ninguna transformación XSLT en el <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> o <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> propiedades.  
  
 El <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> método no controla operaciones de guardado simultáneas por diferentes solicitudes. Si más de un usuario edita un archivo XML a través de la <xref:System.Web.UI.WebControls.XmlDataSource> de control, no hay ninguna garantía de que todos los usuarios que están trabajando con los mismos datos. También es posible que un <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> operación produzca un error debido a estos mismos problemas de simultaneidad.  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos de código. El primer ejemplo de código muestra cómo usar un <xref:System.Web.UI.WebControls.XmlDataSource> controlar con un <xref:System.Web.UI.WebControls.TreeView> control para mostrar y editar datos XML contenidos en un archivo XML. El segundo ejemplo de código muestra cómo usar un <xref:System.Web.UI.WebControls.XmlDataSource> control con una plantilla <xref:System.Web.UI.WebControls.Repeater> control para mostrar y editar datos XML contenidos en un archivo XML.  
  
 En el ejemplo de código siguiente se muestra cómo usar un <xref:System.Web.UI.WebControls.XmlDataSource> controlar con un <xref:System.Web.UI.WebControls.TreeView> control para mostrar y editar datos XML contenidos en un archivo XML. Los datos se manipulan en memoria mediante la <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> método cada vez que se selecciona un <xref:System.Web.UI.WebControls.TreeView> nodo y, a continuación, se guarda en el archivo XML. Por último, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> se llama en el <xref:System.Web.UI.WebControls.TreeView> control para actualizar los datos que muestra.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_17/CS/xmlds17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_17/VB/xmlds17vb.aspx#1)]  
  
 En el ejemplo de código siguiente se muestra cómo usar un <xref:System.Web.UI.WebControls.XmlDataSource> control con una plantilla <xref:System.Web.UI.WebControls.Repeater> control para mostrar y editar datos XML contenidos en un archivo XML. Como en el ejemplo anterior, se manipulan los datos en memoria mediante la <xref:System.Xml.XmlDataDocument> objeto recuperado por el <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> método. Por último, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> se llama en el <xref:System.Web.UI.WebControls.TreeView> control para actualizar los datos que muestra.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_18/CS/xmlds18cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_18/VB/xmlds18vb.aspx#1)]  
  
 El archivo XML en los ejemplos de código tiene los siguientes datos:  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
 <bookstore xmlns:bk="urn:samples">  
   <book genre="novel" publicationdate="1999" bk:ISBN="0000000000">  
     <title>Secrets of Silicon Valley</title>  
     <author>  
       <first-name>Sheryl</first-name>  
       <last-name>Hunter</last-name>  
     </author>  
     <price>24.95</price>"   
     </book>  
   <book genre="novel" publicationdate="1985" bk:ISBN="1111111111">  
     <title>Straight Talk About Computers</title>  
     <author>  
       <first-name>Dean</first-name>  
       <last-name>Straight</last-name>  
     </author>  
     <price>29.95</price>  
   </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Los datos XML se cargaron utilizando la propiedad <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> en lugar de la propiedad <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />.  
  
\- o - 
Se ha especificado una dirección URL para la propiedad <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />; sin embargo, el control <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> no tiene los permisos adecuados para el recurso Web.</exception>
        <exception cref="T:System.NotSupportedException">Se ha especificado una dirección URL para la propiedad <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />; sin embargo, no es una dirección URL basada en HTTP.  
  
\- o - 
El diseñador no ha asignado correctamente una ruta de acceso relativa en tiempo de diseño antes de utilizar el control <see cref="T:System.Web.UI.WebControls.XmlDataSource" />.</exception>
        <exception cref="T:System.Web.HttpException">Se ha denegado el acceso a la ruta especificada para la propiedad <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.ContainsListCollection">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IListSource.ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ContainsListCollection As Boolean Implements IListSource.ContainsListCollection" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ComponentModel::IListSource::ContainsListCollection { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Para una descripción de este miembro, vea <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</summary>
        <value>
          <see langword="true" /> si la colección es una colección de objetos <see cref="T:System.Collections.IList" />; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Puede usarse solo cuando la <xref:System.Web.UI.WebControls.XmlDataSource> instancia se convierte en el <xref:System.ComponentModel.IListSource> interfaz.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IListSource" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.GetList">
      <MemberSignature Language="C#" Value="System.Collections.IList IListSource.GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IList System.ComponentModel.IListSource.GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#GetList" />
      <MemberSignature Language="VB.NET" Value="Function GetList () As IList Implements IListSource.GetList" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IList ^ System.ComponentModel.IListSource.GetList() = System::ComponentModel::IListSource::GetList;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Para una descripción de este miembro, vea <see cref="M:System.ComponentModel.IListSource.GetList" />.</summary>
        <returns>Un objeto que implementa <see cref="T:System.Collections.IList" /> que se puede enlazar a un origen de datos.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Puede usarse solo cuando la <xref:System.Web.UI.WebControls.XmlDataSource> instancia se convierte en el <xref:System.ComponentModel.IListSource> interfaz.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IListSource" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSource.DataSourceChanged">
      <MemberSignature Language="C#" Value="event EventHandler System.Web.UI.IDataSource.DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler System.Web.UI.IDataSource.DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Custom Event DataSourceChanged As EventHandler Implements System.Web.UI.IDataSource" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.IDataSource.DataSourceChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Para una descripción de este miembro, vea <see cref="E:System.Web.UI.IDataSource.DataSourceChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Puede usarse solo cuando la <xref:System.Web.UI.WebControls.XmlDataSource> instancia se convierte en el <xref:System.Web.UI.IDataSource> interfaz.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataSource" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSource.GetView">
      <MemberSignature Language="C#" Value="System.Web.UI.DataSourceView IDataSource.GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.DataSourceView System.Web.UI.IDataSource.GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetView (viewName As String) As DataSourceView Implements IDataSource.GetView" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::DataSourceView ^ System.Web.UI.IDataSource.GetView(System::String ^ viewName) = System::Web::UI::IDataSource::GetView;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetView(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Nombre de la vista que se va a recuperar. Si se especifica <see cref="F:System.String.Empty" />, se recupera la vista predeterminada para el control <see cref="T:System.Web.UI.WebControls.XmlDataSource" />.</param>
        <summary>Obtiene la vista de origen de datos con nombre asociada al control de origen de datos.</summary>
        <returns>Devuelve el objeto <see cref="T:System.Web.UI.WebControls.XmlDataSourceView" /> con nombre asociado al control <see cref="T:System.Web.UI.WebControls.XmlDataSource" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IDataSource.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSource.GetViewNames">
      <MemberSignature Language="C#" Value="System.Collections.ICollection IDataSource.GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.ICollection System.Web.UI.IDataSource.GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Function GetViewNames () As ICollection Implements IDataSource.GetViewNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::ICollection ^ System.Web.UI.IDataSource.GetViewNames() = System::Web::UI::IDataSource::GetViewNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetViewNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Para una descripción de este miembro, vea <see cref="M:System.Web.UI.IDataSource.GetViewNames" />.</summary>
        <returns>Un objeto que implementa <see cref="T:System.Collections.ICollection" /> que contiene nombres que representa la lista de objetos de vista asociados al objeto <see cref="T:System.Web.UI.IDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Puede usarse solo cuando la <xref:System.Web.UI.WebControls.XmlDataSource> instancia se convierte en el <xref:System.Web.UI.IDataSource> interfaz.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataSource" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public virtual string Transform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Transform" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.Transform" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Transform As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Transform { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transform : string with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.Transform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.ComponentModel.MultilineStringConverter,System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.ComponentModel.MultilineStringConverter,System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un bloque de datos XSL (Extensible Stylesheet Language) que define una transformación XSLT que se realizará en los datos XML que administra el control <see cref="T:System.Web.UI.WebControls.XmlDataSource" />.</summary>
        <value>Cadena de XSL en línea que define una transformación de XML que se va a realizar en los datos incluidos en las propiedades <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> o <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />. El valor predeterminado es <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En escenarios declarativos, la <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> propiedad se especifica como una propiedad interna varias líneas de la <xref:System.Web.UI.WebControls.XmlDataSource> objeto. Una propiedad interna es compatible con los datos de hoja de estilos XSL, porque le permite dar formato a la hoja de estilos de ninguna manera y evita los problemas de relleno de caracteres como el relleno de caracteres de comillas.  
  
 Si tanto el <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> y <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> propiedades están establecidas, el <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> propiedad tiene prioridad y los datos en el archivo de hoja de estilos XSL (.xsl) que se usan en lugar de los elementos de la hoja de estilo especificados en el <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> propiedad. Si se establece una expresión XPath utilizando el <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> propiedad, se aplica después de que se transforman los datos XML.  
  
 Si cambia el valor de la <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> propiedad, el <xref:System.Web.UI.IDataSource.DataSourceChanged> provoca el evento. Si está habilitada la caché y cambie el valor de <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>, invalida la memoria caché.  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.XmlDataSource> clase usa el desuso <xref:System.Xml.Xsl.XslTransform> clase para realizar transformaciones XSL. Si desea usar las características de hoja de estilo que se introdujeron después de la <xref:System.Xml.Xsl.XslTransform> clase ha quedado en desuso, aplicar las transformaciones manualmente utilizando el <xref:System.Xml.Xsl.XslCompiledTransform> clase.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar un <xref:System.Web.UI.WebControls.XmlDataSource> control con una plantilla <xref:System.Web.UI.WebControls.Repeater> control para mostrar datos XML transformados. La hoja de estilos que realiza la transformación está alineada definido por el <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> propiedad del control de origen de datos.  
  
  
  
 El archivo XML en el ejemplo de código tiene los siguientes datos:  
  
```  
<?xml version="1.0" encoding="iso-8859-1"?>  
 <orders>  
   <order>  
     <customer id="12345" />  
     <customername>  
         <firstn>Todd</firstn>  
         <lastn>Rowe</lastn>  
     </customername>  
     <transaction id="12345" />  
     <shipaddress>  
         <address1>1234 Tenth Avenue</address1>  
         <city>Bellevue</city>  
         <state>Washington</state>  
         <zip>98001</zip>  
     </shipaddress>  
     <summary>  
         <item dept="tools">screwdriver</item>  
         <item dept="tools">hammer</item>  
         <item dept="plumbing">fixture</item>  
     </summary>  
   </order>  
</orders>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El documento se está cargando.</exception>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
      </Docs>
    </Member>
    <Member MemberName="TransformArgumentList">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Xsl.XsltArgumentList TransformArgumentList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Xsl.XsltArgumentList TransformArgumentList" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TransformArgumentList As XsltArgumentList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Xsl::XsltArgumentList ^ TransformArgumentList { System::Xml::Xsl::XsltArgumentList ^ get(); void set(System::Xml::Xsl::XsltArgumentList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TransformArgumentList : System.Xml.Xsl.XsltArgumentList with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.TransformArgumentList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Xsl.XsltArgumentList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Proporciona una lista de los argumentos XSLT que se utilizan con la hoja de estilos que las propiedades <see cref="P:System.Web.UI.WebControls.XmlDataSource.Transform" /> o <see cref="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" /> definen para llevar a cabo una transformación en los datos XML. </summary>
        <value>Un objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los objetos y parámetros XSLT que se van a aplicar a los datos XML cuando el control <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> los cargue. El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Establecer el <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> propiedad cuando la <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> evento se desencadena para asegurarse de que los parámetros XSLT están disponibles en el momento en que se aplica la transformación XSLT a los datos XML.  
  
 Si el <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> propiedad está establecida en `true` y <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> propiedad está establecida, no se invalidan automáticamente las entradas de caché cuando cambian los parámetros en la lista de argumentos de transformaciones. En ese caso, debe escribir código para invalidar la memoria caché estableciendo el <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar un <xref:System.Web.UI.WebControls.XmlDataSource> con un <xref:System.Web.UI.WebControls.TreeView> control para mostrar datos XML transformados. La transformación XML se realiza mediante la hoja de estilos indicada por el <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> propiedad. Además, la hoja de estilos utiliza argumentos de transformación que se pasan al control de origen de datos en un <xref:System.Xml.Xsl.XsltArgumentList> objeto en tiempo de ejecución. El ejemplo de código muestra cómo pasar el <xref:System.Xml.Xsl.XsltArgumentList> al control de origen de datos controlando el <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> evento con un controlador de eventos personalizado.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_9/CS/xmlds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_9/VB/xmlds9vb.aspx#1)]  
  
 El archivo XML en el ejemplo de código tiene los siguientes datos:  
  
```  
<bookstore>  
   <genre name="fiction">  
     <book ISBN="0000000000">  
       <title>Secrets of Silicon Valley</title>  
       <price>12.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />             
         <chapter num="2" name="Body" />            
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
   <genre name="novel">  
     <book genre="novel" ISBN="1111111111">  
       <title>Straight Talk About Computers</title>  
       <price>24.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />   
         <chapter num="2" name="Body" />  
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
</bookstore>  
```  
  
 La transformación de los datos XML se realiza con la siguiente hoja de estilos.  
  
```  
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">  
 <xsl:param name="purchdate"/>  
 <xsl:template match="bookstore">  
   <bookstore>  
     <xsl:apply-templates select="genre"/>  
   </bookstore>  
 </xsl:template>  
 <xsl:template match="genre">  
   <genre>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates select="book"/>  
   </genre>  
 </xsl:template>  
 <xsl:template match="book">  
   <book>  
     <xsl:attribute name="ISBN">  
       <xsl:value-of select="@ISBN"/>  
     </xsl:attribute>  
     <xsl:attribute name="title">  
       <xsl:value-of select="title"/>  
       Price: <xsl:value-of select="price"/>  
           15% discount if purchased by: <xsl:value-of select="$purchdate"/>        
     </xsl:attribute>  
     <xsl:apply-templates select="chapters/chapter" />  
   </book>  
 </xsl:template>  
 <xsl:template match="chapter">  
   <chapter>  
     <xsl:attribute name="num">  
       <xsl:value-of select="@num"/>  
     </xsl:attribute>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates/>  
   </chapter>  
 </xsl:template>  
</xsl:stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.XmlDataSource.Transforming" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.Transform" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" />
      </Docs>
    </Member>
    <Member MemberName="TransformFile">
      <MemberSignature Language="C#" Value="public virtual string TransformFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransformFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TransformFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TransformFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TransformFile : string with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.TransformFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.XslTransformFileEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.XslTransformFileEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Especifica el nombre de un archivo con extensión .xsl (Extensible Stylesheet Language) que define una transformación XSLT que se realizará en los datos XML que administra el control <see cref="T:System.Web.UI.WebControls.XmlDataSource" />.</summary>
        <value>Ruta de acceso física absoluta o relativa del archivo de hoja de estilos XSL que define una transformación XML que se va a realizar en los datos incluidos en las propiedades <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> o <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />. El valor predeterminado es <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si tanto el <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> y <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> propiedades están establecidas, el <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> propiedad tiene prioridad y los datos en el archivo de hoja de estilos XSL (.xsl) que se usan en lugar de los elementos de la hoja de estilo especificados en el <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> propiedad. Si se establece una expresión XPath utilizando el <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> propiedad, se aplica después de que se transforman los datos XML.  
  
 Si cambia el valor de la <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> propiedad, el <xref:System.Web.UI.IDataSource.DataSourceChanged> provoca el evento. Si está habilitada la caché y cambie el valor de <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>, invalida la memoria caché.  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.XmlDataSource> clase usa el desuso <xref:System.Xml.Xsl.XslTransform> clase para realizar transformaciones XSL. Si desea usar las características de hoja de estilo que se introdujeron después de la <xref:System.Xml.Xsl.XslTransform> clase ha quedado en desuso, aplicar las transformaciones manualmente utilizando el <xref:System.Xml.Xsl.XslCompiledTransform> clase.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar un <xref:System.Web.UI.WebControls.XmlDataSource> control y un <xref:System.Web.UI.WebControls.TreeView> control para mostrar datos XML transformados en un formulario Web. La transformación se realiza mediante la hoja de estilos indicada por el <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> propiedad. Opcionalmente, puede proporcionar argumentos de la transformación de la hoja de estilos mediante una <xref:System.Xml.Xsl.XsltArgumentList>. Para obtener más información, vea la propiedad <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_5/CS/xmlds5cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_5/VB/xmlds5vb.aspx#1)]  
  
 El archivo XML en el ejemplo de código tiene los siguientes datos:  
  
```  
<bookstore>  
   <genre name="fiction">  
     <book ISBN="0000000000">  
       <title>Secrets of Silicon Valley</title>  
       <price>12.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />             
         <chapter num="2" name="Body" />            
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
   <genre name="novel">  
     <book genre="novel" ISBN="1111111111">  
       <title>Straight Talk About Computers</title>  
       <price>24.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />   
         <chapter num="2" name="Body" />  
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
</bookstore>  
```  
  
 La hoja de estilos XSL que realiza la transformación XML tiene la siguiente estructura:  
  
```  
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">  
 <xsl:template match="bookstore">  
   <bookstore>  
     <xsl:apply-templates select="genre"/>  
   </bookstore>  
 </xsl:template>  
 <xsl:template match="genre">  
   <genre>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates select="book"/>  
   </genre>  
 </xsl:template>  
 <xsl:template match="book">  
   <book>  
     <xsl:attribute name="ISBN">  
       <xsl:value-of select="@ISBN"/>  
     </xsl:attribute>  
     <xsl:attribute name="title">  
       <xsl:value-of select="title"/>  
     </xsl:attribute>  
     <xsl:attribute name="price">  
       <xsl:value-of select="price"/>  
     </xsl:attribute>  
     <xsl:apply-templates select="chapters/chapter" />  
   </book>  
 </xsl:template>  
 <xsl:template match="chapter">  
   <chapter>  
     <xsl:attribute name="num">  
       <xsl:value-of select="@num"/>  
     </xsl:attribute>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates/>  
   </chapter>  
 </xsl:template>  
</xsl:stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El documento se está cargando.</exception>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.Transform" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
      </Docs>
    </Member>
    <Member MemberName="Transforming">
      <MemberSignature Language="C#" Value="public event EventHandler Transforming;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Transforming" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.XmlDataSource.Transforming" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Transforming As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Transforming;" />
      <MemberSignature Language="F#" Value="member this.Transforming : EventHandler " Usage="member this.Transforming : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce antes de aplicar a los datos XML la hoja de estilos que define la propiedad <see cref="P:System.Web.UI.WebControls.XmlDataSource.Transform" /> o que identifica la propiedad <see cref="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controlar la <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> eventos para establecer el <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> propiedad con un <xref:System.Xml.Xsl.XsltArgumentList> objeto antes de la <xref:System.Web.UI.WebControls.XmlDataSource> control realiza una transformación XML.  
  
 Para obtener más información acerca de cómo controlar eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar un <xref:System.Web.UI.WebControls.XmlDataSource> controlar con un <xref:System.Web.UI.WebControls.TreeView> control para mostrar datos XML transformados. La transformación XML se realiza mediante la hoja de estilos indicada por el <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> propiedad. Además, la hoja de estilos utiliza argumentos de transformación que se pasan al control de origen de datos en un <xref:System.Xml.Xsl.XsltArgumentList> en tiempo de ejecución. El ejemplo de código muestra cómo pasar el <xref:System.Xml.Xsl.XsltArgumentList> objeto para el control de origen de datos controlando el <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> evento con un controlador de eventos personalizado.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_9/CS/xmlds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_9/VB/xmlds9vb.aspx#1)]  
  
 El archivo XML en el ejemplo de código tiene los siguientes datos:  
  
```  
<bookstore>  
   <genre name="fiction">  
     <book ISBN="0000000000">  
       <title>Secrets of Silicon Valley</title>  
       <price>12.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />             
         <chapter num="2" name="Body" />            
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
   <genre name="novel">  
     <book genre="novel" ISBN="1111111111">  
       <title>Straight Talk About Computers</title>  
       <price>24.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />   
         <chapter num="2" name="Body" />  
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
</bookstore>  
```  
  
 La transformación de los datos XML se realiza con la hoja de estilos siguientes:  
  
```  
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">  
 <xsl:param name="purchdate"/>  
 <xsl:template match="bookstore">  
   <bookstore>  
     <xsl:apply-templates select="genre"/>  
   </bookstore>  
 </xsl:template>  
 <xsl:template match="genre">  
   <genre>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates select="book"/>  
   </genre>  
 </xsl:template>  
 <xsl:template match="book">  
   <book>  
     <xsl:attribute name="ISBN">  
       <xsl:value-of select="@ISBN"/>  
     </xsl:attribute>  
     <xsl:attribute name="title">  
       <xsl:value-of select="title"/>  
       Price: <xsl:value-of select="price"/>  
           15% discount if purchased by: <xsl:value-of select="$purchdate"/>        
     </xsl:attribute>  
     <xsl:apply-templates select="chapters/chapter" />  
   </book>  
 </xsl:template>  
 <xsl:template match="chapter">  
   <chapter>  
     <xsl:attribute name="num">  
       <xsl:value-of select="@num"/>  
     </xsl:attribute>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates/>  
   </chapter>  
 </xsl:template>  
</xsl:stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="XPath">
      <MemberSignature Language="C#" Value="public virtual string XPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.XPath" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property XPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XPath : string with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.XPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Especifica una expresión XPath que se va a aplicar a los datos XML incluidos en la propiedad <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> o en el archivo XML que indica la propiedad <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />.</summary>
        <value>Una cadena que representa una expresión XPath que se puede utilizar para filtrar los datos incluidos en la propiedad <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> o en el archivo XML que indica la propiedad <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />. El valor predeterminado es <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información sobre las expresiones de enlace de datos de XPath, vea [enlazar un Control Tabular con el XmlDataSource Control](https://msdn.microsoft.com/library/d6bf202f-6454-45fd-9424-e17f6c7eafe8).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar un <xref:System.Web.UI.WebControls.XmlDataSource> control con una plantilla <xref:System.Web.UI.WebControls.Repeater> control para mostrar datos XML que se han filtrado mediante una expresión XPath. En este ejemplo, la sintaxis de XPath se utiliza para filtrar los datos XML cuando el <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> propiedad del control de origen de datos está establecida y también se enlazan los elementos de la <xref:System.Web.UI.WebControls.Repeater> plantilla de control a los datos XML.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_8/CS/xmlds8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_8/VB/xmlds8vb.aspx#1)]  
  
 El archivo XML en el ejemplo de código tiene los siguientes datos:  
  
```  
<bookstore>  
   <genre name="fiction">  
     <book ISBN="0000000000">  
       <title>Secrets of Silicon Valley</title>  
       <price>12.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />             
         <chapter num="2" name="Body" />            
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
   <genre name="novel">  
     <book genre="novel" ISBN="1111111111">  
       <title>Straight Talk About Computers</title>  
       <price>24.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />   
         <chapter num="2" name="Body" />  
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
</bookstore>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El documento se está cargando.</exception>
      </Docs>
    </Member>
  </Members>
</Type>