<Type Name="FontNamesConverter" FullName="System.Web.UI.WebControls.FontNamesConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3ea6678dc7aa5ae3ab0f5652fabe538958fc405f" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46652113" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FontNamesConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FontNamesConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FontNamesConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class FontNamesConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class FontNamesConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type FontNamesConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Realiza conversiones entre una cadena que contiene una lista de nombres de fuente y una matriz de cadenas que representan los nombres individuales.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> método de esta clase para convertir una cadena única que contiene una lista de nombres de fuente en una matriz de cadenas que contiene los nombres individuales. Cada nombre de fuente en la cadena debe estar separado por punto y coma. Por ejemplo, la cadena "arial, nueva verdana roman, el tiempo", se convierte en una matriz que contiene las cadenas "arial", "times new roman" y "verdana". Tenga en cuenta que las comas se quitan junto con los espacios en blanco al principio o al final del nombre de fuente. No se quita el espacio en blanco en medio de un nombre de fuente.  
  
 El <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> método realiza la operación inversa. Convierte una matriz de cadenas que contiene los nombres de fuente individuales en una sola cadena que contiene una lista de los nombres. Por ejemplo, una matriz que contiene las cadenas "arial", "times new roman" y "verdana" se convierte en la cadena "arial, nueva verdana roman, el tiempo". Tenga en cuenta que se insertan automáticamente comas entre los nombres de fuente sin ningún espacio en blanco.  
  
 Llame a la <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A> método para comprobar que se puede realizar la conversión antes de llamar a la <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.FontNamesConverter> clase para convertir una cadena con una lista de nombres de fuente a una matriz de cadenas que contiene los nombres individuales. La matriz de cadenas, a continuación, se convierte a una sola cadena y se muestra.  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeConverter" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)">Cómo: Implementar un convertidor de tipos</related>
    <related type="Article" href="http://msdn.microsoft.com/library/bf3158fb-2fde-494f-bb77-a4645733e1ef">Ejemplos de convertidor de tipos</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontNamesConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontNamesConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.FontNamesConverter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nunca debe tener acceso a un convertidor de tipos directamente. En su lugar, llame al convertidor apropiado mediante el uso de un <xref:System.ComponentModel.TypeDescriptor> objeto. Para obtener más información, vea los ejemplos de <xref:System.ComponentModel.TypeConverter>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)">Cómo: Implementar un convertidor de tipos</related>
        <related type="Article" href="http://msdn.microsoft.com/library/bf3158fb-2fde-494f-bb77-a4645733e1ef">Ejemplos de convertidor de tipos</related>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="fontNamesConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona información acerca del contexto de un convertidor de tipos. De manera opcional, puede pasar <see langword="null" /> para este parámetro.</param>
        <param name="sourceType">
          <see cref="T:System.Type" /> que representa el tipo de datos origen de la conversión.</param>
        <summary>Determina si el convertidor puede convertir un objeto del tipo de datos especificado en una matriz de cadenas que contiene los nombres de fuente individuales.</summary>
        <returns>Es <see langword="true" /> si se puede convertir el tipo; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A> método para determinar si el tipo de datos especificado puede convertirse en una matriz de cadenas que contiene los nombres de fuente individuales.  
  
> [!NOTE]
>  Este convertidor puede convertir sólo un `string` tipo de datos. El `sourceType` parámetro debe ser de tipo <xref:System.String>. En caso contrario, este método devuelve `false` para indicar que no se puede convertir el tipo de datos especificado.  
  
 También puede pasar en `null` para el `context` parámetro.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el método <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A>. El ejemplo determina si el tipo de datos especificado puede convertirse en una matriz de cadenas que contiene los nombres de fuente individuales antes de realizar la conversión.  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)">Cómo: Implementar un convertidor de tipos</related>
        <related type="Article" href="http://msdn.microsoft.com/library/bf3158fb-2fde-494f-bb77-a4645733e1ef">Ejemplos de convertidor de tipos</related>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="fontNamesConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona información acerca del contexto de un convertidor de tipos. Este parámetro no se utiliza en este método. Se reserva para versiones futuras del método. De manera opcional, puede pasar <see langword="null" /> para este parámetro.</param>
        <param name="culture">Objeto <see cref="T:System.Globalization.CultureInfo" /> que representa información sobre una referencia cultural como el idioma, el sistema de calendario, etc. Este parámetro no se utiliza en este método. Se reserva para versiones futuras del método. De manera opcional, puede pasar <see langword="null" /> para este parámetro.</param>
        <param name="value">Instancia de <see cref="T:System.Object" /> que representa la cadena de origen de la conversión.</param>
        <summary>Convierte una cadena que representa una lista de nombres de fuente en una matriz de cadenas que contiene los nombres de fuente individuales.</summary>
        <returns>Una instancia de <see cref="T:System.Object" /> que representa la matriz de cadenas que contiene los nombres de fuente individuales.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> método para convertir una cadena que contiene una lista de nombres de fuente en una matriz de cadenas que contiene los nombres individuales. Cada nombre de fuente en la cadena debe estar separado por punto y coma. Por ejemplo, la cadena "arial, nueva verdana roman, el tiempo", se convierte en una matriz que contiene las cadenas "arial", "times new roman" y "verdana". Tenga en cuenta que las comas se quitan junto con los espacios en blanco al principio o al final del nombre de fuente. No se quita el espacio en blanco en medio de un nombre de fuente.  
  
> [!NOTE]
>  El `context` y `culture` no se usan parámetros en esta versión del método; están reservadas para versiones futuras del método. También puede pasar en `null` para estos parámetros.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> método para convertir una cadena con una lista de nombres de fuente en una matriz de cadenas que contiene los nombres individuales.  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)">
          <paramref name="value" /> no es del tipo <see cref="T:System.String" />.</exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)">Cómo: Implementar un convertidor de tipos</related>
        <related type="Article" href="http://msdn.microsoft.com/library/bf3158fb-2fde-494f-bb77-a4645733e1ef">Ejemplos de convertidor de tipos</related>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="fontNamesConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona información acerca del contexto de un convertidor de tipos. Este parámetro no se utiliza en este método. Se reserva para versiones futuras del método. De manera opcional, puede pasar <see langword="null" /> para este parámetro.</param>
        <param name="culture">Objeto <see cref="T:System.Globalization.CultureInfo" /> que representa información sobre una referencia cultural como el idioma, el sistema de calendario, etc. Este parámetro no se utiliza en este método. Se reserva para versiones futuras del método. De manera opcional, puede pasar <see langword="null" /> para este parámetro.</param>
        <param name="value">Objeto que representa la matriz de cadenas de origen de la conversión.</param>
        <param name="destinationType">Instancia del objeto <see cref="T:System.Object" /> que representa el tipo de datos al que se va a convertir. Este parámetro debe ser de tipo <see cref="T:System.String" />.</param>
        <summary>Crea una cadena que representa una lista de nombres de fuente a partir de una matriz de cadenas que contiene los nombres de fuente individuales.</summary>
        <returns>Una instancia de <see cref="T:System.Object" /> que representa una cadena que contiene una lista de nombres de fuente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> método para convertir una matriz de cadenas que contiene los nombres de fuente individuales en una sola cadena que contiene una lista de los nombres. Por ejemplo, una matriz que contiene las cadenas "arial", "times new roman" y "verdana" se convierte en la cadena "arial, nueva verdana roman, el tiempo". Tenga en cuenta que se insertan automáticamente comas entre los nombres de fuente sin ningún espacio en blanco.  
  
> [!NOTE]
>  Este convertidor puede convertir a solo un `string` tipo de datos. El `destinationType` parámetro debe ser de tipo <xref:System.String>.  
  
> [!NOTE]
>  El `context` y `culture` no se usan parámetros en esta versión del método; están reservadas para versiones futuras del método. También puede pasar en `null` para estos parámetros.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> método para convertir una matriz de cadenas que contiene los nombres individuales en una sola cadena que contiene una lista de nombres de fuente.  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)">
          <paramref name="destinationType" /> no es del tipo <see cref="T:System.String" />.</exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)">Cómo: Implementar un convertidor de tipos</related>
        <related type="Article" href="http://msdn.microsoft.com/library/bf3158fb-2fde-494f-bb77-a4645733e1ef">Ejemplos de convertidor de tipos</related>
      </Docs>
    </Member>
  </Members>
</Type>