<Type Name="FormViewUpdatedEventArgs" FullName="System.Web.UI.WebControls.FormViewUpdatedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a20f34032697e518f34d74d21c019fea737c8e53" /><Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="09/22/2018" /><Meta Name="ms.locfileid" Value="46651514" /></Metadata><TypeSignature Language="C#" Value="public class FormViewUpdatedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormViewUpdatedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class FormViewUpdatedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormViewUpdatedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type FormViewUpdatedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona datos para el evento <see cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.FormView> control provoca la <xref:System.Web.UI.WebControls.FormView.ItemUpdated> eventos cuando un botón de actualización (un botón con su `CommandName` propiedad establecida en "Update") dentro del control se hace clic en, pero después el <xref:System.Web.UI.WebControls.FormView> control actualiza el registro. Esto le permite proporcionar un método de control de eventos que realiza una rutina personalizada, como comprobar los resultados de una operación de actualización, siempre que se produce este evento.  
  
 Un <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> objeto se pasa al método de control de eventos, que le permite determinar el número de registros afectados y las excepciones que pudieran haberse producido. Para determinar el número de registros afectados por la operación de actualización, utilice el <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> propiedad. Use el <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> propiedad para determinar si se ha producido ninguna excepción. También puede indicar si se controló la excepción en el método de control de eventos estableciendo la <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> propiedad. Si necesita tener acceso a los valores de campo de clave originales del registro actualizado, utilice el <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> propiedad. Los valores originales del campo de clave no pueden tener acceso mediante la <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> propiedad. Los valores actualizados (que incluyen valores de campo de clave actualizados, si permite al usuario editar los campos de clave) son accesibles mediante el <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> propiedad.  
  
 De forma predeterminada, el <xref:System.Web.UI.WebControls.FormView> control vuelve al modo especificado por el <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> propiedad después de una operación de actualización. Al controlar una excepción que se produjeron durante la operación de actualización, puede mantener el <xref:System.Web.UI.WebControls.FormView> control en modo de edición estableciendo el <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> propiedad `true`.  
  
 Para obtener más información acerca de cómo controlar eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 Para obtener una lista con los valores de propiedad iniciales de una instancia de la clase <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs>, vea el constructor <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.%23ctor%2A>.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> objeto pasado al método de control de eventos para el <xref:System.Web.UI.WebControls.FormView.ItemUpdated> evento para determinar si se produjo una excepción durante una operación de actualización.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormViewUpdatedEventArgs (int affectedRows, Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 affectedRows, class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (affectedRows As Integer, e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormViewUpdatedEventArgs(int affectedRows, Exception ^ e);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormViewUpdatedEventArgs : int * Exception -&gt; System.Web.UI.WebControls.FormViewUpdatedEventArgs" Usage="new System.Web.UI.WebControls.FormViewUpdatedEventArgs (affectedRows, e)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="affectedRows">Número de filas afectadas por la operación de actualización.</param>
        <param name="e">Objeto <see cref="T:System.Exception" /> que representa la excepción que se produjo cuando se llevó a cabo la operación de actualización. Si no se ha producido ninguna excepción, utilice <see langword="null" /> para este parámetro.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este constructor para inicializar una nueva instancia de la <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> clase.  
  
 En la siguiente tabla se muestran los valores iniciales de las propiedades de una instancia de la clase <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs>.  
  
|Propiedad.|Valor inicial|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A>|Valor del parámetro `affectedRows`.|  
|<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A>|El <xref:System.Exception?displayProperty=nameWithType> objeto contenido en el `e` parámetro.|  
|<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A>|Inicializado a `false`.|  
|<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A>|Inicializado a `false`.|  
  
> [!NOTE]
>  Este constructor se usa principalmente los desarrolladores de controles al generar eventos.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el número de filas afectadas por la operación de actualización.</summary>
        <value>Número de filas afectadas por la operación de actualización.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> propiedad para determinar el número de registros afectados por la operación de actualización. Esta propiedad se utiliza normalmente para comprobar que se ha actualizado el número correcto de registros en las situaciones siguientes:  
  
-   Compruebe que se ha actualizado solo un único registro. A veces una instrucción update escrito incorrectamente puede actualizar varios registros.  
  
-   Compruebe que se actualizó un registro cuando se produce un error durante la operación de actualización que no produzca una excepción.  
  
-   Compruebe que se actualizó un registro cuando un control de origen de datos que admita la detección de conflictos (comprobación de simultaneidad optimista), como el <xref:System.Web.UI.WebControls.SqlDataSource> y <xref:System.Web.UI.WebControls.ObjectDataSource> controla, tiene su <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> propiedad establecida en el `ConflictOptions.CompareAllValues` valor de enumeración . En esta configuración, no podría actualizar un registro que se ha modificado por otro usuario al mismo tiempo.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> propiedad para comprobar que se actualizó un registro.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la excepción que se ha producido durante la operación de actualización, si la hubiera.</summary>
        <value>Objeto <see cref="T:System.Exception" /> que representa la excepción que se ha producido durante la operación de actualización.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> propiedad para determinar la excepción (si existe) que se ha producido durante la operación de actualización. Si no se ha producido ninguna excepción, esta propiedad devolverá `null`.  
  
> [!NOTE]
>  Si se generó una excepción y decidir controlar la excepción en el controlador de eventos, asegúrese de establecer el <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> propiedad `true`; en caso contrario, se produce la excepción de nuevo mediante el <xref:System.Web.UI.WebControls.FormView> control.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> propiedad para determinar si se produjo una excepción durante una operación de actualización.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si la excepción que se produjo durante la operación de actualización se ha controlado en el controlador de eventos.</summary>
        <value>Es <see langword="true" /> si la excepción se ha controlado en el controlador de eventos; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se produce una excepción durante la operación de actualización, utilice el <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> propiedad para indicar si la excepción se controló en el evento controlador. Cuando esta propiedad se establece en `true`, la excepción se considera controlado y no se produce de nuevo mediante el <xref:System.Web.UI.WebControls.FormView> control. Si esta propiedad se establece en `false`, se produce la excepción de nuevo. Para determinar qué excepción se ha generado, use el <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> propiedad para indicar que la excepción se controló en el evento controlador.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
      </Docs>
    </Member>
    <Member MemberName="KeepInEditMode">
      <MemberSignature Language="C#" Value="public bool KeepInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepInEditMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepInEditMode : bool with get, set" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el control <see cref="T:System.Web.UI.WebControls.FormView" /> debe permanecer en modo de edición tras una operación de actualización.</summary>
        <value>Es <see langword="true" /> si el control debe permanecer en modo de edición tras una operación de actualización; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada, el <xref:System.Web.UI.WebControls.FormView> control vuelve al modo especificado por el <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> propiedad después de una operación de actualización. Use la <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> propiedad para especificar si el <xref:System.Web.UI.WebControls.FormView> control debería permanecer en modo de edición. Para mantener la <xref:System.Web.UI.WebControls.FormView> en modo de edición de control, establezca esta propiedad en `true`.  
  
> [!NOTE]
>  Esta propiedad debe usarse solo cuando se produce una situación (por ejemplo, una excepción que se generen) que requiere que el control se comportan de manera diferente a como lo haría normalmente. Si el <xref:System.Web.UI.WebControls.FormView> control debe permanecer en modo de edición de forma predeterminada, establezca el <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> propiedad en su lugar.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> propiedad para mantener un <xref:System.Web.UI.WebControls.FormView> control en modo de edición cuando se produce una excepción.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ Keys { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un diccionario que contiene los pares de nombre y valor originales de los campos de claves del registro actualizado.</summary>
        <value>Interfaz <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> que contiene un diccionario con los pares de nombre y valor originales de los campos de claves del registro actualizado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> propiedad contiene los valores originales de los campos clave aparece en el <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> propiedad de un <xref:System.Web.UI.WebControls.FormView> control. Use el <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> propiedad para tener acceso a los valores del campo clave de un registro actualizado. Por ejemplo, puede utilizar estos valores para mantener un registro de los registros actualizados.  
  
> [!NOTE]
>  Si permite que el usuario actualizar los valores de los campos clave, el <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> propiedad contiene los valores de campo de clave original. Los valores actualizados se almacenan en el <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> propiedad.  
  
 El <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> propiedad devuelve un <xref:System.Collections.Specialized.OrderedDictionary> objeto que implementa el <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> interfaz. El <xref:System.Collections.Specialized.OrderedDictionary> contiene el objeto <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> objetos que representan los campos del registro actualizado. Para obtener acceso a los nombres de campo, utilice la <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> propiedad de la <xref:System.Collections.Specialized.OrderedDictionary> objeto. De forma similar, puede acceder a los valores de campo mediante el <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> propiedad.  
  
> [!NOTE]
>  Como método abreviado, también puede usar el indizador de la <xref:System.Collections.Specialized.OrderedDictionary> directamente los valores de objeto que se va a obtener acceso al campo. Los controles que se basan en el orden de los campos del origen de datos (como <xref:System.Web.UI.WebControls.AccessDataSource>) puede tener acceso a los valores de campo sólo por índice.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> propiedad para tener acceso a los valores del campo clave de un registro actualizado.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      </Docs>
    </Member>
    <Member MemberName="NewValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary NewValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary NewValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ NewValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NewValues : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un diccionario que contiene los nuevos pares de nombre y valor de los campos del registro actualizado.</summary>
        <value>Interfaz <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> que contiene un diccionario con los nuevos pares de nombre y valor de los campos del registro actualizado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> propiedad para tener acceso a los nuevos valores de campo del registro actualizado. Por ejemplo, puede utilizar estos valores para mantener un registro de los registros actualizados.  
  
> [!NOTE]
>  Si permite que el usuario actualizar los valores de los campos clave, el <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> propiedad contiene los valores de campo de clave original. Los valores actualizados se almacenan en el <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> propiedad.  
  
 El <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> propiedad devuelve un <xref:System.Collections.Specialized.OrderedDictionary> objeto que implementa el <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> interfaz. El <xref:System.Collections.Specialized.OrderedDictionary> contiene el objeto <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> objetos que representan los campos del registro actualizado. Para obtener acceso a los nombres de campo, utilice la <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> propiedad de la <xref:System.Collections.Specialized.OrderedDictionary> objeto. De forma similar, puede acceder a los valores de campo mediante el <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> propiedad.  
  
> [!NOTE]
>  Como método abreviado, también puede usar el indizador de la <xref:System.Collections.Specialized.OrderedDictionary> directamente los valores de objeto que se va a obtener acceso al campo. Los controles que se basan en el orden de los campos del origen de datos (como <xref:System.Web.UI.WebControls.AccessDataSource>) puede tener acceso a los valores de campo sólo por índice.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> propiedad para tener acceso a los nuevos valores especificados por el usuario para los campos que no son de clave del registro actualizado.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      </Docs>
    </Member>
    <Member MemberName="OldValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary OldValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary OldValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OldValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ OldValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OldValues : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un diccionario que contiene los pares de nombre y valor originales de los campos que no son claves del registro actualizado.</summary>
        <value>Interfaz <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> que contiene un diccionario con los pares de nombre y valor originales de los campos del registro actualizado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> propiedad para tener acceso a los valores originales de campo no clave del registro actualizado. Por ejemplo, puede utilizar estos valores para mantener un registro de los registros actualizados. Un control de origen de datos que admita la detección de conflictos (comprobación de simultaneidad optimista), como el <xref:System.Web.UI.WebControls.SqlDataSource> y <xref:System.Web.UI.WebControls.ObjectDataSource> controles, con su <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> propiedad establecida en el `ConflictOptions.CompareAllValues` también compara estos valores originales en el se realiza el registro en la base de datos antes de una operación de actualización. Si un registro se ha modificado por otro usuario al mismo tiempo, no se actualiza el registro.  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> propiedad no contiene campos de clave. Si permite que el usuario actualizar los valores de los campos clave, los valores de campo de clave originales se almacenan en el <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> propiedad. Los valores actualizados se almacenan en el <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> propiedad.  
  
 El <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> propiedad devuelve un <xref:System.Collections.Specialized.OrderedDictionary> objeto que implementa el <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> interfaz. El <xref:System.Collections.Specialized.OrderedDictionary> contiene el objeto <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> objetos que representan los campos del registro actualizado. Para obtener acceso a los nombres de campo, utilice la <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> propiedad de la <xref:System.Collections.Specialized.OrderedDictionary> objeto. De forma similar, puede acceder a los valores de campo mediante el <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> propiedad.  
  
> [!NOTE]
>  Como método abreviado, también puede usar el indizador de la <xref:System.Collections.Specialized.OrderedDictionary> directamente los valores de objeto que se va a obtener acceso al campo. Los controles que se basan en el orden de los campos del origen de datos (como <xref:System.Web.UI.WebControls.AccessDataSource>) puede tener acceso a los valores de campo sólo por índice.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> propiedad para tener acceso a los valores originales de los campos que no son de clave del registro actualizado.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      </Docs>
    </Member>
  </Members>
</Type>