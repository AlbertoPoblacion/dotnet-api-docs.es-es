<Type Name="LoginView" FullName="System.Web.UI.WebControls.LoginView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5d3a1e9301f9be231127d0fb1014e0990b5540f1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36380712" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LoginView : System.Web.UI.Control, System.Web.UI.INamingContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LoginView extends System.Web.UI.Control implements class System.Web.UI.INamingContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LoginView" />
  <TypeSignature Language="VB.NET" Value="Public Class LoginView&#xA;Inherits Control&#xA;Implements INamingContainer" />
  <TypeSignature Language="C++ CLI" Value="public ref class LoginView : System::Web::UI::Control, System::Web::UI::INamingContainer" />
  <TypeSignature Language="F#" Value="type LoginView = class&#xA;    inherit Control&#xA;    interface INamingContainer" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ViewChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("CurrentView")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LoginViewDesigner,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Muestra la plantilla de contenido adecuada para un usuario determinado, basándose en el estado de autenticación y la pertenencia a roles del usuario.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En este tema:  
  
-   [Introducción](#introduction)  
  
-   [Sintaxis declarativa](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introducción  
 El <xref:System.Web.UI.WebControls.LoginView> control muestra diferentes sitio Web contenido plantillas (o "vistas") para los distintos usuarios, en función de si el usuario está autenticado y, si es así, las funciones del sitio Web a la que pertenece.  
  
> [!NOTE]
>  Si no está familiarizado con el conjunto de controles de inicio de sesión disponibles en ASP.NET, vea [información general de los controles de inicio de sesión de ASP.NET](http://msdn.microsoft.com/library/ac032230-6469-4b03-b68d-03ef2643a24d) antes de continuar. Para obtener una lista de otros temas relacionados con controles de inicio de sesión y pertenencia, vea [administrar usuarios mediante pertenencia](http://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd).  
  
 La plantilla almacenada en la <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> propiedad es visible para cualquier visitante al sitio Web que no ha iniciado sesión. Una vez que un usuario ha iniciado sesión, el sitio muestra una plantilla asociada a uno de los roles del usuario en el <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> propiedad o la plantilla predeterminada especificada en el <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> propiedad.  
  
 El <xref:System.Web.UI.WebControls.LoginView> control administra el cambio entre las distintas plantillas una vez que se asignan las plantillas a cualquiera de las tres propiedades de plantilla de la <xref:System.Web.UI.WebControls.LoginView> clase:  
  
-   <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> -Especifica la plantilla para mostrar a los usuarios que no se registran en el sitio Web. Los usuarios que han iniciado sesión nunca verá esta plantilla.  
  
-   <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> -Especifica la plantilla predeterminada para mostrar a los usuarios que inician sesión en el sitio Web, pero no pertenecen a ningún grupo de funciones con plantillas definidas.  
  
-   <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> -Especifica la plantilla para mostrar a los usuarios que hayan iniciado sesión que son miembros de roles con plantillas de grupo de funciones definidas. Contenido de plantillas están asociadas a conjuntos de funciones en particulares <xref:System.Web.UI.WebControls.RoleGroup> instancias.  
  
 Plantillas de grupo de funciones se buscan en el orden en que están definidos en el origen. La primera plantilla de grupo de funciones de búsqueda de coincidencias se muestra al usuario. Si un usuario es miembro de más de un rol, se utiliza la primera plantilla de grupo de funciones que coincida con cualquiera de los roles del usuario. Si más de una plantilla está asociada a un solo rol, se utiliza la primera plantilla definida.  
  
 En la tabla siguiente describe el comportamiento de la <xref:System.Web.UI.WebControls.LoginView> cuando se utilizan varias combinaciones de plantillas de control.  
  
|Propiedad de plantilla LoggedIn|Propiedad de la plantilla anónima|Propiedad RoleGroups|Comportamiento de LoginView|  
|--------------------------------|---------------------------------|-------------------------|------------------------|  
|Sin establecer|Sin establecer|Sin establecer|No muestra ningún contenido.|  
|Set|Sin establecer|Sin establecer|Muestra el contenido sólo cuando el usuario ha iniciado sesión.|  
|Sin establecer|Set|Sin establecer|Muestra el contenido sólo cuando el usuario no ha iniciado sesión.|  
|Sin establecer|Sin establecer|Set|Muestra la primera plantilla en la <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> colección que coincide con uno de los roles del usuario. Si se encuentra ninguna coincidencia, muestra ningún contenido.|  
|Set|Set|Sin establecer|Si el usuario ha iniciado sesión, se muestra la plantilla especificada en el <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> propiedad. Si el usuario en no inició sesión, se muestra la plantilla especificada en el <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> propiedad.|  
|Set|Set|Set|Si el usuario ha iniciado sesión, se muestra la primera plantilla en la <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> colección que coincide con uno de los roles del usuario. Si se encuentra ninguna coincidencia, muestra la plantilla especificada en el <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> propiedad. Si el usuario no ha iniciado sesión, se muestra la plantilla especificada en el <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> propiedad.|  
|Set|Sin establecer|Set|Si el usuario ha iniciado sesión, se muestra la primera plantilla en la <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> colección que coincide con uno de los roles del usuario. Si se encuentra ninguna coincidencia, muestra la plantilla especificada en el <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> propiedad. Si el usuario no ha iniciado sesión, se muestra nada.|  
|Sin establecer|Set|Set|Si el usuario ha iniciado sesión, se muestra la primera plantilla en la <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> colección que coincide con uno de los roles del usuario. Si se encuentra ninguna coincidencia, se muestra nada. Si el usuario no ha iniciado sesión, se muestra la plantilla especificada en el <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> propiedad.|  
  
 El <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> y <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> puede utilizarse con cualquier esquema de autenticación que establece el <xref:System.Security.Principal.IIdentity.Name%2A> propiedad de la <xref:System.Web.UI.Page> del objeto <xref:System.Web.UI.Page.User%2A> propiedad. Debe configurar la administración de funciones para usar la <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> propiedad para definir plantillas de base en el rol del usuario en el sitio Web. Para obtener más información, consulte [Understanding Role Management](http://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6).  
  
 El <xref:System.Web.UI.Control.Focus%2A> método no establece el foco inicial de la página Web para el <xref:System.Web.UI.WebControls.LoginView> control o cualquiera de sus controles secundarios. Controles de contenido en el <xref:System.Web.UI.WebControls.LoginView> control creados después de la <xref:System.Web.UI.Control.PreRender> eventos. Para establecer el foco en un control secundario contenido la <xref:System.Web.UI.WebControls.LoginView>, controlar el `On_PreRender` y llamar a su <xref:System.Web.UI.Control.Focus%2A> método.  También puede usar el <xref:System.Web.UI.WebControls.LoginView.ViewChanging> y <xref:System.Web.UI.WebControls.LoginView.ViewChanged> eventos acceso mediante programación a los controles en el <xref:System.Web.UI.WebControls.LoginView> plantillas de control.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Sintaxis declarativa  
  
```  
<asp:LoginView  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    OnViewChanged="ViewChanged event handler"  
    OnViewChanging="ViewChanging event handler"  
    runat="server"  
    SkinID="string"  
    Visible="True|False"  
>  
        <AnonymousTemplate>  
            <!-- child controls -->  
        </AnonymousTemplate>  
        <LoggedInTemplate>  
            <!-- child controls -->  
        </LoggedInTemplate>  
        <RoleGroups>  
                <asp:RoleGroup  
                    Roles="string"  
                >  
                        <ContentTemplate>  
                            <!-- child controls -->  
                        </ContentTemplate>  
                </asp:RoleGroup>  
        </RoleGroups>  
</asp:LoginView>  
```  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo establecer las plantillas para cada uno de los tres tipos de plantilla admitidos por el <xref:System.Web.UI.WebControls.LoginView> control.  
  
 [!code-aspx-csharp[LoginViewClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginViewClass/CS/loginviewclasscs.aspx#1)]
 [!code-aspx-vb[LoginViewClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginViewClass/VB/loginviewclassvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Security.Roles" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LoginView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LoginView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia del control <see cref="T:System.Web.UI.WebControls.LoginView" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnonymousTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate AnonymousTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate AnonymousTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.AnonymousTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AnonymousTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ AnonymousTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AnonymousTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.LoginView.AnonymousTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.LoginView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la plantilla que se ha de mostrar a los usuarios que no hayan iniciado una sesión en el sitio Web.</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> que se va a mostrar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> propiedad especifica la plantilla de contenido para mostrar a los usuarios del sitio Web cuando no han iniciado sesión el sitio Web. Esta plantilla se muestra cuando el <xref:System.Security.Principal.IIdentity.Name%2A> propiedad de la <xref:System.Web.UI.Page> <xref:System.Web.UI.Page.User%2A> propiedad es `null`.  
  
 El <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> plantilla nunca se muestra a los usuarios autenticados. Si el <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> propiedad está vacía, se muestra ningún contenido a los usuarios que no se ha iniciado sesión.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se utiliza la plantilla especificada en el <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> plantilla para mostrar una invitación para registrarse en servicios personalizados.  
  
 [!code-aspx-csharp[LoginViewAnonymousTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginViewAnonymousTemplate/CS/loginviewanonymoustemplatecs.aspx#1)]
 [!code-aspx-vb[LoginViewAnonymousTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginViewAnonymousTemplate/VB/loginviewanonymoustemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.WebControls.LoginView.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Web.UI.ControlCollection" /> que contiene los controles secundarios del control <see cref="T:System.Web.UI.WebControls.LoginView" />.</summary>
        <value>Colección de controles secundarios del control <see cref="T:System.Web.UI.WebControls.LoginView" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="loginView.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea los controles secundarios que constituyen el control <see cref="T:System.Web.UI.WebControls.LoginView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.LoginView.CreateChildControls%2A> método crea los controles individuales que componen el <xref:System.Web.UI.WebControls.LoginView> control. El conjunto de controles creados varía según la plantilla de contenido que se mostrará para el usuario. Por ejemplo, cuando un usuario no ha iniciado el sitio Web, sólo los controles contenidos en la plantilla especificada en el <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> se crea la propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberSignature Language="F#" Value="override this.DataBind : unit -&gt; unit" Usage="loginView.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enlaza un origen de datos a <see cref="T:System.Web.UI.WebControls.LoginView" /> y a todos sus controles secundarios.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.LoginView.DataBind%2A> método para enlazar datos desde un origen a la <xref:System.Web.UI.WebControls.LoginView> control y sus elementos secundarios. Este método resuelve todas las expresiones de enlace de datos en el <xref:System.Web.UI.WebControls.LoginView> control y sus controles secundarios en la plantilla activa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.LoginView.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se pueden aplicar temas al control <see cref="T:System.Web.UI.WebControls.LoginView" />.</summary>
        <value>
          <see langword="true" /> para usar temas; en caso contrario, <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A> propiedad indica si los temas están habilitados para el <xref:System.Web.UI.WebControls.LoginView> control. El <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A> propiedad también afecta a si se habilitan los temas para los controles incluidos en su <xref:System.Web.UI.WebControls.LoginView.Controls%2A> colección. Cuando el <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A> propiedad es `true`, directorio de temas de la aplicación se busca máscaras para los controles. Si no existe ninguna máscara para un control determinado en el directorio de temas, no se aplica una máscara. Cuando el <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A> propiedad es `false`, no se busca en el directorio de temas y el contenido de la <xref:System.Web.UI.WebControls.LoginView.SkinID%2A> no se utiliza la propiedad.  
  
 Un control puede invalidar la <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A> valor establecido por su control principal o la página que lo contiene. Por ejemplo, si tiene un control principal <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A> establecido en `false`, puede aplicar temas selectivamente a controles secundarios contenidos dentro del elemento primario estableciendo la <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A> propiedad `true` en los controles secundarios individuales.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.LoginView.SkinID" />
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public override void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Focus();" />
      <MemberSignature Language="F#" Value="override this.Focus : unit -&gt; unit" Usage="loginView.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Establece el foco de entrada en un control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.LoginView.Focus%2A> método no establece el foco inicial de la página Web para el <xref:System.Web.UI.WebControls.LoginView> control o a cualquiera de sus controles secundarios. Controles que se encuentran en el <xref:System.Web.UI.WebControls.LoginView> control creados después de la <xref:System.Web.UI.Control.PreRender> eventos. Para establecer el foco en un control secundario contenido la <xref:System.Web.UI.WebControls.LoginView>, controlar el `On_PreRender` y llamar a su <xref:System.Web.UI.Control.Focus%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Se llama al método <see cref="M:System.Web.UI.WebControls.LoginView.Focus" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="loginView.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <see cref="T:System.Object" /> que representa el estado del control que se va a restaurar.</param>
        <summary>Este método implementa <see cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoggedInTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate LoggedInTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate LoggedInTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.LoggedInTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LoggedInTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ LoggedInTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LoggedInTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.LoginView.LoggedInTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.LoginView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la plantilla que se ha de mostrar a usuarios del sitio Web que, pese a haber iniciado una sesión en él, no sean miembros de uno de los grupos de roles especificados en la propiedad <see cref="P:System.Web.UI.WebControls.LoginView.RoleGroups" />.</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> que se va a mostrar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> propiedad se muestra a los usuarios del sitio Web cuando se cumplen las condiciones siguientes:  
  
-   El <xref:System.Security.Principal.IIdentity.Name%2A> propiedad de la <xref:System.Web.UI.Page> <xref:System.Web.UI.Page.User%2A> propiedad no es `null`  
  
-   El usuario no pertenece a un grupo de funciones definido en el <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> propiedad.  
  
 El <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> propiedad especifica una plantilla predeterminada para los usuarios del sitio Web autenticado. Si no ha configurado la administración de roles, el <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> es la plantilla sola disponible para los usuarios autenticados. Para obtener más información acerca de cómo configurar la administración de roles, consulte [Understanding Role Management](http://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6).  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> plantilla para mostrar vínculos a información personalizada para los usuarios conectados.  
  
 [!code-aspx-csharp[LoginViewAnonymousTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginViewAnonymousTemplate/CS/loginviewanonymoustemplatecs.aspx#1)]
 [!code-aspx-vb[LoginViewAnonymousTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginViewAnonymousTemplate/VB/loginviewanonymoustemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Security.Roles" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="loginView.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Web.UI.Control.Init" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.LoginView.OnInit%2A> método realiza la inicialización para el <xref:System.Web.UI.WebControls.LoginView> control.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Web.UI.WebControls.LoginView.OnInit%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar <see cref="M:System.Web.UI.WebControls.LoginView.OnInit(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Web.UI.WebControls.LoginView.OnInit(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="loginView.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Determina qué plantilla de grupo de roles se va a mostrar, a partir de los roles del usuario conectado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.LoginView.OnPreRender%2A> método se llama durante la <xref:System.Web.UI.Control.PreRender> evento para determinar qué plantilla de contenido para mostrar al usuario. Si el <xref:System.Security.Principal.IIdentity.Name%2A> propiedad de la <xref:System.Web.UI.Page> <xref:System.Web.UI.Page.User%2A> propiedad es `null`, la plantilla especificada en el <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> se muestra la propiedad; en caso contrario, se muestra la plantilla asociada con el rol del usuario. Si el usuario no pertenece a un grupo de funciones definido o si no ha configurado la administración de roles, el <xref:System.Web.UI.WebControls.LoginView> control muestra la plantilla especificada en el <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> propiedad. Para obtener más información acerca de cómo configurar la administración de roles, consulte [proveedores de administración de roles](http://msdn.microsoft.com/library/71ddd651-5f91-471b-ad9f-61249b0bf0d5).  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Web.UI.WebControls.LoginView.OnPreRender%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar <see cref="M:System.Web.UI.WebControls.LoginView.OnPreRender(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Web.UI.WebControls.LoginView.OnPreRender(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnViewChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnViewChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnViewChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.OnViewChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnViewChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnViewChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnViewChanged : EventArgs -&gt; unit&#xA;override this.OnViewChanged : EventArgs -&gt; unit" Usage="loginView.OnViewChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Provoca el evento <see cref="E:System.Web.UI.WebControls.LoginView.ViewChanged" /> después de que el control <see cref="T:System.Web.UI.WebControls.LoginView" /> cambie las vistas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando el <xref:System.Web.UI.WebControls.LoginView> control cambia las vistas, quita los controles de la plantilla anterior y crea nuevos controles secundarios a partir de la nueva plantilla. El <xref:System.Web.UI.WebControls.LoginView.OnViewChanged%2A> método se llama una vez creados los nuevos controles secundarios.  
  
 Use la <xref:System.Web.UI.WebControls.LoginView.OnViewChanged%2A> método para realizar cualquier procesamiento, como el enlace de datos, es necesario para inicializar los controles en la nueva vista.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Web.UI.WebControls.LoginView.OnViewChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar <see cref="M:System.Web.UI.WebControls.LoginView.OnViewChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Web.UI.WebControls.LoginView.OnViewChanged(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.LoginView.ViewChanged" />
        <altmember cref="M:System.Web.UI.WebControls.LoginView.OnViewChanging(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnViewChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnViewChanging (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnViewChanging(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.OnViewChanging(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnViewChanging (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnViewChanging(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnViewChanging : EventArgs -&gt; unit&#xA;override this.OnViewChanging : EventArgs -&gt; unit" Usage="loginView.OnViewChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Provoca el evento <see cref="E:System.Web.UI.WebControls.LoginView.ViewChanging" /> antes de que el control <see cref="T:System.Web.UI.WebControls.LoginView" /> cambie las vistas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando el <xref:System.Web.UI.WebControls.LoginView> controles cambia las vistas, quita los controles de la plantilla anterior y crea nuevos controles secundarios a partir de la nueva plantilla. El <xref:System.Web.UI.WebControls.LoginView.OnViewChanging%2A> método se llama antes de los controles anteriores se quitan.  
  
 Use la <xref:System.Web.UI.WebControls.LoginView.OnViewChanging%2A> método para realizar cualquier procesamiento necesario, como guardar información de control, antes de que los controles se quitan.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Web.UI.WebControls.LoginView.OnViewChanging%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar <see cref="M:System.Web.UI.WebControls.LoginView.OnViewChanging(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Web.UI.WebControls.LoginView.OnViewChanging(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.LoginView.ViewChanging" />
        <altmember cref="M:System.Web.UI.WebControls.LoginView.OnViewChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="loginView.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> utilizado para representar el contenido del control de servidor en el explorador del cliente.</param>
        <summary>Representa el contenido del control de servidor Web en el explorador del cliente por medio del objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.LoginView.Render%2A> método se usa para representar el contenido de control de servidor en el explorador del cliente utilizando la especificada <xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType> objeto.  
  
 **Tenga en cuenta** este método se usa principalmente los programadores de controles para extender el <xref:System.Web.UI.WebControls.LoginView> control.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RoleGroups">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.RoleGroupCollection RoleGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.RoleGroupCollection RoleGroups" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.RoleGroups" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RoleGroups As RoleGroupCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::RoleGroupCollection ^ RoleGroups { System::Web::UI::WebControls::RoleGroupCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RoleGroups : System.Web.UI.WebControls.RoleGroupCollection" Usage="System.Web.UI.WebControls.LoginView.RoleGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RoleGroupCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una colección de grupos de roles que asocian plantillas de contenido a determinados roles.</summary>
        <value>Objeto <see cref="T:System.Web.UI.WebControls.RoleGroupCollection" /> que contiene las plantillas de grupo de roles definidos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> propiedad contiene las plantillas de contenido asociadas con distintas funciones en el sitio Web. La colección en el <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> propiedad se busca en el orden en que las plantillas se definen en el origen. La primera plantilla de grupo de funciones de búsqueda de coincidencias se muestra al usuario. Si un usuario es miembro de más de un rol, se utiliza la primera plantilla de grupo de funciones que coincida con cualquiera de los roles del usuario. Si más de una plantilla está asociada a un solo rol, se utilizará la primera plantilla definida.  
  
 Si un usuario ha iniciado la sesión no pertenece a ninguna función incluida en la colección de grupos de rol, el sitio muestra la plantilla de contenido especificada en el <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> propiedad. Los usuarios anónimos nunca se muestran las plantillas incluidas en la <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> colección.  
  
 Debe configurar la administración de funciones para usar la <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> propiedad para definir las plantillas se basa en el rol del usuario en el sitio Web. Para obtener más información, consulte [Understanding Role Management](http://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6).  
  
 Esta propiedad no se puede establecer mediante temas o temas de la hoja de estilos. Para obtener más información, consulte <xref:System.Web.UI.ThemeableAttribute> y [ASP.NET temas y máscaras](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> colección. Dado que la <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> y <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> propiedades no están establecidas, el contenido se muestra únicamente a los usuarios que pertenecen a roles con una plantilla de contenido definida.  
  
 [!code-aspx-csharp[LoginViewRoleGroups#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginViewRoleGroups/CS/loginviewrolegroupscs.aspx#1)]
 [!code-aspx-vb[LoginViewRoleGroups#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginViewRoleGroups/VB/loginviewrolegroupsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Security.Roles" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="loginView.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Guarda los cambios de estado del control de servidor que se produjeron desde la hora en que la página volvió a publicarse en el servidor.</summary>
        <returns>Devuelve el estado actual del control de servidor. Si no hay ningún estado asociado al control, este método devuelve <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.SaveControlState" />
      </Docs>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected override void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.SetDesignModeState(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetDesignModeState (data As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetDesignModeState(System::Collections::IDictionary ^ data);" />
      <MemberSignature Language="F#" Value="override this.SetDesignModeState : System.Collections.IDictionary -&gt; unit" Usage="loginView.SetDesignModeState data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data">
          <see cref="T:System.Collections.IDictionary" /> que contiene los datos en tiempo de diseño del control.</param>
        <summary>Establece los datos en tiempo de diseño para un control.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkinID : string with get, set" Usage="System.Web.UI.WebControls.LoginView.SkinID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la máscara que se ha de aplicar al control <see cref="T:System.Web.UI.WebControls.LoginView" />.</summary>
        <value>Nombre de la máscara que se ha de aplicar al control <see cref="T:System.Web.UI.WebControls.LoginView" />. El valor predeterminado es una cadena vacía ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las máscaras disponibles para un control se encuentran en uno o varios archivos de máscaras de un directorio de temas. El <xref:System.Web.UI.WebControls.LoginView.SkinID%2A> propiedad especifica cuál de estas máscaras se aplica al control. Una máscara es específica de un control determinado; no pueden compartir la configuración de la máscara entre controles de tipos diferentes.  
  
 Si no establece la <xref:System.Web.UI.WebControls.LoginView.SkinID%2A> propiedad, un control usa la máscara predeterminada si se ha definido uno. Por ejemplo, si una máscara sin un identificador se define para un <xref:System.Web.UI.WebControls.Image> controlar esa máscara se aplica a todos los <xref:System.Web.UI.WebControls.Image> controles que no hagan referencia explícitamente una máscara con el identificador y que no estén establecidos para deshabilitar la creación de temas. Si se define una máscara con un identificador para un <xref:System.Web.UI.WebControls.Image> controlar esa máscara se aplica solo a <xref:System.Web.UI.WebControls.Image> controla cuyo <xref:System.Web.UI.WebControls.WebControl.SkinID%2A> se establece en ese identificador.  
  
 Si los archivos de la máscara en un directorio de temas no contienen una máscara con los valores especificados <xref:System.Web.UI.WebControls.LoginView.SkinID%2A>, un <xref:System.ArgumentException> se produce una excepción en tiempo de ejecución.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La máscara especificada en la propiedad <see cref="P:System.Web.UI.WebControls.LoginView.SkinID" /> no existe en el tema.</exception>
        <altmember cref="P:System.Web.UI.WebControls.LoginView.EnableTheming" />
      </Docs>
    </Member>
    <Member MemberName="ViewChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ViewChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ViewChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LoginView.ViewChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ViewChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ViewChanged;" />
      <MemberSignature Language="F#" Value="member this.ViewChanged : EventHandler " Usage="member this.ViewChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce tras cambiar la vista.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando el <xref:System.Web.UI.WebControls.LoginView> control cambia las vistas, quita los controles de la plantilla anterior y crea nuevos controles secundarios a partir de la nueva plantilla. El <xref:System.Web.UI.WebControls.LoginView.ViewChanged> evento se desencadena una vez creados los nuevos controles secundarios.  
  
 Use la <xref:System.Web.UI.WebControls.LoginView.ViewChanged> eventos para realizar cualquier procesamiento, como el enlace de datos, es necesario para inicializar los controles en la nueva vista.  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.LoginView.ViewChanged> evento sólo se desencadena si cambia el estado de inicio de sesión para un usuario durante una devolución de datos a la página. El <xref:System.Web.UI.WebControls.LoginView.ViewChanged> eventos no se producen si un usuario inicia sesión con la <xref:System.Web.UI.WebControls.Login> (control), o si el usuario cierra la sesión mediante el <xref:System.Web.UI.WebControls.LoginStatus> control. El <xref:System.Web.UI.WebControls.LoginView.ViewChanged> eventos también no sucederá si un usuario ha iniciado sesión o seguido de una redirección. Un ejemplo de cuándo la <xref:System.Web.UI.WebControls.LoginView.ViewChanged> evento se producirá cuando un usuario haya cerrado la sesión mediante una llamada a la <xref:System.Web.Security.FormsAuthentication.SignOut%2A> método sin que se redirige a otra página. Durante la devolución de datos siguiente a la página, el <xref:System.Web.UI.WebControls.LoginView> control detectará el cambio en el estado de inicio de sesión para el usuario y, a continuación, generar el <xref:System.Web.UI.WebControls.LoginView.ViewChanged> eventos.  
  
 Para obtener más información sobre el control de eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.LoginView.OnViewChanged(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.LoginView.ViewChanging" />
      </Docs>
    </Member>
    <Member MemberName="ViewChanging">
      <MemberSignature Language="C#" Value="public event EventHandler ViewChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ViewChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LoginView.ViewChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ViewChanging As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ViewChanging;" />
      <MemberSignature Language="F#" Value="member this.ViewChanging : EventHandler " Usage="member this.ViewChanging : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce antes de cambiar la vista.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando el <xref:System.Web.UI.WebControls.LoginView> control cambia las vistas, quita los controles de la plantilla anterior y crea nuevos controles secundarios a partir de la nueva plantilla. El <xref:System.Web.UI.WebControls.LoginView.ViewChanging> evento se desencadena antes de que se quitan los controles anteriores.  
  
 Use la <xref:System.Web.UI.WebControls.LoginView.ViewChanging> eventos para realizar cualquier procesamiento, como guardar información de control, es necesario antes de que los controles se quitan.  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.LoginView.ViewChanging> evento sólo se desencadena si cambia el estado de inicio de sesión para un usuario durante una devolución de datos a la página. El <xref:System.Web.UI.WebControls.LoginView.ViewChanging> eventos no se producen si un usuario inicia sesión con la <xref:System.Web.UI.WebControls.Login> (control), o si el usuario cierra la sesión mediante el <xref:System.Web.UI.WebControls.LoginStatus> control. El <xref:System.Web.UI.WebControls.LoginView.ViewChanging> eventos también no sucederá si un usuario ha iniciado sesión o seguido de una redirección. Un ejemplo de cuándo la <xref:System.Web.UI.WebControls.LoginView.ViewChanging> evento se producirá cuando un usuario haya cerrado la sesión mediante una llamada a la <xref:System.Web.Security.FormsAuthentication.SignOut%2A> método sin que se redirige a otra página. Durante la devolución de datos siguiente a la página, el <xref:System.Web.UI.WebControls.LoginView> control detectará el cambio en el estado de inicio de sesión para el usuario y, a continuación, generar el <xref:System.Web.UI.WebControls.LoginView.ViewChanging> eventos.  
  
 Para obtener más información sobre el control de eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.LoginView.OnViewChanging(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.LoginView.ViewChanged" />
      </Docs>
    </Member>
  </Members>
</Type>