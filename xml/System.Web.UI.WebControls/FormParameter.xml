<Type Name="FormParameter" FullName="System.Web.UI.WebControls.FormParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e3045add10d9f1db9603f9b5491e014b17fc47d1" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37535947" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormParameter : System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormParameter extends System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class FormParameter&#xA;Inherits Parameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormParameter : System::Web::UI::WebControls::Parameter" />
  <TypeSignature Language="F#" Value="type FormParameter = class&#xA;    inherit Parameter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Parameter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("FormField")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Enlaza el valor de un campo <see cref="P:System.Web.HttpRequest.Form" /> de solicitud HTTP a un objeto de parámetro.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar el <xref:System.Web.UI.WebControls.FormParameter> clase para enlazar el valor de una variable de formulario en el <xref:System.Web.HttpRequest.Form%2A> colección a un parámetro utilizado en un comando o consulta parametrizado. Los controles que enlazan datos al parámetro podrían producir una excepción si un <xref:System.Web.UI.WebControls.FormParameter> se especifica, pero no se pasa ninguna variable de formulario correspondiente. También no podría mostrar ningún dato si se pasa la variable de formulario no tiene ningún valor correspondiente. Establecer el <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> para evitar estas situaciones.  
  
 El <xref:System.Web.UI.WebControls.FormParameter> clase proporciona el <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> propiedad, que identifica el nombre de la variable de formulario que desea enlazar, además de los heredados de la <xref:System.Web.UI.WebControls.Parameter> clase.  
  
> [!IMPORTANT]
>  El <xref:System.Web.UI.WebControls.FormParameter> no valida el valor pasado por el elemento de formulario de ninguna forma; usa el valor sin formato. En la mayoría de los casos puede validar el valor de la <xref:System.Web.UI.WebControls.FormParameter> antes de utilizarse por un control de origen de datos controlando un evento, como el `Selecting`, `Updating`, `Inserting`, o `Deleting` eventos expuestos por el control de origen de datos que está usando. Si el valor del parámetro no pasa las pruebas de validación, puede cancelar la operación de datos estableciendo el <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propiedad del asociado <xref:System.ComponentModel.CancelEventArgs> clase `true`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo insertar datos en una base de datos mediante el <xref:System.Web.UI.WebControls.SqlDataSource> control y una página Web ASP.NET simple. Los datos actuales en la tabla de datos se muestran en el <xref:System.Web.UI.WebControls.DropDownList> control. Puede agregar nuevos registros si escribe valores en el <xref:System.Web.UI.WebControls.TextBox> controles y hacer clic en el botón. Cuando se hace clic en el botón, se insertan los valores especificados en la base de datos y el <xref:System.Web.UI.WebControls.DropDownList> se actualiza.  
  
> [!IMPORTANT]
>  Este ejemplo tiene un cuadro de texto que acepta datos proporcionados por el usuario, lo que puede suponer una amenaza para la seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
    <altmember cref="T:System.Web.UI.WebControls.CookieParameter" />
    <altmember cref="T:System.Web.UI.WebControls.ProfileParameter" />
    <altmember cref="T:System.Web.UI.WebControls.QueryStringParameter" />
    <altmember cref="T:System.Web.UI.WebControls.SessionParameter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.FormParameter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia sin nombre de la clase <see cref="T:System.Web.UI.WebControls.FormParameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Web.UI.WebControls.FormParameter> objeto creado con el <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> constructor se inicializa con valores predeterminados para todas sus propiedades. El <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> se inicializa en <xref:System.String.Empty?displayProperty=nameWithType>. Además, el <xref:System.Web.UI.WebControls.Parameter.Name%2A> propiedad se inicializa en <xref:System.String.Empty?displayProperty=nameWithType>, el <xref:System.Web.UI.WebControls.Parameter.Type%2A> propiedad se inicializa en <xref:System.TypeCode.Object?displayProperty=nameWithType>, el <xref:System.Web.UI.WebControls.Parameter.Direction%2A> propiedad se inicializa en <xref:System.Data.ParameterDirection.Input>y el <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> se puede inicializar la propiedad null (`Nothing` en Visual Basic).  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  El <xref:System.Web.UI.WebControls.FormParameter> no valida el valor pasado por el elemento de formulario de ninguna forma; usa el valor sin formato. En la mayoría de los casos, puede validar el valor de la <xref:System.Web.UI.WebControls.FormParameter> antes de utilizarse por un control de origen de datos controlando un evento, como el `Selecting`, `Updating`, `Inserting`, o `Deleting` eventos expuestos por el control de origen de datos que está usando. Si el valor del parámetro no pasa las pruebas de validación, puede cancelar la operación de datos estableciendo el <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propiedad del asociado <xref:System.ComponentModel.CancelEventArgs> clase `true`.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_1/CS/fp1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_1/VB/fp1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FormParameter (System.Web.UI.WebControls.FormParameter original);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.FormParameter original) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (original As FormParameter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FormParameter(System::Web::UI::WebControls::FormParameter ^ original);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : System.Web.UI.WebControls.FormParameter -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter original" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Web.UI.WebControls.FormParameter" />
      </Parameters>
      <Docs>
        <param name="original">Instancia <see cref="T:System.Web.UI.WebControls.FormParameter" /> desde la que se inicializa la instancia actual.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.FormParameter" /> con los valores de la instancia que especifica el parámetro <paramref name="original" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> constructor es un `protected` constructor de copias utilizado para clonar un <xref:System.Web.UI.WebControls.FormParameter> instancia. Los valores de la <xref:System.Web.UI.WebControls.FormParameter>, incluidos <xref:System.Web.UI.WebControls.FormParameter.FormField%2A>, <xref:System.Web.UI.WebControls.Parameter.Name%2A>, y <xref:System.Web.UI.WebControls.Parameter.Type%2A> se transfieren a la nueva instancia.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.Clone" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, formField As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, System::String ^ formField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : string * string -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter (name, formField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del parámetro.</param>
        <param name="formField">Nombre de la variable de formulario a la que se enlaza el objeto de parámetro. El valor predeterminado es <see cref="F:System.String.Empty" />.</param>
        <summary>Inicializa una nueva instancia con nombre de la clase <see cref="T:System.Web.UI.WebControls.FormParameter" />, utilizando la cadena especificada para identificar a qué campo de variable de formulario se va a enlazar.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Web.UI.WebControls.FormParameter> objeto creado con el <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> constructor se inicializa con el nombre de parámetro especificado y la cadena que identifica la variable de formulario que se enlaza el parámetro. El <xref:System.Web.UI.WebControls.Parameter.Type%2A> y <xref:System.Web.UI.WebControls.Parameter.Direction%2A> las propiedades se inicializan con los valores predeterminados.  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  El <xref:System.Web.UI.WebControls.FormParameter> no valida el valor pasado por el elemento de formulario de ninguna forma; usa el valor sin formato. En la mayoría de los casos, puede validar el valor de la <xref:System.Web.UI.WebControls.FormParameter> antes de utilizarse por un control de origen de datos controlando un evento, como el `Selecting`, `Updating`, `Inserting`, o `Deleting` eventos expuestos por el control de origen de datos que está usando. Si el valor del parámetro no pasa las pruebas de validación, puede cancelar la operación de datos estableciendo el <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propiedad del asociado <xref:System.ComponentModel.CancelEventArgs> clase `true`.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/CS/fp2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/VB/fp2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, System.Data.DbType dbType, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.DbType dbType, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.Data.DbType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, System::Data::DbType dbType, System::String ^ formField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : string * System.Data.DbType * string -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter (name, dbType, formField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del parámetro.</param>
        <param name="dbType">Tipo de base de datos del parámetro.</param>
        <param name="formField">Nombre de la variable de formulario a la que se enlaza el objeto de parámetro.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.FormParameter" />, utilizando la cadena especificada para identificar a qué campo de variable de formulario se va a enlazar.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, TypeCode type, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.TypeCode type, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.TypeCode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As TypeCode, formField As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, TypeCode type, System::String ^ formField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : string * TypeCode * string -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter (name, type, formField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del parámetro.</param>
        <param name="type">Tipo que el parámetro representa. El valor predeterminado es <see cref="F:System.TypeCode.Object" />.</param>
        <param name="formField">Nombre de la variable de formulario a la que se enlaza el objeto de parámetro. El valor predeterminado es <see cref="F:System.String.Empty" />.</param>
        <summary>Inicializa una nueva instancia fuertemente tipada de la clase <see cref="T:System.Web.UI.WebControls.FormParameter" />, utilizando la cadena especificada para identificar a qué variable de formulario se va a enlazar.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Web.UI.WebControls.FormParameter> objeto creado con la <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> constructor se inicializa con el nombre del parámetro especificado, <xref:System.Web.UI.WebControls.Parameter.Type%2A>y la cadena que identifica la variable de formulario que se enlaza el parámetro. Solo el <xref:System.Web.UI.WebControls.Parameter.Direction%2A> y <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A> las propiedades se inicializan con los valores predeterminados.  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  El <xref:System.Web.UI.WebControls.FormParameter> no valida el valor pasado por el elemento de formulario de ninguna forma; usa el valor sin formato. En la mayoría de los casos, puede validar el valor de la <xref:System.Web.UI.WebControls.FormParameter> antes de utilizarse por un control de origen de datos controlando un evento, como el `Selecting`, `Updating`, `Inserting`, o `Deleting` eventos expuestos por el control de origen de datos que está usando. Si el valor del parámetro no pasa las pruebas de validación, puede cancelar la operación de datos estableciendo el <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propiedad del asociado <xref:System.ComponentModel.CancelEventArgs> clase `true`.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_3/CS/fp3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_3/VB/fp3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Parameter Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Parameter Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Clone () As Parameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Parameter ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Web.UI.WebControls.Parameter" Usage="formParameter.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Parameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve un duplicado de la instancia <see cref="T:System.Web.UI.WebControls.FormParameter" /> actual.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.FormParameter" /> que es un duplicado exacto del actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.FormParameter.Clone%2A> llamadas al método el <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A> constructor de copias para inicializar una nueva instancia de la <xref:System.Web.UI.WebControls.FormParameter> clase con los valores de la instancia actual.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)" />
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="protected internal override object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object Evaluate(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ Evaluate(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.Evaluate : System.Web.HttpContext * System.Web.UI.Control -&gt; obj" Usage="formParameter.Evaluate (context, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> actual de la solicitud.</param>
        <param name="control">
          <see cref="T:System.Web.UI.Control" /> asociado a la página donde se utiliza <see cref="T:System.Web.UI.WebControls.FormParameter" />.</param>
        <summary>Actualiza y devuelve el valor del objeto <see cref="T:System.Web.UI.WebControls.FormParameter" />.</summary>
        <returns>Objeto que representa el valor actualizado y actual del parámetro. Si el contexto o la solicitud es null (<see langword="Nothing" /> en Visual Basic), el método <see cref="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> devuelve null.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.FormParameter> intenta enlazarse a la variable de formulario cada vez el <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> se llama al método.  
  
 El `context` utiliza el parámetro el <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> método para recuperar el valor del campo de formulario especificado de la solicitud. El `control` se omite el parámetro.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
      </Docs>
    </Member>
    <Member MemberName="FormField">
      <MemberSignature Language="C#" Value="public string FormField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormParameter.FormField" />
      <MemberSignature Language="VB.NET" Value="Public Property FormField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FormField : string with get, set" Usage="System.Web.UI.WebControls.FormParameter.FormField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre de la variable de formulario a la que se enlaza el parámetro.</summary>
        <value>Una cadena que identifica la variable de formulario a la que se enlaza el parámetro.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> identifica un par nombre/valor que se pasa el <xref:System.Web.HttpRequest.Form%2A> colección. Mientras el <xref:System.Web.UI.WebControls.FormParameter.FormField%2A> propiedad identifica el nombre del par, el <xref:System.Web.UI.WebControls.FormParameter> se enlaza a su valor correspondiente en tiempo de ejecución. Si el par nombre/valor de cadena de la variable de formulario esperado no se pasa a la página Web ASP.NET en la colección, el <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> método enlaza el parámetro con el valor de la <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> propiedad, si se establece. Si el <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> no se establece, el <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> método no se puede enlazar el parámetro en un valor.  
  
   
  
## Examples  
 El código siguiente muestra cómo mostrar datos filtrados mediante un <xref:System.Web.UI.WebControls.ObjectDataSource> control y un <xref:System.Web.UI.WebControls.FormParameter> para recuperar datos de un objeto de negocios de nivel intermedio y un <xref:System.Web.UI.WebControls.GridView> control para mostrar los resultados.  
  
 El ejemplo de código consta de un <xref:System.Web.UI.WebControls.TextBox>, un <xref:System.Web.UI.WebControls.GridView> (control), el <xref:System.Web.UI.WebControls.ObjectDataSource> control y un botón de envío. De forma predeterminada, el <xref:System.Web.UI.WebControls.TextBox> se rellena con el nombre de uno de los empleados de Northwind Traders. El <xref:System.Web.UI.WebControls.GridView> muestra información sobre el empleado identificado por el nombre de la <xref:System.Web.UI.WebControls.TextBox>. Para recuperar datos de otro empleado, escriba el nombre completo del empleado en el <xref:System.Web.UI.WebControls.TextBox> y haga clic en el botón.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> propiedad especifica una expresión usada para filtrar los datos recuperados por el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>. Esta propiedad usa marcadores de posición de parámetro que se evalúan en los parámetros contenidos en el <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> colección. En este ejemplo, el marcador de posición de parámetro es un <xref:System.Web.UI.WebControls.FormParameter> enlazado al valor de la <xref:System.Web.UI.WebControls.TextBox> control.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 El ejemplo de código siguiente muestra el objeto empresarial de nivel medio que usa el ejemplo de código anterior. Este ejemplo consta de dos clases básicas: el `EmployeeLogic` clase encapsula la lógica de negocios y el `NorthwindEmployee` clase es una clase de modelo que contiene la funcionalidad básica necesaria para cargar y conservar los datos de la capa de datos. Por motivos de simplicidad, el `EmployeeLogic` clase crea un conjunto de datos, en lugar de recuperar los datos de una capa de datos estático. También es útil en este ejemplo, dado que el ejemplo se basa en el usuario para proporcionar el nombre completo de un empleado de Northwind Traders para mostrar el filtrado. Para obtener un ejemplo completo, debe compilar y utilizar estas clases con los ejemplos de código ASP.NET proporcionados.  
  
> [!IMPORTANT]
>  El <xref:System.Web.UI.WebControls.FormParameter> no valida el valor pasado por el elemento de formulario de ninguna forma; usa el valor sin formato. En la mayoría de los casos, puede validar el valor de la <xref:System.Web.UI.WebControls.FormParameter> antes de utilizarse por un control de origen de datos controlando un evento, como el `Selecting`, `Updating`, `Inserting`, o `Deleting` eventos expuestos por el control de origen de datos que está usando. Si el valor del parámetro no pasa las pruebas de validación, puede cancelar la operación de datos estableciendo el <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propiedad del asociado <xref:System.ComponentModel.CancelEventArgs> clase `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" />
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="ValidateInput">
      <MemberSignature Language="C#" Value="public bool ValidateInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateInput" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormParameter.ValidateInput" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateInput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateInput : bool with get, set" Usage="System.Web.UI.WebControls.FormParameter.ValidateInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si la entrada del cliente en el parámetro se valida.</summary>
        <value>
          <see langword="true" /> si se valida la entrada del cliente; si no, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>