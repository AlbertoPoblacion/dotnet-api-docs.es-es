<Type Name="DataList" FullName="System.Web.UI.WebControls.DataList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4b116d8116ba258dcd86984d872680f1c4b3a5f6" />
    <Meta Name="ms.sourcegitcommit" Value="e7865e39826e7aaf54da4c7042975153813a31c7" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/16/2018" />
    <Meta Name="ms.locfileid" Value="31043831" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataList : System.Web.UI.WebControls.BaseDataList, System.Web.UI.INamingContainer, System.Web.UI.WebControls.IRepeatInfoUser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataList extends System.Web.UI.WebControls.BaseDataList implements class System.Web.UI.INamingContainer, class System.Web.UI.WebControls.IRepeatInfoUser" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.DataList" />
  <TypeSignature Language="VB.NET" Value="Public Class DataList&#xA;Inherits BaseDataList&#xA;Implements INamingContainer, IRepeatInfoUser" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataList : System::Web::UI::WebControls::BaseDataList, System::Web::UI::INamingContainer, System::Web::UI::WebControls::IRepeatInfoUser" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseDataList</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IRepeatInfoUser</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DataListDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataListComponentEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Control de lista enlazado a datos que muestra elementos mediante plantillas.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En este tema:  
  
-   [Introducción](#introduction)  
  
-   [Templates](#templates) (Plantillas [C++])  
  
-   [Personalizar la apariencia del Control DataList](#customizing_the_appearance_of_the_datalist_control)  
  
-   [Dirección de presentación y diseño](#display_direction_and_layout)  
  
-   [Seguridad](#security)  
  
-   [Sintaxis declarativa](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introducción  
 Use la <xref:System.Web.UI.WebControls.DataList> lista de control para mostrar una plantilla definida de datos enlazada. El <xref:System.Web.UI.WebControls.DataList> control permite seleccionar y editar.  
  
<a name="templates"></a>   
## <a name="templates"></a>Plantillas  
 El contenido de la <xref:System.Web.UI.WebControls.DataList> control se puede manipular mediante el uso de plantillas. En la tabla siguiente se enumera las plantillas compatibles.  
  
|Nombre de la plantilla|Descripción|  
|-------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A>|Si se define, determina el contenido y el diseño de los elementos alternos de la <xref:System.Web.UI.WebControls.DataList>. Si no se define, `ItemTemplate` se utiliza.|  
|<xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A>|Si se define, determina el contenido y el diseño del elemento que se está editando actualmente en el <xref:System.Web.UI.WebControls.DataList>. Si no se define, `ItemTemplate` se utiliza.|  
|<xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A>|Si se define, determina el contenido y el diseño de la sección de pie de página de la <xref:System.Web.UI.WebControls.DataList>. Si no se define, no se mostrará una sección de pie de página.|  
|<xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A>|Si se define, determina el contenido y el diseño de la sección de encabezado de la <xref:System.Web.UI.WebControls.DataList>. Si no se define, no se mostrará una sección de encabezado.|  
|<xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A>|Plantilla necesaria que proporciona el contenido y el diseño de elementos en el <xref:System.Web.UI.WebControls.DataList>.|  
|<xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A>|Si se define, determina el contenido y el diseño del elemento actualmente seleccionado en el <xref:System.Web.UI.WebControls.DataList>. Si no se define, <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> se utiliza.|  
|<xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A>|Si se define, determina el contenido y el diseño para el separador entre elementos de la <xref:System.Web.UI.WebControls.DataList>. Si no se define, no se mostrará un separador.|  
  
 Como mínimo, el <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> debe definirse para mostrar los elementos en el <xref:System.Web.UI.WebControls.DataList> control. Plantillas adicionales que pueden usarse para proporcionar una apariencia personalizada a la <xref:System.Web.UI.WebControls.DataList> control.  
  
<a name="customizing_the_appearance_of_the_datalist_control"></a>   
## <a name="customizing-the-appearance-of-the-datalist-control"></a>Personalizar la apariencia del Control DataList  
 La apariencia de la <xref:System.Web.UI.WebControls.DataList> pueden personalizarse control estableciendo las propiedades de estilo para las distintas partes del control. En la tabla siguiente se enumera las propiedades de estilo diferente.  
  
|Propiedad de estilo|Descripción|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|Especifica el estilo de los elementos alternos de la <xref:System.Web.UI.WebControls.DataList> control.|  
|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|Especifica el estilo del elemento que se está editando en el <xref:System.Web.UI.WebControls.DataList> control.|  
|<xref:System.Web.UI.WebControls.DataList.FooterStyle%2A>|Especifica el estilo del pie de página en el <xref:System.Web.UI.WebControls.DataList> control.|  
|<xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>|Especifica el estilo del encabezado en el <xref:System.Web.UI.WebControls.DataList> control.|  
|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|Especifica el estilo de los elementos de la <xref:System.Web.UI.WebControls.DataList> control.|  
|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|Especifica el estilo del elemento seleccionado en el <xref:System.Web.UI.WebControls.DataList> control.|  
|<xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A>|Especifica el estilo del separador entre los elementos de la <xref:System.Web.UI.WebControls.DataList> control.|  
  
 También puede mostrar u ocultar las diferentes partes del control. En la tabla siguiente se enumera las propiedades que controlan qué partes se muestran u ocultas.  
  
|Propiedad.|Descripción|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataList.ShowFooter%2A>|Muestra u oculta la sección de pie de página de la <xref:System.Web.UI.WebControls.DataList> control.|  
|<xref:System.Web.UI.WebControls.DataList.ShowHeader%2A>|Muestra u oculta la sección de encabezado de la <xref:System.Web.UI.WebControls.DataList> control.|  
  
<a name="display_direction_and_layout"></a>   
## <a name="display-direction-and-layout"></a>Dirección de presentación y diseño  
 La dirección de presentación de un <xref:System.Web.UI.WebControls.DataList> control puede ser vertical u horizontal. Establecer el <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> propiedad para especificar la dirección de presentación.  
  
 El diseño de la <xref:System.Web.UI.WebControls.DataList> control se controla con la <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> propiedad. Si se establece esta propiedad en `RepeatLayout.Table` mostrará el <xref:System.Web.UI.WebControls.DataList> en un formato de tabla, mientras que `RepeatLayout.Flow` muestra la <xref:System.Web.UI.WebControls.DataList> sin una estructura de tabla.  
  
<a name="security"></a>   
## <a name="security"></a>Seguridad  
 La `DataList` puede contener controles que permiten a los usuarios escribir la información.  
  
> [!CAUTION]
>  Este control se puede utilizar para mostrar los datos proporcionados por el usuario, que pueden incluir script de cliente malintencionado. Compruebe que cualquier información que se envía desde un cliente de secuencias de comandos ejecutables, instrucciones SQL u otro código antes de mostrarla en la aplicación. Puede usar controles de validación para comprobar proporcionados por el usuario antes de mostrar el texto de entrada en un control. ASP.NET proporciona una característica de validación de solicitudes de entrada para bloquear secuencias de comandos y código HTML en proporcionados por el usuario.  
  
 Para obtener más información acerca de la seguridad, consulte [protección de los controles estándar](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Cómo: proteger frente a ataques mediante secuencias de una aplicación Web mediante la aplicación de la codificación de HTML a cadenas](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), y [validar entrada de usuario en las páginas Web ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Sintaxis declarativa  
  
```  
<asp:DataList  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    Caption="string"  
    CaptionAlign="NotSet|Top|Bottom|Left|Right"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    DataKeyField="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    EditItemIndex="integer"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ExtractTemplateRows="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    GridLines="None|Horizontal|Vertical|Both"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnCancelCommand="CancelCommand event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDeleteCommand="DeleteCommand event handler"  
    OnDisposed="Disposed event handler"  
    OnEditCommand="EditCommand event handler"  
    OnInit="Init event handler"  
    OnItemCommand="ItemCommand event handler"  
    OnItemCreated="ItemCreated event handler"  
    OnItemDataBound="ItemDataBound event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelectedIndexChanged="SelectedIndexChanged event handler"  
    OnUnload="Unload event handler"  
    OnUpdateCommand="UpdateCommand event handler"  
    RepeatColumns="integer"  
    RepeatDirection="Horizontal|Vertical"  
    RepeatLayout="Table|Flow"  
    runat="server"  
    SelectedIndex="integer"  
    ShowFooter="True|False"  
    ShowHeader="True|False"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    UseAccessibleHeader="True|False"  
    Visible="True|False"  
    Width="size"  
>  
        <AlternatingItemStyle />  
        <AlternatingItemTemplate>  
            <!-- child controls -->  
        </AlternatingItemTemplate>  
        <EditItemStyle />  
        <EditItemTemplate>  
            <!-- child controls -->  
        </EditItemTemplate>  
        <FooterStyle />  
        <FooterTemplate>  
            <!-- child controls -->  
        </FooterTemplate>  
        <HeaderStyle />  
        <HeaderTemplate>  
            <!-- child controls -->  
        </HeaderTemplate>  
        <ItemStyle />  
        <ItemTemplate>  
            <!-- child controls -->  
        </ItemTemplate>  
        <SelectedItemStyle />  
        <SelectedItemTemplate>  
            <!-- child controls -->  
        </SelectedItemTemplate>  
        <SeparatorStyle />  
        <SeparatorTemplate>  
            <!-- child controls -->  
        </SeparatorTemplate>  
</asp:DataList>  
```  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar un <xref:System.Web.UI.WebControls.DataList> control para mostrar una lista de elementos de un origen de datos.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataList#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataList/CS/datalistcs.aspx#1)]
 [!code-aspx-vb[DataList#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataList/VB/datalistvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.BaseDataList" />
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="T:System.Web.UI.WebControls.Repeater" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este constructor para crear e inicializar una nueva instancia de la <xref:System.Web.UI.WebControls.DataList> clase.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear e inicializar una nueva instancia de la <xref:System.Web.UI.WebControls.DataList> clase.  
  
 [!code-csharp[Classic DataList.DataList Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.DataList Example/CS/source.cs#1)]
 [!code-vb[Classic DataList.DataList Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.DataList Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle AlternatingItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle AlternatingItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AlternatingItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ AlternatingItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene las propiedades de estilo de los elementos alternos del control <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Objeto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> que representa las propiedades de estilo de los elementos alternos del control <see cref="T:System.Web.UI.WebControls.DataList" />. El valor predeterminado es un objeto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> vacío.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> los elementos de propiedad para proporcionar un estilo personalizado para la alternancia de la <xref:System.Web.UI.WebControls.DataList> control. Los atributos de estilo comunes que se pueden ajustar incluyen la alineación del contenido dentro de la celda, color de fondo, fuente y color de primer plano. Al proporcionar un estilo diferente mejora la apariencia de la <xref:System.Web.UI.WebControls.DataList> control.  
  
 Las propiedades de estilo de elemento el <xref:System.Web.UI.WebControls.DataList> control se heredan de la propiedad de estilo de un elemento a otro a través de una jerarquía. Propiedades de estilo del elemento situado más arriba en la jerarquía heredan propiedades de estilo de elemento establecer inferior en la jerarquía. Por ejemplo, si especifica una fuente de color rojo para la <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> propiedad, todas las demás propiedades de estilo de elemento en el <xref:System.Web.UI.WebControls.DataList> control también tendrá una fuente de color rojo. Esto le permite proporcionar una apariencia común para el control estableciendo una propiedad de estilo de elemento único. Puede invalidar la configuración de estilo heredada de una propiedad de estilo de elemento que es más alto en la jerarquía estableciendo sus propiedades de estilo. Por ejemplo, puede especificar una fuente de color azul para la <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> propiedad, reemplazando la fuente de color rojo especificada en la <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> propiedad. En la tabla siguiente se muestra el orden de la jerarquía de mayor a menor.  
  
|Precedencia|Propiedad de estilo|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 Para especificar un estilo personalizado para los elementos alternos, coloque el `<AlternatingItemStyle>` etiquetas entre las etiquetas apertura y cierre de la <xref:System.Web.UI.WebControls.DataList> control. A continuación, puede enumerar los atributos de estilo dentro de la apertura `<AlternatingItemStyle>` etiqueta.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> propiedad para especificar un color de fondo diferente para los elementos alternos el <xref:System.Web.UI.WebControls.DataList> control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemStyle/CS/datalistitemstylecs.aspx#1)]
 [!code-aspx-vb[DataListItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemStyle/VB/datalistitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate AlternatingItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate AlternatingItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AlternatingItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ AlternatingItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la plantilla para los elementos alternos del control <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Objeto <see cref="T:System.Web.UI.ITemplate" /> que contiene la plantilla para los elementos alternos del control <see cref="T:System.Web.UI.WebControls.DataList" />. El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A> propiedad para controlar el contenido de los elementos alternos de la <xref:System.Web.UI.WebControls.DataList> control. La apariencia de los elementos alternos se controla mediante el <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> propiedad.  
  
 Para especificar una plantilla para los elementos alternos, coloque el `<AlternatingItemTemplate>` etiquetas entre las etiquetas apertura y cierre de la <xref:System.Web.UI.WebControls.DataList> control. A continuación, puede enumerar el contenido de la plantilla entre la apertura y cierre `<AlternatingItemTemplate>` etiquetas.  
  
> [!CAUTION]
>  Este control se puede utilizar para mostrar los datos proporcionados por el usuario, que pueden incluir script de cliente malintencionado. Compruebe que cualquier información que se envía desde un cliente de secuencias de comandos ejecutables, instrucciones SQL u otro código antes de mostrarla en la aplicación. Puede usar controles de validación para comprobar proporcionados por el usuario antes de mostrar el texto de entrada en un control. ASP.NET proporciona una característica de validación de solicitudes de entrada para bloquear secuencias de comandos y código HTML en proporcionados por el usuario. Para obtener más información, consulte [protección de los controles estándar](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Cómo: proteger frente a ataques mediante secuencias de una aplicación Web mediante la aplicación de la codificación de HTML a cadenas](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), y [validar entrada de usuario en las páginas Web ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A> propiedad para controlar el contenido de los elementos alternos de la <xref:System.Web.UI.WebControls.DataList> control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListAlternatingItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListAlternatingItemTemplate/CS/datalistaltitemtemplatecs.aspx#1)]
 [!code-aspx-vb[DataListAlternatingItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListAlternatingItemTemplate/VB/datalistaltitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="CancelCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler CancelCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler CancelCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.CancelCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CancelCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ CancelCommand;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando se hace clic en el botón <see langword="Cancel" /> de un elemento del control <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.DataList.CancelCommand> evento se desencadena cuando el `Cancel` se hace clic en botón de un elemento en el <xref:System.Web.UI.WebControls.DataList> control.  
  
 Un controlador normal para el <xref:System.Web.UI.WebControls.DataList.CancelCommand> evento establece la <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> propiedad a `-1` (para anular la selección del elemento) y, a continuación, vuelve a enlazar los datos a la <xref:System.Web.UI.WebControls.DataList> control.  
  
> [!CAUTION]
>  Texto no es codificada en HTML antes de que se muestra en el <xref:System.Web.UI.WebControls.DataList> control. Esto permite incrustar un script en las etiquetas HTML en el texto. Si los valores para el control proceden de proporcionados por el usuario, asegúrese de validar los valores para reducir las vulnerabilidades de seguridad.  
  
 Para obtener más información sobre el control de eventos, vea [Cómo: consumir eventos en una aplicación de formularios Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
> [!CAUTION]
>  Este control se puede utilizar para mostrar los datos proporcionados por el usuario, que pueden incluir script de cliente malintencionado. Compruebe que cualquier información que se envía desde un cliente de secuencias de comandos ejecutables, instrucciones SQL u otro código antes de mostrarla en la aplicación. Puede usar controles de validación para comprobar proporcionados por el usuario antes de mostrar el texto de entrada en un control. ASP.NET proporciona una característica de validación de solicitudes de entrada para bloquear secuencias de comandos y código HTML en proporcionados por el usuario. Para obtener más información, consulte [protección de los controles estándar](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Cómo: proteger frente a ataques mediante secuencias de una aplicación Web mediante la aplicación de la codificación de HTML a cadenas](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), y [validar entrada de usuario en las páginas Web ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo especificar y codificar un controlador para el <xref:System.Web.UI.WebControls.DataList.CancelCommand> eventos. Cancela las ediciones realizadas en un elemento en el <xref:System.Web.UI.WebControls.DataList> controlar cuándo el `Cancel` se hace clic en el botón.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="CancelCommandName">
      <MemberSignature Language="C#" Value="public const string CancelCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CancelCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const CancelCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ CancelCommandName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el nombre de comando <see langword="Cancel" />. Este campo es de solo lectura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.DataList.CancelCommandName> campo para representar el `Cancel` nombre del comando.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlHierarchy">
      <MemberSignature Language="C#" Value="protected override void CreateControlHierarchy (bool useDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateControlHierarchy(bool useDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.CreateControlHierarchy(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateControlHierarchy (useDataSource As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateControlHierarchy(bool useDataSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useDataSource" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useDataSource">
          Es <see langword="true" /> para utilizar el origen de datos del control; es <see langword="false" /> para indicar que el control se vuelve a crear desde el estado de vista y no debería enlazarse a datos.</param>
        <summary>Crea la jerarquía de controles utilizada para representar el control de lista de datos, con o sin el origen de datos especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> método la usan principalmente los programadores de controles al derivar una implementación personalizada de la <xref:System.Web.UI.WebControls.DataList> control.  
  
 El <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> método usa la <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> y <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> métodos para crear <xref:System.Web.UI.WebControls.DataListItem> controles que representan el encabezado, el pie de página, el separador y el elementos enlazados a datos contenidos en la lista de datos. Puede tener acceso a los elementos enlazados a datos para obtener la lista de datos a través de la <xref:System.Web.UI.WebControls.DataList.Items%2A> colección. Puede tener acceso a todos los tipos de elemento, incluidos el encabezado, el pie de página y los elementos de separador, a través de la <xref:System.Web.UI.WebControls.BaseDataList.Controls%2A> colección.  
  
 Invalidar el <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> método para personalizar cómo <xref:System.Web.UI.WebControls.DataListItem> controles se creó o se agregan a la <xref:System.Web.UI.WebControls.DataList> control. Invalidar el <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> método para personalizar plantillas para un <xref:System.Web.UI.WebControls.DataListItem> control.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea el objeto de estilo predeterminado utilizado internamente por el control <see cref="T:System.Web.UI.WebControls.DataList" /> para implementar todas las propiedades relacionadas con el estilo.</summary>
        <returns>Objeto <see cref="T:System.Web.UI.WebControls.TableStyle" /> que contiene las propiedades de estilo predeterminadas para el control.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.DataList.CreateControlStyle%2A> método la usan principalmente los programadores de controles en derivar una implementación personalizada de la <xref:System.Web.UI.WebControls.DataList> control.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.WebControls.DataList.CreateControlStyle%2A> controlar el método en un servidor personalizado para que siempre muestra líneas de cuadrícula horizontales sin espaciado de celdas en el <xref:System.Web.UI.WebControls.DataList> control.  
  
 [!code-aspx-csharp[CustomDataListCreateControlStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListCreateControlStyle/CS/custom_datalist_createcontrolstylecs.aspx#1)]
 [!code-aspx-vb[CustomDataListCreateControlStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListCreateControlStyle/VB/custom_datalist_createcontrolstylevb.aspx#1)]  
[!code-csharp[CustomDataListCreateControlStyle#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListCreateControlStyle/CS/custom_datalist_createcontrolstyle.cs#2)]
[!code-vb[CustomDataListCreateControlStyle#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListCreateControlStyle/VB/custom_datalist_createcontrolstyle.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.DataListItem CreateItem (int itemIndex, System.Web.UI.WebControls.ListItemType itemType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.DataListItem CreateItem(int32 itemIndex, valuetype System.Web.UI.WebControls.ListItemType itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.CreateItem(System.Int32,System.Web.UI.WebControls.ListItemType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateItem (itemIndex As Integer, itemType As ListItemType) As DataListItem" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::DataListItem ^ CreateItem(int itemIndex, System::Web::UI::WebControls::ListItemType itemType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
      </Parameters>
      <Docs>
        <param name="itemIndex">Ubicación especificada dentro del control <see cref="T:System.Web.UI.WebControls.DataList" /> donde se va a colocar el elemento creado.</param>
        <param name="itemType">Objeto <see cref="T:System.Web.UI.WebControls.ListItemType" /> que representa el tipo especificado del elemento que se va a crear.</param>
        <summary>Crea un objeto <see cref="T:System.Web.UI.WebControls.DataListItem" />.</summary>
        <returns>Nuevo control <see cref="T:System.Web.UI.WebControls.DataListItem" /> creado con el tipo de elemento de lista especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> método la usan principalmente los programadores de controles en la creación de una implementación personalizada de la <xref:System.Web.UI.WebControls.DataList> control. El <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> método es funcionalmente equivalente a llamar a la <xref:System.Web.UI.WebControls.DataListItem.%23ctor%2A> constructor para una <xref:System.Web.UI.WebControls.DataListItem>. El <xref:System.Web.UI.WebControls.DataListItem.ItemIndex%2A> y <xref:System.Web.UI.WebControls.DataListItem.ItemType%2A> las propiedades se inicializan para el nuevo <xref:System.Web.UI.WebControls.DataListItem> utilizando los valores especificados, pero el elemento no se inserta en la <xref:System.Web.UI.WebControls.DataList>.  
  
 El <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> método usa la <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> y <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> métodos para crear <xref:System.Web.UI.WebControls.DataListItem> controles que representan el encabezado, el pie de página, el separador y el elementos enlazados a datos contenidos en la lista de datos. Puede tener acceso a los elementos enlazados a datos para obtener la lista de datos a través de la <xref:System.Web.UI.WebControls.DataList.Items%2A> colección. Puede tener acceso a todos los tipos de elemento, incluidos el encabezado, el pie de página y los elementos de separador, a través de la <xref:System.Web.UI.WebControls.BaseDataList.Controls%2A> colección.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Invalide este método para crear su propio derivada <see cref="T:System.Web.UI.WebControls.DataListItem" /> tipo, o para establecer las propiedades de miembro adicionales cuando un <see cref="T:System.Web.UI.WebControls.DataListItem" /> se crea.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.DataList.CreateControlHierarchy(System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.InitializeItem(System.Web.UI.WebControls.DataListItem)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler DeleteCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler DeleteCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DeleteCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ DeleteCommand;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando se hace clic en el botón <see langword="Delete" /> de un elemento del control <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.DataList.DeleteCommand> evento se desencadena cuando el `Delete` se hace clic en botón de un elemento en el <xref:System.Web.UI.WebControls.DataList> control.  
  
 Un controlador normal para el <xref:System.Web.UI.WebControls.DataList.DeleteCommand> evento quita el elemento seleccionado del origen de datos y, a continuación, vuelve a enlazar los datos a la <xref:System.Web.UI.WebControls.DataList> control.  
  
 Para obtener más información sobre el control de eventos, vea [Cómo: consumir eventos en una aplicación de formularios Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo especificar y codificar un controlador para el <xref:System.Web.UI.WebControls.DataList.DeleteCommand> eventos. Elimina el elemento seleccionado en el <xref:System.Web.UI.WebControls.DataList> controlar cuándo el `Delete` se hace clic en el botón.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommandName">
      <MemberSignature Language="C#" Value="public const string DeleteCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DeleteCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const DeleteCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DeleteCommandName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el nombre de comando <see langword="Delete" />. Este campo es de solo lectura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.DataList.DeleteCommandName> campo para representar el `Delete` nombre del comando.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
    <Member MemberName="EditCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler EditCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler EditCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.EditCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EditCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ EditCommand;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando se hace clic en el botón <see langword="Edit" /> de un elemento del control <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.DataList.EditCommand> evento se desencadena cuando el `Edit` se hace clic en botón de un elemento en el <xref:System.Web.UI.WebControls.DataList> control.  
  
 Un controlador normal para el <xref:System.Web.UI.WebControls.DataList.EditCommand> evento establece la <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> propiedad a la fila seleccionada y, a continuación, vuelve a enlazar los datos a la <xref:System.Web.UI.WebControls.DataList> control.  
  
> [!CAUTION]
>  Texto no es codificada en HTML antes de que se muestra en el <xref:System.Web.UI.WebControls.DataList> control. Esto permite incrustar un script en las etiquetas HTML en el texto. Si los valores para el control proceden de proporcionados por el usuario, asegúrese de validar los valores para reducir las vulnerabilidades de seguridad.  
  
 Para obtener más información sobre el control de eventos, vea [Cómo: consumir eventos en una aplicación de formularios Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
> [!CAUTION]
>  Este control se puede utilizar para mostrar los datos proporcionados por el usuario, que pueden incluir script de cliente malintencionado. Compruebe que cualquier información que se envía desde un cliente de secuencias de comandos ejecutables, instrucciones SQL u otro código antes de mostrarla en la aplicación. Puede usar controles de validación para comprobar proporcionados por el usuario antes de mostrar el texto de entrada en un control. ASP.NET proporciona una característica de validación de solicitudes de entrada para bloquear secuencias de comandos y código HTML en proporcionados por el usuario. Para obtener más información, consulte [protección de los controles estándar](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Cómo: proteger frente a ataques mediante secuencias de una aplicación Web mediante la aplicación de la codificación de HTML a cadenas](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), y [validar entrada de usuario en las páginas Web ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo especificar y codificar un controlador para el <xref:System.Web.UI.WebControls.DataList.EditCommand> eventos. Permite editar el elemento seleccionado en el <xref:System.Web.UI.WebControls.DataList> controlar cuándo el `Edit` se hace clic en el botón.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="EditCommandName">
      <MemberSignature Language="C#" Value="public const string EditCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EditCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.EditCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const EditCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EditCommandName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el nombre de comando <see langword="Edit" />. Este campo es de solo lectura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.DataList.EditCommandName> campo para representar el `Edit` nombre del comando.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
    <Member MemberName="EditItemIndex">
      <MemberSignature Language="C#" Value="public virtual int EditItemIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.EditItemIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int EditItemIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el número de índice del elemento del control <see cref="T:System.Web.UI.WebControls.DataList" /> seleccionado para su edición.</summary>
        <value>Número de índice del elemento del control <see cref="T:System.Web.UI.WebControls.DataList" /> seleccionado para su edición.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> propiedad para especificar mediante programación el elemento que se va a editar. También puede utilizar esta propiedad para determinar el índice del elemento seleccionado para su edición.  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> propiedad está basada en cero.  
  
 Para anular la selección de un elemento, establezca la <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> propiedad `-1`.  
  
> [!CAUTION]
>  Este control se puede utilizar para mostrar los datos proporcionados por el usuario, que pueden incluir script de cliente malintencionado. Compruebe que cualquier información que se envía desde un cliente de secuencias de comandos ejecutables, instrucciones SQL u otro código antes de mostrarla en la aplicación. Puede usar controles de validación para comprobar proporcionados por el usuario antes de mostrar el texto de entrada en un control. ASP.NET proporciona una característica de validación de solicitudes de entrada para bloquear secuencias de comandos y código HTML en proporcionados por el usuario. Para obtener más información, consulte [protección de los controles estándar](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Cómo: proteger frente a ataques mediante secuencias de una aplicación Web mediante la aplicación de la codificación de HTML a cadenas](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), y [validar entrada de usuario en las páginas Web ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 El <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> propiedad se almacena en el estado del control.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> propiedad para especificar el elemento seleccionado por el usuario para su edición.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El valor seleccionado es menor que <see langword="0" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="EditItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle EditItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EditItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.EditItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EditItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ EditItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene las propiedades de estilo del elemento del control <see cref="T:System.Web.UI.WebControls.DataList" /> seleccionado para su edición.</summary>
        <value>Objeto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> que contiene las propiedades de estilo del elemento del control <see cref="T:System.Web.UI.WebControls.DataList" /> seleccionado para su edición. El valor predeterminado es un objeto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> vacío.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A> propiedad para proporcionar un estilo personalizado para el elemento seleccionado para su edición en el <xref:System.Web.UI.WebControls.DataList> control. Los atributos de estilo comunes que se pueden ajustar incluyen la alineación del contenido dentro de la celda, color de fondo, fuente y color de primer plano. Al proporcionar un estilo diferente mejora la apariencia de la <xref:System.Web.UI.WebControls.DataList> control.  
  
 Las propiedades de estilo de elemento el <xref:System.Web.UI.WebControls.DataList> control se heredan de la propiedad de estilo de un elemento a otro a través de una jerarquía. Propiedades de estilo del elemento situado más arriba en la jerarquía heredan propiedades de estilo de elemento establecer inferior en la jerarquía. Por ejemplo, si especifica una fuente de color rojo para la <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> propiedad, todas las demás propiedades de estilo de elemento en el <xref:System.Web.UI.WebControls.DataList> control también tendrá una fuente de color rojo. Esto le permite proporcionar una apariencia común para el control estableciendo una propiedad de estilo de elemento único. Puede invalidar la configuración de estilo heredada de una propiedad de estilo de elemento que es más alto en la jerarquía estableciendo sus propiedades de estilo. Por ejemplo, puede especificar una fuente de color azul para la <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> propiedad, reemplazando la fuente de color rojo especificada en la <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> propiedad. En la tabla siguiente se muestra el orden de la jerarquía de mayor a menor.  
  
|Precedencia|Propiedad de estilo|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 Para especificar un estilo personalizado para el elemento seleccionado para su edición, coloque el `<EditItemStyle>` etiquetas entre las etiquetas apertura y cierre de la <xref:System.Web.UI.WebControls.DataList> control. A continuación, puede enumerar los atributos de estilo dentro de la apertura `<EditItemStyle>` etiqueta.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A> propiedad para especificar una apariencia diferente para el elemento seleccionado por el usuario para su edición.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="EditItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EditItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EditItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la plantilla para el elemento del control <see cref="T:System.Web.UI.WebControls.DataList" /> seleccionado para su edición.</summary>
        <value>Objeto <see cref="T:System.Web.UI.ITemplate" /> que contiene la plantilla del elemento del control <see cref="T:System.Web.UI.WebControls.DataList" /> seleccionado para su edición. El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A> propiedad para controlar el contenido del elemento seleccionado para su edición en el <xref:System.Web.UI.WebControls.DataList> control. La apariencia del elemento seleccionado para editar se controla mediante el <xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A> propiedad.  
  
 Para especificar una plantilla para el elemento seleccionado para su edición, coloque el `<EditItemTemplate>` etiquetas entre las etiquetas apertura y cierre de la <xref:System.Web.UI.WebControls.DataList> control. A continuación, puede enumerar el contenido de la plantilla entre la apertura y cierre `<EditItemTemplate>` etiquetas.  
  
> [!CAUTION]
>  Este control se puede utilizar para mostrar los datos proporcionados por el usuario, que pueden incluir script de cliente malintencionado. Compruebe que cualquier información que se envía desde un cliente de secuencias de comandos ejecutables, instrucciones SQL u otro código antes de mostrarla en la aplicación. Puede usar controles de validación para comprobar proporcionados por el usuario antes de mostrar el texto de entrada en un control. ASP.NET proporciona una característica de validación de solicitudes de entrada para bloquear secuencias de comandos y código HTML en proporcionados por el usuario. Para obtener más información, consulte [protección de los controles estándar](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Cómo: proteger frente a ataques mediante secuencias de una aplicación Web mediante la aplicación de la codificación de HTML a cadenas](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), y [validar entrada de usuario en las páginas Web ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A> propiedad para controlar el contenido del elemento seleccionado por el usuario para su edición.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemStyle" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="ExtractTemplateRows">
      <MemberSignature Language="C#" Value="public virtual bool ExtractTemplateRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExtractTemplateRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ExtractTemplateRows" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ExtractTemplateRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ExtractTemplateRows { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se extraen y se muestran las filas de un control <see cref="T:System.Web.UI.WebControls.Table" />, definido en cada plantilla de un control <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>
          Es <see langword="true" /> si se extraen y se muestran las filas de un control <see cref="T:System.Web.UI.WebControls.Table" />, definido en cada plantilla de un control <see cref="T:System.Web.UI.WebControls.DataList" />; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El contenido de la <xref:System.Web.UI.WebControls.DataList> control se especifican mediante el uso de plantillas. Normalmente, lista de controles que desea que aparezca en las plantillas. También puede colocar un <xref:System.Web.UI.WebControls.Table> en una plantilla de control y mostrar las filas de la tabla.  
  
 Use la <xref:System.Web.UI.WebControls.DataList.ExtractTemplateRows%2A> propiedad para especificar si las filas de un <xref:System.Web.UI.WebControls.Table> control definido en cada plantilla de un <xref:System.Web.UI.WebControls.DataList> control se extraen y se muestran. Todas las filas que se extraen de las plantillas de la <xref:System.Web.UI.WebControls.DataList> control se muestran en una sola tabla. Esto le permite crear una única tabla de otras tablas más pequeñas y mantener las características de la <xref:System.Web.UI.WebControls.DataList> control.  
  
> [!NOTE]
>  Cuando esta propiedad se establece en `true`, debe proporcionar un formato correcto <xref:System.Web.UI.WebControls.Table> control para cada plantilla que van a incluir en el <xref:System.Web.UI.WebControls.DataList> control. Se mostrará únicamente las filas de las tablas. Se omitirá el resto del contenido de la plantilla. Debe usar un <xref:System.Web.UI.WebControls.Table> control para que esta característica funcione correctamente. El <xref:System.Web.UI.HtmlControls.HtmlTable?displayProperty=nameWithType> control no es compatible con esta propiedad.  
  
 Cuando se crea una celda de un <xref:System.Web.UI.WebControls.Table> control en una plantilla, puede usar el <xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A> propiedad de la <xref:System.Web.UI.WebControls.TableCell> objeto para controlar el número de columnas que abarca la celda. También puede usar el <xref:System.Web.UI.WebControls.TableCell.RowSpan%2A> propiedad para controlar el número de filas que abarca la celda.  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>, <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>, y <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> propiedades no afectan a la apariencia de la <xref:System.Web.UI.WebControls.DataList> controlar cuando se establece esta propiedad en `true`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.DataList.ExtractTemplateRows%2A> propiedad para extraer y mostrar las filas de <xref:System.Web.UI.WebControls.Table> controles definidos en las plantillas de la <xref:System.Web.UI.WebControls.DataList> control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic DataList.ExtractTemplateRows Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.ExtractTemplateRows Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataList.ExtractTemplateRows Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.ExtractTemplateRows Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SeparatorTemplate" />
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.FooterStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FooterStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ FooterStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene las propiedades de estilo de la sección de pie de página del control <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Objeto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> que contiene las propiedades de estilo de la sección de pie de página del control <see cref="T:System.Web.UI.WebControls.DataList" />. El valor predeterminado es un objeto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> vacío.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice esta propiedad para proporcionar un estilo personalizado para la sección de pie de página de la <xref:System.Web.UI.WebControls.DataList> control. Los atributos de estilo comunes que se pueden ajustar incluyen la alineación del contenido dentro de la celda, color de fondo, fuente y color de primer plano. Al proporcionar un estilo diferente mejora la apariencia de la <xref:System.Web.UI.WebControls.DataList> control.  
  
 El <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> propiedad de la <xref:System.Web.UI.WebControls.DataList> control hereda la configuración de estilo de la <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> propiedad. Por ejemplo, si especifica una fuente de color rojo para la <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> propiedad, el <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> propiedad también tendrá una fuente de color rojo. Esto le permite proporcionar una apariencia común para el control estableciendo una propiedad de estilo único. Puede invalidar la configuración de estilo heredada estableciendo la <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> propiedad. Por ejemplo, puede especificar una fuente de color azul para la <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> propiedad, reemplazando la fuente de color rojo especificada en la <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> propiedad.  
  
 Para especificar un estilo personalizado para la sección de pie de página, coloque el `<FooterStyle>` etiquetas entre las etiquetas apertura y cierre de la <xref:System.Web.UI.WebControls.DataList> control. A continuación, puede enumerar los atributos de estilo dentro de la apertura `<FooterStyle>` etiqueta.  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A> propiedad debe establecerse en `true` para que pueda verse esta propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> propiedad para especificar un color de fondo personalizado para la sección de pie de página de la <xref:System.Web.UI.WebControls.DataList> control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListHeaderStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListHeaderStyle/CS/datalistheaderstylecs.aspx#1)]
 [!code-aspx-vb[DataListHeaderStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListHeaderStyle/VB/datalistheaderstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.ShowFooter" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FooterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ FooterTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la plantilla para la sección de pie de página del control <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Objeto <see cref="T:System.Web.UI.ITemplate" /> que contiene la plantilla para la sección de pie de página del control <see cref="T:System.Web.UI.WebControls.DataList" />. El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A> propiedad para controlar el contenido de la sección de pie de página. La apariencia de la sección de pie de página se controla mediante el <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> propiedad.  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A> propiedad debe establecerse en `true` para que pueda verse esta propiedad.  
  
 El <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> propiedad de la <xref:System.Web.UI.WebControls.DataList> control hereda la configuración de estilo de la <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> propiedad. Por ejemplo, si especifica una fuente de color rojo para la <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> propiedad, el <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> propiedad también tendrá una fuente de color rojo. Esto le permite proporcionar una apariencia común para el control estableciendo una propiedad de estilo único. Puede invalidar la configuración de estilo heredada estableciendo la <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> propiedad. Por ejemplo, puede especificar una fuente de color azul para la <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> propiedad, reemplazando la fuente de color rojo especificada en la <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> propiedad.  
  
 Para especificar una plantilla para la sección de pie de página, coloque el `<FooterTemplate>` etiquetas entre las etiquetas apertura y cierre de la <xref:System.Web.UI.WebControls.DataList> control. A continuación, puede enumerar el contenido de la plantilla entre la apertura y cierre `<FooterTemplate>` etiquetas.  
  
> [!CAUTION]
>  Este control se puede utilizar para mostrar los datos proporcionados por el usuario, que pueden incluir script de cliente malintencionado. Compruebe que cualquier información que se envía desde un cliente de secuencias de comandos ejecutables, instrucciones SQL u otro código antes de mostrarla en la aplicación. Puede usar controles de validación para comprobar proporcionados por el usuario antes de mostrar el texto de entrada en un control. ASP.NET proporciona una característica de validación de solicitudes de entrada para bloquear secuencias de comandos y código HTML en proporcionados por el usuario. Para obtener más información, consulte [protección de los controles estándar](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Cómo: proteger frente a ataques mediante secuencias de una aplicación Web mediante la aplicación de la codificación de HTML a cadenas](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), y [validar entrada de usuario en las páginas Web ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A> propiedad para controlar el contenido de la sección de pie de página de la <xref:System.Web.UI.WebControls.DataList> control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListHeaderStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListHeaderStyle/CS/datalistheaderstylecs.aspx#1)]
 [!code-aspx-vb[DataListHeaderStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListHeaderStyle/VB/datalistheaderstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ShowFooter" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.GridLines GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.GridLines GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property GridLines As GridLines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridLines GridLines { System::Web::UI::WebControls::GridLines get(); void set(System::Web::UI::WebControls::GridLines value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el estilo de la línea de la cuadrícula del control <see cref="T:System.Web.UI.WebControls.DataList" /> cuando la propiedad <see cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" /> se establece en <see langword="RepeatLayout.Table" />.</summary>
        <value>Uno de los valores de enumeración de <see cref="T:System.Web.UI.WebControls.GridLines" />. El valor predeterminado es <see langword="None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.DataList.GridLines%2A> propiedad para especificar el estilo de línea de cuadrícula para el <xref:System.Web.UI.WebControls.DataList> control. En la tabla siguiente se enumera los posibles estilos.  
  
|Estilo|Descripción|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.GridLines.None>|No hay líneas de cuadrícula.|  
|<xref:System.Web.UI.WebControls.GridLines.Horizontal>|Muestra las líneas de cuadrícula horizontales.|  
|<xref:System.Web.UI.WebControls.GridLines.Vertical>|Muestra la línea de cuadrícula vertical.|  
|<xref:System.Web.UI.WebControls.GridLines.Both>|Muestra las líneas de cuadrícula horizontales y verticales.|  
  
> [!NOTE]
>  Esta propiedad solo se aplica si la <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> propiedad está establecida en `RepeatLayout.Table`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.DataList.GridLines%2A> propiedad para mostrar las líneas de cuadrícula horizontales y verticales de la <xref:System.Web.UI.WebControls.DataList> control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ HeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene las propiedades de estilo de la sección de encabezado del control <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Objeto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> que contiene las propiedades de estilo de la sección de encabezado del control <see cref="T:System.Web.UI.WebControls.DataList" />. El valor predeterminado es un objeto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> vacío.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice esta propiedad para proporcionar un estilo personalizado para el encabezado de la <xref:System.Web.UI.WebControls.DataList> control. Los atributos de estilo comunes que se pueden ajustar incluyen la alineación del contenido dentro de la celda, color de fondo, fuente y color de primer plano. Al proporcionar un estilo diferente mejora la apariencia de la <xref:System.Web.UI.WebControls.DataList> control.  
  
 Para especificar un estilo personalizado para la sección de encabezado, coloque el `<HeaderStyle>` etiquetas entre las etiquetas apertura y cierre de la <xref:System.Web.UI.WebControls.DataList> control. A continuación, puede enumerar los atributos de estilo dentro de la apertura `<HeaderStyle>` etiqueta.  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A> propiedad debe establecerse en `true` para que pueda verse esta propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> propiedad para especificar un color de fondo personalizado para la sección de encabezado de la <xref:System.Web.UI.WebControls.DataList> control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListHeaderStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListHeaderStyle/CS/datalistheaderstylecs.aspx#1)]
 [!code-aspx-vb[DataListHeaderStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListHeaderStyle/VB/datalistheaderstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ShowHeader" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ HeaderTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la plantilla para la sección de encabezado del control <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Objeto <see cref="T:System.Web.UI.ITemplate" /> que contiene la plantilla para la sección de encabezado del control <see cref="T:System.Web.UI.WebControls.DataList" />. El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A> propiedad para controlar el contenido de la sección de encabezado. La apariencia de la sección de encabezado se controla mediante el <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> propiedad.  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A> propiedad debe establecerse en `true` para que pueda verse esta propiedad.  
  
 Para especificar una plantilla para la sección de encabezado, coloque el `<HeaderTemplate>` etiquetas entre las etiquetas apertura y cierre de la <xref:System.Web.UI.WebControls.DataList> control. A continuación, puede enumerar el contenido de la plantilla entre la apertura y cierre `<HeaderTemplate>` etiquetas.  
  
> [!CAUTION]
>  Este control se puede utilizar para mostrar los datos proporcionados por el usuario, que pueden incluir script de cliente malintencionado. Compruebe que cualquier información que se envía desde un cliente de secuencias de comandos ejecutables, instrucciones SQL u otro código antes de mostrarla en la aplicación. Puede usar controles de validación para comprobar proporcionados por el usuario antes de mostrar el texto de entrada en un control. ASP.NET proporciona una característica de validación de solicitudes de entrada para bloquear secuencias de comandos y código HTML en proporcionados por el usuario. Para obtener más información, consulte [protección de los controles estándar](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Cómo: proteger frente a ataques mediante secuencias de una aplicación Web mediante la aplicación de la codificación de HTML a cadenas](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), y [validar entrada de usuario en las páginas Web ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A> propiedad para controlar el contenido de la sección de encabezado de la <xref:System.Web.UI.WebControls.DataList> control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderStyle" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="InitializeItem">
      <MemberSignature Language="C#" Value="protected virtual void InitializeItem (System.Web.UI.WebControls.DataListItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeItem(class System.Web.UI.WebControls.DataListItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.InitializeItem(System.Web.UI.WebControls.DataListItem)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeItem (item As DataListItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeItem(System::Web::UI::WebControls::DataListItem ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Web.UI.WebControls.DataListItem" />
      </Parameters>
      <Docs>
        <param name="item">
          <see cref="T:System.Web.UI.WebControls.DataListItem" /> que se va a inicializar.</param>
        <summary>Inicializa un objeto <see cref="T:System.Web.UI.WebControls.DataListItem" /> basado en las plantillas y estilos especificados para el tipo de elemento de lista.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> método usan principalmente los programadores de controles para extender el <xref:System.Web.UI.WebControls.DataList> control.  
  
 El <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> método usa la <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> y <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> métodos para crear <xref:System.Web.UI.WebControls.DataListItem> controles que representan el encabezado, el pie de página, el separador y el elementos enlazados a datos contenidos en la lista de datos. Puede tener acceso a los elementos enlazados a datos para obtener la lista de datos a través de la <xref:System.Web.UI.WebControls.DataList.Items%2A> colección. Puede tener acceso a todos los tipos de elemento, incluidos el encabezado, el pie de página y los elementos de separador, a través de la <xref:System.Web.UI.WebControls.BaseDataList.Controls%2A> colección.  
  
 Invalidar el <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> método para personalizar cómo <xref:System.Web.UI.WebControls.DataListItem> controles se creó o se agregan a la <xref:System.Web.UI.WebControls.DataList> control. Invalidar el <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> método para personalizar plantillas para un <xref:System.Web.UI.WebControls.DataListItem> control.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataList.CreateItem(System.Int32,System.Web.UI.WebControls.ListItemType)" />
        <altmember cref="T:System.Web.UI.WebControls.ListItemType" />
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.ItemCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ ItemCommand;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando se hace clic en cualquier botón del control <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.DataList.ItemCommand> evento se desencadena cuando se hace clic en cualquier botón en el <xref:System.Web.UI.WebControls.DataList> controlar y se utiliza normalmente cuando se tiene un control de botón con un personalizado `CommandName` valor.  
  
 Para obtener más información sobre el control de eventos, vea [Cómo: consumir eventos en una aplicación de formularios Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo especificar y codificar un controlador para el <xref:System.Web.UI.WebControls.DataList.ItemCommand> eventos para seleccionar un elemento de la <xref:System.Web.UI.WebControls.DataList> control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCommand2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand2/CS/datalistitemcommand2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand2/VB/datalistitemcommand2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListItemEventHandler ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListItemEventHandler ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.ItemCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCreated As DataListItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListItemEventHandler ^ ItemCreated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce en el servidor cuando se crea un elemento en el control <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.DataList.ItemCreated> evento se desencadena cuando un elemento en el <xref:System.Web.UI.WebControls.DataList> control se crea, durante la ida y vuelta y en el momento de datos está enlazados al control.  
  
 El <xref:System.Web.UI.WebControls.DataList.ItemCreated> evento normalmente se utiliza para controlar el contenido y la apariencia de una fila en la <xref:System.Web.UI.WebControls.DataList> control.  
  
 Para obtener más información sobre el control de eventos, vea [Cómo: consumir eventos en una aplicación de formularios Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo especificar y codificar un controlador para el <xref:System.Web.UI.WebControls.DataList.ItemCreated> evento para mostrar el orden de los elementos de la <xref:System.Web.UI.WebControls.DataList> se crea el control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated/CS/datalistitemcreatedcs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated/VB/datalistitemcreatedvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCreated2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated2/CS/datalistitemcreated2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated2/VB/datalistitemcreated2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListItemEventHandler ItemDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListItemEventHandler ItemDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.ItemDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDataBound As DataListItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListItemEventHandler ^ ItemDataBound;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando un elemento tiene datos enlazados al control <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.DataList.ItemDataBound> evento se desencadena cuando un elemento está enlazado a datos el <xref:System.Web.UI.WebControls.DataList> control. Este evento proporciona con la última oportunidad para obtener acceso al elemento de datos antes de mostrarse en el cliente. Después de que se genera este evento, el elemento de datos ya no está disponible.  
  
 Para obtener más información sobre el control de eventos, vea [Cómo: consumir eventos en una aplicación de formularios Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo especificar y codificar un controlador para el <xref:System.Web.UI.WebControls.DataList.ItemDataBound> evento para mostrar el orden de los elementos de la <xref:System.Web.UI.WebControls.DataList> control se enlaza al control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound/CS/datalistitemdataboundcs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound/VB/datalistitemdataboundvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemDataBound2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound2/CS/datalistitemdatabound2cs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound2/VB/datalistitemdatabound2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataListItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataListItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.Items" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Items As DataListItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataListItemCollection ^ Items { System::Web::UI::WebControls::DataListItemCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una colección de objetos <see cref="T:System.Web.UI.WebControls.DataListItem" /> que representan los elementos individuales dentro del control.</summary>
        <value>Objeto <see cref="T:System.Web.UI.WebControls.DataListItemCollection" /> que contiene una colección de objetos <see cref="T:System.Web.UI.WebControls.DataListItem" /> que representan los elementos individuales dentro del control <see cref="T:System.Web.UI.WebControls.DataList" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.DataList.Items%2A> colección para controlar mediante programación los elementos de la <xref:System.Web.UI.WebControls.DataList> control. El <xref:System.Web.UI.WebControls.DataList.Items%2A> colección no proporciona ningún método para agregar o quitar elementos de la colección. Sin embargo, puede controlar el contenido de un elemento proporcionando un controlador para el <xref:System.Web.UI.WebControls.DataList.ItemCreated> eventos.  
  
> [!NOTE]
>  Sólo los elementos enlazados al origen de datos incluidos en el <xref:System.Web.UI.WebControls.DataList.Items%2A> colección. El separador, encabezado y pie de página no se incluyen en la colección.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.DataList.Items%2A> colección para mostrar los elementos en el <xref:System.Web.UI.WebControls.DataList> control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic DataList.Items Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.Items Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataList.Items Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.Items Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItem" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemCreated" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle ItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle ItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ ItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene las propiedades de estilo para los elementos del control <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Objeto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> que contiene las propiedades de estilo de los elementos del control <see cref="T:System.Web.UI.WebControls.DataList" />. El valor predeterminado es un objeto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> vacío.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice esta propiedad para proporcionar un estilo personalizado para los elementos de la <xref:System.Web.UI.WebControls.DataList> control. Los atributos de estilo comunes que se pueden ajustar incluyen la alineación del contenido dentro de la celda, color de fondo, fuente y color de primer plano. Al proporcionar un estilo diferente mejora la apariencia de la <xref:System.Web.UI.WebControls.DataList> control.  
  
 Las propiedades de estilo de elemento el <xref:System.Web.UI.WebControls.DataList> control se heredan de la propiedad de estilo de un elemento a otro a través de una jerarquía. Propiedades de estilo del elemento situado más arriba en la jerarquía heredan propiedades de estilo de elemento establecer inferior en la jerarquía. Por ejemplo, si especifica una fuente de color rojo para la <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> propiedad, todas las demás propiedades de estilo de elemento en el <xref:System.Web.UI.WebControls.DataList> control también tendrá una fuente de color rojo. Esto le permite proporcionar una apariencia común para el control estableciendo una propiedad de estilo de elemento único. Puede invalidar la configuración de estilo heredada de una propiedad de estilo de elemento que es más alto en la jerarquía estableciendo sus propiedades de estilo. Por ejemplo, puede especificar una fuente de color azul para la <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> propiedad, reemplazando la fuente de color rojo especificada en la <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> propiedad. En la tabla siguiente se muestra el orden de la jerarquía de mayor a menor.  
  
|Precedencia|Propiedad de estilo|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 Para especificar un estilo personalizado para los elementos de la <xref:System.Web.UI.WebControls.DataList> controlar, coloque el `<ItemStyle>` etiquetas entre las etiquetas apertura y cierre de la <xref:System.Web.UI.WebControls.DataList> control. A continuación, puede enumerar los atributos de estilo dentro de la apertura `<ItemStyle>` etiqueta.  
  
 También puede usar el <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> los elementos de propiedad para proporcionar un aspecto diferente para la alternancia de la <xref:System.Web.UI.WebControls.DataList> control.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> propiedad para especificar un color de fondo diferente para los elementos de la <xref:System.Web.UI.WebControls.DataList> control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemStyle/CS/datalistitemstylecs.aspx#1)]
 [!code-aspx-vb[DataListItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemStyle/VB/datalistitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IWizardSideBarListControl.ItemTemplate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la plantilla para los elementos del control <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Objeto <see cref="T:System.Web.UI.ITemplate" /> que contiene la plantilla para los elementos del control <see cref="T:System.Web.UI.WebControls.DataList" />. El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> propiedad para controlar el contenido de los elementos de la <xref:System.Web.UI.WebControls.DataList> control. La apariencia de los elementos de la <xref:System.Web.UI.WebControls.DataList> control se controla mediante el <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> propiedad.  
  
 Para especificar una plantilla para los elementos de la <xref:System.Web.UI.WebControls.DataList> controlar, coloque el `<ItemTemplate>` etiquetas entre las etiquetas apertura y cierre de la <xref:System.Web.UI.WebControls.DataList> control. A continuación, puede enumerar el contenido de la plantilla entre la apertura y cierre `<ItemTemplate>` etiquetas.  
  
 También puede usar el <xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A> los elementos de propiedad para proporcionar un aspecto diferente para la alternancia de la <xref:System.Web.UI.WebControls.DataList> control.  
  
> [!CAUTION]
>  Este control se puede utilizar para mostrar los datos proporcionados por el usuario, que pueden incluir script de cliente malintencionado. Compruebe que cualquier información que se envía desde un cliente de secuencias de comandos ejecutables, instrucciones SQL u otro código antes de mostrarla en la aplicación. Puede usar controles de validación para comprobar proporcionados por el usuario antes de mostrar el texto de entrada en un control. ASP.NET proporciona una característica de validación de solicitudes de entrada para bloquear secuencias de comandos y código HTML en proporcionados por el usuario. Para obtener más información, consulte [protección de los controles estándar](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Cómo: proteger frente a ataques mediante secuencias de una aplicación Web mediante la aplicación de la codificación de HTML a cadenas](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), y [validar entrada de usuario en las páginas Web ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> propiedad para controlar el contenido de los elementos de la <xref:System.Web.UI.WebControls.DataList> control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemStyle" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Objeto que representa el estado del objeto <see cref="T:System.Web.UI.WebControls.DataList" />.</param>
        <summary>Carga el estado de vista guardado previamente del control <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se utiliza principalmente por la infraestructura de .NET Framework y no está diseñada para utilizarse directamente desde el código.  Sin embargo, los programadores de controles pueden reemplazar este método para especificar la forma en que un control de servidor personalizado restaura su estado de vista. Para obtener más información, consulte [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 El <xref:System.Web.UI.WebControls.DataList.LoadViewState%2A> método restaura la información de estado de vista para la <xref:System.Web.UI.WebControls.DataList> control de una solicitud de página anterior guardada por el <xref:System.Web.UI.WebControls.DataList.SaveViewState%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataList.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">Origen del evento.</param>
        <param name="e">Datos del evento.</param>
        <summary>Determina si el evento del control de servidor se pasa a la jerarquía de control de servidor de la interfaz de usuario (UI) de la página.</summary>
        <returns>
          Es <see langword="true" /> si se ha cancelado el evento; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnCancelCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnCancelCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCancelCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCancelCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCancelCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" /> que contiene datos de eventos.</param>
        <summary>Genera el evento <see cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />. Esto permite incluir un control personalizado para el evento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.DataList.OnCancelCommand%2A> método para proporcionar un controlador personalizado para el <xref:System.Web.UI.WebControls.DataList.CancelCommand> eventos.  
  
 El <xref:System.Web.UI.WebControls.DataList.CancelCommand> evento se desencadena cuando el `Cancel` se hace clic en botón de un elemento en el <xref:System.Web.UI.WebControls.DataList> control.  
  
 Un controlador normal para el <xref:System.Web.UI.WebControls.DataList.CancelCommand> evento establece la <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> propiedad a `-1` (para anular la selección del elemento) y, a continuación, vuelve a enlazar los datos a la <xref:System.Web.UI.WebControls.DataList> control.  
  
> [!CAUTION]
>  Este control se puede utilizar para mostrar los datos proporcionados por el usuario, que pueden incluir script de cliente malintencionado. Compruebe que cualquier información que se envía desde un cliente de secuencias de comandos ejecutables, instrucciones SQL u otro código antes de mostrarla en la aplicación. Puede usar controles de validación para comprobar proporcionados por el usuario antes de mostrar el texto de entrada en un control. ASP.NET proporciona una característica de validación de solicitudes de entrada para bloquear secuencias de comandos y código HTML en proporcionados por el usuario. Para obtener más información, consulte [protección de los controles estándar](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Cómo: proteger frente a ataques mediante secuencias de una aplicación Web mediante la aplicación de la codificación de HTML a cadenas](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), y [validar entrada de usuario en las páginas Web ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [Cómo: consumir eventos en una aplicación de formularios Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 El método <xref:System.Web.UI.WebControls.DataList.OnCancelCommand%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo especificar y codificar un controlador para el <xref:System.Web.UI.WebControls.DataList.CancelCommand> eventos. Cancela las ediciones realizadas en un elemento en el <xref:System.Web.UI.WebControls.DataList> controlar cuándo el `Cancel` se hace clic en el botón.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar <see cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleteCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleteCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleteCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleteCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleteCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" /> que contiene datos de eventos.</param>
        <summary>Genera el evento <see cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />. Esto permite incluir un control personalizado para el evento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.DataList.OnDeleteCommand%2A> método para proporcionar un controlador personalizado para el <xref:System.Web.UI.WebControls.DataList.DeleteCommand> eventos.  
  
 El <xref:System.Web.UI.WebControls.DataList.DeleteCommand> evento se desencadena cuando el `Delete` se hace clic en botón de un elemento en el <xref:System.Web.UI.WebControls.DataList> control.  
  
 Un controlador normal para el <xref:System.Web.UI.WebControls.DataList.DeleteCommand> evento quita el elemento seleccionado del origen de datos y, a continuación, vuelve a enlazar los datos a la <xref:System.Web.UI.WebControls.DataList> control.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [Cómo: consumir eventos en una aplicación de formularios Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 El método <xref:System.Web.UI.WebControls.DataList.OnDeleteCommand%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo especificar y codificar un controlador para el <xref:System.Web.UI.WebControls.DataList.DeleteCommand> eventos. Elimina el elemento seleccionado en el <xref:System.Web.UI.WebControls.DataList> controlar cuándo el `Delete` se hace clic en el botón.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar <see cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnEditCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnEditCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEditCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEditCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" /> que contiene datos de eventos.</param>
        <summary>Genera el evento <see cref="E:System.Web.UI.WebControls.DataList.EditCommand" />. Esto permite incluir un control personalizado para el evento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.DataList.OnEditCommand%2A> método para proporcionar un controlador personalizado para el <xref:System.Web.UI.WebControls.DataList.EditCommand> eventos.  
  
 El <xref:System.Web.UI.WebControls.DataList.EditCommand> evento se desencadena cuando el `Edit` se hace clic en botón de un elemento en el <xref:System.Web.UI.WebControls.DataList> control.  
  
 Un controlador normal para el <xref:System.Web.UI.WebControls.DataList.EditCommand> evento establece la <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> propiedad a la fila seleccionada y, a continuación, vuelve a enlazar los datos a la <xref:System.Web.UI.WebControls.DataList> control.  
  
> [!CAUTION]
>  Este control se puede utilizar para mostrar los datos proporcionados por el usuario, que pueden incluir script de cliente malintencionado. Compruebe que cualquier información que se envía desde un cliente de secuencias de comandos ejecutables, instrucciones SQL u otro código antes de mostrarla en la aplicación. Puede usar controles de validación para comprobar proporcionados por el usuario antes de mostrar el texto de entrada en un control. ASP.NET proporciona una característica de validación de solicitudes de entrada para bloquear secuencias de comandos y código HTML en proporcionados por el usuario. Para obtener más información, consulte [protección de los controles estándar](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Cómo: proteger frente a ataques mediante secuencias de una aplicación Web mediante la aplicación de la codificación de HTML a cadenas](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), y [validar entrada de usuario en las páginas Web ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [Cómo: consumir eventos en una aplicación de formularios Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 El método <xref:System.Web.UI.WebControls.DataList.OnEditCommand%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo especificar y codificar un controlador para el <xref:System.Web.UI.WebControls.DataList.EditCommand> eventos. Permite editar el elemento seleccionado en el <xref:System.Web.UI.WebControls.DataList> controlar cuándo el `Edit` se hace clic en el botón.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar <see cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Web.UI.Control.Init" /> para el control <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.DataList.OnInit%2A> método notifica el <xref:System.Web.UI.WebControls.DataList> control lleve a cabo los pasos de inicialización necesarias para crear y configurar una instancia.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" /> que contiene datos de eventos.</param>
        <summary>Genera el evento <see cref="E:System.Web.UI.WebControls.DataList.ItemCommand" />. Esto permite incluir un control personalizado para el evento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.DataList.OnItemCommand%2A> método para proporcionar un controlador personalizado para el <xref:System.Web.UI.WebControls.DataList.ItemCommand> eventos.  
  
 El <xref:System.Web.UI.WebControls.DataList.ItemCommand> evento se desencadena cuando se hace clic en cualquier botón en el <xref:System.Web.UI.WebControls.DataList> controlar y se utiliza normalmente cuando se tiene un control de botón con un personalizado `CommandName` valor, como `Add`, en el <xref:System.Web.UI.WebControls.DataList> control.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [Cómo: consumir eventos en una aplicación de formularios Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 El método <xref:System.Web.UI.WebControls.DataList.OnItemCommand%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo especificar y codificar un controlador para el <xref:System.Web.UI.WebControls.DataList.ItemCommand> eventos para seleccionar un elemento de la <xref:System.Web.UI.WebControls.DataList> control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCommand2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand2/CS/datalistitemcommand2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand2/VB/datalistitemcommand2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar <see cref="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemCommand" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (System.Web.UI.WebControls.DataListItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.Web.UI.WebControls.DataListItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCreated (e As DataListItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCreated(System::Web::UI::WebControls::DataListItemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Web.UI.WebControls.DataListItemEventArgs" /> que contiene datos de eventos.</param>
        <summary>Genera el evento <see cref="E:System.Web.UI.WebControls.DataList.ItemCreated" />. Esto permite incluir un control personalizado para el evento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.DataList.OnItemCreated%2A> método para proporcionar un controlador personalizado para el <xref:System.Web.UI.WebControls.DataList.ItemCreated> eventos.  
  
 El <xref:System.Web.UI.WebControls.DataList.ItemCreated> evento se desencadena cuando un elemento en el <xref:System.Web.UI.WebControls.DataList> control se crea, durante la ida y vuelta y en el momento de datos está enlazados al control.  
  
 El <xref:System.Web.UI.WebControls.DataList.ItemCreated> evento normalmente se utiliza para controlar el contenido y la apariencia de una fila en la <xref:System.Web.UI.WebControls.DataList> control.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [Cómo: consumir eventos en una aplicación de formularios Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 El método <xref:System.Web.UI.WebControls.DataList.OnItemCreated%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo especificar y codificar un controlador para el <xref:System.Web.UI.WebControls.DataList.ItemCreated> evento para mostrar el orden de los elementos de la <xref:System.Web.UI.WebControls.DataList> se crea el control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated/CS/datalistitemcreatedcs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated/VB/datalistitemcreatedvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCreated2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated2/CS/datalistitemcreated2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated2/VB/datalistitemcreated2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar <see cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemCreated" />
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDataBound (System.Web.UI.WebControls.DataListItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDataBound(class System.Web.UI.WebControls.DataListItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDataBound (e As DataListItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDataBound(System::Web::UI::WebControls::DataListItemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Web.UI.WebControls.DataListItemEventArgs" /> que contiene datos de eventos.</param>
        <summary>Genera el evento <see cref="E:System.Web.UI.WebControls.DataList.ItemDataBound" />. Esto permite incluir un control personalizado para el evento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.DataList.OnItemDataBound%2A> método para proporcionar un controlador personalizado para el <xref:System.Web.UI.WebControls.DataList.ItemDataBound> eventos.  
  
 El <xref:System.Web.UI.WebControls.DataList.ItemDataBound> evento se desencadena cuando un elemento está enlazado a datos el <xref:System.Web.UI.WebControls.DataList> control. Este evento proporciona con la última oportunidad para obtener acceso al elemento de datos antes de mostrarse en el cliente. Después de que se genera este evento, el elemento de datos ya no está disponible.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [Cómo: consumir eventos en una aplicación de formularios Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 El método <xref:System.Web.UI.WebControls.DataList.OnItemDataBound%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo especificar y codificar un controlador para el <xref:System.Web.UI.WebControls.DataList.ItemDataBound> evento para mostrar el orden de los elementos de la <xref:System.Web.UI.WebControls.DataList> control se enlaza al control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound/CS/datalistitemdataboundcs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound/VB/datalistitemdataboundvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemDataBound2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound2/CS/datalistitemdatabound2cs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound2/VB/datalistitemdatabound2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar <see cref="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemDataBound" />
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnUpdateCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdateCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdateCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdateCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdateCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Web.UI.WebControls.DataListItemEventArgs" /> que contiene datos de eventos.</param>
        <summary>Genera el evento <see cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />. Esto permite incluir un control personalizado para el evento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.DataList.OnUpdateCommand%2A> método para proporcionar un controlador personalizado para el <xref:System.Web.UI.WebControls.DataList.UpdateCommand> eventos.  
  
 El <xref:System.Web.UI.WebControls.DataList.UpdateCommand> evento se desencadena cuando el `Update` botón para hacer clic en un elemento.  
  
 Un controlador normal para el <xref:System.Web.UI.WebControls.DataList.UpdateCommand> eventos actualizan los datos, conjuntos de la <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> propiedad `-1` (para anular la selección del elemento) y, a continuación, vuelve a enlazar los datos a la <xref:System.Web.UI.WebControls.DataList> control.  
  
> [!CAUTION]
>  Este control se puede utilizar para mostrar los datos proporcionados por el usuario, que pueden incluir script de cliente malintencionado. Compruebe que cualquier información que se envía desde un cliente de secuencias de comandos ejecutables, instrucciones SQL u otro código antes de mostrarla en la aplicación. Puede usar controles de validación para comprobar proporcionados por el usuario antes de mostrar el texto de entrada en un control. ASP.NET proporciona una característica de validación de solicitudes de entrada para bloquear secuencias de comandos y código HTML en proporcionados por el usuario. Para obtener más información, consulte [protección de los controles estándar](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Cómo: proteger frente a ataques mediante secuencias de una aplicación Web mediante la aplicación de la codificación de HTML a cadenas](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), y [validar entrada de usuario en las páginas Web ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [Cómo: consumir eventos en una aplicación de formularios Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 El método <xref:System.Web.UI.WebControls.DataList.OnUpdateCommand%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo especificar y codificar un controlador para el <xref:System.Web.UI.WebControls.DataList.UpdateCommand> eventos. Permite actualizar el elemento seleccionado en el <xref:System.Web.UI.WebControls.DataList> control con los nuevos valores especificados por el usuario cuando el `Update` se hace clic en el botón.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar <see cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected internal override void PrepareControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PrepareControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.PrepareControlHierarchy" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PrepareControlHierarchy ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PrepareControlHierarchy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Prepara la jerarquía de controles para representarla en el control <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.DataList.PrepareControlHierarchy%2A> método la usan principalmente los programadores de controles al derivar un control personalizado de la <xref:System.Web.UI.WebControls.DataList> control.  
  
 El <xref:System.Web.UI.WebControls.DataList.PrepareControlHierarchy%2A> prepara la jerarquía de control y establece los estilos para incluida <xref:System.Web.UI.WebControls.DataListItem> controla antes de que se representan los controles secundarios.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Invalidar el <see cref="M:System.Web.UI.WebControls.DataList.PrepareControlHierarchy" /> método para personalizar los estilos de controles incluidos en el <see cref="T:System.Web.UI.WebControls.DataList" /> antes de representarse.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.DataList.RenderContents(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> que representa el flujo de salida para representar contenido HTML en el cliente.</param>
        <summary>Representa los elementos de lista del control <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.DataList.RenderContents%2A> método la usan principalmente los programadores de controles, al derivar un control personalizado de la <xref:System.Web.UI.WebControls.DataList> control.  
  
 El <xref:System.Web.UI.WebControls.DataList.RenderContents%2A> método representa interna el contenido de la <xref:System.Web.UI.WebControls.DataList> control, incluyendo el objeto contenido <xref:System.Web.UI.WebControls.DataListItem> controles.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.WebControls.DataList.RenderContents%2A> controlar el método en un servidor personalizado para que preceda algún texto la <xref:System.Web.UI.WebControls.DataList> objeto.  
  
 [!code-aspx-csharp[CustomDataListRenderContents#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListRenderContents/CS/custom_datalist_rendercontentscs.aspx#1)]
 [!code-aspx-vb[CustomDataListRenderContents#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListRenderContents/VB/custom_datalist_rendercontentsvb.aspx#1)]  
[!code-csharp[CustomDataListRenderContents#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListRenderContents/CS/custom_datalist_rendercontents.cs#2)]
[!code-vb[CustomDataListRenderContents#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListRenderContents/VB/custom_datalist_rendercontents.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RepeatColumns">
      <MemberSignature Language="C#" Value="public virtual int RepeatColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RepeatColumns" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.RepeatColumns" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RepeatColumns As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RepeatColumns { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el número de columnas que se muestran en el control <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Número de columnas que se debe mostrar en el control <see cref="T:System.Web.UI.WebControls.DataList" />. El valor predeterminado es <see langword="0" />, lo cual indica que los elementos del control <see cref="T:System.Web.UI.WebControls.DataList" /> se muestran en una sola fila o columna, en función del valor de la propiedad <see cref="P:System.Web.UI.WebControls.DataList.RepeatDirection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice esta propiedad para especificar el número de columnas que muestran elementos en el <xref:System.Web.UI.WebControls.DataList> control. Por ejemplo, si establece esta propiedad en `5`, el <xref:System.Web.UI.WebControls.DataList> control muestra sus elementos en cinco columnas.  
  
> [!NOTE]
>  Si esta propiedad se establece en `0`, <xref:System.Web.UI.WebControls.DataList> control muestra sus elementos en una sola fila o columna, en función del valor de la <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> propiedad. Si el <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> propiedad está establecida en `RepeatDirection.Horizontal`, los elementos se muestran en una sola fila. Si el <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> propiedad está establecida en `RepeatDirection.Vertical`, los elementos se muestran en una sola columna.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> propiedad para especificar el número de columnas que se muestran en el <xref:System.Web.UI.WebControls.DataList> control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El número especificado de columnas es un valor negativo.</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatDirection" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" />
      </Docs>
    </Member>
    <Member MemberName="RepeatDirection">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.RepeatDirection RepeatDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.RepeatDirection RepeatDirection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.RepeatDirection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RepeatDirection As RepeatDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::RepeatDirection RepeatDirection { System::Web::UI::WebControls::RepeatDirection get(); void set(System::Web::UI::WebControls::RepeatDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RepeatDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece si el control <see cref="T:System.Web.UI.WebControls.DataList" /> se muestra vertical u horizontalmente.</summary>
        <value>Uno de los valores de <see cref="T:System.Web.UI.WebControls.RepeatDirection" />. El valor predeterminado es <see langword="Vertical" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> propiedad para especificar la dirección de presentación de la <xref:System.Web.UI.WebControls.DataList> control.  
  
> [!NOTE]
>  El número de columnas mostradas siempre viene determinado por la <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> propiedad.  
  
 Si esta propiedad se establece en `RepeatDirection.Vertical`, los elementos de la lista se muestran en columnas que se cargan de arriba a abajo, luego de izquierda a derecha, hasta que todos los elementos se representan. Por ejemplo, si la <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> propiedad está establecida en `3`, los elementos de la <xref:System.Web.UI.WebControls.DataList> control se muestran en tres columnas, como se muestra en la tabla siguiente.  
  
||||  
|-|-|-|  
|1|4|7|  
|2|5|8|  
|3|6|9|  
  
 Si esta propiedad se establece en `RepeatDirection.Horizontal`, los elementos de la lista se muestran en filas cargadas de izquierda a derecha, a continuación, de arriba a abajo, hasta que todos los elementos se representan. Por ejemplo, si la <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> propiedad está establecida en `3`, los elementos de la <xref:System.Web.UI.WebControls.DataList> control se muestran en filas de tres elementos cada una, como en la tabla siguiente.  
  
||||  
|-|-|-|  
|1|2|3|  
|4|5|6|  
|7|8|9|  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> propiedad para especificar la dirección en la que el <xref:System.Web.UI.WebControls.DataList> se muestra el control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El valor especificado no es ninguno de los valores de <see cref="T:System.Web.UI.WebControls.RepeatDirection" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.RepeatDirection" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatColumns" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" />
      </Docs>
    </Member>
    <Member MemberName="RepeatLayout">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.RepeatLayout RepeatLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.RepeatLayout RepeatLayout" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.RepeatLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RepeatLayout As RepeatLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::RepeatLayout RepeatLayout { System::Web::UI::WebControls::RepeatLayout get(); void set(System::Web::UI::WebControls::RepeatLayout value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RepeatLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece si el control se muestra en un diseño de tabla o de flujo.</summary>
        <value>Valor que especifica si el control se muestra en una tabla o en diseño de flujo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> propiedad para especificar si los elementos de la <xref:System.Web.UI.WebControls.DataList> control se muestran en una tabla. El único <xref:System.Web.UI.WebControls.RepeatLayout> valores que son compatibles con el <xref:System.Web.UI.WebControls.DataList> control son <xref:System.Web.UI.WebControls.RepeatLayout.Table> y <xref:System.Web.UI.WebControls.RepeatLayout.Flow>.  
  
 Si esta propiedad se establece en `RepeatLayout.Table`, los elementos de la lista se muestran en una tabla. Si esta propiedad se establece en `RepeatLayout.Flow`, los elementos en la lista se muestran sin una estructura de tabla.  
  
 Cuando el <xref:System.Web.UI.WebControls.DataList> control se muestra en una tabla, puede usar el <xref:System.Web.UI.WebControls.DataList.GridLines%2A> propiedad para especificar un estilo de línea de cuadrícula.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> propiedad para especificar el estilo de diseño de la <xref:System.Web.UI.WebControls.DataList> control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El valor especificado no es ninguno de los valores de <see cref="T:System.Web.UI.WebControls.RepeatLayout" /> compatibles.</exception>
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatColumns" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatDirection" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Guarda los cambios realizados en el estado de vista del control desde el momento en que se devolvió la página al servidor.</summary>
        <returns>Objeto que contiene los cambios efectuados en el estado de vista de <see cref="T:System.Web.UI.WebControls.DataList" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.DataList.SaveViewState%2A> método la usan principalmente los programadores de controles.  
  
 Estado de vista es la acumulación de los valores de propiedades de un control de servidor. Estos valores se colocan automáticamente en el control de servidor <xref:System.Web.UI.Control.ViewState%2A> propiedad, que es una instancia de la <xref:System.Web.UI.StateBag> clase. La <xref:System.Web.UI.Control.ViewState%2A> valor de la propiedad, a continuación, se conserva en un objeto de cadena después de la etapa de almacenamiento de estado del ciclo de vida del control de servidor. Para obtener más información, consulte [información general sobre el ciclo de vida de página ASP.NET](http://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991).  
  
 Cuando se guarda el estado de vista, este objeto de cadena se devuelve al cliente como una variable que se almacena en un elemento input oculto de HTML. Al crear controles de servidor personalizados, se puede mejorar la eficacia invalidando el <xref:System.Web.UI.WebControls.DataList.SaveViewState%2A> método y modificar el <xref:System.Web.UI.Control.ViewState%2A> propiedad para el control de servidor. Para obtener más información, consulte [desarrollar controles de servidor ASP.NET personalizado](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef) y [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataList.TrackViewState" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommandName">
      <MemberSignature Language="C#" Value="public const string SelectCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelectCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const SelectCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelectCommandName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el nombre de comando <see langword="Select" />. Este campo es de solo lectura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.DataList.SelectCommandName> campo para representar el `Select` nombre del comando.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public virtual int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectedIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IWizardSideBarListControl.SelectedIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el índice del elemento seleccionado del control <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Índice del elemento seleccionado del control <see cref="T:System.Web.UI.WebControls.DataList" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> propiedad para especificar mediante programación el elemento seleccionado en el <xref:System.Web.UI.WebControls.DataList> control. También puede utilizar esta propiedad para determinar el índice del elemento seleccionado.  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> propiedad está basada en cero.  
  
 Para anular la selección de un elemento, establezca la <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> propiedad `-1`.  
  
 El <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> propiedad se almacena en el estado del control.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> propiedad para especificar el elemento seleccionado en el <xref:System.Web.UI.WebControls.DataList> control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El valor especificado es menor que <see langword="-1" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataListItem SelectedItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataListItem SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectedItem As DataListItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataListItem ^ SelectedItem { System::Web::UI::WebControls::DataListItem ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el elemento seleccionado del control <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Objeto <see cref="T:System.Web.UI.WebControls.DataListItem" /> que representa el elemento seleccionado del control <see cref="T:System.Web.UI.WebControls.DataList" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.DataList.SelectedItem%2A> propiedad que se va a obtener un <xref:System.Web.UI.WebControls.DataListItem> objeto que representa el elemento seleccionado en el <xref:System.Web.UI.WebControls.DataList> control. Este objeto, a continuación, se usa para tener acceso a las propiedades del elemento seleccionado.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.DataList.SelectedItem%2A> propiedad para mostrar el contenido del elemento seleccionado en el <xref:System.Web.UI.WebControls.DataList> control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic DataList.SelectedItem Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.SelectedItem Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataList.SelectedItem Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.SelectedItem Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle SelectedItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SelectedItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectedItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ SelectedItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene las propiedades de estilo del elemento seleccionado del control <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Objeto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> que contiene las propiedades de estilo del elemento seleccionado del control <see cref="T:System.Web.UI.WebControls.DataList" />. El valor predeterminado es un objeto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> vacío.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice esta propiedad para proporcionar un estilo personalizado para el elemento seleccionado en el <xref:System.Web.UI.WebControls.DataList> control. Los atributos de estilo comunes que se pueden ajustar incluyen la alineación del contenido dentro de la celda, color de fondo, fuente y color de primer plano. Al proporcionar un estilo diferente mejora la apariencia de la <xref:System.Web.UI.WebControls.DataList> control.  
  
 Las propiedades de estilo de elemento el <xref:System.Web.UI.WebControls.DataList> control se heredan de la propiedad de estilo de un elemento a otro a través de una jerarquía. Propiedades de estilo del elemento situado más arriba en la jerarquía heredan propiedades de estilo de elemento establecer inferior en la jerarquía. Por ejemplo, si especifica una fuente de color rojo para la <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> propiedad, todas las demás propiedades de estilo de elemento en el <xref:System.Web.UI.WebControls.DataList> control también tendrá una fuente de color rojo. Esto le permite proporcionar una apariencia común para el control estableciendo una propiedad de estilo de elemento único. Puede invalidar la configuración de estilo heredada de una propiedad de estilo de elemento que es más alto en la jerarquía estableciendo sus propiedades de estilo. Por ejemplo, puede especificar una fuente de color azul para la <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> propiedad, reemplazando la fuente de color rojo especificada en la <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> propiedad. En la tabla siguiente se muestra el orden de la jerarquía de mayor a menor.  
  
|Precedencia|Propiedad de estilo|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 Para especificar un estilo personalizado para el elemento seleccionado, coloque el `<SelectedItemStyle>` etiquetas entre las etiquetas apertura y cierre de la <xref:System.Web.UI.WebControls.DataList> control. A continuación, puede enumerar los atributos de estilo dentro de la apertura `<SelectedItemStyle>` etiqueta.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A> propiedad para especificar un color de fondo personalizado para el elemento seleccionado en el <xref:System.Web.UI.WebControls.DataList> control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate SelectedItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate SelectedItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ SelectedItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la plantilla para el elemento seleccionado del control <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Objeto <see cref="T:System.Web.UI.ITemplate" /> que contiene la plantilla para el elemento seleccionado del control <see cref="T:System.Web.UI.WebControls.DataList" />. El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A> propiedad para controlar el contenido del elemento seleccionado. La apariencia del elemento seleccionado se controla mediante el <xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A> propiedad.  
  
 Para especificar una plantilla para el elemento seleccionado, coloque el `<SelectedItemTemplate>` etiquetas entre las etiquetas apertura y cierre de la <xref:System.Web.UI.WebControls.DataList> control. A continuación, puede enumerar el contenido de la plantilla entre la apertura y cierre `<SelectedItemTemplate>` etiquetas.  
  
> [!CAUTION]
>  Este control se puede utilizar para mostrar los datos proporcionados por el usuario, que pueden incluir script de cliente malintencionado. Compruebe que cualquier información que se envía desde un cliente de secuencias de comandos ejecutables, instrucciones SQL u otro código antes de mostrarla en la aplicación. Puede usar controles de validación para comprobar proporcionados por el usuario antes de mostrar el texto de entrada en un control. ASP.NET proporciona una característica de validación de solicitudes de entrada para bloquear secuencias de comandos y código HTML en proporcionados por el usuario. Para obtener más información, consulte [protección de los controles estándar](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Cómo: proteger frente a ataques mediante secuencias de una aplicación Web mediante la aplicación de la codificación de HTML a cadenas](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), y [validar entrada de usuario en las páginas Web ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A> propiedad para controlar el contenido del elemento seleccionado en el <xref:System.Web.UI.WebControls.DataList> control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor del campo clave para el elemento de lista de datos seleccionado.</summary>
        <value>Valor de campo clave para el elemento de lista de datos seleccionado. El valor predeterminado es <see langword="null" />, que indica que ningún elemento de lista de datos está actualmente seleccionado.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">No se ha establecido el valor de la propiedad <see cref="P:System.Web.UI.WebControls.BaseDataList.DataKeyField" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataKeyField" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
      </Docs>
    </Member>
    <Member MemberName="SeparatorStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle SeparatorStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SeparatorStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SeparatorStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SeparatorStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ SeparatorStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene las propiedades de estilo del separador entre cada elemento del control <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Objeto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> que contiene las propiedades de estilo del separador entre cada elemento del control <see cref="T:System.Web.UI.WebControls.DataList" />. El valor predeterminado es un objeto <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> vacío.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A> propiedad para proporcionar un estilo personalizado para el separador entre cada elemento en el <xref:System.Web.UI.WebControls.DataList> control. El separador permite colocar un elemento con contenido personalizado entre cada elemento en el <xref:System.Web.UI.WebControls.DataList> control. Los atributos de estilo comunes que se pueden ajustar incluyen la alineación del contenido dentro de la celda, color de fondo, fuente y color de primer plano. Al proporcionar un estilo diferente mejora la apariencia de la <xref:System.Web.UI.WebControls.DataList> control.  
  
 Para especificar un estilo personalizado para el separador, coloque el `<SeparatorStyle>` etiquetas entre las etiquetas apertura y cierre de la <xref:System.Web.UI.WebControls.DataList> control. A continuación, puede enumerar los atributos de estilo dentro de la apertura `<SeparatorStyle>` etiqueta.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A> propiedad para especificar un color de fondo personalizado para el separador entre cada elemento en el <xref:System.Web.UI.WebControls.DataList> control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListSeparatorStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListSeparatorStyle/CS/datalistseparatorstylecs.aspx#1)]
 [!code-aspx-vb[DataListSeparatorStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListSeparatorStyle/VB/datalistseparatorstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.SeparatorTemplate" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="SeparatorTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate SeparatorTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate SeparatorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SeparatorTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SeparatorTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ SeparatorTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la plantilla para el separador de elementos del control <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Objeto <see cref="T:System.Web.UI.ITemplate" /> que contiene la plantilla para el separador de elementos del control <see cref="T:System.Web.UI.WebControls.DataList" />. El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A> propiedad para controlar el contenido del separador entre los elementos de la <xref:System.Web.UI.WebControls.DataList> control. El separador permite colocar un elemento con contenido personalizado entre cada elemento en el <xref:System.Web.UI.WebControls.DataList> control. La apariencia del separador entre los elementos de la <xref:System.Web.UI.WebControls.DataList> control se controla mediante el <xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A> propiedad.  
  
 Para especificar una plantilla para el separador, coloque el `<SeparatorTemplate>` etiquetas entre las etiquetas apertura y cierre de la <xref:System.Web.UI.WebControls.DataList> control. A continuación, puede enumerar el contenido de la plantilla entre la apertura y cierre `<SeparatorTemplate>` etiquetas.  
  
> [!CAUTION]
>  Este control se puede utilizar para mostrar los datos proporcionados por el usuario, que pueden incluir script de cliente malintencionado. Compruebe que cualquier información que se envía desde un cliente de secuencias de comandos ejecutables, instrucciones SQL u otro código antes de mostrarla en la aplicación. Puede usar controles de validación para comprobar proporcionados por el usuario antes de mostrar el texto de entrada en un control. ASP.NET proporciona una característica de validación de solicitudes de entrada para bloquear secuencias de comandos y código HTML en proporcionados por el usuario. Para obtener más información, consulte [protección de los controles estándar](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Cómo: proteger frente a ataques mediante secuencias de una aplicación Web mediante la aplicación de la codificación de HTML a cadenas](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), y [validar entrada de usuario en las páginas Web ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A> propiedad para controlar el contenido del separador entre cada elemento en el <xref:System.Web.UI.WebControls.DataList> control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListSeparatorStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListSeparatorStyle/CS/datalistseparatorstylecs.aspx#1)]
 [!code-aspx-vb[DataListSeparatorStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListSeparatorStyle/VB/datalistseparatorstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SeparatorStyle" />
      </Docs>
    </Member>
    <Member MemberName="ShowFooter">
      <MemberSignature Language="C#" Value="public virtual bool ShowFooter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowFooter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ShowFooter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowFooter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowFooter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se muestra la sección de pie de página del control <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>
          Es <see langword="true" /> si se muestra la sección de pie de página; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />; sin embargo, esta propiedad sólo se examina cuando la propiedad <see cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" /> no es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A> propiedad para especificar si la sección de pie de página se muestra en el <xref:System.Web.UI.WebControls.DataList> control.  
  
 Puede controlar la apariencia de la sección de pie de página estableciendo la <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> propiedad. El contenido de la sección de pie de página se controla mediante la <xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A> propiedad para mostrar la sección de pie de página en el <xref:System.Web.UI.WebControls.DataList> control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListShowHeader/CS/datalistshowheadercs.aspx#1)]
 [!code-aspx-vb[DataListShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListShowHeader/VB/datalistshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ShowHeader">
      <MemberSignature Language="C#" Value="public virtual bool ShowHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ShowHeader" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowHeader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowHeader { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se muestra la sección de encabezado del control <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>
          Es <see langword="true" /> si se muestra el encabezado; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />; sin embargo, esta propiedad sólo se examina cuando la propiedad <see cref="P:System.Web.UI.WebControls.DataList.HeaderTemplate" /> no es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A> propiedad para especificar si se muestra la sección de encabezado en el <xref:System.Web.UI.WebControls.DataList> control.  
  
 Puede controlar el aspecto de la sección de encabezado estableciendo la <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> propiedad. El contenido de la sección de encabezado se controla mediante la <xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A> propiedad para mostrar la sección de encabezado en el <xref:System.Web.UI.WebControls.DataList> control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListShowHeader/CS/datalistshowheadercs.aspx#1)]
 [!code-aspx-vb[DataListShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListShowHeader/VB/datalistshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderTemplate" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.Style IRepeatInfoUser.GetItemStyle (System.Web.UI.WebControls.ListItemType itemType, int repeatIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.WebControls.Style System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(valuetype System.Web.UI.WebControls.ListItemType itemType, int32 repeatIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function GetItemStyle (itemType As ListItemType, repeatIndex As Integer) As Style Implements IRepeatInfoUser.GetItemStyle" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::WebControls::Style ^ System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(System::Web::UI::WebControls::ListItemType itemType, int repeatIndex) = System::Web::UI::WebControls::IRepeatInfoUser::GetItemStyle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
        <Parameter Name="repeatIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemType">Uno de los valores de enumeración de <see cref="T:System.Web.UI.WebControls.ListItemType" />.</param>
        <param name="repeatIndex">El índice del elemento en el control de lista.</param>
        <summary>Para una descripción de este miembro, vea <see cref="M:System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)" />.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.Style" /> que representa el estilo del tipo de elemento especificado en el índice indicado del control de lista.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Web.UI.WebControls.DataList> se convierte en una interfaz <xref:System.Web.UI.WebControls.IRepeatInfoUser>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.HasFooter">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IRepeatInfoUser.HasFooter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IRepeatInfoUser.HasFooter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasFooter" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasFooter As Boolean Implements IRepeatInfoUser.HasFooter" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.WebControls.IRepeatInfoUser.HasFooter { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.HasFooter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Para una descripción de este miembro, vea <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.HasFooter" />.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Web.UI.WebControls.DataList> se convierte en una interfaz <xref:System.Web.UI.WebControls.IRepeatInfoUser>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.HasHeader">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IRepeatInfoUser.HasHeader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IRepeatInfoUser.HasHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasHeader" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasHeader As Boolean Implements IRepeatInfoUser.HasHeader" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.WebControls.IRepeatInfoUser.HasHeader { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.HasHeader</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Para una descripción de este miembro, vea <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.HasHeader" />.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Se puede utilizar solo cuando la <xref:System.Web.UI.WebControls.DataList> instancia se convierte un <xref:System.Web.UI.WebControls.IRepeatInfoUser> interfaz.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasSeparators" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasSeparators As Boolean Implements IRepeatInfoUser.HasSeparators" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Para una descripción de este miembro, vea <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators" />.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Web.UI.WebControls.DataList> se convierte en una interfaz <xref:System.Web.UI.WebControls.IRepeatInfoUser>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.RenderItem">
      <MemberSignature Language="C#" Value="void IRepeatInfoUser.RenderItem (System.Web.UI.WebControls.ListItemType itemType, int repeatIndex, System.Web.UI.WebControls.RepeatInfo repeatInfo, System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(valuetype System.Web.UI.WebControls.ListItemType itemType, int32 repeatIndex, class System.Web.UI.WebControls.RepeatInfo repeatInfo, class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(System::Web::UI::WebControls::ListItemType itemType, int repeatIndex, System::Web::UI::WebControls::RepeatInfo ^ repeatInfo, System::Web::UI::HtmlTextWriter ^ writer) = System::Web::UI::WebControls::IRepeatInfoUser::RenderItem;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
        <Parameter Name="repeatIndex" Type="System.Int32" />
        <Parameter Name="repeatInfo" Type="System.Web.UI.WebControls.RepeatInfo" />
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="itemType">El tipo del elemento.</param>
        <param name="repeatIndex">Índice del elemento.</param>
        <param name="repeatInfo">Información que se usa para presentar el elemento.</param>
        <param name="writer">El objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> que se va a utilizar para presentar el elemento.</param>
        <summary>Para una descripción de este miembro, vea <see cref="M:System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Web.UI.WebControls.DataList> se convierte en una interfaz <xref:System.Web.UI.WebControls.IRepeatInfoUser>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount">
      <MemberSignature Language="C#" Value="int System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RepeatedItemCount" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property RepeatedItemCount As Integer Implements IRepeatInfoUser.RepeatedItemCount" />
      <MemberSignature Language="C++ CLI" Value="property int System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Para una descripción de este miembro, vea <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount" />.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Web.UI.WebControls.DataList> se convierte en una interfaz <xref:System.Web.UI.WebControls.IRepeatInfoUser>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la etiqueta HTML que se utiliza para representar el control <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Devuelve la etiqueta <see cref="F:System.Web.UI.HtmlTextWriterTag.Table" /> si la propiedad <see cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" /> se establece en <see cref="F:System.Web.UI.WebControls.RepeatLayout.Table" />; de lo contrario, devuelve la etiqueta <see cref="F:System.Web.UI.HtmlTextWriterTag.Span" />. El valor predeterminado es <see cref="F:System.Web.UI.WebControls.RepeatLayout.Table" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.DataList.TagKey%2A> propiedad para determinar el <xref:System.Web.UI.HtmlTextWriterTag> valor que está asociado con un <xref:System.Web.UI.WebControls.DataList> control. El <xref:System.Web.UI.WebControls.DataList.TagKey%2A> propiedad la usan principalmente los programadores de controles.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Realiza el seguimiento de los cambios del estado de vista para el control <see cref="T:System.Web.UI.WebControls.DataList" /> para poder almacenarlos en la propiedad <see cref="P:System.Web.UI.Control.ViewState" /> del control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.DataList.TrackViewState%2A> método se invalida para marcar el punto de partida en el que se va a empezar a realizar el seguimiento y guardar cambian en el control como parte del estado de vista del control.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler UpdateCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler UpdateCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UpdateCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ UpdateCommand;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando se hace clic en el botón <see langword="Update" /> de un elemento del control <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.DataList.UpdateCommand> evento se desencadena cuando el `Update` botón para hacer clic en un elemento.  
  
 Un controlador normal para el <xref:System.Web.UI.WebControls.DataList.UpdateCommand> eventos actualizan los datos, conjuntos de la <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> propiedad `-1` (para anular la selección del elemento) y, a continuación, vuelve a enlazar los datos a la <xref:System.Web.UI.WebControls.DataList> control.  
  
> [!CAUTION]
>  Este control se puede utilizar para mostrar los datos proporcionados por el usuario, que pueden incluir script de cliente malintencionado. Compruebe que cualquier información que se envía desde un cliente de secuencias de comandos ejecutables, instrucciones SQL u otro código antes de mostrarla en la aplicación. Puede usar controles de validación para comprobar proporcionados por el usuario antes de mostrar el texto de entrada en un control. ASP.NET proporciona una característica de validación de solicitudes de entrada para bloquear secuencias de comandos y código HTML en proporcionados por el usuario. Para obtener más información, consulte [protección de los controles estándar](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Cómo: proteger frente a ataques mediante secuencias de una aplicación Web mediante la aplicación de la codificación de HTML a cadenas](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), y [validar entrada de usuario en las páginas Web ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 Para obtener más información sobre el control de eventos, vea [Cómo: consumir eventos en una aplicación de formularios Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo especificar y codificar un controlador para el <xref:System.Web.UI.WebControls.DataList.UpdateCommand> eventos. Permite actualizar el elemento seleccionado en el <xref:System.Web.UI.WebControls.DataList> control con los nuevos valores especificados por el usuario cuando el `Update` se hace clic en el botón.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommandName">
      <MemberSignature Language="C#" Value="public const string UpdateCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string UpdateCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const UpdateCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ UpdateCommandName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el nombre de comando <see langword="Update" />. Este campo es de solo lectura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.DataList.UpdateCommandName> campo para representar el `Update` nombre del comando.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
  </Members>
</Type>