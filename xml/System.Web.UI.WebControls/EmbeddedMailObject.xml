<Type Name="EmbeddedMailObject" FullName="System.Web.UI.WebControls.EmbeddedMailObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f01ea6c4d73adfb75fef21765e689a720857f078" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30599139" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EmbeddedMailObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EmbeddedMailObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.EmbeddedMailObject" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EmbeddedMailObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class EmbeddedMailObject sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.EmbeddedMailObject/EmbeddedMailObjectTypeConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa un elemento que se insertará en un mensaje de correo electrónico creado con la clase <see cref="T:System.Web.UI.WebControls.MailDefinition" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.EmbeddedMailObject> representa un elemento para incrustar en un mensaje de correo electrónico. Estos elementos incrustados pueden ser archivos de imagen, como los logotipos de empresa. Cada elemento incrustado se especifica mediante un identificador y una ruta de acceso.  
  
 Para asegurarse de que un objeto incrustado se muestra correctamente en el archivo de mensaje de correo electrónico, deben cumplirse las condiciones siguientes:  
  
-   El mensaje de correo electrónico está en formato HTML.  
  
-   El elemento es un archivo de imagen (.jpg, .gif, .bmp etc.).  
  
-   El archivo del cuerpo con formato HTML especificado en el <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> propiedad contiene una referencia al archivo de imagen utilizando la sintaxis siguiente:  
  
    ```  
    <img src="cid:identifier" alt="Alternate Text" />.  
    ```  
  
 Si un <xref:System.Web.UI.WebControls.EmbeddedMailObject> se agrega a un mensaje de correo electrónico y no cumple todos los requisitos especificados previamente, lo más probable es que se mostrará como datos adjuntos en el mensaje de correo electrónico. Si un elemento se hace referencia a un identificador en el mensaje de correo electrónico pero no se incluye como un elemento incrustado, aparecerá como datos adjuntos desasociados cuando se ve el correo electrónico.  
  
 El <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> almacena una colección de <xref:System.Web.UI.WebControls.EmbeddedMailObject> objetos para un solo mensaje de correo. El <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> utiliza la <xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A> propiedad de la <xref:System.Web.UI.WebControls.MailDefinition> objeto que se va a crear el mensaje de correo electrónico.  
  
 Mensajes de correo que admiten objetos incrustados son configurables en los siguientes controles Web estableciendo su <xref:System.Web.UI.WebControls.MailDefinition> propiedades mediante declaración:  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard>  
  
-   <xref:System.Web.UI.WebControls.ChangePassword>  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery>  
  
> [!NOTE]
>  Los valores de la <xref:System.Web.UI.WebControls.EmbeddedMailObject> y <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> objetos no se almacenan en estado de vista. Esto protege contra usuarios malintencionados descubran la información de ruta de acceso para el servidor.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una página ASP.NET que utiliza un <xref:System.Web.UI.WebControls.ChangePassword> control Web e incluye un controlador de eventos para el <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> evento denominado `SendingMail`. El ejemplo de código se supone que el sitio Web de ASP.NET se ha configurado para utilizar la pertenencia a ASP.NET y la autenticación de formularios y que se ha creado un usuario cuyo nombre y contraseña se conocen. Para obtener más información, consulte [Cómo: Implement Simple Forms Authentication](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Si el cambio de contraseña se realiza correctamente, el código en el `SendingMail` controlador de eventos intenta enviar un mensaje de correo electrónico al usuario que confirme el cambio. SMTP debe estar configurado en el servidor para que funcione este ejemplo de código. Para obtener información acerca de cómo configurar un servidor SMTP, vea [NIB: Cómo: instalar y configurar SMTP Virtual Servers in IIS 6.0](http://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Para los fines de este ejemplo, no es necesario configurar un servidor SMTP; el ejemplo sirve para comprobar si hay un error al enviar un mensaje de correo electrónico.  
  
 Si un servidor de correo electrónico no está configurado correctamente o se produce algún otro error y no se puede enviar el mensaje de correo electrónico, el `SendMailError` se llama a función. Se muestra un mensaje al usuario. Además, se registra un evento en el registro de eventos de aplicación para Windows con la suposición de que un origen de eventos denominado MySamplesSite ya existe. Vea el ejemplo de código siguiente para crear el origen de eventos especificado. Para obtener más información acerca de cómo crear un origen de eventos, vea [control de eventos de servidor en páginas de formularios Web de ASP.NET](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). El <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> propiedad de la <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> objeto se establece en `true` para indicar que se ha controlado el error.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Utilice el siguiente ejemplo de código si necesita agregar mediante programación el origen de eventos denominado MySamplesSite al registro de aplicación. Este origen de eventos debe existir en orden para el primer ejemplo de código para que funcione correctamente. El siguiente ejemplo de código requiere privilegios de administrador.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 Ejemplo de código siguiente puede utilizarse como el archivo ChangePasswordMail.htm para el código de ejemplo anterior.  
  
> [!IMPORTANT]
>  Envío de contraseñas de correo electrónico o nombres puede suponer una amenaza para la seguridad de cuenta de usuario. Mensajes de correo electrónico normalmente se envían en texto sin formato y pueden ser leídos por red especial "examen" de las aplicaciones.  Para mejorar la seguridad, utilice las mitigaciones que se describen en [proteger los controles de inicio de sesión](http://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c).  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
    <altmember cref="T:System.Web.UI.WebControls.CreateUserWizard" />
    <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendingMail" />
    <altmember cref="T:System.Web.UI.WebControls.ChangePassword" />
    <altmember cref="P:System.Web.UI.WebControls.ChangePassword.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendingMail" />
    <altmember cref="T:System.Web.UI.WebControls.PasswordRecovery" />
    <altmember cref="P:System.Web.UI.WebControls.PasswordRecovery.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendingMail" />
    <altmember cref="T:System.Net.Mail.MailMessage" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EmbeddedMailObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EmbeddedMailObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener o establecer el identificador del elemento incrustado, utilice la <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> propiedad. Para obtener o establecer la ruta de acceso al elemento incrustado, utilice la <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> propiedad. Ambas propiedades deben establecerse para incrustar el elemento correctamente en el mensaje de correo electrónico.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EmbeddedMailObject (string name, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObject.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EmbeddedMailObject(System::String ^ name, System::String ^ path);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nombre utilizado como identificador del elemento que se va a incrustar en el mensaje de correo. Para obtener más información, vea <see cref="P:System.Web.UI.WebControls.EmbeddedMailObject.Name" />.</param>
        <param name="path">Ruta de acceso utilizada para recuperar un elemento que se va a incrustar en el mensaje de correo. Para obtener más información, vea <see cref="P:System.Web.UI.WebControls.EmbeddedMailObject.Path" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" />, utilizando, para rellenar el objeto, el nombre y la ruta de acceso especificados para el identificador.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra un ejemplo de código subyacente de una página ASP.NET que utiliza un <xref:System.Web.UI.WebControls.ChangePassword> controlar e incluye un controlador de eventos para el <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> evento denominado `SendingMail`. Este ejemplo de código se supone que el sitio Web de ASP.NET se ha configurado para utilizar la pertenencia a ASP.NET y la autenticación de formularios y que se ha creado un usuario cuyo nombre y contraseña se conocen. Para obtener más información, consulte [Cómo: Implement Simple Forms Authentication](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Si el cambio de contraseña se realiza correctamente, el código en el `SendingMail` controlador de eventos intenta enviar un mensaje de correo electrónico al usuario que confirme el cambio. SMTP debe estar configurado en el servidor para que funcione este ejemplo de código. Para obtener información acerca de cómo configurar un servidor SMTP, vea [NIB: Cómo: instalar y configurar SMTP Virtual Servers in IIS 6.0](http://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Para los fines de este ejemplo, no es necesario configurar un servidor SMTP; el ejemplo sirve para comprobar si hay un error al enviar un mensaje de correo electrónico.  
  
 Si un servidor de correo electrónico no está configurado correctamente o se produce algún otro error y no se puede enviar el mensaje de correo electrónico, el `SendMailError` se llama a función. Se muestra un mensaje al usuario. Además, se registra un evento en el registro de eventos de aplicación para Windows con la suposición de que un origen de eventos denominado MySamplesSite ya existe. Vea el ejemplo de código siguiente para crear el origen de eventos especificado. Para obtener más información acerca de cómo crear un origen de eventos, vea [control de eventos de servidor en páginas de formularios Web de ASP.NET](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). El <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> propiedad de la <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> objeto se establece en `true` para indicar que se ha controlado el error.  
  
 En el ejemplo de código siguiente se muestra cómo utilizar una página .aspx.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ChangePassword#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ChangePassword#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/VB/changepassword_vb.aspx#1)]  
  
 En el ejemplo de código siguiente se muestra cómo utilizar un archivo de código subyacente.  
  
 [!code-csharp[System.Web.UI.WebControls.ChangePassword#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/CS/changepassword.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ChangePassword#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/VB/changepassword.vb#2)]  
  
 Utilice el siguiente ejemplo de código si necesita agregar mediante programación el origen de eventos denominado MySamplesSite al registro de aplicación. Este origen de eventos debe existir en orden para el primer ejemplo de código para que funcione correctamente. El siguiente ejemplo de código requiere privilegios de administrador.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 Ejemplo de código siguiente puede utilizarse como el archivo ChangePasswordMail.htm para el código de ejemplo anterior.  
  
> [!IMPORTANT]
>  Envío de contraseñas en un mensaje de correo electrónico o nombres puede suponer una amenaza para la seguridad de cuenta de usuario. Mensajes de correo electrónico normalmente se envían en texto sin formato y pueden ser leídos por red especial "examen" de las aplicaciones.  Para mejorar la seguridad, utilice las mitigaciones que se describen en [proteger los controles de inicio de sesión](http://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c).  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
        <altmember cref="T:System.Web.Mail.SmtpMail" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EmbeddedMailObject.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre utilizado como identificador del elemento que se va a incrustar en un mensaje de correo creado con la clase <see cref="T:System.Web.UI.WebControls.MailDefinition" />.</summary>
        <value>Devuelve el identificador del elemento que se va a incrustar en un mensaje de correo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> propiedad especifica un identificador de un elemento para incrustar en un mensaje de correo creado mediante declaración con el <xref:System.Web.UI.WebControls.MailDefinition> clase. El identificador se usa para asignar el elemento incluido en el <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> propiedad a su ubicación correcta en el cuerpo del archivo especificado en el <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> propiedad, utilizando la sintaxis siguiente:  
  
```  
<img src="cid:identifier" alt="Alternate Text" />  
```  
  
 Normalmente, el elemento es un archivo de imagen. El valor predeterminado para el <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> propiedad es una cadena vacía.  
  
 Es una práctica recomendada para el diseño de accesibilidad establecer la propiedad de texto alternativo en el mensaje de correo electrónico para las imágenes incrustadas.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una página ASP.NET que utiliza un <xref:System.Web.UI.WebControls.ChangePassword> control Web e incluye un controlador de eventos para el <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> evento denominado `SendingMail`. El ejemplo de código se supone que el sitio Web de ASP.NET se ha configurado para utilizar la pertenencia a ASP.NET y la autenticación de formularios y que se ha creado un usuario cuyo nombre y contraseña se conocen. Para obtener más información, consulte [Cómo: Implement Simple Forms Authentication](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Si el cambio de contraseña se realiza correctamente, el código en el `SendingMail` controlador de eventos intenta enviar un mensaje de correo electrónico al usuario que confirme el cambio. SMTP debe estar configurado en el servidor para que funcione este ejemplo de código. Para obtener información acerca de cómo configurar un servidor SMTP, vea [NIB: Cómo: instalar y configurar SMTP Virtual Servers in IIS 6.0](http://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Para los fines de este ejemplo, no es necesario configurar un servidor SMTP; el ejemplo sirve para comprobar si hay un error al enviar un mensaje de correo electrónico.  
  
 Si un servidor de correo electrónico no está configurado correctamente o se produce algún otro error y no se puede enviar el mensaje de correo electrónico, el `SendMailError` se llama a función. Se muestra un mensaje al usuario. Además, se registra un evento en el registro de eventos de aplicación para Windows con la suposición de que un origen de eventos denominado MySamplesSite ya existe. Vea el ejemplo de código siguiente para crear el origen de eventos especificado. Para obtener más información acerca de cómo crear un origen de eventos, vea [control de eventos de servidor en páginas de formularios Web de ASP.NET](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). El <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> propiedad de la <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> objeto se establece en `true` para indicar que se ha controlado el error.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Utilice el siguiente ejemplo de código si necesita agregar mediante programación el origen de eventos denominado MySamplesSite al registro de aplicación. Este origen de eventos debe existir en orden para el primer ejemplo de código para que funcione correctamente. El siguiente ejemplo de código requiere privilegios de administrador.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 Ejemplo de código siguiente puede utilizarse como el archivo ChangePasswordMail.htm para el código de ejemplo anterior.  
  
> [!IMPORTANT]
>  Envío de contraseñas en un mensaje de correo electrónico o nombres puede suponer una amenaza para la seguridad de cuenta de usuario. Mensajes de correo electrónico se envían en texto sin formato y pueden ser leídos por red especial "examen" de las aplicaciones.  Para mejorar la seguridad, utilice las mitigaciones que se describen en [proteger los controles de inicio de sesión](http://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c).  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EmbeddedMailObject.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.MailFileEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la ruta de acceso utilizada para recuperar un elemento que se va a incrustar en un mensaje de correo creado con la clase <see cref="T:System.Web.UI.WebControls.MailDefinition" />.</summary>
        <value>Devuelve la ruta de acceso al elemento que se va a incrustar en un mensaje de correo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> propiedad especifica la ruta de acceso para el elemento que desea incrustar en el mensaje de correo creado mediante declaración con el <xref:System.Web.UI.WebControls.MailDefinition> objeto. La ruta de acceso de archivo en <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> debe ser una ruta de acceso como C:\MyServer\Banner.gif. Normalmente, el elemento incrustado es un archivo de imagen. Si un archivo de imagen se hace referencia mediante su identificador en el mensaje de correo electrónico pero no se incluyen en el mensaje, la imagen aparece como datos adjuntos desasociados cuando se ve el mensaje de correo electrónico.  
  
 Es una práctica recomendada para el diseño de accesibilidad establecer la propiedad de texto alternativo en el mensaje de correo electrónico para las imágenes incrustadas.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una página ASP.NET que utiliza un <xref:System.Web.UI.WebControls.ChangePassword> control Web e incluye un controlador de eventos para el <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> evento denominado `SendingMail`. El ejemplo de código se supone que el sitio Web de ASP.NET se ha configurado para utilizar la pertenencia a ASP.NET y la autenticación de formularios y que se ha creado un usuario cuyo nombre y contraseña se conocen. Para obtener más información, consulte [Cómo: Implement Simple Forms Authentication](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Si el cambio de contraseña se realiza correctamente, el código en el `SendingMail` controlador de eventos intenta enviar un mensaje de correo electrónico al usuario que confirme el cambio. SMTP debe estar configurado en el servidor para que funcione este ejemplo de código. Para obtener información acerca de cómo configurar un servidor SMTP, vea [NIB: Cómo: instalar y configurar SMTP Virtual Servers in IIS 6.0](http://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). Para los fines de este ejemplo, no es necesario configurar un servidor SMTP; el ejemplo sirve para comprobar si hay un error al enviar un mensaje de correo electrónico.  
  
 Si un servidor de correo electrónico no está configurado correctamente o se produce algún otro error y no se puede enviar el mensaje de correo electrónico, el `SendMailError` se llama a función. Se muestra un mensaje al usuario. Además, se registra un evento en el registro de eventos de aplicación para Windows con la suposición de que un origen de eventos denominado MySamplesSite ya existe. Vea el ejemplo de código siguiente para crear el origen de eventos especificado. Para obtener más información acerca de cómo crear un origen de eventos, vea [control de eventos de servidor en páginas de formularios Web de ASP.NET](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). El <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> propiedad de la <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> objeto se establece en `true` para indicar que se ha controlado el error.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Utilice el siguiente ejemplo de código si necesita agregar mediante programación el origen de eventos denominado MySamplesSite al registro de aplicación. Este origen de eventos debe existir en orden para el primer ejemplo de código para que funcione correctamente. El siguiente ejemplo de código requiere privilegios de administrador.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 Ejemplo de código siguiente puede utilizarse como el archivo ChangePasswordMail.htm para el código de ejemplo anterior.  
  
> [!IMPORTANT]
>  Envío de contraseñas en un mensaje de correo electrónico o nombres puede suponer una amenaza para la seguridad de cuenta de usuario. Mensajes de correo electrónico normalmente se envían en texto sin formato y pueden ser leídos por red especial "examen" de las aplicaciones.  Para mejorar la seguridad, utilice las mitigaciones que se describen en [proteger los controles de inicio de sesión](http://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c).  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
      </Docs>
    </Member>
  </Members>
</Type>