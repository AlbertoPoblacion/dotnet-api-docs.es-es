<Type Name="BaseCompareValidator" FullName="System.Web.UI.WebControls.BaseCompareValidator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="26fe419816552ca56b06d89ddf2523c4a2809c9b" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39784666" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BaseCompareValidator : System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BaseCompareValidator extends System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.BaseCompareValidator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BaseCompareValidator&#xA;Inherits BaseValidator" />
  <TypeSignature Language="C++ CLI" Value="public ref class BaseCompareValidator abstract : System::Web::UI::WebControls::BaseValidator" />
  <TypeSignature Language="F#" Value="type BaseCompareValidator = class&#xA;    inherit BaseValidator" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseValidator</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Actúa como la clase base abstracta para los controles de validación que realizan comparaciones de tipo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.BaseCompareValidator> clase es heredada por los controles de validación que comparan valores, como el <xref:System.Web.UI.WebControls.CompareValidator> y <xref:System.Web.UI.WebControls.RangeValidator> controles para proporcionar funcionalidad común básica.  
  
 Use el <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> tipo de propiedad para especificar los datos que los valores se convierten en antes de que se están comparando.  
  
> [!NOTE]
>  Si el valor del control de entrada que se está validando no se puede convertir al tipo de datos especificado, se produce un error de validación. El <xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A> propiedad del control de validación se establece en `false`.  
  
 La <xref:System.Web.UI.WebControls.BaseCompareValidator> clase también contiene varias propiedades y métodos estáticos que son útiles al realizar las validaciones de comparación. Puede determinar si se puede convertir una cadena a un tipo de datos específico mediante el uso de la <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%2A> método. El año máximo que puede representarse por un año de dos dígitos se encuentra en la <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> propiedad. El <xref:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear%2A> método le permite convertir un año de dos dígitos en un año de cuatro dígitos.  
  
> [!NOTE]
>  Al usar controles de validación que derivan de la <xref:System.Web.UI.WebControls.BaseCompareValidator> control dentro de un <xref:System.Web.UI.UpdatePanel> controlar, asegúrese de que el control de validación y el control que está asociado están en el mismo panel. Para obtener más información sobre el uso de la <xref:System.Web.UI.UpdatePanel> controlar actualizaciones parciales de página, vea [información general de representación de página parcial](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
 Para obtener más información acerca de los controles de validación, consulte <xref:System.Web.UI.WebControls.BaseValidator>.  
  
## <a name="accessibility"></a>Accesibilidad  
 El marcado representado de forma predeterminada para este control no podría cumplir los estándares de accesibilidad, como las directrices de prioridad 1 de Web Content Accessibility Guidelines 1.0 (WCAG). Para obtener más información sobre la compatibilidad de accesibilidad para este control, vea [controles ASP.NET y accesibilidad](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.CompareValidator" />
    <altmember cref="T:System.Web.UI.WebControls.RangeValidator" />
    <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
    <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
    <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType)" />
    <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
    <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear(System.Int32)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseCompareValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BaseCompareValidator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.BaseCompareValidator" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dado que el <xref:System.Web.UI.WebControls.BaseCompareValidator> clase es abstracta, no se puede crear un <xref:System.Web.UI.WebControls.BaseCompareValidator> objeto directamente. Este constructor se suele llamar el constructor de una clase derivada para inicializar las propiedades definidas en el <xref:System.Web.UI.WebControls.BaseCompareValidator> clase.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CompareValidator" />
        <altmember cref="T:System.Web.UI.WebControls.RangeValidator" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="baseCompareValidator.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> que representa el flujo de salida para representar contenido HTML en el cliente.</param>
        <summary>Agrega los atributos y estilos HTML que se deben representar para el control en el objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender%2A> método se usa para representar los atributos del control en la etiqueta HTML para el control. Este método se invalida normalmente los desarrolladores de controles en las clases derivadas para insertar los atributos adecuados y estilos para el <xref:System.Web.UI.HtmlTextWriter> flujo de salida para un control.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza el <see cref="M:System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" /> método, asegúrese de llamar al método correspondiente en la clase base. En caso contrario, no se representarán los atributos contenidos en la clase base.</para>
        </block>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvert">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determina si la cadena especificada se puede convertir en el tipo de datos especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvert">
      <MemberSignature Language="C#" Value="public static bool CanConvert (string text, System.Web.UI.WebControls.ValidationDataType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanConvert(string text, valuetype System.Web.UI.WebControls.ValidationDataType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CanConvert (text As String, type As ValidationDataType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CanConvert(System::String ^ text, System::Web::UI::WebControls::ValidationDataType type);" />
      <MemberSignature Language="F#" Value="static member CanConvert : string * System.Web.UI.WebControls.ValidationDataType -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.CanConvert (text, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
      </Parameters>
      <Docs>
        <param name="text">Cadena que se va a comprobar.</param>
        <param name="type">Uno de los valores de <see cref="T:System.Web.UI.WebControls.ValidationDataType" />.</param>
        <summary>Determina si la cadena especificada se puede convertir en el tipo de datos especificado. Esta versión del método sobrecargado prueba los valores de moneda, dobles y de fecha utilizando el formato de la referencia cultural actual.</summary>
        <returns>Es <see langword="true" /> si la cadena de datos especificada se puede convertir en el tipo de datos especificado; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%29> método para determinar si la cadena especificada se puede convertir al tipo de datos especificado. Este método se utiliza normalmente para comprobar si se puede convertir una cadena a un tipo de datos compatibles antes de realizar una operación que dependa de ese tipo de datos.  
  
 Esta versión del método comprueba el valor con el formato usado por la referencia cultural actual. Para probar el valor con un formato de referencia cultural neutra, use el <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%29?displayProperty=nameWithType> sobrecargados de la versión de este método.  
  
   
  
## Examples  
 El ejemplo siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%2A> método para comparar dos valores enteros y determinar si se puede convertir el segundo entero.  
  
 [!code-aspx-csharp[BaseCompareValidatorCanConvert#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseCompareValidatorCanConvert/CS/basecomparevalidatorcanconvertcs.aspx#1)]
 [!code-aspx-vb[BaseCompareValidatorCanConvert#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseCompareValidatorCanConvert/VB/basecomparevalidatorcanconvertvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues" />
        <altmember cref="Overload:System.Web.UI.WebControls.BaseCompareValidator.Convert" />
      </Docs>
    </Member>
    <Member MemberName="CanConvert">
      <MemberSignature Language="C#" Value="public static bool CanConvert (string text, System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanConvert(string text, valuetype System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CanConvert (text As String, type As ValidationDataType, cultureInvariant As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CanConvert(System::String ^ text, System::Web::UI::WebControls::ValidationDataType type, bool cultureInvariant);" />
      <MemberSignature Language="F#" Value="static member CanConvert : string * System.Web.UI.WebControls.ValidationDataType * bool -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.CanConvert (text, type, cultureInvariant)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
        <Parameter Name="cultureInvariant" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">Cadena que se va a comprobar.</param>
        <param name="type">Uno de los valores de enumeración de <see cref="T:System.Web.UI.WebControls.ValidationDataType" />.</param>
        <param name="cultureInvariant">Es <see langword="true" /> para probar los valores con un formato de referencia cultural neutra; de lo contrario, es <see langword="false" />.</param>
        <summary>Determina si la cadena especificada se puede convertir en el tipo de datos especificado. Esta versión del método sobrecargado permite especificar si los valores se prueban utilizando un formato de referencia cultural neutra.</summary>
        <returns>Es <see langword="true" /> si la cadena de datos especificada se puede convertir en el tipo de datos especificado; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%29> método para determinar si la cadena especificada se puede convertir al tipo de datos especificado. Este método se utiliza normalmente para comprobar si se puede convertir una cadena a un tipo de datos compatibles antes de realizar una operación que dependa de ese tipo de datos. Para indicar que los valores deben probarse con un formato de referencia cultural neutra, pase `true` para el `cultureInvariant` parámetro; en caso contrario, los valores se prueban utilizando el formato usado por la referencia cultural actual. Cuando se prueba un valor con el formato usado por la referencia cultural actual, considere el uso de la <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=nameWithType> sobrecargados de la versión de este método.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues" />
        <altmember cref="Overload:System.Web.UI.WebControls.BaseCompareValidator.Convert" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Compare">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Compara dos cadenas con el operador especificado y el tipo de datos de validación.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="protected static bool Compare (string leftText, string rightText, System.Web.UI.WebControls.ValidationCompareOperator op, System.Web.UI.WebControls.ValidationDataType type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool Compare(string leftText, string rightText, valuetype System.Web.UI.WebControls.ValidationCompareOperator op, valuetype System.Web.UI.WebControls.ValidationDataType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.String,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function Compare (leftText As String, rightText As String, op As ValidationCompareOperator, type As ValidationDataType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool Compare(System::String ^ leftText, System::String ^ rightText, System::Web::UI::WebControls::ValidationCompareOperator op, System::Web::UI::WebControls::ValidationDataType type);" />
      <MemberSignature Language="F#" Value="static member Compare : string * string * System.Web.UI.WebControls.ValidationCompareOperator * System.Web.UI.WebControls.ValidationDataType -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.Compare (leftText, rightText, op, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leftText" Type="System.String" />
        <Parameter Name="rightText" Type="System.String" />
        <Parameter Name="op" Type="System.Web.UI.WebControls.ValidationCompareOperator" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
      </Parameters>
      <Docs>
        <param name="leftText">Valor a la izquierda del operador.</param>
        <param name="rightText">Valor a la derecha del operador.</param>
        <param name="op">Uno de los valores de <see cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />.</param>
        <param name="type">Uno de los valores de <see cref="T:System.Web.UI.WebControls.ValidationDataType" />.</param>
        <summary>Compara dos cadenas utilizando el operador y el tipo de datos especificados. Esta versión del método sobrecargado compara los valores de moneda, dobles y de fecha utilizando el formato de la referencia cultural actual.</summary>
        <returns>Es <see langword="true" /> si el parámetro <paramref name="leftValue" /> se relaciona con el parámetro <paramref name="rightValue" /> de la manera especificada por el parámetro <paramref name="op" />; de lo contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.String%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29> método se usa para probar si el valor de la `leftText` parámetro está relacionado con el valor de la `rightText` parámetro de la manera especificada por el `op` parámetro. El `type` parámetro especifica el tipo de datos de los valores que se va a comparar.  
  
> [!NOTE]
>  Si el `op` parámetro está establecido en `ValidationCompareOperator.DataTypeCheck`, este método comprueba solo el valor de la `leftText` parámetro para el tipo de datos especificado por el `type` parámetro. El `rightText` se omite el parámetro.  
  
 Esta versión del método compara los valores con el formato usado por la referencia cultural actual. Para comparar los valores con un formato de referencia cultural neutra, use el <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Boolean%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=nameWithType> sobrecargados de la versión de este método.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Object@)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="protected static bool Compare (string leftText, bool cultureInvariantLeftText, string rightText, bool cultureInvariantRightText, System.Web.UI.WebControls.ValidationCompareOperator op, System.Web.UI.WebControls.ValidationDataType type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool Compare(string leftText, bool cultureInvariantLeftText, string rightText, bool cultureInvariantRightText, valuetype System.Web.UI.WebControls.ValidationCompareOperator op, valuetype System.Web.UI.WebControls.ValidationDataType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.Boolean,System.String,System.Boolean,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function Compare (leftText As String, cultureInvariantLeftText As Boolean, rightText As String, cultureInvariantRightText As Boolean, op As ValidationCompareOperator, type As ValidationDataType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool Compare(System::String ^ leftText, bool cultureInvariantLeftText, System::String ^ rightText, bool cultureInvariantRightText, System::Web::UI::WebControls::ValidationCompareOperator op, System::Web::UI::WebControls::ValidationDataType type);" />
      <MemberSignature Language="F#" Value="static member Compare : string * bool * string * bool * System.Web.UI.WebControls.ValidationCompareOperator * System.Web.UI.WebControls.ValidationDataType -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.Compare (leftText, cultureInvariantLeftText, rightText, cultureInvariantRightText, op, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leftText" Type="System.String" />
        <Parameter Name="cultureInvariantLeftText" Type="System.Boolean" />
        <Parameter Name="rightText" Type="System.String" />
        <Parameter Name="cultureInvariantRightText" Type="System.Boolean" />
        <Parameter Name="op" Type="System.Web.UI.WebControls.ValidationCompareOperator" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
      </Parameters>
      <Docs>
        <param name="leftText">Valor a la izquierda del operador.</param>
        <param name="cultureInvariantLeftText">Es <see langword="true" /> para convertir el valor del lado izquierdo a un formato de referencia cultural neutra; de lo contrario, es <see langword="false" />.</param>
        <param name="rightText">Valor a la derecha del operador.</param>
        <param name="cultureInvariantRightText">Es <see langword="true" /> para convertir el valor del lado derecho a un formato de referencia cultural neutra; de lo contrario, es <see langword="false" />.</param>
        <param name="op">Uno de los valores de <see cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />.</param>
        <param name="type">Uno de los valores de <see cref="T:System.Web.UI.WebControls.ValidationDataType" />.</param>
        <summary>Compara dos cadenas con el operador especificado y el tipo de datos de validación. Esta versión de la sobrecarga permite especificar si los valores se comparan utilizando un formato de referencia cultural neutra.</summary>
        <returns>Es <see langword="true" /> si el parámetro <paramref name="leftValue" /> se relaciona con el parámetro <paramref name="rightValue" /> de la manera especificada por el parámetro <paramref name="op" />; de lo contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Boolean%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29> método se usa para probar si el valor de la `leftText` parámetro está relacionado con el valor de la `rightText` parámetro de la manera especificada por el `op` parámetro. El `type` parámetro especifica el tipo de datos de los valores que se va a comparar.  
  
> [!NOTE]
>  Si el `op` parámetro está establecido en `ValidationCompareOperator.DataTypeCheck`, este método comprueba solo el valor de la `leftText` parámetro para el tipo de datos especificado por el `type` parámetro. El `rightText` se omite el parámetro.  
  
 Para indicar que se deben comparar los valores con un formato de referencia cultural neutra, pase `true` para el `cultureInvariantLeftText` y `cultureInvariantRightText` parámetros; en caso contrario, los valores se comparan utilizando el formato usado por la referencia cultural actual. Cuando se comparan valores con el formato usado por la referencia cultural actual, considere el uso de la <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.String%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=nameWithType> sobrecargados de la versión de este método.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Object@)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Convert">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Convierte el texto especificado en un objeto del tipo de datos especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="protected static bool Convert (string text, System.Web.UI.WebControls.ValidationDataType type, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool Convert(string text, valuetype System.Web.UI.WebControls.ValidationDataType type, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function Convert (text As String, type As ValidationDataType, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool Convert(System::String ^ text, System::Web::UI::WebControls::ValidationDataType type, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="static member Convert : string * System.Web.UI.WebControls.ValidationDataType *  -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.Convert (text, type, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="text">Texto que se va a convertir.</param>
        <param name="type">Uno de los valores de <see cref="T:System.Web.UI.WebControls.ValidationDataType" />.</param>
        <param name="value">Cuando este método finaliza, contiene un objeto con el resultado de la conversión. Este parámetro se pasa sin inicializar.</param>
        <summary>Convierte el texto especificado en un objeto del tipo de datos especificado. Esta versión del método sobrecargado convierte los valores de moneda, dobles y de fecha utilizando el formato de la referencia cultural actual.</summary>
        <returns>Es <see langword="true" /> si la conversión se realiza correctamente; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Object%40%29> método se utiliza para convertir texto en un objeto del tipo de datos especificado. Aunque el método devuelve `true` o `false` para indicar si la conversión se realizó correctamente, el valor convertido se almacena en el `value` `out` parámetro.  
  
> [!NOTE]
>  Si la conversión se realiza correctamente, el `value` parámetro está establecido en `null`.  
  
 Esta versión del método convierte los valores con el formato usado por la referencia cultural actual. Para convertir los valores con un formato de referencia cultural neutra, use el <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%2CSystem.Object%40%29?displayProperty=nameWithType> sobrecargados de la versión de este método.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.String,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)" />
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="protected static bool Convert (string text, System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool Convert(string text, valuetype System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Boolean,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function Convert (text As String, type As ValidationDataType, cultureInvariant As Boolean, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool Convert(System::String ^ text, System::Web::UI::WebControls::ValidationDataType type, bool cultureInvariant, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="static member Convert : string * System.Web.UI.WebControls.ValidationDataType * bool *  -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.Convert (text, type, cultureInvariant, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
        <Parameter Name="cultureInvariant" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="text">Texto que se va a convertir.</param>
        <param name="type">Uno de los valores de <see cref="T:System.Web.UI.WebControls.ValidationDataType" />.</param>
        <param name="cultureInvariant">Es <see langword="true" /> para convertir los valores a un formato de referencia cultural neutra; de lo contrario, es <see langword="false" />.</param>
        <param name="value">Cuando este método finaliza, contiene un objeto con el resultado de la conversión. Este parámetro se pasa sin inicializar.</param>
        <summary>Convierte el texto especificado en un objeto del tipo de datos especificado. Esta versión del método sobrecargado permite especificar si los valores se convierten utilizando un formato de referencia cultural neutra.</summary>
        <returns>Es <see langword="true" /> si la conversión se realiza correctamente; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%2CSystem.Object%40%29> método se utiliza para convertir texto en un objeto del tipo de datos especificado. Aunque el método devuelve `true` o `false` para indicar si la conversión se realizó correctamente, el valor convertido se almacena en el `value` `out` parámetro.  
  
> [!NOTE]
>  Si la conversión se realiza correctamente, el `value` parámetro está establecido en `null`.  
  
 Para indicar que se deben convertir los valores con un formato de referencia cultural neutra, pase `true` para el `cultureInvariant` parámetro; en caso contrario, los valores se convierten con el formato usado por la referencia cultural actual. Al convertir un valor con el formato usado por la referencia cultural actual, considere el uso de la <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Object%40%29?displayProperty=nameWithType> sobrecargados de la versión de este método.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.String,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)" />
      </Docs>
    </Member>
    <Member MemberName="CultureInvariantValues">
      <MemberSignature Language="C#" Value="public bool CultureInvariantValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CultureInvariantValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues" />
      <MemberSignature Language="VB.NET" Value="Public Property CultureInvariantValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CultureInvariantValues { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CultureInvariantValues : bool with get, set" Usage="System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si los valores se convierten a un formato de referencia cultural neutra antes de su comparación.</summary>
        <value>Es <see langword="true" /> para convertir los valores a un formato de referencia cultural neutra antes de compararlos; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando el <xref:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues%2A> propiedad está establecida en `true`, propiedades del control que no están fuertemente tipadas se convierten en un formato de referencia cultural neutra antes de que se están comparando. Cuando esta propiedad se establece en `false`, los valores se convierten al formato de la referencia cultural actual. El <xref:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues%2A> propiedad no afecta a los valores que especifican los usuarios del control en una página Web.  
  
 Esta propiedad no se puede establecer mediante temas o temas de hoja de estilos. Para obtener más información, consulte <xref:System.Web.UI.ThemeableAttribute> y [ASP.NET temas y máscaras](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrentInfo" />
      </Docs>
    </Member>
    <Member MemberName="CutoffYear">
      <MemberSignature Language="C#" Value="protected static int CutoffYear { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CutoffYear" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property CutoffYear As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property int CutoffYear { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CutoffYear : int" Usage="System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el año máximo que se puede representar con un año de dos dígitos.</summary>
        <value>Año máximo que se puede representar con un año de dos dígitos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> propiedad para determinar el año máximo que puede representarse por un año de dos dígitos en un intervalo de 100 años. Por ejemplo, si esta propiedad contiene el valor `2029`, puede representar los años 1930 al 2029 mediante un año de dos dígitos. El 30 de año de dos dígitos se interpreta como 1930, mientras que 29 se interpreta como 2029. No se puede cambiar el valor de esta propiedad directamente. Sin embargo, puede cambiar el año máximo que puede representarse por un año de dos dígitos estableciendo el <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> propiedad.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="P:System.Globalization.Calendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="DetermineRenderUplevel">
      <MemberSignature Language="C#" Value="protected override bool DetermineRenderUplevel ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool DetermineRenderUplevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function DetermineRenderUplevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool DetermineRenderUplevel();" />
      <MemberSignature Language="F#" Value="override this.DetermineRenderUplevel : unit -&gt; bool" Usage="baseCompareValidator.DetermineRenderUplevel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina si el control de validación se puede representar para un explorador más moderno ("de nivel superior").</summary>
        <returns>Es <see langword="true" /> si el control de validación puede representarse para un explorador "de nivel superior"; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel%2A> método es una función auxiliar que se usa principalmente en el <xref:System.Web.UI.WebControls.BaseValidator.RenderUplevel%2A> propiedad para determinar si el explorador del cliente admite la representación "de nivel superior" (presentación en un explorador más reciente). El <xref:System.Web.UI.WebControls.BaseCompareValidator> clase reemplaza este método para devolver `false` si la referencia cultural actual usa un calendario no gregoriano.  
  
> [!NOTE]
>  Este método lo usan principalmente los desarrolladores de controles.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza el <see cref="M:System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel" /> método, asegúrese de llamar al método correspondiente en la clase base. En caso contrario, se omitirán las condiciones definidas en la clase base.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.RenderUplevel" />
      </Docs>
    </Member>
    <Member MemberName="GetDateElementOrder">
      <MemberSignature Language="C#" Value="protected static string GetDateElementOrder ();" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig string GetDateElementOrder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetDateElementOrder () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::String ^ GetDateElementOrder();" />
      <MemberSignature Language="F#" Value="static member GetDateElementOrder : unit -&gt; string" Usage="System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina el orden en el que aparecen el mes, día y año en un valor de fecha para la referencia cultural actual.</summary>
        <returns>Una cadena que representa el orden en el que aparecen el mes, día y año en un valor de fecha para la referencia cultural actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El mes, día y año de un valor de fecha pueden aparecer en distintos órdenes según la configuración de la referencia cultural actual. El <xref:System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder%2A> método se usa para determinar el orden en que aparecen estos valores. En la tabla siguiente se muestra los valores distintos devueltos por este método.  
  
|Orden de los elementos fecha|Valor devuelto|  
|------------------------|------------------|  
|Día, mes, año|"dmy"|  
|Mes, día, año|"MDA"|  
|Año, mes, día|"AMD"|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetFullYear">
      <MemberSignature Language="C#" Value="protected static int GetFullYear (int shortYear);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig int32 GetFullYear(int32 shortYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetFullYear (shortYear As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static int GetFullYear(int shortYear);" />
      <MemberSignature Language="F#" Value="static member GetFullYear : int -&gt; int" Usage="System.Web.UI.WebControls.BaseCompareValidator.GetFullYear shortYear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shortYear" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="shortYear">Año de dos dígitos.</param>
        <summary>Genera la representación de año de cuatro dígitos para el año de dos dígitos especificado.</summary>
        <returns>Representación de año de cuatro dígitos para el año de dos dígitos especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear%2A> método para generar la representación de año de cuatro dígitos del año de dos dígitos especificado. La representación de año de cuatro dígitos depende del valor de la <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> propiedad, que contiene el año máximo que puede representarse por un año de dos dígitos en un intervalo de 100 años. Por ejemplo, si la <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> propiedad contiene el valor `2029`, el <xref:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear%2A> método devuelve un año comprendido entre 1930 y 2029. El 30 de año de dos dígitos se interpreta como 1930, mientras que 29 se interpreta como 2029. Puede cambiar el año máximo que puede representarse por un año de dos dígitos estableciendo el <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> propiedad.  
  
> [!NOTE]
>  Dado que este método es `static`, puede usarlo sin crear una instancia de la clase calificando el nombre del método junto con el nombre de clase, por ejemplo, `BaseCompareValidator.GetFullYear`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="P:System.Globalization.Calendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ValidationDataType Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ValidationDataType Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As ValidationDataType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ValidationDataType Type { System::Web::UI::WebControls::ValidationDataType get(); void set(System::Web::UI::WebControls::ValidationDataType value); };" />
      <MemberSignature Language="F#" Value="member this.Type : System.Web.UI.WebControls.ValidationDataType with get, set" Usage="System.Web.UI.WebControls.BaseCompareValidator.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ValidationDataType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el tipo de datos al que se convierten los valores que se van a comparar antes de que se realice la comparación.</summary>
        <value>Uno de los valores de enumeración de <see cref="T:System.Web.UI.WebControls.ValidationDataType" />. El valor predeterminado es <see langword="String" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> propiedad para especificar el tipo de datos usado para la comparación. El <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> propiedad se utiliza de forma diferente por los distintos controles de validación de comparación.  
  
> [!IMPORTANT]
>  Cuando el <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> propiedad está establecida en <xref:System.Web.UI.WebControls.ValidationDataType.Date> y el tipo de calendario actual es no gregorianos, el validador realiza solo la validación del lado servidor. El script de cliente del validador sólo admite calendarios gregorianos.  
  
 Por ejemplo, en el <xref:System.Web.UI.WebControls.RangeValidator> (control), todos los valores que se va a comparar (límite superior, límite inferior y el valor del control de entrada) se convierten al tipo de datos especificado antes de que se realice la comparación. Sin embargo, si usa un <xref:System.Web.UI.WebControls.CompareValidator> control y establezca su <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> propiedad `ValidationCompareOperator.DataTypeCheck`, solo el valor del control de entrada se convierte al tipo de datos especificado.  
  
> [!NOTE]
>  Si el valor del control de entrada asociado al control de validación no se puede convertir al tipo de datos especificado, se produce un error de validación. El <xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A> propiedad del control de validación se establece en `false`.  
  
 En la tabla siguiente se enumera los valores que puede usar para el <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> propiedad.  
  
|Tipo de datos|Descripción|  
|---------------|-----------------|  
|`String`|Especifica un tipo de datos de cadena.|  
|`Integer`|Especifica un tipo de datos entero de 32 bits con signo.|  
|`Double`|Especifica un tipo de datos de número punto flotante de precisión doble.|  
|`Date`|Especifica un tipo de datos de fecha.|  
|`Currency`|Especifica un tipo de datos de moneda.|  
  
 Esta propiedad no se puede establecer mediante temas o temas de la hoja de estilos. Para obtener más información, consulte <xref:System.Web.UI.ThemeableAttribute> y [ASP.NET temas y máscaras](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> propiedad para especificar el tipo de datos que se convierten los valores que se va a comparar en antes de que se realiza la comparación.  
  
 [!code-aspx-csharp[Classic CompareValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CompareValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El tipo de datos especificado no es ninguno de los valores <see cref="T:System.Web.UI.WebControls.ValidationDataType" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
      </Docs>
    </Member>
  </Members>
</Type>