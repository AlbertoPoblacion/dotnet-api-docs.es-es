<Type Name="ObjectDataSourceMethodEventArgs" FullName="System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1266c49007a05fd5ee4e829c48f51aad69a34a6f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30599779" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ObjectDataSourceMethodEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSourceMethodEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSourceMethodEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSourceMethodEventArgs : System::ComponentModel::CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona datos para los eventos <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />, <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Updating" /> y <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" /> del control <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> clase se utiliza en el <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A>, y <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A> métodos para proporcionar acceso a los parámetros de entrada que se pasan a la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>, y <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> métodos de la <xref:System.Web.UI.WebControls.ObjectDataSource> control. Estos parámetros son accesibles mediante la <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> propiedad. Mediante la adición de un delegado para controlar el <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>, <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, o <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> eventos, puede examinar y manipular los valores de los parámetros y realizar cualquier procesamiento previo adicional que se necesita. Los cambios realizados en los parámetros de este diccionario afectará a la sobrecarga de método se llama para la operación. Cuando el <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSource> control se establece, solo se pueden modificar las propiedades del objeto de datos para los elementos de este diccionario; no se puede agregar o quitar parámetros. Para obtener más información, vea <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource> control expone muchos eventos que puede controlar para trabajar con el objeto comercial subyacente en distintos momentos de su ciclo de vida. En la tabla siguiente se enumeran los eventos y asociados <xref:System.EventArgs> clases y los delegados de controladores de eventos.  
  
|evento|Clase `EventArgs`|Delegado de controlador de eventos|  
|-----------|-----------------------|---------------------------|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>.<br /><br /> Se produce inmediatamente antes de que se crea la instancia del objeto comercial.|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>.<br /><br /> Se produce inmediatamente después de que se crea la instancia del objeto comercial.|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>.<br /><br /> Se produce antes de que se recuperen los datos.|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> y <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>.<br /><br /> Se producen antes de realiza una operación de inserción, actualización o eliminación.|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selected>.<br /><br /> Se produce una vez recuperados los datos.|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> y <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>.<br /><br /> Se produce una vez completada la operación de inserción, actualización o delete.|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>.<br /><br /> Se produce antes de que se destruye un objeto comercial.|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos de código. El primer ejemplo de código muestra cómo utilizar un <xref:System.Web.UI.WebControls.ObjectDataSource> control con un objeto comercial y un <xref:System.Web.UI.WebControls.DetailsView> control para insertar datos. El segundo ejemplo de código proporciona un ejemplo de un objeto comercial de nivel medio que se utiliza por el primer ejemplo de código.  
  
 En el ejemplo de código siguiente se muestra cómo utilizar un <xref:System.Web.UI.WebControls.ObjectDataSource> control con un objeto comercial y un <xref:System.Web.UI.WebControls.DetailsView> control para insertar datos. El <xref:System.Web.UI.WebControls.DetailsView> inicialmente muestra una nueva `NorthwindEmployee` registro, junto con una generada automáticamente **insertar** botón. Después de escribir datos en los campos de la <xref:System.Web.UI.WebControls.DetailsView> de control, haga clic en el **insertar** botón y la <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> propiedad identificará el método que realiza la <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> acción.  
  
 En este ejemplo, el `UpdateEmployeeInfo` método se usa para realizar una inserción; sin embargo, requiere un `NorthwindEmployee` parámetro para insertar los datos. Por este motivo, la colección de cadenas que el <xref:System.Web.UI.WebControls.DetailsView> control pasa automáticamente no es suficiente. El `NorthwindEmployeeInserting` delegado es un <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> objeto que controla el <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> eventos y le permite manipular los parámetros de entrada antes de la <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> continúa de la operación. Dado que la `UpdateEmployeeInfo` método requiere un `NorthwindEmployee` uno se crea mediante la colección de cadenas y se agrega a objetos como un parámetro, el <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> colección.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 En el ejemplo de código siguiente se proporciona un ejemplo de un objeto comercial de nivel medio que utiliza el ejemplo de código anterior. En la lista siguiente se describe las dos clases principales que se definen en el ejemplo de código:  
  
-   El `EmployeeLogic` (clase), que es una clase sin estado que encapsula la lógica de negocios.  
  
-   El `NorthwindEmployee` (clase), que es una clase de modelo que contiene sólo la funcionalidad básica necesaria para cargar y conservar los datos de la capa de datos.  
  
 Además, un `NorthwindDataException` clase se proporciona como una comodidad.  
  
 Este conjunto de clases de ejemplo utiliza la base de datos de Northwind Traders, que es una base de datos de ejemplo disponible con Microsoft SQL Server y Microsoft Access. Para obtener un ejemplo completo, use estas clases colocándolos en el directorio App_Code bajo la raíz de la aplicación o por medio de su compilación y colocar el archivo DLL resultante en el directorio Bin. El `UpdateEmployeeInfo` método no está completamente implementado, por lo que no se insertarán datos en la base de datos de Northwind Traders al hacer pruebas con este ejemplo.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />
    <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />
    <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceMethodEventArgs (System.Collections.Specialized.IOrderedDictionary inputParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Specialized.IOrderedDictionary inputParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.#ctor(System.Collections.Specialized.IOrderedDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (inputParameters As IOrderedDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceMethodEventArgs(System::Collections::Specialized::IOrderedDictionary ^ inputParameters);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="inputParameters" Type="System.Collections.Specialized.IOrderedDictionary" />
      </Parameters>
      <Docs>
        <param name="inputParameters">Un diccionario <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> de objetos <see cref="T:System.Web.UI.WebControls.Parameter" /> que representan los nombres de los parámetros del método de objeto comercial y sus valores asociados.</param>
        <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" /> utilizando la colección especificada de parámetros de entrada.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputParameters">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary InputParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary InputParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputParameters As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ InputParameters { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una colección que contiene parámetros del método de objeto comercial y sus valores.</summary>
        <value>Un objeto <see cref="T:System.Collections.IDictionary" /> de pares nombre/valor que representan los parámetros del método de objeto comercial y sus valores correspondientes.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parámetros se pueden pasar al método de objeto comercial por referencia o por valor. Si utiliza un <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> objeto que se va a controlar la <xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting>, o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> eventos, puede obtener acceso y manipular estos parámetros mediante el <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> propiedad. Los cambios realizados en los parámetros de este diccionario afectará a la sobrecarga de método se llama para la operación.  Cuando el <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSource> control está establecido, puede modificar sólo las propiedades del objeto de datos para los elementos de este diccionario; no se puede agregar o quitar parámetros. Para obtener más información, vea <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>.  
  
 Parámetros que se pasan por referencia se devuelven en el <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters%2A> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> objeto.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar un <xref:System.Web.UI.WebControls.DropDownList> (control), <xref:System.Web.UI.WebControls.TextBox> controles y varios <xref:System.Web.UI.WebControls.ObjectDataSource> controles para actualizar los datos. El <xref:System.Web.UI.WebControls.DropDownList> muestra el nombre de un empleado de Northwind, mientras que la <xref:System.Web.UI.WebControls.TextBox> controles se utilizan para especificar y actualizar información de dirección. Porque el <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> propiedad contiene un <xref:System.Web.UI.WebControls.ControlParameter> objeto al que está enlazado el valor seleccionado de la <xref:System.Web.UI.WebControls.DropDownList> de control, el botón que desencadena la <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> método solo se habilita después de selecciona un empleado.  
  
 En este ejemplo, el `NorthwindEmployeeUpdating` método se llama antes de la <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> método para agregar los parámetros correctos y los valores para el <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> colección. Puede agregar los parámetros y valores dinámicamente, como se muestra, o mediante declaración.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_13#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_13/CS/objds13cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_13#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_13/VB/objds13vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>