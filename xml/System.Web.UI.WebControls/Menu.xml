<Type Name="Menu" FullName="System.Web.UI.WebControls.Menu">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7bd36c0032f01ac7c7d4f16d38ff2a22c7a27854" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37534947" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Menu : System.Web.UI.WebControls.HierarchicalDataBoundControl, System.Web.UI.INamingContainer, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Menu extends System.Web.UI.WebControls.HierarchicalDataBoundControl implements class System.Web.UI.INamingContainer, class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Menu" />
  <TypeSignature Language="VB.NET" Value="Public Class Menu&#xA;Inherits HierarchicalDataBoundControl&#xA;Implements INamingContainer, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class Menu : System::Web::UI::WebControls::HierarchicalDataBoundControl, System::Web::UI::INamingContainer, System::Web::UI::IPostBackEventHandler" />
  <TypeSignature Language="F#" Value="type Menu = class&#xA;    inherit HierarchicalDataBoundControl&#xA;    interface IPostBackEventHandler&#xA;    interface INamingContainer" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.HierarchicalDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("MenuItemClick")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.MenuDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Muestra un menú en una página web ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En este tema:  
  
-   [Introducción](#introduction)  
  
-   [Elementos de menú](#menu_items)  
  
-   [Datos estáticos](#static_data)  
  
-   [Enlazar a datos](#binding_to_data)  
  
-   [Personalizar la interfaz de usuario](#customizing_the_user_interface)  
  
-   [Eventos](#events)  
  
-   [Accesibilidad](#accessibility)  
  
-   [Sintaxis declarativa](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introducción  
 El <xref:System.Web.UI.WebControls.Menu> control se usa para mostrar un menú en una página Web ASP.NET y a menudo se usa en combinación con un <xref:System.Web.UI.WebControls.SiteMapDataSource> control para explorar un sitio Web. El <xref:System.Web.UI.WebControls.Menu> control admite las siguientes características:  
  
-   Enlace de datos que permiten que los elementos de menú del control para enlazarse a orígenes de datos jerárquicos.  
  
-   Sitio de la navegación a través de la integración con el <xref:System.Web.UI.WebControls.SiteMapDataSource> control.  
  
-   Acceso mediante programación a la <xref:System.Web.UI.WebControls.Menu> modelo de objetos para crear menús, rellenar elementos de menú dinámicamente, establecer las propiedades y así sucesivamente.  
  
-   Apariencia personalizable a través de los temas, definido por el usuario imágenes, estilos y plantillas definidas por el usuario.  
  
 Cuando el usuario hace clic en un elemento de menú, el <xref:System.Web.UI.WebControls.Menu> control puede navegar a una página Web vinculada o simplemente devolver el servidor. Si el <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> se establece la propiedad de un elemento de menú, el <xref:System.Web.UI.WebControls.Menu> control se desplaza a la página vinculada; de lo contrario, devuelve la página al servidor para su procesamiento. De forma predeterminada, se muestra una página vinculada en la misma ventana o marco, como el <xref:System.Web.UI.WebControls.Menu> control. Para mostrar el contenido vinculado en una ventana diferente o un marco, use la <xref:System.Web.UI.WebControls.Menu.Target%2A> propiedad de la <xref:System.Web.UI.WebControls.Menu> control.  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.Menu.Target%2A> propiedad afecta a cada elemento de menú en el control. Para especificar una ventana o marco para un elemento de menú individuales, establezca el <xref:System.Web.UI.WebControls.MenuItem.Target%2A> propiedad de la <xref:System.Web.UI.WebControls.MenuItem> objeto directamente.  
  
 El <xref:System.Web.UI.WebControls.Menu> control muestra dos tipos de menús: un menú estático y un menú dinámico. Siempre se muestra el menú estático en un <xref:System.Web.UI.WebControls.Menu> control. De forma predeterminada, se muestran los elementos de menú en el nivel de raíz (nivel 0) en el menú estático. Puede mostrar los niveles de menú adicionales (submenús estáticos) dentro del menú estático estableciendo el <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> propiedad. Los elementos de menú (si existe) con un nivel más alto que el valor especificado por el <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> propiedad se muestran en un menú dinámico. Un menú dinámico aparece solo cuando el usuario coloca el puntero del mouse sobre el elemento de menú primario que contiene un submenú dinámico. Menús dinámicos desaparecen automáticamente después de cierto tiempo. Use el <xref:System.Web.UI.WebControls.Menu.DisappearAfter%2A> propiedad para especificar la duración.  
  
> [!NOTE]
>  Un menú dinámico también desaparece cuando el usuario hace clic fuera del menú.  
  
 También puede limitar el número de niveles que se muestra en un menú dinámico estableciendo el <xref:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels%2A> propiedad. Se descartan los niveles de menú superiores al valor especificado.  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.Menu> control no está diseñado para usarse dentro de un <xref:System.Web.UI.UpdatePanel> control. Puede agregar el <xref:System.Web.UI.WebControls.Menu> control sólo a una página fuera un <xref:System.Web.UI.UpdatePanel> control. <xref:System.Web.UI.UpdatePanel> los controles se usan para actualizar regiones seleccionadas de una página en lugar de actualizar toda la página con una devolución de datos. Para obtener más información, consulte [información general del Control UpdatePanel](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) y [información general de representación de página parcial](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
<a name="menu_items"></a>   
## <a name="menu-items"></a>Elementos de menú  
 Un <xref:System.Web.UI.WebControls.Menu> control se compone de un árbol de elementos de menú representados por <xref:System.Web.UI.WebControls.MenuItem> objetos. Los elementos de menú en el nivel superior (nivel 0) se denominan elementos de menú raíz. Un elemento de menú que tiene un elemento de menú primario se llama a un elemento de menú secundarios. Todos los elementos de menú raíz se almacenan en el <xref:System.Web.UI.WebControls.Menu.Items%2A> colección. Elementos de menú secundarios se almacenan en un elemento de menú primario <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> colección.  
  
 Cada elemento de menú tiene un <xref:System.Web.UI.WebControls.MenuItem.Text%2A> y un <xref:System.Web.UI.WebControls.MenuItem.Value%2A> propiedad. El valor de la <xref:System.Web.UI.WebControls.MenuItem.Text%2A> propiedad se muestra en el <xref:System.Web.UI.WebControls.Menu> (control), mientras que el <xref:System.Web.UI.WebControls.MenuItem.Value%2A> propiedad se utiliza para almacenar datos adicionales sobre el elemento de menú, tales como los datos se pasan al evento de devolución de datos asociado con el elemento de menú. Al hacer clic, un elemento de menú puede navegar a otra página Web indicada por el <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> propiedad.  
  
> [!NOTE]
>  Si el <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> no se establece la propiedad para un elemento de menú, el <xref:System.Web.UI.WebControls.Menu> control simplemente envía la página al servidor para su procesamiento cuando se hace clic en el elemento de menú.  
  
 Opcionalmente, también puede mostrar una imagen en un elemento de menú estableciendo el <xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A> propiedad.  
  
 Para obtener más información sobre los elementos de menú, vea <xref:System.Web.UI.WebControls.MenuItem>.  
  
<a name="static_data"></a>   
## <a name="static-data"></a>Datos estáticos  
 El modelo de datos más sencillo de la <xref:System.Web.UI.WebControls.Menu> control cuenta con elementos de menú estático. Para mostrar los elementos de menú estático mediante la sintaxis declarativa, primero anidar de apertura y cierre `<Items>` etiquetas entre las etiquetas apertura y cierre de la <xref:System.Web.UI.WebControls.Menu> control. A continuación, cree la estructura de menú anidando `<asp:MenuItem>` elementos situados entre la apertura y cierre `<Items>` etiquetas. Cada `<asp:MenuItem>` elemento representa un elemento de menú en el control y se asigna a un <xref:System.Web.UI.WebControls.MenuItem> objeto. Puede establecer las propiedades de cada elemento de menú estableciendo los atributos de su `<asp:MenuItem>` elemento. Para crear elementos de submenú, anide adicionales `<asp:MenuItem>` elementos situados entre la apertura y cierre `<asp:MenuItem>` etiquetas del elemento de menú primario.  
  
<a name="binding_to_data"></a>   
## <a name="binding-to-data"></a>Enlazar a datos  
 El <xref:System.Web.UI.WebControls.Menu> control puede usar cualquier control de origen de datos jerárquicos, como un <xref:System.Web.UI.WebControls.XmlDataSource> control o un <xref:System.Web.UI.WebControls.SiteMapDataSource> control. Para enlazar a un control de origen de datos jerárquicos, establezca el <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> propiedad de la <xref:System.Web.UI.WebControls.Menu> el control a la <xref:System.Web.UI.Control.ID%2A> valor del control de origen de datos. El <xref:System.Web.UI.WebControls.Menu> control se enlaza automáticamente al control de origen de datos especificado. Este es el método preferido para enlazar a datos.  
  
 Al enlazar a un origen de datos donde cada elemento de datos contiene varias propiedades (por ejemplo, un elemento XML con varios atributos), un elemento de menú muestra el valor devuelto por la `ToString` método del elemento de datos de forma predeterminada. En el caso de un elemento XML, el elemento de menú muestra el nombre del elemento, que muestra la estructura subyacente de la estructura de menús, pero no es muy útil en caso contrario. Puede enlazar un elemento de menú a una propiedad de elemento de datos específico mediante el <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> colección para especificar los enlaces del elemento de menú. El <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> contiene la colección <xref:System.Web.UI.WebControls.MenuItemBinding> objetos que definen la relación entre un elemento de datos y el elemento de menú que se está enlazando. Puede especificar los criterios de enlace y la propiedad de elemento de datos que se muestra en el nodo. Para obtener más información sobre los enlaces del elemento de menú, vea <xref:System.Web.UI.WebControls.MenuItemBinding>.  
  
 No se puede crear nodos vacíos en un <xref:System.Web.UI.WebControls.Menu> control estableciendo el <xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A> o <xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A> propiedades en la cadena vacía (""). Establecer estas propiedades en la cadena vacía, tiene el mismo efecto que si no se configura las propiedades. En ese caso, el <xref:System.Web.UI.WebControls.Menu> control crea un enlace predeterminado mediante el <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> propiedad. Para obtener más información, consulte [enlazar a las bases de datos](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742).  
  
<a name="customizing_the_user_interface"></a>   
## <a name="customizing-the-user-interface"></a>Personalizar la interfaz de usuario  
 Hay muchas maneras de personalizar la apariencia de la <xref:System.Web.UI.WebControls.Menu> control. En primer lugar, puede especificar si el <xref:System.Web.UI.WebControls.Menu> control se representa horizontalmente o verticalmente estableciendo el <xref:System.Web.UI.WebControls.Menu.Orientation%2A> propiedad. También puede especificar un estilo diferente (por ejemplo, el tamaño de fuente y color) para cada uno de los tipos de elemento de menú.  
  
 Si utiliza hojas de estilos en cascada (CSS) para personalizar la apariencia del control, utilice estilos en línea o un archivo CSS independiente, pero no ambos. Uso de estilos en línea y un archivo CSS independiente podría producir resultados inesperados. Para obtener más información sobre el uso de hojas de estilos con controles, vea [controles de servidor Web y estilos CSS](http://msdn.microsoft.com/library/782c2db6-fc9b-4243-8df9-a8ffe2f4cc42).  
  
 En la tabla siguiente se enumera los estilos del elemento de menú disponibles.  
  
|Propiedad de estilo del elemento de menú|Descripción|  
|------------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>|La configuración de estilo para un elemento de menú dinámico cuando el puntero del mouse se sitúa sobre él.|  
|<xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>|La configuración de estilo para un elemento de menú dinámico individual.|  
|<xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>|La configuración de estilo para un menú dinámico.|  
|<xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>|La configuración de estilo para el elemento de menú dinámico seleccionado actualmente.|  
|<xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>|La configuración de estilo para un elemento de menú estático cuando el puntero del mouse se sitúa sobre él.|  
|<xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>|La configuración de estilo para un elemento de menú estático en particular.|  
|<xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>|La configuración de estilo para un menú estático.|  
|<xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>|La configuración de estilo para el elemento de menú estático actualmente seleccionado.|  
  
 En lugar de establecer las propiedades de estilo individuales, puede especificar los estilos que se aplican a los elementos de menú según su nivel mediante el uso de las siguientes colecciones de estilos.  
  
|Colecciones de estilos de nivel|Descripción|  
|-----------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A>|Una colección de <xref:System.Web.UI.WebControls.MenuItemStyle> los objetos que controlan el estilo de los elementos de menú según su nivel.|  
|<xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A>|Una colección de <xref:System.Web.UI.WebControls.MenuItemStyle> seleccionado de objetos que controlan el estilo de elementos de menú según su nivel.|  
|<xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A>|Una colección de <xref:System.Web.UI.WebControls.MenuItemStyle> los objetos que controlan el estilo de los elementos de submenú según su nivel.|  
  
 El primer estilo de la colección corresponde al estilo de los elementos de menú en el primer nivel de profundidad en el árbol de menú. El segundo estilo de la colección corresponde al estilo de los elementos de menú en el segundo nivel de profundidad en el árbol de menú y así sucesivamente. Más a menudo esto se utiliza para generar tabla de contenido de estilo de menús de navegación que los elementos de menú de una cierta profundidad deberían tener el mismo aspecto, independientemente de si tienen submenús.  
  
> [!NOTE]
>  Si usa cualquiera de las colecciones de estilo de nivel de la tabla anterior para definir el estilo para el <xref:System.Web.UI.WebControls.Menu> control, estas opciones de estilo invalidar las propiedades de estilo del elemento de menú individuales.  
  
 Es otra manera de modificar la apariencia del control personalizar las imágenes mostradas en el <xref:System.Web.UI.WebControls.Menu> control. Puede especificar su propia imagen personalizada para las diferentes partes del control estableciendo las propiedades mostradas en la tabla siguiente.  
  
|Propiedad de imagen|Descripción|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A>|Una imagen opcional que aparece en la parte inferior de un elemento de menú dinámico para separarlo de otros elementos de menú.|  
|<xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A>|Imagen opcional que se muestra en un elemento de menú dinámico para indicar que tiene un submenú.|  
|<xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A>|Una imagen opcional que aparece en la parte superior de un elemento de menú dinámico para separarlo de otros elementos de menú.|  
|<xref:System.Web.UI.WebControls.Menu.ScrollDownImageUrl%2A>|La imagen mostrada en la parte inferior de un elemento de menú para indicar que el usuario puede desplazarse hacia abajo para ver los elementos de menú adicionales.|  
|<xref:System.Web.UI.WebControls.Menu.ScrollUpImageUrl%2A>|La imagen mostrada en la parte superior de un elemento de menú para indicar que el usuario puede desplazarse hasta ver los elementos de menú adicionales.|  
|<xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A>|Una imagen opcional que aparece en la parte inferior de un elemento de menú estático para separarlo de otros elementos de menú.|  
|<xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A>|Imagen opcional que se muestra en un elemento de menú estático para indicar que tiene un submenú.|  
|<xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A>|Una imagen opcional que aparece en la parte superior de un elemento de menú estático para separarlo de otros elementos de menú.|  
  
 Para un control completo de la interfaz de usuario (UI), puede definir sus propias plantillas personalizadas para el <xref:System.Web.UI.WebControls.Menu> con las siguientes propiedades de plantilla de control.  
  
|Propiedad de plantilla|Descripción|  
|-----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.DynamicItemTemplate%2A>|La plantilla que contiene el contenido personalizado para representar para un elemento de menú dinámico.|  
|<xref:System.Web.UI.WebControls.Menu.StaticItemTemplate%2A>|La plantilla que contiene el contenido personalizado para representar para un elemento de menú estático.|  
  
 Puede controlar la posición vertical y horizontal de un menú dinámico con respecto a su elemento de menú primario estableciendo el <xref:System.Web.UI.WebControls.Menu.DynamicVerticalOffset%2A> y <xref:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset%2A> propiedades, respectivamente. Para controlar la sangría de los elementos de submenú estáticos dentro de un menú estático, utilice el <xref:System.Web.UI.WebControls.Menu.StaticSubMenuIndent%2A> propiedad.  
  
<a name="events"></a>   
## <a name="events"></a>Eventos  
 El <xref:System.Web.UI.WebControls.Menu> control proporciona varios eventos que se pueden programar. Esto le permite ejecutar una rutina personalizada siempre que se produce un evento. En la tabla siguiente se enumera los eventos admitidos.  
  
|evento|Descripción|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.MenuItemClick>|Se produce cuando se hace clic en un elemento de menú. Este evento normalmente se utiliza para sincronizar un <xref:System.Web.UI.WebControls.Menu> control con otro control en la página.|  
|<xref:System.Web.UI.WebControls.Menu.MenuItemDataBound>|Se produce cuando un elemento de menú está enlazado a datos. Este evento normalmente se usa para modificar un elemento de menú antes de representarse en un <xref:System.Web.UI.WebControls.Menu> control.|  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>Accesibilidad  
 Para obtener información sobre cómo configurar este control para que lo genera marcado que se ajusta a los estándares de accesibilidad, vea [accesibilidad en Visual Studio y ASP.NET](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) y [controles ASP.NET y accesibilidad](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Sintaxis declarativa  
  
```  
<asp:Menu  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CssClass="string"  
    DataSource="string"  
    DataSourceID="string"  
    DisappearAfter="integer"  
    DynamicBottomSeparatorImageUrl="uri"  
    DynamicEnableDefaultPopOutImage="True|False"  
    DynamicHorizontalOffset="integer"  
    DynamicItemFormatString="string"  
    DynamicPopOutImageTextFormatString="string"  
    DynamicPopOutImageUrl="uri"  
    DynamicTopSeparatorImageUrl="uri"  
    DynamicVerticalOffset="integer"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    ItemWrap="True|False"  
    MaximumDynamicDisplayLevels="integer"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnMenuItemClick="MenuItemClick event handler"  
    OnMenuItemDataBound="MenuItemDataBound event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    Orientation="Horizontal|Vertical"  
    PathSeparator="string"  
    runat="server"  
    ScrollDownImageUrl="uri"  
    ScrollDownText="string"  
    ScrollUpImageUrl="uri"  
    ScrollUpText="string"  
    SkinID="string"  
    SkipLinkText="string"  
    StaticBottomSeparatorImageUrl="uri"  
    StaticDisplayLevels="integer"  
    StaticEnableDefaultPopOutImage="True|False"  
    StaticItemFormatString="string"  
    StaticPopOutImageTextFormatString="string"  
    StaticPopOutImageUrl="uri"  
    StaticSubMenuIndent="size"  
    StaticTopSeparatorImageUrl="uri"  
    Style="string"  
    TabIndex="integer"  
    Target="string"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <DataBindings>  
                <asp:MenuItemBinding  
                    DataMember="string"  
                    Depth="integer"  
                    Enabled="True|False"  
                    EnabledField="string"  
                    FormatString="string"  
                    ImageUrl="uri"  
                    ImageUrlField="string"  
                    NavigateUrl="uri"  
                    NavigateUrlField="string"  
                    PopOutImageUrl="uri"  
                    PopOutImageUrlField="string"  
                    Selectable="True|False"  
                    SelectableField="string"  
                    SeparatorImageUrl="uri"  
                    SeparatorImageUrlField="string"  
                    Target="string"  
                    TargetField="string"  
                    Text="string"  
                    TextField="string"  
                    ToolTip="string"  
                    ToolTipField="string"  
                    Value="string"  
                    ValueField="string"  
                />  
        </DataBindings>  
        <DynamicHoverStyle />  
        <DynamicItemTemplate>  
            <!-- child controls -->  
        </DynamicItemTemplate>  
        <DynamicMenuItemStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <DynamicMenuStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <DynamicSelectedStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <Items />  
        <LevelMenuItemStyles>  
                <asp:MenuItemStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    ItemSpacing="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelMenuItemStyles>  
        <LevelSelectedStyles>  
                <asp:MenuItemStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    ItemSpacing="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelSelectedStyles>  
        <LevelSubMenuStyles>  
                <asp:SubMenuStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelSubMenuStyles>  
        <StaticHoverStyle />  
        <StaticItemTemplate>  
            <!-- child controls -->  
        </StaticItemTemplate>  
        <StaticMenuItemStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|  
                X-Small|Small|Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <StaticMenuStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <StaticSelectedStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
</asp:Menu>  
```  
  
   
  
## Examples  
 Un proyecto de sitio Web de Visual Studio con código fuente está disponible como acompañamiento de este tema: [descargar](http://go.microsoft.com/fwlink/?LinkId=192868).  
  
 En el ejemplo de código siguiente se muestra cómo crear un <xref:System.Web.UI.WebControls.Menu> control con los elementos de menú estático mediante la sintaxis declarativa.  
  
 [!code-aspx-csharp[MenuDeclarative#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDeclarative/CS/menudeclarativecs.aspx#1)]
 [!code-aspx-vb[MenuDeclarative#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDeclarative/VB/menudeclarativevb.aspx#1)]  
  
 En el ejemplo de código siguiente se muestra cómo enlazar la <xref:System.Web.UI.WebControls.Menu> el control a un <xref:System.Web.UI.WebControls.SiteMapDataSource> control. Este ejemplo funcione correctamente, debe copiar los datos de mapa del sitio de ejemplo siguientes en un archivo denominado Web.sitemap.  
  
 [!code-aspx-csharp[MenuDataBind#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDataBind/CS/menudatabindcs.aspx#1)]
 [!code-aspx-vb[MenuDataBind#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDataBind/VB/menudatabindvb.aspx#1)]  
  
 El siguiente es datos de mapa del sitio de ejemplo para el ejemplo anterior.  
  
```  
<siteMap>  
  <siteMapNode url="~\Home.aspx"   
    title="Home"  
    description="Home">  
    <siteMapNode url="~\Music.aspx"  
      title="Music"  
      description="Music">  
      <siteMapNode url="~\Classical.aspx"   
        title="Classical"  
        description="Classical"/>  
      <siteMapNode url="~\Rock.aspx"  
        title="Rock"  
        description="Rock"/>  
      <siteMapNode url="~\Jazz.aspx"  
        title="Jazz"  
        description="Jazz"/>  
    </siteMapNode>  
    <siteMapNode url="~\Movies.aspx"  
      title="Movies"  
      description="Movies">  
      <siteMapNode url="~\Action.aspx"  
        title="Action"  
        description="Action"/>  
      <siteMapNode url="~\Drama.aspx"  
        title="Drama"  
        description="Drama"/>  
      <siteMapNode url="~\Musical.aspx"  
        title="Musical"  
        description="Musical"/>  
    </siteMapNode>  
  </siteMapNode>  
</siteMap>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.TreeView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Menu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Menu();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este constructor para crear e inicializar una nueva instancia de la <xref:System.Web.UI.WebControls.Menu> clase. Para agregar dinámicamente un <xref:System.Web.UI.WebControls.Menu> el control a una página, cree un nuevo <xref:System.Web.UI.WebControls.Menu> objeto, establecer sus propiedades y, a continuación, agregarlo a la <xref:System.Web.UI.Control.Controls%2A> colección de un contenedor de control, como <xref:System.Web.UI.WebControls.PlaceHolder>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el constructor para agregar dinámicamente un <xref:System.Web.UI.WebControls.Menu> control a una página.  
  
 [!code-aspx-csharp[MenuCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuCtor/CS/menuctorcs.aspx#1)]
 [!code-aspx-vb[MenuCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuCtor/VB/menuctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menu.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Flujo de salida que representa el contenido HTML en el cliente.</param>
        <summary>Agrega atributos y estilos HTML que se deben representar en el objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Menu> invalidaciones de controlar la <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A> método para restablecer el <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> propiedad <xref:System.String.Empty>. Este miembro se utiliza principalmente los desarrolladores de controles al derivar un control personalizado de la <xref:System.Web.UI.WebControls.Menu> clase.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.WebControls.Menu.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un <see cref="T:System.Web.UI.ControlCollection" /> que contiene los controles secundarios del control <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <value>
          <see cref="T:System.Web.UI.ControlCollection" /> que contiene los controles secundarios.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Menu.Controls%2A> propiedad permite el acceso mediante programación a la instancia de la <xref:System.Web.UI.ControlCollection> de clases para el <xref:System.Web.UI.WebControls.Menu> control. Puede agregar controles a la colección, quitar controles de la colección o recorrer en iteración los controles de servidor en la colección.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="menu.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea los controles secundarios de un control <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro se utiliza principalmente los desarrolladores de controles al derivar un control personalizado de la <xref:System.Web.UI.WebControls.Menu> clase.  
  
 Este método se llama por la infraestructura ASP.NET para notificar a los controles que utilizan la implementación basada en composición, incluidos los controles que derivan de <xref:System.Web.UI.WebControls.CompositeDataBoundControl> y <xref:System.Web.UI.WebControls.CompositeControl>. Para crear los controles secundarios que contienen como preparación para la devolución o representación.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberSignature Language="F#" Value="override this.DataBind : unit -&gt; unit" Usage="menu.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enlaza el origen de datos al control <see cref="T:System.Web.UI.WebControls.Menu" />. Este método no puede heredarse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro se usa principalmente los desarrolladores de controles al derivar un control personalizado de la <xref:System.Web.UI.WebControls.Menu> clase.  
  
 Use la <xref:System.Web.UI.WebControls.Menu.DataBind%2A> método para enlazar datos desde un origen de datos para el <xref:System.Web.UI.WebControls.Menu> control. Este método resuelve todas las expresiones de enlace de datos de la plantilla activa del control.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Los controles enlazados a datos deben reemplazar <see cref="M:System.Web.UI.WebControls.Menu.PerformDataBinding" /> en lugar de <see cref="M:System.Web.UI.WebControls.Menu.DataBind" />. Si <see cref="M:System.Web.UI.WebControls.Menu.DataBind" /> se invalida, el <see cref="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" /> y <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound(System.EventArgs)" /> se generan eventos en el orden equivocado.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DataBindings">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemBindingCollection DataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemBindingCollection DataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DataBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBindings As MenuItemBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemBindingCollection ^ DataBindings { System::Web::UI::WebControls::MenuItemBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataBindings : System.Web.UI.WebControls.MenuItemBindingCollection" Usage="System.Web.UI.WebControls.Menu.DataBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuBindingsEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una colección de objetos <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> que definen la relación entre un elemento de datos y el elemento de menú al que enlaza.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" /> que representa la relación entre un elemento de datos y el elemento de menú al que enlaza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> contiene la colección <xref:System.Web.UI.WebControls.MenuItemBinding> objetos que definen la relación entre un elemento de datos y el elemento de menú que se está enlazando. Al enlazar a un origen de datos donde cada elemento de datos contiene varias propiedades (por ejemplo, un elemento XML con varios atributos), un elemento de menú muestra el valor devuelto por la `ToString()` método del elemento de datos de forma predeterminada. En el caso de un elemento XML, el elemento de menú muestra el nombre del elemento, que se muestra la estructura subyacente del árbol, pero no es muy útil en caso contrario. Puede enlazar un elemento de menú a una propiedad de elemento de datos específico mediante la especificación de los enlaces del elemento de menú.  
  
 Al definir la relación entre un elemento de datos y un elemento de menú, debe especificar tanto los criterios de enlace y la propiedad de un elemento de datos enlazar a. Los criterios indican cuándo un elemento de datos debe enlazarse a un elemento de menú. Los criterios pueden especificarse con una profundidad, un miembro de datos o ambos. La profundidad especifica el nivel de menú que se enlaza. Por ejemplo, si especifica una profundidad de 0, todos los elementos de menú de la estructura de árbol en el nivel 0 se enlazan mediante el enlace del elemento de menú. Un miembro de datos especifica el tipo del elemento de datos en el origen de datos subyacente, pero puede representar información diferente dependiendo del origen de datos. Por ejemplo, el miembro de datos para un elemento XML especifica el nombre del elemento.  
  
 Si hay varios <xref:System.Web.UI.WebControls.MenuItemBinding> se definen los objetos que entran en conflicto entre sí, el <xref:System.Web.UI.WebControls.Menu> control aplica a los enlaces del elemento de menú en el orden de precedencia siguiente:  
  
1.  La <xref:System.Web.UI.WebControls.MenuItemBinding> objeto que define una profundidad y un miembro de datos.  
  
2.  La <xref:System.Web.UI.WebControls.MenuItemBinding> objeto que define sólo la profundidad.  
  
3.  La <xref:System.Web.UI.WebControls.MenuItemBinding> objeto que define sólo el miembro de datos.  
  
4.  La <xref:System.Web.UI.WebControls.MenuItemBinding> objeto que define la profundidad ni el miembro de datos.  
  
 Una vez que se establecen los criterios de enlace, a continuación, puede enlazar una propiedad de un <xref:System.Web.UI.WebControls.MenuItem> objeto que puede enlazarse a un atributo o un campo de un elemento de datos. Por ejemplo, puede enlazar el <xref:System.Web.UI.WebControls.MenuItem.Text%2A> propiedad de un elemento de menú para el atributo de texto en un elemento XML estableciendo el <xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A> propiedad de un <xref:System.Web.UI.WebControls.MenuItemBinding> objeto. También puede enlazar a un valor estático. Si establece la <xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A> propiedad de un <xref:System.Web.UI.WebControls.MenuItemBinding> (objeto), todos los elementos de menú al que el <xref:System.Web.UI.WebControls.MenuItemBinding> se aplica el objeto comparten el mismo valor de texto estático. Para obtener más información sobre cómo enlazar las propiedades de un <xref:System.Web.UI.WebControls.MenuItem> en un valor de objeto, vea <xref:System.Web.UI.WebControls.MenuItemBinding>.  
  
 Aunque el <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> colección se puede rellenar mediante programación, normalmente se establece mediante declaración. Para especificar los enlaces del elemento de menú, primero anide de apertura y cierre `<DataBindings>` etiquetas entre las etiquetas apertura y cierre de la <xref:System.Web.UI.WebControls.Menu> control. A continuación, colocar `<asp:MenuItemBinding>` elementos situados entre la apertura y cierre `<DataBindings>` etiquetas para cada elemento de menú de enlace desean especificar.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> colección para definir la relación entre los campos de un <xref:System.Web.UI.WebControls.XmlDataSource> control y los elementos de menú en un <xref:System.Web.UI.WebControls.Menu> control. Este ejemplo funcione correctamente, debe copiar los datos XML de ejemplo siguientes en un archivo denominado Map.xml.  
  
 [!code-aspx-csharp[MenuBindings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuBindings/CS/menubindingscs.aspx#1)]
 [!code-aspx-vb[MenuBindings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuBindings/VB/menubindingsvb.aspx#1)]  
  
 El siguiente es datos de mapa del sitio de ejemplo para el ejemplo anterior.  
  
```  
<MapHomeNode url="~\Home.aspx"   
  title="Home"  
  description="Home">  
  <MapNode url="~\Music.aspx"  
    title="Music"  
    description="Music">  
    <MapNode url="~\Classical.aspx"   
      title="Classical"  
      description="Classical"/>  
    <MapNode url="~\Rock.aspx"  
      title="Rock"  
      description="Rock"/>  
    <MapNode url="~\Jazz.aspx"  
      title="Jazz"  
      description="Jazz"/>  
  </MapNode>  
  <MapNode url="~\Movies.aspx"  
    title="Movies"  
    description="Movies">  
    <MapNode url="~\Action.aspx"  
      title="Action"  
      description="Action"/>  
    <MapNode url="~\Drama.aspx"  
      title="Drama"  
      description="Drama"/>  
    <MapNode url="~\Musical.aspx"  
      title="Musical"  
      description="Musical"/>  
  </MapNode>  
</MapHomeNode>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBinding" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
      </Docs>
    </Member>
    <Member MemberName="DisappearAfter">
      <MemberSignature Language="C#" Value="public int DisappearAfter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DisappearAfter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DisappearAfter" />
      <MemberSignature Language="VB.NET" Value="Public Property DisappearAfter As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DisappearAfter { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DisappearAfter : int with get, set" Usage="System.Web.UI.WebControls.Menu.DisappearAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(500)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el tiempo durante el cual se muestra un menú dinámico después de que el puntero del mouse deje de estar colocado sobre el menú.</summary>
        <value>Tiempo (en milisegundos) durante el cual se muestra un menú dinámico después de que el puntero del mouse deje de estar colocado sobre el menú. El valor predeterminado es 500.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada, un menú dinámico desaparece automáticamente después de cierto tiempo cuando el puntero del mouse deje de estar colocado sobre el menú. Use el <xref:System.Web.UI.WebControls.Menu.DisappearAfter%2A> propiedad para especificar la duración.  
  
> [!NOTE]
>  Un menú dinámico desaparece inmediatamente si el usuario hace clic fuera del menú.  
  
 También puede especificar que un menú dinámico nunca debería desaparecer automáticamente al establecer esta propiedad en -1. En este caso, el elemento de menú dinámico desaparecerá solo cuando el usuario hace clic fuera del menú.  
  
 Esta propiedad no se puede establecer mediante temas o temas de la hoja de estilos. Para obtener más información, consulte <xref:System.Web.UI.ThemeableAttribute> y [ASP.NET temas y máscaras](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.DisappearAfter%2A> propiedad para especificar que un menú dinámico debería desaparecer después de que el usuario mueve el puntero del mouse fuera del menú durante más de dos segundos.  
  
 [!code-aspx-csharp[MenuDisappearAfter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDisappearAfter/CS/menudisappearaftercs.aspx#1)]
 [!code-aspx-vb[MenuDisappearAfter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDisappearAfter/VB/menudisappearaftervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El valor seleccionado es menor que -1.</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicBottomSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string DynamicBottomSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicBottomSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicBottomSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicBottomSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicBottomSeparatorImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la dirección URL de una imagen que se muestra en la parte inferior de cada elemento de menú dinámico para separarlo de otros elementos de menú.</summary>
        <value>Dirección URL de una imagen de separación que se muestra en la parte inferior de cada elemento de menú dinámico. El valor predeterminado es una cadena vacía (""), lo que indica que esta propiedad no está establecida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A> propiedad para especificar una imagen personalizada opcional que se muestra en la parte inferior de cada elemento de menú dinámico. Esta imagen actúa como un separador entre elementos de menú y normalmente es una imagen de una línea.  
  
> [!NOTE]
>  También puede mostrar una imagen de separación en la parte superior de cada elemento de menú dinámico estableciendo el <xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A> propiedad para mostrar una imagen de separación en la parte inferior de cada elemento de menú dinámico.  
  
 [!code-aspx-csharp[MenuDynamicBottomSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicBottomSeparatorImageUrl/CS/menudynamicbottomseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicBottomSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicBottomSeparatorImageUrl/VB/menudynamicbottomseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="DynamicEnableDefaultPopOutImage">
      <MemberSignature Language="C#" Value="public bool DynamicEnableDefaultPopOutImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DynamicEnableDefaultPopOutImage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicEnableDefaultPopOutImage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DynamicEnableDefaultPopOutImage { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicEnableDefaultPopOutImage : bool with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se muestra la imagen integrada que indica que un elemento de menú dinámico tiene un submenú.</summary>
        <value>Es <see langword="true" /> si se va a mostrar la imagen integrada para los elementos de menú dinámicos con submenús; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando un elemento de menú dinámico contiene un submenú, se puede mostrar una imagen para indicar que el usuario puede expandir el menú colocando el puntero del mouse sobre el elemento de menú. Hay dos maneras de mostrar esta imagen:  
  
-   Establecer el <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> propiedad `true` para utilizar la imagen integrada (valor predeterminado).  
  
-   Establecer el <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> propiedad para especificar una imagen personalizada.  
  
 Si el <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> propiedad está establecida, esa imagen reemplaza la imagen integrada.  
  
> [!NOTE]
>  Si el <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> propiedad no está establecida y el <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> propiedad está establecida en `false`, no se muestra ninguna imagen.  
  
 Puede especificar texto alternativo para la imagen estableciendo el <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A> propiedad. Este texto se muestra como una información sobre herramientas cuando el usuario coloca el puntero del mouse sobre la imagen. Este texto también proporciona a los dispositivos de tecnología con una descripción de la imagen que se puede usar para hacer que el control sea más accesible.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> propiedad para ocultar la imagen que indica que un elemento de menú dinámico tiene un submenú. El <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> propiedad debe establecerse en una cadena vacía ("") para ocultar la imagen.  
  
 [!code-aspx-csharp[MenuDynamicEnableDefaultPopOutImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicEnableDefaultPopOutImage/CS/menudynamicenabledefaultpopoutimagecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicEnableDefaultPopOutImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicEnableDefaultPopOutImage/VB/menudynamicenabledefaultpopoutimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicHorizontalOffset">
      <MemberSignature Language="C#" Value="public int DynamicHorizontalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DynamicHorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicHorizontalOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DynamicHorizontalOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicHorizontalOffset : int with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el número de píxeles de desplazamiento horizontal de un menú dinámico con respecto a su elemento de menú primario.</summary>
        <value>Número de píxeles de desplazamiento horizontal de un menú dinámico con respecto a su elemento de menú primario. El valor predeterminado es 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset%2A> propiedad para ajustar la posición horizontal de un menú dinámico con respecto a su elemento de menú primario. Esta propiedad afecta a la posición de un menú dinámico de manera diferente dependiendo de si el <xref:System.Web.UI.WebControls.Menu> control se muestra vertical u horizontalmente (según lo especificado por el <xref:System.Web.UI.WebControls.Menu.Orientation%2A> propiedad). En la tabla siguiente se describe las diferencias.  
  
|Orientación|Descripción|  
|-----------------|-----------------|  
|Horizontal|De forma predeterminada, se muestra un menú dinámico directamente debajo de su elemento de menú primario. Al establecer esta propiedad, la posición del menú dinámico desplaza horizontalmente desde esta posición base.|  
|Vertical|De forma predeterminada, se muestra un elemento de menú dinámico junto a su elemento de menú primario sin ningún espaciado entre. Al establecer esta propiedad controla el espaciado horizontal entre el menú dinámico y su elemento de menú primario.|  
  
> [!NOTE]
>  Puede establecer esta propiedad en un valor negativo para desplazar un menú dinámico en una dirección negativa. Si va a mostrar un menú vertical, un valor negativo hace que un menú dinámico y su elemento de menú primario se superpongan.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset%2A> propiedad para especificar un intervalo de 5 píxeles entre un menú dinámico y su elemento de menú primario.  
  
 [!code-aspx-csharp[MenuDynamicHorizontalOffset#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/CS/menudynamichorizontaloffsetcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicHorizontalOffset#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/VB/menudynamichorizontaloffsetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      </Docs>
    </Member>
    <Member MemberName="DynamicHoverStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style DynamicHoverStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style DynamicHoverStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicHoverStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ DynamicHoverStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicHoverStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una referencia al objeto <see cref="T:System.Web.UI.WebControls.Style" /> que permite establecer el aspecto de un elemento de menú dinámico cuando se sitúa encima el puntero del mouse.</summary>
        <value>Referencia a <see cref="T:System.Web.UI.WebControls.Style" /> que representa el estilo de un elemento de menú dinámico cuando se sitúa encima el puntero del mouse.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A> propiedad para controlar la apariencia de un elemento de menú dinámico cuando el puntero del mouse se sitúa sobre él. Esta propiedad es de solo lectura. Sin embargo, puede establecer las propiedades de la <xref:System.Web.UI.WebControls.Style> objeto devuelve. Las propiedades pueden establecerse mediante declaración en el formulario `Property-Subproperty`, donde `Subproperty` es una propiedad de la <xref:System.Web.UI.WebControls.Style> objeto (por ejemplo, `DynamicHoverStyle-ForeColor`). Las propiedades también pueden establecerse mediante programación en el formulario `Property.Subproperty` (por ejemplo, `DynamicHoverStyle.ForeColor`).  
  
 Propiedades de estilo de un elemento de menú dinámico se aplican en el orden siguiente:  
  
1.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>. Si el <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> colección o <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> se define la colección, se aplica en este momento, reemplazando las demás propiedades de estilo de elemento de menú.  
  
3.  <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>. Si el <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> se define la colección, se aplica en este momento, reemplazando las demás propiedades de estilo de elemento de menú.  
  
4.  <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A> propiedad para cambiar el color de fondo de un elemento de menú dinámico a azul celeste claro cuando el usuario coloca el puntero del mouse sobre él.  
  
 [!code-aspx-csharp[MenuDynamicHoverStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicHoverStyle/CS/menudynamichoverstylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicHoverStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicHoverStyle/VB/menudynamichoverstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicItemFormatString">
      <MemberSignature Language="C#" Value="public string DynamicItemFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicItemFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicItemFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicItemFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicItemFormatString : string with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece texto adicional que aparece con todos los elementos de menú que se muestran dinámicamente.</summary>
        <value>Texto o caracteres adicionales que aparecen con todos los elementos de menú. El valor predeterminado para esta propiedad es "{0}."</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad se puede usar para insertar texto para dar formato a elementos de menú dinámico en un menú que se muestra en los dispositivos móviles. El <xref:System.Web.UI.WebControls.Menu> control admite plantillas para la presentación de los elementos de menú estático y dinámico. Para dispositivos móviles, se omiten las plantillas, por lo que esta propiedad permite agregar caracteres o texto para aplicar formato a los elementos de menú sin utilizar una plantilla.  
  
> [!NOTE]
>  Para lograr un formato coherente cuando se usa esta propiedad, también debe establecer el <xref:System.Web.UI.WebControls.Menu.StaticItemFormatString%2A> propiedad si desea que el formato que debe ser idéntica entre los elementos de menú estático y dinámico.  
  
 Si se aplican el formato de plantilla y de esta propiedad, el formato de plantilla se omite para los dispositivos móviles.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.StaticItemFormatString%2A> y <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> propiedades para agregar texto a cada elemento de menú.  
  
 [!code-aspx-csharp[MenuItemFormatString#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemFormatString/CS/menuitemformatstringcs.aspx#1)]
 [!code-aspx-vb[MenuItemFormatString#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemFormatString/VB/menuitemformatstringvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticItemFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicItemTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate DynamicItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate DynamicItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ITemplate ^ DynamicItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.MenuItemTemplateContainer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la plantilla que contiene el contenido personalizado que se va a representar para un menú dinámico.</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> que contiene el contenido personalizado de un menú dinámico. El valor predeterminado es null, lo que indica que no se ha establecido esta propiedad.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En lugar de usar la representación integrada para un menú dinámico, puede definir su apariencia y comportamiento de un elemento de menú dinámico mediante la <xref:System.Web.UI.WebControls.Menu.DynamicItemTemplate%2A> propiedad. Para especificar una plantilla personalizada para un elemento de menú dinámico, coloque primero `<DynamicItemTemplate>` etiquetas entre las etiquetas apertura y cierre de la <xref:System.Web.UI.WebControls.Menu> control. A continuación, puede enumerar el contenido de la plantilla entre la apertura y cierre `<DynamicItemTemplate>` etiquetas. Además, puede controlar el estilo de un menú dinámico mediante la <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicMenuItemStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle DynamicMenuItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle DynamicMenuItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicMenuItemStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ DynamicMenuItemStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicMenuItemStyle : System.Web.UI.WebControls.MenuItemStyle" Usage="System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una referencia al objeto <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> que permite establecer el aspecto de los elementos de menú dentro de un menú dinámico.</summary>
        <value>Referencia a <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> que representa el estilo de los elementos de menú dentro de un menú dinámico.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A> propiedad para controlar la apariencia de los elementos de menú dentro de un menú dinámico. Esta propiedad es de solo lectura. Sin embargo, puede establecer las propiedades de la <xref:System.Web.UI.WebControls.MenuItemStyle> objeto devuelve. Las propiedades pueden establecerse mediante declaración en el formulario `Property-Subproperty`, donde `Subproperty` es una propiedad de la <xref:System.Web.UI.WebControls.MenuItemStyle> objeto (por ejemplo, `DynamicMenuItemStyle-ForeColor`). Las propiedades también pueden establecerse mediante programación en el formulario `Property.Subproperty` (por ejemplo, `DynamicMenuItemStyle.ForeColor`).  
  
 Propiedades de estilo de un elemento de menú dinámico se aplican en el orden siguiente:  
  
1.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>. Si el <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> colección o <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> se define la colección, se aplica en este momento, reemplazando las demás propiedades de estilo de elemento de menú.  
  
3.  <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>. Si el <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> se define la colección, se aplica en este momento, reemplazando las demás propiedades de estilo de elemento de menú.  
  
4.  <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A> propiedad para especificar un color de fondo azul celeste claro para los elementos de menú en un menú dinámico.  
  
 [!code-aspx-csharp[MenuDynamicMenuItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/menudynamicmenuitemstyle/CS/MenuDynamicMenuItemStylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicMenuItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/menudynamicmenuitemstyle/VB/MenuDynamicMenuItemStylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicMenuStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SubMenuStyle DynamicMenuStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.SubMenuStyle DynamicMenuStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicMenuStyle As SubMenuStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SubMenuStyle ^ DynamicMenuStyle { System::Web::UI::WebControls::SubMenuStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicMenuStyle : System.Web.UI.WebControls.SubMenuStyle" Usage="System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SubMenuStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una referencia al objeto <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> que permite establecer el aspecto de un menú dinámico.</summary>
        <value>Referencia a <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> que representa el estilo de un menú dinámico.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A> propiedad para controlar la apariencia de un menú dinámico. Esta propiedad es de solo lectura. Sin embargo, puede establecer las propiedades de la <xref:System.Web.UI.WebControls.MenuItemStyle> objeto devuelve. Las propiedades pueden establecerse mediante declaración en el formulario `Property-Subproperty`, donde `Subproperty` es una propiedad de la <xref:System.Web.UI.WebControls.MenuItemStyle> objeto (por ejemplo, `DynamicMenuStyle-ForeColor`). Las propiedades también pueden establecerse mediante programación en el formulario `Property.Subproperty` (por ejemplo, `DynamicMenuStyle.ForeColor`).  
  
 Propiedades de estilo de un elemento de menú dinámico se aplican en el orden siguiente:  
  
1.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>. Si el <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> colección o <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> se define la colección, se aplica en este momento, reemplazando las demás propiedades de estilo de elemento de menú.  
  
3.  <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>. Si el <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> se define la colección, se aplica en este momento, reemplazando las demás propiedades de estilo de elemento de menú.  
  
4.  <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A> propiedad para especificar un color de fondo azul celeste claro para un menú dinámico.  
  
 [!code-aspx-csharp[MenuDynamicMenuStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicMenuStyle/CS/menudynamicmenustylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicMenuStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicMenuStyle/VB/menudynamicmenustylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicPopOutImageTextFormatString">
      <MemberSignature Language="C#" Value="public string DynamicPopOutImageTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicPopOutImageTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicPopOutImageTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicPopOutImageTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicPopOutImageTextFormatString : string with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el texto alternativo para la imagen que indica que un elemento de menú dinámico tiene un submenú.</summary>
        <value>Texto alternativo para la imagen que indica que un elemento de menú dinámico tiene un submenú. El valor predeterminado es una cadena vacía (""), lo que indica que no se ha establecido esta propiedad.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando un elemento de menú dinámico contiene un submenú, se puede mostrar una imagen para indicar que el usuario puede expandir el menú. Use el <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A> propiedad para especificar el texto alternativo para esta imagen. El texto que especifique proporciona a los dispositivos de tecnología con una descripción de la imagen que se puede usar para hacer que el control sea más accesible.  
  
 Hay dos maneras de mostrar la imagen:  
  
-   Establecer el <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> propiedad `true` para utilizar la imagen integrada (valor predeterminado).  
  
-   Establecer el <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> propiedad para especificar una imagen personalizada.  
  
> [!NOTE]
>  Esta propiedad se aplica a la imagen integrada y la imagen personalizada.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A> propiedad para especificar el texto alternativo para la imagen que se utiliza para indicar que un elemento de menú dinámico tiene un submenú. Este texto se muestra como una información sobre herramientas cuando el usuario coloca el puntero del mouse sobre la imagen.  
  
 [!code-aspx-csharp[MenuDynamicPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicPopoutImageText/CS/menudynamicpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicPopoutImageText/VB/menudynamicpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicPopOutImageUrl">
      <MemberSignature Language="C#" Value="public string DynamicPopOutImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicPopOutImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicPopOutImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicPopOutImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicPopOutImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la dirección URL de una imagen personalizada que se muestra en un elemento de menú dinámico cuando el elemento de menú dinámico tiene un submenú.</summary>
        <value>Dirección URL de una imagen que se utiliza para indicar que un elemento de menú dinámico tiene un submenú. El valor predeterminado es una cadena vacía (""), lo que indica que esta propiedad no está establecida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando un elemento de menú dinámico contiene un submenú, se puede mostrar una imagen para indicar que el usuario puede expandir el menú colocando el puntero del mouse sobre el elemento de menú. Hay dos maneras de mostrar esta imagen:  
  
-   Establecer el <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> propiedad `true` para utilizar la imagen integrada (valor predeterminado).  
  
-   Establecer el <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> propiedad para especificar una imagen personalizada.  
  
 Si el <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> propiedad está establecida, esa imagen reemplaza la imagen integrada.  
  
 Si el <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> propiedad no está establecida y el <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> propiedad está establecida en `false`, no se muestra ninguna imagen.  
  
> [!NOTE]
>  Al establecer esta propiedad, use una barra diagonal (/) en lugar de una barra diagonal inversa (\\). Si utiliza barras diagonales inversas en la ruta de acceso, no se mostrará la imagen especificada.  
  
 Puede especificar texto alternativo para la imagen estableciendo el <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> propiedad para especificar una imagen personalizada para mostrar en un elemento de menú dinámico para indicar que el elemento de menú tiene un submenú.  
  
 [!code-aspx-csharp[MenuDynamicPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicPopoutImageText/CS/menudynamicpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicPopoutImageText/VB/menudynamicpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicSelectedStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle DynamicSelectedStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle DynamicSelectedStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicSelectedStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ DynamicSelectedStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicSelectedStyle : System.Web.UI.WebControls.MenuItemStyle" Usage="System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una referencia al objeto <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> que permite establecer el aspecto del elemento de menú dinámico seleccionado por el usuario.</summary>
        <value>Referencia a <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> que representa el estilo del elemento de menú dinámico seleccionado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> propiedad para controlar la apariencia de un elemento de menú dinámico cuando el usuario lo selecciona en el menú. Esta propiedad es de solo lectura. Sin embargo, puede establecer las propiedades de la <xref:System.Web.UI.WebControls.MenuItemStyle> objeto devuelve. Las propiedades pueden establecerse mediante declaración en el formulario `Property-Subproperty`, donde `Subproperty` es una propiedad de la <xref:System.Web.UI.WebControls.MenuItemStyle> objeto (por ejemplo, `DynamicSelectedStyle-ForeColor`). Las propiedades también pueden establecerse mediante programación en el formulario `Property.Subproperty` (por ejemplo, `DynamicSelectedStyle.ForeColor`).  
  
 Propiedades de estilo de un elemento de menú dinámico se aplican en el orden siguiente:  
  
1.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>. Si el <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> colección o <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> se define la colección, se aplica en este momento, reemplazando las demás propiedades de estilo de elemento de menú.  
  
3.  <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>. Si el <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> se define la colección, se aplica en este momento, reemplazando las demás propiedades de estilo de elemento de menú.  
  
4.  <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> propiedad para especificar un color de fondo azul claro para el elemento de menú dinámico seleccionado.  
  
 [!code-aspx-csharp[MenuDynamicSelectedStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicSelectedStyle/CS/menudynamicselectedstylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicSelectedStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicSelectedStyle/VB/menudynamicselectedstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicTopSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string DynamicTopSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicTopSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicTopSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicTopSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicTopSeparatorImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la dirección URL de una imagen que se muestra en la parte superior de cada elemento de menú dinámico para separarlo de otros elementos de menú.</summary>
        <value>Dirección URL de una imagen de separación que se muestra en la parte superior de cada elemento de menú dinámico. El valor predeterminado es una cadena vacía (""), lo que indica que esta propiedad no está establecida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A> propiedad para especificar una imagen personalizada opcional que se muestra en la parte superior de cada elemento de menú dinámico. Esta imagen actúa como un separador entre elementos de menú y normalmente es una imagen de una línea.  
  
> [!NOTE]
>  También puede mostrar una imagen de separación en la parte inferior de cada elemento de menú dinámico estableciendo el <xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A> propiedad para mostrar una imagen de separación en la parte superior de cada elemento de menú dinámico.  
  
 [!code-aspx-csharp[MenuDynamicTopSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicTopSeparatorImageUrl/CS/menudynamictopseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicTopSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicTopSeparatorImageUrl/VB/menudynamictopseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="DynamicVerticalOffset">
      <MemberSignature Language="C#" Value="public int DynamicVerticalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DynamicVerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicVerticalOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DynamicVerticalOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicVerticalOffset : int with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el número de píxeles de desplazamiento vertical de un menú dinámico con respecto a su elemento de menú primario.</summary>
        <value>Número de píxeles de desplazamiento vertical de un menú dinámico con respecto a su elemento de menú primario. El valor predeterminado es 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.Menu.DynamicVerticalOffset%2A> propiedad para ajustar la posición vertical de un menú dinámico con respecto a su elemento de menú primario. Esta propiedad afecta a la posición de un menú dinámico de manera diferente dependiendo de si el <xref:System.Web.UI.WebControls.Menu> control se muestra vertical u horizontalmente (según lo especificado por el <xref:System.Web.UI.WebControls.Menu.Orientation%2A> propiedad). En la tabla siguiente se describe las diferencias.  
  
|Orientación|Descripción|  
|-----------------|-----------------|  
|Horizontal|De forma predeterminada, se muestra un menú dinámico directamente debajo de su elemento de menú primario sin ningún espaciado intermedio. Al establecer esta propiedad controla el espaciado vertical entre el menú dinámico y su elemento de menú primario.|  
|Vertical|De forma predeterminada, se muestra un elemento de menú dinámico junto a su elemento de menú primario con los bordes superiores alineados. Al establecer esta propiedad, la posición del menú dinámico desplaza verticalmente desde esta posición base.|  
  
> [!NOTE]
>  Puede establecer esta propiedad en un valor negativo para desplazar un menú dinámico en una dirección negativa. Si va a mostrar un menú horizontal, un valor negativo hace que un menú dinámico y su elemento de menú primario se superpongan.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.DynamicVerticalOffset%2A> propiedad desplazamiento de un menú dinámico hacia abajo 10 píxeles desde la parte superior de su elemento de menú primario.  
  
 [!code-aspx-csharp[MenuDynamicHorizontalOffset#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/CS/menudynamichorizontaloffsetcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicHorizontalOffset#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/VB/menudynamichorizontaloffsetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Orientation" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      </Docs>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected override void EnsureDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EnsureDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.EnsureDataBound" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EnsureDataBound ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void EnsureDataBound();" />
      <MemberSignature Language="F#" Value="override this.EnsureDataBound : unit -&gt; unit" Usage="menu.EnsureDataBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Comprueba que el control de menú requiere enlace de datos y que se especifica un control de origen de datos válido antes de llamar al método <see cref="M:System.Web.UI.WebControls.Menu.DataBind" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Este método se usa principalmente los desarrolladores de controles para extender el <xref:System.Web.UI.WebControls.Menu> control.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindItem">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItem FindItem (string valuePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.MenuItem FindItem(string valuePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.FindItem(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindItem (valuePath As String) As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::MenuItem ^ FindItem(System::String ^ valuePath);" />
      <MemberSignature Language="F#" Value="member this.FindItem : string -&gt; System.Web.UI.WebControls.MenuItem" Usage="menu.FindItem valuePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valuePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valuePath">Ruta de acceso de valores al elemento de menú que se va a recuperar.</param>
        <summary>Recupera el elemento de menú de la ruta de acceso de valores especificada.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.MenuItem" /> que representa el elemento de menú en la ruta de acceso de valores especificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.Menu.FindItem%2A> método para recuperar un <xref:System.Web.UI.WebControls.MenuItem> objeto desde el <xref:System.Web.UI.WebControls.Menu> control. Para recuperar el <xref:System.Web.UI.WebControls.MenuItem> de objeto, debe especificar una ruta de acceso de menú para el elemento de menú. La ruta de acceso de menú es una cadena de valores delimitados que forman la ruta de acceso de un elemento de menú raíz hasta el elemento de menú actual. Para determinar el carácter delimitador, utilice el <xref:System.Web.UI.WebControls.Menu.PathSeparator%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.FindItem%2A> método para recuperar un elemento de menú desde un <xref:System.Web.UI.WebControls.Menu> control en una ruta de acceso del valor especificado.  
  
 [!code-aspx-csharp[MenuPathSeparator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuPathSeparator/CS/menupathseparatorcs.aspx#1)]
 [!code-aspx-vb[MenuPathSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuPathSeparator/VB/menupathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.PathSeparator" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignModeState">
      <MemberSignature Language="C#" Value="protected override System.Collections.IDictionary GetDesignModeState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.IDictionary GetDesignModeState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.GetDesignModeState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetDesignModeState () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::IDictionary ^ GetDesignModeState();" />
      <MemberSignature Language="F#" Value="override this.GetDesignModeState : unit -&gt; System.Collections.IDictionary" Usage="menu.GetDesignModeState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera el estado en tiempo de diseño del control <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <returns>
          <see cref="T:System.Collections.IDictionary" /> que contiene el estado en tiempo de diseño del control <see cref="T:System.Web.UI.WebControls.Menu" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Menu.GetDesignModeState%2A> método es un método auxiliar que se usa para obtener el estado actual de tiempo de diseño de la <xref:System.Web.UI.WebControls.Menu> control.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="IncludeStyleBlock">
      <MemberSignature Language="C#" Value="public bool IncludeStyleBlock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeStyleBlock" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.IncludeStyleBlock" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeStyleBlock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeStyleBlock { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeStyleBlock : bool with get, set" Usage="System.Web.UI.WebControls.Menu.IncludeStyleBlock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si ASP.NET debe presentar un bloque de definiciones de hoja de estilos en cascada (CSS) para los estilos que se usan en el menú.</summary>
        <value>Valor que indica si ASP.NET debe presentar un bloque de definiciones de estilos CSS para los estilos que se usan en el menú. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Menu> control usa los estilos CSS para controlar su apariencia en un explorador. De forma predeterminada, presenta un `style` elemento que contiene las definiciones de CSS para clases CSS que utiliza. Normalmente se establece esta propiedad en `false` en las situaciones siguientes:  
  
-   Desea proporcionar sus propias definiciones CSS con el fin de personalizar la apariencia del menú. A continuación, debe proporcionar su propio bloque de definiciones CSS en la página, o incluir un vínculo a un archivo CSS externo que contiene las definiciones.  
  
-   Desea mantener el aspecto predeterminado pero prefiere mantener las definiciones CSS generadas en un archivo independiente. A continuación, debe proporcionar el archivo y el vínculo a él.  
  
 En cualquiera de estas situaciones, puede obtener una copia del bloque CSS predeterminado que el <xref:System.Web.UI.WebControls.Menu> genera estableciendo la propiedad en el control `true`, ejecución de la página y ver la página en un explorador. A continuación, puede ver el origen de la página en el explorador y copiar y pegar el bloque CSS en el marcado de página o en un archivo independiente.  
  
 Si establece esta propiedad en `false`, no se puede establecer las propiedades de estilo. Por ejemplo, no se puede agregar un `DynamicHoverStyle-ForeColor` atributo en el marcado o en conjunto la `DynamicHoverStyle.ForeColor` propiedad en el código.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As MenuItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemCollection ^ Items { System::Web::UI::WebControls::MenuItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Web.UI.WebControls.MenuItemCollection" Usage="System.Web.UI.WebControls.Menu.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un objeto <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> que contiene todos los elementos de menú del control <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> que contiene todos los elementos de menú del control <see cref="T:System.Web.UI.WebControls.Menu" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.Menu.Items%2A> propiedad (colección) para obtener un <xref:System.Web.UI.WebControls.MenuItemCollection> de objeto que contiene el menú todos los elementos en un <xref:System.Web.UI.WebControls.Menu> control. Esta colección se suele utilizar para iterar rápidamente por todos los elementos de menú, o para tener acceso a un elemento de menú concreto.  
  
 El <xref:System.Web.UI.WebControls.Menu.Items%2A> colección también puede utilizarse para administrar mediante programación los elementos de menú. Puede agregar, insertar, quitar y recuperar <xref:System.Web.UI.WebControls.MenuItem> objetos de colección. Las actualizaciones de la colección se reflejará automáticamente en el <xref:System.Web.UI.WebControls.Menu> control después de la siguiente ida y vuelta al servidor.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.Items%2A> de elementos de colección para recorrer el menú en el <xref:System.Web.UI.WebControls.Menu> control.  
  
 [!code-aspx-csharp[MenuItems#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItems/CS/menuitemscs.aspx#1)]
 [!code-aspx-vb[MenuItems#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItems/VB/menuitemsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemCollection" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName="ItemWrap">
      <MemberSignature Language="C#" Value="public bool ItemWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ItemWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ItemWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ItemWrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ItemWrap : bool with get, set" Usage="System.Web.UI.WebControls.Menu.ItemWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se debe ajustar el texto para los elementos de menú.</summary>
        <value>Es <see langword="true" /> para ajustar el texto del elemento de menú; de lo contrario, <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.Menu.ItemWrap%2A> propiedad para especificar si el ajusta el texto mostrado en cada elemento de menú. Cuando el texto se queda sin espacio, automáticamente se divide y continúa en la siguiente línea.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.ItemWrap%2A> propiedad para habilitar el ajuste de texto en el <xref:System.Web.UI.WebControls.Menu> control.  
  
 [!code-aspx-csharp[MenuItemWrap#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemWrap/CS/menuitemwrapcs.aspx#1)]
 [!code-aspx-vb[MenuItemWrap#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemWrap/VB/menuitemwrapvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Font" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ForeColor" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      </Docs>
    </Member>
    <Member MemberName="LevelMenuItemStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyleCollection LevelMenuItemStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyleCollection LevelMenuItemStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelMenuItemStyles As MenuItemStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyleCollection ^ LevelMenuItemStyles { System::Web::UI::WebControls::MenuItemStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LevelMenuItemStyles : System.Web.UI.WebControls.MenuItemStyleCollection" Usage="System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un objeto <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> que contiene la configuración de estilo que se aplica a los elementos de menú en función de su nivel en un control <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> que contiene la configuración de estilo que se aplica a los elementos de menú en función de su nivel en un control <see cref="T:System.Web.UI.WebControls.Menu" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> colección como una alternativa a las propiedades de estilo individuales (como <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>) para controlar el estilo de elementos de menú en los niveles individuales del menú. Los estilos contenidos en esta colección se aplican a los elementos de menú según su nivel de menú. El primer estilo de la colección corresponde al estilo de elementos de menú en el primer nivel del menú. El segundo estilo de la colección corresponde al estilo de elementos de menú en el segundo nivel del menú y así sucesivamente. Esta colección más a menudo se usa para generar tabla de contenido de estilo de menús de navegación donde los elementos de menú en un cierto nivel deben tener el mismo aspecto, independientemente de si tienen submenús.  
  
> [!NOTE]
>  Si se define un estilo para un determinado nivel mediante el <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> colección, esta invalida cualquier elemento de menú Configuración de estilos para los elementos de menú en ese nivel.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> colección para aplicar la configuración de estilo para los elementos de menú en un <xref:System.Web.UI.WebControls.Menu> control según su nivel.  
  
 [!code-aspx-csharp[MenuLevelMenuItemStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuLevelMenuItemStyles/CS/menulevelmenuitemstylecs.aspx#1)]
 [!code-aspx-vb[MenuLevelMenuItemStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuLevelMenuItemStyles/VB/menulevelmenuitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="LevelSelectedStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyleCollection LevelSelectedStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyleCollection LevelSelectedStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelSelectedStyles As MenuItemStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyleCollection ^ LevelSelectedStyles { System::Web::UI::WebControls::MenuItemStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LevelSelectedStyles : System.Web.UI.WebControls.MenuItemStyleCollection" Usage="System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un objeto <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> que contiene la configuración de estilo que se aplica al elemento de menú seleccionado en función de su nivel en un control <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> que contiene la configuración de estilo que se aplica al elemento de menú seleccionado en función de su nivel en un control <see cref="T:System.Web.UI.WebControls.Menu" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> colección como una alternativa a la <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> y <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> propiedades para controlar el estilo de un elemento de menú seleccionado en los niveles individuales del menú. Los estilos contenidos en esta colección se aplican a un elemento de menú seleccionado en función de su nivel de menú. El primer estilo de la colección se corresponde con el estilo de un elemento de menú seleccionado en el primer nivel del menú. El segundo estilo de la colección se corresponde con el estilo de un elemento de menú seleccionado en el segundo nivel del menú y así sucesivamente. Esta colección más a menudo se usa para generar tabla de contenido de estilo de menús de navegación donde los elementos de menú en un cierto nivel deben tener el mismo aspecto, independientemente de si tienen submenús.  
  
> [!NOTE]
>  Si se define un estilo para un determinado nivel mediante el <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> colección, esto reemplaza el <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> y <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> propiedades en ese nivel.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> colección para aplicar una configuración de estilo para el elemento de menú seleccionado en un <xref:System.Web.UI.WebControls.Menu> control según su nivel.  
  
 [!code-aspx-csharp[MenuLevelMenuItemStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuLevelMenuItemStyles/CS/menulevelmenuitemstylecs.aspx#1)]
 [!code-aspx-vb[MenuLevelMenuItemStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuLevelMenuItemStyles/VB/menulevelmenuitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="LevelSubMenuStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SubMenuStyleCollection LevelSubMenuStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.SubMenuStyleCollection LevelSubMenuStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelSubMenuStyles As SubMenuStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SubMenuStyleCollection ^ LevelSubMenuStyles { System::Web::UI::WebControls::SubMenuStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LevelSubMenuStyles : System.Web.UI.WebControls.SubMenuStyleCollection" Usage="System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SubMenuStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un objeto <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> que contiene la configuración de estilo que se aplica a los elementos de submenú en el menú estático en función de su nivel en un control <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> que contiene la configuración de estilo que se aplica a los elementos de submenú en el menú estático en función de su nivel en un control <see cref="T:System.Web.UI.WebControls.Menu" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> colección como una alternativa a las propiedades de estilo individuales (como <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>) para controlar el estilo de los elementos de submenú estáticos mostrados en el menú estático en los niveles individuales. Los estilos contenidos en esta colección se aplican a los elementos de submenú estáticos según su nivel de menú. El primer estilo de la colección se corresponde con el estilo del primer nivel de submenú estático mostrado en el menú estático. El segundo estilo de la colección se corresponde con el estilo del submenú de segundo que nivel se muestra en el menú estático y así sucesivamente. Esta colección más a menudo se usa para generar tabla de contenido de estilo de menús de navegación donde los elementos de menú en un cierto nivel deben tener el mismo aspecto, independientemente de si tienen submenús.  
  
> [!NOTE]
>  Si se define un estilo para un determinado nivel mediante el <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> colección, esta invalida cualquier elemento de submenú estático estilo configuración en ese nivel.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> colección para aplicar la configuración de estilo a los elementos de submenú mostrados en el menú estático de un <xref:System.Web.UI.WebControls.Menu> control según su nivel.  
  
 [!code-aspx-csharp[MenuLevelSubMenuStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuLevelSubMenuStyles/CS/menulevelsubmenustylescs.aspx#1)]
 [!code-aspx-vb[MenuLevelSubMenuStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuLevelSubMenuStyles/VB/menulevelsubmenustylesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="menu.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <see cref="T:System.Object" /> que representa el estado del control que se va a restaurar.</param>
        <summary>Carga el estado de las propiedades en el control <see cref="T:System.Web.UI.WebControls.Menu" /> que deban conservarse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Este método se usa principalmente los desarrolladores de controles para extender el <xref:System.Web.UI.WebControls.Menu> control.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="menu.LoadViewState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">
          <see cref="T:System.Object" /> que contiene los valores del estado de vista guardado del control.</param>
        <summary>Carga el estado de vista guardado previamente del control <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumDynamicDisplayLevels">
      <MemberSignature Language="C#" Value="public int MaximumDynamicDisplayLevels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumDynamicDisplayLevels" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumDynamicDisplayLevels As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumDynamicDisplayLevels { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumDynamicDisplayLevels : int with get, set" Usage="System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el número de niveles de menú que se van a mostrar para un menú dinámico.</summary>
        <value>Número de niveles de menú que se van a mostrar para un menú dinámico. El valor predeterminado es 3.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede mostrar varios niveles de menú en el menú estático estableciendo el <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> propiedad en un valor mayor que 1. También puede mostrar niveles adicionales en menús dinámicos estableciendo esta propiedad en un valor mayor que 0. Por ejemplo, si decide mostrar dos niveles de menú en el menú estático (estableciendo la <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> propiedad en 2) y, a continuación, establezca esta propiedad en 3, menú adicional tres niveles se muestran en menús dinámicos. Se descartan todos los niveles de menú superiores restantes (si existe).  
  
> [!NOTE]
>  Establecer esta propiedad en 0 muestra un menú plano hasta el nivel especificado por el <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> propiedad sin ningún menú dinámico.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels%2A> propiedad para limitar el número de niveles de menú para mostrar en un menú dinámico en 1. Se muestra solo el nivel de menú raíz.  
  
 [!code-aspx-csharp[MenuMaximumDynamicDisplayLevels#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuMaximumDynamicDisplayLevels/CS/menumaximumdynamicdisplaylevelscs.aspx#1)]
 [!code-aspx-vb[MenuMaximumDynamicDisplayLevels#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuMaximumDynamicDisplayLevels/VB/menumaximumdynamicdisplaylevelsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La propiedad <see cref="P:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" /> está establecida en un valor menor que cero.</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
      </Docs>
    </Member>
    <Member MemberName="MenuItemClick">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.MenuEventHandler MenuItemClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.MenuEventHandler MenuItemClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuItemClick As MenuEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::MenuEventHandler ^ MenuItemClick;" />
      <MemberSignature Language="F#" Value="member this.MenuItemClick : System.Web.UI.WebControls.MenuEventHandler " Usage="member this.MenuItemClick : System.Web.UI.WebControls.MenuEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando se hace clic en un elemento de menú de un control <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Menu.MenuItemClick> evento se desencadena cuando se hace clic en un elemento de menú en un <xref:System.Web.UI.WebControls.Menu> control. Esto le permite proporcionar un controlador de eventos que realiza una rutina personalizada, como la sincronización con otro control en la página, siempre que se produce este evento.  
  
 Un <xref:System.Web.UI.WebControls.MenuEventArgs> objeto se pasa al controlador de eventos, lo que permite tener acceso a las propiedades del elemento de menú que provocó el evento.  
  
 Para obtener más información sobre cómo controlar eventos, vea [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear un controlador de eventos para el <xref:System.Web.UI.WebControls.Menu.MenuItemClick> eventos que muestra el texto del elemento de menú seleccionado por el usuario.  
  
 [!code-aspx-csharp[MenuMenuItemClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuMenuItemClick/CS/menumenuitemclickcs.aspx#1)]
 [!code-aspx-vb[MenuMenuItemClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuMenuItemClick/VB/menumenuitemclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MenuItemClickCommandName">
      <MemberSignature Language="C#" Value="public static readonly string MenuItemClickCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string MenuItemClickCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Menu.MenuItemClickCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MenuItemClickCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ MenuItemClickCommandName;" />
      <MemberSignature Language="F#" Value=" staticval mutable MenuItemClickCommandName : string" Usage="System.Web.UI.WebControls.Menu.MenuItemClickCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contiene el nombre de comando.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este campo de solo lectura contiene el nombre del comando utilizado para tener acceso a los elementos de menú. El valor predeterminado es "Click".  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuItemDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.MenuEventHandler MenuItemDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.MenuEventHandler MenuItemDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuItemDataBound As MenuEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::MenuEventHandler ^ MenuItemDataBound;" />
      <MemberSignature Language="F#" Value="member this.MenuItemDataBound : System.Web.UI.WebControls.MenuEventHandler " Usage="member this.MenuItemDataBound : System.Web.UI.WebControls.MenuEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando se enlaza a datos un elemento de menú de un control <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Menu.MenuItemDataBound> evento se desencadena cuando un elemento de menú está enlazado a datos en un <xref:System.Web.UI.WebControls.Menu> control. Esto le permite proporcionar un controlador de eventos que realiza una rutina personalizada, como agregar contenido personalizado o modificar un elemento de menú antes de representarse, siempre que se produce este evento.  
  
 Un <xref:System.Web.UI.WebControls.MenuEventArgs> objeto se pasa al controlador de eventos, lo que permite tener acceso a las propiedades del elemento de menú que provocó el evento.  
  
 Para obtener más información sobre cómo controlar eventos, vea [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear un controlador de eventos para el <xref:System.Web.UI.WebControls.Menu.MenuItemDataBound> eventos que modifica el texto de la `Home` elemento de menú antes de que se muestre en un <xref:System.Web.UI.WebControls.Menu> control.  
  
 [!code-aspx-csharp[MenuItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemDataBound/CS/menumenuitemdataboundcs.aspx#1)]
 [!code-aspx-vb[MenuItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemDataBound/VB/menumenuitemdataboundvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBubbleEvent : obj * EventArgs -&gt; bool" Usage="menu.OnBubbleEvent (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">Origen del evento.</param>
        <param name="e">
          <see cref="T:System.EventArgs" /> que contiene datos de eventos.</param>
        <summary>Determina si el evento del control <see cref="T:System.Web.UI.WebControls.Menu" /> se pasa a la jerarquía de control del servidor de la interfaz de usuario (UI) de la página.</summary>
        <returns>Es <see langword="true" /> si se ha cancelado el evento; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro invalida <xref:System.Web.UI.Control.OnBubbleEvent%2A>.  
  
> [!NOTE]
>  Este método se usa principalmente los desarrolladores de controles para extender el <xref:System.Web.UI.WebControls.Menu> control.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDataBinding">
      <MemberSignature Language="C#" Value="protected override void OnDataBinding (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataBinding(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataBinding (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataBinding(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDataBinding : EventArgs -&gt; unit" Usage="menu.OnDataBinding e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Web.UI.WebControls.MenuEventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Web.UI.Control.DataBinding" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Control.DataBinding> evento se desencadena cuando se enlazan datos a la <xref:System.Web.UI.WebControls.Menu> control. Este método notifica al control para realizar cualquier lógica de enlace de datos que está asociado con él.  
  
 El <xref:System.Web.UI.WebControls.Menu.OnDataBinding%2A> método permite que las clases derivadas controlen el evento sin asociar un delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 Este método se utiliza generalmente los desarrolladores de controles al extender el <xref:System.Web.UI.WebControls.Menu> clase.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see cref="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="menu.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Web.UI.WebControls.MenuEventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Web.UI.Control.Init" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando este método lo indique, controles de servidor Web deben realizar los pasos de inicialización necesarias para crear y configurar una instancia. En esta fase del ciclo de vida del control de servidor, estado de vista del control aún no se rellena. Además, no se puede tener acceso a otro control de servidor cuando se llama a este método, independientemente de si es un secundario o primario de este control. Otros controles de servidor no se garantiza que se crea y se prepara para el acceso.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Web.UI.WebControls.Menu.OnInit%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see cref="M:System.Web.UI.WebControls.Menu.OnInit(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Web.UI.WebControls.Menu.OnInit(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMenuItemClick">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuItemClick (System.Web.UI.WebControls.MenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuItemClick(class System.Web.UI.WebControls.MenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMenuItemClick (e As MenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMenuItemClick(System::Web::UI::WebControls::MenuEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMenuItemClick : System.Web.UI.WebControls.MenuEventArgs -&gt; unit&#xA;override this.OnMenuItemClick : System.Web.UI.WebControls.MenuEventArgs -&gt; unit" Usage="menu.OnMenuItemClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.MenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Web.UI.WebControls.MenuEventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Menu.OnMenuItemClick%2A> llama al método el <xref:System.Web.UI.WebControls.Menu> control para generar el <xref:System.Web.UI.WebControls.Menu.MenuItemClick> eventos. Se utilizan generalmente los desarrolladores de controles al extender el <xref:System.Web.UI.WebControls.Menu> clase.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Web.UI.WebControls.Menu.OnMenuItemClick%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMenuItemDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuItemDataBound (System.Web.UI.WebControls.MenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuItemDataBound(class System.Web.UI.WebControls.MenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMenuItemDataBound (e As MenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMenuItemDataBound(System::Web::UI::WebControls::MenuEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMenuItemDataBound : System.Web.UI.WebControls.MenuEventArgs -&gt; unit&#xA;override this.OnMenuItemDataBound : System.Web.UI.WebControls.MenuEventArgs -&gt; unit" Usage="menu.OnMenuItemDataBound e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.MenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Web.UI.WebControls.MenuEventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Menu.OnMenuItemDataBound%2A> llama al método el <xref:System.Web.UI.WebControls.Menu> control para generar el <xref:System.Web.UI.WebControls.Menu.MenuItemDataBound> eventos. Se utilizan generalmente los desarrolladores de controles al extender el <xref:System.Web.UI.WebControls.Menu> clase.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Web.UI.WebControls.Menu.OnMenuItemDataBound%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="menu.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Web.UI.Control.PreRender" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Menu.OnPreRender%2A> llama al método el <xref:System.Web.UI.WebControls.Menu> control para generar el <xref:System.Web.UI.Control.PreRender> eventos. Se utilizan generalmente los desarrolladores de controles al extender el <xref:System.Web.UI.WebControls.Menu> clase.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Web.UI.WebControls.Menu.OnPreRender%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see cref="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Orientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Orientation Orientation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As Orientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Orientation Orientation { System::Web::UI::WebControls::Orientation get(); void set(System::Web::UI::WebControls::Orientation value); };" />
      <MemberSignature Language="F#" Value="member this.Orientation : System.Web.UI.WebControls.Orientation with get, set" Usage="System.Web.UI.WebControls.Menu.Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la dirección en la que se representará el control <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <value>Uno de los valores de enumeración de <see cref="T:System.Web.UI.WebControls.Orientation" />. El valor predeterminado es <see langword="Orientation.Vertical" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.Menu.Orientation%2A> propiedad para especificar la dirección en la que se va a representar el <xref:System.Web.UI.WebControls.Menu> control. En la tabla siguiente se enumera las direcciones disponibles.  
  
|Orientación|Descripción|  
|-----------------|-----------------|  
|`Orientation.Horizontal`|El <xref:System.Web.UI.WebControls.Menu> control se representa horizontalmente.|  
|`Orientation.Vertical`|El <xref:System.Web.UI.WebControls.Menu> control se representa verticalmente.|  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.Orientation%2A> propiedad para mostrar un menú horizontal.  
  
 [!code-aspx-csharp[MenuOrientation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuOrientation/CS/menuorientationcs.aspx#1)]
 [!code-aspx-vb[MenuOrientation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuOrientation/VB/menuorientationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Orientation" />
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public char PathSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PathSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PathSeparator As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PathSeparator { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PathSeparator : char with get, set" Usage="System.Web.UI.WebControls.Menu.PathSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue('/')</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el carácter utilizado para delimitar la ruta de acceso de un elemento de menú en un control <see cref="T:System.Web.UI.WebControls.Menu" /> control.</summary>
        <value>Carácter utilizado para delimitar la ruta de acceso de un elemento de menú. El valor predeterminado es una barra diagonal (/).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cada elemento de menú (representado por un <xref:System.Web.UI.WebControls.MenuItem> objeto) en el <xref:System.Web.UI.WebControls.Menu> control tiene un <xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A> propiedad que especifica la posición del elemento de menú. La ruta de acceso del valor es una cadena de valores delimitados que forman la ruta de acceso de un elemento de menú raíz hasta el elemento de menú actual. Use el <xref:System.Web.UI.WebControls.Menu.PathSeparator%2A> propiedad para especificar el carácter delimitador utilizado para separar los valores de la ruta de acceso de menú. Este valor se utiliza normalmente al analizar la lista de los valores individuales.  
  
 Según el texto mostrado en el <xref:System.Web.UI.WebControls.Menu> (control), el carácter delimitador posible que deba cambiarse para evitar cualquier conflicto. Por ejemplo, si establece el carácter delimitador en una coma, el texto mostrado no debe contener ninguna coma; en caso contrario, el <xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A> propiedad no se puede analizar con precisión.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.PathSeparator%2A> propiedad para cambiar el carácter delimitador de ruta de acceso de valor de un elemento de menú a una coma.  
  
 [!code-aspx-csharp[MenuPathSeparator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuPathSeparator/CS/menupathseparatorcs.aspx#1)]
 [!code-aspx-vb[MenuPathSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuPathSeparator/VB/menupathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ValuePath" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.FindItem(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.PerformDataBinding" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding();" />
      <MemberSignature Language="F#" Value="override this.PerformDataBinding : unit -&gt; unit" Usage="menu.PerformDataBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enlaza los elementos del origen de datos con los elementos de menú del control <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Menu.PerformDataBinding%2A> método es un método auxiliar llamado por el <xref:System.Web.UI.WebControls.Menu> control para enlazar los elementos del origen de datos para el <xref:System.Web.UI.WebControls.Menu> control.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected internal virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="menu.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">
          <see cref="T:System.String" /> que representa el argumento de evento que se pasa al controlador de eventos.</param>
        <summary>Procesa un evento que se genera cuando un formulario se envía al servidor.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menu.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> que representa el flujo de salida utilizado para escribir contenido en una página web.</param>
        <summary>Representa el control de menú en el explorador cliente.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderBeginTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderBeginTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderBeginTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menu.RenderBeginTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> que contiene métodos para compilar y representar la salida específica del dispositivo.</param>
        <summary>Agrega atributos de etiqueta y escribe el marcado para la etiqueta de apertura del control en el flujo de salida enviado al explorador o dispositivo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Menu.RenderBeginTag%2A> método agrega los atributos de etiqueta y escribe el marcado para la etiqueta de apertura del control en el flujo de salida que se envían a la secuencia de respuesta para el explorador del cliente.  
  
 Invalidar <xref:System.Web.UI.WebControls.Menu.RenderBeginTag%2A> cuando desee implementar un comportamiento personalizado, por ejemplo, para escribir varias etiquetas en la secuencia de respuesta antes de cualquier contenido del control, como `<table><tr><td>`. Este método invalida el <xref:System.Web.UI.WebControls.Menu.RenderBeginTag%2A> método para agregar el <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> propiedad.  
  
> [!NOTE]
>  Este método se usa principalmente los desarrolladores de controles para extender el <xref:System.Web.UI.WebControls.Menu> control.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menu.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> que contiene métodos para compilar y representar la salida específica del dispositivo.</param>
        <summary>Este miembro invalida <see cref="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Invalidar el <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> método para representar el contenido del control entre las etiquetas inicial y final. La implementación predeterminada de este método procesa los controles secundarios.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menu.RenderEndTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> que contiene métodos para compilar y representar la salida específica del dispositivo.</param>
        <summary>Realiza el marcado final y escribe la etiqueta HTML de cierre del control en el flujo de salida enviado al explorador o dispositivo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método invalida <xref:System.Web.UI.WebControls.WebControl.RenderEndTag%2A?displayProperty=nameWithType> para representar <xref:System.Web.UI.WebControls.Menu> submenús y <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> propiedad.  
  
> [!NOTE]
>  Este método se usa principalmente los desarrolladores de controles para extender el <xref:System.Web.UI.WebControls.Menu> control.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderingMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuRenderingMode RenderingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.MenuRenderingMode RenderingMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.RenderingMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderingMode As MenuRenderingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuRenderingMode RenderingMode { System::Web::UI::WebControls::MenuRenderingMode get(); void set(System::Web::UI::WebControls::MenuRenderingMode value); };" />
      <MemberSignature Language="F#" Value="member this.RenderingMode : System.Web.UI.WebControls.MenuRenderingMode with get, set" Usage="System.Web.UI.WebControls.Menu.RenderingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuRenderingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que especifica si el control <see cref="T:System.Web.UI.WebControls.Menu" /> representa elementos <see langword="table" /> HTML y estilos en línea, o bien elementos <see langword="listitem" /> y estilos de hojas de estilos en cascada (CSS).</summary>
        <value>Valor que especifica si el control <see cref="T:System.Web.UI.WebControls.Menu" /> representa elementos <see langword="table" /> HTML y estilos en línea, o bien elementos <see langword="listitem" /> y estilos de hojas de estilos en cascada (CSS). El valor predeterminado es <see cref="F:System.Web.UI.WebControls.MenuRenderingMode.Default" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la <xref:System.Web.UI.WebControls.Menu.RenderingMode%2A> propiedad determina cómo representa el control de menú marcado para el <xref:System.Web.UI.WebControls.Menu> control.  
  
 En ASP.NET 3.5 y versiones anteriores, el <xref:System.Web.UI.WebControls.Menu> control utiliza HTML `table` elementos y estilos alineados para especificar la apariencia del menú en un explorador. En ASP.NET 4 y versiones posteriores, de forma predeterminada el <xref:System.Web.UI.WebControls.Menu> control utiliza HTML `listitem` elementos y estilos en cascada de hojas de estilos (CSS).  
  
 Si no establece esta propiedad, el <xref:System.Web.UI.WebControls.Menu> control representa el marcado que se ajuste a la versión de ASP.NET que se indica mediante el <xref:System.Web.UI.Control.RenderingCompatibility%2A?displayProperty=nameWithType> propiedad. El <xref:System.Web.UI.WebControls.Menu> control usa las siguientes reglas:  
  
-   Si el valor de la <xref:System.Web.UI.Control.RenderingCompatibility%2A> propiedad es `3.5`, <xref:System.Web.UI.WebControls.Menu> control utiliza HTML `table` elementos y estilos alineados.  
  
-   Si el valor de la <xref:System.Web.UI.Control.RenderingCompatibility%2A> propiedad es `4.0` o superior, el <xref:System.Web.UI.WebControls.Menu> control utiliza HTML `listitem` elementos y los estilos CSS.  
  
 Esta propiedad se proporciona por compatibilidad con versiones anteriores. Si el <xref:System.Web.UI.Control.RenderingCompatibility%2A> propiedad indica que desea que los controles para generar HTML que es compatible con ASP.NET 4 o posterior, pero desea que el <xref:System.Web.UI.WebControls.Menu> de control para que sea una excepción que se usa el comportamiento anterior, puede establecer esta propiedad en <xref:System.Web.UI.WebControls.MenuRenderingMode.Table>. Por ejemplo, si tiene una página Web que muestra el texto de derecha a izquierda es posible que desee establecer esta propiedad en <xref:System.Web.UI.WebControls.MenuRenderingMode.Table> porque algunos exploradores no muestran el <xref:System.Web.UI.WebControls.MenuRenderingMode.List> marcado modo correctamente para el texto de derecha a izquierda.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="menu.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Guarda el estado de las propiedades en el control <see cref="T:System.Web.UI.WebControls.Menu" /> que deban conservarse.</summary>
        <returns>Objeto que contiene los datos de estado para el control. Si no se han producido cambios en el estado, este método devuelve <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se utiliza para guardar el estado de las propiedades de la <xref:System.Web.UI.WebControls.Menu> control que deben conservarse, incluso cuando el <xref:System.Web.UI.Control.EnableViewState%2A> propiedad está establecida en `false`. El <xref:System.Web.UI.WebControls.Menu.SaveControlState%2A> método se ocupa de los datos de estado que son esencial para la operación de un control (por ejemplo, un índice o una palabra clave) y es independiente de los datos de estado de vista del control.  
  
> [!NOTE]
>  Este método se usa principalmente los desarrolladores de controles para extender el <xref:System.Web.UI.WebControls.Menu> control.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="menu.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Guarda el estado del control <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <returns>
          <see cref="T:System.Object" /> que contiene el estado del control <see cref="T:System.Web.UI.WebControls.Menu" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollDownImageUrl">
      <MemberSignature Language="C#" Value="public string ScrollDownImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollDownImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollDownImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollDownImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollDownImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la dirección URL de una imagen que aparece en un menú dinámico para indicar que el usuario se puede desplazar hacia abajo para ver elementos de menú adicionales.</summary>
        <value>Dirección URL de una imagen que aparece en un menú dinámico para indicar que el usuario se puede desplazar hacia abajo para ver elementos de menú adicionales. El valor predeterminado es una cadena vacía (""), lo que indica que esta propiedad no está establecida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad no se admite en el modo de representación .NET 4.0. Si esta propiedad es necesaria, puede establecer el menú en el modo de representación de .NET 3.5 agregando lo siguiente en el código de la página:  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 Use el <xref:System.Web.UI.WebControls.Menu.ScrollDownImageUrl%2A> propiedad para especificar una imagen personalizada que se muestra en la parte inferior de cada menú dinámico para indicar que el usuario puede desplazar hacia abajo para elementos de menú adicionales.  
  
> [!NOTE]
>  Si esta propiedad no se establece, interno, se utiliza la imagen predeterminada.  
  
 Puede especificar texto alternativo para la imagen estableciendo el <xref:System.Web.UI.WebControls.Menu.ScrollDownText%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.ScrollDownImageUrl%2A> propiedad para mostrar una imagen personalizada que indica que el usuario puede desplazar hacia abajo en un menú dinámico para elementos de menú adicionales.  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      </Docs>
    </Member>
    <Member MemberName="ScrollDownText">
      <MemberSignature Language="C#" Value="public string ScrollDownText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollDownText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollDownText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollDownText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollDownText : string with get, set" Usage="System.Web.UI.WebControls.Menu.ScrollDownText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el texto alternativo de la imagen especificada en la propiedad <see cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />.</summary>
        <value>Texto alternativo de la imagen especificada en la propiedad <see cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />. El valor predeterminado es una cadena vacía (""), lo que indica que no se ha establecido esta propiedad.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad no se admite en el modo de representación .NET 4.0. Si esta propiedad es necesaria, puede establecer el menú en el modo de representación de .NET 3.5 agregando lo siguiente en el código de la página:  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 Cuando un elemento de menú dinámico contiene elementos adicionales en la parte inferior del menú, se muestra una imagen para indicar que el usuario puede desplazar hacia abajo para ver los elementos de menú adicionales. Use el <xref:System.Web.UI.WebControls.Menu.ScrollDownText%2A> propiedad para especificar el texto alternativo para esta imagen. El texto que especifique proporciona a los dispositivos de tecnología con una descripción de la imagen que se puede usar para hacer que el control sea más accesible.  
  
 El valor de esta propiedad, cuando se establece, se pueden guardar automáticamente en un archivo de recursos utilizando una herramienta de diseñador. Para obtener más información, consulte <xref:System.ComponentModel.LocalizableAttribute> y [globalización y localización](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.ScrollDownText%2A> propiedad para especificar el texto alternativo para la imagen que se utiliza para indicar que el usuario puede desplazar hacia abajo en un menú dinámico para elementos de menú adicionales.  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      </Docs>
    </Member>
    <Member MemberName="ScrollUpImageUrl">
      <MemberSignature Language="C#" Value="public string ScrollUpImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollUpImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollUpImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollUpImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollUpImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la dirección URL de una imagen que aparece en un menú dinámico para indicar que el usuario se puede desplazar hacia arriba para ver elementos de menú adicionales.</summary>
        <value>Dirección URL de una imagen que aparece en un menú dinámico para indicar que el usuario se puede desplazar hacia arriba para ver elementos de menú adicionales. El valor predeterminado es una cadena vacía (""), lo que indica que esta propiedad no está establecida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad no se admite en el modo de representación .NET 4.0. Si esta propiedad es necesaria, puede establecer el menú en el modo de representación de .NET 3.5 agregando lo siguiente en el código de la página:  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 Use el <xref:System.Web.UI.WebControls.Menu.ScrollUpImageUrl%2A> propiedad para especificar una imagen personalizada que se muestra en la parte superior de cada menú dinámico para indicar que el usuario puede desplazar hacia arriba para elementos de menú adicionales.  
  
> [!NOTE]
>  Si esta propiedad no se establece, interno, se utiliza la imagen predeterminada.  
  
 Puede especificar texto alternativo para la imagen estableciendo el <xref:System.Web.UI.WebControls.Menu.ScrollUpText%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.ScrollUpImageUrl%2A> propiedad para mostrar una imagen personalizada que indica que el usuario puede desplazarse hacia arriba en un menú dinámico para elementos de menú adicionales.  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      </Docs>
    </Member>
    <Member MemberName="ScrollUpText">
      <MemberSignature Language="C#" Value="public string ScrollUpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollUpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollUpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollUpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollUpText : string with get, set" Usage="System.Web.UI.WebControls.Menu.ScrollUpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el texto alternativo de la imagen especificada en la propiedad <see cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />.</summary>
        <value>Texto alternativo de la imagen especificada en la propiedad <see cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />. El valor predeterminado es una cadena vacía (""), lo que indica que no se ha establecido esta propiedad.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad no se admite en el modo de representación .NET 4.0. Si esta propiedad es necesaria, puede establecer el menú en el modo de representación de .NET 3.5 agregando lo siguiente en el código de la página:  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 Cuando un elemento de menú dinámico contiene elementos adicionales en la parte superior del menú, se muestra una imagen para indicar que el usuario puede desplazarse hasta ver los elementos de menú adicionales. Use el <xref:System.Web.UI.WebControls.Menu.ScrollUpText%2A> propiedad para especificar el texto alternativo para esta imagen. El texto que especifique proporciona a los dispositivos de tecnología con una descripción de la imagen que se puede usar para hacer que el control sea más accesible.  
  
 El valor de esta propiedad, cuando se establece, se pueden guardar automáticamente en un archivo de recursos utilizando una herramienta de diseñador. Para obtener más información, consulte <xref:System.ComponentModel.LocalizableAttribute> y [globalización y localización](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.ScrollUpText%2A> propiedad para especificar el texto alternativo para la imagen que se utiliza para indicar que el usuario puede desplazarse hacia arriba en un menú dinámico para elementos de menú adicionales.  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItem SelectedItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItem SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.SelectedItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedItem As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItem ^ SelectedItem { System::Web::UI::WebControls::MenuItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItem : System.Web.UI.WebControls.MenuItem" Usage="System.Web.UI.WebControls.Menu.SelectedItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el elemento de menú seleccionado.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.MenuItem" />que representa el elemento de menú seleccionado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.Menu.SelectedItem%2A> propiedad para determinar el elemento de menú seleccionado por el usuario.  
  
> [!NOTE]
>  Como método abreviado, también puede determinar el texto del elemento de menú seleccionado directamente mediante el <xref:System.Web.UI.WebControls.Menu.SelectedValue%2A> propiedad.  
  
 Cuando el usuario selecciona un elemento de menú desde un <xref:System.Web.UI.WebControls.Menu> (control), el <xref:System.Web.UI.WebControls.Menu.MenuItemClick> se genera el evento, lo que permite ejecutar una rutina personalizada proporcionando un controlador de eventos.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.SelectedItem%2A> propiedad para determinar el elemento de menú seleccionado en un <xref:System.Web.UI.WebControls.Menu> control.  
  
 [!code-aspx-csharp[MenuSelectedItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSelectedItem/CS/menuselecteditemcs.aspx#1)]
 [!code-aspx-vb[MenuSelectedItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSelectedItem/VB/menuselecteditemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.SelectedValue" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public string SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedValue { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValue : string" Usage="System.Web.UI.WebControls.Menu.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor del elemento de menú seleccionado.</summary>
        <value>Valor del elemento de menú seleccionado. El valor predeterminado es <see cref="F:System.String.Empty" />, que indica que actualmente no se ha seleccionado ningún elemento de menú.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.Menu.SelectedValue%2A> propiedad como un acceso directo para determinar el texto del elemento de menú seleccionado. Para obtener acceso a las demás propiedades del elemento de menú seleccionado, utilice el <xref:System.Web.UI.WebControls.Menu.SelectedItem%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.SelectedValue%2A> propiedad para determinar el texto del elemento de menú seleccionado en un <xref:System.Web.UI.WebControls.Menu> control.  
  
 [!code-aspx-csharp[MenuSelectedItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSelectedItem/CS/menuselecteditemcs.aspx#1)]
 [!code-aspx-vb[MenuSelectedItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSelectedItem/VB/menuselecteditemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.SelectedItem" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
      </Docs>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected override void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetDesignModeState(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetDesignModeState (data As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetDesignModeState(System::Collections::IDictionary ^ data);" />
      <MemberSignature Language="F#" Value="override this.SetDesignModeState : System.Collections.IDictionary -&gt; unit" Usage="menu.SetDesignModeState data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data">
          <see cref="T:System.Collections.IDictionary" /> que contiene datos de estado para mostrar el control.</param>
        <summary>Establece datos en tiempo de ejecución para el control <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método invalida <xref:System.Web.UI.Control.SetDesignModeState%2A>.  
  
> [!NOTE]
>  Este método se usa principalmente los desarrolladores de controles para extender el <xref:System.Web.UI.WebControls.Menu> control.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemDataBound">
      <MemberSignature Language="C#" Value="protected void SetItemDataBound (System.Web.UI.WebControls.MenuItem node, bool dataBound);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetItemDataBound(class System.Web.UI.WebControls.MenuItem node, bool dataBound) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetItemDataBound(System.Web.UI.WebControls.MenuItem,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetItemDataBound (node As MenuItem, dataBound As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetItemDataBound(System::Web::UI::WebControls::MenuItem ^ node, bool dataBound);" />
      <MemberSignature Language="F#" Value="member this.SetItemDataBound : System.Web.UI.WebControls.MenuItem * bool -&gt; unit" Usage="menu.SetItemDataBound (node, dataBound)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="dataBound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="node">Objeto <see cref="T:System.Web.UI.WebControls.MenuItem" /> que se va a establecer.</param>
        <param name="dataBound">Es <see langword="true" /> para establecer el nodo como enlazado a datos; de lo contrario, es <see langword="false" />.</param>
        <summary>Establece la propiedad <see cref="P:System.Web.UI.WebControls.MenuItem.DataBound" /> del objeto <see cref="T:System.Web.UI.WebControls.MenuItem" /> especificado con el valor especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Menu.SetItemDataBound%2A> método es un método auxiliar utilizado por clases derivadas para establecer el <xref:System.Web.UI.WebControls.MenuItem.DataBound%2A> propiedad del elemento especificado <xref:System.Web.UI.WebControls.MenuItem> objeto.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataItem(System.Web.UI.WebControls.MenuItem,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetItemDataItem">
      <MemberSignature Language="C#" Value="protected void SetItemDataItem (System.Web.UI.WebControls.MenuItem node, object dataItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetItemDataItem(class System.Web.UI.WebControls.MenuItem node, object dataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetItemDataItem(System.Web.UI.WebControls.MenuItem,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetItemDataItem (node As MenuItem, dataItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetItemDataItem(System::Web::UI::WebControls::MenuItem ^ node, System::Object ^ dataItem);" />
      <MemberSignature Language="F#" Value="member this.SetItemDataItem : System.Web.UI.WebControls.MenuItem * obj -&gt; unit" Usage="menu.SetItemDataItem (node, dataItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="dataItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node">Objeto <see cref="T:System.Web.UI.WebControls.MenuItem" /> que se va a establecer.</param>
        <param name="dataItem">Elemento de datos de <see cref="T:System.Web.UI.WebControls.MenuItem" />.</param>
        <summary>Establece la propiedad <see cref="P:System.Web.UI.WebControls.MenuItem.DataItem" /> del objeto <see cref="T:System.Web.UI.WebControls.MenuItem" /> especificado con el valor especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Menu.SetItemDataItem%2A> método es un método auxiliar utilizado por clases derivadas para establecer el <xref:System.Web.UI.WebControls.MenuItem.DataItem%2A> propiedad del elemento especificado <xref:System.Web.UI.WebControls.MenuItem> objeto.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataBound(System.Web.UI.WebControls.MenuItem,System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetItemDataPath">
      <MemberSignature Language="C#" Value="protected void SetItemDataPath (System.Web.UI.WebControls.MenuItem node, string dataPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetItemDataPath(class System.Web.UI.WebControls.MenuItem node, string dataPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetItemDataPath (node As MenuItem, dataPath As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetItemDataPath(System::Web::UI::WebControls::MenuItem ^ node, System::String ^ dataPath);" />
      <MemberSignature Language="F#" Value="member this.SetItemDataPath : System.Web.UI.WebControls.MenuItem * string -&gt; unit" Usage="menu.SetItemDataPath (node, dataPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="dataPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">Objeto <see cref="T:System.Web.UI.WebControls.MenuItem" /> que se va a establecer.</param>
        <param name="dataPath">Ruta de acceso a datos de <see cref="T:System.Web.UI.WebControls.MenuItem" />.</param>
        <summary>Establece la propiedad <see cref="P:System.Web.UI.WebControls.MenuItem.DataPath" /> del objeto <see cref="T:System.Web.UI.WebControls.MenuItem" /> especificado con el valor especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Menu.SetItemDataPath%2A> método es un método auxiliar utilizado por clases derivadas para establecer el <xref:System.Web.UI.WebControls.MenuItem.DataPath%2A> propiedad del elemento especificado <xref:System.Web.UI.WebControls.MenuItem> objeto.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataItem(System.Web.UI.WebControls.MenuItem,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SkipLinkText">
      <MemberSignature Language="C#" Value="public string SkipLinkText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkipLinkText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.SkipLinkText" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipLinkText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SkipLinkText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkipLinkText : string with get, set" Usage="System.Web.UI.WebControls.Menu.SkipLinkText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el texto alternativo de una imagen oculta que puede ser leído por lectores de pantalla apropiados y que proporciona la capacidad de omitir la lista de vínculos.</summary>
        <value>Texto alternativo de una imagen oculta que puede ser leído por lectores de pantalla apropiados y que proporciona la capacidad de omitir la lista de vínculos El valor predeterminado es una cadena vacía (""), lo que indica que no se ha establecido esta propiedad.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> propiedad para especificar el texto alternativo de una imagen oculta leído por lectores de pantalla que proporcionan la capacidad de omitir la lista de vínculos. El texto que especifique proporciona a los dispositivos de tecnología con una descripción de ocultar omitir la imagen del vínculo que se puede usar para hacer que el control sea más accesible.  
  
 El valor de esta propiedad, cuando se establece, se pueden guardar automáticamente en un archivo de recursos utilizando una herramienta de diseñador. Para obtener más información, consulte <xref:System.ComponentModel.LocalizableAttribute> y [globalización y localización](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
 El <xref:System.Web.UI.WebControls.Menu> control proporciona el <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> propiedad como una manera para todo el control que se omitan los lectores de pantalla. Si el <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> propiedad está establecida, se representa una imagen invisible con texto alternativo, dando al usuario la opción de saltar al final del control. Los lectores de pantalla en voz alta el texto alternativo de lectura y la imagen ocupa espacio de un solo píxel. Para un control preciso de los píxeles a través de la representación de la página, establezca el <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> propiedad en una cadena vacía ("") y proporcionar su propio mecanismo para omitir el menú. El <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> propiedad se establece en una cadena vacía de forma predeterminada.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> propiedad para especificar el texto alternativo de una imagen oculta leído por lectores de pantalla que proporcionan la capacidad de omitir la lista de vínculos.  
  
 [!code-aspx-csharp[MenuSkipLinkText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSkipLinkText/CS/menuskiplinktextcs.aspx#1)]
 [!code-aspx-vb[MenuSkipLinkText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSkipLinkText/VB/menuskiplinktextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticBottomSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string StaticBottomSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticBottomSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticBottomSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticBottomSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticBottomSeparatorImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la dirección URL de una imagen que se muestra como separador en la parte inferior de cada elemento de menú estático.</summary>
        <value>Dirección URL de una imagen que se muestra como separador en la parte inferior de cada elemento de menú estático. El valor predeterminado es una cadena vacía (""), lo que indica que esta propiedad no está establecida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A> propiedad para especificar una imagen personalizada que se muestra en la parte inferior de cada menú estático de elemento que actúa como un separador entre elementos de menú.  
  
> [!NOTE]
>  Como alternativa, también puede mostrar una imagen de separación en la parte superior de cada elemento de menú estático estableciendo el <xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A> propiedad para especificar una imagen de separador que se muestra en la parte inferior de cada elemento de menú estático.  
  
 [!code-aspx-csharp[MenuStaticBottomSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticBottomSeparatorImageUrl/CS/menustaticbottomseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuStaticBottomSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticBottomSeparatorImageUrl/VB/menustaticbottomseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="StaticDisplayLevels">
      <MemberSignature Language="C#" Value="public int StaticDisplayLevels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StaticDisplayLevels" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticDisplayLevels As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StaticDisplayLevels { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.StaticDisplayLevels : int with get, set" Usage="System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el número de niveles de menú que se van a mostrar en un menú estático.</summary>
        <value>Número de niveles de menú que se van a mostrar en un menú estático. El valor predeterminado es 1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> propiedad para especificar el número de niveles de menú que se muestran en un menú estático. Se muestran todos los niveles de menú inferior al valor especificado en un menú dinámico. También puede limitar el número de niveles de menú que se muestran en un menú dinámico estableciendo el <xref:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> propiedad para mostrar los primeros niveles de dos menú en el menú estático.  
  
 [!code-aspx-csharp[MenuStaticDisplayLevels#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticDisplayLevels/CS/menustaticdisplaylevelscs.aspx#1)]
 [!code-aspx-vb[MenuStaticDisplayLevels#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticDisplayLevels/VB/menustaticdisplaylevelsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El valor especificado es menor que 1.</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" />
      </Docs>
    </Member>
    <Member MemberName="StaticEnableDefaultPopOutImage">
      <MemberSignature Language="C#" Value="public bool StaticEnableDefaultPopOutImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StaticEnableDefaultPopOutImage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticEnableDefaultPopOutImage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StaticEnableDefaultPopOutImage { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StaticEnableDefaultPopOutImage : bool with get, set" Usage="System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que especifica si la imagen integrada se muestra para indicar que un elemento de menú estático tiene un submenú.</summary>
        <value>Es <see langword="true" /> si se va a mostrar la imagen integrada para los elementos de menú estáticos con submenús; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando un elemento de menú estático contiene un submenú, se puede mostrar una imagen para indicar que el usuario puede expandir el menú. Hay dos maneras de mostrar esta imagen:  
  
-   Establecer el <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> propiedad `true` para utilizar la imagen integrada (valor predeterminado).  
  
-   Establecer el <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> propiedad para especificar una imagen personalizada.  
  
 Si el <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> propiedad está establecida, esa imagen reemplaza la imagen integrada, independientemente del valor de la <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> propiedad.  
  
> [!NOTE]
>  Si el <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> propiedad no está establecida y el <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> propiedad está establecida en `false`, no se muestra ninguna imagen.  
  
 Puede especificar texto alternativo para la imagen estableciendo el <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> propiedad para ocultar la imagen que indica que un elemento de menú estático tiene un submenú. El <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> propiedad debe establecerse en una cadena vacía ("") para ocultar la imagen.  
  
 [!code-aspx-csharp[MenuStaticEnableDefaultPopOutImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticEnableDefaultPopOutImage/CS/menustaticenabledefaultpopoutimagecs.aspx#1)]
 [!code-aspx-vb[MenuStaticEnableDefaultPopOutImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticEnableDefaultPopOutImage/VB/menustaticenabledefaultpopoutimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticHoverStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style StaticHoverStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style StaticHoverStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticHoverStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ StaticHoverStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticHoverStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.Menu.StaticHoverStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una referencia al objeto <see cref="T:System.Web.UI.WebControls.Style" /> que permite establecer el aspecto de un elemento de menú estático cuando se sitúa encima el puntero del mouse.</summary>
        <value>Referencia a <see cref="T:System.Web.UI.WebControls.Style" /> que representa el estilo de un elemento de menú estático cuando se sitúa encima el puntero del mouse.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A> propiedad para controlar la apariencia de un elemento de menú estático cuando el puntero del mouse se sitúa sobre él. Esta propiedad es de solo lectura. Sin embargo, puede establecer las propiedades de la <xref:System.Web.UI.WebControls.Style> objeto devuelve. Las propiedades pueden establecerse mediante declaración en el formulario `Property-Subproperty`, donde `Subproperty` es una propiedad de la <xref:System.Web.UI.WebControls.Style> objeto (por ejemplo, `StaticHoverStyle-ForeColor`). Las propiedades también pueden establecerse mediante programación en el formulario `Property.Subproperty` (por ejemplo, `StaticHoverStyle.ForeColor`).  
  
 Propiedades de estilo de un elemento de menú estático se aplican en el orden siguiente:  
  
1.  <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>. Si el <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> colección o <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> se define la colección, se aplica en este momento, reemplazando las demás propiedades de estilo de elemento de menú.  
  
3.  <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>. Si el <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> se define la colección, se aplica en este momento, reemplazando las demás propiedades de estilo de elemento de menú.  
  
4.  <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A> propiedad para cambiar el color de fondo de un elemento de menú estático a azul celeste claro cuando el usuario coloca el puntero del mouse sobre él.  
  
 [!code-aspx-csharp[MenuStaticHoverStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticHoverStyle/CS/menustatichoverstylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticHoverStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticHoverStyle/VB/menustatichoverstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticItemFormatString">
      <MemberSignature Language="C#" Value="public string StaticItemFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticItemFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticItemFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticItemFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticItemFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticItemFormatString : string with get, set" Usage="System.Web.UI.WebControls.Menu.StaticItemFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece texto adicional que aparece con todos los elementos de menú que se muestran estáticamente.</summary>
        <value>Texto o caracteres adicionales que aparecen con todos los elementos de menú. El valor predeterminado para esta propiedad es "{0}."</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad se puede usar para insertar texto para dar formato a los elementos de menú estático en un menú. Esto es especialmente útil para dispositivos móviles. El <xref:System.Web.UI.WebControls.Menu> control admite plantillas para mostrar los elementos de menú estáticos y dinámicos, pero las plantillas se omiten en los dispositivos móviles. Esta propiedad permite agregar caracteres o texto y para aplicar formato a los elementos de menú para dispositivos móviles y de escritorio sin utilizar una plantilla.  
  
> [!NOTE]
>  Para lograr un formato coherente cuando se usa esta propiedad, también debe establecer el <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> propiedad si desea que el formato que debe ser idéntica entre los elementos de menú estático y dinámico.  
  
 Si se aplican el formato de plantilla y de esta propiedad, el formato de plantilla se omite para los dispositivos móviles.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.StaticItemFormatString%2A> y <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> propiedades para agregar texto a cada elemento de menú.  
  
 [!code-aspx-csharp[MenuItemFormatString#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemFormatString/CS/menuitemformatstringcs.aspx#1)]
 [!code-aspx-vb[MenuItemFormatString#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemFormatString/VB/menuitemformatstringvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticItemTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate StaticItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate StaticItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ITemplate ^ StaticItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.Menu.StaticItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.MenuItemTemplateContainer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la plantilla que contiene el contenido personalizado que se va a representar para un menú estático.</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> que contiene el contenido personalizado de un menú estático. El valor predeterminado es null, lo que indica que no se ha establecido esta propiedad.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En lugar de usar la representación integrada para un menú estático, puede definir su propia interfaz de usuario (UI) para un elemento de menú estático mediante el uso de la <xref:System.Web.UI.WebControls.Menu.StaticItemTemplate%2A> propiedad. Para especificar una plantilla personalizada para un elemento de menú estático, ponga primero `<StaticTemplate>` etiquetas entre las etiquetas apertura y cierre de la <xref:System.Web.UI.WebControls.Menu> control. A continuación, puede enumerar el contenido de la plantilla entre la apertura y cierre `<StaticTemplate>` etiquetas. Además, puede controlar el estilo de un menú estático mediante la <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A> propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaticMenuItemStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle StaticMenuItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle StaticMenuItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticMenuItemStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ StaticMenuItemStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticMenuItemStyle : System.Web.UI.WebControls.MenuItemStyle" Usage="System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una referencia al objeto <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> que permite establecer el aspecto de los elementos de menú en un menú estático.</summary>
        <value>Referencia a <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> que representa el estilo de los elementos de menú en un menú estático.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A> propiedad para controlar la apariencia de los elementos de menú en un menú estático. Esta propiedad es de solo lectura. Sin embargo, puede establecer las propiedades de la <xref:System.Web.UI.WebControls.MenuItemStyle> objeto devuelve. Las propiedades pueden establecerse mediante declaración en el formulario `Property-Subproperty`, donde `Subproperty` es una propiedad de la <xref:System.Web.UI.WebControls.MenuItemStyle> objeto (por ejemplo, `StaticMenuItemStyle-ForeColor`). Las propiedades también pueden establecerse mediante programación en el formulario `Property.Subproperty` (por ejemplo, `StaticMenuItemStyle.ForeColor`).  
  
 Propiedades de estilo de un elemento de menú estático se aplican en el orden siguiente:  
  
1.  <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>. Si el <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> colección o <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> se define la colección, se aplica en este momento, reemplazando las demás propiedades de estilo de elemento de menú.  
  
3.  <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>. Si el <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> se define la colección, se aplica en este momento, reemplazando las demás propiedades de estilo de elemento de menú.  
  
4.  <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A> propiedad para especificar un color de fondo azul celeste claro para los elementos de menú en un menú estático.  
  
 [!code-aspx-csharp[MenuStaticMenuItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticMenuItemStyle/CS/menustaticmenuitemstylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticMenuItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticMenuItemStyle/VB/menustaticmenuitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticMenuStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SubMenuStyle StaticMenuStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.SubMenuStyle StaticMenuStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticMenuStyle As SubMenuStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SubMenuStyle ^ StaticMenuStyle { System::Web::UI::WebControls::SubMenuStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticMenuStyle : System.Web.UI.WebControls.SubMenuStyle" Usage="System.Web.UI.WebControls.Menu.StaticMenuStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SubMenuStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una referencia al objeto <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> que permite establecer el aspecto de un menú estático.</summary>
        <value>Referencia a <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> que representa el estilo de un menú estático.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A> propiedad para controlar la apariencia de un menú estático. Esta propiedad es de solo lectura. Sin embargo, puede establecer las propiedades de la <xref:System.Web.UI.WebControls.MenuItemStyle> objeto devuelve. Las propiedades pueden establecerse mediante declaración en el formulario `Property-Subproperty`, donde `Subproperty` es una propiedad de la <xref:System.Web.UI.WebControls.MenuItemStyle> objeto (por ejemplo, `StaticMenuStyle-ForeColor`). Las propiedades también pueden establecerse mediante programación en el formulario `Property.Subproperty` (por ejemplo, `StaticMenuStyle.ForeColor`).  
  
 Propiedades de estilo de un elemento de menú estático se aplican en el orden siguiente:  
  
1.  <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>. Si el <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> colección o <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> se define la colección, se aplica en este momento, reemplazando las demás propiedades de estilo de elemento de menú.  
  
3.  <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>. Si el <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> se define la colección, se aplica en este momento, reemplazando las demás propiedades de estilo de elemento de menú.  
  
4.  <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A> propiedad para especificar un color de fondo azul celeste claro para todo el menú estático.  
  
 [!code-aspx-csharp[MenuStaticMenuStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticMenuStyle/CS/menustaticmenustylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticMenuStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticMenuStyle/VB/menustaticmenustylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticPopOutImageTextFormatString">
      <MemberSignature Language="C#" Value="public string StaticPopOutImageTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticPopOutImageTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticPopOutImageTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticPopOutImageTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticPopOutImageTextFormatString : string with get, set" Usage="System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el texto alternativo para la imagen emergente que indica que un elemento de menú estático tiene un submenú.</summary>
        <value>Texto alternativo para la imagen emergente. El valor predeterminado es una cadena vacía (""), lo que indica que no se ha establecido esta propiedad.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando un elemento de menú estático contiene un submenú, se puede mostrar una imagen para indicar que el usuario puede expandir el menú. Use el <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A> propiedad para especificar el texto alternativo para esta imagen.  
  
 Hay dos maneras de mostrar la imagen:  
  
-   Establecer el <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> propiedad `true` para utilizar la imagen integrada (valor predeterminado).  
  
-   Establecer el <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> propiedad para especificar una imagen personalizada.  
  
> [!NOTE]
>  Esta propiedad se aplica a la imagen integrada y la imagen personalizada.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A> propiedad para especificar el texto alternativo para la imagen que se utiliza para indicar que un elemento de menú estático tiene un submenú. Este texto se muestra como una información sobre herramientas cuando el usuario coloca el puntero del mouse sobre la imagen.  
  
 [!code-aspx-csharp[MenuStaticPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticPopoutImageText/CS/menustaticpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuStaticPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticPopoutImageText/VB/menustaticpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="StaticPopOutImageUrl">
      <MemberSignature Language="C#" Value="public string StaticPopOutImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticPopOutImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticPopOutImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticPopOutImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticPopOutImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la dirección URL de una imagen que se muestra para indicar que un elemento de menú estático tiene un submenú.</summary>
        <value>Dirección URL de una imagen que se muestra para indicar que un elemento de menú estático tiene un submenú. El valor predeterminado es una cadena vacía (""), lo que indica que esta propiedad no está establecida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando un elemento de menú estático contiene un submenú, se puede mostrar una imagen para indicar que el usuario puede expandir el menú. Hay dos maneras de mostrar esta imagen:  
  
-   Establecer el <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> propiedad `true` para utilizar la imagen integrada (valor predeterminado).  
  
-   Establecer el <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> propiedad para especificar una imagen personalizada.  
  
 Si el <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> propiedad está establecida, esa imagen reemplaza la imagen integrada, independientemente del valor de la <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> propiedad.  
  
 Si el <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> propiedad no está establecida y el <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> propiedad está establecida en `false`, no se muestra ninguna imagen.  
  
> [!NOTE]
>  Al establecer esta propiedad, use una barra diagonal (/) en lugar de una barra diagonal inversa (\\). Si utiliza barras diagonales inversas en la ruta de acceso, no se mostrará la imagen especificada.  
  
 Puede especificar texto alternativo para la imagen estableciendo el <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> propiedad para especificar una imagen personalizada para mostrar en un elemento de menú estático cuando el elemento de menú tiene un submenú.  
  
 [!code-aspx-csharp[MenuStaticPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticPopoutImageText/CS/menustaticpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuStaticPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticPopoutImageText/VB/menustaticpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticSelectedStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle StaticSelectedStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle StaticSelectedStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticSelectedStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ StaticSelectedStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticSelectedStyle : System.Web.UI.WebControls.MenuItemStyle" Usage="System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una referencia al objeto <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> que permite establecer el aspecto del elemento de menú seleccionado por el usuario en un menú estático.</summary>
        <value>Referencia a <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> que representa el estilo del elemento de menú seleccionado en un menú estático.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> propiedad para controlar la apariencia del elemento de menú seleccionado por el usuario en un menú estático. Esta propiedad es de solo lectura. Sin embargo, puede establecer las propiedades de la <xref:System.Web.UI.WebControls.MenuItemStyle> objeto devuelve. Las propiedades pueden establecerse mediante declaración en el formulario `Property-Subproperty`, donde `Subproperty` es una propiedad de la <xref:System.Web.UI.WebControls.MenuItemStyle> objeto (por ejemplo, `StaticSelectedStyle-ForeColor`). Las propiedades también pueden establecerse mediante programación en el formulario `Property.Subproperty` (por ejemplo, `StaticSelectedStyle.ForeColor`).  
  
 Propiedades de estilo de un elemento de menú estático se aplican en el orden siguiente:  
  
1.  <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>. Si el <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> colección o <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> se define la colección, se aplica en este momento, reemplazando las demás propiedades de estilo de elemento de menú.  
  
3.  <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>. Si el <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> se define la colección, se aplica en este momento, reemplazando las demás propiedades de estilo de elemento de menú.  
  
4.  <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>.  
  
> [!IMPORTANT]
>  Cambio importante siguiente.  
  
 Antes de .NET Framework 4.0, al definir un `<asp:Menu>` control en el archivo .aspx, los usuarios pueden establecer el `StaticSelectedStyle-CssClass` propiedad para establecer la clase CSS del elemento seleccionado del control. Por ejemplo, el usuario puede tener un control de menú como sigue:  
  
```  
<asp:Menu ID="Menu1" runat="server" Orientation="Horizontal"   
    StaticMenuItemStyle-CssClass="MenuItem"  
    StaticSelectedStyle-CssClass="MenuItem_selected"  
    OnMenuItemClick="Menu1_MenuItemClick" Style="margin-bottom: 0px" EnableTheming="True" ClientIDMode="Static">  
    <Items>  
        <asp:MenuItem Text="item_0" Value="0" Selected="True"></asp:MenuItem>  
        <asp:MenuItem Text="itme_1" Value="1"></asp:MenuItem>  
    </Items>  
</asp:Menu>  
```  
  
 Y el control de menú se representa como:  
  
```  
<div id="Menu1" style="margin-bottom: 0px">  
    <ul class="level1">  
        <li><a class="level1 MenuItem MenuItem_selected " href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;0&#39;)">item_0</a></li>  
        <li><a class="level1 MenuItem" href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;1&#39;)">itme_1</a></li>  
    </ul>  
</div>  
```  
  
 Sin embargo, en .NET Framework 4.0 y versiones posteriores, se establece el elemento de menú seleccionado en el `selected` clase CSS siempre en lugar de la clase especificada por `StaticSelectedStyle-CssClass`. Por lo tanto, el código anterior de ASP.NET se representa en su lugar, como:  
  
```  
<div id="Menu1" style="margin-bottom: 0px">  
    <ul class="level1">  
        <li><a class="level1 MenuItem selected " href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;0&#39;)">item_0</a></li>  
        <li><a class="level1 MenuItem" href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;1&#39;)">itme_1</a></li>  
    </ul>  
</div>  
  
```  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> propiedad para especificar un color de fondo azul claro para el elemento de menú estático seleccionado.  
  
 [!code-aspx-csharp[MenuStaticSelectedStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticSelectedStyle/CS/menustaticselectedstylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticSelectedStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticSelectedStyle/VB/menustaticselectedstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticSubMenuIndent">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Unit StaticSubMenuIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit StaticSubMenuIndent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticSubMenuIndent As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Unit StaticSubMenuIndent { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.StaticSubMenuIndent : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la cantidad de espacio de sangría, en píxeles, que se aplica a los submenús dentro de un menú estático.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Unit" /> que representa la cantidad de espacio de sangría, en píxeles, que se aplica a los submenús dentro de un menú estático El valor predeterminado es 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando muestre más de un nivel de menú en el menú estático (si la <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> propiedad está establecida en un valor mayor que 1), utilice el <xref:System.Web.UI.WebControls.Menu.StaticSubMenuIndent%2A> propiedad para especificar el número de píxeles que se va a aplicar sangría a los elementos de submenú del menú estático.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.StaticSubMenuIndent%2A> propiedad aplicar sangría a los elementos de submenú en un menú estático 10 píxeles.  
  
 [!code-aspx-csharp[MenuStaticSubMenuIndent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticSubMenuIndent/CS/menustaticsubmenuindentcs.aspx#1)]
 [!code-aspx-vb[MenuStaticSubMenuIndent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticSubMenuIndent/VB/menustaticsubmenuindentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El valor del objeto <see cref="T:System.Web.UI.WebControls.Unit" /> seleccionado es menor que 0.</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
      </Docs>
    </Member>
    <Member MemberName="StaticTopSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string StaticTopSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticTopSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticTopSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticTopSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticTopSeparatorImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la dirección URL de una imagen que se muestra como separador en la parte superior de cada elemento de menú estático.</summary>
        <value>Dirección URL de una imagen que se muestra como separador en la parte superior de cada elemento de menú estático. El valor predeterminado es una cadena vacía (""), lo que indica que esta propiedad no está establecida.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A> propiedad para especificar una imagen personalizada que se muestra en la parte superior de cada menú estático de elemento que actúa como un separador entre elementos de menú.  
  
> [!NOTE]
>  Como alternativa, también puede mostrar una imagen de separación en la parte inferior de cada elemento de menú estático estableciendo el <xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A> propiedad para especificar una imagen de separador que se muestra en la parte superior de cada elemento de menú estático.  
  
 [!code-aspx-csharp[MenuStaticTopSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticTopSeparatorImageUrl/CS/menustatictopseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuStaticTopSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticTopSeparatorImageUrl/VB/menustatictopseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">
          <see cref="T:System.String" /> que representa el argumento de evento que se pasa al controlador de eventos.</param>
        <summary>Procesa un evento que se genera cuando un formulario se envía al servidor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.Menu.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor de <see cref="T:System.Web.UI.HtmlTextWriterTag" /> correspondiente a un control <see cref="T:System.Web.UI.WebControls.Menu" />. Esta propiedad la usan principalmente los programadores de controles.</summary>
        <value>Siempre devuelve <see langword="HtmlTextWriterTag.Table" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.Menu.TagKey%2A> propiedad para determinar el <xref:System.Web.UI.HtmlTextWriterTag> valor que está asociado con un <xref:System.Web.UI.WebControls.Menu> control. Esta propiedad la usan principalmente los programadores de controles.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.WebControls.Menu.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la ventana o el marco de destino donde se mostrará el contenido de una página web asociada a un elemento de menú.</summary>
        <value>Ventana o marco de destino en que se debe mostrar el contenido de página web vinculado. El valor predeterminado es una cadena vacía ("") que actualiza la ventana o el marco con el foco.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.Menu.Target%2A> propiedad para especificar la ventana o marco en el que se va a mostrar el contenido Web vinculado a un elemento de menú cuando se hace clic en ese elemento de menú. Los valores deben empezar por una letra entre la A y la Z (sin distinción entre mayúsculas y minúsculas), salvo ciertos valores especiales que empiezan por un carácter de subrayado, como se muestra en la tabla siguiente.  
  
|Valor del objetivo|Descripción|  
|------------------|-----------------|  
|`_blank`|Representa el contenido en una nueva ventana sin marcos.|  
|`_parent`|Representa el contenido en el conjunto de marcos principal inmediato.|  
|`_search`|Representa el contenido en el panel de búsqueda.|  
|`_self`|Representa el contenido en el marco con foco.|  
|`_top`|Representa el contenido en una ventana completa sin marcos.|  
  
> [!NOTE]
>  Consulte la documentación del explorador para determinar si admite el valor `_search`.  Por ejemplo, las versiones de Internet Explorer 5.0 y versiones posteriores admiten la `_search` valor de destino  
  
 Esta propiedad se aplica a todos los elementos de menú en un <xref:System.Web.UI.WebControls.Menu> control. Selectivamente puede invalidar esta propiedad estableciendo el <xref:System.Web.UI.WebControls.MenuItem.Target%2A> propiedad de cada uno <xref:System.Web.UI.WebControls.MenuItem> objeto directamente.  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.MenuItem.Target%2A> propiedad se representa como un atributo de destino. No se permite el atributo de destino en los elementos de anclaje en la definición de tipo de documento strict de XHTML 1.1. Si la salida representada debe cumplir los estándares de accesibilidad o XHTML, no establezca la <xref:System.Web.UI.WebControls.MenuItem.Target%2A> propiedad. Para obtener más información, consulte [estándares de XHTML en Visual Studio y ASP.NET](http://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97) y [accesibilidad en Visual Studio y ASP.NET](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Menu.Target%2A> propiedad para especificar que el contenido vinculado a cada elemento de menú debe mostrarse en una nueva ventana cuando el usuario hace clic en ese elemento de menú.  
  
 [!code-aspx-csharp[MenuTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuTarget/CS/menutargetcs.aspx#1)]
 [!code-aspx-vb[MenuTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuTarget/VB/menutargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Target" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="menu.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Realiza el seguimiento de los cambios en el estado de vista en el control <see cref="T:System.Web.UI.WebControls.Menu" /> para que puedan almacenarse en el objeto <see cref="T:System.Web.UI.StateBag" /> del control. Este objeto es accesible a través de la propiedad <see cref="P:System.Web.UI.Control.ViewState" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
  </Members>
</Type>