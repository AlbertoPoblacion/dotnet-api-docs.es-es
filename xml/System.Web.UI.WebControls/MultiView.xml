<Type Name="MultiView" FullName="System.Web.UI.WebControls.MultiView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="03a4287654452f2339840ceb92648b3783242016" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37591623" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MultiView : System.Web.UI.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MultiView extends System.Web.UI.Control" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.MultiView" />
  <TypeSignature Language="VB.NET" Value="Public Class MultiView&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class MultiView : System::Web::UI::Control" />
  <TypeSignature Language="F#" Value="type MultiView = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ActiveViewChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.MultiViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.MultiViewControlBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(typeof(System.Web.UI.WebControls.View))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:MultiView runat="server"&gt;&lt;/{0}:MultiView&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa un control que actúa como contenedor de un grupo de controles <see cref="T:System.Web.UI.WebControls.View" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En este tema:  
  
-   [Introducción](#introduction)  
  
-   [Sintaxis declarativa](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introducción  
 El <xref:System.Web.UI.WebControls.MultiView> control es un contenedor para un grupo de <xref:System.Web.UI.WebControls.View> controles. Permite definir un grupo de <xref:System.Web.UI.WebControls.View> controles, donde cada <xref:System.Web.UI.WebControls.View> control contiene controles secundarios. A continuación, la aplicación puede representar un determinado <xref:System.Web.UI.WebControls.View> control al cliente en función de criterios como la identidad de usuario, las preferencias del usuario e información que se pasan en un parámetro de cadena de consulta. También puede usar el <xref:System.Web.UI.WebControls.MultiView> control para crear asistentes. En este escenario, cada <xref:System.Web.UI.WebControls.View> control contenido en un <xref:System.Web.UI.WebControls.MultiView> control representa un paso diferente o la página del asistente. También debe usar este control para desarrollar aplicaciones de múltiples pantallas para dispositivos móviles. Este control proporciona la misma funcionalidad que el móvil ASP.NET <xref:System.Web.UI.MobileControls.Form> control en la versión 1.1 de .NET Framework.  
  
 Solo un <xref:System.Web.UI.WebControls.View> control cada vez que se puede definir como la vista activa dentro de un <xref:System.Web.UI.WebControls.MultiView> control. Cuando un <xref:System.Web.UI.WebControls.View> control se define como la vista activa, los controles secundarios que contiene se procesan en el cliente. Puede usar el <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propiedad o el <xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A> método para definir la vista activa. Si el <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propiedad está vacía, el <xref:System.Web.UI.WebControls.MultiView> control no representa ningún contenido al cliente. Si la vista activa se establece en un <xref:System.Web.UI.WebControls.View> que no existe en el <xref:System.Web.UI.WebControls.MultiView> (control), un <xref:System.ArgumentOutOfRangeException> se genera en tiempo de ejecución.  
  
 Puede definir la vista activa de forma declarativa o mediante programación. Establecer el <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propiedad mediante declaración al definir el <xref:System.Web.UI.WebControls.MultiView> control hace que el <xref:System.Web.UI.WebControls.View> control que se establece como la vista activa para representar en el cliente la primera vez el <xref:System.Web.UI.WebControls.MultiView> se denomina control. En el ejemplo de código siguiente se muestra cómo establecer el <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propiedad mediante declaración.  
  
```  
<asp:MultiView id="MultiView1" ActiveViewIndex=0 runat="Server">   
```  
  
 Establecer el <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propiedad mediante programación, o llamar a la <xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A> método, permite que la aplicación determinar qué <xref:System.Web.UI.WebControls.View> control para representar al cliente en tiempo de ejecución basándose en criterios como identidad de un usuario o preferencias.  
  
 Para permitir que los usuarios se desplacen <xref:System.Web.UI.WebControls.View> controla dentro de un <xref:System.Web.UI.WebControls.MultiView> control, puede agregar un <xref:System.Web.UI.WebControls.LinkButton> o <xref:System.Web.UI.WebControls.Button> controlar a cada <xref:System.Web.UI.WebControls.View> control. Para aprovechar la <xref:System.Web.UI.WebControls.MultiView> actualizaciones automáticas del control de exámenes activos <xref:System.Web.UI.WebControls.View>, establezca el `CommandName` propiedad en el botón o vínculo en el valor de uno de los siguientes campos de nombre de comando que corresponde a la información deseada comportamiento de navegación: <xref:System.Web.UI.WebControls.MultiView.PreviousViewCommandName>, <xref:System.Web.UI.WebControls.MultiView.NextViewCommandName>, <xref:System.Web.UI.WebControls.MultiView.SwitchViewByIDCommandName>, o <xref:System.Web.UI.WebControls.MultiView.SwitchViewByIndexCommandName>.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Sintaxis declarativa  
  
```  
<asp:MultiView  
    ActiveViewIndex="integer"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnActiveViewChanged="ActiveViewChanged event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SkinID="string"  
    Visible="True|False"  
>  
            <asp:TemplatedWizardStep  
                AllowReturn="True|False"  
                ContentTemplateContainer="string"  
                EnableTheming="True|False"  
                EnableViewState="True|False"  
                ID="string"  
                OnActivate="Activate event handler"  
                OnDataBinding="DataBinding event handler"  
                OnDeactivate="Deactivate event handler"  
                OnDisposed="Disposed event handler"  
                OnInit="Init event handler"  
                OnLoad="Load event handler"  
                OnPreRender="PreRender event handler"  
                OnUnload="Unload event handler"  
                runat="server"  
                SkinID="string"  
                StepType="Auto|Complete|Finish|Start|Step"  
                Title="string"  
                Visible="True|False"  
>  
                        <ContentTemplate>  
                            <!-- child controls -->  
                        </ContentTemplate>  
                        <CustomNavigationTemplate>  
                            <!-- child controls -->  
                        </CustomNavigationTemplate>  
            </asp:TemplatedWizardStep>  
            <asp:View  
                EnableTheming="True|False"  
                EnableViewState="True|False"  
                ID="string"  
                OnActivate="Activate event handler"  
                OnDataBinding="DataBinding event handler"  
                OnDeactivate="Deactivate event handler"  
                OnDisposed="Disposed event handler"  
                OnInit="Init event handler"  
                OnLoad="Load event handler"  
                OnPreRender="PreRender event handler"  
                OnUnload="Unload event handler"  
                runat="server"  
                SkinID="string"  
                Visible="True|False"  
            />  
            <asp:WizardStep  
                AllowReturn="True|False"  
                EnableTheming="True|False"  
                EnableViewState="True|False"  
                ID="string"  
                OnActivate="Activate event handler"  
                OnDataBinding="DataBinding event handler"  
                OnDeactivate="Deactivate event handler"  
                OnDisposed="Disposed event handler"  
                OnInit="Init event handler"  
                OnLoad="Load event handler"  
                OnPreRender="PreRender event handler"  
                OnUnload="Unload event handler"  
                runat="server"  
                SkinID="string"  
                StepType="Auto|Complete|Finish|Start|Step"  
                Title="string"  
                Visible="True|False"  
            />  
</asp:MultiView>  
```  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar un <xref:System.Web.UI.WebControls.MultiView> control para crear una encuesta básica. Cada <xref:System.Web.UI.WebControls.View> control es una pregunta de encuesta independiente. Cuando el usuario hace clic en el **anterior** botón en cualquier página, el <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propiedad es reducido para navegar a la anterior <xref:System.Web.UI.WebControls.View> control. Cuando el usuario hace clic en el **siguiente** botón en cualquier página, el <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> aumenta para desplazarse a la siguiente propiedad <xref:System.Web.UI.WebControls.View> control.  
  
> [!NOTE]
>  Los ejemplos de código siguiente utilizan el modelo de código de único archivo y pueden no funcionar correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código se debe copiar en archivo de texto vacío que tiene una extensión de aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, consulte [modelo de código de página de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[MultiView.ActiveViewIndex Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MultiView.ActiveViewIndex Example/cs/multiviewactiveviewindexcs.aspx#1)]
 [!code-aspx-vb[MultiView.ActiveViewIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView.ActiveViewIndex Example/VB/multiviewactiveviewindexvb.aspx#1)]  
  
 En el ejemplo de código siguiente se muestra cómo crear un <xref:System.Web.UI.WebControls.MultiView> control que contiene tres <xref:System.Web.UI.WebControls.View> controles. La vista que el usuario selecciona en el cuadro de lista se establece en la vista activa y muestra al usuario. Para obtener un ejemplo más detallado de la <xref:System.Web.UI.WebControls.MultiView> de controles, vea los otros ejemplos de código proporcionados en este tema.  
  
 [!code-aspx-vb[MultiView Class Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView Class Example 2/VB/multiviewclass2vb.aspx#1)]  
  
 En el ejemplo de código siguiente se muestra cómo crear un <xref:System.Web.UI.WebControls.MultiView> control que contiene tres <xref:System.Web.UI.WebControls.View> controles. Un <xref:System.Web.UI.WebControls.View> control no tiene ninguna propiedad de estilo. Por lo tanto, cada uno de ellos <xref:System.Web.UI.WebControls.View> control contiene un <xref:System.Web.UI.WebControls.Panel> control para permitir que los estilos que se establecerá en el <xref:System.Web.UI.WebControls.View> control. La primera vez que se carga la página, el `DefaultView` se establece como la vista activa utilizando la <xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A> método. Cada <xref:System.Web.UI.WebControls.View> control contiene botones de vínculo para permitir al usuario navegar a distintas vistas.  
  
 [!code-aspx-vb[MultiView Class Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView Class Example/VB/multiviewclass1vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.View" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MultiView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MultiView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.MultiView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este constructor para crear e inicializar una nueva instancia de la <xref:System.Web.UI.WebControls.MultiView> clase.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveViewChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ActiveViewChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ActiveViewChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.MultiView.ActiveViewChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ActiveViewChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ActiveViewChanged;" />
      <MemberSignature Language="F#" Value="member this.ActiveViewChanged : EventHandler " Usage="member this.ActiveViewChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aparece cuando el control <see cref="T:System.Web.UI.WebControls.View" /> activo de un control <see cref="T:System.Web.UI.WebControls.MultiView" /> cambia entre los envíos al servidor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.MultiView.ActiveViewChanged> evento se desencadena cuando activo <xref:System.Web.UI.WebControls.View> control dentro de un <xref:System.Web.UI.WebControls.MultiView> cambia entre cada envío al servidor de control.  
  
 Para obtener más información sobre cómo controlar eventos, vea [Cómo: consumir eventos en una aplicación de formularios Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo especificar y codificar un controlador de eventos para el <xref:System.Web.UI.WebControls.MultiView.ActiveViewChanged> eventos de un <xref:System.Web.UI.WebControls.MultiView> control. Cuando los cambios de la vista activa, que se muestra un mensaje en un <xref:System.Web.UI.WebControls.Label> control en la página.  
  
> [!NOTE]
>  Ejemplo de código siguiente utiliza el modelo de código de un solo archivo y puede no funcionar correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código se debe copiar en archivo de texto vacío que tiene una extensión de aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, consulte [modelo de código de página de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[MultiView.ActiveViewChanged Event Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MultiView.ActiveViewChanged Event Example/cs/multiviewactiveviewchangedeventcs.aspx#1)]
 [!code-aspx-vb[MultiView.ActiveViewChanged Event Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView.ActiveViewChanged Event Example/VB/multiviewactiveviewchangedeventvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.MultiView.OnActiveViewChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ActiveViewIndex">
      <MemberSignature Language="C#" Value="public virtual int ActiveViewIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ActiveViewIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MultiView.ActiveViewIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ActiveViewIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ActiveViewIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ActiveViewIndex : int with get, set" Usage="System.Web.UI.WebControls.MultiView.ActiveViewIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el índice del control <see cref="T:System.Web.UI.WebControls.View" /> activo dentro de un control <see cref="T:System.Web.UI.WebControls.MultiView" />.</summary>
        <value>Índice de base cero del control <see cref="T:System.Web.UI.WebControls.View" /> activo dentro de un control <see cref="T:System.Web.UI.WebControls.MultiView" />. El valor predeterminado es -1, que indica que no se establece ninguna vista como activa.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propiedad para establecer un <xref:System.Web.UI.WebControls.View> control dentro de un <xref:System.Web.UI.WebControls.MultiView> control como la vista activa. También puede usar esta propiedad para devolver el índice de la <xref:System.Web.UI.WebControls.View> control que está establecido actualmente como la vista activa. El índice de un <xref:System.Web.UI.WebControls.View> control viene determinada por el orden en el que se declara dentro de un <xref:System.Web.UI.WebControls.MultiView> control. Por ejemplo, la primera <xref:System.Web.UI.WebControls.View> control declarados dentro de un <xref:System.Web.UI.WebControls.MultiView> control tiene un índice de 0.  
  
 Solo un <xref:System.Web.UI.WebControls.View> control a la vez puede definirse como activo dentro de un <xref:System.Web.UI.WebControls.MultiView> control. El <xref:System.Web.UI.WebControls.View> control que se establece en el <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propiedad se representará en el cliente. Si el <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propiedad está establecida en un <xref:System.Web.UI.WebControls.View> que no existe en el <xref:System.Web.UI.WebControls.MultiView> (control), un <xref:System.ArgumentOutOfRangeException> se genera en tiempo de ejecución. Si la propiedad está vacía, el <xref:System.Web.UI.WebControls.MultiView> control no representa ningún contenido al cliente.  
  
 Puede establecer el <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propiedad mediante declaración en tiempo de desarrollo o mediante programación en tiempo de ejecución. Establecer el <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propiedad mediante declaración al definir el <xref:System.Web.UI.WebControls.MultiView> control hace que el <xref:System.Web.UI.WebControls.View> control que se establece como la vista activa para representar en el cliente la primera vez el <xref:System.Web.UI.WebControls.MultiView> se denomina control. Establecer el <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propiedad mediante programación permite que la aplicación determinar qué <xref:System.Web.UI.WebControls.View> control para representar al cliente en tiempo de ejecución según criterios como la identidad de un usuario o sus preferencias.  
  
 Como alternativa, puede usar el <xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A> y <xref:System.Web.UI.WebControls.MultiView.GetActiveView%2A> métodos para establecer u obtener la vista activa dentro de la <xref:System.Web.UI.WebControls.MultiView> control.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar un <xref:System.Web.UI.WebControls.MultiView> control para crear una encuesta básica. Cada <xref:System.Web.UI.WebControls.View> control es una pregunta de encuesta independiente. Cuando el usuario hace clic en el **anterior** botón en cualquier página, el <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propiedad es reducido para navegar a la anterior <xref:System.Web.UI.WebControls.View> control. Cuando el usuario hace clic en el **siguiente** botón en cualquier página, el <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> aumenta para desplazarse a la siguiente propiedad <xref:System.Web.UI.WebControls.View> control.  
  
> [!NOTE]
>  Ejemplo de código siguiente utiliza el modelo de código de un solo archivo y puede no funcionar correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código se debe copiar en archivo de texto vacío que tiene una extensión de aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, consulte [modelo de código de página de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[MultiView.ActiveViewIndex Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MultiView.ActiveViewIndex Example/cs/multiviewactiveviewindexcs.aspx#1)]
 [!code-aspx-vb[MultiView.ActiveViewIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView.ActiveViewIndex Example/VB/multiviewactiveviewindexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El índice especificado se ha establecido en un valor inferior a -1, o mayor o igual al número de elementos de la lista.</exception>
        <altmember cref="T:System.Web.UI.WebControls.View" />
        <altmember cref="M:System.Web.UI.WebControls.MultiView.SetActiveView(System.Web.UI.WebControls.View)" />
        <altmember cref="M:System.Web.UI.WebControls.MultiView.GetActiveView" />
      </Docs>
    </Member>
    <Member MemberName="AddParsedSubObject">
      <MemberSignature Language="C#" Value="protected override void AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.AddParsedSubObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddParsedSubObject (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddParsedSubObject(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.AddParsedSubObject : obj -&gt; unit" Usage="multiView.AddParsedSubObject obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <see cref="T:System.Object" /> que representa el elemento analizado.</param>
        <summary>Notifica al control <see cref="T:System.Web.UI.WebControls.MultiView" /> que se analizó un elemento XML o HTML y agrega ese elemento a la colección <see cref="T:System.Web.UI.WebControls.ViewCollection" /> del control <see cref="T:System.Web.UI.WebControls.MultiView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método invalida la implementación de la clase base para permitir que solo <xref:System.Web.UI.WebControls.View> controles que se agregarán a la <xref:System.Web.UI.WebControls.ViewCollection>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="T:System.Object" /> que se ha especificado no es un control <see cref="T:System.Web.UI.WebControls.View" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.View" />
        <altmember cref="M:System.Web.UI.Control.AddParsedSubObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="multiView.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un objeto <see cref="T:System.Web.UI.ControlCollection" /> para contener los controles secundarios del control <see cref="T:System.Web.UI.WebControls.MultiView" />.</summary>
        <returns>Objeto <see cref="T:System.Web.UI.WebControls.ViewCollection" /> que contiene los controles <see cref="T:System.Web.UI.WebControls.View" /> del control <see cref="T:System.Web.UI.WebControls.MultiView" /> actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método invalida la implementación base para devolver siempre un <xref:System.Web.UI.WebControls.ViewCollection> para contener el <xref:System.Web.UI.WebControls.View> controles del elemento actual <xref:System.Web.UI.WebControls.MultiView> control.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.View" />
        <altmember cref="T:System.Web.UI.WebControls.ViewCollection" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MultiView.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.MultiView.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si los temas se aplican al control <see cref="T:System.Web.UI.WebControls.MultiView" />.</summary>
        <value>Es <see langword="true" /> si se utilizan temas; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.MultiView.EnableTheming%2A> propiedad indica si los temas están habilitados para el <xref:System.Web.UI.WebControls.MultiView> control. El <xref:System.Web.UI.WebControls.MultiView.EnableTheming%2A> propiedad también determina si los temas están habilitados para los controles contenidos en su <xref:System.Web.UI.Control.Controls%2A> colección. Cuando el <xref:System.Web.UI.WebControls.MultiView.EnableTheming%2A> propiedad es `true`, directorio de temas de la aplicación se busca las máscaras de controles aplicar. Si no hay ninguna máscara para el control determinado existe en el directorio de temas, no se aplica una máscara. Cuando el <xref:System.Web.UI.WebControls.MultiView.EnableTheming%2A> propiedad es `false`, no se busca en el directorio de temas y el contenido de la <xref:System.Web.UI.Control.SkinID%2A> no se utiliza la propiedad.  
  
 Un control puede invalidar el <xref:System.Web.UI.WebControls.MultiView.EnableTheming%2A> valor establecido por su control principal o la página contenedora. Por ejemplo, si un <xref:System.Web.UI.WebControls.MultiView> control tiene <xref:System.Web.UI.WebControls.MultiView.EnableTheming%2A> establecido en `false`, aplicar temas selectivamente a persona <xref:System.Web.UI.WebControls.View> controles contenidos dentro de la <xref:System.Web.UI.WebControls.MultiView> control estableciendo el <xref:System.Web.UI.Control.EnableTheming%2A> propiedad `true`en los controles secundarios individuales.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActiveView">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.View GetActiveView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.View GetActiveView() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.GetActiveView" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActiveView () As View" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::View ^ GetActiveView();" />
      <MemberSignature Language="F#" Value="member this.GetActiveView : unit -&gt; System.Web.UI.WebControls.View" Usage="multiView.GetActiveView " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.View</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve el control <see cref="T:System.Web.UI.WebControls.View" /> activo actual dentro de un control <see cref="T:System.Web.UI.WebControls.MultiView" />.</summary>
        <returns>Control <see cref="T:System.Web.UI.WebControls.View" /> que representa la vista activa dentro de un control <see cref="T:System.Web.UI.WebControls.MultiView" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este método para devolver el <xref:System.Web.UI.WebControls.View> control dentro de un <xref:System.Web.UI.WebControls.MultiView> control que está establecido actualmente como la vista activa. Este método devuelve un <xref:System.Web.UI.WebControls.View> controlar y, por tanto, se puede usar para tener acceso a las propiedades de la vista activa. Por ejemplo, `MultiView1.GetActiveView.ID` devuelve el valor de la <xref:System.Web.UI.Control.ID%2A> propiedad de la vista activa actual en MultiView1.  
  
 Como alternativa, puede usar el <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propiedad para obtener o establecer el índice de base cero de la vista activa actual en un <xref:System.Web.UI.WebControls.MultiView> control. Esta propiedad se puede acceder mediante declaración o mediante programación.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo crear un <xref:System.Web.UI.WebControls.MultiView> control que contiene tres <xref:System.Web.UI.WebControls.View> controles. Cuando el <xref:System.Web.UI.WebControls.MultiView.ActiveViewChanged> se provoca el evento, el <xref:System.Web.UI.WebControls.MultiView.GetActiveView%2A> método se usa para devolver la vista activa actual y lo mostrará en un <xref:System.Web.UI.WebControls.Label> control en la página.  
  
> [!NOTE]
>  Ejemplo de código siguiente utiliza el modelo de código de un solo archivo y puede no funcionar correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código se debe copiar en archivo de texto vacío que tiene una extensión de aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, consulte [modelo de código de página de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[MultiView.ActiveViewChanged Event Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MultiView.ActiveViewChanged Event Example/cs/multiviewactiveviewchangedeventcs.aspx#1)]
 [!code-aspx-vb[MultiView.ActiveViewChanged Event Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView.ActiveViewChanged Event Example/VB/multiviewactiveviewchangedeventvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">La propiedad <see cref="P:System.Web.UI.WebControls.MultiView.ActiveViewIndex" /> no se establece en un control <see cref="T:System.Web.UI.WebControls.View" /> válido dentro del control <see cref="T:System.Web.UI.WebControls.MultiView" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.View" />
        <altmember cref="M:System.Web.UI.WebControls.MultiView.SetActiveView(System.Web.UI.WebControls.View)" />
        <altmember cref="P:System.Web.UI.WebControls.MultiView.ActiveViewIndex" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="multiView.LoadControlState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Objeto <see cref="T:System.Object" /> que representa el estado del control <see cref="T:System.Web.UI.WebControls.MultiView" />.</param>
        <summary>Guarda el estado actual del control <see cref="T:System.Web.UI.WebControls.MultiView" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextViewCommandName">
      <MemberSignature Language="C#" Value="public static readonly string NextViewCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string NextViewCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.MultiView.NextViewCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NextViewCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ NextViewCommandName;" />
      <MemberSignature Language="F#" Value=" staticval mutable NextViewCommandName : string" Usage="System.Web.UI.WebControls.MultiView.NextViewCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el nombre de comando asociado al control <see cref="T:System.Web.UI.WebControls.View" /> siguiente que se va a mostrar en un control <see cref="T:System.Web.UI.WebControls.MultiView" />. Este campo es de solo lectura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.MultiView.NextViewCommandName> campo para representar el nombre de comando "NextView".  
  
 Puede usar el valor de este campo para aprovechar la <xref:System.Web.UI.WebControls.MultiView> actualizaciones automáticas del control de activo <xref:System.Web.UI.WebControls.View> control. Por ejemplo, si un <xref:System.Web.UI.WebControls.View> control contiene un <xref:System.Web.UI.WebControls.Button> control que navega a la anterior <xref:System.Web.UI.WebControls.View>, puede establecer el <xref:System.Web.UI.WebControls.Button.CommandName%2A> en el valor de la <xref:System.Web.UI.WebControls.MultiView.NextViewCommandName> campo, que es "NextView". Esto hace que el <xref:System.Web.UI.WebControls.MultiView> control reducir automáticamente el valor de la <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propiedad cuando se hace clic en el botón.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar un <xref:System.Web.UI.WebControls.MultiView> control para crear una encuesta básica. Cada <xref:System.Web.UI.WebControls.View> control es una pregunta de encuesta independiente. El <xref:System.Web.UI.WebControls.MultiView.PreviousViewCommandName> y <xref:System.Web.UI.WebControls.MultiView.NextViewCommandName> campos se usan para proporcionar la exploración automática entre el anterior y siguiente <xref:System.Web.UI.WebControls.View> controles de la encuesta.  
  
 [!code-aspx-csharp[MultiView.NextViewCommandName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MultiView.NextViewCommandName/CS/multiview.nextviewcommandnamecs.aspx#1)]
 [!code-aspx-vb[MultiView.NextViewCommandName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView.NextViewCommandName/VB/multiview.nextviewcommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.View" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.PreviousViewCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.SwitchViewByIDCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.SwitchViewByIndexCommandName" />
      </Docs>
    </Member>
    <Member MemberName="OnActiveViewChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnActiveViewChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActiveViewChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.OnActiveViewChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnActiveViewChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnActiveViewChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnActiveViewChanged : EventArgs -&gt; unit&#xA;override this.OnActiveViewChanged : EventArgs -&gt; unit" Usage="multiView.OnActiveViewChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Provoca el evento <see cref="E:System.Web.UI.WebControls.MultiView.ActiveViewChanged" /> de un control <see cref="T:System.Web.UI.WebControls.MultiView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.MultiView.ActiveViewChanged> evento se desencadena cuando activo <xref:System.Web.UI.WebControls.View> control dentro de un <xref:System.Web.UI.WebControls.MultiView> control cambia entre cada envío al servidor, y puede proporcionar un controlador personalizado para este evento.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [Cómo: consumir eventos en una aplicación de formularios Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 El método <xref:System.Web.UI.WebControls.MultiView.OnActiveViewChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo especificar y codificar un controlador de eventos para el <xref:System.Web.UI.WebControls.MultiView.ActiveViewChanged> eventos de un <xref:System.Web.UI.WebControls.MultiView> control. Cuando los cambios de la vista activa, que se muestra un mensaje en un <xref:System.Web.UI.WebControls.Label> control en la página.  
  
> [!NOTE]
>  Ejemplo de código siguiente utiliza el modelo de código de un solo archivo y puede no funcionar correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código se debe copiar en archivo de texto vacío que tiene una extensión de aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, consulte [modelo de código de página de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[MultiView.ActiveViewChanged Event Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MultiView.ActiveViewChanged Event Example/cs/multiviewactiveviewchangedeventcs.aspx#1)]
 [!code-aspx-vb[MultiView.ActiveViewChanged Event Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView.ActiveViewChanged Event Example/VB/multiviewactiveviewchangedeventvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cuando se reemplaza <see cref="M:System.Web.UI.WebControls.MultiView.OnActiveViewChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Web.UI.WebControls.MultiView.OnActiveViewChanged(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.MultiView.ActiveViewChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBubbleEvent : obj * EventArgs -&gt; bool" Usage="multiView.OnBubbleEvent (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">Origen del evento.</param>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Determina si el evento del control <see cref="T:System.Web.UI.WebControls.MultiView" /> debe pasarse a la jerarquía de controles de servidor de la interfaz de usuario de la página.</summary>
        <returns>Es <see langword="true" /> si se ha cancelado el evento; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Web.UI.WebControls.MultiView> control contiene <xref:System.Web.UI.WebControls.View> controles que provocan eventos. Este método invalida la implementación base para controlar la navegación entre <xref:System.Web.UI.WebControls.View> controles.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">El control <see cref="T:System.Web.UI.WebControls.MultiView" /> no encuentra el objeto <see cref="T:System.Web.UI.WebControls.View" /> especificado en la propiedad <see cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" /> de <paramref name="e" />.</exception>
        <exception cref="T:System.FormatException">La propiedad <see cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" /> de <paramref name="e" /> no se puede analizar como un entero.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="multiView.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Web.UI.Control.Init" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando sean notificadas por este método, un <xref:System.Web.UI.WebControls.MultiView> control debe realizar ningún paso de inicialización necesarias para crear y configurar una instancia. En esta fase del ciclo de vida del control de servidor, estado de vista del control aún no se rellena. No se puede tener acceso a otro control de servidor cuando se llama a este método, incluso si es un secundario o primario de este control. Otros controles de servidor no son certeza de que se crea y se prepara para el acceso.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousViewCommandName">
      <MemberSignature Language="C#" Value="public static readonly string PreviousViewCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string PreviousViewCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.MultiView.PreviousViewCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviousViewCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ PreviousViewCommandName;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviousViewCommandName : string" Usage="System.Web.UI.WebControls.MultiView.PreviousViewCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el nombre de comando asociado al control <see cref="T:System.Web.UI.WebControls.View" /> anterior que se va a mostrar en un control <see cref="T:System.Web.UI.WebControls.MultiView" />. Este campo es de solo lectura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.MultiView.PreviousViewCommandName> campo para representar el nombre de comando "PrevView".  
  
 Puede usar el valor de este campo para aprovechar la <xref:System.Web.UI.WebControls.MultiView> actualizaciones automáticas del control de activo <xref:System.Web.UI.WebControls.View> control. Por ejemplo, si un <xref:System.Web.UI.WebControls.View> control contiene un <xref:System.Web.UI.WebControls.Button> control que navega a la siguiente <xref:System.Web.UI.WebControls.View>, puede establecer el <xref:System.Web.UI.WebControls.Button.CommandName%2A> en el valor de la <xref:System.Web.UI.WebControls.MultiView.PreviousViewCommandName> campo, que es "PrevView". Esto hace que el <xref:System.Web.UI.WebControls.MultiView> controlar para incrementar automáticamente el valor de la <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propiedad cuando se hace clic en el botón.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar un <xref:System.Web.UI.WebControls.MultiView> control para crear una encuesta básica. Cada <xref:System.Web.UI.WebControls.View> control es una pregunta de encuesta independiente. El <xref:System.Web.UI.WebControls.MultiView.PreviousViewCommandName> y <xref:System.Web.UI.WebControls.MultiView.NextViewCommandName> campos se usan para proporcionar la exploración automática entre el anterior y siguiente <xref:System.Web.UI.WebControls.View> controles de la encuesta.  
  
> [!NOTE]
>  Ejemplo de código siguiente utiliza el modelo de código de un solo archivo y puede no funcionar correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código se debe copiar en archivo de texto vacío que tiene una extensión de aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, consulte [modelo de código de página de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[MultiView.NextViewCommandName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MultiView.NextViewCommandName/CS/multiview.nextviewcommandnamecs.aspx#1)]
 [!code-aspx-vb[MultiView.NextViewCommandName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView.NextViewCommandName/VB/multiview.nextviewcommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.View" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.NextViewCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.SwitchViewByIDCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.SwitchViewByIndexCommandName" />
      </Docs>
    </Member>
    <Member MemberName="RemovedControl">
      <MemberSignature Language="C#" Value="protected internal override void RemovedControl (System.Web.UI.Control ctl);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RemovedControl(class System.Web.UI.Control ctl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.RemovedControl(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RemovedControl (ctl As Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RemovedControl(System::Web::UI::Control ^ ctl);" />
      <MemberSignature Language="F#" Value="override this.RemovedControl : System.Web.UI.Control -&gt; unit" Usage="multiView.RemovedControl ctl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctl" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="ctl">Control <see cref="T:System.Web.UI.WebControls.View" /> que se ha quitado.</param>
        <summary>Se llama después de quitar un control <see cref="T:System.Web.UI.WebControls.View" /> de la colección <see cref="P:System.Web.UI.Control.Controls" /> de un control <see cref="T:System.Web.UI.WebControls.MultiView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.Control.RemovedControl%2A> se llama al método inmediatamente después de un <xref:System.Web.UI.WebControls.View> control se quita de la <xref:System.Web.UI.Control.Controls%2A> colección de un <xref:System.Web.UI.WebControls.MultiView> control.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="multiView.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> que representa el flujo de salida para representar contenido HTML en el cliente.</param>
        <summary>Escribe el contenido del control <see cref="T:System.Web.UI.WebControls.MultiView" /> en el objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> especificado para mostrarlo en el cliente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.MultiView.Render%2A> método se utiliza principalmente los desarrolladores de controles al derivar una clase personalizada desde el <xref:System.Web.UI.WebControls.MultiView> control.  
  
 El <xref:System.Web.UI.WebControls.MultiView.Render%2A> método escribe el contenido representado de la vista activa en el cliente con el <xref:System.Web.UI.HtmlTextWriter>. Puede establecer la vista activa un <xref:System.Web.UI.WebControls.MultiView> controlar mediante la <xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A> método o la <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propiedad. Puede determinar cuál de los <xref:System.Web.UI.WebControls.View> controla en el <xref:System.Web.UI.WebControls.MultiView.Views%2A> colección es la vista activa, si hay alguno, mediante el uso de la <xref:System.Web.UI.WebControls.MultiView.GetActiveView%2A> método o la <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propiedad.  
  
 Si se establece una vista activa para el <xref:System.Web.UI.WebControls.MultiView> control activo <xref:System.Web.UI.WebControls.View> control se usa para representar el contenido de esa vista y sus controles secundarios. Si no se establece una vista activa para el <xref:System.Web.UI.WebControls.MultiView> ningún contenido de control, se representa en el <xref:System.Web.UI.HtmlTextWriter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="multiView.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Guarda el estado actual del control <see cref="T:System.Web.UI.WebControls.MultiView" />.</summary>
        <returns>Objeto <see cref="T:System.Object" /> que representa el estado del control <see cref="T:System.Web.UI.WebControls.MultiView" />. Si no hay un estado de vista asociado al control <see cref="T:System.Web.UI.WebControls.MultiView" />, este método devuelve <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetActiveView">
      <MemberSignature Language="C#" Value="public void SetActiveView (System.Web.UI.WebControls.View view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetActiveView(class System.Web.UI.WebControls.View view) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.SetActiveView(System.Web.UI.WebControls.View)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetActiveView(System::Web::UI::WebControls::View ^ view);" />
      <MemberSignature Language="F#" Value="member this.SetActiveView : System.Web.UI.WebControls.View -&gt; unit" Usage="multiView.SetActiveView view" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="System.Web.UI.WebControls.View" />
      </Parameters>
      <Docs>
        <param name="view">Control <see cref="T:System.Web.UI.WebControls.View" /> que se establece como la vista activa dentro de un control <see cref="T:System.Web.UI.WebControls.MultiView" />.</param>
        <summary>Establece el control <see cref="T:System.Web.UI.WebControls.View" /> especificado en la vista activa dentro de un control <see cref="T:System.Web.UI.WebControls.MultiView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este método para establecer un <xref:System.Web.UI.WebControls.View> control dentro de un <xref:System.Web.UI.WebControls.MultiView> control como la vista activa. Solo un <xref:System.Web.UI.WebControls.View> control a la vez puede definirse como activo dentro de un <xref:System.Web.UI.WebControls.MultiView> control. El <xref:System.Web.UI.WebControls.View> control que se establece como la vista activa se representa en el cliente. Si un <xref:System.Web.UI.WebControls.View> control que no existe en el <xref:System.Web.UI.WebControls.MultiView> control se establece como activo, se produce una excepción en tiempo de ejecución. Si no hay ningún <xref:System.Web.UI.WebControls.View> control se establece como la vista activa, el <xref:System.Web.UI.WebControls.MultiView> control no representa ningún contenido al cliente.  
  
 Mediante el <xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A> método para establecer mediante programación la vista activa permite que la aplicación determinar qué <xref:System.Web.UI.WebControls.View> control para representar al cliente en tiempo de ejecución basándose en criterios como identidad y las preferencias de un usuario.  
  
 Como alternativa, puede usar el <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propiedad para obtener o establecer el índice de base cero de la vista activa actual en un <xref:System.Web.UI.WebControls.MultiView> control. Esta propiedad se puede acceder mediante declaración o mediante programación.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo crear un <xref:System.Web.UI.WebControls.MultiView> control que contiene tres <xref:System.Web.UI.WebControls.View> controles. La primera vez que se carga la página, el `DefaultView` se establece como la vista activa utilizando la <xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A> método. Cada <xref:System.Web.UI.WebControls.View> control contiene botones de vínculo para permitir al usuario navegar a distintas vistas.  
  
> [!NOTE]
>  Ejemplo de código siguiente utiliza el modelo de código de un solo archivo y puede no funcionar correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código se debe copiar en archivo de texto vacío que tiene una extensión de aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, consulte [modelo de código de página de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-vb[MultiView Class Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView Class Example/VB/multiviewclass1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">El valor de parámetro <paramref name="view" /> especificado no estaba contenido en el control <see cref="T:System.Web.UI.WebControls.MultiView" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.MultiView.ActiveViewIndex" />
        <altmember cref="M:System.Web.UI.WebControls.MultiView.GetActiveView" />
        <altmember cref="T:System.Web.UI.WebControls.View" />
      </Docs>
    </Member>
    <Member MemberName="SwitchViewByIDCommandName">
      <MemberSignature Language="C#" Value="public static readonly string SwitchViewByIDCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string SwitchViewByIDCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.MultiView.SwitchViewByIDCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SwitchViewByIDCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ SwitchViewByIDCommandName;" />
      <MemberSignature Language="F#" Value=" staticval mutable SwitchViewByIDCommandName : string" Usage="System.Web.UI.WebControls.MultiView.SwitchViewByIDCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el nombre de comando asociado al cambio del control <see cref="T:System.Web.UI.WebControls.View" /> activo en un control <see cref="T:System.Web.UI.WebControls.MultiView" />, basándose en el identificador de <see cref="T:System.Web.UI.WebControls.View" /> especificado. Este campo es de solo lectura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.MultiView.SwitchViewByIDCommandName> campo para representar el nombre de comando "SwitchViewByID".  
  
 Puede usar el valor de este campo para aprovechar la <xref:System.Web.UI.WebControls.MultiView> actualizaciones automáticas del control de activo <xref:System.Web.UI.WebControls.View> control. Por ejemplo, si un <xref:System.Web.UI.WebControls.View> control contiene un <xref:System.Web.UI.WebControls.Button> control que navega a la primera <xref:System.Web.UI.WebControls.View> al hacer clic, puede establecer el <xref:System.Web.UI.WebControls.Button.CommandName%2A> en el valor de la <xref:System.Web.UI.WebControls.MultiView.SwitchViewByIDCommandName> campo, que es "SwitchViewByID". Establecer el <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> propiedad para el identificador del primer <xref:System.Web.UI.WebControls.View> en el <xref:System.Web.UI.WebControls.MultiView> control, como "Page1". Esto hace que el <xref:System.Web.UI.WebControls.MultiView> control establezca automáticamente "Page1" como la activa <xref:System.Web.UI.WebControls.View> cuando se hace clic en el botón.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar un <xref:System.Web.UI.WebControls.MultiView> control para crear una encuesta básica. Cada <xref:System.Web.UI.WebControls.View> control es una pregunta de encuesta independiente. El <xref:System.Web.UI.WebControls.MultiView.PreviousViewCommandName> y <xref:System.Web.UI.WebControls.MultiView.NextViewCommandName> campos se usan para proporcionar la exploración automática entre el anterior y siguiente <xref:System.Web.UI.WebControls.View> controles de la encuesta. Si el usuario hace clic en el **repetir encuesta** en el último botón <xref:System.Web.UI.WebControls.View> de la encuesta, la <xref:System.Web.UI.WebControls.MultiView.SwitchViewByIDCommandName> campo se usa junto con un argumento de comando de "Page1" para redirigir al usuario a la primera <xref:System.Web.UI.WebControls.View> de la encuesta.  
  
> [!NOTE]
>  Ejemplo de código siguiente utiliza el modelo de código de un solo archivo y puede no funcionar correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código se debe copiar en archivo de texto vacío que tiene una extensión de aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, consulte [modelo de código de página de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[MultiView.NextViewCommandName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MultiView.NextViewCommandName/CS/multiview.nextviewcommandnamecs.aspx#1)]
 [!code-aspx-vb[MultiView.NextViewCommandName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView.NextViewCommandName/VB/multiview.nextviewcommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.View" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.PreviousViewCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.NextViewCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.SwitchViewByIndexCommandName" />
      </Docs>
    </Member>
    <Member MemberName="SwitchViewByIndexCommandName">
      <MemberSignature Language="C#" Value="public static readonly string SwitchViewByIndexCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string SwitchViewByIndexCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.MultiView.SwitchViewByIndexCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SwitchViewByIndexCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ SwitchViewByIndexCommandName;" />
      <MemberSignature Language="F#" Value=" staticval mutable SwitchViewByIndexCommandName : string" Usage="System.Web.UI.WebControls.MultiView.SwitchViewByIndexCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el nombre de comando asociado al cambio de control <see cref="T:System.Web.UI.WebControls.View" /> activo en un control <see cref="T:System.Web.UI.WebControls.MultiView" /> basado en un índice <see cref="T:System.Web.UI.WebControls.View" /> especificado. Este campo es de solo lectura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.MultiView.SwitchViewByIndexCommandName> campo para representar el nombre de comando "SwitchViewByIndex".  
  
 Puede usar el valor de este campo para aprovechar la <xref:System.Web.UI.WebControls.MultiView> actualizaciones automáticas del control de activo <xref:System.Web.UI.WebControls.View> control. Por ejemplo, si un <xref:System.Web.UI.WebControls.View> control contiene un <xref:System.Web.UI.WebControls.Button> control que navega a la primera <xref:System.Web.UI.WebControls.View> al hacer clic, puede establecer el <xref:System.Web.UI.WebControls.Button.CommandName%2A> en el valor de la <xref:System.Web.UI.WebControls.MultiView.SwitchViewByIndexCommandName> campo, que es "SwitchViewByIndex". Establecer el <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> propiedad en el índice del primer <xref:System.Web.UI.WebControls.View> en el <xref:System.Web.UI.WebControls.MultiView> control, que es 0. Esto hace que el <xref:System.Web.UI.WebControls.MultiView> control para establecer automáticamente el <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> propiedad en 0 cuando se hace clic en el botón.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar un <xref:System.Web.UI.WebControls.MultiView> control para crear una encuesta básica. Cada <xref:System.Web.UI.WebControls.View> control es una pregunta de encuesta independiente. El <xref:System.Web.UI.WebControls.MultiView.PreviousViewCommandName> y <xref:System.Web.UI.WebControls.MultiView.NextViewCommandName> campos se usan para proporcionar la exploración automática entre el anterior y siguiente <xref:System.Web.UI.WebControls.View> controles de la encuesta. Si el usuario hace clic en el **repetir encuesta** en el último botón <xref:System.Web.UI.WebControls.View> de la encuesta, la <xref:System.Web.UI.WebControls.MultiView.SwitchViewByIndexCommandName> campo se usa junto con un argumento de comando de 0 para redirigir al usuario a la primera <xref:System.Web.UI.WebControls.View> de la encuesta.  
  
> [!NOTE]
>  Ejemplo de código siguiente utiliza el modelo de código de un solo archivo y puede no funcionar correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código se debe copiar en archivo de texto vacío que tiene una extensión de aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, consulte [modelo de código de página de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[MultiView.SwitchViewByIndexCommandName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MultiView.SwitchViewByIndexCommandName/CS/multiview.switchviewbyindexcommandnamecs.aspx#1)]
 [!code-aspx-vb[MultiView.SwitchViewByIndexCommandName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView.SwitchViewByIndexCommandName/VB/multiview.switchviewbyindexcommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.View" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.SwitchViewByIDCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.PreviousViewCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.NextViewCommandName" />
      </Docs>
    </Member>
    <Member MemberName="Views">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ViewCollection Views { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ViewCollection Views" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MultiView.Views" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Views As ViewCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ViewCollection ^ Views { System::Web::UI::WebControls::ViewCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Views : System.Web.UI.WebControls.ViewCollection" Usage="System.Web.UI.WebControls.MultiView.Views" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ViewCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la colección de controles <see cref="T:System.Web.UI.WebControls.View" /> en el control <see cref="T:System.Web.UI.WebControls.MultiView" />.</summary>
        <value>Objeto <see cref="T:System.Web.UI.WebControls.ViewCollection" /> que representa una colección de controles <see cref="T:System.Web.UI.WebControls.View" /> dentro de un control <see cref="T:System.Web.UI.WebControls.MultiView" />. El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice esta propiedad para administrar mediante programación la <xref:System.Web.UI.WebControls.View> controles en un <xref:System.Web.UI.WebControls.MultiView> control.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo agregar mediante programación <xref:System.Web.UI.WebControls.View> controles a un <xref:System.Web.UI.WebControls.MultiView> control. Después de cada <xref:System.Web.UI.WebControls.View> se crea el control, el `MultiView.Views.Add()` sintaxis se usa para agregar la <xref:System.Web.UI.WebControls.View> el control a la <xref:System.Web.UI.WebControls.ViewCollection> colección de los <xref:System.Web.UI.WebControls.MultiView> control.  
  
> [!NOTE]
>  Ejemplo de código siguiente utiliza el modelo de código de un solo archivo y puede no funcionar correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código se debe copiar en archivo de texto vacío que tiene una extensión de aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, consulte [modelo de código de página de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-vb[MultiView.Views Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView.Views Example/VB/multiviewviewsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ViewCollection" />
      </Docs>
    </Member>
  </Members>
</Type>