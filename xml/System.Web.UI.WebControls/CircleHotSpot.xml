<Type Name="CircleHotSpot" FullName="System.Web.UI.WebControls.CircleHotSpot">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ee3aad2ab3f33040b5e16428dcdf06db07857735" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36583652" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CircleHotSpot : System.Web.UI.WebControls.HotSpot" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CircleHotSpot extends System.Web.UI.WebControls.HotSpot" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.CircleHotSpot" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CircleHotSpot&#xA;Inherits HotSpot" />
  <TypeSignature Language="C++ CLI" Value="public ref class CircleHotSpot sealed : System::Web::UI::WebControls::HotSpot" />
  <TypeSignature Language="F#" Value="type CircleHotSpot = class&#xA;    inherit HotSpot" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.HotSpot</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Define una región de zona activa circular en un control <see cref="T:System.Web.UI.WebControls.ImageMap" />. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta clase define una región de zona activa en forma de círculo en un <xref:System.Web.UI.WebControls.ImageMap> control. Para definir la región de la <xref:System.Web.UI.WebControls.CircleHotSpot> de objetos, establecer el <xref:System.Web.UI.WebControls.CircleHotSpot.X%2A> en el valor que representa la coordenada x del centro de la región circular. Establecer el <xref:System.Web.UI.WebControls.CircleHotSpot.Y%2A> en el valor que representa la coordenada y del centro de la región circular. Establecer el <xref:System.Web.UI.WebControls.CircleHotSpot.Radius%2A> propiedad a la distancia desde el centro del círculo hasta el borde.  
  
 Cuando un <xref:System.Web.UI.WebControls.CircleHotSpot> se hace clic en el control, la página navega a una dirección URL, genera una devolución de datos al servidor o no hace nada. El <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> propiedad especifica este comportamiento. Para desplazarse a una dirección URL, establezca el <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> propiedad para `HotSpotMode.Navigate`y usar el <xref:System.Web.UI.WebControls.HotSpot.NavigateUrl%2A> propiedad para especificar la dirección URL de destino. Para enviar datos al servidor, establezca el <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> propiedad `HotSpotMode.PostBack`y usar el <xref:System.Web.UI.WebControls.HotSpot.PostBackValue%2A> propiedad para especificar un nombre para el <xref:System.Web.UI.WebControls.CircleHotSpot> objeto. Este nombre se pasará en el <xref:System.Web.UI.WebControls.ImageMapEventArgs> datos de eventos cuando el <xref:System.Web.UI.WebControls.CircleHotSpot> se hace clic en. Si desea que la <xref:System.Web.UI.WebControls.CircleHotSpot> objeto no tenga ningún comportamiento, establezca la <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> propiedad `HotSpotMode.Inactive`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear mediante declaración un <xref:System.Web.UI.WebControls.ImageMap> control que contiene dos <xref:System.Web.UI.WebControls.CircleHotSpot> objetos. El <xref:System.Web.UI.WebControls.HotSpot.HotSpotMode%2A> propiedad está establecida en `HotSpotMode.Navigate`, lo que hace que la página ir a la dirección URL especificada cada vez que un usuario hace clic en una de las regiones de zona activa. En este ejemplo funcione correctamente, debe proporcionar su propia imagen para la <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> propiedad y actualizar correctamente la ruta de acceso a la imagen para que la aplicación puede encontrarlo.  
  
 [!code-aspx-csharp[ImageMapClass1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ImageMapClass1/CS/imagemapclass1cs.aspx#1)]
 [!code-aspx-vb[ImageMapClass1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ImageMapClass1/VB/imagemapclass1vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.CircleHotSpot.Radius" />
    <altmember cref="P:System.Web.UI.WebControls.CircleHotSpot.X" />
    <altmember cref="P:System.Web.UI.WebControls.CircleHotSpot.Y" />
    <altmember cref="P:System.Web.UI.WebControls.HotSpot.HotSpotMode" />
    <altmember cref="T:System.Web.UI.WebControls.ImageMap" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CircleHotSpot ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CircleHotSpot.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CircleHotSpot();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.CircleHotSpot" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este constructor para inicializar una nueva instancia de la <xref:System.Web.UI.WebControls.CircleHotSpot> clase.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear mediante programación dos <xref:System.Web.UI.WebControls.CircleHotSpot> objetos, establecer sus propiedades y agregarlos después a la <xref:System.Web.UI.WebControls.ImageMap> del control <xref:System.Web.UI.WebControls.HotSpotCollection>. En este ejemplo funcione correctamente, debe proporcionar su propia imagen para la <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> propiedad y actualizar correctamente la ruta de acceso a la imagen para que la aplicación puede encontrarlo.  
  
 [!code-aspx-csharp[CircleHotSpot.Cstr#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CircleHotSpot.Cstr/CS/circlehotspot.cstrcs.aspx#1)]
 [!code-aspx-vb[CircleHotSpot.Cstr#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CircleHotSpot.Cstr/VB/circlehotspot.cstrvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCoordinates">
      <MemberSignature Language="C#" Value="public override string GetCoordinates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetCoordinates() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CircleHotSpot.GetCoordinates" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCoordinates () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetCoordinates();" />
      <MemberSignature Language="F#" Value="override this.GetCoordinates : unit -&gt; string" Usage="circleHotSpot.GetCoordinates " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve una cadena que representa las coordenadas x e y del centro y la longitud del radio de un objeto <see cref="T:System.Web.UI.WebControls.CircleHotSpot" />.</summary>
        <returns>Cadena que representa las coordenadas x e y del centro y la longitud del radio de un objeto <see cref="T:System.Web.UI.WebControls.CircleHotSpot" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método utiliza los valores asignados a la <xref:System.Web.UI.WebControls.CircleHotSpot.X%2A> y <xref:System.Web.UI.WebControls.CircleHotSpot.Y%2A> propiedades para devolver las coordenadas del centro y el valor asignado a la <xref:System.Web.UI.WebControls.CircleHotSpot.Radius%2A> propiedad para devolver el radio.  
  
 El <xref:System.Web.UI.WebControls.CircleHotSpot.GetCoordinates%2A> método se usa internamente por ASP.NET para obtener el texto que se va a utilizar para las coordenadas de un <xref:System.Web.UI.WebControls.CircleHotSpot> cuando se representa.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear mediante declaración un <xref:System.Web.UI.WebControls.ImageMap> control que contiene dos <xref:System.Web.UI.WebControls.CircleHotSpot> objetos. Cuando un usuario hace clic en uno de los <xref:System.Web.UI.WebControls.CircleHotSpot> objetos, la <xref:System.Web.UI.WebControls.CircleHotSpot.GetCoordinates%2A> método devuelve sus coordenadas y los muestra al usuario. En este ejemplo funcione correctamente, debe proporcionar su propia imagen para la <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> propiedad y actualizar correctamente la ruta de acceso a la imagen para que la aplicación puede encontrarlo.  
  
 [!code-aspx-csharp[CircleHotSpot.GetCoordinates#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CircleHotSpot.GetCoordinates/CS/circlehotspot.getcoordinatescs.aspx#1)]
 [!code-aspx-vb[CircleHotSpot.GetCoordinates#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CircleHotSpot.GetCoordinates/VB/circlehotspot.getcoordinatesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CircleHotSpot.X" />
        <altmember cref="P:System.Web.UI.WebControls.CircleHotSpot.Y" />
        <altmember cref="P:System.Web.UI.WebControls.CircleHotSpot.Radius" />
      </Docs>
    </Member>
    <Member MemberName="MarkupName">
      <MemberSignature Language="C#" Value="protected internal override string MarkupName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MarkupName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CircleHotSpot.MarkupName" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property MarkupName As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::String ^ MarkupName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MarkupName : string" Usage="System.Web.UI.WebControls.CircleHotSpot.MarkupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Radius">
      <MemberSignature Language="C#" Value="public int Radius { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Radius" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CircleHotSpot.Radius" />
      <MemberSignature Language="VB.NET" Value="Public Property Radius As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Radius { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Radius : int with get, set" Usage="System.Web.UI.WebControls.CircleHotSpot.Radius" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la distancia del centro al borde de la región circular definida por este objeto <see cref="T:System.Web.UI.WebControls.CircleHotSpot" />.</summary>
        <value>Entero que representa la distancia, en píxeles, del centro al borde de la región circular definida por este objeto <see cref="T:System.Web.UI.WebControls.CircleHotSpot" />. El valor predeterminado es 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.CircleHotSpot.Radius%2A> propiedad le permite obtener o establecer un valor que representa la distancia en píxeles desde el centro hasta el borde de la región circular definida por este <xref:System.Web.UI.WebControls.CircleHotSpot> objeto. Para definir completamente un <xref:System.Web.UI.WebControls.CircleHotSpot> objeto, debe especificar un valor para el <xref:System.Web.UI.WebControls.CircleHotSpot.Radius%2A> propiedad, así como la <xref:System.Web.UI.WebControls.CircleHotSpot.X%2A> y <xref:System.Web.UI.WebControls.CircleHotSpot.Y%2A> propiedades.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear un <xref:System.Web.UI.WebControls.ImageMap> control que contiene dos <xref:System.Web.UI.WebControls.CircleHotSpot> objetos. Uno se crea mediante declaración; su <xref:System.Web.UI.WebControls.CircleHotSpot.X%2A>, <xref:System.Web.UI.WebControls.CircleHotSpot.Y%2A>, y <xref:System.Web.UI.WebControls.CircleHotSpot.Radius%2A> propiedades también se establecen mediante declaración. El otro se crea mediante programación y su <xref:System.Web.UI.WebControls.CircleHotSpot.X%2A>, <xref:System.Web.UI.WebControls.CircleHotSpot.Y%2A>, y <xref:System.Web.UI.WebControls.CircleHotSpot.Radius%2A> propiedades se establecen mediante programación. En este ejemplo funcione correctamente, debe proporcionar su propia imagen para la <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> propiedad y actualizar correctamente la ruta de acceso a la imagen para que la aplicación puede encontrarlo.  
  
 [!code-aspx-csharp[CircleHotSpot.Radius#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CircleHotSpot.Radius/CS/circlehotspot.radiuscs.aspx#1)]
 [!code-aspx-vb[CircleHotSpot.Radius#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CircleHotSpot.Radius/VB/circlehotspot.radiusvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El valor especificado es menor que 0.</exception>
        <altmember cref="P:System.Web.UI.WebControls.CircleHotSpot.X" />
        <altmember cref="P:System.Web.UI.WebControls.CircleHotSpot.Y" />
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public int X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 X" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CircleHotSpot.X" />
      <MemberSignature Language="VB.NET" Value="Public Property X As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int X { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.X : int with get, set" Usage="System.Web.UI.WebControls.CircleHotSpot.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la coordenada x del centro de la región circular definida por este objeto <see cref="T:System.Web.UI.WebControls.CircleHotSpot" />.</summary>
        <value>Coordenada x del centro de la región circular definida por este objeto <see cref="T:System.Web.UI.WebControls.CircleHotSpot" />. El valor predeterminado es 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.CircleHotSpot.X%2A> propiedad le permite obtener o establecer un valor que representa la coordenada x del centro de la región circular definida por este <xref:System.Web.UI.WebControls.CircleHotSpot> objeto. Para definir completamente un <xref:System.Web.UI.WebControls.CircleHotSpot> objeto, debe especificar un valor para el <xref:System.Web.UI.WebControls.CircleHotSpot.X%2A> propiedad, así como la <xref:System.Web.UI.WebControls.CircleHotSpot.Y%2A> y <xref:System.Web.UI.WebControls.CircleHotSpot.Radius%2A> propiedades.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear un <xref:System.Web.UI.WebControls.ImageMap> control que contiene dos <xref:System.Web.UI.WebControls.CircleHotSpot> objetos. Uno se crea mediante declaración; su <xref:System.Web.UI.WebControls.CircleHotSpot.X%2A>, <xref:System.Web.UI.WebControls.CircleHotSpot.Y%2A>, y <xref:System.Web.UI.WebControls.CircleHotSpot.Radius%2A> propiedades también se establecen mediante declaración. El otro se crea mediante programación y su <xref:System.Web.UI.WebControls.CircleHotSpot.X%2A>, <xref:System.Web.UI.WebControls.CircleHotSpot.Y%2A>, y <xref:System.Web.UI.WebControls.CircleHotSpot.Radius%2A> propiedades se establecen mediante programación. En este ejemplo funcione correctamente, debe proporcionar su propia imagen para la <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> propiedad y actualizar correctamente la ruta de acceso a la imagen para que la aplicación puede encontrarlo.  
  
 [!code-aspx-csharp[CircleHotSpot.Radius#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CircleHotSpot.Radius/CS/circlehotspot.radiuscs.aspx#1)]
 [!code-aspx-vb[CircleHotSpot.Radius#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CircleHotSpot.Radius/VB/circlehotspot.radiusvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CircleHotSpot.Y" />
        <altmember cref="P:System.Web.UI.WebControls.CircleHotSpot.Radius" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public int Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Y" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CircleHotSpot.Y" />
      <MemberSignature Language="VB.NET" Value="Public Property Y As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Y { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Y : int with get, set" Usage="System.Web.UI.WebControls.CircleHotSpot.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la coordenada y del centro de la región circular definida por este objeto <see cref="T:System.Web.UI.WebControls.CircleHotSpot" />.</summary>
        <value>Coordenada y del centro de la región circular definida por este objeto <see cref="T:System.Web.UI.WebControls.CircleHotSpot" />. El valor predeterminado es 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.CircleHotSpot.Y%2A> propiedad le permite obtener o establecer un valor que representa la coordenada y del centro de la región circular definida por este <xref:System.Web.UI.WebControls.CircleHotSpot> objeto. Para definir completamente un <xref:System.Web.UI.WebControls.CircleHotSpot> objeto, debe especificar un valor para el <xref:System.Web.UI.WebControls.CircleHotSpot.Y%2A> propiedad, así como la <xref:System.Web.UI.WebControls.CircleHotSpot.X%2A> y <xref:System.Web.UI.WebControls.CircleHotSpot.Radius%2A> propiedades.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear un <xref:System.Web.UI.WebControls.ImageMap> control que contiene dos <xref:System.Web.UI.WebControls.CircleHotSpot> objetos. Uno se crea mediante declaración; su <xref:System.Web.UI.WebControls.CircleHotSpot.X%2A>, <xref:System.Web.UI.WebControls.CircleHotSpot.Y%2A>, y <xref:System.Web.UI.WebControls.CircleHotSpot.Radius%2A> propiedades también se establecen mediante declaración. El otro se crea mediante programación y su <xref:System.Web.UI.WebControls.CircleHotSpot.X%2A>, <xref:System.Web.UI.WebControls.CircleHotSpot.Y%2A>, y <xref:System.Web.UI.WebControls.CircleHotSpot.Radius%2A> propiedades se establecen mediante programación. En este ejemplo funcione correctamente, debe proporcionar su propia imagen para la <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> propiedad y actualizar correctamente la ruta de acceso a la imagen para que la aplicación puede encontrarlo.  
  
 [!code-aspx-csharp[CircleHotSpot.Radius#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CircleHotSpot.Radius/CS/circlehotspot.radiuscs.aspx#1)]
 [!code-aspx-vb[CircleHotSpot.Radius#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CircleHotSpot.Radius/VB/circlehotspot.radiusvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CircleHotSpot.X" />
        <altmember cref="P:System.Web.UI.WebControls.CircleHotSpot.Radius" />
      </Docs>
    </Member>
  </Members>
</Type>