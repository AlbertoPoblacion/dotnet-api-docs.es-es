<Type Name="ImageButton" FullName="System.Web.UI.WebControls.ImageButton">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5a32d629a08858f6383dc899c0579fd7f1c116e2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30600269" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ImageButton : System.Web.UI.WebControls.Image, System.Web.UI.IPostBackDataHandler, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IButtonControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImageButton extends System.Web.UI.WebControls.Image implements class System.Web.UI.IPostBackDataHandler, class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.IButtonControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ImageButton" />
  <TypeSignature Language="VB.NET" Value="Public Class ImageButton&#xA;Inherits Image&#xA;Implements IButtonControl, IPostBackDataHandler, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImageButton : System::Web::UI::WebControls::Image, System::Web::UI::IPostBackDataHandler, System::Web::UI::IPostBackEventHandler, System::Web::UI::WebControls::IButtonControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Image</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IButtonControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.PreviewControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Control que muestra una imagen y responde a los clics del mouse en la imagen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En este tema:  
  
-   [Introducción](#introduction)  
  
-   [Determinar dónde hizo clic el usuario](#DeterminingWhereTheUserClicked)  
  
-   [Validación y controles ImageButton](#ButtonControlsAndValidation)  
  
-   [Accesibilidad](#accessibility)  
  
-   [Sintaxis declarativa](#DeclarativeSyntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introducción  
 Use el <xref:System.Web.UI.WebControls.ImageButton> control para mostrar una imagen que responde a los clics del mouse.  
  
 Tanto el <xref:System.Web.UI.WebControls.ImageButton.Click> y <xref:System.Web.UI.WebControls.ImageButton.Command> se generan eventos cuando el <xref:System.Web.UI.WebControls.ImageButton> se hace clic en el control.  
  
 Puede usar el <xref:System.Web.UI.WebControls.ImageButton.OnCommand%2A> controlador de eventos para realizar la <xref:System.Web.UI.WebControls.ImageButton> control se comportan como un botón de comando. Un nombre de comando puede estar asociado al control mediante el uso de la <xref:System.Web.UI.WebControls.ImageButton.CommandName%2A> propiedad. Esto permite que varios <xref:System.Web.UI.WebControls.ImageButton> controles de ubicarse en la misma página Web. El valor de la <xref:System.Web.UI.WebControls.ImageButton.CommandName%2A> propiedad, a continuación, se puede identificar mediante programación en el <xref:System.Web.UI.WebControls.ImageButton.OnCommand%2A> controlador de eventos para determinar la acción apropiada que debe realizarse cuando cada <xref:System.Web.UI.WebControls.ImageButton> se hace clic en el control. El <xref:System.Web.UI.WebControls.ImageButton.CommandArgument%2A> propiedad también puede utilizarse para pasar información adicional sobre el comando, como especificar el orden ascendente.  
  
 Mediante el <xref:System.Web.UI.WebControls.ImageButton> control es similar a usar ASP.NET <xref:System.Web.UI.WebControls.Button> control. Para obtener más información, consulte [mapa de contenido de los controles de botón Web Server](http://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf). y la información general de la clase para el <xref:System.Web.UI.WebControls.Button> control.  
  
<a name="DeterminingWhereTheUserClicked"></a>   
## <a name="determining-where-the-user-clicked"></a>Determinar dónde hizo clic el usuario  
 Mediante el uso de la <xref:System.Web.UI.WebControls.ImageButton.OnClick%2A> controlador de eventos, se pueden determinar mediante programación las coordenadas donde se hace clic en la imagen. A continuación, puede codificar una respuesta, en función de los valores de las coordenadas. Tenga en cuenta que el origen (0, 0) se encuentra en la esquina superior izquierda de la imagen.  
  
<a name="ButtonControlsAndValidation"></a>   
## <a name="imagebutton-controls-and-validation"></a>Validación y controles ImageButton  
 De forma predeterminada, se realiza la validación de la página cuando un <xref:System.Web.UI.WebControls.ImageButton> se hace clic en el control. Validación de la página determina si los controles de entrada asociada a un control de validación en la página que superan todas las reglas de validación especificadas por el control de validación. Para evitar que se produzca la validación de la página, establezca la <xref:System.Web.UI.WebControls.ImageButton.CausesValidation%2A> propiedad `false`.  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>Accesibilidad  
 Para obtener información acerca de cómo configurar este control para que genera el marcado que se ajusta a las normas de accesibilidad, consulte [accesibilidad en Visual Studio y ASP.NET](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) y [controles ASP.NET y accesibilidad](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="DeclarativeSyntax"></a>   
## <a name="declarative-syntax"></a>Sintaxis declarativa  
  
```  
<asp:ImageButton  
    AccessKey="string"  
    AlternateText="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CausesValidation="True|False"  
    CommandArgument="string"  
    CommandName="string"  
    CssClass="string"  
    DescriptionUrl="uri"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    ImageAlign="NotSet|Left|Right|Baseline|Top|Middle|Bottom|  
        AbsBottom|AbsMiddle|TextTop"  
    ImageUrl="uri"  
    OnClick="Click event handler"  
    OnClientClick="string"  
    OnCommand="Command event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    PostBackUrl="uri"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    ValidationGroup="string"  
    Visible="True|False"  
    Width="size"  
/>  
```  
  
   
  
## Examples  
 Un proyecto de sitio Web de Visual Studio con código fuente está disponible como acompañamiento de este tema: [descargar](http://go.microsoft.com/fwlink/?LinkId=192874).  
  
 En el ejemplo de código siguiente se muestra cómo crear un <xref:System.Web.UI.WebControls.ImageButton> control que muestra las coordenadas del punto en el que se hace clic en una imagen.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic ImageButton.Click Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic ImageButton.Click Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic ImageButton.Click Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic ImageButton.Click Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Button" />
    <altmember cref="T:System.Web.UI.WebControls.Image" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageButton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ImageButton.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImageButton();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.ImageButton" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este constructor para crear e inicializar una nueva instancia de la <xref:System.Web.UI.WebControls.ImageButton> clase.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo crear e inicializar una nueva instancia de la <xref:System.Web.UI.WebControls.ImageButton> clase.  
  
 [!code-csharp[Classic ImageButton.ImageButton Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic ImageButton.ImageButton Example/CS/source.cs#1)]
 [!code-vb[Classic ImageButton.ImageButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic ImageButton.ImageButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ImageButton.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Flujo de salida que se va a representar en el cliente.</param>
        <summary>Agrega los atributos de la clase <see cref="T:System.Web.UI.WebControls.ImageButton" /> al flujo de salida para su representación en el cliente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ImageButton.OnPreRender%2A> método la usan principalmente los programadores de controles al derivar una clase personalizada desde el <xref:System.Web.UI.WebControls.ImageButton> control.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.WebControls.ImageButton.AddAttributesToRender%2A> método en un control de servidor personalizado para que el <xref:System.Web.UI.WebControls.ImageButton> texto siempre aparece con un borde fino.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. La primera parte de este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. La segunda parte se debe guardar como un archivo de código (.cs para C#) o .vb para Visual Basic. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[CustomImageButtonAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomImageButtonAddAttributesToRender/CS/custom_imagebutton_addattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomImageButtonAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomImageButtonAddAttributesToRender/VB/custom_imagebutton_addattributestorendervb.aspx#1)]  
[!code-csharp[CustomImageButtonAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomImageButtonAddAttributesToRender/CS/custom_imagebutton_addattributestorender.cs#2)]
[!code-vb[CustomImageButtonAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomImageButtonAddAttributesToRender/VB/custom_imagebutton_addattributestorender.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ImageButton.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CausesValidation</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si la validación se realiza al hacer clic en el control <see cref="T:System.Web.UI.WebControls.ImageButton" />.</summary>
        <value>
          Es <see langword="true" /> si se realiza la validación cuando se hace clic en el control <see cref="T:System.Web.UI.WebControls.ImageButton" />; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada, se realiza la validación de la página cuando un <xref:System.Web.UI.WebControls.ImageButton> se hace clic en el control. Validación de la página determina si los controles de entrada asociada a un control de validación en la página que superan todas las reglas de validación especificadas por el control de validación.  
  
 Puede especificar o determinar si se realiza la validación en el cliente y el servidor cuando una <xref:System.Web.UI.WebControls.ImageButton> control se hace clic en usando el <xref:System.Web.UI.WebControls.ImageButton.CausesValidation%2A> propiedad. Para evitar que se realice la validación, establezca la <xref:System.Web.UI.WebControls.ImageButton.CausesValidation%2A> propiedad `false`.  
  
 Esta propiedad se establece normalmente en `false` para un botón Borrar o restablecimiento impedir que la validación se realiza cuando se hace clic en el botón.  
  
 Cuando el valor de la <xref:System.Web.UI.WebControls.ImageButton.CausesValidation%2A> propiedad está establecida en `true`, también puede usar el <xref:System.Web.UI.WebControls.ImageButton.ValidationGroup%2A> propiedad para especificar el nombre del grupo de validación para el que el <xref:System.Web.UI.WebControls.ImageButton> control ejecuta la validación.  
  
 Esta propiedad no se puede establecer mediante temas o temas de la hoja de estilos. Para obtener más información, consulte <xref:System.Web.UI.ThemeableAttribute> y [ASP.NET temas y máscaras](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.ImageButton.CausesValidation%2A> propiedad para evitar que se produzca la validación de la página. Observe cómo el <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> método activa cada control de validación de forma independiente.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[ImageButtonCausesValidation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ImageButtonCausesValidation/CS/imagebuttoncausesvalidationcs.aspx#1)]
 [!code-aspx-vb[ImageButtonCausesValidation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ImageButtonCausesValidation/VB/imagebuttoncausesvalidationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.WebControls.ImageButton.ValidationGroup" />
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event System.Web.UI.ImageClickEventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.ImageClickEventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ImageButton.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As ImageClickEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::ImageClickEventHandler ^ Click;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ImageClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando se hace clic en <see cref="T:System.Web.UI.WebControls.ImageButton" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ImageButton.Click> evento se desencadena cuando el <xref:System.Web.UI.WebControls.ImageButton> se hace clic en el control.  
  
> [!NOTE]
>  Este evento hace que la página se envíe al servidor.  
  
 Para obtener más información sobre el control de eventos, vea [Cómo: consumir eventos en una aplicación de formularios Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo especificar y codificar un controlador para el <xref:System.Web.UI.WebControls.ImageButton.Click> eventos para mostrar las coordenadas en el que el usuario hace clic en la imagen.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic ImageButton.Click Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic ImageButton.Click Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic ImageButton.Click Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic ImageButton.Click Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ImageButton.OnClick(System.Web.UI.ImageClickEventArgs)" />
        <altmember cref="T:System.Web.UI.ImageClickEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.CommandEventHandler Command;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.CommandEventHandler Command" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ImageButton.Command" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Command As CommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Web::UI::WebControls::CommandEventHandler ^ Command;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.WebControls.IButtonControl.Command</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.CommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando se hace clic en <see cref="T:System.Web.UI.WebControls.ImageButton" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ImageButton.Command> evento se desencadena cuando una <xref:System.Web.UI.WebControls.ImageButton> se hace clic en el control.  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.ImageButton.Command> evento se desencadena a través de la jerarquía de control en el formulario de la `BubbleEvent`.  
  
> [!NOTE]
>  Este evento hace que la página enviar datos al servidor.  
  
 Para obtener más información sobre el control de eventos, vea [Cómo: consumir eventos en una aplicación de formularios Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo especificar y codificar un controlador para el <xref:System.Web.UI.WebControls.ImageButton.Command> eventos para determinar qué <xref:System.Web.UI.WebControls.ImageButton> se hace clic en el control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic ImageButton.CommandArgument Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic ImageButton.CommandArgument Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic ImageButton.CommandArgument Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic ImageButton.CommandArgument Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ImageButton.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="CommandArgument">
      <MemberSignature Language="C#" Value="public string CommandArgument { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandArgument" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ImageButton.CommandArgument" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandArgument As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandArgument { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CommandArgument</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un argumento opcional que facilita información adicional sobre la propiedad <see cref="P:System.Web.UI.WebControls.ImageButton.CommandName" />.</summary>
        <value>Argumento opcional que complementa la propiedad <see cref="P:System.Web.UI.WebControls.ImageButton.CommandName" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En ocasiones, varios <xref:System.Web.UI.WebControls.ImageButton> controles están relacionados y comparten el mismo valor para la <xref:System.Web.UI.WebControls.ImageButton.CommandName%2A> propiedad, como `Sort`. Utilice esta propiedad para complementar la <xref:System.Web.UI.WebControls.ImageButton.CommandName%2A> propiedad con información adicional sobre el comando para llevar a cabo, como `Ascending`. Los valores de la <xref:System.Web.UI.WebControls.ImageButton.CommandName%2A> y <xref:System.Web.UI.WebControls.ImageButton.CommandArgument%2A> propiedades se utilizan habitualmente en el <xref:System.Web.UI.WebControls.ImageButton.OnCommand%2A> controlador de eventos para determinar la acción que se realizará cuando el <xref:System.Web.UI.WebControls.ImageButton> se hace clic en el control.  
  
 Esta propiedad no se puede establecer mediante temas o temas de la hoja de estilos. Para obtener más información, consulte <xref:System.Web.UI.ThemeableAttribute> y [ASP.NET temas y máscaras](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.ImageButton.CommandArgument%2A> propiedad para asociar un argumento de comando con un <xref:System.Web.UI.WebControls.ImageButton> control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic ImageButton.CommandArgument Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic ImageButton.CommandArgument Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic ImageButton.CommandArgument Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic ImageButton.CommandArgument Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ImageButton.CommandName" />
        <altmember cref="M:System.Web.UI.WebControls.ImageButton.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.Button" />
        <altmember cref="T:System.Web.UI.WebControls.Image" />
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public string CommandName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ImageButton.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CommandName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre de comando asociado al control <see cref="T:System.Web.UI.WebControls.ImageButton" />.</summary>
        <value>Nombre de comando asociado al control <see cref="T:System.Web.UI.WebControls.ImageButton" />. El valor predeterminado es <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice esta propiedad para especificar el comando que debe realizarse cuando la <xref:System.Web.UI.WebControls.ImageButton> control se hace clic en, como `Sort`, `Cancel`, o `Edit`. Esto permite que varios <xref:System.Web.UI.WebControls.ImageButton> controles de ubicarse en la misma página Web. A continuación, se puede identificar mediante programación el valor de esta propiedad en el <xref:System.Web.UI.WebControls.ImageButton.OnCommand%2A> controlador de eventos para determinar la acción apropiada que debe realizarse cuando cada <xref:System.Web.UI.WebControls.ImageButton> se hace clic en el control.  
  
 Se puede incluir información complementaria acerca del comando, como especificar el criterio de ordenación ascendente, mediante el uso de la <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> propiedad.  
  
 Esta propiedad no se puede establecer mediante temas o temas de la hoja de estilos. Para obtener más información, consulte <xref:System.Web.UI.ThemeableAttribute> y [ASP.NET temas y máscaras](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.ImageButton.CommandName%2A> propiedad para asociar un nombre de comando con un <xref:System.Web.UI.WebControls.ImageButton> control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic ImageButton.CommandName Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic ImageButton.CommandName Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic ImageButton.CommandName Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic ImageButton.CommandName Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandArgument" />
        <altmember cref="M:System.Web.UI.WebControls.ImageButton.OnClick(System.Web.UI.ImageClickEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public override bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ImageButton.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se puede hacer clic en el control <see cref="T:System.Web.UI.WebControls.ImageButton" /> para devolver datos al servidor.</summary>
        <value>
          Es <see langword="true" /> si el control está habilitado; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.ImageButton.Enabled%2A> propiedad para especificar si una <xref:System.Web.UI.WebControls.ImageButton> puede hacer clic para realizar un envío al servidor. Si establece esta propiedad en `false`, el control se representa en la página, pero no genera un evento de devolución al hacer clic en.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.ImageButton.Enabled%2A> propiedad. La página contiene dos <xref:System.Web.UI.WebControls.ImageButton> controles. El <xref:System.Web.UI.WebControls.ImageButton.Enabled%2A> propiedad está establecida en `true` para el `EnabledImageButton` botón de imagen, provocando que devolver datos al servidor cuando se hace clic en. El <xref:System.Web.UI.WebControls.ImageButton.Enabled%2A> propiedad está establecida en `false` para el `NotEnabledImageButton` botón de imagen, provocando que se representan en la página, pero no se envía al servidor cuando haga clic en.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[ImageButton.Enabled#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ImageButton.Enabled/CS/imagebutton.enabledcs.aspx#1)]
 [!code-aspx-vb[ImageButton.Enabled#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ImageButton.Enabled/VB/imagebutton.enabledvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateEmptyAlternateText">
      <MemberSignature Language="C#" Value="public override bool GenerateEmptyAlternateText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateEmptyAlternateText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ImageButton.GenerateEmptyAlternateText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property GenerateEmptyAlternateText As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool GenerateEmptyAlternateText { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el control genera un atributo de texto alternativo para un valor de cadena vacía.</summary>
        <value>
          <see langword="false" /> indica que el control <see cref="T:System.Web.UI.WebControls.ImageButton" /> no genera un atributo de texto alternativo cuando la propiedad <see cref="P:System.Web.UI.WebControls.Image.AlternateText" /> está vacía.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada, el <xref:System.Web.UI.WebControls.ImageButton> control representa el <xref:System.Web.UI.WebControls.Image.AlternateText%2A> propiedad mediante un `alt` atributo. Cuando el <xref:System.Web.UI.WebControls.Image.AlternateText%2A> propiedad no está establecida, el <xref:System.Web.UI.WebControls.ImageButton> control no incluye el `alt` atributo para especificar el texto alternativo en la representación del control.  
  
 La definición de tipo de documento XHTML requiere el `alt` atributos en controles de imagen. Sin embargo, procedimientos recomendados de accesibilidad que los controles de imagen que no contienen información relevante para el contexto de la página Web no deben especificar un `alt` atributo. Puede cumplir los requisitos de XHTML y accesibilidad estableciendo la <xref:System.Web.UI.WebControls.Image.AlternateText%2A> propiedad `true`.  
  
 Esta propiedad no se puede establecer mediante temas o temas de la hoja de estilos. Para obtener más información, consulte <xref:System.Web.UI.ThemeableAttribute> y [ASP.NET temas y máscaras](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Se ha intentado establecer esta propiedad.</exception>
        <altmember cref="P:System.Web.UI.WebControls.Image.AlternateText" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackOptions">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.PostBackOptions GetPostBackOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.PostBackOptions GetPostBackOptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ImageButton.GetPostBackOptions" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetPostBackOptions () As PostBackOptions" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::PostBackOptions ^ GetPostBackOptions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un objeto <see cref="T:System.Web.UI.PostBackOptions" /> que representa el comportamiento de postback del control <see cref="T:System.Web.UI.WebControls.ImageButton" />.</summary>
        <returns>Un <see cref="T:System.Web.UI.PostBackOptions" /> que representa el comportamiento de postback del control <see cref="T:System.Web.UI.WebControls.ImageButton" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ImageButton.GetPostBackOptions%2A> método crea un <xref:System.Web.UI.PostBackOptions> objeto que representa la <xref:System.Web.UI.WebControls.ImageButton> comportamiento de devolución de datos del control. El <xref:System.Web.UI.PostBackOptions> objeto, a continuación, se pasa normalmente a la <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=nameWithType> método, que se utiliza para obtener una referencia a una función de script de cliente que, cuando se invoca, hace que el servidor envíe de nuevo a la página.  
  
 Este método se usa principalmente los programadores de controles al extender la <xref:System.Web.UI.WebControls.ImageButton> clase.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Puede invalidar el <see cref="M:System.Web.UI.WebControls.ImageButton.GetPostBackOptions" /> método en su clase derivada para modificar las opciones de devolución de datos para el control de botón, o para llamar al script de cliente cuando se hace clic en el botón. No olvide llamar a la clase base <see cref="M:System.Web.UI.WebControls.ImageButton.GetPostBackOptions" /> método para que se establecen las opciones de devolución de datos estándar.</para>
        </block>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ImageButton.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Valor de clave usado para indizar una entrada de la colección.</param>
        <param name="postCollection">
          <see cref="T:System.Collections.Specialized.NameValueCollection" /> que contiene información de envío.</param>
        <summary>Procesa los datos expuestos para el control <see cref="T:System.Web.UI.WebControls.ImageButton" />.</summary>
        <returns>Devuelve <see langword="false" /> en todos los casos.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ImageButton.LoadPostData%2A> miembro se usa principalmente los programadores de controles al derivar una clase personalizada de la <xref:System.Web.UI.WebControls.ImageButton> control.  
  
 El <xref:System.Web.UI.WebControls.ImageButton> comprueba si x e y se registran los valores, lo que indica que la imagen se ha hecho clic el usuario. El <xref:System.Web.UI.WebControls.ImageButton> , a continuación, se registra con la página que se va a generar un evento durante la fase de procesamiento de eventos.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.NameValueCollection" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (System.Web.UI.ImageClickEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.Web.UI.ImageClickEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ImageButton.OnClick(System.Web.UI.ImageClickEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As ImageClickEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(System::Web::UI::ImageClickEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.ImageClickEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Web.UI.ImageClickEventArgs" /> que contiene los datos del evento.</param>
        <summary>Provoca el evento <see cref="E:System.Web.UI.WebControls.ImageButton.Click" /> y permite controlar directamente el evento <see cref="E:System.Web.UI.WebControls.ImageButton.Click" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ImageButton.Click> evento se desencadena cuando el <xref:System.Web.UI.WebControls.ImageButton> se hace clic en el control. Mediante el uso de la <xref:System.Web.UI.WebControls.ImageButton.OnClick%2A> controlador de eventos, se pueden determinar mediante programación las coordenadas donde se hace clic en la imagen. A continuación, puede codificar una respuesta, en función de los valores de estas coordenadas. Tenga en cuenta que el origen (0, 0) se encuentra en la esquina superior izquierda de la imagen.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [Cómo: consumir eventos en una aplicación de formularios Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 El método <xref:System.Web.UI.WebControls.ImageButton.OnClick%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo especificar y codificar un controlador para el <xref:System.Web.UI.WebControls.ImageButton.Click> eventos para mostrar las coordenadas donde el usuario hace clic en la imagen.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic ImageButton.Click Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic ImageButton.Click Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic ImageButton.Click Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic ImageButton.Click Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar <see cref="M:System.Web.UI.WebControls.ImageButton.OnClick(System.Web.UI.ImageClickEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Web.UI.WebControls.ImageButton.OnClick(System.Web.UI.ImageClickEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ImageButton.Click" />
        <altmember cref="T:System.Web.UI.ImageClickEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnClientClick">
      <MemberSignature Language="C#" Value="public virtual string OnClientClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnClientClick" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ImageButton.OnClientClick" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property OnClientClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OnClientClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el script de cliente que se ejecuta cuando se genera un evento <see cref="T:System.Web.UI.WebControls.ImageButton" /> de un control <see cref="E:System.Web.UI.WebControls.ImageButton.Click" />.</summary>
        <value>Script de cliente que se ejecuta cuando se genera el evento <see cref="T:System.Web.UI.WebControls.ImageButton" /> de un control <see cref="E:System.Web.UI.WebControls.ImageButton.Click" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.ImageButton.OnClientClick%2A> propiedad para especificar un script de cliente adicional que se ejecuta cuando un <xref:System.Web.UI.WebControls.ImageButton> del control <xref:System.Web.UI.WebControls.ImageButton.Click> evento se desencadena. La secuencia de comandos que especifique para esta propiedad se representa en el <xref:System.Web.UI.WebControls.ImageButton> del control `OnClick` predefinidos de atributo, además del control del script de cliente.  
  
 Esta propiedad no se puede establecer mediante temas o temas de la hoja de estilos. Para obtener más información, consulte <xref:System.Web.UI.ThemeableAttribute> y [ASP.NET temas y máscaras](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ImageButton.Click" />
      </Docs>
    </Member>
    <Member MemberName="OnCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnCommand (System.Web.UI.WebControls.CommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCommand(class System.Web.UI.WebControls.CommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ImageButton.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCommand (e As CommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCommand(System::Web::UI::WebControls::CommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.CommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> que contiene los datos del evento.</param>
        <summary>Provoca el evento <see cref="E:System.Web.UI.WebControls.ImageButton.Command" /> y permite controlar directamente el evento <see cref="E:System.Web.UI.WebControls.ImageButton.Command" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ImageButton.Command> evento se desencadena cuando el <xref:System.Web.UI.WebControls.ImageButton> se hace clic en el control. El <xref:System.Web.UI.WebControls.ImageButton.OnCommand%2A> controlador de eventos se utiliza para realizar la <xref:System.Web.UI.WebControls.ImageButton> control se comportan como un botón de comando. Un nombre de comando puede estar asociado al control mediante el uso de la <xref:System.Web.UI.WebControls.ImageButton.CommandName%2A> propiedad. Esto permite que varios <xref:System.Web.UI.WebControls.ImageButton> controles de ubicarse en la página Web. A continuación, se puede identificar mediante programación el valor de esta propiedad en el <xref:System.Web.UI.WebControls.ImageButton.OnCommand%2A> controlador de eventos para determinar la acción apropiada que debe realizarse cuando cada <xref:System.Web.UI.WebControls.ImageButton> se hace clic en el control. El <xref:System.Web.UI.WebControls.ImageButton.CommandArgument%2A> propiedad también puede utilizarse para pasar información adicional sobre el comando, como especificar el orden ascendente.  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.ImageButton.Command> evento se desencadena a través de la jerarquía de control en el formulario de la `BubbleEvent`.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [Cómo: consumir eventos en una aplicación de formularios Web](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 El método <xref:System.Web.UI.WebControls.ImageButton.OnCommand%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo especificar y codificar un controlador para el <xref:System.Web.UI.WebControls.ImageButton.Command> eventos para determinar qué <xref:System.Web.UI.WebControls.ImageButton> se hace clic en el control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic ImageButton.CommandArgument Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic ImageButton.CommandArgument Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic ImageButton.CommandArgument Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic ImageButton.CommandArgument Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar <see cref="M:System.Web.UI.WebControls.ImageButton.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Web.UI.WebControls.ImageButton.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ImageButton.Command" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ImageButton.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Determina si se ha hecho clic en la imagen antes de representarla en el cliente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ImageButton.OnPreRender%2A> método la usan principalmente los programadores de controles al derivar una clase personalizada desde el <xref:System.Web.UI.WebControls.ImageButton> control.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.WebControls.ImageButton.OnPreRender%2A> método por lo que TI siempre muestra un borde fino en un personalizado <xref:System.Web.UI.WebControls.ImageButton> control de servidor.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. La primera parte del ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. La segunda parte debe estar en un archivo .cs (para C#) o un archivo .vb (para Visual Basic). Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[CustomImageButtonOnPreRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomImageButtonOnPreRender/CS/custom_imagebutton_onprerendercs.aspx#1)]
 [!code-aspx-vb[CustomImageButtonOnPreRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomImageButtonOnPreRender/VB/custom_imagebutton_onprerendervb.aspx#1)]  
[!code-csharp[CustomImageButtonOnPreRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomImageButtonOnPreRender/CS/custom_imagebutton_onprerender.cs#2)]
[!code-vb[CustomImageButtonOnPreRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomImageButtonOnPreRender/VB/custom_imagebutton_onprerender.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostBackUrl">
      <MemberSignature Language="C#" Value="public virtual string PostBackUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PostBackUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ImageButton.PostBackUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PostBackUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PostBackUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.PostBackUrl</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty("*.aspx")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la dirección URL de la página de destino del envío desde la página actual cuando se hace clic en el control <see cref="T:System.Web.UI.WebControls.ImageButton" />.</summary>
        <value>La dirección URL de la página Web de destino del envío desde la página actual cuando se hace clic en el control <see cref="T:System.Web.UI.WebControls.ImageButton" />. El valor predeterminado es una cadena vacía ("") que hace que la página se devuelva datos a sí misma.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ImageButton.PostBackUrl%2A> propiedad le permite realizar una página de entre post con el <xref:System.Web.UI.WebControls.ImageButton> control. Establecer el <xref:System.Web.UI.WebControls.ImageButton.PostBackUrl%2A> propiedad a la dirección URL de la página Web para exponer cuando la <xref:System.Web.UI.WebControls.ImageButton> se hace clic en el control. Por ejemplo, si se especifica `Page2.aspx` hace que la página que contiene el <xref:System.Web.UI.WebControls.ImageButton> control a `Page2.aspx`. Si no especifica un valor para el <xref:System.Web.UI.WebControls.ImageButton.PostBackUrl%2A> entradas de la página de propiedad, volver a sí mismo.  
  
> [!IMPORTANT]
>  Cuando se realiza una devolución de datos entre páginas con controles de validación del lado servidor, debe comprobar que la página <xref:System.Web.UI.Page.IsValid%2A> propiedad es `true` antes de procesar la devolución de datos. En el caso de una devolución de datos entre páginas, la página para comprobar es la PreviousPage. El siguiente código de Visual Basic muestra cómo hacerlo:  
  
```  
Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load  
        If Page.PreviousPage.IsValid Then  
            ' Handle the post back  
        Else  
            Response.Write("Invalid")  
        End If  
End Sub  
```  
  
 Para obtener más información sobre las técnicas de envío entre páginas, vea [envío entre páginas de formularios Web Forms de ASP.NET](http://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b).  
  
 Esta propiedad no se puede establecer mediante temas o temas de la hoja de estilos. Para obtener más información, consulte <xref:System.Web.UI.ThemeableAttribute> y [ASP.NET temas y máscaras](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.ImageButton.PostBackUrl%2A> propiedad que se va a realizar un envío entre páginas. Cuando el usuario hace clic en el <xref:System.Web.UI.WebControls.ImageButton> (control), la página envía el valor introducido en el cuadro de texto a la página de destino especificada por el <xref:System.Web.UI.WebControls.ImageButton.PostBackUrl%2A> propiedad. Para ejecutar este ejemplo, también debe crear un archivo para la página de destino en el mismo directorio que este ejemplo de código. En el ejemplo siguiente, se proporciona el código de la página de destino.  
  
 [!code-aspx-csharp[ImageButton.PostBackUrlProperty#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ImageButton.PostBackUrlProperty/CS/imagebutton.postbackurlpropertycs.aspx#1)]
 [!code-aspx-vb[ImageButton.PostBackUrlProperty#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ImageButton.PostBackUrlProperty/VB/imagebutton.postbackurlpropertyvb.aspx#1)]  
  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.Page.PreviousPage%2A?displayProperty=nameWithType> propiedad para tener acceso a un valor que se ha registrado desde otra página mediante la <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> propiedad. Esta página obtiene la cadena que se ha registrado desde la página anterior y muestra al usuario. Si intenta ejecutar este ejemplo de código directamente, obtendrá un error porque el valor de la `Text` campo será `null`. En su lugar, use este código para crear una página de destino y coloque el archivo en el mismo directorio que el código para el ejemplo anterior. El nombre del archivo debe corresponder al valor especificado para el <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> propiedad en el ejemplo anterior. Al ejecutar el código para el ejemplo anterior, esta página ejecutará automáticamente cuando se produce el envío de datos entre páginas.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[ImageButton.PostBackUrlPage2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ImageButton.PostBackUrlPage2/CS/imagebutton.postbackurlpage2cs.aspx#1)]
 [!code-aspx-vb[ImageButton.PostBackUrlPage2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ImageButton.PostBackUrlPage2/VB/imagebutton.postbackurlpage2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.PreviousPage" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ImageButton.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Argumento para el evento.</param>
        <summary>Genera eventos para el control <see cref="T:System.Web.UI.WebControls.ImageButton" /> cuando devuelve datos al servidor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ImageButton.RaisePostBackEvent%2A> miembro se usa principalmente los programadores de controles al derivar una clase personalizada de la <xref:System.Web.UI.WebControls.ImageButton> control.  
  
 Este método se usa internamente el <xref:System.Web.UI.WebControls.ImageButton> control, cuando se hace clic, para generar un <xref:System.Web.UI.WebControls.ImageButton.Click> eventos y, si ha definido, un <xref:System.Web.UI.WebControls.ImageButton.Command> eventos.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ImageButton.CommandName" />
        <altmember cref="E:System.Web.UI.WebControls.ImageButton.Click" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ImageButton.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostDataChangedEvent();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Notifica a la aplicación de ASP.NET que el estado del control <see cref="T:System.Web.UI.WebControls.ImageButton" /> cambió.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ImageButton.RaisePostDataChangedEvent%2A> miembro se usa principalmente los programadores de controles al derivar una clase personalizada de la <xref:System.Web.UI.WebControls.ImageButton> control.  
  
 Este método puede invalidarse en una clase derivada para provocar eventos de cambio para el <xref:System.Web.UI.WebControls.ImageButton> controlar cuando envía al servidor.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsDisabledAttribute">
      <MemberSignature Language="C#" Value="public override bool SupportsDisabledAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDisabledAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ImageButton.SupportsDisabledAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SupportsDisabledAttribute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDisabledAttribute { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el control debe establecer en "disabled" el atributo <see langword="disabled" /> del elemento HTML representado cuando el valor de la propiedad <see cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" /> del control es <see langword="false" />.</summary>
        <value>
          <see langword="true" /> Si el <see cref="P:System.Web.UI.Control.RenderingCompatibility" /> propiedad indica una versión ASP.NET anterior a <c>4.0</c>; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad indica cómo ASP.NET debe presentar HTML para un control cuando el control está deshabilitado. Si esta propiedad es `true`, ASP.NET presenta un `disabled` atributo cuando un control está deshabilitado. Si esta propiedad es `false`, ASP.NET presenta un `class` atributo cuando un control está deshabilitado. Para obtener más información, vea <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.DisabledCssClass" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ImageButton.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Identificador de clave del control que se usa para indexar <c>postCollection</c>.</param>
        <param name="postCollection">Una colección <see cref="T:System.Collections.Specialized.NameValueCollection" /> que contiene información de valores indizada mediante identificadores de control.</param>
        <summary>Para una descripción de este miembro, vea <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />.</summary>
        <returns>
          <see langword="true" /> si el estado del control del servidor cambió a consecuencia del postback; en caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A?displayProperty=nameWithType> método es una implementación de miembro de interfaz explícita. Solo se puede utilizar cuando la instancia de <xref:System.Web.UI.WebControls.ImageButton> se convierte en una interfaz <xref:System.Web.UI.IPostBackDataHandler>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ImageButton.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Para una descripción de este miembro, vea <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A?displayProperty=nameWithType> método es una implementación de miembro de interfaz explícita. Solo se puede utilizar cuando la instancia de <xref:System.Web.UI.WebControls.ImageButton> se convierte en una interfaz <xref:System.Web.UI.IPostBackDataHandler>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ImageButton.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Argumento para el evento.</param>
        <summary>Para una descripción de este miembro, vea <see cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A?displayProperty=nameWithType> método es una implementación de miembro de interfaz explícita. Solo se puede utilizar cuando la instancia de <xref:System.Web.UI.WebControls.ImageButton> se convierte en una interfaz <xref:System.Web.UI.IPostBackEventHandler>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IButtonControl.Click">
      <MemberSignature Language="C#" Value="event EventHandler System.Web.UI.WebControls.IButtonControl.Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler System.Web.UI.WebControls.IButtonControl.Click" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ImageButton.System#Web#UI#WebControls#IButtonControl#Click" />
      <MemberSignature Language="VB.NET" Value="Custom Event Click As EventHandler Implements System.Web.UI.WebControls.IButtonControl" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.WebControls.IButtonControl.Click</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IButtonControl.Text">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IButtonControl.Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IButtonControl.Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ImageButton.System#Web#UI#WebControls#IButtonControl#Text" />
      <MemberSignature Language="VB.NET" Value=" Property Text As String Implements IButtonControl.Text" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System.Web.UI.WebControls.IButtonControl.Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.Text</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Para una descripción de este miembro, vea <see cref="P:System.Web.UI.WebControls.IButtonControl.Text" />.</summary>
        <value>Leyenda de texto que se muestra para el botón.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.IButtonControl.Text%2A> miembro es una implementación de miembro de interfaz explícita. Solo se puede utilizar cuando la instancia de <xref:System.Web.UI.WebControls.ImageButton> se convierte en una interfaz <xref:System.Web.UI.WebControls.IButtonControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ImageButton.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor de <see cref="T:System.Web.UI.HtmlTextWriterTag" /> correspondiente al control <see cref="T:System.Web.UI.WebControls.ImageButton" />.</summary>
        <value>Valor de enumeración <see cref="T:System.Web.UI.HtmlTextWriterTag" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ImageButton.TagKey%2A> propiedad la usan principalmente los programadores de controles al derivar una clase personalizada desde el <xref:System.Web.UI.WebControls.ImageButton> control.  
  
 Use la <xref:System.Web.UI.WebControls.ImageButton.TagKey%2A> propiedad para determinar el <xref:System.Web.UI.HtmlTextWriterTag> valor asociado a un <xref:System.Web.UI.WebControls.ImageButton> control. Esta propiedad reemplaza la implementación base para devolver siempre `HtmlTextWriterTag.Input`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.WebControls.ImageButton.TagKey%2A> método en un personalizado <xref:System.Web.UI.WebControls.ImageButton> controlar de manera que siempre devuelve una etiqueta de entrada.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. La primera parte del ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. La segunda parte debe estar en un archivo .cs (para C#) o un archivo .vb (para Visual Basic). Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[CustomImageButtonTagKey#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomImageButtonTagKey/CS/custom_imagebutton_tagkeycs.aspx#1)]
 [!code-aspx-vb[CustomImageButtonTagKey#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomImageButtonTagKey/VB/custom_imagebutton_tagkeyvb.aspx#1)]  
[!code-csharp[CustomImageButtonTagKey#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomImageButtonTagKey/CS/custom_imagebutton_tagkey.cs#2)]
[!code-vb[CustomImageButtonTagKey#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomImageButtonTagKey/VB/custom_imagebutton_tagkey.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="protected virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ImageButton.Text" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.Text</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el valor de la propiedad <see cref="T:System.Web.UI.WebControls.ImageButton" /> del control <see cref="P:System.Web.UI.WebControls.Image.AlternateText" />.</summary>
        <value>Valor de la propiedad <see cref="T:System.Web.UI.WebControls.ImageButton" /> del control <see cref="P:System.Web.UI.WebControls.Image.AlternateText" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ImageButton.Text%2A> propiedad no está diseñada para llamarlo directamente desde el código.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Image.AlternateText" />
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ImageButton.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.ValidationGroup</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el grupo de controles para los que el control <see cref="T:System.Web.UI.WebControls.ImageButton" /> ejecuta la validación cuando realiza devoluciones al servidor.</summary>
        <value>Grupo de controles para los que el control <see cref="T:System.Web.UI.WebControls.ImageButton" /> ejecuta la validación cuando realiza devoluciones al servidor. El valor predeterminado es una cadena vacía ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Grupos de validación permiten asignar controles de validación de una página a una categoría específica. Cada grupo de validación se puede validar independientemente de otros grupos de validación en la página. Use la <xref:System.Web.UI.WebControls.ImageButton.ValidationGroup%2A> propiedad para especificar el nombre del grupo de validación para el que el <xref:System.Web.UI.WebControls.ImageButton> control ejecuta una validación cuando devuelve datos al servidor. Esta propiedad no tiene un efecto solo cuando el valor de la <xref:System.Web.UI.WebControls.ImageButton.CausesValidation%2A> propiedad está establecida en `true`. Cuando se especifica un valor para el <xref:System.Web.UI.WebControls.ImageButton.ValidationGroup%2A> son de propiedad, los controles de validación que forman parte del grupo especificado cuando valida el <xref:System.Web.UI.WebControls.ImageButton> control devuelve datos al servidor. Si no especifica un valor para esta propiedad y la <xref:System.Web.UI.WebControls.ImageButton.CausesValidation%2A> propiedad está establecida en `true`, todos los controles de validación en la página que no están asignados a un grupo de validación se validan cuando el control devuelve datos al servidor.  
  
 Esta propiedad no se puede establecer mediante temas o temas de la hoja de estilos. Para obtener más información, consulte <xref:System.Web.UI.ThemeableAttribute> y [ASP.NET temas y máscaras](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.ImageButton.ValidationGroup%2A> propiedad para especificar los controles para validar cuando un <xref:System.Web.UI.WebControls.ImageButton> control devuelve datos al servidor. La página contiene tres cuadros de texto para capturar los datos del usuario y tres <xref:System.Web.UI.WebControls.RequiredFieldValidator> controles para asegurarse de que el usuario no deje un cuadro de texto en blanco. El <xref:System.Web.UI.WebControls.RequiredFieldValidator> controla los primeros dos cuadros de texto están en el `PersonalInfoGroup` grupo de validación y el <xref:System.Web.UI.WebControls.RequiredFieldValidator> controlar el tercer cuadro de texto se encuentra en la `LocationInfoGroup` grupo de validación. Cuando `ImageButton1` se hace clic en, solo los controles de grupo de validación `PersonalInfoGroup` se validan. Cuando `ImageButton2` se hace clic en, solo el control de grupo de validación `LocationInfoGroup` se valida.  
  
 [!code-aspx-csharp[ImageButton.ValidationGroup#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ImageButton.ValidationGroup/CS/imagebutton.validationgroupcs.aspx#1)]
 [!code-aspx-vb[ImageButton.ValidationGroup#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ImageButton.ValidationGroup/VB/imagebutton.validationgroupvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ImageButton.CausesValidation" />
        <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
      </Docs>
    </Member>
  </Members>
</Type>