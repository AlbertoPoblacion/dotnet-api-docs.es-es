<Type Name="Style" FullName="System.Web.UI.WebControls.Style">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7da88f648f89a160af4f1d4aecafd2e29e2b96c2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30600259" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Style : System.ComponentModel.Component, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Style extends System.ComponentModel.Component implements class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Style" />
  <TypeSignature Language="VB.NET" Value="Public Class Style&#xA;Inherits Component&#xA;Implements IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class Style : System::ComponentModel::Component, System::Web::UI::IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.EmptyStringExpandableObjectConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa el estilo de un control de servidor web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Web.UI.WebControls.Style> clase encapsula las propiedades que controlan la apariencia de un control de servidor Web y se pueden aplicar a varios controles de servidor Web para proporcionar una apariencia común. Puede especificar el color de fondo y el color de fuente de un control estableciendo la <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> y <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> propiedades, respectivamente. En los controles que pueden mostrar un borde, puede controlar el ancho del borde, el estilo de borde y el color del borde estableciendo la <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>, <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>, y <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> propiedades. El tamaño de un control de servidor Web también puede especificarse mediante la <xref:System.Web.UI.WebControls.WebControl.Height%2A> y <xref:System.Web.UI.WebControls.WebControl.Width%2A> propiedades.  
  
   
  
## Examples  
 En este ejemplo se muestra cómo utilizar un <xref:System.Web.UI.WebControls.Style> objeto que se va a cambiar las propiedades de estilo de varios controles a la vez. Cada vez que uno de los <xref:System.Web.UI.WebControls.Style> cambios de valores de propiedad, debe llamar cada control su <xref:System.Web.UI.WebControls.WebControl.ApplyStyle%2A> método. Tenga en cuenta que no todos los controles incluidos admiten todas las propiedades mostradas. Si un control no admite una propiedad determinada, no cambiará la apariencia del control cuando se cambia el valor de propiedad.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[StyleClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#1)]
 [!code-aspx-vb[StyleClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#1)]  
[!code-aspx-csharp[StyleClass#3](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#3)]
[!code-aspx-vb[StyleClass#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.Style.BackColor" />
    <altmember cref="P:System.Web.UI.WebControls.Style.ForeColor" />
    <altmember cref="P:System.Web.UI.WebControls.Style.BorderWidth" />
    <altmember cref="P:System.Web.UI.WebControls.Style.BorderStyle" />
    <altmember cref="P:System.Web.UI.WebControls.Style.BorderColor" />
    <altmember cref="P:System.Web.UI.WebControls.Style.Height" />
    <altmember cref="P:System.Web.UI.WebControls.Style.Width" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.Style" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Style ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Style();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.Style" /> utilizando los valores predeterminados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este constructor para crear e inicializar una nueva instancia de la <xref:System.Web.UI.WebControls.Style> clase.  
  
   
  
## Examples  
 En este ejemplo se muestra cómo utilizar un <xref:System.Web.UI.WebControls.Style> objeto que se va a cambiar las propiedades de estilo de varios controles a la vez. Cada vez que uno de los <xref:System.Web.UI.WebControls.Style> cambios de valores de propiedad, debe llamar cada control su <xref:System.Web.UI.WebControls.WebControl.ApplyStyle%2A> método. Tenga en cuenta que no todos los controles incluidos admiten todas las propiedades mostradas. Si un control no admite una propiedad determinada, no cambiará la apariencia del control cuando se cambia el valor de propiedad.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[StyleClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#1)]
 [!code-aspx-vb[StyleClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#1)]  
[!code-aspx-csharp[StyleClass#3](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#3)]
[!code-aspx-vb[StyleClass#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Style (System.Web.UI.StateBag bag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.StateBag bag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.#ctor(System.Web.UI.StateBag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bag As StateBag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Style(System::Web::UI::StateBag ^ bag);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bag" Type="System.Web.UI.StateBag" />
      </Parameters>
      <Docs>
        <param name="bag">
          <see cref="T:System.Web.UI.StateBag" /> que representa la bolsa de estados en la que se va a almacenar la información de estilo.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.Style" /> con la información de la bolsa de estados especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este constructor para crear e inicializar una nueva instancia de la <xref:System.Web.UI.WebControls.Style> clase utilizando el <xref:System.Web.UI.StateBag?displayProperty=nameWithType> especificado por el `bag` parámetro.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddAttributesToRender">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Agrega atributos y estilos HTML que se deben representar en el <see cref="T:System.Web.UI.HtmlTextWriter" /> especificado. Este método lo usan principalmente los programadores de controles.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="public void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> que representa el flujo de salida para representar contenido HTML en el cliente.</param>
        <summary>Agrega atributos y estilos HTML que se deben representar en el <see cref="T:System.Web.UI.HtmlTextWriter" /> especificado. Este método lo usan principalmente los programadores de controles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para representar los atributos y estilos para un control de servidor Web en el cliente, se suele llamar a la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A?displayProperty=nameWithType> y <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=nameWithType> métodos para insertar cada una los atributos y estilos individualmente a la <xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType> flujo de salida. Para simplificar el proceso, este método encapsula todas las llamadas a la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A?displayProperty=nameWithType> y <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=nameWithType> métodos para todos los atributos y estilos asociados al control de servidor Web. Todos los atributos y estilos se insertan en la <xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType> flujo de salida de una única llamada al método.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="public virtual void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer, System.Web.UI.WebControls.WebControl owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer, class System.Web.UI.WebControls.WebControl owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.AddAttributesToRender(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebControl)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttributesToRender (writer As HtmlTextWriter, owner As WebControl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer, System::Web::UI::WebControls::WebControl ^ owner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="owner" Type="System.Web.UI.WebControls.WebControl" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> que representa el flujo de salida para representar contenido HTML en el cliente.</param>
        <param name="owner">Objeto <see cref="T:System.Web.UI.WebControls.WebControl" /> o derivado de <see cref="T:System.Web.UI.WebControls.WebControl" /> que representa el control de servidor Web asociado al objeto <see cref="T:System.Web.UI.WebControls.Style" />.</param>
        <summary>Agrega al objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> y al control de servidor Web especificados los atributos y estilos HTML que se deben representar. Este método lo usan principalmente los programadores de controles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para representar los atributos y estilos para un control de servidor Web en el cliente, se suele llamar a la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A?displayProperty=nameWithType> y <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=nameWithType> métodos para insertar cada una los atributos y estilos individualmente a la <xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType> flujo de salida. Para simplificar el proceso, este método encapsula todas las llamadas a la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A?displayProperty=nameWithType> y <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=nameWithType> métodos para todos los atributos y estilos asociados al control de servidor Web. Todos los atributos y estilos se insertan en la <xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType> flujo de salida de una única llamada al método. Este método se invalida normalmente los programadores de controles en las clases derivadas para insertar los atributos adecuados y estilos a la <xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType> flujo de salida para la clase.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo crear una clase que deriva de la <xref:System.Web.UI.WebControls.WebControl> clase. La implementación base de la <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A> método se invalida para agregar los atributos apropiados a la clase derivada en la <xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType> flujo de salida.  
  
 [!code-csharp[WebControlAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebControlAddAttributesToRender/CS/addattrib.cs#1)]
 [!code-vb[WebControlAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebControlAddAttributesToRender/VB/addattrib.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.WebColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el color de fondo del control de servidor web.</summary>
        <value>Objeto <see cref="T:System.Drawing.Color" /> que representa el color de fondo del control. El valor predeterminado es <see cref="F:System.Drawing.Color.Empty" />, lo que indica que esta propiedad no se estableció.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.Style.BackColor%2A> propiedad para especificar el color de fondo del control de servidor Web. Esta propiedad se establece mediante una <xref:System.Drawing.Color?displayProperty=nameWithType> objeto.  
  
> [!NOTE]
>  Esta propiedad representará solo para ciertos controles. Por ejemplo, <xref:System.Web.UI.WebControls.Table>, <xref:System.Web.UI.WebControls.Panel>, <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.Calendar>, y <xref:System.Web.UI.WebControls.ValidationSummary> se representarán esta propiedad. También funciona para <xref:System.Web.UI.WebControls.CheckBoxList>, <xref:System.Web.UI.WebControls.RadioButtonList> y <xref:System.Web.UI.WebControls.DataList> si sus `RepeatLayout` propiedad es `RepeatLayout.Table`y no `RepeatLayout.Flow`.  
  
 En general, sólo los controles que se representan como un `<table>` etiqueta puede mostrar un color de fondo en HTML 3.2, mientras que casi cualquier control puede en HTML 4.0.  
  
 Para los controles que se representan como un `<span>` etiqueta (incluidos <xref:System.Web.UI.WebControls.Label>, todos los controles de validación y controles de lista con sus `RepeatLayout` propiedad establecida en `RepeatLayout.Flow`), esta propiedad funciona en Microsoft Internet Explorer versión 5 o posterior, pero no para Microsoft Internet Explorer versión 4.  
  
   
  
## Examples  
 En este ejemplo se muestra cómo utilizar un <xref:System.Web.UI.WebControls.Style> objeto que se va a cambiar las propiedades de estilo de varios controles a la vez. Cada vez que uno de los <xref:System.Web.UI.WebControls.Style> cambios de valores de propiedad, debe llamar cada control su <xref:System.Web.UI.WebControls.WebControl.ApplyStyle%2A> método. Tenga en cuenta que no todos los controles incluidos admiten todas las propiedades mostradas. Si un control no admite una propiedad determinada, no cambiará la apariencia del control cuando se cambia el valor de propiedad.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[StyleClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#1)]
 [!code-aspx-vb[StyleClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#1)]  
[!code-aspx-csharp[StyleClass#3](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#3)]
[!code-aspx-vb[StyleClass#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.Panel" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <altmember cref="T:System.Web.UI.WebControls.Calendar" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationSummary" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxList" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.BorderColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BorderColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.WebColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el color del borde del control de servidor Web.</summary>
        <value>
          <see cref="T:System.Drawing.Color" /> que representa el color de borde del control. El valor predeterminado es <see cref="F:System.Drawing.Color.Empty" />, lo que indica que esta propiedad no se estableció.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.Style.BorderColor%2A> propiedad para especificar el color del borde del control de servidor Web. Esta propiedad se establece mediante una <xref:System.Drawing.Color?displayProperty=nameWithType> objeto.  
  
> [!NOTE]
>  Esta propiedad representará solo para ciertos controles. Por ejemplo, <xref:System.Web.UI.WebControls.Table>, <xref:System.Web.UI.WebControls.Panel>, <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.Calendar>, y <xref:System.Web.UI.WebControls.ValidationSummary> se representarán esta propiedad. También funciona para <xref:System.Web.UI.WebControls.CheckBoxList>, <xref:System.Web.UI.WebControls.RadioButtonList>, y <xref:System.Web.UI.WebControls.DataList> si sus `RepeatLayout` propiedad es `RepeatLayout.Table` y no `RepeatLayout.Flow`. Sin embargo, se representa como el `bordercolor` atributo, que puede no funcionar en todos los exploradores.  
  
   
  
## Examples  
 En este ejemplo se muestra cómo utilizar un <xref:System.Web.UI.WebControls.Style> objeto que se va a cambiar las propiedades de estilo de varios controles a la vez. Cada vez que uno de los <xref:System.Web.UI.WebControls.Style> cambios de valores de propiedad, debe llamar cada control su <xref:System.Web.UI.WebControls.WebControl.ApplyStyle%2A> método. Tenga en cuenta que no todos los controles incluidos admiten todas las propiedades mostradas. Si un control no admite una propiedad determinada, no cambiará la apariencia del control cuando se cambia el valor de propiedad.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[StyleClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#1)]
 [!code-aspx-vb[StyleClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#1)]  
[!code-aspx-csharp[StyleClass#3](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#3)]
[!code-aspx-vb[StyleClass#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.Panel" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <altmember cref="T:System.Web.UI.WebControls.Calendar" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationSummary" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxList" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::BorderStyle BorderStyle { System::Web::UI::WebControls::BorderStyle get(); void set(System::Web::UI::WebControls::BorderStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el estilo del borde del control de servidor web.</summary>
        <value>Uno de los valores de enumeración de <see cref="T:System.Web.UI.WebControls.BorderStyle" />. El valor predeterminado es <see langword="NotSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.Style.BorderStyle%2A> propiedad para especificar el estilo de borde para el control de servidor Web. Esta propiedad se establece mediante uno de los <xref:System.Web.UI.WebControls.BorderStyle> valores de enumeración. En la tabla siguiente se enumera los valores posibles.  
  
|Estilo de borde|Descripción|  
|------------------|-----------------|  
|`NotSet`|No se establece el estilo de borde.|  
|`None`|Ningún borde|  
|`Dotted`|Borde de línea punteada.|  
|`Dashed`|Borde de línea discontinua.|  
|`Solid`|Borde de línea sólida.|  
|`Double`|Un borde de línea sólida doble.|  
|`Groove`|Borde estriado para un aspecto de bajo relieve.|  
|`Ridge`|Borde con resalto para un aspecto de borde elevado.|  
|`Inset`|Borde con efecto de insertado para un aspecto de control de bajo relieve.|  
|`Outset`|Borde de alto relieve para una apariencia de control elevado.|  
  
> [!NOTE]
>  Esta propiedad no se representará en algunos exploradores.  
  
   
  
## Examples  
 En este ejemplo se muestra cómo utilizar un <xref:System.Web.UI.WebControls.Style> objeto que se va a cambiar las propiedades de estilo de varios controles a la vez. Cada vez que uno de los <xref:System.Web.UI.WebControls.Style> cambios de valores de propiedad, debe llamar cada control su <xref:System.Web.UI.WebControls.WebControl.ApplyStyle%2A> método. Tenga en cuenta que no todos los controles incluidos admiten todas las propiedades mostradas. Si un control no admite una propiedad determinada, no cambiará la apariencia del control cuando se cambia el valor de propiedad.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[StyleClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#1)]
 [!code-aspx-vb[StyleClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#1)]  
[!code-aspx-csharp[StyleClass#3](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#3)]
[!code-aspx-vb[StyleClass#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El valor seleccionado no es ninguno de los valores de la enumeración <see cref="T:System.Web.UI.WebControls.BorderStyle" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.BorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Unit BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.BorderWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderWidth As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Unit BorderWidth { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el ancho del borde del control de servidor web.</summary>
        <value>Objeto <see cref="T:System.Web.UI.WebControls.Unit" /> que representa el ancho del borde de un control de servidor web. El valor predeterminado es <see cref="F:System.Web.UI.WebControls.Unit.Empty" />, que indica que no se ha establecido esta propiedad.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.Style.BorderWidth%2A> propiedad para especificar un ancho de borde para un control.  
  
> [!NOTE]
>  Esta propiedad no funciona con todos los controles de servidor Web. Solo se aplica a los controles que se muestran como una tabla, como <xref:System.Web.UI.WebControls.Table> y <xref:System.Web.UI.WebControls.DataGrid>.  
  
 Esta propiedad se establece con un <xref:System.Web.UI.WebControls.Unit> objeto. Si el <xref:System.Web.UI.WebControls.Unit.Value%2A> propiedad de la <xref:System.Web.UI.WebControls.Unit> contiene un número negativo, se produce una excepción.  
  
> [!NOTE]
>  Solo se puede expresar el ancho del borde en píxeles para los exploradores anteriores a Microsoft Internet Explorer versión 5. Todos los tipos de unidad se admiten en Microsoft Internet Explorer 5 y versiones posteriores. Hacer referencia al control específico para obtener más información.  
  
   
  
## Examples  
 En este ejemplo se muestra cómo utilizar un <xref:System.Web.UI.WebControls.Style> objeto que se va a cambiar las propiedades de estilo de varios controles a la vez. Cada vez que uno de los <xref:System.Web.UI.WebControls.Style> cambios de valores de propiedad, debe llamar cada control su <xref:System.Web.UI.WebControls.WebControl.ApplyStyle%2A> método. Tenga en cuenta que no todos los controles incluidos admiten todas las propiedades mostradas. Si un control no admite una propiedad determinada, no cambiará la apariencia del control cuando se cambia el valor de propiedad.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[StyleClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#1)]
 [!code-aspx-vb[StyleClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#1)]  
[!code-aspx-csharp[StyleClass#3](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#3)]
[!code-aspx-vb[StyleClass#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El ancho de borde especificado es un valor negativo.</exception>
        <altmember cref="T:System.Web.UI.WebControls.Unit" />
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public virtual void CopyFrom (System.Web.UI.WebControls.Style s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFrom(class System.Web.UI.WebControls.Style s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.CopyFrom(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyFrom (s As Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyFrom(System::Web::UI::WebControls::Style ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="s">Objeto <see cref="T:System.Web.UI.WebControls.Style" /> que representa el estilo que se va a copiar.</param>
        <summary>Duplica las propiedades de estilo del objeto <see cref="T:System.Web.UI.WebControls.Style" /> especificado en la instancia de la clase <see cref="T:System.Web.UI.WebControls.Style" /> desde la que se llama a este método.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.Style.CopyFrom%2A> método para duplicar las propiedades de estilo del elemento especificado <xref:System.Web.UI.WebControls.Style> en la instancia de la <xref:System.Web.UI.WebControls.Style> clase que se llama a este método.  
  
 Cuando se registra un estilo utilizando <xref:System.Web.UI.IStyleSheet.RegisterStyle%2A>y, a continuación, copian mediante <xref:System.Web.UI.WebControls.Style.CopyFrom%28System.Web.UI.WebControls.Style%29?displayProperty=nameWithType>, solo el <xref:System.Web.UI.WebControls.Style.CssClass%2A> propiedad se copia en el destino, no todas las propiedades individuales. Esto podría provocar resultados inesperados si, a continuación, copia o examinar las propiedades del estilo de destino. Por ejemplo, si usas <xref:System.Web.UI.WebControls.FontInfo.CopyFrom%28System.Web.UI.WebControls.FontInfo%29?displayProperty=nameWithType> para copiar la información de fuente de la <xref:System.Web.UI.WebControls.Style.Font%2A> propiedad de un <xref:System.Web.UI.WebControls.Style> que está registrado, no obtendrá la configuración individual de la fuente del estilo.  
  
> [!CAUTION]
>  Todas las propiedades, los que se han establecido en la instancia actual de incluidos la <xref:System.Web.UI.WebControls.Style> de clases, se reemplazará por la propiedad asociada en la <xref:System.Web.UI.WebControls.Style> especificado por el `s` parámetro.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          Se ha establecido <see cref="P:System.Web.UI.WebControls.Style.RegisteredCssClass" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.Style.MergeWith(System.Web.UI.WebControls.Style)" />
      </Docs>
    </Member>
    <Member MemberName="CssClass">
      <MemberSignature Language="C#" Value="public string CssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CssClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.CssClass" />
      <MemberSignature Language="VB.NET" Value="Public Property CssClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CssClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.CssClassProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la clase de hoja de estilos en cascada (CSS) representada por el control de servidor Web en el cliente.</summary>
        <value>Clase CSS presentada por el control de servidor web en el cliente. El valor predeterminado es <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.Style.CssClass%2A> propiedad para especificar la clase CSS que se representará en el cliente para el control de servidor Web. Esta propiedad se representará en exploradores para todos los controles. Siempre se representará como el `class` atributo, independientemente del explorador.  
  
 Por ejemplo, suponga que tiene la siguiente declaración de control de servidor Web:  
  
```  
<asp:TextBox id="TextBox1" ForeColor="Red" CssClass="class1" />  
```  
  
 El código HTML siguiente se representa en el cliente para la declaración anterior del control de servidor Web:  
  
```  
<input type=text class="class1" style="ForeColor:red">  
```  
  
> [!NOTE]
>  En los exploradores que no admiten CSS, establecer el <xref:System.Web.UI.WebControls.Style.CssClass%2A> propiedad no tiene ningún efecto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillStyleAttributes">
      <MemberSignature Language="C#" Value="protected virtual void FillStyleAttributes (System.Web.UI.CssStyleCollection attributes, System.Web.UI.IUrlResolutionService urlResolver);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FillStyleAttributes(class System.Web.UI.CssStyleCollection attributes, class System.Web.UI.IUrlResolutionService urlResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.FillStyleAttributes(System.Web.UI.CssStyleCollection,System.Web.UI.IUrlResolutionService)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub FillStyleAttributes (attributes As CssStyleCollection, urlResolver As IUrlResolutionService)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void FillStyleAttributes(System::Web::UI::CssStyleCollection ^ attributes, System::Web::UI::IUrlResolutionService ^ urlResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Web.UI.CssStyleCollection" />
        <Parameter Name="urlResolver" Type="System.Web.UI.IUrlResolutionService" />
      </Parameters>
      <Docs>
        <param name="attributes">Objeto <see cref="T:System.Web.UI.CssStyleCollection" /> al que se van a agregar las propiedades de estilo.</param>
        <param name="urlResolver">Objeto implementado por <see cref="T:System.Web.UI.IUrlResolutionService" /> que contiene la información de contexto de la ubicación actual (URL).</param>
        <summary>Agrega las propiedades de estilo del objeto especificado a un objeto <see cref="T:System.Web.UI.CssStyleCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.Style.FillStyleAttributes%2A> método para agregar las propiedades de estilo de un objeto especificado <xref:System.Web.UI.CssStyleCollection?displayProperty=nameWithType> objeto. El objeto que especifica debe implementar <xref:System.Web.UI.IUrlResolutionService?displayProperty=nameWithType>. Todas las clases derivadas de <xref:System.Web.UI.Control> implementar <xref:System.Web.UI.IUrlResolutionService?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CssStyleCollection" />
        <altmember cref="T:System.Web.UI.IUrlResolutionService" />
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.FontInfo Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FontInfo Font" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.Font" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Font As FontInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::FontInfo ^ Font { System::Web::UI::WebControls::FontInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FontInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene las propiedades de fuente asociadas al control de servidor web.</summary>
        <value>Objeto <see cref="T:System.Web.UI.WebControls.FontInfo" /> que representa las propiedades de fuente del control de servidor web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.Style.Font%2A> propiedad para especificar las propiedades de fuente del control de servidor Web. Esta propiedad incluye subpropiedades a las que pueden obtenerse mediante declaración en el formulario de `Property-Subproperty` (por ejemplo `Font-Bold`) o mediante programación en el formulario de `Property.Subproperty` (por ejemplo `Font.Bold`).  
  
 Todo menos una subpropiedad se representará en exploradores anteriores a la versión 4 para todos los controles de Microsoft Internet Explorer. Únicamente son: <xref:System.Web.UI.WebControls.FontInfo.Bold%2A>, <xref:System.Web.UI.WebControls.FontInfo.Italic%2A>, <xref:System.Web.UI.WebControls.FontInfo.Name%2A>, <xref:System.Web.UI.WebControls.FontInfo.Names%2A>, <xref:System.Web.UI.WebControls.FontInfo.Strikeout%2A>, <xref:System.Web.UI.WebControls.FontInfo.Underline%2A>, y <xref:System.Web.UI.WebControls.FontInfo.Size%2A> (pero solo denominado tamaños de fuente, como `Small`, `Smaller`, y así sucesivamente, funcionará).  
  
> [!NOTE]
>  Aunque estas subpropiedades pueden representarse en exploradores anteriores a la versión 4 de Microsoft Internet Explorer, el código HTML que se presenta es diferente en los exploradores posteriores. En lugar de procesarse como atributos de estilo, estas subpropiedades se representan como elementos HTML, como `<b>` y `<font>`.  
  
 Una subpropiedad que no se representará en algunos exploradores es <xref:System.Web.UI.WebControls.FontInfo.Overline%2A>.  
  
   
  
## Examples  
 En este ejemplo se muestra cómo utilizar un <xref:System.Web.UI.WebControls.Style> objeto que se va a cambiar las propiedades de estilo de varios controles a la vez. Cada vez que uno de los <xref:System.Web.UI.WebControls.Style> cambios de valores de propiedad, debe llamar cada control su <xref:System.Web.UI.WebControls.WebControl.ApplyStyle%2A> método. Tenga en cuenta que no todos los controles incluidos admiten todas las propiedades mostradas. Si un control no admite una propiedad determinada, no cambiará la apariencia del control cuando se cambia el valor de propiedad.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[StyleClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#1)]
 [!code-aspx-vb[StyleClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#1)]  
[!code-aspx-csharp[StyleClass#3](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#3)]
[!code-aspx-vb[StyleClass#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FontInfo" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.WebColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el color de primer plano (normalmente el color del texto) del control de servidor web.</summary>
        <value>
          <see cref="T:System.Drawing.Color" /> que representa el color de primer plano del control. El valor predeterminado es <see cref="F:System.Drawing.Color.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.Style.ForeColor%2A> propiedad para especificar el color de primer plano del control de servidor Web. El color de primer plano suele ser el color del texto. Esta propiedad se representará en exploradores anteriores a Microsoft Internet Explorer versión 4 para todos los controles, excepto el <xref:System.Web.UI.WebControls.Image>, <xref:System.Web.UI.WebControls.AdRotator>, <xref:System.Web.UI.WebControls.HyperLink> y <xref:System.Web.UI.WebControls.LinkButton>.  
  
> [!NOTE]
>  En los exploradores que no admiten estilos, esta propiedad se representa como un elemento de fuente.  
  
   
  
## Examples  
 En este ejemplo se muestra cómo utilizar un <xref:System.Web.UI.WebControls.Style> objeto que se va a cambiar las propiedades de estilo de varios controles a la vez. Cada vez que uno de los <xref:System.Web.UI.WebControls.Style> cambios de valores de propiedad, debe llamar cada control su <xref:System.Web.UI.WebControls.WebControl.ApplyStyle%2A> método. Tenga en cuenta que no todos los controles incluidos admiten todas las propiedades mostradas. Si un control no admite una propiedad determinada, no cambiará la apariencia del control cuando se cambia el valor de propiedad.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[StyleClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#1)]
 [!code-aspx-vb[StyleClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#1)]  
[!code-aspx-csharp[StyleClass#3](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#3)]
[!code-aspx-vb[StyleClass#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="GetStyleAttributes">
      <MemberSignature Language="C#" Value="public System.Web.UI.CssStyleCollection GetStyleAttributes (System.Web.UI.IUrlResolutionService urlResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.CssStyleCollection GetStyleAttributes(class System.Web.UI.IUrlResolutionService urlResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.GetStyleAttributes(System.Web.UI.IUrlResolutionService)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStyleAttributes (urlResolver As IUrlResolutionService) As CssStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::CssStyleCollection ^ GetStyleAttributes(System::Web::UI::IUrlResolutionService ^ urlResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.CssStyleCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlResolver" Type="System.Web.UI.IUrlResolutionService" />
      </Parameters>
      <Docs>
        <param name="urlResolver">Objeto implementado por <see cref="T:System.Web.UI.IUrlResolutionService" /> que contiene la información de contexto de la ubicación actual (URL).</param>
        <summary>Recupera el objeto <see cref="T:System.Web.UI.CssStyleCollection" /> para el objeto implementado por <see cref="T:System.Web.UI.IUrlResolutionService" /> especificado.</summary>
        <returns>Un objeto <see cref="T:System.Web.UI.CssStyleCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.Style.GetStyleAttributes%2A> método para recuperar el <xref:System.Web.UI.CssStyleCollection?displayProperty=nameWithType> objeto para un determinado <xref:System.Web.UI.IUrlResolutionService?displayProperty=nameWithType>-objeto implementado. Todas las clases derivadas de <xref:System.Web.UI.Control> implementar <xref:System.Web.UI.IUrlResolutionService?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CssStyleCollection" />
        <altmember cref="T:System.Web.UI.IUrlResolutionService" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Unit Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Unit Height { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el alto del control de servidor Web.</summary>
        <value>Objeto <see cref="T:System.Web.UI.WebControls.Unit" /> que representa el alto del control de servidor Web. El valor predeterminado es <see cref="F:System.Web.UI.WebControls.Unit.Empty" />, lo que indica que esta propiedad no se estableció.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.Style.Height%2A> propiedad para especificar o determinar el alto del control de servidor Web. Esta propiedad se establece con un <xref:System.Web.UI.WebControls.Unit>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La propiedad <see cref="P:System.Web.UI.WebControls.Unit.Value" /> de <see cref="T:System.Web.UI.WebControls.Unit" /> es negativa.</exception>
        <altmember cref="T:System.Web.UI.WebControls.Unit" />
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public virtual bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEmpty { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Propiedad protegida. Obtiene un valor que indica si se han definido elementos de estilo en la bolsa de estados.</summary>
        <value>
          Es <see langword="true" /> si la bolsa de estados no tiene ningún elemento de estilo definido; de lo contrario, es <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve un valor que indica si se han definido elementos de estilo en la bolsa de estados.</summary>
        <value>
          Es <see langword="true" /> si se han definido elementos de estilo en la bolsa de estados; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.Style.IsTrackingViewState%2A> propiedad para determinar si se han definido los elementos de estilo en la bolsa de Estados. Esta propiedad la usan principalmente los programadores de controles.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected internal void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void LoadViewState(System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Estado previamente guardado.</param>
        <summary>Carga el estado previamente guardado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeWith">
      <MemberSignature Language="C#" Value="public virtual void MergeWith (System.Web.UI.WebControls.Style s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MergeWith(class System.Web.UI.WebControls.Style s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.MergeWith(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub MergeWith (s As Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MergeWith(System::Web::UI::WebControls::Style ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="s">Objeto <see cref="T:System.Web.UI.WebControls.Style" /> que representa el estilo que se va a combinar.</param>
        <summary>Combina las propiedades de estilo del objeto <see cref="T:System.Web.UI.WebControls.Style" /> especificado con la instancia de la clase <see cref="T:System.Web.UI.WebControls.Style" /> desde la que se llama a este método.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.Style.MergeWith%2A> método para combinar las propiedades de estilo del elemento especificado <xref:System.Web.UI.WebControls.Style> con la instancia de la <xref:System.Web.UI.WebControls.Style> clase que se llama a este método.  
  
> [!CAUTION]
>  Todas las propiedades, excepto aquellos que ya se ha establecido en la instancia actual de la clase de estilo, se reemplazará por la propiedad correspondiente de la <xref:System.Web.UI.WebControls.Style> especificado por el `s` parámetro.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          Se ha establecido <see cref="P:System.Web.UI.WebControls.Style.RegisteredCssClass" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.Style.CopyFrom(System.Web.UI.WebControls.Style)" />
      </Docs>
    </Member>
    <Member MemberName="RegisteredCssClass">
      <MemberSignature Language="C#" Value="public string RegisteredCssClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RegisteredCssClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.RegisteredCssClass" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegisteredCssClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RegisteredCssClass { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la clase de hoja de estilos en cascada (CSS) que se registra con el control.</summary>
        <value>Nombre de la clase CSS con el que se registró la instancia actual en la página.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.Style.RegisteredCssClass%2A> propiedad que se va a recuperar la clase CSS que se registra con el control.  
  
 Un estilo se registra en la página actual con una <xref:System.Web.UI.IStyleSheet.RegisterStyle%2A> método, que busca un `<head runat="server"``>` elemento de la página donde se colocan las propiedades en la instancia actual en una hoja de estilos incrustada, representada por un `<style>` elemento, con un nombre de clase único para el control asociado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quita de la bolsa de estados todos los elementos de estilo definidos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este método para quitar los elementos de estilo definido de la bolsa de Estados.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected internal virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Método protegido. Guarda cualquier estado que se haya modificado después de que se invocara al método <see cref="M:System.Web.UI.WebControls.Style.TrackViewState" />.</summary>
        <returns>Objeto que representa el estado guardado. El valor predeterminado es <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBit">
      <MemberSignature Language="C#" Value="protected internal virtual void SetBit (int bit);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SetBit(int32 bit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.SetBit(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub SetBit (bit As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void SetBit(int bit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bit">Valor de máscara de bits.</param>
        <summary>Método interno protegido. Establece un campo de máscara de bits interno que indica las propiedades de estilo almacenadas en la bolsa de estados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDirty">
      <MemberSignature Language="C#" Value="public void SetDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.SetDirty" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDirty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDirty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Marca <see cref="T:System.Web.UI.WebControls.Style" /> para que su estado se registre en el estado de vista.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Style.SetDirty%2A> método se llama directamente a través del <xref:System.Web.UI.WebControls.StyleCollection.SetDirtyObject%2A> método de un <xref:System.Web.UI.WebControls.StyleCollection>, para marcar un <xref:System.Web.UI.WebControls.Style> para que su estado se registra en el estado de vista del objeto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.IStateManager.IsTrackingViewState { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si un control de servidor está realizando el seguimiento de los cambios en su estado de vista.</summary>
        <value>
          Es <see langword="true" /> si se han definido elementos de estilo en la bolsa de estados de vista; de lo contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Web.UI.WebControls.Style> se convierte en una interfaz <xref:System.Web.UI.IStateManager>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (state As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ state) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Estado previamente guardado.</param>
        <summary>Carga el estado previamente guardado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Web.UI.WebControls.Style> se convierte en una interfaz <xref:System.Web.UI.IStateManager>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve el objeto que contiene los cambios de estado.</summary>
        <returns>Objeto que representa el estado guardado. El valor predeterminado es <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Web.UI.WebControls.Style> se convierte en una interfaz <xref:System.Web.UI.IStateManager>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicia el seguimiento de los cambios de estado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Web.UI.WebControls.Style> se convierte en una interfaz <xref:System.Web.UI.IStateManager>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected internal virtual void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void TrackViewState();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Método protegido. Marca el comienzo del seguimiento de los cambios de estado en el control. Los cambios realizados una vez iniciado el seguimiento serán objeto de seguimiento y se guardarán como parte del estado de vista del control.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewState">
      <MemberSignature Language="C#" Value="protected internal System.Web.UI.StateBag ViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.StateBag ViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.ViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property ViewState As StateBag" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Web::UI::StateBag ^ ViewState { System::Web::UI::StateBag ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.StateBag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la bolsa de estados que contiene los elementos de estilo.</summary>
        <value>Bolsa de estados que contiene los elementos de estilo definidos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El nombre de campo privado para la bolsa de Estados distingue mayúsculas de minúsculas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Unit Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Unit Width { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el ancho del control de servidor web.</summary>
        <value>Objeto <see cref="T:System.Web.UI.WebControls.Unit" /> que representa el ancho del control de servidor Web. El valor predeterminado es <see cref="F:System.Web.UI.WebControls.Unit.Empty" />, lo que indica que esta propiedad no se estableció.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.Style.Width%2A> propiedad para especificar o determinar el ancho del control de servidor Web. Esta propiedad se establece con un <xref:System.Web.UI.WebControls.Unit>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La propiedad <see cref="P:System.Web.UI.WebControls.Unit.Value" /> de <see cref="T:System.Web.UI.WebControls.Unit" /> es negativa.</exception>
        <altmember cref="T:System.Web.UI.WebControls.Unit" />
      </Docs>
    </Member>
  </Members>
</Type>