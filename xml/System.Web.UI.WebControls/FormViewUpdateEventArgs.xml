<Type Name="FormViewUpdateEventArgs" FullName="System.Web.UI.WebControls.FormViewUpdateEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b2dea28976752b03fba66aa168623d55e59eacca" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30598719" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormViewUpdateEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormViewUpdateEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class FormViewUpdateEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormViewUpdateEventArgs : System::ComponentModel::CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona datos para el evento <see cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.FormView> controlar genera el <xref:System.Web.UI.WebControls.FormView.ItemUpdating> eventos cuando un botón Actualizar (un botón con su `CommandName` propiedad establecida en "Update") dentro del control se hace clic, pero antes el <xref:System.Web.UI.WebControls.FormView> control actualiza el registro. Esto le permite proporcionar un método de control de eventos que realiza una rutina personalizada, como codificación HTML o validación de los valores de un registro antes de actualizarlo en el origen de datos, siempre que se produce este evento.  
  
 A <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> objeto se pasa al método de control de eventos, que permite determinar el valor de un argumento de comando opcional enviado al <xref:System.Web.UI.WebControls.FormView> controlar y para indicar si la operación de actualización tiene que cancelarse. Para determinar el valor del argumento del comando, use la <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A> propiedad. Para cancelar la operación de actualización, establezca la <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propiedad `true`. Si necesita obtener acceso a los valores de campo de clave original para el registro que se está actualizando, use la <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> propiedad. Pueden tener acceso a los valores de campo sin clave originales mediante la <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> propiedad. Los valores actualizados (que incluyen valores de campo de clave actualizados, si permite al usuario editar los campos de clave) son accesibles mediante la <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> propiedad.  
  
 Para obtener más información sobre el control de eventos, vea [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Para obtener una lista con los valores de propiedad iniciales de una instancia de la clase <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs>, vea el constructor <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.%23ctor%2A>.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> objeto se pasa al método de control de eventos para el <xref:System.Web.UI.WebControls.FormView.ItemUpdating> eventos para validar los valores especificados por el usuario.  
  
 [!code-aspx-csharp[FormViewUpdateEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateEventArgs/CS/formviewupdateeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateEventArgs/VB/formviewupdateeventargsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventHandler" />
    <altmember cref="T:System.ComponentModel.CancelEventArgs" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
    <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues" />
    <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormViewUpdateEventArgs (object commandArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object commandArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormViewUpdateEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandArgument As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormViewUpdateEventArgs(System::Object ^ commandArgument);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandArgument" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="commandArgument">Argumento de comando opcional que se pasa al control <see cref="T:System.Web.UI.WebControls.FormView" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este constructor para inicializar una nueva instancia de la <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> clase.  
  
 En la tabla siguiente muestra el valor de propiedad iniciales para una instancia de la <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> clase.  
  
|Propiedad.|Valor inicial|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A>|Valor del parámetro `commandArgument`.|  
  
> [!NOTE]
>  Este constructor se usa principalmente los programadores de controles al generar eventos.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="CommandArgument">
      <MemberSignature Language="C#" Value="public object CommandArgument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandArgument" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandArgument As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandArgument { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el argumento de comando de la operación de actualización que se ha pasado al control <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Argumento de comando de la operación de actualización que se ha pasado al control <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se crea un botón de actualización para una de las plantillas en un <xref:System.Web.UI.WebControls.FormView> control, si lo desea, puede especificar un argumento de comando para el botón mediante la <xref:System.Web.UI.WebControls.IButtonControl.CommandArgument%2A?displayProperty=nameWithType> propiedad. El argumento de comando normalmente contiene cualquier información opcional que desee adjuntar el comando de actualización, como el valor para el campo de clave. El <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A> propiedad se proporciona como una manera cómoda para determinar el valor del argumento de comando del botón de actualización.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
        <altmember cref="P:System.Web.UI.WebControls.IButtonControl.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ Keys { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un diccionario que contiene los pares de nombre y valor del campo de clave original para el registro que se va a actualizar.</summary>
        <value>
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> con un diccionario que contiene los pares de nombre y valor del campo de clave original para el registro que se va a actualizar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> propiedad contiene los valores originales de los campos claves enumerados en la <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> propiedad de un <xref:System.Web.UI.WebControls.FormView> control. Use la <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> propiedad para tener acceso a los valores originales de los campos de clave para el registro que desea actualizar. Por ejemplo, puede utilizar estos valores para mantener un registro de los registros actualizados.  
  
> [!NOTE]
>  Si permite que el usuario actualizar los valores de los campos clave, el <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> propiedad contiene los valores de campo de clave original. Los valores actualizados se almacenan en la <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> propiedad.  
  
 El <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> propiedad devuelve un <xref:System.Collections.Specialized.OrderedDictionary> objeto que implementa el <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> interfaz. El <xref:System.Collections.Specialized.OrderedDictionary> objeto contiene <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> objetos que representan los campos del registro actualizado. Para obtener acceso a los nombres de campo, utilice la <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> propiedad de la <xref:System.Collections.Specialized.OrderedDictionary> objeto. Asimismo, se pueden tener acceso a los valores de campo mediante el uso de la <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> propiedad.  
  
> [!NOTE]
>  Como método abreviado, también puede utilizar el indizador de la <xref:System.Collections.Specialized.OrderedDictionary> directamente los valores de objeto que se va a obtener acceso al campo. Controles que se basan en el orden de los campos del origen de datos (como <xref:System.Web.UI.WebControls.AccessDataSource>) puede tener acceso a los valores de campo solo por su índice.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> propiedad que se va a obtener acceso al valor del campo de clave del registro que se está actualizando.  
  
 [!code-aspx-csharp[FormViewUpdateEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateEventArgs/CS/formviewupdateeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateEventArgs/VB/formviewupdateeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="NewValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary NewValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary NewValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ NewValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un diccionario que contiene los nuevos pares de nombre y valor de campo para el registro que se va a actualizar.</summary>
        <value>
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> con un diccionario que contiene los nuevos pares de nombre y valor de campo para el registro que se va a actualizar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> propiedad para tener acceso a los nuevos valores de campo para el registro que desea actualizar. Por ejemplo, puede utilizar estos valores para mantener un registro de los registros actualizados.  
  
> [!NOTE]
>  Si permite que el usuario actualizar los valores de los campos clave, el <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> propiedad contiene los valores de campo de clave original. Los valores actualizados se almacenan en la <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> propiedad.  
  
 El <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> propiedad devuelve un <xref:System.Collections.Specialized.OrderedDictionary> objeto que implementa el <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> interfaz. El <xref:System.Collections.Specialized.OrderedDictionary> objeto contiene <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> objetos que representan los campos del registro actualizado. Para obtener acceso a los nombres de campo, utilice la <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> propiedad de la <xref:System.Collections.Specialized.OrderedDictionary> objeto. Asimismo, se pueden tener acceso a los valores de campo mediante el uso de la <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> propiedad.  
  
> [!NOTE]
>  Como método abreviado, también puede utilizar el indizador de la <xref:System.Collections.Specialized.OrderedDictionary> directamente los valores de objeto que se va a obtener acceso al campo. Controles que se basan en el orden de los campos del origen de datos (como <xref:System.Web.UI.WebControls.AccessDataSource>) puede tener acceso a los valores de campo solo por su índice.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> propiedad para tener acceso a los nuevos valores especificados por el usuario para los campos sin clave del registro que se está actualizando.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="OldValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary OldValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary OldValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OldValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ OldValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un diccionario que contiene los pares de nombre y valor de campo no de clave original para el registro que se va a actualizar.</summary>
        <value>
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> con un diccionario que contiene los pares de nombre y valor de campo no de clave original para el registro que se va a actualizar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> propiedad para tener acceso a los valores de campo sin clave originales del registro actualizado. Por ejemplo, puede utilizar estos valores para mantener un registro de los registros actualizados. Algunos datos del origen de controles, como el <xref:System.Web.UI.WebControls.SqlDataSource> y <xref:System.Web.UI.WebControls.ObjectDataSource> controla, compatibilidad con la detección de conflictos (comprobación de simultaneidad optimista). Cuando el <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> propiedad de uno de estos controles está establecida en `ConflictOptions.CompareAllValues`, los valores originales del registro se comparan con los valores del origen de datos antes de realiza una operación de actualización. Si un registro se ha modificado por otro usuario al mismo tiempo, el registro no se actualiza.  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> propiedad no contiene campos de clave. Si permite que el usuario actualizar los valores de los campos de clave, los valores de campo de clave originales se almacenan en la <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> propiedad. Los valores actualizados se almacenan en la <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> propiedad.  
  
 El <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> propiedad devuelve un <xref:System.Collections.Specialized.OrderedDictionary> objeto que implementa el <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> interfaz. El <xref:System.Collections.Specialized.OrderedDictionary> objeto contiene <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> objetos que representan los campos del registro actualizado. Para obtener acceso a los nombres de campo, utilice la <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> propiedad de la <xref:System.Collections.Specialized.OrderedDictionary> objeto. Asimismo, se pueden tener acceso a los valores de campo mediante el uso de la <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> propiedad.  
  
> [!NOTE]
>  Como método abreviado, también puede utilizar el indizador de la <xref:System.Collections.Specialized.OrderedDictionary> directamente los valores de objeto que se va a obtener acceso al campo. Controles que se basan en el orden de los campos del origen de datos (como <xref:System.Web.UI.WebControls.AccessDataSource>) puede tener acceso a los valores de campo solo por su índice.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> propiedad para tener acceso a los valores originales de los campos sin clave del registro que se está actualizando.  
  
 [!code-aspx-csharp[FormViewUpdateEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateEventArgs/CS/formviewupdateeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateEventArgs/VB/formviewupdateeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      </Docs>
    </Member>
  </Members>
</Type>