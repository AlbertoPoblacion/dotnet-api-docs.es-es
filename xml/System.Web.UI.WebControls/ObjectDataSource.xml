<Type Name="ObjectDataSource" FullName="System.Web.UI.WebControls.ObjectDataSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="df4d6ed9bb42e90109053c0901178ec37b3d6e71" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53230213" /></Metadata><TypeSignature Language="C#" Value="public class ObjectDataSource : System.Web.UI.DataSourceControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSource extends System.Web.UI.DataSourceControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSource&#xA;Inherits DataSourceControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSource : System::Web::UI::DataSourceControl" />
  <TypeSignature Language="F#" Value="type ObjectDataSource = class&#xA;    inherit DataSourceControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("Selecting")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultProperty("TypeName")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ObjectDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.ObjectDataSource))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ObjectDataSourceDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa un objeto comercial que proporciona datos a los controles enlazados a datos en las arquitecturas de aplicaciones Web multi-nivel.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En este tema:  
  
-   [Introducción](#introduction)  
  
-   [Propósito](#purpose)  
  
-   [Recuperación de datos](#retrieving_data)  
  
-   [Realización de operaciones de datos](#performing_data_operations)  
  
-   [Filtrado de datos](#filtering_data)  
  
-   [Almacenamiento en caché](#caching)  
  
-   [Características](#features)  
  
-   [Vista de datos](#data_view)  
  
-   [Usar LINQ to SQL](#using_linq_to_sql)  
  
-   [Sintaxis declarativa](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introducción  
 Un <xref:System.Web.UI.WebControls.ObjectDataSource> funciona con una clase que crea el control. Crear métodos que recuperen y actualicen los datos y proporcionar los nombres de los métodos a los <xref:System.Web.UI.WebControls.ObjectDataSource> control en el marcado. Durante la representación o procesamiento de la devolución, el <xref:System.Web.UI.WebControls.ObjectDataSource> llama a los métodos que ha especificado.  
  
 No hay ninguna representación visual de la <xref:System.Web.UI.WebControls.ObjectDataSource> control. Como resultado, el <xref:System.Web.UI.WebControls.ObjectDataSource> no admite características visuales, como el <xref:System.Web.UI.DataSourceControl.EnableTheming%2A> o <xref:System.Web.UI.DataSourceControl.SkinID%2A> propiedad.  
  
<a name="purpose"></a>   
## <a name="purpose"></a>Propósito  
 Una práctica muy común de diseño de aplicaciones es separar la capa de presentación de la lógica de negocios y encapsular la lógica de negocios en objetos de negocios. Estos objetos comerciales forman una capa entre la capa de presentación y la capa de datos, lo que resulta en una arquitectura de aplicación de tres niveles distinta. El <xref:System.Web.UI.WebControls.ObjectDataSource> control permite a los desarrolladores usar un control de origen de datos ASP.NET mientras conserva su arquitectura de aplicación de tres niveles.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource> control usa la reflexión para crear instancias de objetos de negocios y llamar a métodos en ellos para recuperar, actualizar, insertar y eliminar datos. El <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> propiedad identifica el nombre de la clase que la <xref:System.Web.UI.WebControls.ObjectDataSource> funciona con. El <xref:System.Web.UI.WebControls.ObjectDataSource> control crea y destruye una instancia de la clase para cada llamada al método; no contenga el objeto en la memoria durante la vigencia de la solicitud Web. Esto es una consideración importante si el objeto de negocios que utiliza requiere muchos recursos o en caso contrario, es costoso de crear y destruir. Uso de un objeto costoso podría no ser una mejor opción de diseño, pero puede controlar el ciclo de vida del objeto mediante el <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, y <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> eventos.  
  
> [!NOTE]
>  Los métodos que se identifican mediante el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>, y <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> las propiedades pueden ser métodos de instancia o `static` (`Shared` en Visual Basic) métodos. Si los métodos son `static` (`Shared` en Visual Basic), no se crea una instancia del objeto comercial y el <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, y <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> no se generan eventos.  
  
<a name="retrieving_data"></a>   
## <a name="retrieving-data"></a>Recuperar datos  
 Para recuperar datos de un objeto comercial, establezca el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad en el nombre del método que recupera los datos. Si el método no devuelve un <xref:System.Collections.IEnumerable> o <xref:System.Data.DataSet> objeto, el objeto ajustado por el tiempo de ejecución en un <xref:System.Collections.IEnumerable> colección. Si la firma del método tiene parámetros, puede agregar <xref:System.Web.UI.WebControls.Parameter> objetos a la <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> colección y, a continuación, enlazan a los valores que se van a pasar al método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad. En orden para el <xref:System.Web.UI.WebControls.ObjectDataSource> control para usar los parámetros, los parámetros deben coincidir con los nombres y tipos de los parámetros de la firma del método. Para obtener más información, consulte [usar parámetros con el ObjectDataSource Control](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource> control recupera los datos cada vez que el <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> se llama al método. Este método proporciona acceso mediante programación al método especificado por <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad. El método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad se llama automáticamente a los controles que están enlazados a la <xref:System.Web.UI.WebControls.ObjectDataSource> cuando sus `DataBind` se llama al método. Si establece la `DataSourceID` propiedad de un control enlazado a datos, el control se enlaza automáticamente a los datos del origen de datos, según sea necesario. Establecer el `DataSourceID` propiedad es el método recomendado para el enlace de un <xref:System.Web.UI.WebControls.ObjectDataSource> control a un control enlazado a datos. Como alternativa, puede establecer el `DataSource` propiedad, pero, a continuación, debe llamar explícitamente la `DataBind` método del control enlazado a datos. Puede llamar a la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método mediante programación en cualquier momento para recuperar los datos.  
  
 Para obtener más información acerca de los controles enlazados a datos de enlace a controles de origen de datos, vea [enlazar a datos mediante un Control de origen de datos](https://msdn.microsoft.com/library/e41adfff-8fb8-449e-9cd1-9bd49788c5f7).  
  
<a name="performing_data_operations"></a>   
## <a name="performing-data-operations"></a>Realización de operaciones de datos  
 Según las capacidades de negocio de los objetos que la <xref:System.Web.UI.WebControls.ObjectDataSource> funciona con el control, puede realizar operaciones de datos, como actualizaciones, inserciones y eliminaciones. Para realizar estas operaciones de datos, establezca el nombre de método adecuado y cualquier parámetro asociado para la operación que desea realizar. Por ejemplo, para una operación de actualización, establezca la <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> propiedad en el nombre del método del objeto de negocios que realiza las actualizaciones y agrega cualquier requiere parámetros para el <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> colección. Si el <xref:System.Web.UI.WebControls.ObjectDataSource> control está asociado a un control enlazado a datos, los parámetros se agregan mediante el control enlazado a datos. En este caso, deberá asegurarse de que los nombres de parámetro del método coincide con los nombres de campo en el control enlazado a datos. La actualización se realiza cuando el <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> se llama el método, ya sea explícitamente mediante código o automáticamente por un control enlazado a datos. Se sigue el mismo patrón general para <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> y <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operaciones. Objetos de negocios se asume que obtiene estos tipos de registro de una de las operaciones de datos a la vez, en lugar de procesar por lotes.  
  
<a name="filtering_data"></a>   
## <a name="filtering-data"></a>Filtrar datos  
 El <xref:System.Web.UI.WebControls.ObjectDataSource> control puede filtrar los datos recuperados por el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad, si los datos se devuelven como un <xref:System.Data.DataSet> o <xref:System.Data.DataTable> objeto. Puede establecer el <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> propiedad en una expresión de filtrado mediante el uso de un formato de sintaxis de cadena y enlazar los valores en la expresión para los parámetros que se especifican en el <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> colección.  
  
<a name="caching"></a>   
## <a name="caching"></a>Almacenamiento en memoria caché  
 Aunque el <xref:System.Web.UI.WebControls.ObjectDataSource> no conserva la instancia del objeto comercial en varias solicitudes, puede almacenar en caché el resultado de llamar al método identificado por la <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad. Mientras los datos están almacenados en caché, las llamadas subsiguientes a la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método devolver los datos en caché en lugar de crear el objeto de negocios y llamar a su <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> mediante la reflexión. Almacenamiento en caché permite evitar crear el objeto y llamar a su método de datos a costa de la memoria en el servidor Web. El <xref:System.Web.UI.WebControls.ObjectDataSource> automáticamente almacena en caché datos cuando el <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> propiedad está establecida en `true`y el <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> propiedad está establecida en el número de segundos que la memoria caché almacena los datos antes de la caché se descarta. También puede especificar un <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> propiedad y un elemento opcional <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> propiedad. El <xref:System.Web.UI.WebControls.ObjectDataSource> control le permite almacenar en caché todos los tipos de datos, pero no debe almacenar en caché objetos que conservarán los recursos o estado que no se pueden compartir para varias solicitudes de servicio (por ejemplo, una apertura <xref:System.Data.SqlClient.SqlDataReader> objeto), ya que la misma instancia del objeto se usará para atender las solicitudes múltiples.  
  
<a name="features"></a>   
## <a name="features"></a>Características  
 En la tabla siguiente se describe las características de la <xref:System.Web.UI.WebControls.ObjectDataSource> control.  
  
|Función|Requisitos|  
|----------------|------------------|  
|Selección|Establecer el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad en el nombre de la empresa método que selecciona datos de objeto e incluyen todos los parámetros necesarios en el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> colección mediante programación o mediante el uso de un control enlazado a datos.|  
|Ordenar|Establecer el <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> propiedad en el nombre del parámetro en el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> método que lleva a cabo los criterios de ordenación.|  
|Filtrado|Establecer el <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> propiedad en una expresión de filtrado y, opcionalmente, agregue los parámetros para el <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> colección para filtrar los datos cuando el <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> se llama al método. El método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad debe devolver un <xref:System.Data.DataSet> o <xref:System.Data.DataTable>.|  
|Paginación|Se admite la paginación del origen de datos, si la <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> método contiene parámetros para el número máximo de registros para recuperar y el índice del primer registro que debe recuperar. Los nombres de esos parámetros deben establecerse en el <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> y <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> propiedades, respectivamente. Un control enlazado a datos podría ser capaz de realizar la paginación por sí mismo, incluso si la <xref:System.Web.UI.WebControls.ObjectDataSource> control no admite la paginación directamente en el método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad. El requisito para el control enlazado a datos poder hacer esto es que el método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad devolver un objeto que implementa el <xref:System.Collections.ICollection> interfaz.|  
|Updating|Establecer el <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> propiedad en el nombre de la empresa método que actualiza los datos del objeto e incluyen todos los parámetros necesarios en el <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> colección.|  
|Eliminando|Establecer el <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> propiedad en el nombre de la empresa método o función que elimina los datos de objeto e incluyen todos los parámetros necesarios en el <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> colección.|  
|Inserción|Establecer el <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> propiedad en el nombre de la empresa método o función que inserta datos de objeto e incluyen todos los parámetros necesarios en el <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> colección.|  
|Almacenamiento en memoria caché|Establecer el <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> propiedad `true`y el <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> y <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> propiedades de acuerdo con el comportamiento de almacenamiento en caché que desea para los datos almacenados en caché.|  
  
> [!NOTE]
>  Cuando se usa el <xref:System.Web.UI.WebControls.ObjectDataSource> clase para actualizar o insertar datos, las cadenas que se escriben en el cliente no se convierten automáticamente en el formato de referencia cultural de cliente en el formato de referencia cultural del servidor. Por ejemplo, la referencia cultural de cliente podría especificar DD/MM/AAAA como el formato de fecha y el formato de fecha en el servidor podría ser DD/MM/aaaa. En ese caso, el 5 de octubre de 2009, tendría que escribirse en un <xref:System.Web.UI.WebControls.TextBox> controlar como 5/10/2009, pero se interpretaría como 10 de mayo de 2009. 15 de octubre de 2009 se especificaría como 15/10/2009 y se rechazaría como una fecha no válida.  
  
<a name="data_view"></a>   
## <a name="data-view"></a>Vista de datos  
 Al igual que con todos los controles de origen de datos, el <xref:System.Web.UI.WebControls.ObjectDataSource> control está asociado a una clase de vista del origen de datos. Mientras el <xref:System.Web.UI.WebControls.ObjectDataSource> control es la interfaz que el desarrollador de páginas que se usa para trabajar con datos, la <xref:System.Web.UI.WebControls.ObjectDataSourceView> clase es la interfaz que trabaja controles enlazados a datos. Además, el <xref:System.Web.UI.WebControls.ObjectDataSourceView> clase describe las capacidades de control de origen de datos y realiza el trabajo real. El <xref:System.Web.UI.WebControls.ObjectDataSource> control sólo tiene una asociada <xref:System.Web.UI.WebControls.ObjectDataSourceView>, y siempre se denomina `DefaultView`. Mientras el <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto expuesto por el <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> método, muchas de sus propiedades y métodos se encapsula y expone directamente el <xref:System.Web.UI.WebControls.ObjectDataSource> control. En segundo plano, el <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto realiza las operaciones de datos, incluidas recuperar, insertar, actualizar, eliminar, filtrar y ordenar los datos. Para obtener más información, vea <xref:System.Web.UI.WebControls.ObjectDataSourceView>.  
  
<a name="using_linq_to_sql"></a>   
## <a name="using-linq-to-sql"></a>Usar LINQ to SQL  
 Puede usar el <xref:System.Web.UI.WebControls.ObjectDataSource> control con una clase LINQ to SQL. Para ello, Establece el <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> propiedad en el nombre de la clase de contexto de datos. Además, establecer el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>, y <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> métodos a los métodos en la clase de contexto de datos que realizan las operaciones correspondientes. Debe crear un controlador de eventos para el <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> eventos con el fin de cancelar la eliminación de la clase de contexto de datos. Este paso es necesario porque LINQ to SQL admite la ejecución aplazada, mientras que el <xref:System.Web.UI.WebControls.ObjectDataSource> control intenta eliminar el contexto de datos después de la operación de selección. Para obtener más información sobre cómo crear LINQ a las clases SQL, vea [Cómo: Crear clases LINQ to SQL en un proyecto Web](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081). Para obtener un ejemplo de cómo cancelar la eliminación de una clase de contexto de datos, vea el <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> eventos.  
  
## <a name="using-the-entity-framework"></a>Uso de Entity Framework  
 También puede usar el <xref:System.Web.UI.WebControls.ObjectDataSource> control con Entity Framework. Para obtener más información, consulte [mediante Entity Framework y el ObjectDataSource Control](https://go.microsoft.com/fwlink/?LinkId=209117).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Sintaxis declarativa  
  
```  
<asp:ObjectDataSource  
    CacheDuration="string|Infinite"  
    CacheExpirationPolicy="Absolute|Sliding"  
    CacheKeyDependency="string"  
    ConflictDetection="OverwriteChanges|CompareAllValues"  
    ConvertNullToDBNull="True|False"  
    DataObjectTypeName="string"  
    DeleteMethod="string"  
    EnableCaching="True|False"  
    EnablePaging="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    FilterExpression="string"  
    ID="string"  
    InsertMethod="string"  
    MaximumRowsParameterName="string"  
    OldValuesParameterFormatString="string"  
    OnDataBinding="DataBinding event handler"  
    OnDeleted="Deleted event handler"  
    OnDeleting="Deleting event handler"  
    OnDisposed="Disposed event handler"  
    OnFiltering="Filtering event handler"  
    OnInit="Init event handler"  
    OnInserted="Inserted event handler"  
    OnInserting="Inserting event handler"  
    OnLoad="Load event handler"  
    OnObjectCreated="ObjectCreated event handler"  
    OnObjectCreating="ObjectCreating event handler"  
    OnObjectDisposing="ObjectDisposing event handler"  
    OnPreRender="PreRender event handler"  
    OnSelected="Selected event handler"  
    OnSelecting="Selecting event handler"  
    OnUnload="Unload event handler"  
    OnUpdated="Updated event handler"  
    OnUpdating="Updating event handler"  
    runat="server"  
    SelectCountMethod="string"  
    SelectMethod="string"  
    SkinID="string"  
    SortParameterName="string"  
    SqlCacheDependency="string"  
    StartRowIndexParameterName="string"  
    TypeName="string"  
    UpdateMethod="string"  
    Visible="True|False"  
>  
        <DeleteParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </DeleteParameters>  
        <FilterParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </FilterParameters>  
        <InsertParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </InsertParameters>  
        <SelectParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </SelectParameters>  
        <UpdateParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </UpdateParameters>  
</asp:ObjectDataSource>  
```  
  
   
  
## Examples  
 Un proyecto de sitio Web de Visual Studio con código fuente está disponible para este tema: [Descargar](https://code.msdn.microsoft.com/Project/Download/FileDownload.aspx?ProjectName=aspnetmsdnexamples&DownloadId=14838).  
  
 Esta sección se muestra un <xref:System.Web.UI.WebControls.ObjectDataSource> en el marcado .aspx en la página y muestra los objetos de negocio que trabaja. El ejemplo es la página aspx. Contiene un <xref:System.Web.UI.WebControls.GridView> control que está enlazado a un <xref:System.Web.UI.WebControls.ObjectDataSource> control. El <xref:System.Web.UI.WebControls.ObjectDataSource> marcado del control especifica el nombre del objeto comercial y el nombre del método del objeto de negocios va a llamar para recuperar los datos.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 El ejemplo siguiente muestra el objeto de negocios que la <xref:System.Web.UI.WebControls.ObjectDataSource> usa el control de la página aspx. (Muchas otras <xref:System.Web.UI.WebControls.ObjectDataSource> ejemplos de código usan este objeto de negocios también.) El ejemplo consta de las dos clases básicas siguientes:  
  
-   El `EmployeeLogic` clase es la clase de la lógica de negocios que la <xref:System.Web.UI.WebControls.ObjectDataSource> usa.  
  
-   El `NorthwindEmployee` clase define el objeto de datos devuelto por la `GetAllEmployees` método de la `EmployeeLogic` clase.  
  
 Más `NorthwindDataException` clase se proporciona por comodidad.  
  
 Este conjunto de clases de ejemplo funciona con la base de datos de Northwind Traders, que está disponible con Microsoft SQL Server y Microsoft Access. Para obtener un ejemplo completo, debe compilar y utilizar estas clases con el ejemplo de página .aspx que se proporciona. Para obtener información sobre cómo instalar la base de datos de Northwind Traders, vea [Cómo: Instalar bases de datos de ejemplo](https://msdn.microsoft.com/library/ed1291f6-604c-4972-ae22-0345c6dea12e).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/northwindemployee1.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/northwindemployee1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceControl" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />
    <related type="Article" href="https://msdn.microsoft.com/library/a806fa2c-fe6a-405f-869c-74e804a642ea">Tutorial: Enlace de datos a un objeto de negocios personalizada</related>
    <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
    <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
    <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Uso de Entity Framework y el Control ObjectDataSource</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSource (string typeName, string selectMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, string selectMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, selectMethod As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSource(System::String ^ typeName, System::String ^ selectMethod);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSource : string * string -&gt; System.Web.UI.WebControls.ObjectDataSource" Usage="new System.Web.UI.WebControls.ObjectDataSource (typeName, selectMethod)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="selectMethod" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">Nombre de la clase con la que trabaja <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</param>
        <param name="selectMethod">Nombre del método o función que <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> invoca para recuperar los datos.</param>
        <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> con el nombre del tipo y el nombre del método de recuperación de datos especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la `typeName` parámetro puede ser un tipo parcial para el código que se encuentra en el directorio Bin o App_Code o un nombre de tipo completo para el código que está registrado en la caché global de ensamblados. Si utiliza la caché global de ensamblados, debe agregar la referencia correspondiente a la `assemblies` sección del archivo de configuración Machine.config o Web.config.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public virtual int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CacheDuration { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CacheDuration : int with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataSourceCacheDurationConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el período de tiempo, en segundos, que el control de origen de datos almacena en memoria caché los datos recuperados por la propiedad <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />.</summary>
        <value>Número de segundos que <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> almacena en memoria caché los resultados de una invocación de la propiedad <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />. El valor predeterminado es 0. El valor no puede ser negativo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ObjectDataSource> control admite el almacenamiento en caché de datos. Mientras se almacena en caché de datos, las llamadas a la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> recuperar datos desde la memoria caché en lugar de la empresa del método de objeto que la <xref:System.Web.UI.WebControls.ObjectDataSource> funciona con. Cuando la memoria caché expira, el <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método recupera los datos del objeto de negocios y, a continuación, almacena en memoria caché de los datos.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource> control automáticamente almacena en caché los datos cuando el <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> propiedad está establecida en `true` y <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> propiedad se establece en un valor mayor que 0, lo que indica el número de segundos que la memoria caché almacena los datos antes de la entrada de caché se descarta. Un valor de 0 indica una caché infinitamente larga.  
  
 La memoria caché se regula mediante una combinación de la duración y el <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> configuración. Si el <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> propiedad está establecida en el <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> valor, el <xref:System.Web.UI.WebControls.ObjectDataSource> almacena en caché datos en la primera llamada a la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método y se guarda en la memoria para, a lo sumo, la cantidad de tiempo especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> propiedad. Los datos se pueden liberar antes de la hora de duración, si se necesita la memoria. A continuación, se actualiza la caché durante la llamada siguiente a la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método. Si el <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> propiedad está establecida en <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> valor, el control de origen de datos almacena en caché datos en la primera llamada a la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método, pero restablece el período de tiempo para que incluye la memoria caché en cada llamada posterior a la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método. La memoria caché expira si no hay ninguna actividad durante un tiempo que es igual a la <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> propiedad desde la última llamada a la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método.  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos de código. El primer ejemplo de código muestra cómo un <xref:System.Web.UI.WebControls.ObjectDataSource> objeto admite el almacenamiento en caché. El segundo ejemplo de código muestra cómo implementar un método contenedor que devuelve un <xref:System.Data.DataSet> objeto para habilitar el almacenamiento en caché con un <xref:System.Web.UI.WebControls.ObjectDataSource> objeto.  
  
 En el ejemplo de código siguiente se muestra cómo un <xref:System.Web.UI.WebControls.ObjectDataSource> control admite el almacenamiento en caché. Para habilitar el almacenamiento en caché, debe implementar el método que recupera los datos, que se identifican mediante el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad para devolver los datos como un <xref:System.Data.DataSet> objeto. En este ejemplo, el <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> propiedad está establecida en `true`y el <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> y <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> se establecen las propiedades. El <xref:System.Web.UI.WebControls.ObjectDataSource> almacena en caché los datos devueltos por la <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad durante 30 segundos.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/CS/objds6cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/VB/objds6vb.aspx#1)]  
  
 En el ejemplo de código siguiente se muestra cómo implementar un método contenedor que devuelve un <xref:System.Data.DataSet> objeto para habilitar el almacenamiento en caché con un <xref:System.Web.UI.WebControls.ObjectDataSource> control. En la implementación base de la `EmployeeLogic` (clase), el `GetAllEmployees` método devuelve un <xref:System.Collections.ArrayList> objeto. En lugar de refactorizar el objeto completamente para trabajar con el <xref:System.Web.UI.WebControls.ObjectDataSource> en una página de formularios Web Forms, un método contenedor denominado `GetAllEmployeesAsDataSet` se agrega que devuelve un conjunto de `NorthwindEmployee` datos como un <xref:System.Data.DataSet>.  
  
 Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.WebControls.ObjectDataSource> clase.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="CacheExpirationPolicy">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheExpirationPolicy As DataSourceCacheExpiry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::DataSourceCacheExpiry CacheExpirationPolicy { System::Web::UI::DataSourceCacheExpiry get(); void set(System::Web::UI::DataSourceCacheExpiry value); };" />
      <MemberSignature Language="F#" Value="member this.CacheExpirationPolicy : System.Web.UI.DataSourceCacheExpiry with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceCacheExpiry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el comportamiento de expiración de la memoria caché que, combinado con la duración, describe el comportamiento de almacenamiento en caché que usa el control de origen de datos.</summary>
        <value>Uno de los valores de <see cref="T:System.Web.UI.DataSourceCacheExpiry" />. El valor predeterminado es <see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ObjectDataSource> control admite el almacenamiento en caché de datos. Mientras se almacena en caché de datos, las llamadas a la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> recuperar datos desde la memoria caché en lugar de la empresa del método de objeto que la <xref:System.Web.UI.WebControls.ObjectDataSource> funciona con. Cuando la memoria caché expira, el <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método recupera los datos del objeto de negocios y, a continuación, almacena en memoria caché de los datos.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource> control automáticamente almacena en caché los datos cuando el <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> propiedad está establecida en `true` y <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> propiedad se establece en un valor mayor que 0, lo que indica el número de segundos que la memoria caché almacena los datos antes de la entrada de caché se descarta. Un valor de 0 indica un período de caché infinitamente larga.  
  
 La memoria caché se regula mediante una combinación de la duración y el <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> configuración. Si el <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> propiedad está establecida en el <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> valor, el <xref:System.Web.UI.WebControls.ObjectDataSource> almacena en caché datos en la primera llamada a la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método y se guarda en la memoria para, a lo sumo, la cantidad de tiempo especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> propiedad. Los datos se pueden liberar antes de la hora de duración, si se necesita la memoria. A continuación, se actualiza la caché durante la llamada siguiente a la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método. Si el <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> propiedad está establecida en el <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> valor, el control de origen de datos almacena en caché datos en la primera llamada a la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método, pero restablece el período de tiempo para el que retiene la caché para cada llamada posterior a la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método. La memoria caché expira si no hay ninguna actividad durante un tiempo que es igual a la <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> propiedad desde la última llamada a la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método.  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos de código. El primer ejemplo de código muestra cómo un <xref:System.Web.UI.WebControls.ObjectDataSource> objeto admite el filtrado y almacenamiento en caché. El segundo ejemplo de código muestra cómo implementar un método contenedor que devuelve un <xref:System.Data.DataSet> objeto para habilitar el almacenamiento en caché y el filtrado con un <xref:System.Web.UI.WebControls.ObjectDataSource> objeto.  
  
 En el ejemplo de código siguiente se muestra cómo un <xref:System.Web.UI.WebControls.ObjectDataSource> control admite el filtrado y almacenamiento en caché. Para habilitar el filtrado y el almacenamiento en caché, debe implementar el método que recupera los datos, que se identifican mediante el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad para devolver los datos como un <xref:System.Data.DataSet> objeto. En este ejemplo, está habilitada la caché porque el `EmployeeLogic` objeto devuelve los datos como un <xref:System.Data.DataSet>, el <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> propiedad está establecida en `true`y el <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> y <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> se establecen las propiedades. El <xref:System.Web.UI.WebControls.ObjectDataSource> almacena en caché los datos devueltos por la <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad durante 30 segundos.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/CS/objds6cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/VB/objds6vb.aspx#1)]  
  
 En el ejemplo de código siguiente se muestra cómo implementar un método contenedor que devuelve un <xref:System.Data.DataSet> objeto para habilitar el almacenamiento en caché y el filtrado con un <xref:System.Web.UI.WebControls.ObjectDataSource> control. En la implementación base de la `EmployeeLogic` (clase), el `GetAllEmployees` método devuelve un <xref:System.Collections.ArrayList>. En lugar de refactorizar el objeto completamente para trabajar con el <xref:System.Web.UI.WebControls.ObjectDataSource> en una página de formularios Web Forms, un método contenedor denominado `GetAllEmployeesAsDataSet` se agrega que devuelve un conjunto de `NorthwindEmployee` datos como un <xref:System.Data.DataSet>. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.WebControls.ObjectDataSource> clase.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="CacheKeyDependency">
      <MemberSignature Language="C#" Value="public virtual string CacheKeyDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheKeyDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheKeyDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CacheKeyDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CacheKeyDependency : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una dependencia de clave definida por el usuario que está vinculada a todos los objetos de caché de datos creados por el control de origen de datos.</summary>
        <value>Una clave que identifica todos los objetos de caché creados por el objeto <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> propiedad puede establecerse en cualquier valor de cadena arbitrario.  
  
 Todos los objetos de caché expiran explícitamente cuando expira la clave. Esto le permite invalidar las entradas de caché que se crean mediante el <xref:System.Web.UI.WebControls.ObjectDataSource> desde su propia página de código mediante programación.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource> control admite el almacenamiento en caché de datos. Mientras se almacena en caché de datos, las llamadas a la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> recuperar datos desde la memoria caché en lugar de la empresa del método de objeto que la <xref:System.Web.UI.WebControls.ObjectDataSource> funciona con. Cuando la memoria caché expira, el <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método recupera los datos del objeto de negocios y, a continuación, almacena en memoria caché de los datos.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource> control automáticamente almacena en caché los datos cuando el <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> propiedad está establecida en `true` y <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> propiedad se establece en un valor mayor que 0, lo que indica el número de segundos que la memoria caché almacena los datos antes de la entrada de caché se descarta. Un valor de 0 indica una caché infinitamente larga.  
  
 Puede establecer el <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> propiedad para crear una dependencia entre todas las entradas de caché que se crean mediante el <xref:System.Web.UI.WebControls.ObjectDataSource> control y la clave. Puede caducar todas las entradas de caché mediante programación en cualquier momento mediante la expiración de la clave. Expirar la clave mediante el uso de la <xref:System.Web.Caching.Cache.Remove%2A?displayProperty=nameWithType> método con el actual <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> valor como parámetro.  
  
 Se crea una entrada de caché única para cada combinación de la <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, y <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> propiedades. Varios <xref:System.Web.UI.WebControls.ObjectDataSource> controles pueden utilizar las mismas entradas de caché en escenarios donde se cargan los datos con el mismo tipo, método y parámetros.  
  
   
  
## Examples  
 Los tres ejemplos siguientes muestran una página Web, una clase de página de código subyacente y una clase de acceso a datos que recuperan registros de la tabla Employees de la base de datos Northwind.  
  
 El primer ejemplo muestra una página Web que contiene dos <xref:System.Web.UI.WebControls.ObjectDataSource> controles, un <xref:System.Web.UI.WebControls.DropDownList> control y un <xref:System.Web.UI.WebControls.DetailsView> control. La primera <xref:System.Web.UI.WebControls.ObjectDataSource> control y el <xref:System.Web.UI.WebControls.DropDownList> control se usan para recuperar y mostrar los nombres de los empleados de la base de datos. El segundo <xref:System.Web.UI.WebControls.ObjectDataSource> control y el <xref:System.Web.UI.WebControls.DetailsView> control se usan para recuperar y mostrar el registro del empleado seleccionado por el usuario.  
  
 Almacenamiento en caché está habilitado para el <xref:System.Web.UI.WebControls.ObjectDataSource> control. Por lo tanto, cada registro se recupera sólo una vez desde la base de datos. El <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> propiedad está establecida en "EmployeeDetails", pero cualquier valor de cadena puede funcionar como clave. La página Web también incluye un <xref:System.Web.UI.WebControls.Button> control que el usuario puede hacer clic para que expiren los datos en caché.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx#3)]  
  
 El segundo ejemplo muestra un controlador para el <xref:System.Web.UI.Control.Load> eventos y un controlador para el <xref:System.Web.UI.WebControls.Button.Click> eventos de la <xref:System.Web.UI.WebControls.Button> control. El <xref:System.Web.UI.Control.Load> controlador de eventos crea un elemento de caché con una clave establecida en el <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> valor. El <xref:System.Web.UI.WebControls.Button.Click> controlador de eventos quita el elemento de caché cuya clave es igual a la <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> valor. Cuando se quita el elemento en caché, todos los datos almacenados en caché depende de la clave ha expirado.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx.cs#4)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx.vb#4)]  
  
 El tercer ejemplo muestra la clase de acceso a datos que interactúa con la base de datos Northwind. La clase usa LINQ para consultar la tabla Employees. El ejemplo requiere una clase LINQ to SQL que representa la base de datos Northwind y la tabla Employees. Para obtener más información, vea [Cómo: Crear clases LINQ to SQL en un proyecto Web](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberSignature Language="F#" Value="member this.ConflictDetection : System.Web.UI.ConflictOptions with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que determina si solo se pasan los nuevos valores al método <see langword="Update" /> o si se pasan tanto los antiguos como los nuevos al método <see langword="Update" />.</summary>
        <value>Uno de los valores de <see cref="T:System.Web.UI.ConflictOptions" />. De manera predeterminada, es <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad determina si los parámetros para los valores antiguos y nuevos se aplican al método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> propiedad. Por ejemplo, si el método es especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad devuelve un <xref:System.Data.DataTable> control con las columnas `Name` y `Number`y el <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> propiedad está establecida en el <xref:System.Web.UI.ConflictOptions.OverwriteChanges> campo, se crean parámetros para `Name` y `Number` para el `Update` método. Si el <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> propiedad está establecida en el <xref:System.Web.UI.ConflictOptions.CompareAllValues> los parámetros de valor, se crean para `Name`, `Number`, `original_Name`, y `original_Number`. (El nombre exacto de los parámetros para los valores originales depende el <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> propiedad.) El <xref:System.Web.UI.WebControls.ObjectDataSource> , a continuación, determina si el método que está especificado en el <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> propiedad tiene parámetros que coinciden.  
  
 Control de simultaneidad es una técnica que los almacenes de datos se utilizan para controlar cómo se lee y cuando varios clientes obtienen acceso y manipular los mismos datos puede cambiar en el almacén de datos. Por ejemplo, un cliente lee los datos y presentarlo a un usuario, mientras que otro cliente lee los mismos datos y presentarlo a un usuario diferente. Si ambos usuarios actualizarán los datos y envían al almacenamiento de datos, podría producirse un resultado inesperado, porque ambos clientes podrían proporcionar valores diferentes para los mismos datos. Esto se considera un conflicto. Estableciendo el <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> propiedad a la <xref:System.Web.UI.ConflictOptions.CompareAllValues> valor, el `Update` método, a continuación, puede comparar los valores antiguos y nuevos para el origen de datos original para detectar conflictos y controlarlos según sea necesario.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> propiedad delega en el <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto que está asociado el <xref:System.Web.UI.WebControls.ObjectDataSource> control.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ConflictOptions" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="ConvertNullToDBNull">
      <MemberSignature Language="C#" Value="public bool ConvertNullToDBNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertNullToDBNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull" />
      <MemberSignature Language="VB.NET" Value="Public Property ConvertNullToDBNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertNullToDBNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertNullToDBNull : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el control <see cref="T:System.Web.UI.WebControls.Parameter" /> convierte automáticamente los valores de <see cref="F:System.DBNull.Value" /> que se pasan a una operación de actualización, inserción o eliminación desde <see langword="null" /> al valor <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <value><see langword="true" /> si todos los valores <see langword="null" /> de los objetos <see cref="T:System.Web.UI.WebControls.Parameter" /> pasados al control <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> se convierte automáticamente en valores <see cref="F:System.DBNull.Value" />; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No convertir `null` a la <xref:System.DBNull.Value> valor puede provocar errores en tiempo de ejecución. Use la <xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull%2A> propiedad para indicar si <xref:System.Web.UI.WebControls.Parameter> se convierten automáticamente los valores que se pasan a la operación de eliminación, inserción o actualización de `null` a la <xref:System.DBNull.Value> valor por el <xref:System.Web.UI.WebControls.ObjectDataSource> control.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.DBNull.Value" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="DataObjectTypeName">
      <MemberSignature Language="C#" Value="public string DataObjectTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataObjectTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property DataObjectTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataObjectTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataObjectTypeName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre de una clase que el control <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> utiliza para un parámetro de una operación que actualiza, inserta o elimina datos, en lugar de pasar valores individuales desde el control enlazado a datos.</summary>
        <value>Nombre de clase completo o parcial que identifica el tipo del objeto que <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> puede usar como parámetro para una operación <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />, <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /> o <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />. El valor predeterminado es una cadena vacía ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En lugar de especificar varios parámetros que se pasan a la <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>, y <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> métodos, puede crear un objeto que agrega varios valores de campo de datos. Este un objeto se pasa a los métodos, en lugar de varios parámetros.  
  
 El comportamiento predeterminado de un <xref:System.Web.UI.WebControls.ObjectDataSource> control que está enlazado a un control enlazado a datos es que el control enlazado a datos crea un <xref:System.Web.UI.WebControls.Parameter> objeto para cada parámetro en el origen de datos. Si el objeto de negocios tiene muchos campos, el método resultante también contiene muchos campos. El <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propiedad le permite especificar un tipo que tiene una propiedad para cada campo de datos. A continuación, en lugar de pasar varios parámetros al método, el runtime crea un objeto y establece todas sus propiedades. Este único objeto se agrega a la colección de parámetros para la llamada al método.  
  
 El tipo especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propiedad debe tener un constructor predeterminado que no tiene parámetros, por lo que el <xref:System.Web.UI.WebControls.ObjectDataSource> control puede crear una instancia del tipo. El tipo debe tener también las propiedades configurables que permiten la <xref:System.Web.UI.WebControls.ObjectDataSource> control para rellenar el objeto con valores que se pasan desde el control enlazado a datos. Los nombres de propiedad en el <xref:System.Web.UI.WebControls.ObjectDataSource> control deben coincidir exactamente con los nombres de parámetro de valores que se pasan por el control enlazado a datos.  
  
 Cuando el <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propiedad está establecida y el <xref:System.Web.UI.WebControls.ObjectDataSource> control está asociado a un control enlazado a datos, los métodos que se especifican mediante el <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> y <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> las propiedades deben tener un parámetro del tipo especificado en el <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propiedad. Si el <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> propiedad está establecida en el <xref:System.Web.UI.ConflictOptions.OverwriteChanges> valor, el método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> propiedad debe tener un parámetro del tipo especificado en el <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propiedad. Si el <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> propiedad está establecida en el <xref:System.Web.UI.ConflictOptions.CompareAllValues> valor, el método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> propiedad debe tener dos parámetros del tipo especificado en el <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propiedad. El primer parámetro contiene los valores originales; el segundo parámetro contiene los nuevos valores.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propiedad delega en el <xref:System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName%2A> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSourceView> que está asociado con el <xref:System.Web.UI.WebControls.ObjectDataSource> control.  
  
   
  
## Examples  
 La sección contiene dos ejemplos de código. El primer ejemplo de código muestra cómo implementar un tipo que combina todos los valores de parámetro en un objeto, utilizando el <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propiedad. El segundo ejemplo de código muestra la página Web que utiliza las dos clases que se usan en el primer ejemplo de código.  
  
 En el ejemplo de código siguiente se muestra cómo implementar un tipo que combina todos los valores de parámetro en un objeto, utilizando el <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propiedad. El método select de la `AggregateData` clase devuelve un <xref:System.Data.DataTable> objeto con dos columnas denominadas `Name` y `Number`. De forma similar, el `NewData` clase define dos propiedades de lectura/escritura, `Name` y `Number`. El `Insert` método de la `AggregateData` clase toma un parámetro de tipo `NewData`. El `TypeName` propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSource> está establecido en `AggregateData` y <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propiedad está establecida en `NewData`.  
  
 [!code-csharp[ObjectDataSourceDataObjectTypeName#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/CS/AggregateData.cs#2)]
 [!code-vb[ObjectDataSourceDataObjectTypeName#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/VB/AggregateData.vb#2)]  
  
 El ejemplo de código siguiente muestra la página Web que utiliza las dos clases que se usan en el ejemplo de código anterior.  
  
 [!code-aspx-csharp[ObjectDataSourceDataObjectTypeName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/CS/AggregateDataPageCS.aspx#1)]
 [!code-aspx-vb[ObjectDataSourceDataObjectTypeName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/VB/AggregateDataPageVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4">Usar parámetros con el Control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; int" Usage="objectDataSource.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Realiza una operación de eliminación llamando al método que se identifica mediante la propiedad <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" /> con cualquier parámetro que esté en la colección <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />.</summary>
        <returns>Valor que representa el número de filas eliminadas del almacenamiento de datos subyacente si la propiedad <see cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows" /> de <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> está establecida en el evento <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />; de lo contrario, es -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Antes de la <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> se realiza el <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A> se llama al método para provocar el <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> eventos. Puede controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> eventos para examinar los valores de los parámetros y realice algún preprocesamiento antes de realizar una <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> operación. Para realizar una operación de eliminación, la <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto usa la reflexión para crear una instancia del objeto que se identifica mediante el <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> propiedad. A continuación, llama al método identificado por la <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> propiedad mediante asociada ninguna <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> propiedades. Si los parámetros de eliminación proceden de un control enlazado a datos asociado, se crea el nombre de los parámetros de acuerdo con la <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> propiedad. Después de la <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> se complete la operación, el <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> se llama al método para provocar el <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> eventos. Puede controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> eventos para examinar los valores devueltos, parámetros de salida y las excepciones y para realizar cualquier procesamiento posterior.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> método delega a la <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> método de la <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto que está asociado el <xref:System.Web.UI.WebControls.ObjectDataSource> control.  
  
## <a name="data-bound-controls"></a>Controles enlazados a datos  
 Cuando el <xref:System.Web.UI.WebControls.ObjectDataSource> control está asociado con un control enlazado a datos, como el <xref:System.Web.UI.WebControls.GridView> control, no es necesario llamar a la <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> método desde el código de página. El <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> método se invoca directamente por el control enlazado a datos en su lugar.  
  
 Para obtener más información acerca de la combinación de parámetros, la duración de objetos y la resolución del método, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Deleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tiene lugar cuando se termina una operación de <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> eventos para examinar los valores de parámetros de salida o valor devuelto, o para determinar si se produjo una excepción después de un <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> ha completado la operación. El valor devuelto, los parámetros de salida y las propiedades de control de excepciones están disponibles desde el <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> objeto que está asociado con el evento.  
  
 Puede usar el <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> objeto para devolver el número de filas que se eliminaron de la <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> método. Para ello, establezca el <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> propiedad. Si se devuelve el número de filas eliminadas desde el método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> propiedad, el valor está disponible en el <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> objeto.  
  
 Para obtener más información acerca de cómo controlar eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos de código. El primer ejemplo de código muestra cómo usar un <xref:System.Web.UI.WebControls.ObjectDataSource> objeto con un objeto comercial y un <xref:System.Web.UI.WebControls.GridView> control para eliminar datos. El segundo ejemplo de código se muestra la `EmployeeLogic` clase que se usa en el primer ejemplo de código.  
  
 En el ejemplo de código siguiente se muestra cómo usar un <xref:System.Web.UI.WebControls.ObjectDataSource> control con un objeto comercial y un <xref:System.Web.UI.WebControls.GridView> control para eliminar datos. Inicialmente, el <xref:System.Web.UI.WebControls.GridView> control muestra un conjunto de todos los empleados, utilizando el método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad para recuperar los datos desde el `EmployeeLogic` objeto. Dado que el <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> propiedad está establecida en `true`, el <xref:System.Web.UI.WebControls.GridView> automáticamente control muestra un **eliminar** botón.  
  
 Si hace clic en el **eliminar** botón, la operación de eliminación se realiza mediante el método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> propiedad y los parámetros que se especifican en el <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> colección. En este ejemplo de código, también se realizan algunos pasos de preprocesamiento y posteriores al procesamiento. El `NorthwindEmployeeDeleting` delegado se llama para controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> eventos antes de realizar la operación y el `NorthwindEmployeeDeleted` delegado se llama para controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> eventos una vez completada la operación para realizar el control de excepciones. En este ejemplo de código, si un `NorthwindDataException` es produce, se controla mediante el `NorthwindEmployeeDeleted` método.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 El siguiente ejemplo de código muestra la `EmployeeLogic` clase que se usa en el ejemplo de código anterior.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Uso de Entity Framework y el Control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre del método o la función que invoca el control <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> para eliminar los datos.</summary>
        <value>Cadena que representa el nombre del método o función que usa el objeto <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> para eliminar datos. El valor predeterminado es una cadena vacía ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para eliminar un registro de datos a la vez, en lugar de en un lote, se supone el objeto de negocios.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> propiedad delega en el <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto que está asociado el <xref:System.Web.UI.WebControls.ObjectDataSource> control.  
  
 Asegúrese de que los nombres de parámetro configuran para el <xref:System.Web.UI.WebControls.ObjectDataSource> en controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> colección coinciden con los nombres de columna devueltos por el método select.  
  
## <a name="object-lifetime"></a>Duración de objetos  
 El método que se identifica mediante el <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> propiedad puede ser un método de instancia o un `static` (`Shared` en Visual Basic) (método). Si es un método de instancia, el objeto de negocios se crea y se destruye cada vez que el <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> se llama a la propiedad. Puede controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> y <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> eventos para que funcionen con el objeto de negocios antes de la <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> se llama a la propiedad. También puede controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> evento que se genera después de la <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> se llama a la propiedad. Si el objeto comercial implementa la <xref:System.IDisposable> interfaz, el <xref:System.IDisposable.Dispose%2A> se llama al método antes de que se destruya el objeto. Si el método es un `static` (`Shared` en Visual Basic) método, nunca se crea el objeto de negocios y no puede controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, y <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> eventos.  
  
## <a name="parameter-merging"></a>Combinación de parámetros  
 Los parámetros se agregan a la <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> colección de tres orígenes:  
  
-   Desde el control enlazado a datos en tiempo de ejecución.  
  
-   Desde el `DeleteParameters` elemento, mediante declaración.  
  
-   Desde el `Deleting` método, mediante declaración.  
  
 En primer lugar, los parámetros que se generan a partir de los controles enlazados a datos se agregan a la <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> colección. Por ejemplo, si la <xref:System.Web.UI.WebControls.ObjectDataSource> control se enlaza a un <xref:System.Web.UI.WebControls.GridView> control que tiene las columnas `Name` y `Number`, parámetros para `Name` y `Number` se agregan a la colección. El nombre exacto del parámetro depende del <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> propiedad. El tipo de datos de estos parámetros es `string`. A continuación, los parámetros que aparecen en el `DeleteParameters` se agregan el elemento. Si un parámetro en el `DeleteParameters` se encuentra el elemento con el mismo nombre que un parámetro que ya está en el <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> colección, el parámetro existente se modifica para que coincida con el parámetro que se especifica en el `DeleteParameters` elemento. Normalmente, se usa para modificar el tipo de los datos en el parámetro. Por último, puede agregar y quitar parámetros mediante programación el <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> evento, que se produce antes de la <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> se ejecuta el método. El método se resuelve después de los parámetros se combinan. Resolución del método se describe en la sección siguiente.  
  
## <a name="method-resolution"></a>Resolución del método  
 Cuando el <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> llama el método, los campos de datos desde el control enlazado a datos, los parámetros que se crearon de forma declarativa en el `DeleteParameters` elemento y los parámetros que se agregaron en el <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> controlador de eventos se combinan. (Para obtener más información, consulte la sección anterior). La <xref:System.Web.UI.WebControls.ObjectDataSource> objeto, a continuación, intenta encontrar un método que se va a llamar. En primer lugar, busca uno o varios métodos con el nombre especificado en el <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> propiedad. Si no se encuentra ninguna coincidencia, un <xref:System.InvalidOperationException> es una excepción. Si se encuentra una coincidencia, a continuación, busca nombres de parámetros coincidentes. Por ejemplo, suponga que el tipo especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> propiedad tiene dos métodos denominados `DeleteARecord`. Una `DeleteARecord` tiene un parámetro, `ID`y el otro `DeleteARecord` tiene dos parámetros, `Name` y `Number`. Si el <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> colección tiene sólo un parámetro denominado `ID`, el `DeleteARecord` método con solo el `ID` parámetro se denomina. El tipo del parámetro no se comprueba en la resolución de los métodos. No importa el orden de los parámetros.  
  
 Si el <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propiedad está establecida, el método se resuelve de manera diferente. El <xref:System.Web.UI.WebControls.ObjectDataSource> busca un método con el nombre especificado en el <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> propiedad que toma un parámetro del tipo que se especifica en el <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propiedad. En este caso, el nombre del parámetro no importa.  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos de código. El primer ejemplo de código muestra cómo usar un <xref:System.Web.UI.WebControls.ObjectDataSource> objeto con un objeto comercial y un <xref:System.Web.UI.WebControls.GridView> control para eliminar datos. El segundo ejemplo de código se muestra la `EmployeeLogic` clase que se usa en el primer ejemplo de código.  
  
 En el ejemplo de código siguiente se muestra cómo usar un <xref:System.Web.UI.WebControls.ObjectDataSource> control con un objeto comercial y un <xref:System.Web.UI.WebControls.GridView> control para eliminar datos. Inicialmente, el <xref:System.Web.UI.WebControls.GridView> control muestra un conjunto de todos los empleados, utilizando el método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad para recuperar los datos desde el `EmployeeLogic` objeto. Dado que el <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> propiedad está establecida en `true`, el <xref:System.Web.UI.WebControls.GridView> automáticamente control muestra un **eliminar** botón.  
  
 Si hace clic en el **eliminar** botón, la operación de eliminación se realiza mediante el método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> propiedad y los parámetros que se especifican en el <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> colección. En este ejemplo de código, también se realizan algunos pasos de preprocesamiento y posteriores al procesamiento. El `NorthwindEmployeeDeleting` delegado se llama para controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> eventos antes de realizar la operación y el `NorthwindEmployeeDeleted` delegado se llama para controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> eventos una vez completada la operación para realizar el control de excepciones. En este ejemplo, si un `NorthwindDataException` es produce, se controla mediante el `NorthwindDataException` delegar.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 El siguiente ejemplo de código muestra la `EmployeeLogic` clase que se usa en el ejemplo de código anterior.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Uso de Entity Framework y el Control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la colección de parámetros que contiene los parámetros utilizados por el método <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />.</summary>
        <value>Objeto <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> que contiene los parámetros utilizados por el método <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los nombres y tipos de los parámetros que se encuentran en el <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> colección debe coincidir con los nombres y tipos de los parámetros en el <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> firma del método. Los nombres de parámetro se ven afectados por la <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> propiedad y distinguen mayúsculas de minúsculas. Los parámetros de la colección dependen de los datos que se encuentra en el control enlazado a datos, los parámetros que se especifican mediante declaración y los parámetros que se agregan mediante programación. Para obtener más información, vea "Combinación de parámetros" en <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> y [usar parámetros con el ObjectDataSource Control](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> propiedad recupera la <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> propiedad que está contenida en el <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto que está asociado el <xref:System.Web.UI.WebControls.ObjectDataSource> control.  
  
 Para obtener más información acerca de la combinación de parámetros, la duración de objetos y la resolución del método, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>.  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos de código. El primer ejemplo de código muestra cómo usar un <xref:System.Web.UI.WebControls.ObjectDataSource> objeto con un objeto comercial y un <xref:System.Web.UI.WebControls.GridView> control para eliminar datos. El segundo ejemplo de código se muestra la `EmployeeLogic` clase que se usa en el primer ejemplo de código.  
  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSource> control con un objeto comercial y un <xref:System.Web.UI.WebControls.GridView> control para eliminar datos. Inicialmente, el <xref:System.Web.UI.WebControls.GridView> control muestra un conjunto de todos los empleados, utilizando el método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad para recuperar los datos desde el `EmployeeLogic` objeto. Dado que el <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> propiedad está establecida en `true`, el <xref:System.Web.UI.WebControls.GridView> automáticamente control muestra un **eliminar** botón.  
  
 Si hace clic en el **eliminar** botón, el <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> se llama al evento con dos parámetros. Un parámetro, `EmpID`, procede de la <xref:System.Web.UI.WebControls.DataGrid> controlar y se basa en el <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> propiedad. El otro parámetro procede de declarativo <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> propiedad. El `EmployeeLogic` clase sobrecargas el `DeleteEmployee` método. Una sobrecarga toma un `NorthwindEmployee` parámetro y el otro toma un <xref:System.Int32> parámetro denominado `anID`. En el <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> eventos, las entradas de la <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> propiedad se ajustan para incluir solo un parámetro denominado `anID` con el valor de `original_EmpID`. Cuando existe el controlador de eventos, la coincidencia `DeleteEmployee` se llama al método.  
  
 En el ejemplo de código siguiente se muestra la página Web que muestra la <xref:System.Web.UI.WebControls.DataGrid> control y controla el <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> eventos.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_11#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/CS/objds11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_11#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/VB/objds11vb.aspx#1)]  
  
 El siguiente ejemplo de código muestra la `EmployeeLogic` clase que se usa en el ejemplo de código anterior.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_11#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/CS/northwindemployee11.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_11#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/VB/northwindemployee11.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Deleting;" />
      <MemberSignature Language="F#" Value="member this.Deleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Deleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tiene lugar antes de una operación de <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> eventos para realizar la inicialización adicional que es específica de la aplicación, para validar los valores de parámetros o para cambiar los valores de parámetro antes de la <xref:System.Web.UI.WebControls.ObjectDataSource> control realiza la operación de eliminación. Los parámetros están disponibles como un <xref:System.Collections.IDictionary> colección que tiene acceso el <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> propiedad, que se expone mediante el <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> objeto.  
  
 Puede cancelar la operación de eliminación estableciendo el <xref:Microsoft.Win32.SessionEndingEventArgs.Cancel%2A> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> a `true`.  
  
 Para obtener más información acerca de cómo controlar eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos de código. El primer ejemplo de código muestra cómo usar un <xref:System.Web.UI.WebControls.ObjectDataSource> objeto con un objeto comercial y un <xref:System.Web.UI.WebControls.GridView> control para eliminar datos. El segundo ejemplo de código se muestra la `EmployeeLogic` clase que se usa en el primer ejemplo de código.  
  
 En el ejemplo de código siguiente se muestra cómo usar un <xref:System.Web.UI.WebControls.ObjectDataSource> control con un objeto comercial y un <xref:System.Web.UI.WebControls.GridView> control para eliminar datos. Inicialmente, el <xref:System.Web.UI.WebControls.GridView> control muestra un conjunto de todos los empleados, utilizando el método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad para recuperar los datos desde el `EmployeeLogic` objeto. Dado que el <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> propiedad está establecida en `true`, el <xref:System.Web.UI.WebControls.GridView> automáticamente control muestra un **eliminar** botón.  
  
 Si hace clic en el **eliminar** botón, la operación de eliminación se realiza mediante el método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> propiedad y los parámetros que se especifican en el <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> colección. En este ejemplo de código, también se realizan algunos pasos de preprocesamiento y posteriores al procesamiento. El `NorthwindEmployeeDeleting` delegado se llama para controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> eventos antes de realizar la operación y el `NorthwindEmployeeDeleted` delegado se llama para controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> eventos una vez completada la operación para realizar el control de excepciones. En este ejemplo de código, si un `NorthwindDataException` es produce, se controla mediante el `NorthwindEmployeeDeleted` método.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 El siguiente ejemplo de código muestra la `EmployeeLogic` clase que se usa en el ejemplo de código anterior.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="EnableCaching">
      <MemberSignature Language="C#" Value="public virtual bool EnableCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableCaching : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el control <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> está habilitado.</summary>
        <value>Es <see langword="true" /> si el almacenamiento de datos en caché está habilitado para el control de origen de datos; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ObjectDataSource> control admite el almacenamiento en caché de datos. Mientras se almacena en caché de datos, las llamadas a la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método recuperar datos de la memoria caché en lugar de <xref:System.Web.UI.WebControls.ObjectDataSource> creando una instancia del objeto comercial y llamar a su método de datos. Cuando la memoria caché expira, el <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método recupera los datos del objeto de negocios y, a continuación, almacena en memoria caché de los datos.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource> control automáticamente almacena en caché los datos cuando el <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> propiedad está establecida en `true` y <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> propiedad se establece en un valor mayor que 0, lo que indica el número de segundos que la memoria caché almacena los datos antes de la entrada de caché se descarta. Un valor de 0 indica una caché infinitamente larga.  
  
   
  
## Examples  
 Los tres ejemplos siguientes muestran una página Web, una clase de página de código subyacente y una clase de acceso a datos que recuperan registros de la tabla Employees de la base de datos Northwind.  
  
 El primer ejemplo muestra una página Web que contiene dos <xref:System.Web.UI.WebControls.ObjectDataSource> controles, un <xref:System.Web.UI.WebControls.DropDownList> control y un <xref:System.Web.UI.WebControls.DetailsView> control. La primera <xref:System.Web.UI.WebControls.ObjectDataSource> control y el <xref:System.Web.UI.WebControls.DropDownList> control se usan para recuperar y mostrar los nombres de los empleados de la base de datos. El segundo <xref:System.Web.UI.WebControls.ObjectDataSource> control y el <xref:System.Web.UI.WebControls.DetailsView> control se usan para recuperar y mostrar el registro del empleado seleccionado por el usuario.  
  
 Almacenamiento en caché está habilitado para el <xref:System.Web.UI.WebControls.ObjectDataSource> control. Por lo tanto, cada registro se recupera sólo una vez desde la base de datos. El <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> propiedad está establecida en "EmployeeDetails", pero cualquier valor de cadena puede funcionar como clave. La página Web también incluye un <xref:System.Web.UI.WebControls.Button> control que el usuario puede hacer clic para que expiren los datos en caché.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx#3)]  
  
 El segundo ejemplo muestra un controlador para el <xref:System.Web.UI.Control.Load> eventos y un controlador para el <xref:System.Web.UI.WebControls.Button.Click> eventos de la <xref:System.Web.UI.WebControls.Button> control. El <xref:System.Web.UI.Control.Load> controlador de eventos crea un elemento de caché con una clave establecida en el <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> valor. El <xref:System.Web.UI.WebControls.Button.Click> controlador de eventos quita el elemento de caché cuya clave es igual a la <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> valor. Cuando se quita el elemento en caché, todos los datos almacenados en caché depende de la clave ha expirado.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx.cs#4)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx.vb#4)]  
  
 El tercer ejemplo muestra la clase de acceso a datos que interactúa con la base de datos Northwind. La clase usa LINQ para consultar la tabla Employees. El ejemplo requiere una clase LINQ to SQL que representa la base de datos Northwind y la tabla Employees. Para obtener más información, vea [Cómo: Crear clases LINQ to SQL en un proyecto Web](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">La propiedad <see cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" /> se establece en <see langword="true" /> cuando el método especificado por la propiedad <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> devuelve <see cref="T:System.Data.Common.DbDataReader" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="EnablePaging">
      <MemberSignature Language="C#" Value="public bool EnablePaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnablePaging : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el control de origen de datos admite la paginación en el conjunto de datos recuperado.</summary>
        <value>Es <see langword="true" /> si el control de origen de datos admite la paginación a través de los datos que recupera; de lo contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Paginación mediante el <xref:System.Web.UI.WebControls.ObjectDataSource> control se controla estableciendo la <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A>, y <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> propiedades de la <xref:System.Web.UI.WebControls.ObjectDataSource> y definir un método de selección en el objeto de negocios con los parámetros adecuados. Cuando el <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> propiedad está establecida en `true`, el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> colección incluye dos parámetros adicionales para la primera fila que se solicita y el número de filas que se solicitan. Estos dos parámetros se denominan según se define en el <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> y <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> propiedades. El `Select` método debe devolver el número solicitado de filas, empezando por el índice especificado. Dado que los datos no podrían dividirse uniformemente por el tamaño de página, la última página podría contener menos filas. Por lo tanto, el número de filas que se solicitan es realmente el número máximo de filas que se devuelven.  
  
 Cuando está habilitada la paginación en el control enlazado a datos asociado, el control enlazado a datos se llama a la `Select` método con el índice inicial y el número de filas que son necesarios. Además, si la <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> propiedad está establecida, el control enlazado a datos llama al método antes de representar los controles de paginación. Por ejemplo, si un <xref:System.Web.UI.WebControls.GridView> control tiene habilitada la paginación con un tamaño de página de 5 y el método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> propiedad devuelve 20, sólo 4 páginas se muestran en el elemento de paginación.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> propiedad delega en el <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto.  
  
   
  
## Examples  
 Los tres ejemplos siguientes muestran una página Web, una clase de página de código subyacente y una clase de acceso a datos que permiten al usuario elegir de cuántos registros se muestran en la página.  
  
 La página Web contiene un <xref:System.Web.UI.WebControls.ObjectDataSource> control cuya <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> propiedad está establecida en `true`. El <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> propiedad está establecida en el nombre de un método que devuelve el número total de registros en la consulta. El <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> propiedad y el <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> propiedad se establecen en los nombres de los parámetros que se usan en el método Select. La página también contiene un <xref:System.Web.UI.WebControls.DropDownList> control.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 El segundo ejemplo muestra un controlador para el <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> eventos de la <xref:System.Web.UI.WebControls.DropDownList> control. El código en el controlador se establece la <xref:System.Web.UI.WebControls.GridView.PageSize%2A> propiedad a la selección del usuario.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 El tercer ejemplo muestra la clase de acceso a datos que recupera datos de la tabla Customers. Incluye un método denominado `GetSubsetOfEmployees`, que se asigna a la <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSource> control. El ejemplo también incluye un método denominado `GetEmployeeCount`, que se asigna a la <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSource> control. La clase usa LINQ para consultar la tabla Customers. El ejemplo requiere una clase LINQ to SQL que representa la base de datos Northwind y la tabla Customers. Para obtener más información, vea [Cómo: Crear clases LINQ to SQL en un proyecto Web](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterExpression : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una expresión de filtrado que se aplica cuando se llama al método que se especifica mediante la propiedad <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />.</summary>
        <value>Cadena que representa una expresión de filtrado aplicada cuando se recuperan datos utilizando el método o la función identificados por la propiedad <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ObjectDataSource> control admite el filtrado de datos solo cuando el <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método devuelve un <xref:System.Data.DataSet> o <xref:System.Data.DataTable> objeto.  
  
 La sintaxis que se usa para el <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> propiedad es una expresión de estilo de cadena de formato. La sintaxis de expresión de filtro es la misma sintaxis que acepta el <xref:System.Data.DataColumn.Expression%2A> propiedad. Si agrega parámetros a la <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> colección, también puede incluir marcadores de posición de cadena de formato. Por ejemplo, incluir `"{0}"` en la expresión para sustituir los valores de parámetro. Los marcadores de posición se reemplazan según el índice del parámetro en el <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> colección.  
  
 Puede incluir parámetros en la <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> propiedad. Si el tipo del parámetro es un tipo de cadena o un carácter, incluya el parámetro entre comillas simples. Las comillas no son necesarias si el parámetro es un tipo numérico.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> colección contiene los parámetros que se evalúan para los marcadores de posición que se encuentran en el <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> propiedad.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> propiedad delega en el <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto que está asociado el <xref:System.Web.UI.WebControls.ObjectDataSource> control.  
  
> [!NOTE]
>  Debe validar cualquier valor de parámetro de filtro que reciba desde el cliente. El tiempo de ejecución simplemente sustituye el valor del parámetro en la expresión de filtro y se aplica a la <xref:System.Data.DataSet> o <xref:System.Data.DataTable> objeto devuelto por la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método. Si usas el <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> propiedad como medida de seguridad para limitar el número de elementos que se devuelven, debe validar los valores de parámetro antes de que se produzca el filtrado.  
  
   
  
## Examples  
 El código siguiente muestra cómo mostrar datos filtrados mediante un <xref:System.Web.UI.WebControls.ObjectDataSource> control para recuperar datos de un objeto de negocios de nivel intermedio y un <xref:System.Web.UI.WebControls.GridView> control para mostrar los resultados. El <xref:System.Web.UI.WebControls.ObjectDataSource> control puede filtrar los datos solo cuando el método que recupera los datos recupera como una <xref:System.Data.DataSet> o <xref:System.Data.DataTable> objeto. Por este motivo, el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad identifica un método de objeto comercial que recupera los datos como un <xref:System.Data.DataSet>.  
  
 El ejemplo de código consta de un <xref:System.Web.UI.WebControls.TextBox> (control), un <xref:System.Web.UI.WebControls.GridView> (control), el <xref:System.Web.UI.WebControls.ObjectDataSource> control y un **enviar** botón. De forma predeterminada, el <xref:System.Web.UI.WebControls.TextBox> se rellena con el nombre de uno de los empleados de Northwind Traders. El <xref:System.Web.UI.WebControls.GridView> muestra información acerca del empleado que se identifica por su nombre en el <xref:System.Web.UI.WebControls.TextBox>. Para recuperar datos de otro empleado, escriba el nombre completo del empleado en el <xref:System.Web.UI.WebControls.TextBox>y, a continuación, haga clic en el **enviar** botón.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> propiedad especifica una expresión que se utiliza para filtrar los datos recuperados por el método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad. Usa marcadores de posición de parámetro que se evalúan en los parámetros que se encuentran en el <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> colección. En este ejemplo, el marcador de posición de parámetro está limitado por comillas simples porque el tipo del parámetro es un tipo de cadena que puede contener espacios. Si el tipo del parámetro es un tipo numérico o de fecha, entre comillas no son necesarios.  
  
> [!IMPORTANT]
>  Este ejemplo tiene un cuadro de texto que acepta datos proporcionados por el usuario, lo que puede suponer una amenaza para la seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 En el ejemplo de código siguiente se proporciona un ejemplo de un objeto comercial de nivel medio que usa el ejemplo de código anterior. El ejemplo de código consta de dos clases básicas:  
  
-   El `EmployeeLogic` (clase), que es una clase que encapsula la lógica de negocios.  
  
-   El `NorthwindEmployee` (clase), que es una clase de modelo que contiene sólo la funcionalidad básica necesaria para cargar y conservar los datos de la capa de datos.  
  
 Por motivos de simplicidad, el `EmployeeLogic` clase crea un conjunto de datos, en lugar de recuperar los datos de una capa de datos estático. También es útil en este ejemplo, dado que el ejemplo se basa en que se proporcione el nombre completo de un empleado de Northwind Traders para mostrar el filtrado. Para obtener un ejemplo completo, debe compilar y utilizar estas clases con los ejemplos de código de formularios Web Forms que se proporcionan.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Se estableció la propiedad <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /> y el método <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> no devuelve un objeto <see cref="T:System.Data.DataSet" /> o <see cref="T:System.Data.DataTable" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As ObjectDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberSignature Language="F#" Value="member this.Filtering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler " Usage="member this.Filtering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce antes de una operación de filtrado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.Filtering> eventos para realizar operaciones de validación en valores de parámetro de filtro antes de la <xref:System.Web.UI.WebControls.ObjectDataSource> control realiza una operación de filtrado. Puede cancelar la operación seleccionada estableciendo el <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs> a `true`. Se genera el evento sólo si el <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> se establece la propiedad.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.Filtering?displayProperty=nameWithType> eventos delega en el <xref:System.Web.UI.WebControls.ObjectDataSourceView.Filtering?displayProperty=nameWithType> eventos de la <xref:System.Web.UI.WebControls.ObjectDataSourceView> que está asociado con el <xref:System.Web.UI.WebControls.ObjectDataSource> control.  
  
> [!IMPORTANT]
>  Debe validar cualquier valor de parámetro de filtro que reciba desde el cliente. El tiempo de ejecución simplemente sustituye el valor del parámetro en la expresión de filtro y se aplica a la <xref:System.Data.DataSet> o <xref:System.Data.DataTable> objeto devuelto por la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método. Si usas el <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> propiedad como medida de seguridad para limitar el número de elementos que se devuelven, debe validar los valores de parámetro antes de que se produzca el filtrado.  
  
 Para obtener más información acerca de cómo controlar eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una colección de parámetros asociados a los marcadores de posición de parámetro de la cadena <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />.</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> que contiene un conjunto de parámetros asociados a cualquier marcador de parámetro situado en la propiedad <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ObjectDataSource> control admite el filtrado de datos solo cuando el <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método devuelve un <xref:System.Data.DataSet> o <xref:System.Data.DataTable> objeto.  
  
 La sintaxis que se usa para el <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> es una expresión de estilo de cadena de formato. La sintaxis de expresión de filtro es la misma sintaxis que acepta el <xref:System.Data.DataColumn.Expression%2A> propiedad. Si agrega parámetros a la <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> colección, también puede incluir marcadores de posición de cadena de formato. Por ejemplo, incluir `"{0}"` en la expresión para sustituir los valores de parámetro. Los marcadores de posición se reemplazan según el índice del parámetro en el <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> colección.  
  
 Puede incluir parámetros en la <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> propiedad. Si el parámetro es un tipo de carácter o cadena, escriba el parámetro entre comillas simples. Las comillas no son necesarias si el parámetro es un tipo numérico.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> propiedad recupera la <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> propiedad que está contenida en el <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto que está asociado el <xref:System.Web.UI.WebControls.ObjectDataSource> control.  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos de código. El primer ejemplo de código muestra cómo mostrar datos filtrados mediante un <xref:System.Web.UI.WebControls.ObjectDataSource> objeto para recuperar datos de un objeto de negocios de nivel intermedio y un <xref:System.Web.UI.WebControls.GridView> control para mostrar los resultados. El segundo ejemplo de código proporciona un ejemplo de un objeto comercial de nivel intermedio que se usa en el primer ejemplo de código.  
  
 El código siguiente muestra cómo mostrar datos filtrados mediante un <xref:System.Web.UI.WebControls.ObjectDataSource> control para recuperar datos de un objeto de negocios de nivel intermedio y un <xref:System.Web.UI.WebControls.GridView> control para mostrar los resultados. El <xref:System.Web.UI.WebControls.ObjectDataSource> control puede filtrar los datos solo cuando el método que recupera los datos recupera como una <xref:System.Data.DataSet> o <xref:System.Data.DataTable> objeto. Por este motivo, el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad identifica un método de objeto comercial que recupera los datos como un <xref:System.Data.DataSet>.  
  
 El ejemplo de código consta de un <xref:System.Web.UI.WebControls.TextBox> (control), un <xref:System.Web.UI.WebControls.GridView> (control), el <xref:System.Web.UI.WebControls.ObjectDataSource> control y un **enviar** botón. De forma predeterminada, el <xref:System.Web.UI.WebControls.TextBox> se rellena con el nombre de uno de los empleados de Northwind Traders. El <xref:System.Web.UI.WebControls.GridView> muestra información acerca del empleado que se identifica por su nombre en el <xref:System.Web.UI.WebControls.TextBox>. Para recuperar datos de otro empleado en el <xref:System.Web.UI.WebControls.TextBox>, escriba el nombre completo del empleado y, a continuación, haga clic en el **enviar** botón.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> propiedad especifica una expresión que se utiliza para filtrar los datos recuperados por el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad. Usa marcadores de posición de parámetro que se evalúan en los parámetros que se encuentran en el <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> colección. En este ejemplo, el marcador de posición de parámetro está limitado por comillas simples porque el tipo del parámetro es un tipo de cadena que puede contener espacios. Si el tipo del parámetro es un tipo numérico o de fecha, entre comillas no son necesarios. El <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> colección contiene un parámetro, un <xref:System.Web.UI.WebControls.FormParameter> objeto al que está enlazado el <xref:System.Web.UI.WebControls.TextBox> control.  
  
> [!IMPORTANT]
>  Debe validar cualquier valor de parámetro de filtro que reciba desde el cliente. El tiempo de ejecución simplemente sustituye el valor del parámetro en la expresión de filtro y se aplica a la <xref:System.Data.DataView> objeto devuelto por la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método. Si usas el <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> propiedad como medida de seguridad para limitar el número de elementos que se devuelven, debe validar los valores de parámetro antes de que se produzca el filtrado.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 En el ejemplo de código siguiente se proporciona un ejemplo de un objeto comercial de nivel medio que usa el ejemplo de código anterior. El ejemplo de código consta de dos clases básicas:  
  
-   El `EmployeeLogic` (clase), que es una clase que encapsula la lógica de negocios.  
  
-   El `NorthwindEmployee` (clase), que es una clase de modelo que contiene sólo la funcionalidad básica necesaria para cargar y conservar los datos de la capa de datos.  
  
 Por motivos de simplicidad, el `EmployeeLogic` clase crea un conjunto de datos, en lugar de recuperar los datos de una capa de datos estático. También es útil en este ejemplo, dado que el ejemplo se basa en que se proporcione el nombre completo de un empleado de Northwind Traders para mostrar el filtrado. Para obtener un ejemplo completo, debe compilar y utilizar estas clases con los ejemplos de código de formularios Web Forms que se proporcionan.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Ha establecido la propiedad <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /> y el método <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> no devuelve un objeto <see cref="T:System.Data.DataSet" /> o <see cref="T:System.Data.DataTable" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="override this.GetView : string -&gt; System.Web.UI.DataSourceView" Usage="objectDataSource.GetView viewName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Nombre de la vista que se va a recuperar. Dado que <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> admite sólo una vista, se omite <paramref name="viewName" />.</param>
        <summary>Recupera la vista de origen de datos con nombre asociada al control de origen de datos.</summary>
        <returns>Objeto <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> denominado <see langword="DefaultView" /> que está asociado a <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ObjectDataSource> control es compatible con la vista del origen de datos de solo uno. Al igual que con todos los objetos de vista de origen de datos, el <xref:System.Web.UI.WebControls.ObjectDataSourceView> que está asociado con los datos de control de código fuente define sus funciones, realiza todo el trabajo necesario para recuperar datos de almacenamiento de datos subyacente, y realiza operaciones como la ordenación, inserción, eliminación y actualización.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> método está pensado para ser llamado por los controles enlazados a datos, no por el código de la página.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El parámetro <paramref name="viewName" /> especificado es <see langword="null" /> o tiene un valor distinto de <see langword="DefaultView" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetViewNames" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected override System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="override this.GetViewNames : unit -&gt; System.Collections.ICollection" Usage="objectDataSource.GetViewNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera una colección de nombres que representa la lista de objetos de vista asociados al objeto <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <returns>Una interfaz <see cref="T:System.Collections.ICollection" /> que contiene los nombres de las vistas asociadas a la interfaz <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ObjectDataSource> control sólo admite una vista, denominada `DefaultView`, en sus datos subyacentes. El <xref:System.Web.UI.WebControls.ObjectDataSource.GetViewNames%2A> método devuelve una colección de solo elemento de este nombre de vista.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.GetViewNames%2A> método está pensado para ser llamado por los controles enlazados a datos, no por el código de la página.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert();" />
      <MemberSignature Language="F#" Value="member this.Insert : unit -&gt; int" Usage="objectDataSource.Insert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Realiza una operación de inserción mediante una llamada al método identificado por la propiedad <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" /> y cualquier parámetro de la colección <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />.</summary>
        <returns>Valor que representa el número de filas insertadas en el almacenamiento de datos subyacente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Antes de la <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> se realiza el <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A> se llama al método para provocar el <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> eventos. Puede controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> eventos para examinar los valores de los parámetros y realice algún preprocesamiento antes de realizar una <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operación. Para realizar una operación de inserción, el <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto usa la reflexión para crear una instancia del objeto que se identifica mediante el <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> propiedad. A continuación, llama al método identificado por la <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> propiedad mediante asociada ninguna <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> propiedades. Después de la <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> se complete la operación, el <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> se llama al método para provocar el <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> eventos. Puede controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> eventos para examinar los valores devueltos, parámetros de salida y las excepciones y para realizar cualquier procesamiento posterior.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> método delega a la <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> método de la <xref:System.Web.UI.WebControls.ObjectDataSourceView> que está asociado con el <xref:System.Web.UI.WebControls.ObjectDataSource> control.  
  
 Para obtener más información acerca de la combinación de parámetros, la duración de objetos y la resolución del método, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>.  
  
## <a name="data-bound-controls"></a>Controles enlazados a datos  
 Cuando el <xref:System.Web.UI.WebControls.ObjectDataSource> objeto está asociado con un control enlazado a datos, como el <xref:System.Web.UI.WebControls.GridView> control, no es necesario llamar a la <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> método desde el código de página. El <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> método se invoca directamente por el control enlazado a datos en su lugar.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/a806fa2c-fe6a-405f-869c-74e804a642ea">Tutorial: Enlace de datos a un objeto de negocios personalizada</related>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Inserted;" />
      <MemberSignature Language="F#" Value="member this.Inserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Inserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tiene lugar cuando se termina una operación de <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> eventos para examinar los valores de parámetros de salida o valor devuelto, o para determinar si se produjo una excepción después de un <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> ha completado la operación. El valor devuelto, los parámetros de salida y las propiedades de control de excepciones están disponibles desde el <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> objeto que está asociado con el evento.  
  
 Para obtener más información acerca de cómo controlar eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Inserting;" />
      <MemberSignature Language="F#" Value="member this.Inserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Inserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tiene lugar antes de una operación de <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> eventos para realizar la inicialización adicional que es específica de la aplicación, para validar los valores de parámetros o para cambiar los valores de parámetro antes de la <xref:System.Web.UI.WebControls.ObjectDataSource> control realiza la operación de inserción. Los parámetros están disponibles como un <xref:System.Collections.IDictionary> colección que tiene acceso el <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> propiedad, que se expone mediante el <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> objeto.  
  
 Para obtener más información acerca de cómo controlar eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos de código. El primer ejemplo de código muestra cómo usar un <xref:System.Web.UI.WebControls.ObjectDataSource> objeto con un objeto comercial y un <xref:System.Web.UI.WebControls.DetailsView> control para insertar datos. El segundo ejemplo de código proporciona un ejemplo del objeto comercial de nivel intermedio que se usa en el primer ejemplo de código.  
  
 En el ejemplo de código siguiente se muestra cómo usar un <xref:System.Web.UI.WebControls.ObjectDataSource> control con un objeto comercial y un <xref:System.Web.UI.WebControls.DetailsView> control para insertar datos. Inicialmente, el <xref:System.Web.UI.WebControls.DetailsView> muestra un nuevo `NorthwindEmployee` registros, junto con generado automáticamente **insertar** botón. Después de escribir datos en los campos de la <xref:System.Web.UI.WebControls.DetailsView> de control, haga clic en el **insertar** botón. El <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> propiedad identifica el método que realiza la operación de inserción.  
  
 En este ejemplo, el `UpdateEmployeeInfo` método se usa para realizar una inserción; sin embargo, requiere un `NorthwindEmployee` parámetro para insertar los datos. Por este motivo, la colección de cadenas que el <xref:System.Web.UI.WebControls.DetailsView> control pasa automáticamente no es suficiente. El `NorthwindEmployeeInserting` delegado es un <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> objeto que controla el <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> eventos y le permite manipular los parámetros de entrada antes de la <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operación continúa. Porque el `UpdateEmployeeInfo` método requiere un `NorthwindEmployee` objeto como un parámetro, uno se crea mediante la colección de cadenas y se agrega a la <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> colección utilizando un nombre de parámetro (`ne`) que espera el método. Puede realizar pasos como estas cuando se usa un objeto de nivel medio existente como origen de datos con tipos y métodos que no están diseñados específicamente para su uso con el <xref:System.Web.UI.WebControls.ObjectDataSource> control.  
  
 Cuando el <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> se realiza la operación, el método que se identifica mediante el <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> se llama a la propiedad. Si el `Insert` método del objeto tiene una firma de método que incluye parámetros, el <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> colección debe contener un parámetro con nombres que coinciden con los parámetros de firma de método para el <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> método finalice correctamente.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 En el ejemplo de código siguiente se proporciona un ejemplo de un objeto comercial de nivel medio que usa el ejemplo de código anterior. El ejemplo de código consta de dos clases básicas:  
  
-   El `EmployeeLogic` (clase), que es una clase sin estado que encapsula la lógica de negocios.  
  
-   El `NorthwindEmployee` (clase), que es una clase de modelo que contiene sólo la funcionalidad básica necesaria para cargar y conservar los datos de la capa de datos.  
  
 Más `NorthwindDataException` clase se proporciona por comodidad. Para obtener un ejemplo completo, debe compilar y utilizar estas clases. El `UpdateEmployeeInfo` método no está completamente implementado, por lo que no se insertarán datos en la base de datos de Northwind Traders cuando se experimenta con este ejemplo.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre del método o la función que invoca el control <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> para insertar los datos.</summary>
        <value>Cadena que representa el nombre del método o función que usa el objeto <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> para insertar datos. El valor predeterminado es una cadena vacía ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se supone que el objeto de negocios para insertar un registro de datos a la vez, en lugar de en un lote.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> propiedad delega en el <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto que está asociado el <xref:System.Web.UI.WebControls.ObjectDataSource> objeto.  
  
## <a name="object-lifetime"></a>Duración de objetos  
 El método que se identifica mediante el <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> propiedad puede ser un método de instancia o un `static` (`Shared` en Visual Basic) (método). Si es un método de instancia, el objeto de negocios se crea y destruye cada vez que el método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> se llama a la propiedad. Puede controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> y <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> eventos para que funcionen con el objeto de negocios antes de la <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> se llama a la propiedad. También puede controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> evento que se produce después del método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> se llama a la propiedad. Si el objeto comercial implementa la <xref:System.IDisposable> interfaz, el <xref:System.IDisposable.Dispose%2A> se llama al método antes de que se destruya el objeto. Si el método es `static` (`Shared` en Visual Basic), nunca se crea el objeto de negocios y no puede controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, y <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> eventos.  
  
## <a name="parameter-merging"></a>Combinación de parámetros  
 Los parámetros se agregan a la <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> colección de tres orígenes:  
  
-   Desde el control enlazado a datos en tiempo de ejecución.  
  
-   Desde el `InsertParameters` elemento, mediante declaración.  
  
-   Desde el `Inserting` método mediante programación.  
  
 En primer lugar, los parámetros que se generan a partir de los controles enlazados a datos se agregan a la <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> colección. Por ejemplo, si la <xref:System.Web.UI.WebControls.ObjectDataSource> control se enlaza a un <xref:System.Web.UI.WebControls.GridView> control que tiene las columnas `Name` y `Number`, los parámetros de `Name` y `Number` se agregan a la colección. El tipo de datos de estos parámetros es `string`. A continuación, los parámetros que aparecen en el `InsertParameters` se agregan el elemento. Si un parámetro en el `InsertParameters` se encuentra el elemento con el mismo nombre que un parámetro que ya está en el <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> colección, el parámetro existente se modifica para que coincida con el parámetro que se especifica en el `InsertParameters` elemento. Normalmente, se usa para modificar el tipo de los datos en el parámetro. Por último, puede agregar y quitar parámetros mediante programación el <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> evento, que se produce antes de la <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> se ejecuta el método. El método se resuelve después de los parámetros se combinan. Resolución del método se describe en la sección siguiente.  
  
> [!IMPORTANT]
>  Debe validar cualquier valor de parámetro que recibe desde el cliente. El tiempo de ejecución simplemente sustituye el valor del parámetro en el <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> propiedad.  
  
## <a name="method-resolution"></a>Resolución del método  
 Cuando el <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> llama el método, los campos de datos desde el control enlazado a datos, los parámetros que se crearon de forma declarativa en el `InsertParameters` elemento y los parámetros que se agregaron en el <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> controlador de eventos se combinan. (Para obtener más información, consulte la sección anterior). La <xref:System.Web.UI.WebControls.ObjectDataSource> objeto, a continuación, intenta encontrar un método que se va a llamar. En primer lugar, busca uno o varios métodos con el nombre especificado en el <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> propiedad. Si no se encuentra ninguna coincidencia, un <xref:System.InvalidOperationException> es una excepción. Si se encuentra una coincidencia, a continuación, busca nombres de parámetros coincidentes. Por ejemplo, supongamos que un tipo especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> propiedad tiene dos métodos denominados `InsertARecord`. Una `InsertARecord` tiene un parámetro, `ID`y el otro `InsertARecord` tiene dos parámetros, `Name` y `Number`. Si el <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> colección tiene sólo un parámetro denominado `ID`, el `InsertARecord` método con solo el `ID` parámetro se denomina. El tipo del parámetro no se comprueba en la resolución de los métodos. No importa el orden de los parámetros.  
  
 Si el <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propiedad está establecida, el método se resuelve de manera diferente. El <xref:System.Web.UI.WebControls.ObjectDataSource> busca un método con el nombre especificado en el <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> propiedad que toma un parámetro del tipo que se especifica en el <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propiedad. En este caso, el nombre del parámetro no importa.  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos de código. El primer ejemplo de código muestra cómo usar un <xref:System.Web.UI.WebControls.ObjectDataSource> objeto con un objeto comercial y un <xref:System.Web.UI.WebControls.DetailsView> control para insertar datos. El segundo ejemplo de código proporciona un ejemplo del objeto comercial de nivel intermedio que se usa en el primer ejemplo de código.  
  
 En el ejemplo de código siguiente se muestra cómo usar un <xref:System.Web.UI.WebControls.ObjectDataSource> control con un objeto comercial y un <xref:System.Web.UI.WebControls.DetailsView> control para insertar datos. Inicialmente, el <xref:System.Web.UI.WebControls.DetailsView> muestra un nuevo `NorthwindEmployee` registros, junto con generado automáticamente **insertar** botón. Después de escribir datos en los campos de la <xref:System.Web.UI.WebControls.DetailsView> de control, haga clic en el **insertar** botón. El <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> propiedad identifica el método que realiza la operación de inserción.  
  
 En este ejemplo, el `UpdateEmployeeInfo` método se usa para realizar una inserción; sin embargo, requiere un `NorthwindEmployee` parámetro para insertar los datos. Por este motivo, la colección de cadenas que el <xref:System.Web.UI.WebControls.DetailsView> control pasa automáticamente no es suficiente. El `NorthwindEmployeeInserting` delegado es un <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> objeto que controla el <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> eventos y le permite manipular los parámetros de entrada antes de la <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> operación continúa. Porque el `UpdateEmployeeInfo` método requiere un `NorthwindEmployee` objeto como un parámetro, uno se crea mediante la colección de cadenas y se agrega a la <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> colección utilizando un nombre de parámetro (`ne`) que espera el método. Puede realizar pasos como estas cuando se usa un objeto de nivel medio existente como origen de datos con tipos y métodos que no están diseñados específicamente para su uso con el <xref:System.Web.UI.WebControls.ObjectDataSource> control.  
  
 Cuando el <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> se realiza la operación, el método que se identifica mediante el <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> se llama a la propiedad. Si el `Insert` método del objeto tiene una firma de método que incluye parámetros, el <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> colección debe contener un parámetro con nombres que coinciden con los parámetros de firma de método para el <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> método finalice correctamente.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 En el ejemplo de código siguiente se proporciona un ejemplo de un objeto comercial de nivel medio que usa el ejemplo de código anterior. El ejemplo de código consta de dos clases básicas:  
  
-   El `EmployeeLogic` (clase), que es una clase sin estado que encapsula la lógica de negocios.  
  
-   El `NorthwindEmployee` (clase), que es una clase de modelo que contiene sólo la funcionalidad básica necesaria para cargar y conservar los datos de la capa de datos.  
  
 Más `NorthwindDataException` clase se proporciona por comodidad. Para obtener un ejemplo completo, debe compilar y utilizar estas clases. El `UpdateEmployeeInfo` método no está completamente implementado, por lo que no se insertarán datos en la base de datos de Northwind Traders cuando se experimenta con este ejemplo.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Uso de Entity Framework y el Control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la colección de parámetros que contiene los parámetros utilizados por la propiedad <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />.</summary>
        <value>Objeto <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> que contiene los parámetros utilizados por el método identificado por la propiedad <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los nombres y tipos de los parámetros que se encuentran en el <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> colección debe coincidir con los nombres y tipos de los parámetros que se encuentran en el <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> firma de la propiedad. Los nombres de parámetros distinguen mayúsculas de minúsculas. Cuando se trabaja con controles enlazados a datos que proporcionan parámetros, como el <xref:System.Web.UI.WebControls.GridView> y <xref:System.Web.UI.WebControls.DetailsView> controles, el <xref:System.Web.UI.WebControls.ObjectDataSource> control combina automáticamente los parámetros que se especifican explícitamente en la colección con los parámetros proporciona el control enlazado a datos. Esto es importante porque los controles enlazados a datos siempre proporcionan sus parámetros como <xref:System.String> tipos y si la firma del método incluye numéricos o tipos de fecha, explícitamente debe incluir un parámetro en el <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> colección con el tipo correcto. En caso contrario, el <xref:System.Web.UI.WebControls.ObjectDataSource> control intenta realizar la conversión de los parámetros según el tipo definido por los parámetros de la colección. Para obtener más información, consulte [usar parámetros con el ObjectDataSource Control](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> propiedad recupera la <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> propiedad que contiene el <xref:System.Web.UI.WebControls.ObjectDataSourceView> que está asociado con el <xref:System.Web.UI.WebControls.ObjectDataSource> control.  
  
 Para obtener más información acerca de la combinación de parámetros, la duración de objetos y la resolución del método, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>.  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos de código. El primer ejemplo de código muestra cómo usar un <xref:System.Web.UI.WebControls.ObjectDataSource> objeto con un objeto comercial y un <xref:System.Web.UI.WebControls.DetailsView> control para insertar datos. El segundo ejemplo de código proporciona un ejemplo de implementación de la `Insert` método que se usa en el primer ejemplo de código.  
  
 En el ejemplo de código siguiente se muestra cómo usar un <xref:System.Web.UI.WebControls.ObjectDataSource> control con un objeto comercial y un <xref:System.Web.UI.WebControls.DetailsView> control para insertar datos. Inicialmente, el <xref:System.Web.UI.WebControls.DetailsView> muestra cuadros de texto donde puede escribir datos para un nuevo `NorthwindEmployee` registros, junto con generado automáticamente **insertar** botón. Después de escribir datos en los campos de la <xref:System.Web.UI.WebControls.DetailsView> de control, haga clic en el **insertar** botón. El <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> propiedad identifica el método que realiza la operación de inserción.  
  
 Si hace clic en el **insertar** botón, la operación se realiza mediante el método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> propiedad y los parámetros que se especifican en el <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> colección. En este ejemplo de código, se especifica un parámetro en el <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> colección que corresponde al Id. Esto es porque, aunque el identificador se muestra en el <xref:System.Web.UI.WebControls.GridView.Rows%2A> recopilación para el <xref:System.Web.UI.WebControls.DetailsView> controlar como un <xref:System.Web.UI.WebControls.BoundField> objeto, que se pasa como una cadena a la <xref:System.Web.UI.WebControls.ObjectDataSource> control. Al agregarlo explícitamente a la <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> colección con un <xref:System.Web.UI.WebControls.Parameter.Type%2A> propiedad establecida en el <xref:System.TypeCode.Int32> valor, se pasará por correctamente el <xref:System.Web.UI.WebControls.ObjectDataSource> al método como un <xref:System.Int32>, no como una cadena.  
  
 Cuando el <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> se realiza la operación, el método que se identifica mediante el <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> se llama a la propiedad. Si el <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> método del objeto tiene una firma de método que incluye parámetros, el <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> colección debe contener los parámetros que tienen nombres que coinciden con los parámetros de firma de método para el <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> método finalice correctamente.  
  
> [!IMPORTANT]
>  Debe validar cualquier valor de parámetro que recibe desde el cliente. El tiempo de ejecución simplemente sustituye el valor del parámetro en el <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> propiedad.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/objds8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/objds8vb.aspx#1)]  
  
 En el ejemplo de código siguiente se proporciona un ejemplo de implementación de la `Insert` método que utiliza el ejemplo de código anterior. El `InsertNewEmployeeWrapper` método se agrega a la `EmployeeLogic` objeto de nivel intermedio que se proporciona en el <xref:System.Web.UI.WebControls.ObjectDataSource> información general de clases para permitir que el objeto trabajar más fácilmente con el <xref:System.Web.UI.WebControls.ObjectDataSource> control en escenarios Web, sin volver a escribir gran real lógica de negocios.  
  
 Para ejecutar el ejemplo, debe tener la `NorthwindEmployee` clase que se proporciona en el <xref:System.Web.UI.WebControls.ObjectDataSource> información general de clases. En este ejemplo sólo se muestra cómo conectar el <xref:System.Web.UI.WebControls.ObjectDataSource> a un método de objeto comercial que obtiene datos para un nuevo registro de base de datos mediante el uso de parámetros. El ejemplo no agrega registros a la base de datos, porque el `Save` método de la `NorthwindEmployee` clase no incluye código para actualizar la base de datos.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_8#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/northwindemployee8.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_8#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/northwindemployee8.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="objectDataSource.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Objeto que contiene los valores del estado de vista guardados correspondientes al control.</param>
        <summary>Carga el estado de vista guardado previamente del control <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se usa principalmente por la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código. Sin embargo, los desarrolladores de controles pueden invalidar este método para especificar cómo un control de servidor personalizado restaura su estado de vista. Para obtener más información, consulte [información general sobre la administración de estado de ASP.NET](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)).  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.LoadViewState%2A> método se usa para cargar el estado de vista previamente guardado de la <xref:System.Web.UI.WebControls.ObjectDataSource> control.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>El <see cref="M:System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)" /> método se utiliza principalmente los desarrolladores de controles al extender el <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> control.</para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="MaximumRowsParameterName">
      <MemberSignature Language="C#" Value="public string MaximumRowsParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MaximumRowsParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumRowsParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MaximumRowsParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumRowsParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("maximumRows")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre del parámetro del método de recuperación de datos del objeto comercial utilizado para indicar el número de registros que se recuperan para admitir la paginación de origen de datos.</summary>
        <value>Nombre del parámetro <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> que se utiliza para indicar el número de registros que se recuperan. El valor predeterminado es <c>"maximumRows"</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> propiedad se utiliza para admitir la paginación del origen de datos. Para obtener información acerca de cómo se admite la paginación por el <xref:System.Web.UI.WebControls.ObjectDataSource> control, vea <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> propiedad delega en el <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto que está asociado el <xref:System.Web.UI.WebControls.ObjectDataSource> control.  
  
   
  
## Examples  
 Los tres ejemplos siguientes muestran una página Web, una clase de página de código subyacente y una clase de acceso a datos que permiten al usuario elegir de cuántos registros se muestran en la página.  
  
 La página Web contiene un <xref:System.Web.UI.WebControls.ObjectDataSource> control cuya <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> propiedad está establecida en `true`. El <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> propiedad está establecida en el nombre de un método que devuelve el número total de registros en la consulta. El <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> propiedad y el <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> propiedad se establecen en los nombres de los parámetros que se usan en el método Select. La página también contiene un <xref:System.Web.UI.WebControls.DropDownList> control.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 El segundo ejemplo muestra un controlador para el <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> eventos de la <xref:System.Web.UI.WebControls.DropDownList> control. El código en el controlador se establece la <xref:System.Web.UI.WebControls.GridView.PageSize%2A> propiedad a la selección del usuario.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 El tercer ejemplo muestra la clase de acceso a datos que recupera datos de la tabla Customers. Incluye un método denominado `GetSubsetOfEmployees`, que se asigna a la <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSource> control. El ejemplo también incluye un método denominado `GetEmployeeCount`, que se asigna a la <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSource> control. La clase usa LINQ para consultar la tabla Customers. El ejemplo requiere una clase LINQ to SQL que representa la base de datos Northwind y la tabla Customers. Para obtener más información, vea [Cómo: Crear clases LINQ to SQL en un proyecto Web](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="ObjectCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectCreated As ObjectDataSourceObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceObjectEventHandler ^ ObjectCreated;" />
      <MemberSignature Language="F#" Value="member this.ObjectCreated : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " Usage="member this.ObjectCreated : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aparece después de crear el objeto identificado por la propiedad <see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> eventos para llamar a otros métodos en el objeto de negocios, establecer las propiedades o realizar otra inicialización específica del objeto de negocios antes de la <xref:System.Web.UI.WebControls.ObjectDataSource> objeto llama al método de datos de objeto de negocios para llevar a cabo una operación de datos . Se tiene acceso a una referencia al objeto por el <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> propiedad, que se expone mediante el <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> objeto.  
  
 Si el método que se identifica para llevar a cabo la operación de datos es `static` (`Shared` en Visual Basic), el <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> y <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> nunca se generan eventos.  
  
 Para obtener más información acerca de cómo controlar eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="ObjectCreating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectCreating As ObjectDataSourceObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceObjectEventHandler ^ ObjectCreating;" />
      <MemberSignature Language="F#" Value="member this.ObjectCreating : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " Usage="member this.ObjectCreating : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aparece antes de crear el objeto identificado por la propiedad <see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el método que se identifica para llevar a cabo la operación de datos es `static` (`Shared` en Visual Basic), el <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> y <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> nunca se generan eventos.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource> control llama automáticamente al constructor predeterminado de un objeto comercial para crear una instancia de usando la reflexión. Controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> eventos explícitamente llamar a otro constructor y establecer la instancia del objeto que es el resultado a la <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> propiedad del asociado <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> objeto.  
  
 Para obtener más información acerca de cómo controlar eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos de código. El primer ejemplo de código muestra cómo usar un <xref:System.Web.UI.WebControls.ObjectDataSource> objeto con un objeto comercial y un <xref:System.Web.UI.WebControls.GridView> control para mostrar información. El segundo ejemplo de código proporciona el objeto de negocios de nivel intermedio que se usa en el primer ejemplo de código.  
  
 En el ejemplo de código siguiente se muestra cómo usar un <xref:System.Web.UI.WebControls.ObjectDataSource> control con un objeto comercial y un <xref:System.Web.UI.WebControls.GridView> control para mostrar información. Puede trabajar con un objeto comercial que es muy costoso de crear (en términos de tiempo o recursos) para cada operación de datos que realiza su página Web. Una forma de trabajar con un objeto costoso podría ser crear una instancia de ella una vez y, a continuación, la caché para las operaciones posteriores en lugar de crear y destruir, para cada operación de datos.  
  
> [!NOTE]
>  En una aplicación de producción, podrían haber varias solicitudes simultáneamente con la misma instancia. Por lo tanto, el objeto debe implementarse de forma segura para subprocesos.  
  
 Este ejemplo de código demuestra este patrón. Puede controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> eventos para comprobar la memoria caché para un objeto en primer lugar y crear solo una instancia del objeto, si uno no está ya en la caché. A continuación, controlar el <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> eventos para almacenar en caché el objeto de negocios para un uso futuro, en lugar de destruirlo. En este ejemplo de código, el <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> objeto se establece en `true` para dirigir el <xref:System.Web.UI.WebControls.ObjectDataSource> no llamar a <xref:System.IDisposable.Dispose%2A> método en el objeto.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 En el ejemplo de código siguiente se proporciona el objeto empresarial de nivel medio de ejemplo que usa el ejemplo de código anterior. El ejemplo de código consta de un objeto comercial básico, definido por el `EmployeeLogic` (clase), que es una clase con estado que encapsula la lógica de negocios. Para obtener un ejemplo completo, debe compilar este código como una biblioteca y utilizar estas clases desde una página ASP.NET (archivo .aspx).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/northwindemployee16.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/northwindemployee16.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="ObjectDisposing">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectDisposing As ObjectDataSourceDisposingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceDisposingEventHandler ^ ObjectDisposing;" />
      <MemberSignature Language="F#" Value="member this.ObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler " Usage="member this.ObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aparece antes de descartar el objeto identificado por la propiedad <see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> siempre se genera el evento antes de que se descarte la instancia del objeto comercial. Si el objeto comercial implementa la <xref:System.IDisposable> interfaz, el <xref:System.IDisposable.Dispose%2A> se llama al método después de que se genera este evento.  
  
 Controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> eventos para llamar a otros métodos en el objeto, establecer las propiedades o realizar operaciones de limpieza específica del objeto antes de que se destruya el objeto. Se tiene acceso a una referencia al objeto por el <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> propiedad, que se expone mediante el <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> objeto.  
  
 Cuando se usa un <xref:System.Web.UI.WebControls.ObjectDataSource> control con una clase LINQ to SQL, debe cancelar la eliminación de la clase de contexto de datos en un controlador para el <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> eventos. Este paso es necesario porque LINQ to SQL admite la ejecución aplazada, mientras que el <xref:System.Web.UI.WebControls.ObjectDataSource> control intenta eliminar el contexto de datos después de la operación de selección.  
  
 Para obtener más información acerca de cómo controlar eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos de código. El primer ejemplo de código muestra cómo usar un <xref:System.Web.UI.WebControls.ObjectDataSource> objeto con un objeto comercial y un <xref:System.Web.UI.WebControls.GridView> control para mostrar información. El segundo ejemplo de código proporciona el objeto de negocios de nivel intermedio que se usa en el primer ejemplo de código.  
  
 En el ejemplo de código siguiente se muestra cómo usar un <xref:System.Web.UI.WebControls.ObjectDataSource> control con un objeto comercial y un <xref:System.Web.UI.WebControls.GridView> control para mostrar información. Puede trabajar con un objeto comercial que es muy costoso de crear (en términos de tiempo o recursos) para cada operación de datos que realiza su página Web. Una forma de trabajar con un objeto costoso podría ser crear una instancia de ella una vez y, a continuación, la caché para las operaciones posteriores en lugar de crear y destruir, para cada operación de datos. En este ejemplo se demuestra este patrón. Puede controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> eventos para comprobar la memoria caché para un objeto en primer lugar y crear solo una instancia de él, si uno no está ya en la caché. A continuación, controlar el <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> eventos para almacenar en caché el objeto de negocios para un uso futuro, en lugar de destruirlo. En este ejemplo de código, el <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> objeto se establece en `true` para dirigir el <xref:System.Web.UI.WebControls.ObjectDataSource> no llamar a la <xref:System.IDisposable.Dispose%2A> método en el objeto.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 En el ejemplo de código siguiente se proporciona el objeto empresarial de nivel medio de ejemplo que usa el ejemplo de código anterior. El ejemplo de código consta de un objeto comercial básico, definido por el `EmployeeLogic` (clase), que es una clase con estado que encapsula la lógica de negocios. Para obtener un ejemplo completo, debe compilar este código como una biblioteca y utilizar estas clases desde una página ASP.NET (archivo .aspx).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/northwindemployee16.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/northwindemployee16.vb#2)]  
  
 El ejemplo siguiente muestra cómo controlar el <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> eventos cuando se usa un <xref:System.Web.UI.WebControls.ObjectDataSource> control con una clase LINQ to SQL.  
  
```vb  
Public Sub ExampleObjectDisposing(ByVal sender As Object, _   
        ByVal e As ObjectDataSourceDisposingEventArgs)  
    e.Cancel = True  
End Sub  
```  
  
```csharp  
public void ExampleObjectDisposing(object sender,   
        ObjectDataSourceDisposingEventArgs e)  
{  
    e.Cancel = true;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OldValuesParameterFormatString : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una cadena de formato para aplicarla a los nombres de los parámetros de los valores originales que se pasan a los métodos <see langword="Delete" /> o <see langword="Update" />.</summary>
        <value>Una cadena que representa una cadena de formato aplicada a los nombres de cualquier parámetro <paramref name="oldValues" /> o parámetros de clave pasados a los métodos <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /> o <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />. El valor predeterminado es <c>"{0}"</c>, lo que significa que el nombre del parámetro es el nombre del campo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> propiedad se aplica a las claves principales, como las que se identifican con la `DataKeyNames` propiedad de un control enlazado a datos o en eliminar y actualizar los escenarios donde el <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> propiedad está establecida en el <xref:System.Web.UI.ConflictOptions.CompareAllValues> valor y el conjunto de valores originales se pasan al método de datos correspondiente.  
  
 Los siguientes son dos escenarios comunes donde puede cambiar el <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> propiedad:  
  
-   Es posible que desea cambiar la propiedad para diferenciar entre valores antiguos y nuevos en las actualizaciones. Cuando el <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> propiedad está establecida en el <xref:System.Web.UI.ConflictOptions.CompareAllValues> valor, los parámetros de los valores originales y nuevos se agregan a la <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> colección. Sin la cadena de formato, se crearía dos parámetros con el mismo nombre para cada campo de datos. Al cambiar el nombre de parámetro del valor original, puede comparar los datos al origen de datos original para detectar conflictos y comparar los valores de clave.  
  
-   Algunos diseñadores visuales implementan un esquema de nomenclatura determinado para las claves y valores originales.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> propiedad delega en el <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto que está asociado el <xref:System.Web.UI.WebControls.ObjectDataSource> control.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="objectDataSource.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> que contiene datos de eventos.</param>
        <summary>Agrega un controlador de eventos <see cref="E:System.Web.UI.Page.LoadComplete" /> a la página que contiene el control <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información acerca de cómo controlar eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Web.UI.WebControls.ObjectDataSource.OnInit%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Cuando se reemplaza el <see cref="M:System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)" /> método en una clase derivada, asegúrese de llamar a la <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" /> método para la clase base para que los delegados registrados reciban el evento.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="ParsingCulture">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParsingCulture ParsingCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ParsingCulture ParsingCulture" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ParsingCulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ParsingCulture As ParsingCulture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParsingCulture ParsingCulture { System::Web::UI::WebControls::ParsingCulture get(); void set(System::Web::UI::WebControls::ParsingCulture value); };" />
      <MemberSignature Language="F#" Value="member this.ParsingCulture : System.Web.UI.WebControls.ParsingCulture with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.ParsingCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParsingCulture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica qué información de referencia cultural se utiliza al convertir valores de cadena a los tipos de propiedad reales para construir un objeto del tipo indicado por <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />.</summary>
        <value>La información de referencia cultural. El valor predeterminado es <see cref="F:System.Web.UI.WebControls.ParsingCulture.Invariant" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="objectDataSource.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Guarda el estado del control <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <returns>Devuelve el estado de vista actual del control de servidor; de lo contrario, devuelve <see langword="null" /> si no hay ningún estado de vista asociado al control.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
      <MemberSignature Language="VB.NET" Value="Public Function Select () As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select();" />
      <MemberSignature Language="F#" Value="member this.Select : unit -&gt; System.Collections.IEnumerable" Usage="objectDataSource.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera los datos del almacenamiento de datos subyacente mediante una llamada al método identificado por la propiedad <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> con los parámetros de la colección <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />.</summary>
        <returns>Lista <see cref="T:System.Collections.IEnumerable" /> de filas de datos.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El método especificado podría tener cualquier firma de método, pero debe devolver o derivarse de uno de los tipos enumerados en la tabla siguiente para el <xref:System.Web.UI.WebControls.ObjectDataSource> control llamarlo correctamente.  
  
|Tipo devuelto|Acción|  
|-----------------|------------|  
|<xref:System.Collections.IEnumerable>|El <xref:System.Collections.IEnumerable> devuelto por la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método.|  
|<xref:System.Data.DataTable>|Un <xref:System.Data.DataView> se crea mediante la <xref:System.Data.DataTable> y devuelto por el <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método.|  
|<xref:System.Data.DataView>|El <xref:System.Data.DataView> devuelto por la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método.|  
|<xref:System.Data.DataSet>|La primera <xref:System.Data.DataTable> de la <xref:System.Data.DataSet> se extrae y un <xref:System.Data.DataView> se crea y devuelve el <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método.|  
|<xref:System.Object>|El objeto se encapsula en un solo elemento <xref:System.Collections.IEnumerable> colección y devuelve el <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método.|  
  
 El método que se identifica mediante el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad puede ser un método de instancia o un `static` (`Shared` en Visual Basic) (método). Si es un método de instancia, el objeto de negocios se crea y destruye cada vez que el método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> se denomina propiedad, excepto en que se usa la misma instancia para llamar al método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad y el método que se especifica mediante el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> propiedad. El <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método devuelve un <xref:System.Collections.IEnumerable> interfaz. Sin embargo, para habilitar el almacenamiento en caché y escenarios de filtrado, el valor devuelto debe ser un <xref:System.Data.DataSet> objeto. Mientras el <xref:System.Data.DataSet> clase no implementa la <xref:System.Collections.IEnumerable> interfaz, el <xref:System.Web.UI.WebControls.ObjectDataSource> control extrae automáticamente el valor predeterminado <xref:System.Data.DataView> controlar, que implementa el <xref:System.Collections.IEnumerable>.  
  
 Antes de la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> se realiza el <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A> se llama al método para provocar el <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> eventos. Puede controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> eventos para examinar los valores de los parámetros y realice algún preprocesamiento antes de realizar una <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> operación. Para realizar una operación de recuperación de datos, el <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto usa la reflexión para crear una instancia del objeto que se identifica mediante el <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> propiedad. A continuación, llama al método identificado por la <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad mediante asociada ninguna <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> propiedades. Después de la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> se complete la operación, el <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A> se llama al método para provocar el <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> eventos. Puede controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> eventos para examinar los valores devueltos, parámetros de salida y las excepciones y para realizar cualquier procesamiento posterior.  
  
 Si el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad devuelve un <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, o <xref:System.Data.DataView> objeto y el almacenamiento en caché está habilitado, el <xref:System.Web.UI.WebControls.ObjectDataSource> recupera los datos y guarda los datos en la memoria caché durante el <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> operación. La memoria caché se crea, descarta o se actualiza en función del comportamiento de almacenamiento en caché que se especifica mediante la combinación de la <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> y <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> propiedades.  
  
 Si el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad devuelve un <xref:System.Data.DataSet> o <xref:System.Data.DataTable> objeto y un <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> se ha especificado la propiedad, ésta se evalúa con cualquier proporcionado <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> propiedades y el filtro resultante se aplica a la lista de datos durante la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> operación.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método delega a la <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> método de la <xref:System.Web.UI.WebControls.ObjectDataSourceView> que está asociado con el <xref:System.Web.UI.WebControls.ObjectDataSource> control.  
  
 Para obtener más información acerca de la combinación de parámetros, la duración de objetos y la resolución del método, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>.  
  
## <a name="data-bound-controls"></a>Controles enlazados a datos  
 Cuando el <xref:System.Web.UI.WebControls.ObjectDataSource> control está asociado con un control enlazado a datos, como el <xref:System.Web.UI.WebControls.GridView> control, no es necesario llamar a la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método desde el código de página. El <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método se invoca directamente por el control enlazado a datos en su lugar.  
  
   
  
## Examples  
 Para obtener un ejemplo de código, vea <xref:System.Web.UI.WebControls.ObjectDataSource>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="SelectCountMethod">
      <MemberSignature Language="C#" Value="public string SelectCountMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCountMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCountMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCountMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCountMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre del método o función a los que invoca el control <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> para recuperar un recuento de filas.</summary>
        <value>Cadena que representa el nombre del método o función que usa el control <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> para recuperar un recuento de filas. El método debe devolver un entero (<see cref="T:System.Int32" />). El valor predeterminado es una cadena vacía ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> propiedad identifica un método de objeto comercial que se usa para recuperar un recuento de filas total, para admitir la paginación del origen de datos. El <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> propiedad se evalúa solo si la <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> propiedad está establecida en `true`.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> propiedad delega en el <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto que está asociado el <xref:System.Web.UI.WebControls.ObjectDataSource> control. Para obtener información acerca de cómo se admite la paginación por el <xref:System.Web.UI.WebControls.ObjectDataSource> control, vea <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>.  
  
   
  
## Examples  
 Los tres ejemplos siguientes muestran una página Web, una clase de página de código subyacente y una clase de acceso a datos que permiten al usuario elegir de cuántos registros se muestran en la página.  
  
 La página Web contiene un <xref:System.Web.UI.WebControls.ObjectDataSource> control cuya <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> propiedad está establecida en `true`. El <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> propiedad está establecida en el nombre de un método que devuelve el número total de registros en la consulta. El <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> propiedad y el <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> propiedad se establecen en los nombres de los parámetros que se usan en el método Select. La página también contiene un <xref:System.Web.UI.WebControls.DropDownList> control.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 El segundo ejemplo muestra un controlador para el <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> eventos de la <xref:System.Web.UI.WebControls.DropDownList> control. El código en el controlador se establece la <xref:System.Web.UI.WebControls.GridView.PageSize%2A> propiedad a la selección del usuario.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 El tercer ejemplo muestra la clase de acceso a datos que recupera datos de la tabla Customers. Incluye un método denominado `GetSubsetOfEmployees`, que se asigna a la <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSource> control. El ejemplo también incluye un método denominado `GetEmployeeCount`, que se asigna a la <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSource> control. La clase usa LINQ para consultar la tabla Customers. El ejemplo requiere una clase LINQ to SQL que representa la base de datos Northwind y la tabla Customers. Para obtener más información, vea [Cómo: Crear clases LINQ to SQL en un proyecto Web](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Selected;" />
      <MemberSignature Language="F#" Value="member this.Selected : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Selected : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tiene lugar cuando se termina una operación de <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> eventos para examinar los valores de parámetros de salida o valor devuelto, o para determinar si se produjo una excepción después de un <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> ha completado la operación. El valor devuelto, los parámetros de salida y las propiedades de control de excepciones están disponibles desde el <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> objeto que está asociado con el evento.  
  
 Para obtener más información acerca de cómo controlar eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Los tres ejemplos siguientes muestran una página Web, una clase de página de código subyacente y una clase de acceso a datos que permiten al usuario recuperar y actualizar registros en la tabla Employees de la base de datos Northwind.  
  
 El primer ejemplo muestra una página Web que contiene dos <xref:System.Web.UI.WebControls.ObjectDataSource> controles, un <xref:System.Web.UI.WebControls.DropDownList> control y un <xref:System.Web.UI.WebControls.DetailsView> control. La primera <xref:System.Web.UI.WebControls.ObjectDataSource> control y el <xref:System.Web.UI.WebControls.DropDownList> control se usan para recuperar y mostrar los nombres de los empleados de la base de datos. El segundo <xref:System.Web.UI.WebControls.ObjectDataSource> control y el <xref:System.Web.UI.WebControls.DetailsView> control se usan para recuperar, mostrar y modificar los datos del registro de empleado seleccionado por el usuario.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]  
  
 El segundo ejemplo muestra los controladores para la <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> y <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> eventos. El <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> controlador de eventos serializa el objeto que contiene los datos que se ha recuperado de la tabla Employee. El objeto serializado se almacena en el estado de vista. El <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> controlador de eventos deserializa el objeto en estado de vista que contiene los datos originales para el registro de datos que se está actualizando. El objeto que contiene los datos originales se pasa como parámetro al método Update. Los datos originales deben pasarse a la base de datos para que se puede usar para comprobar si los datos se ha modificado por otro proceso.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]  
  
 El tercer ejemplo muestra la clase de acceso a datos que interactúa con la base de datos Northwind. La clase utiliza LINQ para consultar y actualizar la tabla Employees. El ejemplo requiere una clase LINQ to SQL que representa la base de datos Northwind y la tabla Employees. Para obtener más información, vea [Cómo: Crear clases LINQ to SQL en un proyecto Web](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As ObjectDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberSignature Language="F#" Value="member this.Selecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler " Usage="member this.Selecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tiene lugar antes de una operación de <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> eventos para realizar la inicialización adicional que es específica de la aplicación, para validar los valores de parámetros o para cambiar los valores de parámetro antes de la <xref:System.Web.UI.WebControls.ObjectDataSource> control realiza la operación de recuperación de datos. Los parámetros están disponibles como un <xref:System.Collections.IDictionary> colección que tiene acceso el <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> propiedad, que se expone mediante el <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> objeto.  
  
 Este evento se puede desencadenar dos veces para una sola llamada a la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método, si la <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> se establece la propiedad. El <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs.ExecutingSelectCount%2A> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs> objeto se usa para determinar si se llamó a select para recuperar datos o recuperar el recuento.  
  
 Para obtener más información acerca de cómo controlar eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="SelectMethod">
      <MemberSignature Language="C#" Value="public string SelectMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre del método o función a los que invoca el control <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> para recuperar datos.</summary>
        <value>Cadena que representa el nombre del método o función que usa el objeto <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> para recuperar datos. El valor predeterminado es una cadena vacía ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El método especificado puede tener cualquier firma de método, pero debe devolver uno de los tipos que se muestra en la tabla siguiente para el <xref:System.Web.UI.WebControls.ObjectDataSource> control llamarlo correctamente.  
  
|Tipo devuelto|Acción|  
|-----------------|------------|  
|<xref:System.Collections.IEnumerable>|El <xref:System.Collections.IEnumerable> devuelto por la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método.|  
|<xref:System.Data.DataTable>|Un <xref:System.Data.DataView> se crea utilizando el <xref:System.Data.DataTable> y devuelto por el <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método.|  
|<xref:System.Data.DataView>|Un <xref:System.Data.DataView> devuelto por la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método.|  
|<xref:System.Data.DataSet>|La primera <xref:System.Data.DataTable> de la <xref:System.Data.DataSet> se extrae y un <xref:System.Data.DataView> se crea y devuelve el <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método.|  
|<xref:System.Object>|El objeto se encapsula en un solo elemento <xref:System.Collections.IEnumerable> colección y devuelve el <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método.|  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad delega en el <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto que está asociado el <xref:System.Web.UI.WebControls.ObjectDataSource> control.  
  
 Cuando se usa el <xref:System.Web.UI.WebControls.ObjectDataSource> clase para eliminar o actualizar los datos, asegúrese de que los nombres de parámetro configuran para el <xref:System.Web.UI.WebControls.ObjectDataSource> en controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> colección o <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> colección coinciden con los nombres de columna devueltos por el método select .  
  
## <a name="object-lifetime"></a>Duración de objetos  
 El método que se identifica mediante el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad puede ser un método de instancia o un `static` (`Shared` en Visual Basic) (método). Si es un método de instancia, el objeto de negocios se crea y destruye cada vez que el método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> se llama a la propiedad. Puede controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> y <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> eventos para que funcionen con el objeto de negocios antes del método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> se llama a la propiedad. También puede controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> evento que se produce después del método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> se llama a la propiedad. Si el objeto comercial implementa la <xref:System.IDisposable> interfaz, el <xref:System.IDisposable.Dispose%2A> se llama al método antes de que se destruya el objeto. Si el método es `static` (`Shared` en Visual Basic), nunca se crea el objeto de negocios y no puede controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, y <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> eventos.  
  
## <a name="parameter-merging"></a>Combinación de parámetros  
 Los parámetros se agregan a la <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> colección desde estos orígenes:  
  
-   Mediante declaración desde el `SelectParameters` elemento.  
  
-   Mediante programación desde el `Selecting` método.  
  
 En primer lugar, los parámetros se enumeran en la `SelectParameters` se agregan el elemento. En segundo lugar, los parámetros mediante programación se agregan y quitan en el <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> evento, que se produce antes de la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> se ejecuta el método. El método se resuelve después de los parámetros se combinan. Resolución del método se describe en la sección siguiente.  
  
> [!IMPORTANT]
>  Debe validar cualquier valor de parámetro que recibe desde el cliente. El tiempo de ejecución simplemente sustituye el valor del parámetro en el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad.  
  
## <a name="method-resolution"></a>Resolución del método  
 Cuando el <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> llama el método, los campos de datos desde el control enlazado a datos, los parámetros que se crearon de forma declarativa en el `SelectParameters` elemento y los parámetros que se agregaron en el <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> controlador de eventos se combinan. (Para obtener más información, consulte la sección anterior). El <xref:System.Web.UI.WebControls.ObjectDataSource> controlar intenta encontrar un método para llamar a. En primer lugar, busca uno o varios métodos con el nombre especificado en el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad. Si no se encuentra ninguna coincidencia, un <xref:System.InvalidOperationException> es una excepción. Si se encuentra una coincidencia, a continuación, busca nombres de parámetros coincidentes. Por ejemplo, supongamos que un tipo especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> propiedad tiene dos métodos denominados `SelectARecord`. Una `SelectARecord` tiene un parámetro, `ID`y el otro `SelectARecord` tiene dos parámetros, `Name` y `Number`. Si el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> colección tiene sólo un parámetro denominado `ID`, el `SelectARecord` método con solo el `ID` parámetro se denomina. El tipo del parámetro no se comprueba en la resolución de los métodos. No importa el orden de los parámetros.  
  
 Si el <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propiedad está establecida, el método se resuelve de manera diferente. El <xref:System.Web.UI.WebControls.ObjectDataSource> busca un método con el nombre especificado en el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad que toma un parámetro del tipo que se especifica en el <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propiedad. En este caso, el nombre del parámetro no importa.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo un <xref:System.Web.UI.WebControls.GridView> control puede mostrar datos mediante un <xref:System.Web.UI.WebControls.ObjectDataSource> control en una página de formularios Web Forms. El <xref:System.Web.UI.WebControls.ObjectDataSource> identifica un nombre de clase parcial o completo con su <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> propiedad y un método que se llama para recuperar los datos con su <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad. En tiempo de ejecución, se crea el objeto y se llama al método mediante la reflexión. El <xref:System.Web.UI.WebControls.GridView> control enumera a través de la <xref:System.Collections.IEnumerable> colección devuelto por el método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad y se muestran los datos.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Uso de Entity Framework y el Control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una colección de los parámetros que usa el método especificado por la propiedad <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />.</summary>
        <value>Colección de los parámetros que usa el método especificado por la propiedad <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> procedimientos property get el <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto que está asociado el <xref:System.Web.UI.WebControls.ObjectDataSource> control.  
  
 Agregar parámetros a la <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> colección mediante declaración utilizando el `SelectParameters` elemento o mediante programación en el controlador para el <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> eventos. En tiempo de ejecución, los parámetros se enumeran en la `SelectParameters` elemento se agregan a la colección en primer lugar. Parámetros de la colección, a continuación, se agregan o quitan mediante el controlador para el <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> eventos. El <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> evento se desencadena antes de la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> se ejecuta el método.  
  
 Antes de la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> se ejecuta el método, los nombres y tipos de los parámetros que se encuentran en el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> colección debe coincidir con la firma del método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad. Por ejemplo, si un método de selección denominado `GetEmployeesByStateAndAge` toma un `string` y un entero como parámetros, el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> colección debe contener dos parámetros. El primer parámetro debe resolverse en una cadena y el segundo parámetro debe resolverse en un entero. Ambos parámetros se pueden especificar en el marcado en el `SelectParameters` elemento. Como alternativa, pueden ser pueden agregarse en el <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> se puede agregar controlador de eventos o un parámetro en el marcado y el otro se puede agregarse mediante programación.  
  
 Para obtener más información, consulte [usar parámetros con el ObjectDataSource Control](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4) y <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod> propiedad.  
  
> [!IMPORTANT]
>  En el código para el <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> controlador de eventos o en el método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad, asegúrese de que validar cualquier valor de parámetro que se recibe desde el cliente.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo recuperar un registro de datos única mediante un <xref:System.Web.UI.WebControls.ObjectDataSource> controlar y mostrarlo en un <xref:System.Web.UI.WebControls.DetailsView> control. El <xref:System.Web.UI.WebControls.ObjectDataSource> control recupera un registro de empleado concreto mediante una llamada a la `GetEmployee` método de la `EmployeeLogic` clase. El `GetEmployee` método requiere un parámetro de Id. de empleado. El <xref:System.Web.UI.WebControls.ObjectDataSource> control utiliza un `QueryStringParameter` elemento marcado para crear un <xref:System.Web.UI.WebControls.QueryStringParameter> objeto que se recuperará el valor de un parámetro de cadena de consulta especificada de la dirección URL y pasarlo a la `GetEmployee` método.  
  
 Otras clases de parámetro pueden usarse para recuperar valores de otros orígenes, como las propiedades del control, los campos de formulario, cookies, datos de perfil ASP.NET o estado de sesión. También puede usar un objeto de parámetro que se define en el marcado con el fin de pasar un valor codificado de forma rígida para el método select. Para obtener más información acerca de las clases de parámetros que están disponibles, consulte [usar parámetros con controles de origen de datos para el filtrado](https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)).  
  
 Para ejecutar este ejemplo, necesita lo siguiente:  
  
-   Un sitio Web que tiene una cadena de conexión denominada `NorthwindConnection` que se conecta a la base de datos de Northwind Traders. Para obtener más información, consulte el <xref:System.Web.UI.WebControls.ObjectDataSource> información general de clases.  
  
-   El `EmployeeLogic` clase que se muestra como uno de los ejemplos de código para el <xref:System.Web.UI.WebControls.ObjectDataSource> información general de clases. El archivo de clase debe encontrarse en la carpeta App_Code.  
  
-   El código de ejemplo se puede ejecutar como una página .aspx. Si se solicita la página sin un parámetro de cadena de consulta, se muestra un mensaje de error. Si se solicita la página con una cadena de consulta como `?empid=1` después del nombre del archivo .aspx, verá los detalles para el empleado solicitado.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/CS/objds3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/VB/objds3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SortParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SortParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre del objeto comercial que utilizó el parámetro <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> para especificar una expresión de ordenación para admitir la ordenación del origen de datos.</summary>
        <value>Nombre del parámetro de método utilizado para indicar el parámetro que se utilizó para ordenar los datos. El valor predeterminado es una cadena vacía.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> propiedad se usa para admitir la ordenación del origen de datos. Cuando un <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> propiedad está establecida en el <xref:System.Web.UI.DataSourceSelectArguments> de objetos y pasa a la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> método, el <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> valor identifica el nombre del parámetro de la <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> método del objeto comercial según los cuales se ordenan los datos.  
  
 Si el <xref:System.Web.UI.WebControls.ObjectDataSource> está asociado a un control enlazado a datos, los valores que se pasan al parámetro hacer seguida de la forma de valores de campo separados por comas `"ASC"` o `"DESC"`. Por ejemplo, el valor de orden ascendente de `Name` sería `"Name ASC"`.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> propiedad delega en el <xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto que está asociado el <xref:System.Web.UI.WebControls.ObjectDataSource> control.  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos de código. El primer ejemplo de código muestra cómo implementar un tipo que admite la ordenación. El segundo ejemplo de código muestra cómo implementar una expresión de ordenación.  
  
 En el ejemplo de código siguiente se muestra cómo implementar un tipo que admite la ordenación. El `SelectMethod` de la `SortingData` clase toma un parámetro, `sortExpression`. La cadena que se pasa a `SelectMethod` se usa para la <xref:System.Data.DataView.Sort%2A> propiedad de la <xref:System.Data.DataView> objeto devuelto por `SelectMethod`.  
  
 [!code-csharp[ObjectDataSourceSorting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceSorting/CS/SortingData.cs#1)]
 [!code-vb[ObjectDataSourceSorting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceSorting/VB/SortingData.vb#1)]  
  
 En el ejemplo de código siguiente se muestra cómo implementar una expresión de ordenación. El código de la página Web crea una instancia de la <xref:System.Web.UI.WebControls.ObjectDataSource> control. El <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> propiedad está establecida en `SortingData` y <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> propiedad está establecida en `sortExpression`. El <xref:System.Web.UI.WebControls.GridView.AllowSorting%2A> propiedad de la <xref:System.Web.UI.WebControls.GridView> control está establecido en `true`. Cuando el usuario hace clic en el **ordenación** button, el nombre del campo, `Name` o `Number`, se pasa a `SelectMethod` en el parámetro de ordenación.  
  
 [!code-aspx-csharp[ObjectDataSourceSorting#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceSorting/CS/SortingDataExample.aspx#2)]
 [!code-aspx-vb[ObjectDataSourceSorting#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceSorting/VB/SortingDataExampleVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanSort" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="SqlCacheDependency">
      <MemberSignature Language="C#" Value="public virtual string SqlCacheDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SqlCacheDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SqlCacheDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SqlCacheDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SqlCacheDependency : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una cadena delimitada por puntos y comas que indica las bases de datos y las tablas que deben utilizarse para la dependencia de caché de Microsoft SQL Server.</summary>
        <value>Cadena que indica las bases de datos y las tablas que deben utilizarse para la dependencia de caché de SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ObjectDataSource> control admite una directiva de expiración opcional que se basa en el <xref:System.Web.Caching.SqlCacheDependency> objeto para la caché de datos (el servicio debe configurarse para el servidor de base de datos).  
  
 SQL Server admite dos mecanismos para la invalidación de la caché: sondeo y la notificación. Cada mecanismo tiene una sintaxis diferente para el <xref:System.Web.Caching.SqlCacheDependency> objeto.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource> admite el sondeo única. El <xref:System.Web.Caching.SqlCacheDependency> cadena se usa para crear un <xref:System.Data.SqlClient.SqlDependency> objeto que se pasa a la <xref:System.Data.Common.DbCommand> constructor antes el <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> se ejecuta el método. El <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> cadena identifica las bases de datos y tablas de acuerdo con el mismo formato que usa el `@ Page` directiva, donde la primera parte de la cadena es una cadena de conexión a una base de datos de SQL Server, seguida por un delimitador de coma y, finalmente, el nombre de la tabla de base de datos (por ejemplo, `"connectionstring1:table1"`). Si el <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> propiedad depende de más de una tabla, los pares de nombre de tabla y de cadena de conexión están separados por punto y coma (por ejemplo, `"connectionstring1:table1";connectionstring2:table2"`).  
  
 Para admitir la notificación, debe escribir la lógica de caché en la implementación de su <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad y controlar la construcción de la <xref:System.Web.Caching.SqlCacheDependency> objeto en el código.  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos de código. El primer ejemplo de código muestra cómo crear una dependencia de caché de SQL Server y establecer el <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> propiedad de un <xref:System.Web.UI.WebControls.ObjectDataSource> objeto. El segundo ejemplo de código muestra cómo implementar un método contenedor que devuelve un <xref:System.Data.DataSet> objeto para habilitar el almacenamiento en caché y el filtrado con un <xref:System.Web.UI.WebControls.ObjectDataSource> objeto.  
  
 El código siguiente muestra cómo crear una dependencia de caché de SQL Server y establecer el <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> propiedad de un <xref:System.Web.UI.WebControls.ObjectDataSource> control. En este ejemplo, la base de datos se sondea cada 120 segundos. Si los datos de Northwind Traders empleados de la tabla de cambios durante el que tiempo, todos los datos que se almacena en caché por la <xref:System.Web.UI.WebControls.ObjectDataSource> controlar y que muestra el <xref:System.Web.UI.WebControls.GridView> control ha expirado y se recupera un nuevo conjunto de datos en la siguiente solicitud de la página.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_7/CS/objds7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_7/VB/objds7vb.aspx#1)]  
  
 En el ejemplo de código siguiente se muestra cómo implementar un método contenedor que devuelve un <xref:System.Data.DataSet> objeto para habilitar el almacenamiento en caché y el filtrado con un <xref:System.Web.UI.WebControls.ObjectDataSource> control. En la implementación base de la `EmployeeLogic` (clase), el `GetAllEmployees` método devuelve un <xref:System.Collections.ArrayList> objeto. En lugar de refactorizar el objeto completamente para trabajar con el <xref:System.Web.UI.WebControls.ObjectDataSource> en una página de formularios Web Forms, un método contenedor denominado `GetAllEmployeesAsDataSet` se agrega que devuelve un conjunto de `NorthwindEmployee` datos como un <xref:System.Data.DataSet>.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="StartRowIndexParameterName">
      <MemberSignature Language="C#" Value="public string StartRowIndexParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartRowIndexParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property StartRowIndexParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StartRowIndexParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StartRowIndexParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("startRowIndex")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre del parámetro del método de recuperación de datos utilizado para indicar el valor del identificador del primer registro que se recupera para admitir la paginación del origen de datos.</summary>
        <value>Nombre del parámetro del método de objeto comercial utilizado para indicar el primer registro que se recupera. El parámetro debe devolver un valor entero. El valor predeterminado es <c>"startRowIndex"</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> propiedad se utiliza para admitir la paginación del origen de datos. Para obtener información acerca de cómo se admite la paginación por el <xref:System.Web.UI.WebControls.ObjectDataSource> control, vea <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> propiedad delega en el <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto que está asociado el <xref:System.Web.UI.WebControls.ObjectDataSource> control.  
  
   
  
## Examples  
 Los tres ejemplos siguientes muestran una página Web, una clase de página de código subyacente y una clase de acceso a datos que permiten al usuario elegir de cuántos registros se muestran en la página.  
  
 La página Web contiene un <xref:System.Web.UI.WebControls.ObjectDataSource> control cuya <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> propiedad está establecida en `true`. El <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> propiedad está establecida en el nombre de un método que devuelve el número total de registros en la consulta. El <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> propiedad y el <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> propiedad se establecen en los nombres de los parámetros que se usan en el método Select. La página también contiene un <xref:System.Web.UI.WebControls.DropDownList> control.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 El segundo ejemplo muestra un controlador para el <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> eventos de la <xref:System.Web.UI.WebControls.DropDownList> control. El código en el controlador se establece la <xref:System.Web.UI.WebControls.GridView.PageSize%2A> propiedad a la selección del usuario.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 El tercer ejemplo muestra la clase de acceso a datos que recupera datos de la tabla Customers. Incluye un método denominado `GetSubsetOfEmployees`, que se asigna a la <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSource> control. El ejemplo también incluye un método denominado `GetEmployeeCount`, que se asigna a la <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSource> control. La clase usa LINQ para consultar la tabla Customers. El ejemplo requiere una clase LINQ to SQL que representa la base de datos Northwind y la tabla Customers. Para obtener más información, vea [Cómo: Crear clases LINQ to SQL en un proyecto Web](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="objectDataSource.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Efectúa el seguimiento de los cambios en el estado de vista del control <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> para poder almacenarlos en el objeto <see cref="T:System.Web.UI.StateBag" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.TrackViewState%2A> método se reemplaza para marcar el punto de partida para comenzar el seguimiento y guardar cambios en el control como parte del estado de vista para el objeto.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.TrackViewState" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre de la clase que representa el objeto <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <value>Nombre de clase completo o parcial que identifica el tipo del objeto que representa <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />. El valor predeterminado es una cadena vacía ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para crear una instancia del objeto que el <xref:System.Web.UI.WebControls.ObjectDataSource> se enlaza el control, el control usa la reflexión para cargar el tipo identificado por el nombre de tipo en tiempo de ejecución. Por lo tanto, el valor de la <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> propiedad puede ser un tipo parcial para el código que se encuentra en los directorios Bin o App_Code o un nombre de tipo completo para el código que está registrado en la caché global de ensamblados. Si utiliza la caché global de ensamblados, debe agregar la referencia correspondiente a la `assemblies` sección del archivo Machine.config o Web.config.  
  
 El tipo debe tener un constructor predeterminado, a menos que controle la <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> eventos para crear una instancia de ella por sí mismo. Se crea una instancia del tipo para cada llamada a la <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>, y <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> métodos, si los métodos del tipo son los métodos de miembro. No se crea una instancia si los métodos son `static` (`Shared` en Visual Basic). Si el tipo implementa la <xref:System.IDisposable> interfaz, el <xref:System.IDisposable.Dispose%2A> se llama al método antes de que se destruya el objeto.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo un <xref:System.Web.UI.WebControls.GridView> control puede mostrar datos mediante un <xref:System.Web.UI.WebControls.ObjectDataSource> control en una página de formularios Web Forms. El <xref:System.Web.UI.WebControls.ObjectDataSource> identifica un nombre de clase parcial o completo con su <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> propiedad y un método que se llama para recuperar los datos con su <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad. En tiempo de ejecución, se crea el objeto y se llama al método mediante la reflexión. El <xref:System.Web.UI.WebControls.GridView> control enumera a través de la <xref:System.Collections.IEnumerable> colección devuelto por la <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad y se muestran los datos.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 El ejemplo siguiente muestra la clase que la <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> valor de propiedad hace referencia a.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/northwindemployee1.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/northwindemployee1.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
      <MemberSignature Language="VB.NET" Value="Public Function Update () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; int" Usage="objectDataSource.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Realiza una operación de actualización llamando al método que se identifica mediante la propiedad <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" /> y cualquier parámetro que esté en la colección <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />.</summary>
        <returns>Valor que representa el número de filas actualizadas en el almacenamiento de datos subyacente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se supone que el objeto de negocios para actualizar un registro de datos a la vez, en lugar de en un lote.  
  
 Antes de la <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> se realiza el <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A> se llama al método para provocar el <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> eventos. Puede controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> eventos para examinar los valores de los parámetros y realice algún preprocesamiento antes de realizar una <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> operación. Para realizar una operación de actualización, el <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto usa la reflexión para crear una instancia del objeto que se identifica mediante el <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> propiedad. A continuación, llama al método identificado por la <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> propiedad mediante asociada ninguna <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> propiedades. Después de la <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> se complete la operación, el <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> se llama al método para provocar el <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> eventos. Puede controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> eventos para examinar los valores devueltos, parámetros de salida y las excepciones y para realizar cualquier procesamiento posterior.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> método delega a la <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> método de la <xref:System.Web.UI.WebControls.ObjectDataSourceView> que está asociado con el <xref:System.Web.UI.WebControls.ObjectDataSource> control.  
  
 Para obtener más información acerca de la combinación de parámetros, la duración de objetos y la resolución del método, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>.  
  
> [!IMPORTANT]
>  Debe validar cualquier valor de parámetro que recibe desde el cliente. El tiempo de ejecución simplemente sustituye el valor del parámetro en el <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> propiedad.  
  
## <a name="data-bound-controls"></a>Controles enlazados a datos  
 Cuando el <xref:System.Web.UI.WebControls.ObjectDataSource> control está asociado con un control enlazado a datos, como el <xref:System.Web.UI.WebControls.GridView> control, no es necesario llamar a la <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> método desde el código de página. El <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> método se invoca directamente por el control enlazado a datos en su lugar.  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos de código. El primer ejemplo de código muestra cómo usar un <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controles y varios <xref:System.Web.UI.WebControls.ObjectDataSource> objetos para actualizar los datos. El segundo ejemplo de código se muestra la `EmployeeLogic` clase que se usa en el primer ejemplo de código.  
  
 En el ejemplo de código siguiente se muestra cómo usar un <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controles y varios <xref:System.Web.UI.WebControls.ObjectDataSource> controles para actualizar los datos. El <xref:System.Web.UI.WebControls.DropDownList> muestra el nombre de un empleado de Northwind, mientras que el <xref:System.Web.UI.WebControls.TextBox> controles se utilizan para especificar y actualizar información de dirección. Porque el <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> colección contiene un <xref:System.Web.UI.WebControls.ControlParameter> objeto que está enlazado al valor seleccionado de la <xref:System.Web.UI.WebControls.DropDownList>, el botón que provoca la <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> operación está habilitada solo después de que se selecciona un empleado.  
  
> [!IMPORTANT]
>  Este ejemplo tiene un cuadro de texto que acepta datos proporcionados por el usuario, lo que puede suponer una amenaza para la seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]  
  
 El siguiente ejemplo de código muestra la `EmployeeLogic` clase que se usa en el ejemplo de código anterior.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/northwindemployee12.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/northwindemployee12.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Uso de Entity Framework y el Control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Updated : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tiene lugar cuando se termina una operación de <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> eventos para examinar los valores de parámetros de salida o valor devuelto, o para determinar si se produjo una excepción después de un <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> ha completado la operación. El valor devuelto, los parámetros de salida y las propiedades de control de excepciones están disponibles desde el <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> objeto que está asociado con el evento.  
  
 Para obtener más información acerca de cómo controlar eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Uso de Entity Framework y el Control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre del método o la función que invoca el control <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> para actualizar los datos.</summary>
        <value>Cadena que representa el nombre del método o función que usa el objeto <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> para actualizar datos. El valor predeterminado es una cadena vacía.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ObjectDataSource> control supone que el método que se identifica mediante el <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> propiedad realiza las actualizaciones de una a la vez, en lugar de en un lote.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> propiedad delega en el <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto que está asociado el <xref:System.Web.UI.WebControls.ObjectDataSource> control.  
  
 Asegúrese de que los nombres de parámetro configuran para el <xref:System.Web.UI.WebControls.ObjectDataSource> en controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> colección coinciden con los nombres de columna devueltos por el método select.  
  
## <a name="object-lifetime"></a>Duración de objetos  
 El método que se identifica mediante el <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> propiedad puede ser un método de instancia o un `static` (`Shared` en Visual Basic) (método). Si es un método de instancia, el objeto de negocios se crea y destruye cada vez que el método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> se llama a la propiedad. Puede controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> y <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> eventos para que funcionen con el objeto de negocios antes del método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> se llama a la propiedad. También puede controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> evento que se produce después del método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> se llama a la propiedad. Si el objeto comercial implementa la <xref:System.IDisposable> interfaz, el <xref:System.IDisposable.Dispose%2A> se llama al método antes de que se destruya el objeto. Si el método es `static` (`Shared` en Visual Basic), nunca se crea el objeto de negocios y no puede controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, y <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> eventos.  
  
## <a name="parameter-merging"></a>Combinación de parámetros  
 Los parámetros se agregan a la <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> colección de tres orígenes:  
  
-   Desde el control enlazado a datos en tiempo de ejecución.  
  
-   Desde el `UpdateParameters` elemento, mediante declaración.  
  
-   Desde el <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> controlador de eventos, mediante programación.  
  
 En primer lugar, los parámetros que se generan a partir de los controles enlazados a datos se agregan a la <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> colección. Por ejemplo, si la <xref:System.Web.UI.WebControls.ObjectDataSource> control se enlaza a un <xref:System.Web.UI.WebControls.GridView> control que tiene las columnas `Name` y `Number`, los parámetros de `Name` y `Number` se agregan a la colección. El nombre exacto del parámetro depende del <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> propiedad. El tipo de datos de estos parámetros es `string`. A continuación, los parámetros que aparecen en el `UpdateParameters` se agregan el elemento. Si un parámetro en el `UpdateParameters` se encuentra el elemento con el mismo nombre que un parámetro que ya está en el <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> colección, el parámetro existente se modifica para que coincida con el parámetro que se especifica en el `UpdateParameters` elemento. Normalmente, se usa para modificar el tipo de los datos en el parámetro. Por último, puede agregar y quitar parámetros mediante programación el <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> evento, que se produce antes de la <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> se ejecuta el método. El método se resuelve después de los parámetros se combinan. Resolución del método se describe en la sección siguiente.  
  
> [!IMPORTANT]
>  Debe validar cualquier valor de parámetro que recibe desde el cliente. El tiempo de ejecución simplemente sustituye el valor del parámetro en el <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> propiedad.  
  
## <a name="method-resolution"></a>Resolución del método  
 Cuando el <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> llama el método, los campos de datos desde el control enlazado a datos, los parámetros que se crearon de forma declarativa en el `UpdateParameters` elemento y los parámetros que se agregaron en el <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> controlador de eventos se combinan. (Para obtener más información, consulte la sección anterior). El <xref:System.Web.UI.WebControls.ObjectDataSource> controlar intenta encontrar un método para llamar a. En primer lugar, busca uno o varios métodos con el nombre especificado en el <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> propiedad. Si no se encuentra ninguna coincidencia, un <xref:System.InvalidOperationException> es una excepción. Si se encuentra una coincidencia, a continuación, busca nombres de parámetros coincidentes. Por ejemplo, supongamos que un tipo especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> propiedad tiene dos métodos denominados `UpdateARecord`. Una `UpdateARecord` tiene un parámetro, `ID`y el otro `UpdateARecord` tiene dos parámetros, `Name` y `Number`. Si el <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> colección tiene sólo un parámetro denominado `ID`, el `UpdateARecord` método con solo el `ID` parámetro se denomina. El tipo del parámetro no se comprueba en la resolución de los métodos. No importa el orden de los parámetros.  
  
 Si el <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propiedad está establecida, el método se resuelve de manera diferente. El <xref:System.Web.UI.WebControls.ObjectDataSource> busca un método con el nombre especificado en el <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> propiedad que toma un parámetro del tipo que se especifica en el <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> propiedad. En este caso, el nombre del parámetro no importa.  
  
   
  
## Examples  
 Los tres ejemplos siguientes muestran una página Web, una clase de página de código subyacente y una clase de acceso a datos que permiten al usuario recuperar y actualizar registros en la tabla Employees de la base de datos Northwind.  
  
 El primer ejemplo muestra una página Web que contiene dos <xref:System.Web.UI.WebControls.ObjectDataSource> controles, un <xref:System.Web.UI.WebControls.DropDownList> control y un <xref:System.Web.UI.WebControls.DetailsView> control. La primera <xref:System.Web.UI.WebControls.ObjectDataSource> control y el <xref:System.Web.UI.WebControls.DropDownList> control se usan para recuperar y mostrar los nombres de los empleados de la base de datos. El segundo <xref:System.Web.UI.WebControls.ObjectDataSource> control y el <xref:System.Web.UI.WebControls.DetailsView> control se usan para recuperar, mostrar y modificar los datos del registro de empleado seleccionado por el usuario.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]  
  
 El segundo ejemplo muestra los controladores para la <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> y <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> eventos. El <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> controlador de eventos serializa el objeto que contiene los datos que se ha recuperado de la tabla Employee. El objeto serializado se almacena en el estado de vista. El <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> controlador de eventos deserializa el objeto en estado de vista que contiene los datos originales para el registro de datos que se está actualizando. El objeto que contiene los datos originales se pasa como parámetro al método Update. Los datos originales deben pasarse a la base de datos para que se puede usar para comprobar si los datos se ha modificado por otro proceso.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]  
  
 El tercer ejemplo muestra la clase de acceso a datos que interactúa con la base de datos Northwind. La clase utiliza LINQ para consultar y actualizar la tabla Employees. El ejemplo requiere una clase LINQ to SQL que representa la base de datos Northwind y la tabla Employees. Para obtener más información, vea [Cómo: Crear clases LINQ to SQL en un proyecto Web](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Uso de Entity Framework y el Control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la colección de parámetros que contiene los parámetros utilizados por el método especificado por la propiedad <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />.</summary>
        <value>Objeto <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> que contiene los parámetros utilizados por el método especificado por la propiedad <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los nombres y tipos de los parámetros que se encuentran en el <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> colección debe coincidir con los nombres y tipos de los parámetros en el <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> firma del método. Los nombres de parámetro se ven afectados por la <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> propiedad y distinguen mayúsculas de minúsculas. Los parámetros de la colección dependen de los datos en el control enlazado a datos, los parámetros que se especifican mediante declaración y los parámetros que se agregan mediante programación. Para obtener más información, vea la sección "Combinación de parámetros" en <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> y [usar parámetros con el ObjectDataSource Control](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> propiedad recupera la <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> propiedad que está contenida en el <xref:System.Web.UI.WebControls.ObjectDataSourceView> objeto que está asociado el <xref:System.Web.UI.WebControls.ObjectDataSource> control.  
  
 Para obtener más información acerca de la combinación de parámetros, la duración de objetos y la resolución del método, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>.  
  
> [!IMPORTANT]
>  Debe validar cualquier valor de parámetro que recibe desde el cliente. El tiempo de ejecución simplemente sustituye el valor del parámetro en el <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> propiedad.  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos de código. El primer ejemplo de código muestra cómo usar un <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controles y varios <xref:System.Web.UI.WebControls.ObjectDataSource> objetos para actualizar los datos. El segundo ejemplo de código se muestra la `EmployeeLogic` clase que se usa en el primer ejemplo de código.  
  
 En el ejemplo de código siguiente se muestra cómo usar un <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controles y varios <xref:System.Web.UI.WebControls.ObjectDataSource> controles para actualizar los datos. El <xref:System.Web.UI.WebControls.DropDownList> muestra el nombre de un empleado de Northwind, mientras que el <xref:System.Web.UI.WebControls.TextBox> controles se utilizan para especificar y actualizar información de dirección. Porque el <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> colección contiene un <xref:System.Web.UI.WebControls.ControlParameter> que está enlazado al valor seleccionado de la <xref:System.Web.UI.WebControls.DropDownList>, el botón que provoca la <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> operación está habilitada solo después de que se selecciona un empleado.  
  
> [!IMPORTANT]
>  Este ejemplo tiene un cuadro de texto que acepta datos proporcionados por el usuario, lo que puede suponer una amenaza para la seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]  
  
 El siguiente ejemplo de código muestra la `EmployeeLogic` clase que se usa en el ejemplo de código anterior.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/northwindemployee12.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/northwindemployee12.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Updating;" />
      <MemberSignature Language="F#" Value="member this.Updating : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Updating : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tiene lugar antes de una operación de <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> eventos para realizar la inicialización adicional que es específica de la aplicación, para validar los valores de parámetros o para cambiar los valores de parámetro antes de la <xref:System.Web.UI.WebControls.ObjectDataSource> control realiza la operación de actualización. Los parámetros están disponibles como un <xref:System.Collections.IDictionary> colección que tiene acceso el <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> propiedad, que se expone mediante el <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> objeto.  
  
 Para obtener más información acerca de cómo controlar eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Los tres ejemplos siguientes muestran una página Web, una clase de página de código subyacente y una clase de acceso a datos que permiten al usuario recuperar y actualizar registros en la tabla Employees de la base de datos Northwind.  
  
 El primer ejemplo muestra una página Web que contiene dos <xref:System.Web.UI.WebControls.ObjectDataSource> controles, un <xref:System.Web.UI.WebControls.DropDownList> control y un <xref:System.Web.UI.WebControls.DetailsView> control. La primera <xref:System.Web.UI.WebControls.ObjectDataSource> control y el <xref:System.Web.UI.WebControls.DropDownList> control se usan para recuperar y mostrar los nombres de los empleados de la base de datos. El segundo <xref:System.Web.UI.WebControls.ObjectDataSource> control y el <xref:System.Web.UI.WebControls.DetailsView> control se usan para recuperar, mostrar y modificar los datos del registro de empleado seleccionado por el usuario.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]  
  
 El segundo ejemplo muestra los controladores para la <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> y <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> eventos. El <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> controlador de eventos serializa el objeto que contiene los datos que se ha recuperado de la tabla Employee. El objeto serializado se almacena en el estado de vista. El <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> controlador de eventos deserializa el objeto en estado de vista que contiene los datos originales para el registro de datos que se está actualizando. El objeto que contiene los datos originales se pasa como parámetro al método Update. Los datos originales deben pasarse a la base de datos para que se puede usar para comprobar si los datos se ha modificado por otro proceso.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]  
  
 El tercer ejemplo muestra la clase de acceso a datos que interactúa con la base de datos Northwind. La clase utiliza LINQ para consultar y actualizar la tabla Employees. El ejemplo requiere una clase LINQ to SQL que representa la base de datos Northwind y la tabla Employees. Para obtener más información, vea [Cómo: Crear clases LINQ to SQL en un proyecto Web](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Controles de servidor web de orígenes de datos</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Información general sobre el control ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Crear un objeto de origen para un control ObjectDataSource</related>
      </Docs>
    </Member>
  </Members>
</Type>