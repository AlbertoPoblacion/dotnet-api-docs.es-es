<Type Name="SqlDataSourceStatusEventArgs" FullName="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cf662220fa381ff1888a96cd50bfa39d132a8c80" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39938468" /></Metadata><TypeSignature Language="C#" Value="public class SqlDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSourceStatusEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSourceStatusEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type SqlDataSourceStatusEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona los datos para un evento que provoca el control <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> después de que finalice una operación de datos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> clase se utiliza en el <xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>, y <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> eventos para pasar información sobre una operación de base de datos después de haber realizado por los datos de control de código fuente. Esta información incluye el número de filas afectadas por la operación, el <xref:System.Data.Common.DbCommand> objeto que usa el origen de datos para realizar la operación y cualquier información de excepción que dan como resultado. Mediante la adición de un delegado de controlador de eventos para controlar la <xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> o <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> eventos, puede examinar estos datos y realizar cualquier procesamiento posterior adicionales necesario.  
  
 El <xref:System.Web.UI.WebControls.SqlDataSource> control expone muchos eventos que se pueden controlar para trabajar con los objetos de datos subyacentes durante el transcurso de una operación de datos. En la tabla siguiente se enumeran los eventos y asociados <xref:System.EventArgs> y clases de controlador de eventos, para guiarle mejor los diversos eventos que se corresponden con el ciclo de vida de una operación de datos mediante el <xref:System.Web.UI.WebControls.SqlDataSource> control.  
  
|evento|EventArgs|EventHandler|  
|-----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Selecting> se produce antes de que se recuperan los datos.|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> se producen antes de una inserción, actualización o la operación de eliminación se realiza.|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler>|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> se producen después de la recuperación de datos, insert, update, o las operaciones de eliminación se complete.|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>|  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> clase para examinar el valor devuelto y los valores de parámetros de salida que se devuelven cuando se usa un <xref:System.Web.UI.WebControls.SqlDataSource> control con un procedimiento almacenado para rellenar un <xref:System.Web.UI.WebControls.GridView> control. El procedimiento almacenado, selecciona los datos que se muestran en el <xref:System.Web.UI.WebControls.GridView>, pero también devuelve otra información de vuelta al llamador, como un parámetro de salida entero y un valor devuelto. Los parámetros que el <xref:System.Web.UI.WebControls.SqlDataSource> usa para el procedimiento almacenado contiene el <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> colección y constan de los parámetros que pasan información del formulario Web para el procedimiento almacenado, así como realizar una copia de los parámetros que pasar información a la formulario. El <xref:System.Web.UI.WebControls.Parameter.Direction%2A> propiedad de estos parámetros se establece en <xref:System.Data.ParameterDirection.Output> y <xref:System.Data.ParameterDirection.ReturnValue>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSourceStatusEventArgs (System.Data.Common.DbCommand command, int affectedRows, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbCommand command, int32 affectedRows, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.#ctor(System.Data.Common.DbCommand,System.Int32,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSourceStatusEventArgs(System::Data::Common::DbCommand ^ command, int affectedRows, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SqlDataSourceStatusEventArgs : System.Data.Common.DbCommand * int * Exception -&gt; System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.SqlDataSourceStatusEventArgs (command, affectedRows, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="command"><see cref="T:System.Data.Common.DbCommand" /> que representa la consulta de base de datos, comando o procedimiento almacenado que el control <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> envía a la base de datos.</param>
        <param name="affectedRows">Número de filas afectadas por la operación de base de datos, en su caso.</param>
        <param name="exception"><see cref="T:System.Exception" /> que inicia la operación de base de datos, en su caso.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />, utilizando los parámetros de salida especificados, el valor devuelto y el número de filas afectado por la operación de base de datos.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el número de filas afectadas por una operación de base de datos.</summary>
        <value>Número de filas afectadas por una operación de base de datos. El valor predeterminado es -1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Todas las operaciones devuelven el número de filas afectadas por la operación. El <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows%2A> propiedad tiene el mismo valor que el valor devuelto de la <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>, y <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> métodos.  
  
 Cuando el <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> se llama al método y el origen de datos se establece en <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> modo, el valor devuelto es 0 en todos los casos.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Command As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ Command { System::Data::Common::DbCommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Data.Common.DbCommand" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el comando de base de datos enviado a la base de datos.</summary>
        <value>Objeto <see cref="T:System.Data.Common.DbCommand" /> que representa el comando de base de datos enviado a la base de datos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede controlar la <xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>, o <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> eventos para examinar y manipular las propiedades de la <xref:System.Data.Common.DbCommand> después de que se envía por la <xref:System.Web.UI.WebControls.SqlDataSource> control a la base de datos. El <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command%2A> propiedad permite obtener acceso a los valores devueltos y los valores de los parámetros de salida después de la operación de base de datos se realiza a través de su <xref:System.Data.Common.DbCommand.Parameters%2A> propiedad, así como el <xref:System.Data.Common.DbCommand.CommandText%2A> propiedad, que representa la consulta SQL, comando, o nombre del procedimiento almacenado que se envió a la base de datos.  
  
 Cualquier parámetro de salida es específicamente de los parámetros que tienen un <xref:System.Data.ParameterDirection.InputOutput> o <xref:System.Data.ParameterDirection.Output> valor para el <xref:System.Web.UI.WebControls.Parameter.Direction%2A> propiedad de la <xref:System.Web.UI.WebControls.Parameter> objeto. Un valor devuelto es de un parámetro que tiene un <xref:System.Data.ParameterDirection.ReturnValue> valor.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo examinar los valores de parámetros de salida cuando se usa un <xref:System.Web.UI.WebControls.SqlDataSource> control con un procedimiento almacenado. El <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> colección contiene los parámetros que el <xref:System.Web.UI.WebControls.SqlDataSource> usa para el procedimiento almacenado y consta de los parámetros que pasan información del formulario Web al procedimiento almacenado, así como los parámetros que pasan información al formulario. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> clase.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un contenedor para cualquier excepción que inicie la base de datos durante una operación de datos.</summary>
        <value><see cref="T:System.Exception" /> que ajusta cualquier excepción que inicie la base de datos en su propiedad <see cref="P:System.Exception.InnerException" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Exception> propiedad no representa la excepción producida por la operación de base de datos. Puede tener acceso a la excepción generada utilizando el <xref:System.Exception.InnerException%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se ha controlado una excepción iniciada por la base de datos.</summary>
        <value><see langword="true" /> si se ha controlado la excepción iniciada por la base de datos y no debe iniciarla el control <see cref="T:System.Web.UI.WebControls.SqlDataSource" />; de lo contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la base de datos produce una excepción, el <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled%2A> propiedad está establecida en `false` y la excepción ajustada por el <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception%2A> propiedad. Si usa un <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>, puede comprobar el <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> propiedad y controle la excepción. Si controla la excepción, establezca el <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled%2A> propiedad `true` o <xref:System.Web.UI.WebControls.SqlDataSource> control iniciará una excepción.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      </Docs>
    </Member>
  </Members>
</Type>