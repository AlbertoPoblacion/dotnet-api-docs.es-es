<Type Name="WebControl" FullName="System.Web.UI.WebControls.WebControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="68c8941b59897ff726b1ff80581dd3b644f4f02a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30601259" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebControl : System.Web.UI.Control, System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebControl extends System.Web.UI.Control implements class System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="VB.NET" Value="Public Class WebControl&#xA;Inherits Control&#xA;Implements IAttributeAccessor" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebControl : System::Web::UI::Control, System::Web::UI::IAttributeAccessor" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IAttributeAccessor</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Actúa como la clase base que define las propiedades, métodos y eventos comunes a todos los controles del espacio de nombres <see cref="N:System.Web.UI.WebControls" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Web.UI.WebControls.WebControl> clase proporciona las propiedades, métodos y eventos que son comunes a todos los controles de servidor Web. Puede controlar la apariencia y el comportamiento de un control de servidor Web estableciendo las propiedades definidas en esta clase. Por ejemplo, el color de fondo y el color de fuente de un control se controlan mediante el uso de la <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> y <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> propiedades, respectivamente. En los controles que pueden mostrar un borde, puede controlar el ancho del borde, el estilo de borde y el color del borde estableciendo la <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>, <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>, y <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> propiedades. El tamaño de un control de servidor Web puede especificarse mediante la <xref:System.Web.UI.WebControls.WebControl.Height%2A> y <xref:System.Web.UI.WebControls.WebControl.Width%2A> propiedades.  
  
 El comportamiento del control se puede especificar estableciendo determinadas propiedades. Puede habilitar y deshabilitar un control estableciendo la <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> propiedad. La ubicación del control en el orden de tabulación se controla estableciendo la <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> propiedad. Puede especificar una información sobre herramientas para el control estableciendo la <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A> propiedad.  
  
> [!NOTE]
>  No todos los controles admiten todas las propiedades definidas en esta clase. Para obtener información específica sobre si se admite una propiedad, consulte la documentación del control específico.  
  
> [!NOTE]
>  Algunas propiedades de esta clase se representan de forma diferente, dependiendo del explorador. Algunas propiedades no se representan en absoluto, mientras que otras representarán pero no tienen ningún efecto. El <xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A> propiedad de la <xref:System.Web.HttpBrowserCapabilities> objeto determina la manera en que se representa un control de servidor Web. Para los exploradores que admiten HTML 4.0, la <xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A> propiedad contendrá normal <xref:System.Web.HttpBrowserCapabilities> objeto y la mayoría de las propiedades se representarán mediante los atributos de estilo HTML 4.0. Los exploradores que no se sabe si admiten HTML 4.0 utilizarán el <xref:System.Web.UI.Html32TextWriter> objeto. Esto asignará automáticamente los atributos de estilo para los atributos de etiqueta HTML 3.2 pertinentes. En algunos casos, como con la <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> propiedad, los atributos de estilo se convertirán en etiquetas adicionales, como `<font>` etiquetas. En algunos casos, no habrá ninguna asignación realiza. Para obtener información específica acerca de cómo se representa una propiedad en distintos exploradores, consulte la documentación de la propiedad específica.  
  
 Para obtener una lista de valores de propiedad iniciales para una instancia de <xref:System.Web.UI.WebControls.WebControl>, consulte el <xref:System.Web.UI.WebControls.WebControl.%23ctor%2A> constructor.  
  
   
  
## Examples  
 [!code-csharp[WebControlAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebControlAddAttributesToRender/CS/addattrib.cs#1)]
 [!code-vb[WebControlAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebControlAddAttributesToRender/VB/addattrib.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.WebControl.BackColor" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.ForeColor" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.BorderWidth" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.BorderStyle" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.BorderColor" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.Height" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.Width" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.TabIndex" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.ToolTip" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.WebControl" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.WebControl" /> que representa una etiqueta HTML <see langword="Span" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor se utiliza para inicializar una nueva instancia de la <xref:System.Web.UI.WebControls.WebControl> clase que representa un `Span` elemento HTML.  
  
 En la tabla siguiente muestra el valor de propiedad iniciales para una instancia de <xref:System.Web.UI.WebControls.WebControl>.  
  
|Propiedad.|Valor inicial|  
|--------------|-------------------|  
|`TagKey`|El valor de enumeración <xref:System.Web.UI.HtmlTextWriterTag.Span>.|  
  
> [!NOTE]
>  No se llama directamente a este constructor. En su lugar, se suele denominar por el constructor de una clase derivada para inicializar la <xref:System.Web.UI.WebControls.WebControl.TagKey%2A> propiedad a la <xref:System.Web.UI.HtmlTextWriterTag.Span> valor de enumeración.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebControl (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (tag As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebControl(System::String ^ tag);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">Etiqueta HTML.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.WebControl" /> utilizando la etiqueta HTML especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este constructor para crear e inicializar una nueva instancia de la <xref:System.Web.UI.WebControls.WebControl> clase utilizando la etiqueta HTML especificada.  
  
 La siguiente tabla muestra los valores de propiedad iniciales para una instancia de <xref:System.Web.UI.WebControls.WebControl>.  
  
|Propiedad.|Valor inicial|  
|--------------|-------------------|  
|`TagKey`|El valor de enumeración <xref:System.Web.UI.HtmlTextWriterTag.Unknown>.|  
|`TagName`|Valor del parámetro `tag`.|  
  
> [!NOTE]
>  No se llama directamente a este constructor. En su lugar, se suele denominar por el constructor de una clase derivada para inicializar la <xref:System.Web.UI.WebControls.WebControl.TagKey%2A> y <xref:System.Web.UI.WebControls.WebControl.TagName%2A> propiedades.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebControl (System.Web.UI.HtmlTextWriterTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Web.UI.HtmlTextWriterTag tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.#ctor(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebControl(System::Web::UI::HtmlTextWriterTag tag);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tag">Uno de los valores de <see cref="T:System.Web.UI.HtmlTextWriterTag" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.WebControl" /> utilizando la etiqueta HTML especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este constructor para crear e inicializar una nueva instancia de la <xref:System.Web.UI.WebControls.WebControl> clase utilizando la especificada <xref:System.Web.UI.HtmlTextWriterTag?displayProperty=nameWithType> valor.  
  
 En la tabla siguiente muestra el valor de propiedad iniciales para una instancia de <xref:System.Web.UI.WebControls.WebControl>.  
  
|Propiedad.|Valor inicial|  
|--------------|-------------------|  
|`TagKey`|El <xref:System.Web.UI.HtmlTextWriterTag> valor de enumeración especificado por el `tag` parámetro.|  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar el constructor para la <xref:System.Web.UI.WebControls.WebControl> clase para crear un `TextArea` elemento HTML y mostrarlo en la página de formularios Web Forms.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío que tiene una extensión de nombre de archivo .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
> [!IMPORTANT]
>  Este ejemplo tiene un cuadro de texto que acepta datos proporcionados por el usuario, lo que puede suponer una amenaza para la seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic WebControl.WebControl Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.WebControl Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.WebControl Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.WebControl Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="AccessKey">
      <MemberSignature Language="C#" Value="public virtual string AccessKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.AccessKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AccessKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AccessKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la clave de acceso que permite navegar rápidamente al control de servidor web.</summary>
        <value>Clave de acceso para navegar rápidamente al control de servidor web. El valor predeterminado es <see cref="F:System.String.Empty" />, que indica que no se ha establecido esta propiedad.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> propiedad para especificar el método abreviado de teclado para el control de servidor Web. Esto le permite desplazarse rápidamente al control presionando la tecla ALT y la clave para el carácter especificado en el teclado. Por ejemplo, establecer la clave de acceso de un control en la cadena `"D"` indica que el usuario pueda ir al control presionando ALT+D.  
  
 Se permite solo una única cadena de caracteres para el <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> propiedad. Si se intenta establecer esta propiedad en un valor que no se han `null`, <xref:System.String.Empty>, ni una cadena de caracteres única, se produce una excepción.  
  
> [!NOTE]
>  Esta propiedad se admite únicamente en Internet Explorer 4.0 y versiones posteriores.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo establecer y utilizar el <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> propiedad de un <xref:System.Web.UI.WebControls.TextBox> control.  
  
> [!IMPORTANT]
>  Este ejemplo tiene un cuadro de texto que acepta datos proporcionados por el usuario, lo que puede suponer una amenaza para la seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic WebControl.AccessKey Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.AccessKey Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.AccessKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.AccessKey Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La clave de acceso especificada no es <see langword="null" />, <see cref="F:System.String.Empty" /> ni una cadena de un solo carácter.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected virtual void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> que representa el flujo de salida para representar contenido HTML en el cliente.</param>
        <summary>Agrega atributos y estilos HTML que se deben representar en el <see cref="T:System.Web.UI.HtmlTextWriterTag" /> especificado. Este método lo usan principalmente los desarrolladores de controles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para representar los atributos y estilos para un control de servidor Web en el cliente, se suele llamar a la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> y <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=nameWithType> métodos para insertar cada una los atributos y estilos individualmente a la <xref:System.Web.UI.HtmlTextWriter> flujo de salida. Para simplificar el proceso, este método encapsula todas las llamadas a la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A?displayProperty=nameWithType> y <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=nameWithType> métodos para todos los atributos y estilos asociados al control de servidor Web. Todos los atributos y estilos se insertan en la <xref:System.Web.UI.HtmlTextWriter> flujo de salida de una única llamada al método. Este método se invalida normalmente los programadores de controles en las clases derivadas para insertar los atributos adecuados y estilos a la <xref:System.Web.UI.HtmlTextWriter> flujo de salida para la clase.  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A> no se puede usar el método para insertar el script de cliente. Para usar script de cliente, consulte la <xref:System.Web.UI.ClientScriptManager> clase.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo crear una clase que deriva de la <xref:System.Web.UI.WebControls.WebControl> clase. La implementación base de la <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A> método se invalida para agregar los atributos apropiados a la clase derivada en la <xref:System.Web.UI.HtmlTextWriter> flujo de salida.  
  
 [!code-csharp[WebControlAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebControlAddAttributesToRender/CS/addattrib.cs#1)]
 [!code-vb[WebControlAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebControlAddAttributesToRender/VB/addattrib.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="ApplyStyle">
      <MemberSignature Language="C#" Value="public void ApplyStyle (System.Web.UI.WebControls.Style s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyStyle(class System.Web.UI.WebControls.Style s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyStyle (s As Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyStyle(System::Web::UI::WebControls::Style ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="s">
          <see cref="T:System.Web.UI.WebControls.Style" /> que representa el estilo que se va a copiar.</param>
        <summary>Copia en el control Web todos los elementos no vacíos del estilo especificado, sobrescribiendo los elementos de estilo existentes del mismo. Este método lo usan principalmente los programadores de controles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.WebControl.ApplyStyle%2A> método para aplicar un estilo a un <xref:System.Web.UI.WebControls.DataGrid> control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[WebControlApplyStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebControlApplyStyle/CS/webcontrolapplystylecs.aspx#1)]
 [!code-aspx-vb[WebControlApplyStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebControlApplyStyle/VB/webcontrolapplystylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Web.UI.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::AttributeCollection ^ Attributes { System::Web::UI::AttributeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la colección de atributos arbitrarios (sólo para su representación) que no corresponden a propiedades del control.</summary>
        <value>
          <see cref="T:System.Web.UI.AttributeCollection" /> de pares de nombre y valor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> colección contiene una colección de todos los atributos declarados en la etiqueta de apertura de un control de servidor Web. Esto permite controlar mediante programación los atributos asociados a un control de servidor Web. Puede agregar atributos a la colección o quitar atributos de la colección.  
  
> [!NOTE]
>  Esta propiedad se representa con todos los atributos de la colección en la etiqueta de apertura del control, independientemente de la configuración del explorador. No todos los exploradores admiten todos los atributos que se representan. Normalmente se omiten los atributos no admitidos por el explorador.  
  
> [!NOTE]
>  No se puede agregar script del lado cliente a un <xref:System.Web.UI.WebControls.WebControl> instancia mediante el <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> colección. Para agregar script del lado cliente, use el <xref:System.Web.UI.Page.ClientScript%2A> propiedad en el <xref:System.Web.UI.Page> control.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo el <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> propiedad de un <xref:System.Web.UI.WebControls.WebControl> puede utilizarse para ejecutar JavaScript comando cuando la <xref:System.Web.UI.WebControls.TextBox> control pierde el foco.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
> [!IMPORTANT]
>  Este ejemplo tiene un cuadro de texto que acepta datos proporcionados por el usuario, lo que puede suponer una amenaza para la seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic WebControl.Attributes Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Attributes Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Attributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Attributes Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.AttributeCollection" />
        <altmember cref="T:System.Web.UI.ClientScriptManager" />
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.WebColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el color de fondo del control de servidor web.</summary>
        <value>Objeto <see cref="T:System.Drawing.Color" /> que representa el color de fondo del control. El valor predeterminado es <see cref="F:System.Drawing.Color.Empty" />, lo que indica que esta propiedad no se estableció.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> propiedad para especificar el color de fondo del control de servidor Web. Esta propiedad se establece mediante una <xref:System.Drawing.Color?displayProperty=nameWithType> objeto.  
  
> [!NOTE]
>  Esta propiedad se representará para sólo ciertos controles. Por ejemplo, <xref:System.Web.UI.WebControls.Table>, <xref:System.Web.UI.WebControls.Panel>, <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.Calendar>, y <xref:System.Web.UI.WebControls.ValidationSummary> se representarán esta propiedad. También funciona para <xref:System.Web.UI.WebControls.CheckBoxList>, <xref:System.Web.UI.WebControls.RadioButtonList> y <xref:System.Web.UI.WebControls.DataList> si sus `RepeatLayout` propiedad es `RepeatLayout.Table`, no `RepeatLayout.Flow`.  
  
 En general, sólo los controles que se representan como un `<table>` etiqueta puede mostrar un color de fondo en HTML 3.2, mientras que casi cualquier control puede en HTML 4.0.  
  
 Para los controles que se representan como un `<span>` etiqueta (incluidos <xref:System.Web.UI.WebControls.Label>, todos los controles de validación y controles de lista con sus `RepeatLayout` propiedad establecida en `RepeatLayout.Flow`), esta propiedad funciona en Microsoft Internet Explorer 5 y versiones posteriores, pero no en Microsoft Internet Explorer versión 4.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo establecer el <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> propiedad de la <xref:System.Web.UI.WebControls.Table> control, que se hereda de la <xref:System.Web.UI.WebControls.WebControl> clase base.  
  
 [!code-aspx-csharp[Classic WebControl.BackColor Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.BackColor Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.BackColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.BackColor Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.Panel" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <altmember cref="T:System.Web.UI.WebControls.Calendar" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationSummary" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxList" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.BorderColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BorderColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BorderColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.WebColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el color de borde del control Web.</summary>
        <value>
          <see cref="T:System.Drawing.Color" /> que representa el color de borde del control. El valor predeterminado es <see cref="F:System.Drawing.Color.Empty" />, lo que indica que esta propiedad no se estableció.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> propiedad para especificar el color del borde del control de servidor Web. Esta propiedad se establece mediante una <xref:System.Drawing.Color> objeto.  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> propiedad representará solo para ciertos controles. Por ejemplo, el <xref:System.Web.UI.WebControls.Table>, <xref:System.Web.UI.WebControls.Panel>, <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.Calendar>, y <xref:System.Web.UI.WebControls.ValidationSummary> controles representarán esta propiedad. También funciona para la <xref:System.Web.UI.WebControls.CheckBoxList>, <xref:System.Web.UI.WebControls.RadioButtonList>, y <xref:System.Web.UI.WebControls.DataList> controla si sus `RepeatLayout` propiedad está establecida en `RepeatLayout.Table`, no `RepeatLayout.Flow`. Sin embargo, se representa como el `bordercolor` atributo, que no forma parte del estándar HTML 3.2. El `bordercolor` atributo funciona con Microsoft Internet Explorer versión 3.0 o posterior, pero no la mayoría de los otros exploradores.  
  
 Cuando el <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> no está establecida la propiedad, el explorador utilizará su color del borde predeterminado. Consulte su explorador para determinar su combinación de colores predeterminada.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo establecer el <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> propiedad de la <xref:System.Web.UI.WebControls.Table> control, que se hereda de la <xref:System.Web.UI.WebControls.WebControl> clase base.  
  
 [!code-aspx-csharp[Classic WebControl.BorderColor Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.BorderColor Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.BorderColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.BorderColor Example/VB/sourcevb.aspx#1)]  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#1)]  
[!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#3)]
[!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.Panel" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <altmember cref="T:System.Web.UI.WebControls.Calendar" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationSummary" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxList" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::BorderStyle BorderStyle { System::Web::UI::WebControls::BorderStyle get(); void set(System::Web::UI::WebControls::BorderStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el estilo del borde del control de servidor web.</summary>
        <value>Uno de los valores de enumeración de <see cref="T:System.Web.UI.WebControls.BorderStyle" />. El valor predeterminado es <see langword="NotSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A> propiedad para especificar el estilo de borde para el control de servidor Web. Esta propiedad se establece mediante uno de los <xref:System.Web.UI.WebControls.BorderStyle> valores de enumeración. En la tabla siguiente se enumera los valores posibles.  
  
|Estilo de borde|Descripción|  
|------------------|-----------------|  
|`NotSet`|No se establece el estilo de borde.|  
|`None`|Ningún borde|  
|`Dotted`|Borde de línea punteada.|  
|`Dashed`|Borde de línea discontinua.|  
|`Solid`|Borde de línea sólida.|  
|`Double`|Un borde de línea sólida doble.|  
|`Groove`|Borde estriado para un aspecto de bajo relieve.|  
|`Ridge`|Borde con resalto para un aspecto de borde elevado.|  
|`Inset`|Borde con efecto de insertado para un aspecto de control de bajo relieve.|  
|`Outset`|Borde de alto relieve para una apariencia de control elevado.|  
  
> [!NOTE]
>  Esta propiedad no se representará en exploradores anteriores a Microsoft Internet Explorer 4 en ningún control de servidor Web. No hay ningún equivalente para él en HTML 3.2.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo establecer el <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A> propiedad de la <xref:System.Web.UI.WebControls.Table> control, que se hereda de la <xref:System.Web.UI.WebControls.WebControl> clase base.  
  
 [!code-aspx-csharp[Classic WebControl.BorderStyle Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.BorderStyle Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.BorderStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.BorderStyle Example/VB/sourcevb.aspx#1)]  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#1)]  
[!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#3)]
[!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.BorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.Unit BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.BorderWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BorderWidth As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit BorderWidth { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el ancho del borde del control de servidor web.</summary>
        <value>Objeto <see cref="T:System.Web.UI.WebControls.Unit" /> que representa el ancho del borde de un control de servidor web. El valor predeterminado es <see cref="F:System.Web.UI.WebControls.Unit.Empty" />, que indica que no se ha establecido esta propiedad.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A> propiedad para especificar un ancho de borde para un control.  
  
> [!NOTE]
>  Esta propiedad no funciona con todos los controles de servidor Web. Se aplica sólo a los controles que se muestran como una tabla, como <xref:System.Web.UI.WebControls.Table> y <xref:System.Web.UI.WebControls.DataGrid>.  
  
 Esta propiedad se establece con un <xref:System.Web.UI.WebControls.Unit> objeto. Si el <xref:System.Web.UI.WebControls.Unit.Value%2A> propiedad de la <xref:System.Web.UI.WebControls.Unit> contiene un número negativo, se produce una excepción.  
  
> [!NOTE]
>  El ancho del borde se puede expresar en píxeles para los exploradores anteriores a Microsoft Internet Explorer versión 5. Todos los tipos de unidad se admiten en Microsoft Internet Explorer 5 y versiones posteriores. Hacer referencia al control específico para obtener más información.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo establecer el <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A> propiedad de la <xref:System.Web.UI.WebControls.Table> control, que se hereda de la <xref:System.Web.UI.WebControls.WebControl> clase base.  
  
 [!code-aspx-csharp[Classic WebControl.BorderWidth Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.BorderWidth Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.BorderWidth Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.BorderWidth Example/VB/sourcevb.aspx#1)]  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#1)]  
[!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#3)]
[!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El ancho de borde especificado es un valor negativo.</exception>
        <altmember cref="T:System.Web.UI.WebControls.Unit" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="ControlStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style ControlStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style ControlStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.ControlStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ ControlStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el estilo del control de servidor web. Esta propiedad la usan principalmente los programadores de controles.</summary>
        <value>Objeto <see cref="T:System.Web.UI.WebControls.Style" /> que encapsula las propiedades de aspecto del control de servidor web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> propiedad encapsula todas las propiedades de la <xref:System.Web.UI.WebControls.WebControl> clase que especifica la apariencia del control, como <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> y <xref:System.Web.UI.WebControls.WebControl.Font%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ControlStyleCreated" />
      </Docs>
    </Member>
    <Member MemberName="ControlStyleCreated">
      <MemberSignature Language="C#" Value="public bool ControlStyleCreated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ControlStyleCreated" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.ControlStyleCreated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlStyleCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ControlStyleCreated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si se ha creado un objeto <see cref="T:System.Web.UI.WebControls.Style" /> para la propiedad <see cref="P:System.Web.UI.WebControls.WebControl.ControlStyle" />. Esta propiedad la usan principalmente los programadores de controles.</summary>
        <value>
          Es <see langword="true" /> si se ha creado un objeto <see cref="T:System.Web.UI.WebControls.Style" /> para la propiedad <see cref="P:System.Web.UI.WebControls.WebControl.ControlStyle" />; en caso contrario, es <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ControlStyle" />
      </Docs>
    </Member>
    <Member MemberName="CopyBaseAttributes">
      <MemberSignature Language="C#" Value="public void CopyBaseAttributes (System.Web.UI.WebControls.WebControl controlSrc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyBaseAttributes(class System.Web.UI.WebControls.WebControl controlSrc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyBaseAttributes (controlSrc As WebControl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyBaseAttributes(System::Web::UI::WebControls::WebControl ^ controlSrc);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlSrc" Type="System.Web.UI.WebControls.WebControl" />
      </Parameters>
      <Docs>
        <param name="controlSrc">
          <see cref="T:System.Web.UI.WebControls.WebControl" /> que representa el control de origen de datos con las propiedades que se van a copiar al control de servidor web desde el que se llama a este método.</param>
        <summary>Copia las propiedades no encapsuladas por el objeto <see cref="P:System.Web.UI.WebControls.WebControl.Style" /> del control de servidor web especificado al control de servidor web desde el que se efectúa la llamada al método. Este método lo usan principalmente los desarrolladores de controles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebControl.CopyBaseAttributes%2A> método copia las <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A>, <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>, <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>, <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>, y <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> propiedades de control de servidor Web especificado en el control de servidor Web que se llama a este método. Esto se utiliza normalmente en casos donde un control de servidor Web funciona mediante la creación dinámica de nuevos controles en representación y uso de los controles. Este método es útil en esta situación, ya que copia todas las propiedades de controles de servidor Web que no están encapsuladas por los <xref:System.Web.UI.WebControls.Style> de objeto para que se puedan colocar en el control más externo de una etiqueta que se va a representar.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="controlSrc" /> es <see langword="null" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Style" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea el objeto de estilo que utiliza la clase <see cref="T:System.Web.UI.WebControls.WebControl" /> de forma interna para implementar todas las propiedades relacionadas con el estilo. Este método lo usan principalmente los desarrolladores de controles.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.Style" /> que se usa para implementar todas las propiedades del control relacionadas con el estilo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebControl.CreateControlStyle%2A> método se utiliza para crear el estilo de propiedades relacionadas con el objeto que se usa internamente para implementar todos los estilos. Las clases derivadas pueden reemplazar este método para crear un estilo que se ajuste a la clase. Este método lo usan principalmente los programadores de controles.  
  
 **Tenga en cuenta** los programadores de controles deben devolver un <xref:System.Web.UI.WebControls.Style> que deriva de la <xref:System.Web.UI.WebControls.Style> que devuelve el control base. No se puede suponer que la <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> es de un tipo de estilo determinado, ya que un control derivado puede devolver un tipo diferente.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ControlStyle" />
      </Docs>
    </Member>
    <Member MemberName="CssClass">
      <MemberSignature Language="C#" Value="public virtual string CssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CssClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.CssClass" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CssClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CssClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.CssClassProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la clase hoja de estilos en cascada (CSS) presentada por el control de servidor web en el cliente.</summary>
        <value>Clase CSS presentada por el control de servidor web en el cliente. El valor predeterminado es <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> propiedad para especificar la clase CSS que se representará en el cliente para el control de servidor Web. Esta propiedad se representará en exploradores para todos los controles. Siempre se representará como el atributo de clase, independientemente del explorador.  
  
> [!IMPORTANT]
>  Este ejemplo tiene un cuadro de texto que acepta datos proporcionados por el usuario, lo que puede suponer una amenaza para la seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 Por ejemplo, suponga que tiene la siguiente declaración de control de servidor Web:  
  
```  
<asp:TextBox id="TextBox1" ForeColor="Red" CssClass="class1" />  
```  
  
 El código HTML siguiente se representa en el cliente para la declaración anterior del control de servidor Web:  
  
```  
<input type=text class="class1" style="ForeColor:red">  
```  
  
 Si utiliza hojas de estilos en cascada (CSS) para personalizar la apariencia de un control, utilice estilos en línea o un archivo CSS independiente, pero no ambos. Uso de estilos en línea y un archivo CSS independiente podría producir resultados inesperados.  
  
> [!NOTE]
>  En los exploradores que no admiten CSS, establecer el <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> propiedad no tiene ningún efecto.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> propiedad para cambiar el estilo de un <xref:System.Web.UI.WebControls.HyperLink> control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic WebControl.CssClass Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.CssClass Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.CssClass Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.CssClass Example/VB/sourcevb.aspx#1)]
 [!code-xml[Classic WebControl.CssClass Example#1](~/samples/snippets/common/VS_Snippets_WebNet/Classic WebControl.CssClass Example/Common/source.xml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisabledCssClass">
      <MemberSignature Language="C#" Value="public static string DisabledCssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DisabledCssClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.DisabledCssClass" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DisabledCssClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ DisabledCssClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la clase CSS que se va a aplicar al elemento HTML presentado cuando el control esté deshabilitado.</summary>
        <value>Clase CSS que debe aplicarse al elemento HTML presentado cuando el control está deshabilitado. El valor predeterminado es "aspNetDisabled".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad puede utilizarse para cambiar el nombre que se presenta para la <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> propiedades de controles Web individuales. De forma predeterminada, esta propiedad devuelve "aspNetDisabled".  
  
 Cuando <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> se reemplaza en una clase derivada para devolver `false`, el valor de la <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> propiedad se representa como el valor de la `class` atributo del elemento HTML para el control. En ese caso, si hay un valor en el <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> propiedad, ambas clases CSS se aplicarán al elemento HTML representado. El `class` atributo estará formado por el valor de la <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> propiedad seguido por el valor de la <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> propiedad, separado por un espacio.  
  
 Esta propiedad es estática, lo que significa que puede establecer solo durante la <xref:System.Web.UI.WebControls.WebControl> clase. Cualquier valor que establezca para se usa para todos los controles en una aplicación Web. No puede especificar valores diferentes para controles individuales.  
  
 Si desea utilizar un nombre de clase diferente del valor predeterminado de "aspNetDisabled", normalmente se coloca el código para realizar este paso en el `Application_Start` método del archivo Global.asax, tal como se muestra en el ejemplo siguiente:  
  
```vb  
Private Sub Application_Start(  
    ByVal sender As Object, ByVal e As EventArgs)  
    WebControl.DisabledCssClass = "customDisabledClassName"  
End Sub  
```  
  
```csharp  
void Application_Start(object sender, EventArgs e)  
{  
    WebControl.DisabledCssClass = "customDisabledClassName";  
}  
```  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra los elementos HTML para un deshabilitado <xref:System.Web.UI.WebControls.Label> controlar cuándo el <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> propiedad es `false`, cuando la <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> propiedad tiene su valor predeterminado y cuándo el <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> propiedad está vacía.  
  
 `<span id="Label1" class="aspNetDisabled">Test</span>`  
  
 Excepto en el ejemplo siguiente muestra representado HTML en las mismas condiciones que la <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> propiedad tiene el valor "SampleStyle"`:`  
  
 `<span id="Label1" class="aspNetDisabled SampleStyle">Test</span>`  
  
 Para obtener más información, vea la propiedad <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public virtual bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el control de servidor web está habilitado.</summary>
        <value>
          Es <see langword="true" /> si el control está habilitado; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando el <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> propiedad de un control se establece en `false`, el control normalmente aparece atenuado. Si el control es un elemento de entrada, el explorador evita que el usuario hace clic en o escribir en él. Elementos HTML que se presentan para un control de servidor están marcados como deshabilitados estableciendo su `disabled` atributo o su CSS `class` atributo. Para obtener más información, consulte <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> y <xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A>.  
  
 Esta propiedad se propaga hacia abajo en la jerarquía de control. Si deshabilita un control contenedor, también se deshabilitan los controles secundarios dentro de ese contenedor. Para obtener más información, vea la propiedad <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A>.  
  
> [!NOTE]
>  En un control compuesto personalizado, este comportamiento de herencia no se aplica a los controles que todavía no han creado a sus secundarios controles. Deben establecer el estado habilitado del elemento secundario controles cuando se crean, o reemplazar el <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> propiedad que se va a llamar a la <xref:System.Web.UI.Control.EnsureChildControls%2A> método.  
  
> [!NOTE]
>  Al deshabilitar un control, solo impide la interacción con el control por el usuario a través de la interfaz de usuario del explorador. Es posible que un usuario elaborar una solicitud que envía un postback que es procesado por la página incluso si se deshabilitan los controles de la página. Antes de procesar una solicitud de devolución de datos, compruebe para asegurarse de que el control está habilitado y visible.  
  
 No todos los controles admiten esta propiedad. Vea los controles individuales para obtener más información.  
  
 Esta propiedad no se puede establecer mediante temas o temas de la hoja de estilos. Para obtener más información, consulte <xref:System.Web.UI.ThemeableAttribute> y [ASP.NET temas y máscaras](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo habilitar y deshabilitar una <xref:System.Web.UI.WebControls.TextBox> control, que se hereda de la <xref:System.Web.UI.WebControls.WebControl> de la clase base estableciendo su <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> propiedad mediante programación.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
> [!IMPORTANT]
>  Este ejemplo tiene un cuadro de texto que acepta datos proporcionados por el usuario, lo que puede suponer una amenaza para la seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic WebControl.Enabled Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Enabled Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Enabled Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Enabled Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.EnsureChildControls" />
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si los temas se aplican a este control.</summary>
        <value>
          <see langword="true" /> para usar temas; en caso contrario, <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> propiedad indica si los temas están habilitados para un control especificado. Cuando el <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> propiedad es `true`, el directorio de temas para la aplicación se busca máscaras para los controles. Si no existe ninguna máscara para un control determinado en el directorio de temas, no se aplican máscaras.  
  
 Cuando el <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> propiedad es `false`, no se busca en el directorio de temas y el contenido de la <xref:System.Web.UI.WebControls.WebControl.SkinID%2A> no se utiliza la propiedad.  
  
 Un control puede invalidar la <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> valor establecido por su control principal o la página que lo contiene. Por ejemplo, si tiene un control principal la <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> propiedad establecida en `false`, se pueden aplicar temas selectivamente a los controles secundarios que se encuentran dentro del elemento primario estableciendo la <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> propiedad `true` en los controles secundarios individuales.  
  
 Temas pueden habilitarse en la página, el contenedor o el nivel de control. Cuando temas está deshabilitada en el nivel de página o contenedor, los temas se deshabilitan para todos los controles que se encuentran en la página o el contenedor.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SkinID" />
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FontInfo Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FontInfo Font" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Font" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Font As FontInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FontInfo ^ Font { System::Web::UI::WebControls::FontInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FontInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene las propiedades de fuente asociadas al control de servidor web.</summary>
        <value>Objeto <see cref="T:System.Web.UI.WebControls.FontInfo" /> que representa las propiedades de fuente del control de servidor web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.WebControl.Font%2A> propiedad para especificar las propiedades de fuente del control de servidor Web. Esta propiedad incluye subpropiedades a las que pueden obtenerse mediante declaración en el formulario de `Property-Subproperty` (por ejemplo `Font-Bold`) o mediante programación en el formulario de `Property.Subproperty` (por ejemplo `Font.Bold`).  
  
 Todo menos una subpropiedad se representará en exploradores anteriores a la versión 4 para todos los controles de Microsoft Internet Explorer. Únicamente son: <xref:System.Web.UI.WebControls.FontInfo.Bold%2A>, <xref:System.Web.UI.WebControls.FontInfo.Italic%2A>, <xref:System.Web.UI.WebControls.FontInfo.Name%2A>, <xref:System.Web.UI.WebControls.FontInfo.Names%2A>, <xref:System.Web.UI.WebControls.FontInfo.Strikeout%2A>, <xref:System.Web.UI.WebControls.FontInfo.Underline%2A>, y <xref:System.Web.UI.WebControls.FontInfo.Size%2A> (pero solo denominado tamaños de fuente, como `Small`, `Smaller`, y así sucesivamente, funcionará).  
  
> [!NOTE]
>  Aunque estas subpropiedades pueden representarse en exploradores anteriores a la versión 4 de Microsoft Internet Explorer, el código HTML que se presenta es diferente de los exploradores posteriores. En lugar de procesarse como atributos de estilo, estas subpropiedades se representan como elementos HTML, como `<b>` y `<font>`.  
  
 La única subpropiedad que no se puede representar en exploradores anteriores para todos los controles es <xref:System.Web.UI.WebControls.FontInfo.Overline%2A>.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.WebControl.Font%2A> propiedad que se va a recopilar información de fuentes de un <xref:System.Web.UI.WebControls.Label> control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic WebControl.Font Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Font Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Font Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Font Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.FontInfo" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.WebColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el color de primer plano (normalmente el color del texto) del control de servidor web.</summary>
        <value>
          <see cref="T:System.Drawing.Color" /> que representa el color de primer plano del control. El valor predeterminado es <see cref="F:System.Drawing.Color.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> propiedad para especificar el color de primer plano del control de servidor Web. El color de primer plano suele ser el color del texto. Esta propiedad se representará en exploradores anteriores a Microsoft Internet Explorer versión 4 para todos los controles, excepto el <xref:System.Web.UI.WebControls.Image>, <xref:System.Web.UI.WebControls.AdRotator>, <xref:System.Web.UI.WebControls.HyperLink> y <xref:System.Web.UI.WebControls.LinkButton>.  
  
> [!NOTE]
>  En exploradores anteriores a Microsoft Internet Explorer versión 4, esta propiedad se representa como `<font>` etiquetas.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo establecer el <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> propiedad de la <xref:System.Web.UI.WebControls.Table> control, que se hereda de la <xref:System.Web.UI.WebControls.WebControl> clase base.  
  
 [!code-aspx-csharp[Classic WebControl.ForeColor Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.ForeColor Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.ForeColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.ForeColor Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="HasAttributes">
      <MemberSignature Language="C#" Value="public bool HasAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.HasAttributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAttributes { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el control tiene establecido algún atributo.</summary>
        <value>
          Es <see langword="true" /> si el control tiene establecido algún atributo; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebControl.HasAttributes%2A> propiedad devuelve `true` cuando el <xref:System.Web.UI.WebControls.WebControl> instancia tiene pares de nombre/valor de atributo. Los pares de atributo se pueden establecer en la propiedad o en el estado de vista.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.Unit Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Height" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Height As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Height { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el alto del control de servidor Web.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Unit" /> que representa el alto del control. El valor predeterminado es <see cref="F:System.Web.UI.WebControls.Unit.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.WebControl.Height%2A> propiedad para especificar el alto del control de servidor Web.  
  
> [!NOTE]
>  Esta propiedad no se representará para todos los controles en los exploradores anteriores a Microsoft Internet Explorer versión 4. Los controles que no se representan esta propiedad en los exploradores anteriores incluyen <xref:System.Web.UI.WebControls.Label>, <xref:System.Web.UI.WebControls.HyperLink>, <xref:System.Web.UI.WebControls.LinkButton>y los controles de validación. El <xref:System.Web.UI.WebControls.CheckBoxList>, <xref:System.Web.UI.WebControls.RadioButtonList> y <xref:System.Web.UI.WebControls.DataList> también no se representan esta propiedad en los exploradores más antiguos cuando sus `RepeatLayout` propiedad está establecida en `RepeatLayout.Flow`. Además, solo los tipos de unidad `Pixel` y `Percentage` son compatibles con los exploradores más antiguos.  
  
 Dado que esta propiedad es HTML no estándar, controles de servidor Web que se muestran como una tabla, como <xref:System.Web.UI.WebControls.Table> y <xref:System.Web.UI.WebControls.DataGrid>, no admiten esta propiedad en exploradores anteriores a Microsoft Internet Explorer versión 4.  
  
> [!NOTE]
>  Para establecer el <xref:System.Web.UI.WebControls.WebControl.Height%2A> propiedad a una unidad de tipo que no sea el valor predeterminado de `Pixel`, debe crear un nuevo tipo de unidad específico para el tipo de unidad que desee. Por ejemplo, para establecer un control <xref:System.Web.UI.WebControls.WebControl.Height%2A> propiedad en un valor de porcentaje de 100, se puede hacer lo siguiente:  
>   
>  `myWebControl.Width = Unit.Percentage(100);`  
>   
>  Para obtener más información sobre los tipos de unidad disponibles para la <xref:System.Web.UI.WebControls.WebControl.Height%2A> propiedad, vea la <xref:System.Web.UI.WebControls.Unit> clase.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo establecer mediante declaración el <xref:System.Web.UI.WebControls.WebControl.Height%2A> propiedad de la <xref:System.Web.UI.WebControls.Table> control, que se hereda de la <xref:System.Web.UI.WebControls.WebControl> clase base.  
  
 [!code-aspx-csharp[Classic WebControl.Height Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Height Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Height Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Height Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El alto se ha establecido en un valor negativo.</exception>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.Unit" />
        <altmember cref="T:System.Web.UI.WebControls.Label" />
        <altmember cref="T:System.Web.UI.WebControls.HyperLink" />
        <altmember cref="T:System.Web.UI.WebControls.LinkButton" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxList" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="protected internal bool IsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property bool IsEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si está habilitado el control.</summary>
        <value>
          Es <see langword="true" /> si el objeto <see cref="T:System.Web.UI.WebControls.WebControl" /> está habilitado; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad es de solo lectura. Si desea deshabilitar un control, establezca su <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> propiedad `false`.  
  
 Si un control no está contenido en otro control, el valor de la <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> propiedad siempre es el mismo que el valor de la <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> propiedad.  
  
 El <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> propiedad tiene un valor que sea diferente de la <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> propiedad si un control es un elemento secundario de otro control y si se cumplen todas las condiciones siguientes:  
  
-   El valor de la <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> propiedad o el <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> propiedad del control primario es `false`.  
  
-   El <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> propiedad del control secundario se establece en `true`.  
  
 En esta situación, el control secundario hereda el estado deshabilitado del control primario. El <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> propiedad del control secundario devuelve `false` para indicar que el control está deshabilitado, aunque el control secundario no se deshabilitó explícitamente estableciendo su <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> propiedad `false`. El propio control primario podría tener su <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> propiedad establecida en `true` pero podría heredar el estado deshabilitado de su elemento primario y así sucesivamente.  
  
 Cuando ASP.NET presenta elementos HTML para un control de servidor, marca los elementos como deshabilitados estableciendo su `disabled` atributo o su CSS `class` atributo. Para obtener más información, consulte <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> y <xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Objeto que representa el estado del control que se va a restaurar.</param>
        <summary>Restaura la información de estado de vista de una solicitud anterior guardada con el método <see cref="M:System.Web.UI.WebControls.WebControl.SaveViewState" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se utiliza principalmente por la infraestructura de .NET Framework y no está diseñada para utilizarse directamente desde el código. Sin embargo, los programadores de controles pueden reemplazar este método para especificar la forma en que un control de servidor personalizado restaura su estado de vista. Para obtener más información, consulte [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 El <xref:System.Web.UI.WebControls.WebControl.LoadViewState%2A> método restaura la información de estado de vista que se guardó durante anterior <xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A> solicitud. El <xref:System.Web.UI.WebControls.WebControl> clase invalida la base de <xref:System.Web.UI.Control.LoadViewState%2A> método para controlar la <xref:System.Web.UI.Control.ViewState%2A>, <xref:System.Web.UI.WebControls.WebControl.Style%2A>, y <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> propiedades.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="P:System.Web.UI.Control.IsTrackingViewState" />
      </Docs>
    </Member>
    <Member MemberName="MergeStyle">
      <MemberSignature Language="C#" Value="public void MergeStyle (System.Web.UI.WebControls.Style s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MergeStyle(class System.Web.UI.WebControls.Style s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MergeStyle (s As Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MergeStyle(System::Web::UI::WebControls::Style ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="s">
          <see cref="T:System.Web.UI.WebControls.Style" /> que representa el estilo que se va a copiar.</param>
        <summary>Copia en el control Web todos los elementos no vacíos del estilo especificado, pero no sobrescribe los elementos de estilo existentes en el mismo. Este método lo usan principalmente los desarrolladores de controles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.WebControl.MergeStyle%2A> método para combinar un estilo con el estilo de un <xref:System.Web.UI.WebControls.DataGrid> control.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[WebControlMergeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebControlMergeStyle/CS/webcontrolmergestylecs.aspx#1)]
 [!code-aspx-vb[WebControlMergeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebControlMergeStyle/VB/webcontrolmergestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> que recibe el contenido de control.</param>
        <summary>Representa el control en el sistema de escritura HTML especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebControl.Render%2A> método la usan principalmente los programadores de controles.  
  
 El <xref:System.Web.UI.WebControls.WebControl.Render%2A> método envía el control Web al especificado <xref:System.Web.UI.HtmlTextWriter> instancia. Invalide este método para devolver el control de servidor personalizado al cliente.  
  
 El <xref:System.Web.UI.WebControls.WebControl.Render%2A> método primero llama el <xref:System.Web.UI.WebControls.WebControl.RenderBeginTag%2A> método, la <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> método y, finalmente, el <xref:System.Web.UI.WebControls.WebControl.RenderEndTag%2A> método para devolver el control al cliente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> que representa el flujo de salida para representar contenido HTML en el cliente.</param>
        <summary>Representa la etiqueta HTML de apertura del control en el sistema de escritura especificado. Este método lo usan principalmente los desarrolladores de controles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esto se hace público para que otros controles pueden representar varios controles entre las etiquetas apertura y cierre de un control de servidor Web.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal virtual void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> que representa el flujo de salida para representar contenido HTML en el cliente.</param>
        <summary>Representa el contenido del control en el sistema de escritura especificado. Este método lo usan principalmente los desarrolladores de controles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Invalidar el <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> método para presentar el contenido del control entre las etiquetas begin y end. La implementación predeterminada de este método representa los controles secundarios.  
  
 Si el control tiene controles secundarios, debe llamar a la base de <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> método o una llamada la <xref:System.Web.UI.Control.RenderChildren%2A> en el punto donde desea que los controles secundarios que se representará en el escritor de texto.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public virtual void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> que representa el flujo de salida para representar contenido HTML en el cliente.</param>
        <summary>Presenta la etiqueta HTML de cierre del control en el escritor especificado. Este método lo usan principalmente los desarrolladores de controles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esto se hace público para que otros controles pueden representar varios controles entre las etiquetas apertura y cierre de un control de servidor Web.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Guarda cualquier estado modificado después de invocar el método <see cref="M:System.Web.UI.WebControls.Style.TrackViewState" />.</summary>
        <returns>Un objeto que contiene el estado de vista actual del control; en caso contrario, si no hay ningún estado de vista asociado al control, es <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A> método la usan principalmente los programadores de controles.  
  
 Estado de vista es que los valores acumulados de las propiedades de un control de servidor. Estos valores se colocan automáticamente en el <xref:System.Web.UI.Control.ViewState%2A> propiedad del control de servidor, que es una instancia de la <xref:System.Web.UI.StateBag> clase. El <xref:System.Web.UI.Control.ViewState%2A> , a continuación, se conserva el valor de propiedad a un objeto de cadena después de la operación de guardar estado fase del ciclo de vida del control de servidor. Para obtener más información, consulte [información general sobre el ciclo de vida de página ASP.NET](http://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991).  
  
 Cuando se guarda el estado de vista, este objeto de cadena se devuelve al cliente como una variable que se almacena en una HTML oculta `input` elemento. Al crear controles de servidor personalizados, se puede mejorar la eficacia invalidando el <xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A> método y modificar el <xref:System.Web.UI.Control.ViewState%2A> propiedad para el control de servidor. Para obtener más información, consulte [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="P:System.Web.UI.Control.IsTrackingViewState" />
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la máscara que se aplica al control.</summary>
        <value>Nombre de la máscara para aplicar al control. El valor predeterminado es <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las máscaras disponibles para un control se encuentran en uno o varios archivos de máscaras de un directorio de temas. El <xref:System.Web.UI.WebControls.WebControl.SkinID%2A> propiedad especifica cuál de estas máscaras se aplica al control. Una máscara es específica de un control determinado; no se puede compartir entre los controles de diferentes tipos de configuración de la máscara.  
  
 Si no establece la <xref:System.Web.UI.WebControls.WebControl.SkinID%2A> propiedad, un control usa la máscara predeterminada si se ha definido uno. Por ejemplo, si una máscara sin un identificador se define para un <xref:System.Web.UI.WebControls.Image> controlar esa máscara se aplica a todos los <xref:System.Web.UI.WebControls.Image> controles que no hagan referencia explícitamente una máscara con el identificador y que no estén establecidos para deshabilitar la creación de temas. Si se define una máscara con un identificador para un <xref:System.Web.UI.WebControls.Image> controlar esa máscara solo se aplica al <xref:System.Web.UI.WebControls.Image> controla cuyo <xref:System.Web.UI.WebControls.WebControl.SkinID%2A> se establece en ese identificador.  
  
 Si los archivos de la máscara en un directorio de temas no contienen una máscara con los valores especificados <xref:System.Web.UI.WebControls.WebControl.SkinID%2A>, un <xref:System.ArgumentException> se produce una excepción en tiempo de ejecución.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La máscara especificada en la propiedad <see cref="P:System.Web.UI.WebControls.WebControl.SkinID" /> no existe en el tema.</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.EnableTheming" />
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public System.Web.UI.CssStyleCollection Style { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.CssStyleCollection Style" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Style" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Style As CssStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::CssStyleCollection ^ Style { System::Web::UI::CssStyleCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.CssStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una colección de atributos de texto que se representan como atributo de estilo en la etiqueta externa del control de servidor web.</summary>
        <value>
          <see cref="T:System.Web.UI.CssStyleCollection" /> que contiene los atributos de estilo HTML para representar la etiqueta externa del control de servidor web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.WebControl.Style%2A> colección para administrar los atributos de estilo representados en la etiqueta externa del control de servidor Web. Esta propiedad se representará en todos los exploradores para todos los controles.  
  
> [!NOTE]
>  Los exploradores que no admiten atributos de estilo omitirán el HTML representado.  
  
 Los valores de estilo se establecen a través de las propiedades de estilo fuertemente tipado (por ejemplo, `BackColor="Red"`) reemplazarán automáticamente un valor correspondiente en esta colección.  
  
 Valores establecidos en esta colección no se reflejan automáticamente en las propiedades de estilo fuertemente tipado.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.WebControl.Style%2A> propiedad para ocultar o mostrar un <xref:System.Web.UI.WebControls.Label> control en una página.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic WebControl.Style Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Style Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Style Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CssStyleCollection" />
      </Docs>
    </Member>
    <Member MemberName="SupportsDisabledAttribute">
      <MemberSignature Language="C#" Value="public virtual bool SupportsDisabledAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDisabledAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsDisabledAttribute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDisabledAttribute { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el control debe establecer en "disabled" el atributo <see langword="disabled" /> del elemento HTML representado cuando el valor de la propiedad <see cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" /> del control es <see langword="false" />.</summary>
        <value>Siempre es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En las clases derivadas, esta propiedad indica cómo ASP.NET debe presentar HTML para un control cuando el control está deshabilitado.  
  
## <a name="disabling-aspnet-web-controls"></a>Deshabilitar controles Web ASP.NET  
 Cuando el <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> propiedad de un control ASP.NET está establecida en `false` (es decir, cuando el control está deshabilitado), la intención es que ASP.NET debe presentar el control en la página, pero mostrar en un estado deshabilitado (normalmente aparece atenuado). Si un control principal está deshabilitado, los elementos secundarios de ese control también se muestran como deshabilitados. En del ese caso, el control secundario <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> propiedad está establecida en `false`, aunque su <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> propiedad puede establecerse en `true`.  
  
 En ASP.NET 3.5 y versiones anteriores, cuando un control <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> propiedad es `false`, ASP.NET establece el `disabled` en "disabled" el atributo en el elemento HTML que se representa para el control. Sin embargo, el estándar HTML 4.01 permite la `disabled` atributo sólo en algunos elementos que se usa para la entrada de usuario. Por ejemplo, el `disabled` atributo se permite para `input` elementos, pero no para `span` elementos.  
  
 La mayoría de los exploradores admite un aspecto deshabilitado predeterminado para mostrar solo elementos que tienen `disabled` atributos. Sin embargo, con el fin de cumplir con los estándares HTML, de forma predeterminada ASP.NET 4 omite los atributos no válidos.  
  
## <a name="how-the-supportsdisabledattribute-property-is-used"></a>¿Cómo se usa la propiedad SupportsDisabledAttribute  
 Si el <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> propiedad es `true`, ASP.NET presenta un `disabled` atributo cuando el control está deshabilitado. Si esta propiedad es `false`, ASP.NET presenta un `class` atributo cuando el control está deshabilitado.  
  
 Las clases derivadas invalidan esta propiedad para devolver `false` si se cumplen todas las condiciones siguientes:  
  
-   El control representa un elemento HTML que no admite la `disabled` atributo.  
  
-   El <xref:System.Web.UI.Control.RenderingCompatibility%2A> propiedad indica un número de versión ASP.NET anterior a 4.0.  
  
 El <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> propiedad no indica necesariamente si el elemento HTML que se representa para un control admite (permite) el `disabled` atributo. Si un control <xref:System.Web.UI.Control.RenderingCompatibility%2A> propiedad indica un número de versión ASP.NET anterior a la 4.0, el valor del control <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> propiedad podría devolver `true` incluso si el HTML representado no admite la `disabled` atributo.  
  
## <a name="backward-compatibility-for-disabled-controls"></a>Compatibilidad con versiones anteriores para los controles deshabilitados  
 Cuando se utiliza Visual Studio para actualizar un proyecto Web a ASP.NET 4 desde una versión anterior, Visual Studio establece automáticamente el `controlRenderingCompatibilityVersion` atributo en el archivo Web.config (que establece el <xref:System.Web.UI.Control.RenderingCompatibility%2A> propiedad) para el número de versión anterior. Dado que la <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> propiedad siempre devuelve `true` cuando el <xref:System.Web.UI.Control.RenderingCompatibility%2A> propiedad es menor que 4.0, esto hace que los controles Web presentar HTML para controles deshabilitados como lo hacían en la versión anterior. Si desea que un sitio Web actualizado para representar HTML mediante el algoritmo introducido en ASP.NET 4, puede cambiar o quitar el `controlRenderingCompatibilityVersion` atributo. Para obtener más información, vea la propiedad <xref:System.Web.UI.Control.RenderingCompatibility%2A>.  
  
## <a name="setting-a-disabled-appearance-by-using-css"></a>Establecer un aspecto deshabilitado mediante el uso de CSS  
 Si el <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> es propiedad de un control `false` y el control está deshabilitado, ASP.NET establece el `class` atributo del elemento HTML representado en el valor de la <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=nameWithType> propiedad. El valor predeterminado de la <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=nameWithType> propiedad es "aspNetDisabled".  
  
 Para proporcionar un aspecto deshabilitado para los controles deshabilitados, debe definir una regla CSS de la clase que representa el valor de la <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=nameWithType> propiedad.  
  
 El elemento HTML que se representa para un control podría tener más de un valor su `class` atributo si hay un valor en su <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> propiedad. Para obtener más información, vea la propiedad <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A>.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra el marcado para un deshabilitado <xref:System.Web.UI.WebControls.Label> control:  
  
 `<asp:Label id="Label1" runat="server" Text="Test" Enabled="false"/>`  
  
 En ASP.NET 3.5 y versiones anteriores, este marcado representa el siguiente HTML:  
  
 `<span id="Label1" disabled="disabled">Test</span>`  
  
 En ASP.NET 4, si el valor de la <xref:System.Web.UI.Control.RenderingCompatibility%2A> propiedad es 4.0 o posterior y si el <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> propiedad está establecida en su valor predeterminado, el mismo marcado representa el código HTML siguiente:  
  
 `<span id="Label1" class="aspNetDisabled">Test</span>`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.DisabledCssClass" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.GetAttribute">
      <MemberSignature Language="C#" Value="string IAttributeAccessor.GetAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.IAttributeAccessor.GetAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAttribute (name As String) As String Implements IAttributeAccessor.GetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.IAttributeAccessor.GetAttribute(System::String ^ name) = System::Web::UI::IAttributeAccessor::GetAttribute;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IAttributeAccessor.GetAttribute(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">El nombre del atributo.</param>
        <summary>Obtiene un atributo del control Web con el nombre especificado.</summary>
        <returns>El valor del atributo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebControl.System%23Web%23UI%23IAttributeAccessor%23GetAttribute%2A> método es una implementación de miembro de interfaz explícita. Se puede utilizar solo cuando la instancia de la <xref:System.Web.UI.WebControls.WebControl> clase se convierte en un <xref:System.Web.UI.IAttributeAccessor> interfaz.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.SetAttribute">
      <MemberSignature Language="C#" Value="void IAttributeAccessor.SetAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IAttributeAccessor.SetAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetAttribute (name As String, value As String) Implements IAttributeAccessor.SetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IAttributeAccessor.SetAttribute(System::String ^ name, System::String ^ value) = System::Web::UI::IAttributeAccessor::SetAttribute;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IAttributeAccessor.SetAttribute(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Componente de nombre del par nombre-valor del atributo.</param>
        <param name="value">Componente de valor del par nombre-valor del atributo.</param>
        <summary>Establece un atributo del control Web con el nombre y el valor especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebControl.System%23Web%23UI%23IAttributeAccessor%23SetAttribute%2A> método es una implementación de miembro de interfaz explícita. Se puede utilizar solo cuando la instancia de la <xref:System.Web.UI.WebControls.WebControl> clase se convierte en un <xref:System.Web.UI.IAttributeAccessor> interfaz.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="TabIndex">
      <MemberSignature Language="C#" Value="public virtual short TabIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 TabIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.TabIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TabIndex As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property short TabIndex { short get(); void set(short value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el índice de tabulación del control de servidor web.</summary>
        <value>Índice de tabulación del control de servidor web. El valor predeterminado es <see langword="0" />, lo que indica que esta propiedad no se estableció.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> propiedad para especificar o determinar el índice de tabulación de un control de servidor Web en la página de formularios Web Forms. Cuando se presiona el `Tab` clave, el orden en que los controles de servidor Web reciben el foco viene determinado por la <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> propiedad de cada control. Cuando se carga una página por primera vez, el primer elemento que recibe centrarse cuando el `Tab` se presiona la tecla es la barra de direcciones. A continuación, los controles en la página de formularios Web Forms se tabulan en orden ascendente, según el valor de la <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> propiedad de cada control, empezando por el valor positivo más pequeño distinto de cero. Si varios controles que compartan el mismo índice de tabulación, dichos controles recibirán el foco en el orden en que se declaran en la página de formularios Web Forms. Por último, los controles que tienen un índice de tabulación de cero se tabulan en el orden en que se declaran.  
  
> [!NOTE]
>  Únicamente los controles cuyo índice de tabulación es distinto de cero representan el `tabindex` atributo.  
  
 Puede quitar un control de servidor Web del orden de tabulación estableciendo el <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> propiedad en un valor negativo.  
  
> [!NOTE]
>  Esta propiedad se admite únicamente en Internet Explorer 4 y versiones posteriores.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> propiedad de la <xref:System.Web.UI.WebControls.WebControl> para establecer el orden de tabulación de controles en la página.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
> [!IMPORTANT]
>  Este ejemplo tiene un cuadro de texto que acepta datos proporcionados por el usuario, lo que puede suponer una amenaza para la seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Classic WebControl.TabIndex Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.TabIndex Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.TabIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.TabIndex Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El índice de tabulación especificado no está entre -32768 y 32767.</exception>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor <see cref="T:System.Web.UI.HtmlTextWriterTag" /> correspondiente al control de servidor web. Esta propiedad la usan principalmente los programadores de controles.</summary>
        <value>Uno de los valores de enumeración de <see cref="T:System.Web.UI.HtmlTextWriterTag" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.WebControl.TagKey%2A> propiedad para determinar el <xref:System.Web.UI.HtmlTextWriterTag> valor que está asociado a este control de servidor Web. Esta propiedad la usan principalmente los programadores de controles.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C#" Value="protected virtual string TagName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.TagName" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property TagName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ TagName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de la etiqueta del control. Esta propiedad la usan principalmente los programadores de controles.</summary>
        <value>Nombre de la etiqueta del control.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.WebControl.TagName%2A> propiedad para determinar el nombre de la etiqueta del control asociado a este control de servidor Web. Esta propiedad la usan principalmente los programadores de controles.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public virtual string ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el texto que se muestra cuando el puntero del mouse se desplaza sobre el control de servidor web.</summary>
        <value>Texto que se muestra cuando el puntero del mouse se desplaza sobre el control de servidor web. El valor predeterminado es <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A> propiedad para especificar el texto personalizado que se muestra cuando el puntero del mouse se sitúa sobre el control de servidor Web.  
  
> [!NOTE]
>  Esta propiedad se representa para todos los exploradores. Sin embargo, sólo Microsoft Internet Explorer mostrará esta propiedad como una información sobre herramientas. Todos los otros exploradores hará caso omiso de esta propiedad.  
  
 El valor de esta propiedad, cuando se establece, pueden guardar automáticamente en un archivo de recursos utilizando una herramienta de diseñador. Para obtener más información, consulte <xref:System.ComponentModel.LocalizableAttribute> y [globalización y localización](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo establecer el <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A> propiedad en el <xref:System.Web.UI.WebControls.Button> control, que se hereda de la <xref:System.Web.UI.WebControls.WebControl> clase base.  
  
> [!NOTE]
>  El ejemplo de código siguiente utiliza el modelo de código de un solo archivo y no funcionen correctamente si se copia directamente en un archivo de código subyacente. Este ejemplo de código debe copiarse en un archivo de texto vacío con la extensión .aspx. Para obtener más información sobre el modelo de código de formularios Web Forms, vea [modelo de código de páginas de ASP.NET Web Forms](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic WebControl.ToolTip Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.ToolTip Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.ToolTip Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.ToolTip Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Hace que el control efectúe un seguimiento de los cambios de su estado de vista para que se puedan almacenar en la propiedad <see cref="P:System.Web.UI.Control.ViewState" /> del objeto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebControl.TrackViewState%2A> método la usan principalmente los programadores de controles.  
  
 El <xref:System.Web.UI.WebControls.WebControl.TrackViewState%2A> marca el punto donde debe comenzar seguimiento y guardar los cambios realizados en el estado de vista para el control. El <xref:System.Web.UI.WebControls.WebControl.TrackViewState%2A> método se llama automáticamente por ASP.NET cuando se inicializa un control de servidor.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="P:System.Web.UI.Control.IsTrackingViewState" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.Unit Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Width" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Width As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Width { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el ancho del control de servidor web.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Unit" /> que representa el ancho del control. El valor predeterminado es <see cref="F:System.Web.UI.WebControls.Unit.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.WebControl.Width%2A> propiedad para especificar el ancho del control de servidor Web.  
  
> [!NOTE]
>  Esta propiedad no se representará para todos los controles en los exploradores anteriores a Microsoft Internet Explorer versión 4. Los controles que no se representan esta propiedad en los exploradores anteriores incluyen <xref:System.Web.UI.WebControls.Label>, <xref:System.Web.UI.WebControls.HyperLink>, <xref:System.Web.UI.WebControls.LinkButton>y los controles de validación. El <xref:System.Web.UI.WebControls.CheckBoxList>, <xref:System.Web.UI.WebControls.RadioButtonList> y <xref:System.Web.UI.WebControls.DataList> también no se representan esta propiedad en los exploradores más antiguos cuando sus `RepeatLayout` propiedad está establecida en `RepeatLayout.Flow`. Además, solo los tipos de unidad `Pixel` y `Percentage` son compatibles con los exploradores más antiguos.  
  
 Dado que esta propiedad es HTML no estándar, controles de servidor Web que se muestran como una tabla, como <xref:System.Web.UI.WebControls.Table> y <xref:System.Web.UI.WebControls.DataGrid>, no admiten esta propiedad en exploradores anteriores a Microsoft Internet Explorer versión 4.  
  
> [!NOTE]
>  Para establecer el <xref:System.Web.UI.WebControls.WebControl.Width%2A> propiedad mediante declaración a una unidad de tipo que no sea el valor predeterminado de `Pixel`, debe crear un nuevo tipo de unidad específico para el tipo de unidad que desee. Por ejemplo, para establecer un control <xref:System.Web.UI.WebControls.WebControl.Width%2A> propiedad en un valor de porcentaje de 100, se puede hacer lo siguiente:  
>   
>  `myWebControl.width = Unit.Percentage(100);`  
>   
>  Para obtener más información sobre los tipos de unidad disponibles para la <xref:System.Web.UI.WebControls.WebControl.Width%2A> propiedad, vea la <xref:System.Web.UI.WebControls.Unit> clase.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo establecer mediante declaración el <xref:System.Web.UI.WebControls.WebControl.Width%2A> propiedad de la <xref:System.Web.UI.WebControls.Table> control, que se hereda de la <xref:System.Web.UI.WebControls.WebControl> clase base.  
  
 [!code-aspx-csharp[Classic WebControl.Width Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Width Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Width Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Width Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El ancho del control de servidor Web se ha establecido en un valor negativo.</exception>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
  </Members>
</Type>