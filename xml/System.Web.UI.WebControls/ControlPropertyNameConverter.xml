<Type Name="ControlPropertyNameConverter" FullName="System.Web.UI.WebControls.ControlPropertyNameConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cbcc098f658f7cadbac2c0cf6af0c0a8dffbeaa7" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53509984" /></Metadata><TypeSignature Language="C#" Value="public class ControlPropertyNameConverter : System.ComponentModel.StringConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControlPropertyNameConverter extends System.ComponentModel.StringConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ControlPropertyNameConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class ControlPropertyNameConverter&#xA;Inherits StringConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlPropertyNameConverter : System::ComponentModel::StringConverter" />
  <TypeSignature Language="F#" Value="type ControlPropertyNameConverter = class&#xA;    inherit StringConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.StringConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona un convertidor de tipos que recupera una lista de nombres de propiedad para el control actual.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ControlPropertyNameConverter> clase se deriva de la <xref:System.ComponentModel.StringConverter> clase y proporciona una lista de nombres de propiedad para su presentación en un control de cuadrícula de propiedades en entornos de tiempo de diseño.  
  
> [!CAUTION]
>  Nunca debe tener acceso a un convertidor de tipos directamente. En su lugar, llame al convertidor apropiado utilizando el <xref:System.ComponentModel.TypeDescriptor?displayProperty=nameWithType> clase. Para obtener más información, vea los ejemplos en la <xref:System.ComponentModel.TypeConverter> clase base.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
    <altmember cref="T:System.ComponentModel.TypeConverter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlPropertyNameConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ControlPropertyNameConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlPropertyNameConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.ControlPropertyNameConverter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor no está pensado para ser llamado directamente. Nunca debe tener acceso a un convertidor de tipos directamente. En su lugar, llame al convertidor apropiado utilizando el <xref:System.ComponentModel.TypeDescriptor?displayProperty=nameWithType> clase. Para obtener más información, vea los ejemplos en la <xref:System.ComponentModel.TypeConverter> clase base.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="controlPropertyNameConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato que puede usarse para extraer información adicional sobre el entorno desde el que se invoca este convertidor de tipos. Este parámetro o las propiedades de este parámetro pueden ser <see langword="null" />.</param>
        <summary>Devuelve una colección de nombres de propiedad para el control en un diseñador que implementa la interfaz <see cref="T:System.ComponentModel.Design.IDesignerHost" /> cuando se proporciona con un contexto de formato. </summary>
        <returns>Colección <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> con una serie de cadenas que representan los nombres de propiedad para el control actual. Si el control actual es <see langword="null" />, se devuelve una colección vacía. Si el parámetro <paramref name="context" /> es <see langword="null" />, se devuelve <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues%2A> método devuelve un <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> colección que contiene un conjunto de cadenas que representan los nombres de propiedades del control actual.  
  
 Use el `context` parámetro para extraer información adicional sobre el entorno de tiempo de diseño desde el que se invoca este convertidor. Este parámetro puede ser `null`, y las propiedades del objeto de contexto pueden devolver `null`. Si el `context` parámetro es `null`, este método devuelve `null`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="controlPropertyNameConverter.GetStandardValuesExclusive context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato que puede usarse para extraer información adicional sobre el entorno desde el que se invoca este convertidor de tipos. Este parámetro o las propiedades de este parámetro pueden ser <see langword="null" />.</param>
        <summary>Devuelve un valor que indica si la colección de valores estándar que devuelve el método <see cref="Overload:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues" /> es una lista excluyente de valores posibles, utilizando el contexto especificado.</summary>
        <returns><see langword="false" /> en todos los casos, lo que indica que la lista no es excluyente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesExclusive%2A> método siempre devuelve `false` para indicar que la lista de valores de propiedad devueltos por la <xref:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues%2A> método no es una lista exclusiva de valores posibles.  
  
 Utilice el parámetro `context` para extraer información adicional sobre el entorno desde el que se llama a este convertidor. Este parámetro puede ser `null`, y las propiedades del objeto de contexto pueden devolver `null`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Invalide este método si el tipo que desea convertir admite valores estándar.</para></block>
        <altmember cref="Overload:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValues" />
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="controlPropertyNameConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato que puede usarse para extraer información adicional sobre el entorno desde el que se invoca este convertidor de tipos. Este parámetro o las propiedades de este parámetro pueden ser <see langword="null" />.</param>
        <summary>Devuelve un valor que indica si este objeto admite un conjunto de valores estándar que se pueden elegir en una lista, utilizando el contexto especificado.</summary>
        <returns>Es <see langword="true" /> si el parámetro <paramref name="context" /> no es <see langword="null" />; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ControlPropertyNameConverter.GetStandardValuesSupported%2A> método devuelve un valor que indica si este objeto admite un conjunto estándar de valores.  
  
 El `context` parámetro extrae información adicional sobre el entorno de tiempo de diseño desde el que se invoca este convertidor. Este parámetro puede ser `null`, y las propiedades del objeto de contexto pueden devolver `null`. Si el `context` parámetro es `null`, este método devuelve `false`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Invalide este método si el tipo que desea convertir admite valores estándar.</para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
  </Members>
</Type>