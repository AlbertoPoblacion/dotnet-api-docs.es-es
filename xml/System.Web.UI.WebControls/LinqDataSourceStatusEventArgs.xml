<Type Name="LinqDataSourceStatusEventArgs" FullName="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="397ed9376985c69513834ee2e1edcf9a0819adeb" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39931348" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LinqDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceStatusEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceStatusEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type LinqDataSourceStatusEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona datos para los eventos <see cref="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated" />, <see cref="E:System.Web.UI.WebControls.LinqDataSource.Deleted" />, <see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserted" />, <see cref="E:System.Web.UI.WebControls.LinqDataSource.Selected" /> y <see cref="E:System.Web.UI.WebControls.LinqDataSource.Updated" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> clase le permite examinar los resultados de las operaciones de datos que se han realizado por un <xref:System.Web.UI.WebControls.LinqDataSource> control. Un <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> objeto se pasa a los controladores de eventos para el <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, y <xref:System.Web.UI.WebControls.LinqDataSource.Updated> eventos de la <xref:System.Web.UI.WebControls.LinqDataSource> control.  
  
 Si la operación de datos que se completó correctamente, el objeto de datos resultante se almacena en el <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> propiedad y el <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> propiedad es `null`. Si se produjo un error en la operación de datos, la excepción que se produjeron durante la operación de datos se almacena en el <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> propiedad y el <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> propiedad es `null`. Si se controló la excepción representada por la <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> establecer la propiedad, el <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> propiedad `true` para que no se producirá la excepción.  
  
 Recuperar el número total de registros de datos devueltos por una consulta a través de la <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> propiedad.  
  
   
  
## Examples  
 El ejemplo siguiente muestra un controlador de eventos para el <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> eventos. En el controlador de eventos, si el <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> propiedad es `null`, el producto se recupera el Id. del objeto en el <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> propiedad. El producto, Id. es una clave principal para la tabla y se establece la base de datos, por lo tanto, el valor no se conoce hasta que haya finalizado la operación de inserción. El mensaje de excepción se registra si el <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> propiedad no es igual a `null`. El <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> propiedad, a continuación, se establece en `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceStatusEventArgs (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceStatusEventArgs(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs : Exception -&gt; System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs exception" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">Error que se produjo durante la operación de datos.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> mediante el uso de una excepción que se produjo como resultado de la operación de datos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor se utiliza cuando se produce una excepción durante la operación de datos. El <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> propiedad se establece automáticamente en `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceStatusEventArgs (object result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (result As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceStatusEventArgs(System::Object ^ result);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs : obj -&gt; System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs result" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="result" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="result">Objeto que contiene los datos resultantes de una operación de datos.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> mediante el uso de un objeto que contiene los datos de la operación de datos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor se utiliza cuando la operación de datos ha finalizado sin errores. El `result` parámetro contiene un objeto que representa el resultado de la operación de datos. El <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> propiedad se establece automáticamente en `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceStatusEventArgs (object result, int totalRowCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object result, int32 totalRowCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (result As Object, totalRowCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceStatusEventArgs(System::Object ^ result, int totalRowCount);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs : obj * int -&gt; System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs (result, totalRowCount)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="result" Type="System.Object" />
        <Parameter Name="totalRowCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="result">Objeto que contiene los datos resultantes de una operación de datos.</param>
        <param name="totalRowCount">Número de filas que se devolvieron en una operación de recuperación de datos.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> con un objeto que contiene los datos de la operación de datos y el número de filas devueltas.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la excepción que se inició durante la operación de datos.</summary>
        <value>Objeto <see cref="T:System.Exception" /> que representa la excepción, si se produjo un error; de lo contrario, es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si se produce una excepción durante la operación de datos, la excepción se almacena en el <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> propiedad. Puede crear controladores de eventos para el <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, y <xref:System.Web.UI.WebControls.LinqDataSource.Updated> eventos y recuperar la excepción, si hay alguno, a través de la <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> propiedad.  
  
   
  
## Examples  
 El ejemplo siguiente muestra un controlador de eventos para el <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> eventos. En el controlador de eventos, si el <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> propiedad es `null`, el producto se recupera el Id. del objeto en el <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> propiedad. El identificador de producto es una clave principal para la tabla y se establece la base de datos, por lo que no se conoce el valor hasta que haya finalizado la operación de inserción. El mensaje de excepción se registra si el <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> propiedad no es igual a `null`. El <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> propiedad, a continuación, se establece en `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se controló la excepción y que no se debería iniciar de nuevo.</summary>
        <value>
          <see langword="true" /> si se controló la excepción; de lo contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede crear controladores de eventos para el <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, y <xref:System.Web.UI.WebControls.LinqDataSource.Updated> eventos para examinar las excepciones que se produjeron durante esas operaciones. Si controla la excepción y no desea que se produzca de nuevo, establezca el <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> propiedad `true`. Si no establece la <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> propiedad `true`, la excepción se propagará al siguiente controlador de eventos en la pila de llamadas.  
  
   
  
## Examples  
 El ejemplo siguiente muestra un controlador de eventos para el <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> eventos. En el controlador de eventos, si el <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> propiedad es `null`, el producto se recupera el Id. del objeto en el <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> propiedad. El producto, Id. es una clave principal para la tabla y se establece la base de datos, por lo tanto, el valor no se conoce hasta que haya finalizado la operación de inserción. El mensaje de excepción se registra si el <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> propiedad no es igual a `null`. El <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> propiedad, a continuación, se establece en `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public object Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Result" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Result As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Result { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Result : obj" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto que representa el resultado de una operación de datos.</summary>
        <value>Objeto que contiene los datos de la operación de datos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usa el <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> propiedad para examinar los valores devueltos de una operación de datos. Puede recuperar los parámetros de salida de una operación de datos o modificar los valores devueltos por una consulta.  
  
 Los datos almacenados en el <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> propiedad depende del tipo de operación de datos que se ha realizado. Cuando se eliminan datos, el <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> propiedad contiene un objeto del tipo especificado en el <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> propiedad, con los valores originales que se eliminaron del origen de datos. Al insertar o actualizar los datos, el <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> propiedad contiene un objeto del tipo especificado en el <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> propiedad, con los nuevos valores que se guardaron en el origen de datos. Cuando selecciona datos, el <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> propiedad contiene el resultado de la consulta.  
  
 Si la consulta select que implica agrupar los datos o seleccionar un subconjunto de propiedades del tipo especificado en el <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> propiedad, el <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> propiedad contiene un objeto de un tipo creado dinámicamente. En caso contrario, el <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> propiedad contiene un objeto del tipo especificado en el <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> propiedad.  
  
   
  
## Examples  
 El ejemplo siguiente muestra un controlador de eventos para el <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> eventos. En el controlador de eventos, si el <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> propiedad es `null`, el producto se recupera el Id. del objeto en el <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> propiedad. El producto, Id. es una clave principal para la tabla y se establece la base de datos, por lo tanto, el valor no se conoce hasta que haya finalizado la operación de inserción. El mensaje de excepción se registra si el <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> propiedad no es igual a `null`. El <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> propiedad, a continuación, se establece en `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalRowCount">
      <MemberSignature Language="C#" Value="public int TotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalRowCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TotalRowCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalRowCount : int" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el número total de filas de un conjunto de datos en una operación de recuperación de datos.</summary>
        <value>Número total de filas de un conjunto de datos procedente de la operación de recuperación de datos; es -1 si el objeto <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> se creó durante una operación de modificación de datos; es -1 si se habilitó la paginación personalizada al establecer <see cref="P:System.Web.UI.WebControls.LinqDataSource.AutoPage" /> en <see langword="true" /> y <see cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" /> en <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usa el <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> propiedad va a obtener el número de registros del conjunto de datos durante una operación de recuperación de datos. Normalmente, esta propiedad se recupera cuando se muestran las páginas de datos y desea mostrar el número total de registros.  
  
 Cuando se paginan los datos, el valor de la <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> propiedad podría ser diferente del número real de filas devueltas por la consulta. Esto es porque la consulta devuelve sólo el número de filas que son necesarios para esa página de datos.  
  
 El <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> propiedad contiene el número de registros de una consulta solo cuando se tiene acceso a un controlador de eventos para el <xref:System.Web.UI.WebControls.LinqDataSource.Selected> eventos. Cuando se tiene acceso a la propiedad de un controlador de eventos para el <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, o <xref:System.Web.UI.WebControls.LinqDataSource.Updated> eventos, el <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> propiedad contiene -1.  
  
 El valor de la <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> propiedad depende de la <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> propiedad de la <xref:System.Web.UI.WebControls.LinqDataSource> control y en el `AllowPaging` propiedad del control enlazado a datos. En la tabla siguiente se resume los posibles valores para el <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> propiedad.  
  
|Propiedad AutoPage del control LinqDataSource|Propiedad AllowPaging del control enlazado a datos|Propiedad TotalRowCount|Resultado|  
|-------------------------------------------------|-------------------------------------------------|----------------------------|-------------|  
|`true`|`true`|Número de registros para una consulta.|Los datos se paginan automáticamente.|  
|`false`|`false`|Número de registros para una consulta.|No se paginan los datos.|  
|`true`|`false`|-1|No se paginan los datos.|  
|`false`|`true`|El valor que asignó a la <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A> propiedad en el controlador de eventos para el <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> eventos.|Los datos se paginan según los valores que especificó cuando personalizó la paginación.|  
  
   
  
## Examples  
 El ejemplo siguiente muestra una página Web con un <xref:System.Web.UI.WebControls.LinqDataSource> (control), un <xref:System.Web.UI.WebControls.GridView> control y un <xref:System.Web.UI.WebControls.Literal> control. El <xref:System.Web.UI.WebControls.LinqDataSource> control define un controlador de eventos para el <xref:System.Web.UI.WebControls.LinqDataSource.Selected> eventos.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/vb/Default.aspx#1)]  
  
 El ejemplo siguiente muestra el código para el controlador de eventos para el <xref:System.Web.UI.WebControls.LinqDataSource.Selected> eventos. El valor de la <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> propiedad se asigna a la <xref:System.Web.UI.WebControls.Literal> control.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/cs/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/vb/Default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>