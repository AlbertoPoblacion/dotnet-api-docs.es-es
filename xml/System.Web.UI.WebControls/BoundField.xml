<Type Name="BoundField" FullName="System.Web.UI.WebControls.BoundField">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0d04960f9a5f61606a010cb75057f85c783b4586" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48655913" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BoundField : System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BoundField extends System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.BoundField" />
  <TypeSignature Language="VB.NET" Value="Public Class BoundField&#xA;Inherits DataControlField" />
  <TypeSignature Language="C++ CLI" Value="public ref class BoundField : System::Web::UI::WebControls::DataControlField" />
  <TypeSignature Language="F#" Value="type BoundField = class&#xA;    inherit DataControlField" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataControlField</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa un campo que se muestra como texto en un control enlazado a datos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.BoundField> clase es utilizada por los controles enlazados a datos (como <xref:System.Web.UI.WebControls.GridView> y <xref:System.Web.UI.WebControls.DetailsView>) para mostrar el valor de un campo como texto. La <xref:System.Web.UI.WebControls.BoundField> objeto se muestra de forma diferente dependiendo del control enlazado a datos en el que se utiliza. Por ejemplo, el <xref:System.Web.UI.WebControls.GridView> control muestra un <xref:System.Web.UI.WebControls.BoundField> objeto como una columna, mientras que el <xref:System.Web.UI.WebControls.DetailsView> control lo muestra como una fila.  
  
 Para especificar el campo para mostrar en un <xref:System.Web.UI.WebControls.BoundField> de objetos, establezca el <xref:System.Web.UI.WebControls.BoundField.DataField%2A> propiedad para el nombre del campo. El valor del campo puede ser codificada en HTML antes de mostrarse estableciendo el <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> propiedad `true`. Puede aplicar una cadena de formato personalizada para el valor del campo estableciendo el <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> propiedad. Cuando el <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> propiedad es `true`, el valor de cadena codificada del campo se utiliza en la cadena de formato personalizado. De forma predeterminada, la cadena de formato se aplica a los valores de campo solo cuando el control enlazado a datos está en modo de solo lectura. Para aplicar la cadena de formato a los valores mostrados mientras el control enlazado a datos está en modo de edición, establezca el <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> propiedad `true`. Si un valor del campo es null, puede mostrar un título personalizado estableciendo la <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> propiedad. El <xref:System.Web.UI.WebControls.BoundField> objeto automáticamente también puede convertir una cadena vacía ("") valores con valores null de los campos estableciendo el <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> propiedad `true`.  
  
 Puede ocultar un <xref:System.Web.UI.WebControls.BoundField> objeto en un control enlazado a datos estableciendo el <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> propiedad `false`. Para evitar que el valor de un campo que se está modificando en modo de edición, establezca el <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> propiedad `true`. En datos enlazados a controles que admiten insertar registros (tales como la <xref:System.Web.UI.WebControls.DetailsView> control), puede ocultar un <xref:System.Web.UI.WebControls.BoundField> objeto estableciendo el <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> propiedad `false`. Normalmente, esto se hace cuando desea ocultar un campo de clave generado automáticamente en modo de inserción.  
  
 Puede personalizar las secciones de encabezado y pie de página de un <xref:System.Web.UI.WebControls.BoundField> objeto. Para mostrar un título en las secciones de encabezado o pie de página, establezca el <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> o <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> propiedades, respectivamente. En lugar de mostrar texto en la sección de encabezado, puede mostrar una imagen estableciendo el <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> propiedad. La sección de encabezado puede estar oculto en el <xref:System.Web.UI.WebControls.BoundField> objeto estableciendo la <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> propiedad `false`.  
  
> [!NOTE]
>  Algunos controles enlazados a datos (como el <xref:System.Web.UI.WebControls.GridView> control) puede mostrar u ocultar la sección de encabezado completa del control. Estos controles enlazados a datos no admiten la <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> propiedad para un campo enlazado individual. Para mostrar u ocultar la sección de encabezado completa de un control enlazado a datos (si está disponible), use el control `ShowHeader` propiedad.  
  
 También puede personalizar la apariencia de la <xref:System.Web.UI.WebControls.BoundField> objeto (color de fuente, color de fondo etc.) estableciendo las propiedades de estilo para las distintas partes del campo. En la tabla siguiente se enumera las propiedades de estilo diferente.  
  
|Propiedad de estilo|Descripción|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|La configuración de estilo para los controles de servidor Web secundarios de la <xref:System.Web.UI.WebControls.BoundField> objeto.|  
|<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|La configuración de estilo para la sección de pie de página de la <xref:System.Web.UI.WebControls.BoundField> objeto.|  
|<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|La configuración de estilo de la sección de encabezado de la <xref:System.Web.UI.WebControls.BoundField> objeto.|  
|<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|La configuración de estilo para los elementos de datos en el <xref:System.Web.UI.WebControls.BoundField> objeto.|  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar un <xref:System.Web.UI.WebControls.BoundField> objeto para mostrar los valores de un campo en un <xref:System.Web.UI.WebControls.GridView> control.  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.InsertVisible" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ReadOnly" />
    <altmember cref="P:System.Web.UI.WebControls.CheckBoxField.Text" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.Visible" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BoundField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BoundField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.BoundField" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este constructor para inicializar una nueva instancia de la <xref:System.Web.UI.WebControls.BoundField> clase. Este constructor se utiliza normalmente al agregar campos a un control enlazado a datos creado dinámicamente.  
  
 Para agregar dinámicamente un <xref:System.Web.UI.WebControls.BoundField> objeto a un control enlazado a datos, cree un nuevo <xref:System.Web.UI.WebControls.BoundField> objeto, establecer sus propiedades y, a continuación, agregarlo a la colección de campos del control enlazado a datos. Por ejemplo, si está utilizando el <xref:System.Web.UI.WebControls.GridView> control, agregue el <xref:System.Web.UI.WebControls.BoundField> de objeto para el <xref:System.Web.UI.WebControls.GridView.Columns%2A> colección.  
  
> [!NOTE]
>  Aunque puede agregar dinámicamente campos a un control enlazado a datos, se recomienda encarecidamente que los campos se estáticamente declarados y, a continuación, mostrar u ocultar, según corresponda. Declara estáticamente todos los campos, reduce el tamaño del estado de vista para el control enlazado a datos primario.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el constructor para agregar dinámicamente un <xref:System.Web.UI.WebControls.BoundField> objeto a un <xref:System.Web.UI.WebControls.GridView> control.  
  
 [!code-aspx-csharp[BoundFieldCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldCtor/CS/boundfieldctorcs.aspx#1)]
 [!code-aspx-vb[BoundFieldCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldCtor/VB/boundfieldctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
      </Docs>
    </Member>
    <Member MemberName="ApplyFormatInEditMode">
      <MemberSignature Language="C#" Value="public virtual bool ApplyFormatInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyFormatInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ApplyFormatInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ApplyFormatInEditMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ApplyFormatInEditMode : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si la cadena de formato especificada por la propiedad <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> se aplica a los valores de campo cuando el control enlazado a datos que contiene el objeto <see cref="T:System.Web.UI.WebControls.BoundField" /> está en modo de edición.</summary>
        <value>Es <see langword="true" /> para aplicar la cadena de formato a los valores de campo en modo de edición; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controles enlazados a datos (como <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.FormView>, y <xref:System.Web.UI.WebControls.GridView>) tienen diferentes modos de presentación que permiten al usuario leer, editar o insertar registros. De forma predeterminada, la cadena de formato especificada por el <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> propiedad se aplica a los valores de campo solo cuando el control enlazado a datos está en modo de solo lectura. Para aplicar la cadena de formato a los valores mostrados mientras el control enlazado a datos está en modo de edición, establezca el <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> propiedad `true`.  
  
> [!NOTE]
>  Un <xref:System.Web.UI.WebControls.BoundField> objeto no quita automáticamente el formato cuando se actualiza el campo del origen de datos. Si no desea que el formato como parte del valor almacenado, deberá quitar el formato mediante programación.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> propiedad que se va a aplicar el formato de cadena a valores de campo mientras un <xref:System.Web.UI.WebControls.GridView> control está en modo de edición. El formato, a continuación, se quita mediante programación antes de actualiza el valor del origen de datos.  
  
 [!code-aspx-csharp[BoundFieldApplyFormatInEditMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/boundfieldapplyformatineditmode/CS/boundfieldapplyformatineditmodecs.aspx#1)]
 [!code-aspx-vb[BoundFieldApplyFormatInEditMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/boundfieldapplyformatineditmode/VB/boundfieldapplyformatineditmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public virtual bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si los valores de cadena vacía ("") se convierten automáticamente en valores nulos cuando se actualiza el campo de datos en el origen de datos.</summary>
        <value>Es <see langword="true" /> para convertir automáticamente los valores de cadena vacía en valores nulos; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A veces, el usuario puede escribir una cadena vacía para un valor de campo al actualizar o insertar registros. Use el <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> propiedad para especificar si un valor de cadena vacía se convierte automáticamente en null cuando se actualiza el campo de datos en el origen de datos.  
  
> [!NOTE]
>  De forma predeterminada, un <xref:System.Web.UI.WebControls.BoundField> objeto muestra los valores null como cadenas vacías. Para mostrar un valor diferente, establezca el <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> propiedad para especificar que una cadena vacía ("") el valor de campo se convierte automáticamente en null.  
  
 [!code-aspx-csharp[BoundFieldConvertEmptyStringToNull#1](~/samples/snippets/csharp/VS_Snippets_WebNet/boundfieldconvertemptystringtonull/CS/boundfieldconvertemptystingtonullcs.aspx#1)]
 [!code-aspx-vb[BoundFieldConvertEmptyStringToNull#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/boundfieldconvertemptystringtonull/VB/boundfieldconvertemptystingtonullvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberSignature Language="F#" Value="override this.CopyProperties : System.Web.UI.WebControls.DataControlField -&gt; unit" Usage="boundField.CopyProperties newField" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">Objeto <see cref="T:System.Web.UI.WebControls.DataControlField" /> al que se van a copiar las propiedades del objeto <see cref="T:System.Web.UI.WebControls.BoundField" /> actual.</param>
        <summary>Copia las propiedades del objeto <see cref="T:System.Web.UI.WebControls.BoundField" /> actual al objeto <see cref="T:System.Web.UI.WebControls.DataControlField" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.BoundField.CopyProperties%2A> método es un método auxiliar utilizado por el <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> método para copiar las propiedades del elemento actual <xref:System.Web.UI.WebControls.BoundField> de objeto para el <xref:System.Web.UI.WebControls.DataControlField> creado por el método de objeto.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.CreateField" />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.CreateField" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateField () As DataControlField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::DataControlField ^ CreateField();" />
      <MemberSignature Language="F#" Value="override this.CreateField : unit -&gt; System.Web.UI.WebControls.DataControlField" Usage="boundField.CreateField " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un objeto <see cref="T:System.Web.UI.WebControls.BoundField" /> vacío.</summary>
        <returns>Objeto <see cref="T:System.Web.UI.WebControls.BoundField" /> vacío.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.BoundField.CreateField%2A> método es un método auxiliar utilizado por el <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> método para crear un valor vacío <xref:System.Web.UI.WebControls.BoundField> objeto que se va a copiar las propiedades del elemento actual <xref:System.Web.UI.WebControls.BoundField> objeto.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public virtual string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.UI.WebControls.BoundField.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre del campo de datos que se enlaza al objeto <see cref="T:System.Web.UI.WebControls.BoundField" />.</summary>
        <value>Nombre del campo de datos que se va a enlazar al objeto <see cref="T:System.Web.UI.WebControls.BoundField" />. El valor predeterminado es una cadena vacía (""), lo que indica que no se ha establecido esta propiedad.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.BoundField.DataField%2A> propiedad para especificar el nombre del campo de datos para enlazar con el <xref:System.Web.UI.WebControls.BoundField> objeto. Se muestran los valores del campo especificado en el <xref:System.Web.UI.WebControls.BoundField> objeto como texto. Opcionalmente, puede dar formato al texto mostrado estableciendo el <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> propiedad.  
  
> [!NOTE]
>  Si un valor del campo es null, una cadena vacía ("") se muestra para el valor de forma predeterminada. Para especificar un título alternativo, establezca la <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.BoundField.DataField%2A> propiedad para especificar qué campo va a mostrar en un <xref:System.Web.UI.WebControls.BoundField> columna de campo de un <xref:System.Web.UI.WebControls.GridView> control.  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      </Docs>
    </Member>
    <Member MemberName="DataFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataFormatString : string with get, set" Usage="System.Web.UI.WebControls.BoundField.DataFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la cadena que especifica el formato de presentación del valor del campo.</summary>
        <value>Cadena de formato que especifica el formato de presentación del valor del campo. El valor predeterminado es una cadena vacía (""), lo que indica que no se aplica ningún formato especial al valor del campo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> propiedad para especificar un formato de presentación personalizado para los valores que se muestran en la <xref:System.Web.UI.WebControls.BoundField> objeto. Si el <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> no está establecida la propiedad, el valor del campo se muestra sin ningún formato especial.  
  
> [!NOTE]
>  En versiones de ASP.NET anteriores a la 3.5, debe establecer el <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> propiedad `false` con el fin de dar formato a los campos que son no tipos de datos string. En caso contrario, el valor del campo se convierte en una cadena por el método de conversión predeterminado antes de la cadena de formato que se almacena en el <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> se aplica la propiedad.  
  
 De forma predeterminada, la cadena de formato se aplica al valor del campo solo cuando el control enlazado a datos que contiene el <xref:System.Web.UI.WebControls.BoundField> objeto está en modo de solo lectura. Para aplicar la cadena de formato a valores de campo en el modo de edición, establezca el <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> propiedad `true`.  
  
 La cadena de formato puede ser cualquier cadena de literal y normalmente incluye un marcador de posición para el valor del campo. Por ejemplo, en la cadena de formato `Item Value: {0}`, el valor del campo se sustituye por el {0} marcador de posición cuando la cadena se muestra en el <xref:System.Web.UI.WebControls.BoundField> objeto. El resto de la cadena de formato se muestra como texto literal.  
  
 Si la cadena de formato no incluye un marcador de posición, solo la propia cadena de formato se incluye en el texto visualizado final (no se incluye el valor del campo del origen de datos). Si el marcador de posición es 0 (cero) encerrado entre llaves, tal como se muestra en el ejemplo anterior, el valor del campo se convierte en una cadena por el método predeterminado. Puede anexar el cero en una cadena que especifica cómo se debe dar formato el valor del campo. Por ejemplo, el marcador de posición `{0:C}` para un campo numérico especifica que el valor del campo debe convertirse en un formato de moneda.  
  
 Se aplica formato mediante el uso de la <xref:System.String.Format%2A> método. El número que sigue a la llave de apertura es parte de la sintaxis usada por ese método e indica que uno de una serie de valores que debe utilizar el marcador de posición. Dado que hay solo un valor de campo en cada celda, el número que sigue a la llave de apertura solo puede establecerse en 0.  
  
 En la tabla siguiente se enumera los caracteres de formato estándar para los campos numéricos. Estos caracteres de formato no distinguen mayúsculas de minúsculas, excepto para `X`, que muestra los caracteres hexadecimales en el caso de que se ha especificado. Puede anexar un número para la mayoría de los caracteres de formato para especificar cuántos dígitos significativos o posiciones decimales que se va a mostrar.  
  
> [!NOTE]
>  En la mayoría de los casos, formato depende de configuración de la referencia cultural del servidor. Los ejemplos son para una configuración de referencia cultural `en-US`.  
  
|Carácter de formato|Descripción|Ejemplo|  
|----------------------|-----------------|-------------|  
|`C` o `c`|Muestra los valores numéricos en formato de moneda. Puede especificar el número de posiciones decimales.|Formato: `{0:C}`<br /><br /> 123.456 -> $123.46<br /><br /> Formato: `{0:C3}`<br /><br /> 123.456  -> $123.456|  
|`D` o `d`|Muestra los valores enteros en formato decimal. Puede especificar el número de dígitos. (Aunque el tipo se conoce como "decimal", los números de formato de números enteros.)|Formato: `{0:D}`<br /><br /> 1234 -> 1234<br /><br /> Formato: `{0:D6}`<br /><br /> 1234  -> 001234|  
|`E` o `e`|Muestra los valores numéricos en formato científico (exponencial). Puede especificar el número de posiciones decimales.|Formato: `{0:E}`<br /><br /> 1052.0329112756 -&GT; 1.052033E + 003.<br /><br /> Formato: `{0:E2}`<br /><br /> ->-1052.0329112756-1.05e + 003.|  
|`F` o `f`|Muestra los valores numéricos en formato fijo. Puede especificar el número de posiciones decimales.|Formato: `{0:F}`<br /><br /> 1234.567 -> 1234.57<br /><br /> Formato: `{0:F3}`<br /><br /> 1234.567 -> 1234.567|  
|`G` o `g`|Muestra los valores numéricos en formato general (más compacto de notación de punto fijo o científica). Puede especificar el número de dígitos significativos.|Formato: `{0:G}`<br /><br /> -123.456 -> -123.456<br /><br /> Formato: `{0:G2}`<br /><br /> -123.456 -> -120|  
|`N` o `n`|Muestra los valores numéricos en formato de número (incluidos los separadores de grupos y el signo negativo opcional). Puede especificar el número de posiciones decimales.|Formato: `{0:N}`<br /><br /> 1234.567 -> 1,234.57<br /><br /> Formato: `{0:N4}`<br /><br /> 1234.567 -> 1,234.5670|  
|`P` o `p`|Muestra los valores numéricos en formato de porcentaje. Puede especificar el número de posiciones decimales.|Formato: `{0:P}`<br /><br /> 1 -> 100.00%<br /><br /> Formato: `{0:P1}`<br /><br /> .5 -> 50.0%|  
|`R` o `r`|Muestra <xref:System.Single>, <xref:System.Double>, o `BigInteger` valores en formato de ida y vuelta.|Formato: `{0:R}`<br /><br /> 123456789.12345678 -> 123456789.12345678|  
|`X` o `x`|Muestra los valores enteros en formato hexadecimal. Puede especificar el número de dígitos.|Formato: `{0:X}`<br /><br /> 255 -&GT; FF<br /><br /> Formato: `{0:x4}`<br /><br /> 255 -> 00ff|  
  
 Para obtener más información y ejemplos que muestran el formato de otros valores de referencia cultural, consulte [cadenas de formato numérico estándar](~/docs/standard/base-types/standard-numeric-format-strings.md). También puede crear cadenas de formato numérico personalizado. Para obtener más información, consulte [Cadenas con formato numérico personalizado](~/docs/standard/base-types/custom-numeric-format-strings.md).  
  
 En la tabla siguiente se enumera los caracteres de formato para <xref:System.DateTime> campos. La mayoría de estas especificaciones de formato como resultado una salida diferente según la configuración de referencia cultural. Los ejemplos son para un <xref:System.DateTime> valor de 15/6/2009 1:45:30 PM con una configuración de referencia cultural `en-US`.  
  
|Carácter de formato|Descripción|Ejemplo|  
|----------------------|-----------------|-------------|  
|`d`|Patrón de fecha corta.|Formato: `{0:d}`<br /><br /> 15/6/2009 1:45:30 PM -&GT; 15/6/2009|  
|`D`|Patrón de fecha larga.|Formato: `{0:D}`<br /><br /> 15/6/2009 1:45:30 PM -> el lunes, 15 de junio de 2009|  
|`f`|Patrón de fecha y hora completa (hora corta).|Formato: `{0:f}`<br /><br /> 15/6/2009 1:45:30 PM -> el lunes, 15 de junio de 2009 1:45 p. M.|  
|`F`|Patrón de fecha y hora completa (hora larga).|Formato: `{0:F}`<br /><br /> 15/6/2009 1:45:30 PM -> el lunes, 15 de junio de 2009 1:45:30 PM|  
|`g`|Patrón de fecha y hora general (hora corta).|Formato: `{0:g}`<br /><br /> 15/6/2009 1:45:30 PM -&GT; 15/6/2009 1:45 P. M.|  
|`G`|Patrón de fecha y hora general (hora larga).|Formato: `{0:G}`<br /><br /> 15/6/2009 1:45:30 PM -&GT; 15/6/2009 1:45:30 PM|  
|`M` o `m`|Patrón de mes/día.|Formato: `{0:M}`<br /><br /> 15/6/2009 1:45:30 PM -> 15 de junio|  
|`O` o `o`|Patrón de fecha y hora de ida y vuelta.|Formato: `{0:o}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15T13:45:30.0900000|  
|`R` o `r`|Patrón RFC1123 (para obtener información, consulte <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=nameWithType>).|Formato: `{0:R}`<br /><br /> 6/15/2009 1:45:30 PM -> Mon, 15 Jun 2009 20:45:30 GMT|  
|`s`|Patrón de fecha y hora que se puede ordenar.|Formato: `{0:s}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15T13:45:30|  
|`t`|Patrón de hora corta.|Formato: `{0:t}`<br /><br /> 15/6/2009 1:45:30 PM -&GT; 1:45 P. M.|  
|`T`|Patrón de hora larga.|Formato: `{0:T}`<br /><br /> 15/6/2009 1:45:30 PM -&GT; 1:45:30 PM|  
|`u`|Patrón de fecha y hora universal que se puede ordenar.|Formato: `{0:u}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15 20:45:30Z|  
|`U`|Patrón de fecha y hora completa universal.|Formato: `{0:U}`<br /><br /> 15/6/2009 1:45:30 PM -> el lunes, 15 de junio de 2009 8:45:30 PM|  
|`Y` o `y`|Patrón de mes y año.|Formato: `{0:Y}`<br /><br /> 15/6/2009 1:45:30 PM -> de junio de 2009|  
  
 Para obtener más información y ejemplos que muestran el formato de otros valores de referencia cultural, consulte [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md). También puede crear cadenas de formato de hora y fecha personalizada. Para obtener más información, consulte [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  
  
   
  
## Examples  
 Un proyecto de sitio Web de Visual Studio con código fuente está disponible como acompañamiento de este tema: [descargar](http://go.microsoft.com/fwlink/?LinkId=191889).  
  
 El ejemplo siguiente muestra cómo usar el <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> propiedad para especificar un formato de presentación personalizado para los valores de un campo.  
  
  
  
 El ejemplo siguiente muestra una fila de la salida generada por este ejemplo.  
  
|ProductID|nombre|ProductNumber|ListPrice|Espesor|ModifiedDate|  
|---------------|----------|-------------------|---------------|------------|------------------|  
|`000680`|`HL Road Frame - Black, 58`|`#FR-R92B-58`|`$1,431.50`|`1016.040`|`3/11/2004`|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Aplicar formato a tipos en .NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExtractValuesFromCell">
      <MemberSignature Language="C#" Value="public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ExtractValuesFromCell(class System.Collections.Specialized.IOrderedDictionary dictionary, class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ExtractValuesFromCell (dictionary As IOrderedDictionary, cell As DataControlFieldCell, rowState As DataControlRowState, includeReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ExtractValuesFromCell(System::Collections::Specialized::IOrderedDictionary ^ dictionary, System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="F#" Value="override this.ExtractValuesFromCell : System.Collections.Specialized.IOrderedDictionary * System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState * bool -&gt; unit" Usage="boundField.ExtractValuesFromCell (dictionary, cell, rowState, includeReadOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="includeReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dictionary">Un objeto <see cref="T:System.Collections.IDictionary" /> utilizado para almacenar los valores de la celda especificada.</param>
        <param name="cell">Objeto <see cref="T:System.Web.UI.WebControls.TableCell" /> que contiene los valores que se van a recuperar.</param>
        <param name="rowState">Uno de los valores de <see cref="T:System.Web.UI.WebControls.DataControlRowState" />.</param>
        <param name="includeReadOnly">Es <see langword="true" /> para incluir los valores de los campos de sólo lectura; de lo contrario, es <see langword="false" />.</param>
        <summary>El objeto <see cref="T:System.Collections.IDictionary" /> especificado se rellena con los valores del objeto <see cref="T:System.Web.UI.WebControls.TableCell" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.BoundField.ExtractValuesFromCell%2A> método se proporciona como una manera cómoda para recuperar los valores de los campos de especificado <xref:System.Web.UI.WebControls.TableCell> objeto en un <xref:System.Web.UI.WebControls.BoundField> objeto.  
  
> [!NOTE]
>  Este método lo usan principalmente los desarrolladores de controles.  
  
 Este método no tiene ningún valor devuelto. En su lugar, se devuelven los valores de campo por referencia a través de la <xref:System.Collections.IDictionary?displayProperty=nameWithType> objeto pasado para el `dictionary` parámetro. Después de haber llamado al método, recorrer en iteración la <xref:System.Collections.IDictionary?displayProperty=nameWithType> objeto para tener acceso a los valores de campo.  
  
> [!NOTE]
>  Si el <xref:System.Web.UI.WebControls.TableCell> objeto contiene los valores de campo de solo lectura, debe pasar en `true` para el `includeReadOnly` parámetro para incluir esos valores.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
      </Docs>
    </Member>
    <Member MemberName="FormatDataValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataValue (object dataValue, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataValue(object dataValue, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatDataValue (dataValue As Object, encode As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatDataValue(System::Object ^ dataValue, bool encode);" />
      <MemberSignature Language="F#" Value="abstract member FormatDataValue : obj * bool -&gt; string&#xA;override this.FormatDataValue : obj * bool -&gt; string" Usage="boundField.FormatDataValue (dataValue, encode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataValue" Type="System.Object" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataValue">El valor de campo al que se aplica el formato.</param>
        <param name="encode">Es <see langword="true" /> para codificar el valor; en caso contrario, es <see langword="false" />.</param>
        <summary>Da formato al valor de campo especificado para una celda del objeto <see cref="T:System.Web.UI.WebControls.BoundField" />.</summary>
        <returns>El valor de campo convertido al formato especificado por <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.BoundField.FormatDataValue%2A> método es un método auxiliar que se utiliza para transformar un valor de campo al formato especificado por el <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> propiedad. Si un valor de campo es null, el valor de la <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> se devuelve la propiedad.  
  
> [!NOTE]
>  Este método lo usan principalmente los desarrolladores de controles.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al extender el <see cref="T:System.Web.UI.WebControls.BoundField" /> (clase), puede invalidar este método para llevar a cabo una rutina de formato personalizada.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeValue">
      <MemberSignature Language="C#" Value="protected virtual object GetDesignTimeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetDesignTimeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.GetDesignTimeValue" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDesignTimeValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetDesignTimeValue();" />
      <MemberSignature Language="F#" Value="abstract member GetDesignTimeValue : unit -&gt; obj&#xA;override this.GetDesignTimeValue : unit -&gt; obj" Usage="boundField.GetDesignTimeValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera el valor utilizado como valor de un campo al representar el objeto <see cref="T:System.Web.UI.WebControls.BoundField" /> en un diseñador.</summary>
        <returns>El valor que se muestra en el diseñador como el valor del campo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> método es un método auxiliar que se usa para determinar qué valor para mostrar de un campo al representar el <xref:System.Web.UI.WebControls.BoundField> objeto en un diseñador. Si los datos reales no se puede recuperar del origen de datos en tiempo de diseño, el valor devuelto por este método se muestra en su lugar.  
  
> [!NOTE]
>  Este método lo usan principalmente los desarrolladores de controles.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al extender el <see cref="T:System.Web.UI.WebControls.BoundField" /> (clase), puede invalidar este método para devolver un valor diferente para mostrar para el campo en un diseñador.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="protected virtual object GetValue (System.Web.UI.Control controlContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetValue(class System.Web.UI.Control controlContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetValue (controlContainer As Control) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetValue(System::Web::UI::Control ^ controlContainer);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : System.Web.UI.Control -&gt; obj&#xA;override this.GetValue : System.Web.UI.Control -&gt; obj" Usage="boundField.GetValue controlContainer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlContainer" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="controlContainer">El contenedor del valor de campo.</param>
        <summary>Recupera el valor del campo enlazado al objeto <see cref="T:System.Web.UI.WebControls.BoundField" />.</summary>
        <returns>El valor del campo enlazado al objeto <see cref="T:System.Web.UI.WebControls.BoundField" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.BoundField.GetValue%2A> método es un método auxiliar que se utiliza para determinar el valor de un campo. Si el <xref:System.Web.UI.WebControls.BoundField> objeto se muestra en un diseñador y el valor del campo no se puede determinar en tiempo de diseño, el valor devuelto desde el <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> se devuelve el método en lugar del valor real del campo.  
  
> [!NOTE]
>  Este método lo usan principalmente los desarrolladores de controles.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">El contenedor especificado por el parámetro <paramref name="controlContainer" /> es <see langword="null" />.  
  
\- o - 
El contenedor especificado por el parámetro <paramref name="controlContainer" /> no tiene un elemento de datos.  
  
\- o - 
No se ha encontrado el campo de datos.</exception>
        <block subset="none" type="overrides">
          <para>Al extender el <see cref="T:System.Web.UI.WebControls.BoundField" /> (clase), puede invalidar este método para proporcionar una rutina personalizada para determinar el valor de un campo.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.GetDesignTimeValue" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public override string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.BoundField.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el texto que se muestra en el encabezado de un control de datos.</summary>
        <value>El texto mostrado en el encabezado de un control de datos. El valor predeterminado es una cadena vacía ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Web.UI.WebControls.BoundField.HeaderText%2A> propiedad para identificar un campo en un control de datos con un nombre descriptivo. La aplicación más común de la <xref:System.Web.UI.WebControls.BoundField.HeaderText%2A> propiedad consiste en proporcionar nombres de columna descriptivos a los campos enlazados a datos en un <xref:System.Web.UI.WebControls.GridView> o <xref:System.Web.UI.WebControls.DetailsView> control.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public virtual bool HtmlEncode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HtmlEncode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncode : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.HtmlEncode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si los valores de campo se codifican en HTML antes de mostrarlos en un objeto <see cref="T:System.Web.UI.WebControls.BoundField" />.</summary>
        <value>Es <see langword="true" /> si los valores de campo se codifican en HTML antes de mostrarlos en un objeto <see cref="T:System.Web.UI.WebControls.BoundField" />; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> propiedad para especificar si los valores de campo son a sus respectivas representaciones de cadena codificada en HTML antes de mostrarlos en un <xref:System.Web.UI.WebControls.BoundField> objeto. Por ejemplo, si esta propiedad es `true`, un valor de cadena "\<script >" se representaría como "&lt;script&gt;". Si esta propiedad es `false`, la cadena se representaría sin cambios.  
  
> [!NOTE]
>  Los valores de campo de codificación como HTML ayuda a evitar ataques de scripts entre sitios y contenido malintencionado que aparezca. Esta propiedad debe estar habilitada siempre que sea posible.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> propiedad para evitar que los valores de campo se codifican en HTML antes de que se muestran en un <xref:System.Web.UI.WebControls.BoundField> objeto.  
  
 [!code-aspx-csharp[BoundFieldHtmlEncode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldHtmlEncode/CS/BoundFieldHtmlEncodecs.aspx#1)]
 [!code-aspx-vb[BoundFieldHtmlEncode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldHtmlEncode/VB/BoundFieldHtmlEncodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.HttpServerUtility.HtmlEncode" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncodeFormatString">
      <MemberSignature Language="C#" Value="public virtual bool HtmlEncodeFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncodeFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HtmlEncodeFormatString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HtmlEncodeFormatString { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncodeFormatString : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el texto que se crea aplicando la propiedad <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> al valor <see cref="T:System.Web.UI.WebControls.BoundField" /> debería mostrarse codificado como HTML.</summary>
        <value>
          <see langword="true" /> si el texto se debe codificar en HTML; en caso contrario, <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los valores de codificación HTML pueden ayudar a evitar ataques de scripts entre sitios y contenido malintencionado que aparezca. Codificación HTML también es útil cuando desea mostrar el código HTML en el explorador, como muestra la cadena "\<br / >" en lugar de insertar un salto de línea (`<br/>` elemento) en la página.  
  
> [!NOTE]
>  Esta propiedad es nueva en ASP.NET 3.5. Establecer esta propiedad en `false` restaura el comportamiento predeterminado de la <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> en versiones de ASP.NET anteriores a la 3.5. Para obtener más información, vea la propiedad <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override bool Initialize (bool enableSorting, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Initialize(bool enableSorting, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Initialize(bool enableSorting, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.Initialize : bool * System.Web.UI.Control -&gt; bool" Usage="boundField.Initialize (enableSorting, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enableSorting" Type="System.Boolean" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="enableSorting">Es <see langword="true" /> si se admite la ordenación; en caso contrario, es <see langword="false" />.</param>
        <param name="control">El control de datos propietario de la colección <see cref="T:System.Web.UI.WebControls.BoundField" />.</param>
        <summary>Inicializa el objeto <see cref="T:System.Web.UI.WebControls.BoundField" />.</summary>
        <returns>
          <see langword="false" /> en todos los casos.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.BoundField.Initialize%2A> se llama al método por el control de datos con el que el <xref:System.Web.UI.WebControls.BoundField> objeto está asociado para realizar la inicialización de objetos básicos para las instancias del campo, antes de que el campo nunca se agrega a una colección de filas. Controles de datos como <xref:System.Web.UI.WebControls.DetailsView> y <xref:System.Web.UI.WebControls.GridView> llamar a la <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> método en sus `CreateChildControls` métodos antes de otros métodos, como `CreateRow` se llama para crear filas específicas con datos.  
  
 Llamada a este método cuando se escribe un enlace de datos personalizado de control que usa <xref:System.Web.UI.WebControls.TableCell> objetos que se va a realizar la inicialización básica para un <xref:System.Web.UI.WebControls.BoundField> objeto. Implemente este método si su <xref:System.Web.UI.WebControls.BoundField>-tipo derivado requiere cualquier inicialización del objeto antes de que rellena <xref:System.Web.UI.WebControls.TableCell> objetos con datos o los controles en el <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As DataControlFieldCell, cellType As DataControlCellType, rowState As DataControlRowState, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlCellType cellType, System::Web::UI::WebControls::DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlCellType * System.Web.UI.WebControls.DataControlRowState * int -&gt; unit" Usage="boundField.InitializeCell (cell, cellType, rowState, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell">
          <see cref="T:System.Web.UI.WebControls.TableCell" /> que se va a inicializar.</param>
        <param name="cellType">Uno de los valores de <see cref="T:System.Web.UI.WebControls.DataControlCellType" />.</param>
        <param name="rowState">Uno de los valores de <see cref="T:System.Web.UI.WebControls.DataControlRowState" />.</param>
        <param name="rowIndex">El índice de base cero de la fila.</param>
        <summary>Inicializa el objeto <see cref="T:System.Web.UI.WebControls.TableCell" /> especificado en el estado de fila especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> método lo implementa <xref:System.Web.UI.WebControls.BoundField>-tipos derivados para agregar texto y controles a un <xref:System.Web.UI.WebControls.TableCell> objeto de un control de datos que usa tablas para mostrar una interfaz de usuario (UI). Estos controles de datos crean la estructura de tabla completa por fila cuando el control `CreateChildControls` se llama al método. El <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> llama al método el `InitializeRow` controla el método de datos como <xref:System.Web.UI.WebControls.DetailsView> y <xref:System.Web.UI.WebControls.GridView>.  
  
 Llamada a este método cuando se escribe un enlace de datos personalizado de control que usa <xref:System.Web.UI.WebControls.TableCell> objetos para inicializar las celdas de la estructura de tabla con datos o controles. Implemente este método cuando se escribe un <xref:System.Web.UI.WebControls.BoundField>-clase derivada.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeDataCell">
      <MemberSignature Language="C#" Value="protected virtual void InitializeDataCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeDataCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeDataCell (cell As DataControlFieldCell, rowState As DataControlRowState)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeDataCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState);" />
      <MemberSignature Language="F#" Value="abstract member InitializeDataCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState -&gt; unit&#xA;override this.InitializeDataCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState -&gt; unit" Usage="boundField.InitializeDataCell (cell, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <param name="cell">
          <see cref="T:System.Web.UI.WebControls.TableCell" /> que se va a inicializar.</param>
        <param name="rowState">Uno de los valores de <see cref="T:System.Web.UI.WebControls.DataControlRowState" />.</param>
        <summary>Inicializa el objeto <see cref="T:System.Web.UI.WebControls.TableCell" /> especificado en el estado de fila especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.BoundField.InitializeDataCell%2A> método es un método auxiliar que se usa para inicializar una celda de la <xref:System.Web.UI.WebControls.BoundField> objeto.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al extender el <see cref="T:System.Web.UI.WebControls.BoundField" /> (clase), puede invalidar este método para llevar a cabo una rutina de inicialización personalizado.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="boundField.LoadViewState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Representa el estado del control que se va a restaurar.</param>
        <summary>Restaura la información de estado de vista almacenada previamente para este campo.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullDisplayText">
      <MemberSignature Language="C#" Value="public virtual string NullDisplayText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullDisplayText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NullDisplayText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NullDisplayText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NullDisplayText : string with get, set" Usage="System.Web.UI.WebControls.BoundField.NullDisplayText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el título mostrado para un campo cuando el valor del campo es nulo.</summary>
        <value>El título mostrado para un campo cuando el valor del campo es nulo. El valor predeterminado es una cadena vacía (""), lo que indica que no se ha establecido esta propiedad.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A veces se almacena un valor de campo como null en el origen de datos. Puede especificar un título personalizado que se muestra en los campos que tienen un valor null estableciendo el <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> propiedad. Si no se establece esta propiedad, los valores de campo null se muestran como cadenas vacías (""). Cuando un registro es que se va a actualizar o insertar en un control enlazado a datos, si el usuario escribe el valor especificado por esta propiedad (que no sea una cadena vacía) para un campo en un control enlazado a datos, que valor se convierte automáticamente en null del origen de datos.  
  
> [!NOTE]
>  Para convertir un valor de campo de cadena vacía en un valor null, establezca el <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> propiedad `true`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> propiedad para especificar un título personalizado para mostrar los valores de campo null.  
  
 [!code-aspx-csharp[BoundFieldNullDisplayText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldNullDisplayText/CS/boundfieldnulldisplaytextcs.aspx#1)]
 [!code-aspx-vb[BoundFieldNullDisplayText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldNullDisplayText/VB/boundfieldnulldisplaytextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      </Docs>
    </Member>
    <Member MemberName="OnDataBindField">
      <MemberSignature Language="C#" Value="protected virtual void OnDataBindField (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataBindField(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataBindField (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataBindField(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataBindField : obj * EventArgs -&gt; unit&#xA;override this.OnDataBindField : obj * EventArgs -&gt; unit" Usage="boundField.OnDataBindField (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Origen del evento.</param>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Enlaza el valor de un campo al objeto <see cref="T:System.Web.UI.WebControls.BoundField" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A> método es un método auxiliar que se usa para enlazar el valor de un campo del origen de datos a una celda correspondiente en el <xref:System.Web.UI.WebControls.BoundField> objeto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">El control al que se enlaza el valor del campo no es un objeto <see cref="T:System.Web.UI.WebControls.TextBox" /> o <see cref="T:System.Web.UI.WebControls.TableCell" />.</exception>
        <block subset="none" type="overrides">
          <para>Al extender el <see cref="T:System.Web.UI.WebControls.BoundField" /> (clase), puede invalidar este método para llevar a cabo una rutina de enlace personalizado.</para>
        </block>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.Web.HttpException" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el valor del campo se puede modificar en modo de edición.</summary>
        <value>Es <see langword="true" /> para evitar que el valor del campo se modifique en modo de edición; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> propiedad para evitar que los valores mostrados en un <xref:System.Web.UI.WebControls.BoundField> objeto que se va a modificarse. Cuando un control enlazado a datos está en modo de edición, los campos que son de solo lectura se muestran como texto sin formato, sin ningún control de edición.  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> propiedad se aplica sólo a modo de edición. Para evitar que los campos aparecen en el modo de inserción, utilice el <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> propiedad para evitar que los valores del campo clave que se muestran en un <xref:System.Web.UI.WebControls.BoundField> objeto desde el que se está modificando en modo de edición.  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
      </Docs>
    </Member>
    <Member MemberName="SupportsHtmlEncode">
      <MemberSignature Language="C#" Value="protected virtual bool SupportsHtmlEncode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsHtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SupportsHtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool SupportsHtmlEncode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsHtmlEncode : bool" Usage="System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si un objeto <see cref="T:System.Web.UI.WebControls.BoundField" /> admite la codificación HTML.</summary>
        <value>Siempre devuelve <see langword="true" />, para indicar que <see cref="T:System.Web.UI.WebControls.BoundField" /> admite la codificación HTML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode%2A> propiedad es una propiedad auxiliar utilizada por la <xref:System.Web.UI.WebControls.BoundField> clase y clases derivadas para determinar si la clase admite la codificación HTML.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al derivar de la <see cref="T:System.Web.UI.WebControls.BoundField" /> (clase), puede invalidar esta propiedad para indicar si la clase admite la codificación HTML.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
        <altmember cref="Overload:System.Web.HttpServerUtility.HtmlEncode" />
      </Docs>
    </Member>
    <Member MemberName="ThisExpression">
      <MemberSignature Language="C#" Value="public static readonly string ThisExpression;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string ThisExpression" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.BoundField.ThisExpression" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ThisExpression As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ ThisExpression;" />
      <MemberSignature Language="F#" Value=" staticval mutable ThisExpression : string" Usage="System.Web.UI.WebControls.BoundField.ThisExpression" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa "esta" expresión.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este campo se utiliza para indicar que el <xref:System.Web.UI.WebControls.BoundField> objeto debe enlazarse con el origen de datos propio, en lugar de un campo del origen de datos. En de este caso, el objeto `ToString` valor se mostrará en el campo.  
  
 Este campo se usa principalmente los desarrolladores de controles.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ValidateRequestMode ValidateRequestMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ValidateRequestMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRequestMode As ValidateRequestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ValidateRequestMode ValidateRequestMode { System::Web::UI::ValidateRequestMode get(); void set(System::Web::UI::ValidateRequestMode value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateRequestMode : System.Web.UI.ValidateRequestMode with get, set" Usage="System.Web.UI.WebControls.BoundField.ValidateRequestMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidateRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que determina si el control valida la entrada de cliente o no.</summary>
        <value>Un valor que determina si el control valida la entrada de cliente o no. El valor predeterminado es <see cref="F:System.Web.UI.ValidateRequestMode.Inherit" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSupportsCallback">
      <MemberSignature Language="C#" Value="public override void ValidateSupportsCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ValidateSupportsCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.ValidateSupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ValidateSupportsCallback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ValidateSupportsCallback();" />
      <MemberSignature Language="F#" Value="override this.ValidateSupportsCallback : unit -&gt; unit" Usage="boundField.ValidateSupportsCallback " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina si los controles que contiene un objeto <see cref="T:System.Web.UI.WebControls.BoundField" /> admiten devoluciones de llamada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.BoundField.ValidateSupportsCallback%2A> método es un método auxiliar que se usa para determinar si los controles contenidos en un <xref:System.Web.UI.WebControls.BoundField> objeto admiten devoluciones de llamada. Este método se ha implementado como un método vacío (un método que no contiene ningún código) para indicar que se admiten las devoluciones de llamada.  
  
> [!NOTE]
>  Este método lo usan principalmente los desarrolladores de controles.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Las clases que derivan de la <see cref="T:System.Web.UI.WebControls.BoundField" /> clase puede invalidar este método para indicar si los controles contenidos en las devoluciones de llamada de soporte técnico de campo. Para indicar que se admiten las devoluciones de llamada, implemente este método como un método vacío que no produce una excepción; en caso contrario, produce una excepción con un mensaje que describe por qué no se admiten las devoluciones de llamada.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback" />
      </Docs>
    </Member>
  </Members>
</Type>