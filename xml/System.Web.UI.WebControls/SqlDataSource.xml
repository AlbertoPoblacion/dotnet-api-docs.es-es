<Type Name="SqlDataSource" FullName="System.Web.UI.WebControls.SqlDataSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5397cf50b8d306538fd24ea4ebe9910d02130190" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36380273" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlDataSource : System.Web.UI.DataSourceControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSource extends System.Web.UI.DataSourceControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSource&#xA;Inherits DataSourceControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSource : System::Web::UI::DataSourceControl" />
  <TypeSignature Language="F#" Value="type SqlDataSource = class&#xA;    inherit DataSourceControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Selecting")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("SelectQuery")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.SqlDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.SqlDataSource))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa una base de datos SQL para controles enlazados a datos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En este tema:  
  
-   [Introducción](#introduction)  
  
-   [Conexiones de datos](#data_connections)  
  
-   [Realizar operaciones de datos](#performing_data_operations)  
  
-   [Proveedor de datos](#data_provider)  
  
-   [Almacenamiento en caché](#caching)  
  
-   [Características adicionales](#additional_features)  
  
-   [Vista del origen de datos](#data_source_view)  
  
-   [Sintaxis declarativa](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introduction  
 El <xref:System.Web.UI.WebControls.SqlDataSource> control de código fuente de datos representa los datos en una base de datos relacional de SQL para controles enlazados a datos. Puede usar el <xref:System.Web.UI.WebControls.SqlDataSource> control junto con un control enlazado a datos para recuperar datos de una base de datos relacional y para mostrar, editar y ordenar datos en una página Web con poco o ningún código.  
  
<a name="data_connections"></a>   
## <a name="data-connections"></a>Conexiones de datos  
 Para conectarse a una base de datos, debe establecer el <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> propiedad en una cadena de conexión válida. El <xref:System.Web.UI.WebControls.SqlDataSource> puede admitir cualquier base de datos relacional SQL que se puede conectar mediante un proveedor ADO.NET, como el `SqlClient`, `OleDb`, `Odbc`, o `OracleClient` proveedor. Para obtener información acerca de cómo proteger las cadenas de conexión, vea [How To: segura cadenas de conexión al origen de datos mediante controles](http://msdn.microsoft.com/library/942f6dcb-d278-4bec-8403-60eede9bcd62).  
  
 Para recuperar datos desde una base de datos subyacente, establezca el <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> propiedad con una consulta SQL. Si la base de datos que la <xref:System.Web.UI.WebControls.SqlDataSource> está asociado con los procedimientos almacenados de es compatible con, puede establecer el <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> propiedad en el nombre de un procedimiento almacenado. La consulta SQL que especifique también puede ser una consulta parametrizada. Puede agregar <xref:System.Web.UI.WebControls.Parameter> objetos que están asociados con una consulta parametrizada a la <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> colección. Para obtener más información acerca de las consultas SQL parametrizadas y su sintaxis, vea [usar parámetros con controles de origen de datos para el filtrado](http://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f).  
  
 El <xref:System.Web.UI.WebControls.SqlDataSource> control recupera los datos cada vez que la <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> se llama al método. Este método proporciona acceso mediante programación al método especificado por <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad. El <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método se llama automáticamente a los controles que están enlazados a la <xref:System.Web.UI.WebControls.SqlDataSource> cuando sus <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> se llama al método. Si establece la <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A> propiedad de un control enlazado a datos, el control se enlaza automáticamente a los datos del origen de datos, según sea necesario. Establecer el `DataSourceID` propiedad es el método recomendado para el enlace de un <xref:System.Web.UI.WebControls.ObjectDataSource> control a un control enlazado a datos. Como alternativa, puede usar el `DataSource` propiedad, pero, a continuación, se debe llamar explícitamente la <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> al método del control enlazado a datos. Algunos ejemplos de controles enlazados a datos que pueden usar <xref:System.Web.UI.WebControls.SqlDataSource> son <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.DataList>, y <xref:System.Web.UI.WebControls.DropDownList>. Puede llamar a la <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método mediante programación en cualquier momento para recuperar datos de la base de datos subyacente.  
  
 En escenarios ASP.NET mediante declaración y mediante programación, puede establecer la <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> propiedad del control enlazado a datos en el identificador de la <xref:System.Web.UI.WebControls.SqlDataSource> control. También puede asignar una instancia de la <xref:System.Web.UI.WebControls.SqlDataSource> clase a la <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> propiedad del control enlazado a datos. Para obtener más información acerca del control enlazado a datos de enlace a controles de origen de datos, vea [opciones de acceso a datos de ASP.NET](http://msdn.microsoft.com/library/a5ff235e-397f-4bbe-9bfe-2720b6e7ab9d).  
  
<a name="performing_data_operations"></a>   
## <a name="performing-data-operations"></a>Realizar operaciones de datos  
 Según las capacidades del producto de base de datos subyacente y la configuración de la instancia de la <xref:System.Web.UI.WebControls.SqlDataSource> (clase), puede realizar operaciones de datos, como actualizaciones, inserciones y eliminaciones. Para llevar a cabo estas operaciones de datos, establecer el texto de comando adecuado y cualquier parámetro asociado para la operación que desea realizar. Por ejemplo, para una operación de actualización, establezca la <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> propiedad como una cadena SQL o el nombre de un procedimiento almacenado y agregue los parámetros necesarios para la <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> colección. La actualización se realiza cuando el <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> se llama el método, ya sea explícitamente mediante código o automáticamente por un control enlazado a datos. Se sigue el mismo patrón general para <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> y <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> operaciones.  
  
 Las consultas SQL y los comandos que se utilizan en el <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>, y <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> propiedades pueden tener parámetros. Esto significa que la consulta o comando puede utilizar marcadores de posición en lugar de valores literales y enlazar los marcadores de posición a la aplicación o variables definidas por el usuario. Puede enlazar parámetros en consultas SQL a variables de sesión, los valores que se pasan en la cadena de consulta para una página de formularios Web Forms, los valores de propiedad de otros controles de servidor y mucho más. Para obtener más información acerca de cómo usar parámetros en consultas SQL con el <xref:System.Web.UI.WebControls.SqlDataSource>, consulte [usar parámetros con controles de origen de datos para el filtrado](http://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f) y [usar parámetros con el SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
> [!NOTE]
>  De forma predeterminada, si uno de los parámetros es `null` cuando se ejecuta un `Select` de comandos, no se devolverá ningún dato y no se producirá ninguna excepción. Puede cambiar este comportamiento estableciendo el <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A> propiedad `false`.  
  
<a name="data_provider"></a>   
## <a name="data-provider"></a>Proveedor de datos  
 De forma predeterminada, el <xref:System.Web.UI.WebControls.SqlDataSource> control funciona con el proveedor de datos de .NET Framework para SQL Server, pero <xref:System.Web.UI.WebControls.SqlDataSource> no es Microsoft SQL Server específicos. Puede conectar el <xref:System.Web.UI.WebControls.SqlDataSource> control con cualquier producto de base de datos para el que hay un proveedor administrado de ADO.NET. Cuando se usa con la <xref:System.Data.OleDb?displayProperty=nameWithType> proveedor, el <xref:System.Web.UI.WebControls.SqlDataSource> puede trabajar con cualquier base de datos compatibles con OLE DB. Cuando se usa con la <xref:System.Data.Odbc?displayProperty=nameWithType> proveedor, el <xref:System.Web.UI.WebControls.SqlDataSource> puede utilizarse con cualquier controlador ODBC y la base de datos, incluidos IBM DB2, MySQL y PostgreSQL. Cuando se usa con la <xref:System.Data.OracleClient?displayProperty=nameWithType> proveedor, el <xref:System.Web.UI.WebControls.SqlDataSource> puede trabajar con bases de datos de Oracle 8.1.7 y posteriores. La lista de proveedores permitidos está registrada en el `DbProviderFactories` sección del archivo de configuración, en el archivo Machine.config o Web.config. Para obtener más información, consulte [selección de datos mediante el SqlDataSource Control](http://msdn.microsoft.com/library/44623286-ff5a-4148-8a3c-85c56ed545eb).  
  
<a name="caching"></a>   
## <a name="caching"></a>Almacenamiento en memoria caché  
 Si se muestran datos en la página mediante un <xref:System.Web.UI.WebControls.SqlDataSource> (control), puede aumentar el rendimiento de la página mediante el uso de los datos de almacenamiento en caché de las capacidades del control de origen de datos. Almacenamiento en caché reduce la carga de procesamiento en los servidores de base de datos a costa de la memoria en el servidor Web; en la mayoría de los casos, esto es una buena solución de compromiso. El <xref:System.Web.UI.WebControls.SqlDataSource> almacena automáticamente en caché de datos cuando el <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> propiedad está establecida en `true` y <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> propiedad se establece en el número de segundos que la memoria caché almacena los datos antes de la entrada de caché se descarta. También puede especificar un <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> y opcional <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> valor.  
  
<a name="additional_features"></a>   
## <a name="additional-features"></a>Características adicionales  
 El <xref:System.Web.UI.WebControls.SqlDataSource> proporciona funcionalidades adicionales, como se muestra en la tabla siguiente.  
  
|Función|Requisitos|  
|----------------|------------------|  
|Almacenamiento en memoria caché|Establecer el <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> propiedad a la <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> valor, el <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> propiedad `true`y el <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> y <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> propiedades de acuerdo con el comportamiento de almacenamiento en caché que desea para los datos almacenados en caché.|  
|Eliminando|Establecer el <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> propiedad en una instrucción SQL utilizada para eliminar datos. Esta instrucción normalmente es parametrizada.|  
|Filtrado|Establecer el <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> propiedad a la <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> valor. Establecer el <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> propiedad en una expresión de filtrado que se usan para filtrar los datos cuando el <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> se llama al método.|  
|Inserción|Establecer el <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> propiedad en una instrucción SQL utilizada para insertar datos. Esta instrucción normalmente es parametrizada.|  
|Paginación|No se admite actualmente por el <xref:System.Web.UI.WebControls.SqlDataSource>, sin embargo algunos datos enlazados a controles, como <xref:System.Web.UI.WebControls.GridView>, compatibilidad con paginación cuando se establece la <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> propiedad a la <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> valor.|  
|Selección|Establecer el <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> propiedad en una instrucción SQL utilizada para recuperar datos.|  
|Ordenar|Establezca la propiedad <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> en <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>.|  
|Updating|Establecer el <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> propiedad en una instrucción SQL utilizada para actualizar los datos. Esta instrucción normalmente es parametrizada.|  
  
<a name="data_source_view"></a>   
## <a name="data-source-view"></a>Vista del origen de datos  
 Al igual que con todos los controles de origen de datos, el <xref:System.Web.UI.WebControls.SqlDataSource> control está asociado a una clase de vista del origen de datos. El <xref:System.Web.UI.WebControls.SqlDataSource> control tiene solo uno asociado <xref:System.Web.UI.WebControls.SqlDataSourceView>, y siempre se denomina `Table`.  
  
 No hay ninguna representación visual de la <xref:System.Web.UI.WebControls.SqlDataSource> control; se implementa como un control para que se puede crear mediante declaración y, opcionalmente, para permitir que participan en la administración de Estados. Como resultado, el <xref:System.Web.UI.WebControls.SqlDataSource> no admite características visuales, como los que se proporcionan con el <xref:System.Web.UI.DataSourceControl.EnableTheming%2A> o <xref:System.Web.UI.DataSourceControl.SkinID%2A> propiedad.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Sintaxis declarativa  
  
```  
<asp:SqlDataSource  
    CacheDuration="string|Infinite"  
    CacheExpirationPolicy="Absolute|Sliding"  
    CacheKeyDependency="string"  
    CancelSelectOnNullParameter="True|False"  
    ConflictDetection="OverwriteChanges|CompareAllValues"  
    ConnectionString="string"  
    DataSourceMode="DataReader|DataSet"  
    DeleteCommand="string"  
    DeleteCommandType="Text|StoredProcedure"  
    EnableCaching="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    FilterExpression="string"  
    ID="string"  
    InsertCommand="string"  
    InsertCommandType="Text|StoredProcedure"  
    OldValuesParameterFormatString="string"  
    OnDataBinding="DataBinding event handler"  
    OnDeleted="Deleted event handler"  
    OnDeleting="Deleting event handler"  
    OnDisposed="Disposed event handler"  
    OnFiltering="Filtering event handler"  
    OnInit="Init event handler"  
    OnInserted="Inserted event handler"  
    OnInserting="Inserting event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelected="Selected event handler"  
    OnSelecting="Selecting event handler"  
    OnUnload="Unload event handler"  
    OnUpdated="Updated event handler"  
    OnUpdating="Updating event handler"  
    ProviderName="string|System.Data.Odbc|System.Data.OleDb|  
        System.Data.OracleClient|System.Data.SqlClient|  
        Microsoft.SqlServerCe.Client"  
    runat="server"  
    SelectCommand="string"  
    SelectCommandType="Text|StoredProcedure"  
    SkinID="string"  
    SortParameterName="string"  
    SqlCacheDependency="string"  
    UpdateCommand="string"  
    UpdateCommandType="Text|StoredProcedure"  
    Visible="True|False"  
>  
        <DeleteParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </DeleteParameters>  
        <FilterParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </FilterParameters>  
        <InsertParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </InsertParameters>  
        <SelectParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </SelectParameters>  
        <UpdateParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </UpdateParameters>  
</asp:SqlDataSource>  
```  
  
   
  
## Examples  
 Un proyecto de sitio Web de Visual Studio con código fuente está disponible como acompañamiento de este tema: [descargar](http://go.microsoft.com/fwlink/?LinkId=192424).  
  
 Esta sección contiene cuatro ejemplos de código:  
  
-   El primer ejemplo de código muestra cómo mostrar los datos de SQL Server en un <xref:System.Web.UI.WebControls.GridView> controlar mediante la sintaxis declarativa.  
  
-   El segundo ejemplo de código muestra cómo mostrar los datos de una base de datos compatible con ODBC en un <xref:System.Web.UI.WebControls.GridView> controlar mediante la sintaxis declarativa.  
  
-   El tercer ejemplo de código muestra cómo mostrar y actualizar datos en un <xref:System.Web.UI.WebControls.GridView> control.  
  
-   El cuarto ejemplo de código muestra cómo mostrar y actualizar datos en un <xref:System.Web.UI.WebControls.DropDownList> control.  
  
    > [!NOTE]
    >  Estos ejemplos muestran cómo utilizar la sintaxis declarativa para el acceso a datos. Para obtener información acerca de cómo obtener acceso a datos mediante código en lugar de marcado, vea [acceso a datos en Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 En el ejemplo de código siguiente se muestra cómo utilizar un <xref:System.Web.UI.WebControls.SqlDataSource> control mediante declaración para recuperar datos de SQL Server y mostrarlo en un <xref:System.Web.UI.WebControls.GridView> control.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/CS/sql3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/VB/sql3vb.aspx#1)]  
  
 En el ejemplo de código siguiente se muestra cómo utilizar un <xref:System.Web.UI.WebControls.SqlDataSource> control mediante declaración para recuperar datos de una base de datos compatible con ODBC y mostrarlo en un <xref:System.Web.UI.WebControls.GridView> control. El <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> propiedad es el nombre del proveedor de datos de .NET Framework para ODBC, que es <xref:System.Data.Odbc?displayProperty=nameWithType>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_3odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3odbc/CS/odbc3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_3odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3odbc/VB/odbc3vb.aspx#1)]  
  
 En el ejemplo de código siguiente se muestra una presentación común y el escenario de actualización con el <xref:System.Web.UI.WebControls.GridView> control. Como con los ejemplos anteriores, los datos de la base de datos de Northwind se muestran en el <xref:System.Web.UI.WebControls.GridView> control. Además, dado que un <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> se especifica la propiedad y el <xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A> propiedad está establecida en `true`, puede editar y actualizar los registros sin código adicional. El <xref:System.Web.UI.WebControls.GridView> control controla automáticamente la adición de parámetros a la <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> colección y llama el <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> método cuando el **actualización** botón en el <xref:System.Web.UI.WebControls.GridView> se hace clic en el control.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_5sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_5sql/CS/sql5cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_5sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_5sql/VB/sql5vb.aspx#1)]  
  
 En el ejemplo de código siguiente se muestra una presentación común y el escenario de actualización con el <xref:System.Web.UI.WebControls.DropDownList> y <xref:System.Web.UI.WebControls.TextBox> controles. El <xref:System.Web.UI.WebControls.DropDownList> control no agrega automáticamente los parámetros de actualización para la <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> colección ni llamada la <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> método, por lo que debe hacerlo. Los parámetros de actualización se especifican mediante declaración y puede agregar un controlador de eventos para realizar la <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> operación cuando se genera un evento.  
  
> [!IMPORTANT]
>  Este ejemplo incluye un cuadro de texto que acepta datos proporcionados por el usuario, que puede suponer una amenaza de seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceControl" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
        <altmember cref="T:System.Web.UI.DataSourceControl" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
        <altmember cref="T:System.Web.UI.DataSourceControl" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSource (string connectionString, string selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, selectCommand As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSource(System::String ^ connectionString, System::String ^ selectCommand);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SqlDataSource : string * string -&gt; System.Web.UI.WebControls.SqlDataSource" Usage="new System.Web.UI.WebControls.SqlDataSource (connectionString, selectCommand)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="selectCommand" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">La cadena de conexión que se utiliza para conectarse a la base de datos subyacente.</param>
        <param name="selectCommand">La consulta SQL utilizada para recuperar datos de la base de datos subyacente. Si la consulta SQL es una cadena SQL parametrizada, quizá necesite agregar objetos <see cref="T:System.Web.UI.WebControls.Parameter" /> a la colección <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> con la cadena de conexión especificada y el comando Select.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Como productos de base de datos diferentes usan variedades diferentes de SQL, la sintaxis de `selectCommand` depende del proveedor ADO.NET actual que se está usando, identificado por la <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> propiedad. Si la cadena de SQL es un comando o consulta parametrizado, el marcador de posición del parámetro también depende del proveedor de ADO.NET que se está usando. Por ejemplo, si el proveedor es el <xref:System.Data.SqlClient?displayProperty=nameWithType>, que es el proveedor predeterminado para la <xref:System.Web.UI.WebControls.SqlDataSource> (clase), el marcador de posición del parámetro es `'@parameterName'`. Sin embargo, si el proveedor está establecido en el <xref:System.Data.Odbc?displayProperty=nameWithType> o <xref:System.Data.OleDb?displayProperty=nameWithType>, el marcador de posición del parámetro es `'?'`. Para obtener más información acerca de las consultas SQL con parámetros y comandos, vea [usar parámetros con el SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 El <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> valor puede ser una cadena SQL o el nombre de un procedimiento almacenado, si el origen de datos admite procedimientos almacenados.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear un <xref:System.Web.UI.WebControls.SqlDataSource> controlar mediante la <xref:System.Web.UI.WebControls.SqlDataSource.%23ctor%2A> constructor. El ejemplo es poco habitual que el <xref:System.Web.UI.WebControls.SqlDataSource> control está usándola no en una página de formularios Web Forms, pero en la implementación de un objeto de nivel intermedio como una manera sencilla para un objeto de negocios para interactuar con una base de datos. En el ejemplo se utiliza una cadena de conexión que se almacena en el archivo Web.config.  
  
 Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Web.UI.WebControls.ObjectDataSource> clase.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/northwindemployee1.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/northwindemployee1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSource (string providerName, string connectionString, string selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerName, string connectionString, string selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerName As String, connectionString As String, selectCommand As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSource(System::String ^ providerName, System::String ^ connectionString, System::String ^ selectCommand);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SqlDataSource : string * string * string -&gt; System.Web.UI.WebControls.SqlDataSource" Usage="new System.Web.UI.WebControls.SqlDataSource (providerName, connectionString, selectCommand)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="selectCommand" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerName">El nombre del proveedor de datos que utiliza el objeto <see cref="T:System.Web.UI.WebControls.SqlDataSource" />. Si no se establece ningún proveedor, el control <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> utiliza el proveedor ADO.NET para Microsoft SQL Server, de manera predeterminada.</param>
        <param name="connectionString">La cadena de conexión que se utiliza para conectarse a la base de datos subyacente.</param>
        <param name="selectCommand">La consulta SQL utilizada para recuperar datos de la base de datos subyacente. Si la consulta SQL es una cadena SQL parametrizada, quizá necesite agregar objetos <see cref="T:System.Web.UI.WebControls.Parameter" /> a la colección <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> con la cadena de conexión especificada y el comando Select.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Como productos de base de datos diferentes usan variedades diferentes de SQL, la sintaxis de `selectCommand` depende del proveedor ADO.NET actual que se está usando, identificado por la `providerName` parámetro. Si la cadena de SQL es un comando o consulta parametrizado, el marcador de posición del parámetro también depende del proveedor de ADO.NET que se está usando. Por ejemplo, si el proveedor es <xref:System.Data.SqlClient?displayProperty=nameWithType>, que es el proveedor predeterminado para la <xref:System.Web.UI.WebControls.SqlDataSource> (clase), el marcador de posición del parámetro es `'@parameterName'`. Sin embargo, si el proveedor está establecido en el <xref:System.Data.Odbc?displayProperty=nameWithType> o <xref:System.Data.OleDb?displayProperty=nameWithType>, el marcador de posición del parámetro es `'?'`. Para obtener más información acerca de las consultas SQL con parámetros y comandos, vea [usar parámetros con el SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 El <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> propiedad puede ser una cadena SQL o el nombre de un procedimiento almacenado, si el origen de datos admite procedimientos almacenados.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public virtual int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CacheDuration { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CacheDuration : int with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataSourceCacheDurationConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el período de tiempo, en segundos, que el control de origen de datos almacena en memoria caché los datos recuperados por el método <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />.</summary>
        <value>El número de segundos que el control <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> almacena en memoria caché los resultados de una operación <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />. El valor predeterminado es 0. El valor no puede ser negativo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.SqlDataSource> control admite el almacenamiento en caché de datos. Mientras que los datos en caché, el <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método recupera datos de la memoria caché en lugar de la base de datos subyacente. Cuando la memoria caché expira, el <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método recupera datos de la base de datos subyacente y, a continuación, almacena en memoria caché de los datos.  
  
 El <xref:System.Web.UI.WebControls.SqlDataSource> control automáticamente almacena en caché los datos cuando el <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> propiedad está establecida en `true` y <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> propiedad se establece en un valor mayor que 0, lo que indica el número de segundos que la memoria caché almacena los datos antes de la entrada de caché se descarta. Un valor de 0 indica una caché infinitamente larga.  
  
 El comportamiento de la memoria caché viene determinado por una combinación de la duración y el <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> propiedad. Si el <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> propiedad está establecida en el <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> valor, el <xref:System.Web.UI.WebControls.SqlDataSource> almacena en caché los datos en la primera operación de recuperación de datos, se guarda en la memoria para, a lo sumo, la cantidad de tiempo especificado por <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> propiedad. Los datos se pueden liberar antes del tiempo de duración, si se necesita la memoria. A continuación, se actualiza la caché durante la siguiente operación. Si el <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> propiedad está establecida en el <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> valor, el control de origen de datos almacena en caché los datos en la primera operación de recuperación de datos, pero se restablece el período de tiempo que retiene la caché para cada operación subsiguiente. La memoria caché expira si no hay ninguna actividad durante un tiempo que es igual a la <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> valor desde el último <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operación.  
  
 El <xref:System.Web.UI.WebControls.SqlDataSource> control puede almacenar en caché datos solo cuando se encuentra en <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> modo. A <xref:System.NotSupportedException> excepción la producen el <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método, si la <xref:System.Web.UI.WebControls.SqlDataSource> control se establece en el <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> también se habilita el almacenamiento en caché y valor.  
  
> [!IMPORTANT]
>  Cuando se utiliza la suplantación del cliente en la autenticación de Microsoft Windows, los datos se almacena en caché cuando el primer usuario tiene acceso a los datos. Si otro usuario solicita los mismos datos, los datos se recuperan de la memoria caché. No se recuperan los datos realizando otra llamada a la base de datos para comprobar el acceso del usuario a los datos. Si espera que más de un usuario para tener acceso a los datos y desea que cada recuperación en los datos que debe comprobar las configuraciones de seguridad para la base de datos, no utilice el almacenamiento en caché.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo recuperar datos de la base de datos Northwind de Microsoft SQL Server y mostrarlo en un <xref:System.Web.UI.WebControls.GridView> control con habilitada la caché de datos. El <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> se establece en 20 segundos y, puesto que la <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> propiedad está establecida en el <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> valor de forma predeterminada, los usuarios de esta página verán datos nuevos cada 20 segundos.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/CS/sql18cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/VB/sql18vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="CacheExpirationPolicy">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheExpirationPolicy As DataSourceCacheExpiry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::DataSourceCacheExpiry CacheExpirationPolicy { System::Web::UI::DataSourceCacheExpiry get(); void set(System::Web::UI::DataSourceCacheExpiry value); };" />
      <MemberSignature Language="F#" Value="member this.CacheExpirationPolicy : System.Web.UI.DataSourceCacheExpiry with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceCacheExpiry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el comportamiento de expiración de la memoria caché que, combinado con la duración, describe el comportamiento de almacenamiento en caché que usa el control de origen de datos.</summary>
        <value>Uno de los valores de <see cref="T:System.Web.UI.DataSourceCacheExpiry" />. El valor predeterminado es <see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.SqlDataSource> control admite el almacenamiento en caché de datos. Mientras que los datos en caché, el <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método recupera datos de la memoria caché en lugar de la base de datos subyacente. Cuando la memoria caché expira, el <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método recupera datos de la base de datos subyacente y, a continuación, almacena en memoria caché de los datos.  
  
 El comportamiento de la memoria caché viene determinado por una combinación de la <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> y <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> configuración. Si el <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> propiedad está establecida en el <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> valor, el <xref:System.Web.UI.WebControls.SqlDataSource> almacena en caché los datos en la primera operación de recuperación de datos, se guarda en la memoria durante el tiempo especificado por el <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> propiedad y, a continuación, lo descarta una vez que tenga el tiempo vencido. A continuación, se actualiza la caché durante la siguiente operación. Si el <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> propiedad está establecida en el <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> valor, el control de origen de datos almacena en caché los datos en la primera operación de recuperación de datos, pero se restablece el período de tiempo que retiene la caché para cada operación subsiguiente. La memoria caché expira si no hay ninguna actividad durante un tiempo que es igual a la <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> valor desde el último <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operación.  
  
 El <xref:System.Web.UI.WebControls.SqlDataSource> control puede almacenar en caché datos sólo cuando esté en el <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> modo. A <xref:System.NotSupportedException> excepción la producen el <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método, si la <xref:System.Web.UI.WebControls.SqlDataSource> control se establece en el <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> también se habilita el almacenamiento en caché y valor.  
  
> [!IMPORTANT]
>  Cuando se utiliza la suplantación del cliente en la autenticación de Microsoft Windows, los datos se almacena en caché cuando el primer usuario tiene acceso a los datos. Si otro usuario solicita los mismos datos, los datos se recuperan de la memoria caché. No se recuperan los datos realizando otra llamada a la base de datos para comprobar el acceso del usuario a los datos. Si espera que más de un usuario para tener acceso a los datos y desea que cada recuperación en los datos que debe comprobar las configuraciones de seguridad para la base de datos, no utilice el almacenamiento en caché.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo recuperar datos de la base de datos Northwind de Microsoft SQL Server y mostrarlo en un <xref:System.Web.UI.WebControls.GridView> control con habilitada la caché de datos. Dado que la <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> propiedad está establecida en el <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> valor, los usuarios no verán datos nuevos, aunque la <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> valor es 20 segundos. Se actualizan los datos almacenados en memoria caché solo si no hay ninguna actividad en la página durante más de 20 segundos desde la última carga de página.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_19sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_19sql/CS/sql19cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_19sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_19sql/VB/sql19vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="CacheKeyDependency">
      <MemberSignature Language="C#" Value="public virtual string CacheKeyDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheKeyDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheKeyDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CacheKeyDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CacheKeyDependency : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una dependencia de clave definida por el usuario que está vinculada a todos los objetos de caché de datos creados por el control de origen de datos. Todos los objetos de caché expiran explícitamente cuando expira la clave.</summary>
        <value>Una clave que identifica todos los objetos de caché creados por el objeto <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.SqlDataSource> control admite el almacenamiento en caché de datos. Mientras que los datos en caché, el <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método recupera datos de la memoria caché en lugar de la base de datos subyacente. Cuando la memoria caché expira, el <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método recupera datos de la base de datos subyacente y, a continuación, almacena en memoria caché de los datos.  
  
 Puede establecer la <xref:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency%2A> propiedad para crear una dependencia entre todas las entradas de caché que se crean mediante el <xref:System.Web.UI.WebControls.SqlDataSource> control y la clave. Mediante programación puede expirar todas las entradas de caché en cualquier momento mediante la expiración de la clave.  
  
 El <xref:System.Web.UI.WebControls.SqlDataSource> control puede almacenar en caché datos sólo cuando esté en el <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> modo. A <xref:System.NotSupportedException> excepción la producen el <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método, si la <xref:System.Web.UI.WebControls.SqlDataSource> control se establece en el <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> también se habilita el almacenamiento en caché y valor.  
  
 Se crea una entrada de caché única para cada combinación de la <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>, y <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> propiedades. Varios <xref:System.Web.UI.WebControls.SqlDataSource> controles pueden utilizar las mismas entradas de caché en escenarios donde los controles carguen los mismos datos de la misma base de datos subyacente.  
  
> [!IMPORTANT]
>  Cuando se utiliza la suplantación del cliente en la autenticación de Microsoft Windows, los datos se almacena en caché cuando el primer usuario tiene acceso a los datos. Si otro usuario solicita los mismos datos, los datos se recuperan de la memoria caché. No se recuperan los datos realizando otra llamada a la base de datos para comprobar el acceso del usuario a los datos. Si espera que más de un usuario para tener acceso a los datos y desea que cada recuperación en los datos que debe comprobar las configuraciones de seguridad para la base de datos, no utilice el almacenamiento en caché.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
      </Docs>
    </Member>
    <Member MemberName="CancelSelectOnNullParameter">
      <MemberSignature Language="C#" Value="public virtual bool CancelSelectOnNullParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelSelectOnNullParameter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CancelSelectOnNullParameter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CancelSelectOnNullParameter { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CancelSelectOnNullParameter : bool with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se ha cancelado una operación de recuperación de datos cuando algún parámetro de la colección <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> se evalúa como <see langword="null" />.</summary>
        <value>
          <see langword="true" /> si se cancela una operación de la recuperación de datos cuando un parámetro contenido en la colección <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> se evalúa como <see langword="null" />; de lo contrario, <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A> propiedad se almacena en estado de vista.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberSignature Language="F#" Value="member this.ConflictDetection : System.Web.UI.ConflictOptions with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.ConflictDetection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el valor que indica cómo el control <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> realiza actualizaciones y eliminaciones cuando los datos de una fila de la base de datos subyacente cambian mientras dura la operación.</summary>
        <value>Uno de los valores de <see cref="T:System.Web.UI.ConflictOptions" />. El valor predeterminado es <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> propiedad determina si los parámetros para los valores antiguos y nuevos se aplican a la `Update` método. Por ejemplo, si el comando que está especificado por el <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> propiedad devuelve un <xref:System.Data.DataTable> objeto con las columnas `Name` y `Number` y <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> propiedad está establecida en el <xref:System.Web.UI.ConflictOptions.OverwriteChanges> valor, se crean parámetros para `Name` y `Number` para el `Update` método. Si el <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> propiedad está establecida en el <xref:System.Web.UI.ConflictOptions.CompareAllValues> valor, se crean parámetros para `Name`, `Number`, `original_Name`, y `original_Number`. (El nombre exacto de los parámetros para los valores originales depende del <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> propiedad.) El <xref:System.Web.UI.WebControls.SqlDataSource> control, a continuación, determina si el `Update` método que se especifica en el <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> propiedad tiene parámetros que coinciden.  
  
 Control de simultaneidad es una técnica que utilizan los almacenes de datos para controlar cómo se leen y cambian en el almacén cuando varios clientes obtienen acceso y manipulan los mismos datos. Por ejemplo, un cliente lee los datos y presenta a un usuario, mientras que otro cliente lee los mismos datos y presenta a un usuario diferente. Si ambos usuarios actualizarán los datos y los envían al almacenamiento de datos, podría producirse algún resultado inesperado, porque ambos clientes podrían actualizar distintos valores para los mismos datos. Esto se considera un conflicto. Estableciendo la <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> propiedad a la <xref:System.Web.UI.ConflictOptions.CompareAllValues> valor, su `Update` método, a continuación, puede comparar los valores antiguos y nuevos para el origen de datos original para detectar conflictos y controlarlos según sea necesario.  
  
 El <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> propiedad delega en el <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> propiedad de la <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está asociado el <xref:System.Web.UI.WebControls.SqlDataSource> control.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ConflictOptions" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public virtual string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionString : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la cadena de conexión específica del proveedor de ADO.NET que utiliza el control <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> para conectarse a una base de datos subyacente.</summary>
        <value>Cadena específica del proveedor de datos .NET Framework que el control <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> utiliza para conectarse a la base de datos SQL que representa. El valor predeterminado es una cadena vacía ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.SqlDataSource> control puede usarse con una variedad de proveedores de ADO.NET y la sintaxis de la cadena de conexión que se utiliza para conectarse a un origen de datos subyacente es específica del proveedor.  
  
 Al configurar un <xref:System.Web.UI.WebControls.SqlDataSource> (control), establecer el <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> propiedad al tipo de base de datos (el valor predeterminado es <xref:System.Data.SqlClient?displayProperty=nameWithType>), y establece el <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> propiedad en una cadena de conexión que incluya la información necesaria para conectarse la base de datos. El contenido de una cadena de conexión difiere según el tipo de base de datos tiene acceso el control de origen de datos. Por ejemplo, el <xref:System.Web.UI.WebControls.SqlDataSource> control requiere un nombre de servidor, nombre de base de datos (catálogo) y obtener información sobre cómo autenticar al usuario cuando se conecta a un servidor SQL Server. Para obtener información sobre el contenido de las cadenas de conexión, consulte el <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> propiedad para la <xref:System.Data.SqlClient.SqlConnection> (clase), <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> propiedad para la <xref:System.Data.OracleClient.OracleConnection> (clase), <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> propiedad para la <xref:System.Data.OleDb.OleDbConnection> (clase), o la <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> propiedad para la <xref:System.Data.Odbc.OdbcConnection> clase.  
  
 Si cambia la <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> propiedad, el <xref:System.Web.UI.IDataSource.DataSourceChanged> se genera el evento, haciendo que todos los controles que están enlazados a la <xref:System.Web.UI.WebControls.SqlDataSource> control volver a enlazar.  
  
> [!IMPORTANT]
>  Para obtener información sobre cómo almacenar una cadena de conexión, vea [Cómo: proteger las cadenas de conexión al origen de datos mediante controles](http://msdn.microsoft.com/library/942f6dcb-d278-4bec-8403-60eede9bcd62).  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos de código. El primer ejemplo de código muestra cómo establecer el <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> propiedad para conectarse a una base de datos de Microsoft SQL Server y mostrar los resultados de la <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> propiedad en un <xref:System.Web.UI.WebControls.GridView> control. El segundo ejemplo de código muestra un escenario más complejo, donde un <xref:System.Web.UI.WebControls.SqlDataSource> control se utiliza para mostrar y actualizar datos en una base de datos de Microsoft Access protegida con contraseña. En cada caso, el `connectionStrings` elemento del archivo Web.config se muestra primero, seguido de la página ASP.NET que contiene el <xref:System.Web.UI.WebControls.SqlDataSource> control.  
  
 En el ejemplo de código siguiente se muestra cómo establecer el <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> propiedad para conectarse a una base de datos de SQL Server y mostrar los resultados de la <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> propiedad en un <xref:System.Web.UI.WebControls.GridView> control.  
  
  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/CS/sql3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/VB/sql3vb.aspx#1)]  
  
 En el ejemplo de código siguiente se muestra un escenario más complejo que el ejemplo de código anterior, donde un <xref:System.Web.UI.WebControls.SqlDataSource> control se utiliza para mostrar y actualizar datos en una base de datos de Access protegida con contraseña. Porque el <xref:System.Web.UI.WebControls.SqlDataSource> se usa con el acceso, el <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> propiedad está establecida en el <xref:System.Data.OleDb> proveedor y el <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> propiedad está establecida en una cadena de conexión adecuada para una base de datos de acceso compartido UNC. Un <xref:System.Web.UI.WebControls.GridView> control muestra los pedidos con fechas de envío. Puede actualizar un pedido al activar la casilla adecuada y, a continuación, haciendo clic en el **actualizar** botón.  
  
> [!IMPORTANT]
>  Este ejemplo incluye una contraseña en texto sin formato solo con fines meramente ilustrativos. En una aplicación de producción, se deben cifrar cadenas de conexión que incluyen las contraseñas. Para más información, consulte [Proteger la información de conexión](~/docs/framework/data/adonet/protecting-connection-information.md).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_22sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/CS/sql22cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_22sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/VB/sql22vb.aspx#1)]  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/CS/sql22cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/VB/sql22vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceView">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.SqlDataSourceView CreateDataSourceView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.SqlDataSourceView CreateDataSourceView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDataSourceView (viewName As String) As SqlDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::SqlDataSourceView ^ CreateDataSourceView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="abstract member CreateDataSourceView : string -&gt; System.Web.UI.WebControls.SqlDataSourceView&#xA;override this.CreateDataSourceView : string -&gt; System.Web.UI.WebControls.SqlDataSourceView" Usage="sqlDataSource.CreateDataSourceView viewName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">El nombre de la vista de origen de datos.</param>
        <summary>Crea un objeto de vista de origen de datos que se asocia al control de origen de datos.</summary>
        <returns>Un objeto <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> al que está asociado el control <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las clases que derivan de la <xref:System.Web.UI.WebControls.SqlDataSource> clase puede invalidar el <xref:System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView%2A> método devuelva un valor fuertemente tipada de objetos de vista de origen de datos.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceMode DataSourceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceMode DataSourceMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSourceMode As SqlDataSourceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceMode DataSourceMode { System::Web::UI::WebControls::SqlDataSourceMode get(); void set(System::Web::UI::WebControls::SqlDataSourceMode value); };" />
      <MemberSignature Language="F#" Value="member this.DataSourceMode : System.Web.UI.WebControls.SqlDataSourceMode with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el modo de la recuperación de datos que utiliza el control <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> para obtener los datos.</summary>
        <value>Uno de los valores de <see cref="T:System.Web.UI.WebControls.SqlDataSourceMode" />. El valor predeterminado es el <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataSet" /> valor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El modo de recuperación de datos identifica cómo un <xref:System.Web.UI.WebControls.SqlDataSource> control recupera datos de la base de datos subyacente.  
  
 Cuando el <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> propiedad está establecida en el <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> valor, los datos se cargan en un <xref:System.Data.DataSet> objeto y almacenado en memoria en el servidor. Esto habilita escenarios donde controles interfaz de usuario, como <xref:System.Web.UI.WebControls.GridView>, ofrecen capacidades de paginación, filtrado y ordenación.  
  
 Cuando el <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> propiedad está establecida en el <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> valor, los datos se recuperan mediante un <xref:System.Data.IDataReader> objeto, que es un cursor de solo avance y solo lectura. El tipo específico de la <xref:System.Data.IDataReader> objeto depende del proveedor de datos neto que la <xref:System.Web.UI.WebControls.SqlDataSource> usos, que se identifica mediante el <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> propiedad. De forma predeterminada, el <xref:System.Web.UI.WebControls.SqlDataSource> control utiliza el proveedor de Microsoft SQL Server, el <xref:System.Data.SqlClient?displayProperty=nameWithType>, y el lector de datos es un <xref:System.Data.SqlClient.SqlDataReader> objeto.  
  
 Si cambia la <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> propiedad, el <xref:System.Web.UI.IDataSource.DataSourceChanged> se genera el evento, haciendo que todos los controles que están enlazados a la <xref:System.Web.UI.WebControls.SqlDataSource> volver a enlazar.  
  
 El valor de la <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> propiedad se almacena en estado de vista.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo establecer el <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> propiedad de la <xref:System.Web.UI.WebControls.SqlDataSource> el control a la <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> valor para un escenario con un <xref:System.Web.UI.WebControls.ListBox> control que no requiere ordenación, paginación ni filtrado.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/CS/sql1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/VB/sql1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La propiedad <see cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" /> no es uno de los valores definidos en <see cref="T:System.Web.UI.WebControls.SqlDataSourceMode" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; int" Usage="sqlDataSource.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Realiza una operación de eliminación mediante la cadena SQL <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> SQL y cualquier parámetro que esté en la colección <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />.</summary>
        <returns>Valor que representa el número de filas eliminadas de la base de datos subyacente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Antes de realiza la operación de eliminación, el <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> se llama al método para provocar el <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> eventos. Puede controlar este evento para examinar los valores de los parámetros y realice cualquier preprocesamiento antes de una operación de eliminación.  
  
 Una vez completada la operación, el <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> se llama al método para provocar el <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> eventos. Puede controlar este evento para examinar los valores devueltos y los códigos de error y realizar cualquier procesamiento posterior.  
  
 El <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> método se proporciona acceso mediante programación a la `Delete` método. Si el <xref:System.Web.UI.WebControls.SqlDataSource> control está asociado a un control enlazado a datos, el control enlazado a datos llama automáticamente a la **eliminar** método.  
  
 El <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> método delega en el <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> método de la <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está asociado el <xref:System.Web.UI.WebControls.SqlDataSource> control. Para realizar la operación, el <xref:System.Web.UI.WebControls.SqlDataSourceView> genera un <xref:System.Data.Common.DbCommand> objeto mediante la la <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> texto y cualquier asociado <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> , los valores y, a continuación, ejecuta el <xref:System.Data.Common.DbCommand> en la base de datos subyacente.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo establecer el <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> texto que se va a eliminar un pedido de la base de datos Northwind. Inicialmente, se recuperan de la tabla Orders y se muestra en los datos una <xref:System.Web.UI.WebControls.DropDownList> control. Debe declarar explícitamente la <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> propiedad y llame al método el <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> método cuando se usan los controles enlazados a datos, como el <xref:System.Web.UI.WebControls.DropDownList> (a diferencia de otros controles, como <xref:System.Web.UI.WebControls.GridView> y <xref:System.Web.UI.WebControls.DetailsView>, que rellena automáticamente el parámetros y llame al método el <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> método en un control de origen de datos). En este ejemplo, el <xref:System.Web.UI.WebControls.Button.OnClick%2A> eventos se delega a privado `OnDelete` controlador de eventos, que se llame explícitamente a la <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> método de la <xref:System.Web.UI.WebControls.SqlDataSource> control.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/CS/sql11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/VB/sql11vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El control <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> no puede establecer una conexión con el origen de datos subyacente.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public string DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la cadena de SQL que utiliza el control <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> para eliminar datos de la base de datos subyacente.</summary>
        <value>Una cadena de SQL que utiliza el control <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> para eliminar datos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> representa una consulta SQL o el nombre de un procedimiento almacenado y se usa por la <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> método.  
  
 Como productos de base de datos diferentes usan variedades diferentes de SQL, la sintaxis de la cadena de SQL depende del proveedor de ADO.NET actual que se está usando, identificado por la propiedad <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>. Si la cadena SQL es un comando o consulta parametrizado, la sintaxis del parámetro también depende del proveedor de ADO.NET que se va a usar. Por ejemplo, si el proveedor es el <xref:System.Data.SqlClient?displayProperty=nameWithType>, que es el proveedor predeterminado para la <xref:System.Web.UI.WebControls.SqlDataSource> (clase), la sintaxis del parámetro es `'@parameterName'`. Sin embargo, si el proveedor está establecido en el <xref:System.Data.Odbc?displayProperty=nameWithType> o <xref:System.Data.OleDb?displayProperty=nameWithType>, el marcador de posición del parámetro es `'?'`. Para obtener más información acerca de las consultas SQL con parámetros y comandos, vea [usar parámetros con el SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 El <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> propiedad puede ser una cadena SQL o el nombre de un procedimiento almacenado, si la base de datos admite procedimientos almacenados.  
  
 El <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> propiedad delega en el <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> propiedad de la <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está asociado el <xref:System.Web.UI.WebControls.SqlDataSource> control.  
  
> [!IMPORTANT]
>  Por motivos de seguridad, la <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> propiedad no se almacena en estado de vista. Dado que es posible descodificar el contenido del estado de vista en el cliente, almacenar información confidencial sobre la estructura de base de datos en la vista estado podría provocar una vulnerabilidad de divulgación de información.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo establecer el <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> texto que se va a eliminar un pedido de la tabla de pedidos de la base de datos de Northwind. Datos se recuperan de la tabla Orders y se muestra en un <xref:System.Web.UI.WebControls.GridView> control. El <xref:System.Web.UI.WebControls.GridView> representa un **eliminar** botón automáticamente cuando el <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> propiedad está establecida en `true`. Además, cuando la **eliminar** se hace clic en el botón, el <xref:System.Web.UI.WebControls.GridView> control rellena automáticamente el <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> colección y llama el <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> método. Por último, dado que este ejemplo de código elimina datos, se agrega un controlador de eventos para intentar realizar la copia de seguridad de la base de datos en el disco antes de la <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> se realiza la operación.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType DeleteCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.DeleteCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el texto de la propiedad <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />, es una instrucción SQL o el nombre de un procedimiento almacenado.</summary>
        <value>Uno de los valores de <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />. El valor predeterminado es <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType%2A> propiedad delega en el <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType%2A> propiedad de la <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está asociado el <xref:System.Web.UI.WebControls.SqlDataSource> control.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Deleted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tiene lugar cuando se termina una operación de eliminación.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controlar la <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> eventos para examinar los valores de parámetros de salida una vez completada una operación de eliminación. Los parámetros de salida están disponibles en la <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> objeto que está asociado con el evento.  
  
 Para obtener más información sobre el control de eventos, vea [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la colección de parámetros que contiene los parámetros utilizados por la propiedad <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> desde el objeto <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> asociado con el control <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> que contiene los parámetros utilizados por la propiedad <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> propiedad contiene una consulta SQL con parámetros, el <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> colección contiene cualquier <xref:System.Web.UI.WebControls.Parameter> objetos que corresponden a los marcadores de posición de parámetro en la cadena de SQL.  
  
> [!NOTE]
>  Asegúrese de que ningún <xref:System.Web.UI.WebControls.BoundField> controles en el control enlazado a datos que se enlazan a la <xref:System.Web.UI.WebControls.SqlDataSource> control tienen nombres que coinciden con los nombres de parámetro en el <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> colección. Podrían hacer que los parámetros que tienen el mismo nombre como campos enlazados se excluyen de los comandos SQL y un error "no se proporcionó el parámetro".  
  
 Si el <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> propiedad está establecida en el <xref:System.Web.UI.ConflictOptions.CompareAllValues> valor, se crean los parámetros para los valores antiguos y nuevos de los datos. Los parámetros para los valores antiguos se denominan según la <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> propiedad.  
  
 Dependiendo del proveedor ADO.NET, el orden de los parámetros en el <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> colección podría ser importante. El <xref:System.Data.OleDb?displayProperty=nameWithType> y <xref:System.Data.Odbc?displayProperty=nameWithType> proveedores asocian los parámetros de la colección según el orden en que aparecen los parámetros en la consulta SQL con parámetros. El <xref:System.Data.SqlClient?displayProperty=nameWithType> proveedor, que es el proveedor ADO.NET predeterminado para el <xref:System.Web.UI.WebControls.SqlDataSource> controlar, asocia los parámetros de la colección que coincide con el nombre del parámetro con el marcador de posición en la consulta SQL. Para obtener más información acerca de las consultas SQL con parámetros y comandos, vea [usar parámetros con el SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 El <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> propiedad recupera la <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> propiedad que está contenida en el <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está asociado el <xref:System.Web.UI.WebControls.SqlDataSource> control.  
  
> [!IMPORTANT]
>  Los valores se insertan en parámetros sin validación, lo que puede suponer una amenaza de seguridad. Use la <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> eventos para validar los valores de parámetro antes de ejecutar la consulta. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo establecer el <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> texto que se va a eliminar un pedido de la base de datos Northwind. Inicialmente, se recuperan de la tabla Orders y se muestra en los datos una <xref:System.Web.UI.WebControls.DropDownList> control. Debe declarar explícitamente <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> propiedad y llame al método el <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> método cuando se usan los controles enlazados a datos, como <xref:System.Web.UI.WebControls.DropDownList> (a diferencia de otros controles, como <xref:System.Web.UI.WebControls.GridView> y <xref:System.Web.UI.WebControls.DetailsView>, que rellenan automáticamente los parámetros y llamar a <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> en un control de origen de datos). En este ejemplo, el <xref:System.Web.UI.WebControls.Button.OnClick%2A> eventos se delega a privado `OnDelete` controlador de eventos, que se llame explícitamente a la <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> método de la <xref:System.Web.UI.WebControls.SqlDataSource> control.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/CS/sql11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/VB/sql11vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Deleting;" />
      <MemberSignature Language="F#" Value="member this.Deleting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Deleting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tiene lugar antes de una operación de eliminación.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controlar la <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> eventos para realizar operaciones de inicialización adicionales que son específicas de la aplicación, para validar los valores de parámetros o para cambiar los valores de parámetro antes de la <xref:System.Web.UI.WebControls.SqlDataSource> control realiza la operación de eliminación.  
  
 La conexión al origen de datos subyacente no aún está abierta cuando se llama al delegado de controlador de eventos. Por lo tanto, no se puede cancelar la operación directamente mediante una llamada a la <xref:System.Data.Common.DbCommand.Cancel%2A> método en el <xref:System.Data.Common.DbCommand> objeto expuesto por la <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> objeto. Sin embargo, puede cancelar la operación de base de datos estableciendo el <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propiedad de la <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> el objeto a `true`.  
  
 Para obtener más información sobre el control de eventos, vea [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo controlar la <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> evento que se produce antes una <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> se produce la operación. Dado que este ejemplo elimina datos de la base de datos Northwind, un <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> controlador se agrega al intentar realizar la copia de seguridad de la base de datos en el disco antes de la <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> se realiza la operación.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="EnableCaching">
      <MemberSignature Language="C#" Value="public virtual bool EnableCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableCaching : bool with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el control <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> está habilitado.</summary>
        <value>Es <see langword="true" /> si el almacenamiento de datos en caché está habilitado para el control de origen de datos; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.SqlDataSource> control admite el almacenamiento en caché de datos. Mientras que los datos en caché, el <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método recupera datos de la memoria caché en lugar de la base de datos subyacente. Cuando la memoria caché expira, el <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método recupera datos de la base de datos subyacente y, a continuación, almacena en memoria caché de los datos.  
  
 El <xref:System.Web.UI.WebControls.SqlDataSource> control automáticamente almacena en caché los datos cuando el <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> propiedad está establecida en `true` y <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> propiedad se establece en un valor mayor que 0, lo que indica el número de segundos que la memoria caché almacena los datos antes de recuperar un nuevo conjunto.  
  
> [!IMPORTANT]
>  Cuando se utiliza la suplantación del cliente en la autenticación de Microsoft Windows, los datos se almacena en caché cuando el primer usuario tiene acceso a los datos. Si otro usuario solicita los mismos datos, los datos se recuperan de la memoria caché. No se recuperan los datos realizando otra llamada a la base de datos para comprobar el acceso del usuario a los datos. Si espera que más de un usuario para tener acceso a los datos y desea que cada recuperación en los datos que debe comprobar las configuraciones de seguridad para la base de datos, no utilice el almacenamiento en caché.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo recuperar datos de la base de datos Northwind de Microsoft SQL Server y mostrarlo en un <xref:System.Web.UI.WebControls.GridView> control con habilitada la caché de datos. El <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> propiedad está establecida en `true` y <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> se establece en 20 segundos. Dado que la <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> propiedad está establecida en el <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> campo de forma predeterminada, los usuarios de esta página verán datos nuevos cada 20 segundos.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/CS/sql18cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/VB/sql18vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">La propiedad <see cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" /> se establece en <see langword="true" /> cuando el control <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> no admite el almacenamiento en memoria caché.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterExpression : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.FilterExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una expresión de filtrado que se aplica cuando se llama al método <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />.</summary>
        <value>Cadena que representa una cadena de filtrado aplicada cuando se recuperan datos mediante el método <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> valor de la propiedad es una expresión de cadena de formato (una cadena que es procesada por el <xref:System.String.Format%2A?displayProperty=nameWithType> método) que utiliza los valores en el <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> colección para los parámetros de sustitución que se incluyen en la cadena. La sintaxis de expresión de filtro es la misma sintaxis que acepta el <xref:System.Data.DataView.RowFilter%2A> propiedad, porque la expresión de filtro se aplica a la <xref:System.Data.DataView.RowFilter%2A> propiedad de la <xref:System.Data.DataView> objeto que se devuelve al ejecutar el <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método. Para obtener más información, vea <xref:System.Data.DataColumn.Expression%2A>.  
  
 Si se agregan parámetros a la <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> recopilación, también puede incluir marcadores de posición de cadena de formato (por ejemplo, `"{0}")` en la expresión que se va a sustituir los valores de parámetro. Los marcadores de posición se reemplazan según el índice del parámetro en el <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> colección. Si un objeto en el <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> colección es `null`, el objeto se reemplazará por una cadena vacía.  
  
 Puede incluir parámetros en la <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> propiedad. Si el parámetro es un tipo de cadena o un carácter, incluya el parámetro entre comillas simples. Las comillas no son necesarias, si el parámetro es un tipo numérico. El <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> colección contiene los parámetros que se evalúan para los marcadores de posición que se encuentran en el <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> propiedad.  
  
 El <xref:System.Web.UI.WebControls.SqlDataSource> control admite el filtrado de datos sólo cuando esté en el <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> modo.  
  
 El <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> propiedad delega en el <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> propiedad de la <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está asociado el <xref:System.Web.UI.WebControls.SqlDataSource> control.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo recuperar datos de la base de datos Northwind y filtrar mediante un <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> cadena y la <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> colección. El <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> propiedad se aplica siempre que el <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método se ejecuta para recuperar datos. En este ejemplo, el <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> contiene un marcador de posición para un parámetro de filtro, que se encuentra en la <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> colección. Además, el parámetro de filtro es un <xref:System.Web.UI.WebControls.ControlParameter> objeto al que está enlazado el <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> propiedad de la <xref:System.Web.UI.WebControls.DropDownList> control. Porque el <xref:System.Web.UI.WebControls.DropDownList> control tiene su <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> propiedad establecida en `true`, cualquier cambio en la selección para la <xref:System.Web.UI.WebControls.DropDownList> control hace que la página publicar información en el servidor y el <xref:System.Web.UI.WebControls.GridView> control volver a enlazar al origen de datos controlar con el nuevo filtro.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Se estableció la propiedad <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" /> y <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> está en modo <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataReader" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As SqlDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberSignature Language="F#" Value="member this.Filtering : System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler " Usage="member this.Filtering : System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce antes de una operación de filtrado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controlar la <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> eventos para realizar operaciones de validación en valores de parámetro de filtro antes de la <xref:System.Web.UI.WebControls.SqlDataSource> control realiza una operación de filtrado. Puede cancelar la <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método estableciendo la <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propiedad de la <xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs> el objeto a `true`. El evento se produce solo si el <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> se establece la propiedad.  
  
 El <xref:System.Web.UI.WebControls.SqlDataSource.Filtering?displayProperty=nameWithType> los delegados de eventos para el <xref:System.Web.UI.WebControls.SqlDataSourceView.Filtering?displayProperty=nameWithType> eventos de la <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está asociado el <xref:System.Web.UI.WebControls.SqlDataSource> control.  
  
 Para obtener más información sobre el control de eventos, vea [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSource.FilterParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una colección de parámetros que están asociados a los marcadores de posición de parámetros de la cadena <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> que contiene un conjunto de parámetros asociados a cualquier marcador de parámetro situado en la propiedad <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los parámetros en la <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> colección están asociados con los parámetros que se especifican en el <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> propiedad. Los marcadores de posición de parámetro que se especifican en el <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> propiedad coinciden con el orden de los objetos de parámetro de la <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> colección cuando la <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> se llama al método.  
  
 El <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> propiedad recupera la <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> propiedad que está contenida en el <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está asociado el <xref:System.Web.UI.WebControls.SqlDataSource> control.  
  
> [!IMPORTANT]
>  Los valores se insertan en parámetros sin validación, lo que puede suponer una amenaza de seguridad. Use la <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> eventos para validar los valores de parámetro antes de ejecutar la consulta. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo recuperar datos de la base de datos Northwind y filtrarlos mediante la <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> y <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> propiedades. El <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> propiedad de la <xref:System.Web.UI.WebControls.SqlDataSource> control se aplica en cualquier momento el <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método se ejecuta para recuperar datos. En este ejemplo, el <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> propiedad contiene un marcador de posición para un parámetro de filtro, que se encuentra en la <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> colección. Además, el parámetro de filtro es un <xref:System.Web.UI.WebControls.ControlParameter> objeto al que está enlazado el <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> propiedad de la <xref:System.Web.UI.WebControls.DropDownList> control. Porque el <xref:System.Web.UI.WebControls.DropDownList> control tiene su <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> propiedad establecida en `true`, cualquier cambio de la <xref:System.Web.UI.WebControls.DropDownList> selección hace que la página publicar información en el servidor y el <xref:System.Web.UI.WebControls.GridView> control volver a enlazar al control del origen de datos con el nuevo filtro.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="GetDbProviderFactory">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.DbProviderFactory GetDbProviderFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DbProviderFactory GetDbProviderFactory() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.GetDbProviderFactory" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDbProviderFactory () As DbProviderFactory" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::DbProviderFactory ^ GetDbProviderFactory();" />
      <MemberSignature Language="F#" Value="abstract member GetDbProviderFactory : unit -&gt; System.Data.Common.DbProviderFactory&#xA;override this.GetDbProviderFactory : unit -&gt; System.Data.Common.DbProviderFactory" Usage="sqlDataSource.GetDbProviderFactory " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderFactory</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve el objeto <see cref="T:System.Data.Common.DbProviderFactory" /> asociado con el proveedor de ADO.NET identificado por la propiedad <see cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />.</summary>
        <returns>Un objeto <see cref="T:System.Data.Common.DbProviderFactory" /> que representa el proveedor de ADO.NET identificado; de lo contrario una instancia de <see cref="N:System.Data.SqlClient" />, si no se establece ningún proveedor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.Common.DbProviderFactory> propiedad la usan el <xref:System.Web.UI.WebControls.SqlDataSource> control para crear los objetos correctos de conexión, comando y parámetro ADO.NET al interactuar con una base de datos.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.Common.DbProviderFactory" />
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="override this.GetView : string -&gt; System.Web.UI.DataSourceView" Usage="sqlDataSource.GetView viewName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Nombre de la vista que se va a recuperar. Dado que <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> admite solo una vista, se omite <c>viewName</c>.</param>
        <summary>Obtiene la vista de origen de datos con nombre asociada al control de origen de datos.</summary>
        <returns>El objeto <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> denominado "Table" al que está asociado el control <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.SqlDataSource> control es compatible con la vista del origen de datos solo una. Al igual que con todos los objetos de vista de origen de datos, la <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está asociado con el control de origen de datos define sus funciones, realiza todo el trabajo que es necesario para recuperar datos de la base de datos subyacente y realiza operaciones como la ordenación, inserción, eliminación y actualización.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="viewName" /> es <see langword="null" /> o un valor distinto de <c>Table</c>.</exception>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected override System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="override this.GetViewNames : unit -&gt; System.Collections.ICollection" Usage="sqlDataSource.GetViewNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene una colección de nombres que representa la lista de objetos de vista asociados al control <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <returns>Una interfaz <see cref="T:System.Collections.ICollection" /> que contiene los nombres de las vistas asociadas a la interfaz <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.SqlDataSource> control sólo admite una vista en sus datos subyacentes, denominada `"Table"`. El <xref:System.Web.UI.WebControls.SqlDataSource.GetViewNames%2A> método devuelve una colección de solo elemento de este nombre de una vista.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert();" />
      <MemberSignature Language="F#" Value="member this.Insert : unit -&gt; int" Usage="sqlDataSource.Insert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Realiza una operación de inserción mediante la cadena SQL <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> SQL y cualquier parámetro que esté en la colección <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />.</summary>
        <returns>Valor que representa el número de filas insertadas en la base de datos subyacente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Antes de realiza la operación de inserción, el <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> se llama al método para provocar el <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> eventos. Puede controlar este evento para examinar los valores de los parámetros y realice algún preprocesamiento antes de realizar la <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> operación. Para realizar una operación de inserción, el <xref:System.Web.UI.WebControls.SqlDataSourceView> compilaciones del objeto un <xref:System.Data.Common.DbCommand> objeto mediante la <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> texto y cualquier asociado <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> propiedades y, a continuación, ejecuta la <xref:System.Data.Common.DbCommand> objeto en la base de datos subyacente.  
  
 Una vez completada la operación, el <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> se llama al método para provocar el <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> eventos. Puede controlar este evento para examinar los valores devueltos y los códigos de error y realizar cualquier procesamiento posterior.  
  
 El <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> método se proporciona acceso mediante programación a la `Insert` método. Si el <xref:System.Web.UI.WebControls.SqlDataSource> control está asociado a un control enlazado a datos, el control enlazado a datos llama automáticamente a la `Insert` método.  
  
 El <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> método delega en el <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A> método de la <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está asociado el <xref:System.Web.UI.WebControls.SqlDataSource> control.  
  
> [!IMPORTANT]
>  Los valores se insertan en parámetros sin validación, lo que puede suponer una amenaza de seguridad. Use la <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> eventos para validar los valores de parámetro antes de ejecutar la consulta. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo insertar datos en una base de datos mediante el <xref:System.Web.UI.WebControls.SqlDataSource> control y una sencilla página de formularios Web Forms. Los datos actuales en la tabla de datos se muestran en el <xref:System.Web.UI.WebControls.DropDownList> control. Puede agregar nuevos registros especificando valores en la <xref:System.Web.UI.WebControls.TextBox> controles y, a continuación, haga clic en el **insertar** botón. Cuando el **insertar** se hace clic en el botón, los valores especificados se insertan en la base de datos y, a continuación, el <xref:System.Web.UI.WebControls.DropDownList> se actualiza.  
  
> [!IMPORTANT]
>  Este ejemplo incluye un cuadro de texto que acepta datos proporcionados por el usuario, que puede suponer una amenaza para la seguridad y se insertan valores en parámetros sin validación, lo que también puede suponer una amenaza de seguridad. Use la <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> eventos para validar los valores de parámetro antes de ejecutar la consulta. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
> [!NOTE]
>  En este ejemplo se muestra cómo utilizar la sintaxis declarativa para el acceso a datos. Para obtener información acerca de cómo obtener acceso a datos mediante código en lugar de marcado, vea [acceso a datos en Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El control <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> no puede establecer una conexión con el origen de datos subyacente.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public string InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la cadena de SQL que utiliza el control <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> para insertar datos en la base de datos subyacente.</summary>
        <value>Una cadena de SQL que utiliza el control <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> para insertar datos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> representa una consulta SQL o el nombre de un procedimiento almacenado y se usa por la <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> método.  
  
 Como productos de base de datos diferentes usan variedades diferentes de SQL, la sintaxis de la cadena de SQL depende del proveedor de ADO.NET actual que se está usando, identificado por la propiedad <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>. Si la cadena de SQL es un comando o consulta parametrizado, el marcador de posición del parámetro también depende del proveedor de ADO.NET que se está usando. Por ejemplo, si el proveedor es el <xref:System.Data.SqlClient?displayProperty=nameWithType>, que es el proveedor predeterminado para la <xref:System.Web.UI.WebControls.SqlDataSource> (clase), el marcador de posición del parámetro es `'@parameterName'`. Sin embargo, si el proveedor está establecido en el <xref:System.Data.Odbc?displayProperty=nameWithType> o <xref:System.Data.OleDb?displayProperty=nameWithType>, el marcador de posición del parámetro es `'?'`. Para obtener más información acerca de las consultas SQL con parámetros y comandos, vea [usar parámetros con el SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 La <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> puede ser una cadena SQL o el nombre de un procedimiento almacenado, si el origen de datos admite procedimientos almacenados.  
  
 Esta propiedad se delega a la <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> propiedad de la <xref:System.Web.UI.WebControls.SqlDataSourceView> que está asociada la <xref:System.Web.UI.WebControls.SqlDataSource> control.  
  
> [!IMPORTANT]
>  Por motivos de seguridad, la <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> no se almacena la propiedad está en estado de vista. Dado que es posible descodificar el contenido del estado de vista en el cliente, almacenar información confidencial sobre la estructura de base de datos en la vista estado podría provocar una vulnerabilidad de divulgación de información.  
  
> [!IMPORTANT]
>  Los valores se insertan en parámetros sin validación, lo que puede suponer una amenaza de seguridad. Use la <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> eventos para validar los valores de parámetro antes de ejecutar la consulta. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos de código. El primer ejemplo de código muestra cómo insertar datos en una base de datos mediante el <xref:System.Web.UI.WebControls.SqlDataSource> control y una sencilla página de formularios Web Forms. El segundo ejemplo de código muestra cómo recuperar datos de Microsoft SQL Server y mostrarlo en un <xref:System.Web.UI.WebControls.GridView> control y cómo usar un <xref:System.Web.UI.WebControls.DetailsView> control para ver los detalles de una fila seleccionada en el <xref:System.Web.UI.WebControls.GridView> control y como un formulario para insertar nuevos registros.  
  
> [!NOTE]
>  Estos ejemplos muestran cómo utilizar la sintaxis declarativa para el acceso a datos. Para obtener información acerca de cómo obtener acceso a datos mediante código en lugar de marcado, vea [acceso a datos en Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 En el ejemplo de código siguiente se muestra cómo insertar datos en una base de datos mediante el <xref:System.Web.UI.WebControls.SqlDataSource> control y una sencilla página de formularios Web Forms. Los datos actuales en la tabla de datos se muestran en el <xref:System.Web.UI.WebControls.DropDownList> control. Puede agregar nuevos registros especificando valores en la <xref:System.Web.UI.WebControls.TextBox> controles y, a continuación, haga clic en el **insertar** botón. Cuando el **insertar** se hace clic en el botón, los valores especificados se insertan en la base de datos y el <xref:System.Web.UI.WebControls.DropDownList> se actualiza el control.  
  
> [!IMPORTANT]
>  Este ejemplo incluye un cuadro de texto que acepta datos proporcionados por el usuario, que puede suponer una amenaza de seguridad, y se insertan valores en parámetros sin validación, lo que también puede suponer una amenaza de seguridad. Use la <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> eventos para validar los valores de parámetro antes de ejecutar la consulta. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 En el ejemplo de código siguiente se muestra cómo recuperar datos de SQL Server y mostrarlo en un <xref:System.Web.UI.WebControls.GridView> control y cómo usar un <xref:System.Web.UI.WebControls.DetailsView> control para ver los detalles de una fila seleccionada en el <xref:System.Web.UI.WebControls.GridView> control y como un formulario para insertar nuevos registros.  
  
 Inicialmente, los datos se muestran en la <xref:System.Web.UI.WebControls.GridView> control y la fila seleccionada de la <xref:System.Web.UI.WebControls.GridView> también se muestra en el <xref:System.Web.UI.WebControls.DetailsView> control. El <xref:System.Web.UI.WebControls.GridView> y <xref:System.Web.UI.WebControls.DetailsView> controles utilizan datos diferentes controles de origen; de lo que está asociado el <xref:System.Web.UI.WebControls.DetailsView> tiene la <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> y <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> propiedades, lo que garantiza que la fila seleccionada de la <xref:System.Web.UI.WebControls.GridView> es muestra.  
  
 Si hace clic en el que se han generado automáticamente **insertar** botón de la <xref:System.Web.UI.WebControls.DetailsView> (control), el <xref:System.Web.UI.WebControls.DetailsView> muestra una interfaz de usuario diferente, que se utiliza para insertar un nuevo registro. En el ejemplo se utiliza un procedimiento almacenado para insertar registros y se devuelve la clave principal de la fila insertada. Si inserta un registro, el <xref:System.Web.UI.WebControls.DetailsView> rellena automáticamente el <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> colección con los valores de las columnas enlazadas y llama el <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> método. El <xref:System.Web.UI.WebControls.DetailsView> puede deducir los parámetros correctos desde cualquier <xref:System.Web.UI.WebControls.BoundField> objeto y un parámetro para el <xref:System.Web.UI.WebControls.TemplateField> objeto cuando se utiliza la sintaxis de enlace de datos bidireccional de ASP.NET. En este ejemplo, se agrega un parámetro adicional en el <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> controlador de eventos para controlar la clave principal que es devuelto por el procedimiento almacenado.  
  
 Finalmente, después de insertan datos en la base de datos la <xref:System.Web.UI.WebControls.DetailsView> (control), el <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> se llama controlador de eventos para controlar la <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> se muestra el evento, el valor de la clave principal de la fila insertada y el <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> método de la <xref:System.Web.UI.WebControls.GridView> control se denomina de forma explícita para actualizar los datos.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.InsertCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType InsertCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.InsertCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el texto de la propiedad <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />, es una instrucción SQL o el nombre de un procedimiento almacenado.</summary>
        <value>Uno de los valores de <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />. El valor predeterminado es <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> propiedad delega en el <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType%2A> propiedad de la <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está asociado el <xref:System.Web.UI.WebControls.SqlDataSource> control.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo recuperar datos de una base de datos de Microsoft SQL Server y mostrarlo en un <xref:System.Web.UI.WebControls.GridView> control. También muestra cómo utilizar un <xref:System.Web.UI.WebControls.DetailsView> control para ver los detalles de una fila seleccionada en el <xref:System.Web.UI.WebControls.GridView> y como un formulario para insertar nuevos registros.  
  
 El <xref:System.Web.UI.WebControls.GridView> control muestra un conjunto de datos y la <xref:System.Web.UI.WebControls.DetailsView> muestra los detalles para una fila determinada. Si hace clic en el que se han generado automáticamente **insertar** botón de la <xref:System.Web.UI.WebControls.DetailsView> (control), el <xref:System.Web.UI.WebControls.DetailsView> muestra una interfaz de usuario diferente, que se utiliza para insertar un nuevo registro. En el ejemplo se utiliza un procedimiento almacenado para insertar registros y se devuelve la clave principal de la fila insertada. El nombre del procedimiento almacenado se establece el <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> propiedad y se identifican como un procedimiento almacenado estableciendo la <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> propiedad a la <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> valor.  
  
 Después de insertan datos en la base de datos la <xref:System.Web.UI.WebControls.DetailsView> (control), el <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> se llama controlador de eventos para controlar la <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> se muestra el evento, el valor de la clave principal de la fila insertada y el <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> método de la <xref:System.Web.UI.WebControls.GridView> control se denomina de forma explícita para actualizar los datos.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Inserted;" />
      <MemberSignature Language="F#" Value="member this.Inserted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Inserted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tiene lugar cuando se termina una operación de inserción.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controlar la <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> eventos para examinar los valores de parámetros de salida una vez completada una operación de inserción. Los parámetros de salida están disponibles en la <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> objeto que está asociado con el evento.  
  
 Para obtener más información sobre el control de eventos, vea [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo recuperar datos de Microsoft SQL Server y mostrarlo en un <xref:System.Web.UI.WebControls.GridView> control y cómo usar un <xref:System.Web.UI.WebControls.DetailsView> control para ver los detalles de una fila seleccionada en el <xref:System.Web.UI.WebControls.GridView> y como un formulario para insertar nuevos registros.  
  
> [!NOTE]
>  En este ejemplo se muestra cómo utilizar la sintaxis declarativa para el acceso a datos. Para obtener información acerca de cómo obtener acceso a datos mediante código en lugar de marcado, vea [acceso a datos en Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 Inicialmente, los datos se muestran en la <xref:System.Web.UI.WebControls.GridView> control y la fila seleccionada de la <xref:System.Web.UI.WebControls.GridView> también se muestra en el <xref:System.Web.UI.WebControls.DetailsView> control. El <xref:System.Web.UI.WebControls.GridView> y <xref:System.Web.UI.WebControls.DetailsView> controles utilizan datos diferentes controles de origen; de lo que está asociado el <xref:System.Web.UI.WebControls.DetailsView> tiene la <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> y <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> propiedades, lo que garantiza que la fila seleccionada de la <xref:System.Web.UI.WebControls.GridView> es muestra.  
  
 Si hace clic en el que se han generado automáticamente **insertar** botón de la <xref:System.Web.UI.WebControls.DetailsView> (control), el <xref:System.Web.UI.WebControls.DetailsView> muestra una interfaz de usuario diferente, que se utiliza para insertar un nuevo registro. En el ejemplo se utiliza un procedimiento almacenado para insertar registros y se devuelve la clave principal de la fila insertada. Si inserta un registro, el <xref:System.Web.UI.WebControls.DetailsView> rellena automáticamente el <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> colección con los valores de las columnas enlazadas y llama el <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> método. El <xref:System.Web.UI.WebControls.DetailsView> puede deducir los parámetros correctos desde cualquier <xref:System.Web.UI.WebControls.BoundField> objeto y un parámetro para el <xref:System.Web.UI.WebControls.TemplateField> objeto cuando se utiliza la sintaxis de enlace de datos bidireccional de ASP.NET. En este ejemplo, se agrega un parámetro adicional en el <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> controlador de eventos para controlar la clave principal que es devuelto por el procedimiento almacenado.  
  
 Finalmente, después de insertan datos en la base de datos la <xref:System.Web.UI.WebControls.DetailsView> (control), el <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> se llama controlador de eventos para controlar la <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> se muestra el evento, el valor de la clave principal de la fila insertada y el <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> método de la <xref:System.Web.UI.WebControls.GridView> control se denomina de forma explícita para actualizar los datos.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Inserting;" />
      <MemberSignature Language="F#" Value="member this.Inserting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Inserting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tiene lugar antes de una operación de inserción.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controlar la <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> eventos para realizar operaciones de inicialización adicionales que son específicas de la aplicación, para validar los valores de parámetros o para cambiar los valores de parámetro antes de la <xref:System.Web.UI.WebControls.SqlDataSource> control realiza la operación de inserción. La conexión al origen de datos subyacente no aún está abierta cuando se llama al delegado de controlador de eventos. Por lo tanto, no se puede cancelar la operación directamente mediante una llamada a la <xref:System.Data.Common.DbCommand.Cancel%2A> método en el <xref:System.Data.Common.DbCommand> objeto expuesto por el <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> propiedad. Sin embargo, puede cancelar la operación de base de datos estableciendo el <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propiedad de la <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> el objeto a `true`.  
  
 Para obtener más información sobre el control de eventos, vea [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo recuperar datos de Microsoft SQL Server y mostrarlo en un <xref:System.Web.UI.WebControls.GridView> control y cómo usar un <xref:System.Web.UI.WebControls.DetailsView> control para ver los detalles de una fila seleccionada en el <xref:System.Web.UI.WebControls.GridView> y como un formulario para insertar nuevos registros.  
  
> [!NOTE]
>  En este ejemplo se muestra cómo utilizar la sintaxis declarativa para el acceso a datos. Para obtener información acerca de cómo obtener acceso a datos mediante código en lugar de marcado, vea [acceso a datos en Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 Inicialmente, los datos se muestran en la <xref:System.Web.UI.WebControls.GridView> control y la fila seleccionada de la <xref:System.Web.UI.WebControls.GridView> también se muestra en el <xref:System.Web.UI.WebControls.DetailsView> control. El <xref:System.Web.UI.WebControls.GridView> y <xref:System.Web.UI.WebControls.DetailsView> controles utilizan datos diferentes controles de origen; de lo que está asociado el <xref:System.Web.UI.WebControls.DetailsView> tiene la <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> y <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> propiedades, lo que garantiza que la fila seleccionada de la <xref:System.Web.UI.WebControls.GridView> es muestra.  
  
 Si hace clic en el que se han generado automáticamente **insertar** botón de la <xref:System.Web.UI.WebControls.DetailsView> (control), el <xref:System.Web.UI.WebControls.DetailsView> muestra una interfaz de usuario diferente, que se utiliza para insertar un nuevo registro. En el ejemplo se utiliza un procedimiento almacenado para insertar registros y se devuelve la clave principal de la fila insertada. Si inserta un registro, el <xref:System.Web.UI.WebControls.DetailsView> rellena automáticamente el <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> colección con los valores de las columnas enlazadas y llama el <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> método. El <xref:System.Web.UI.WebControls.DetailsView> puede deducir los parámetros correctos desde cualquier <xref:System.Web.UI.WebControls.BoundField> objeto y un parámetro para el <xref:System.Web.UI.WebControls.TemplateField> cuando se usa la sintaxis de enlace de datos bidireccional de ASP.NET. En este ejemplo, se agrega un parámetro adicional en el <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> controlador de eventos para controlar la clave principal que es devuelto por el procedimiento almacenado.  
  
 Finalmente, después de insertan datos en la base de datos la <xref:System.Web.UI.WebControls.DetailsView> (control), el <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> se llama controlador de eventos para controlar la <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> se muestra el evento, el valor de la clave principal de la fila insertada y el `DataBind` método de la <xref:System.Web.UI.WebControls.GridView> control se denomina de forma explícita para actualizar los datos.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la colección de parámetros que contiene los parámetros utilizados por la propiedad <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> desde el objeto <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> asociado con el control <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> que contiene los parámetros utilizados por la propiedad <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> propiedad recupera la <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> propiedad que está contenida en el <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está asociado el <xref:System.Web.UI.WebControls.SqlDataSource> control.  
  
 Si el <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> propiedad contiene una consulta SQL con parámetros, el <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> colección contiene cualquier <xref:System.Web.UI.WebControls.Parameter> objetos que corresponden a los marcadores de posición de parámetro en la cadena de SQL.  
  
 Dependiendo del proveedor ADO.NET, el orden de los parámetros en el <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> colección podría ser importante. El <xref:System.Data.OleDb?displayProperty=nameWithType> y <xref:System.Data.Odbc?displayProperty=nameWithType> proveedores asocian los parámetros de la colección según el orden en que aparecen los parámetros en la consulta SQL con parámetros. El <xref:System.Data.SqlClient?displayProperty=nameWithType> proveedor, que es el proveedor ADO.NET predeterminado para el <xref:System.Web.UI.WebControls.SqlDataSource> controlar, asocia los parámetros de la colección que coincide con el nombre del parámetro con un alias de marcador de posición en la consulta SQL. Para obtener más información acerca de las consultas SQL con parámetros y comandos, vea [usar parámetros con el SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
> [!IMPORTANT]
>  Los valores se insertan en parámetros sin validación, lo que puede suponer una amenaza de seguridad. Use la <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> eventos para validar los valores de parámetro antes de ejecutar la consulta. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo insertar datos en una base de datos mediante el <xref:System.Web.UI.WebControls.SqlDataSource> control y una sencilla página de formularios Web Forms. Los datos actuales en la tabla de datos se muestran en el <xref:System.Web.UI.WebControls.DropDownList> control. Puede agregar nuevos registros especificando valores en la <xref:System.Web.UI.WebControls.TextBox> controles y, a continuación, haga clic en el **insertar** botón. Cuando el **insertar** se hace clic en el botón, los valores especificados se insertan en la base de datos y el <xref:System.Web.UI.WebControls.DropDownList> se actualiza el control.  
  
> [!IMPORTANT]
>  Este ejemplo incluye un cuadro de texto que acepta datos proporcionados por el usuario, que puede suponer una amenaza de seguridad, y se insertan valores en parámetros sin validación, lo que también puede suponer una amenaza de seguridad. Use la <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> eventos para validar los valores de parámetro antes de ejecutar la consulta. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
> [!NOTE]
>  En este ejemplo se muestra cómo utilizar la sintaxis declarativa para el acceso a datos. Para obtener información acerca de cómo obtener acceso a datos mediante código en lugar de marcado, vea [acceso a datos en Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="sqlDataSource.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Objeto que representa el estado del objeto <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</param>
        <summary>Carga el estado de las propiedades del control <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> que necesitan conservarse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.SqlDataSource.LoadViewState%2A> método se usa para cargar el estado de vista previamente guardado de la <xref:System.Web.UI.WebControls.SqlDataSource> control.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OldValuesParameterFormatString : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una cadena de formato para aplicar a los nombres de cualquier parámetro que se pase al método <see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /> o <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />.</summary>
        <value>Una cadena que representa una cadena de formato aplicada a los nombres de cualquier parámetro <paramref name="oldValues" /> pasado a los métodos <see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /> o <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />. El valor predeterminado es "{0}".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> cadena de formato se aplica solo a las claves principales, como las que se identifican por la `DataKeyNames` propiedad del control enlazado a datos asociado, o en eliminar y actualizar los escenarios donde el <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> propiedad está establecida en el <xref:System.Web.UI.ConflictOptions.CompareAllValues>valor y un conjunto de `oldValues` se pasan al método de datos correspondiente. En este caso, la cadena de formato se aplica a cada nombre de parámetro en el `oldValues` colección.  
  
 Dos escenarios comunes donde podría cambiar la <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> propiedad son los siguientes:  
  
-   Para diferenciar entre valores antiguos y nuevos en actualizaciones. Cuando el <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> propiedad está establecida en el <xref:System.Web.UI.ConflictOptions.CompareAllValues> valor parámetros para los valores originales y los nuevos se agregan a la <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> colección. Sin la cadena de formato, se crearían dos parámetros con el mismo nombre para cada campo de datos. Al cambiar el nombre del parámetro del valor original, puede comparar los datos al origen de datos original para detectar conflictos y comparar valores de clave.  
  
-   Algunos diseñadores visuales implementan un esquema de nomenclatura determinado para las claves y los valores originales.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="sqlDataSource.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Agrega un controlador de eventos <see cref="E:System.Web.UI.Page.LoadComplete" /> al control <see cref="T:System.Web.UI.Page" /> que contiene el control <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El controlador de eventos que se agrega mediante la <xref:System.Web.UI.WebControls.SqlDataSource> objeto actualizaciones el <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> y <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> valores. Si se actualizan los valores, el <xref:System.Web.UI.IDataSource.DataSourceChanged> se genera el evento, haciendo que todos los controles que están enlazados a la <xref:System.Web.UI.WebControls.SqlDataSource> control volver a enlazar.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public virtual string ProviderName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ProviderName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProviderName : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.ProviderName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.WebControls.DataProviderNameConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre del proveedor de datos de .NET Framework que utiliza el control <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> para conectar a un origen de datos subyacente.</summary>
        <value>El nombre del proveedor de datos que utiliza el control <see cref="T:System.Web.UI.WebControls.SqlDataSource" />; de lo contrario, el proveedor de ADO.NET para Microsoft SQL Server, si no se establece ningún proveedor. El valor predeterminado es el proveedor de ADO.NET para Microsoft SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework incluye los proveedores de datos siguientes:  
  
-   El <xref:System.Data.SqlClient?displayProperty=nameWithType> proveedor es el proveedor de datos de .NET Framework para SQL Server de forma predeterminada.  
  
-   El <xref:System.Data.OleDb?displayProperty=nameWithType> proveedor es el proveedor de datos de .NET Framework para OLE DB.  
  
-   El <xref:System.Data.Odbc?displayProperty=nameWithType> proveedor es el proveedor de datos de .NET Framework para ODBC.  
  
-   El <xref:System.Data.OracleClient?displayProperty=nameWithType> proveedor es el proveedor de datos de .NET Framework para Oracle.  
  
 El <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> propiedad nunca se establece en el nombre de un proveedor ADO.NET no administrado, como `MSDAORA`. Para obtener más información, consulte [selección de datos mediante el SqlDataSource Control](http://msdn.microsoft.com/library/44623286-ff5a-4148-8a3c-85c56ed545eb).  
  
 Si cambia la <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> propiedad, el <xref:System.Web.UI.IDataSource.DataSourceChanged> se genera el evento, haciendo que todos los controles que están enlazados a la <xref:System.Web.UI.WebControls.SqlDataSource> volver a enlazar.  
  
 Se especifica una lista de proveedores disponibles en el `DbProviderFactories` de la subsección de la `system.data` sección del archivo Machine.config.  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos de código. El primer código muestra cómo conectarse a una base de datos de SQL Server con el valor predeterminado el proveedor de datos de .NET Framework para SQL Server para la <xref:System.Web.UI.WebControls.SqlDataSource> (control), el <xref:System.Data.SqlClient?displayProperty=nameWithType>. El segundo ejemplo de código muestra cómo conectarse a una base de datos ODBC utilizando el proveedor de datos de .NET Framework para ODBC, el <xref:System.Data.Odbc?displayProperty=nameWithType>.  
  
 En el ejemplo de código siguiente se muestra cómo conectarse a una base de datos de SQL Server mediante el proveedor de datos predeterminado para la <xref:System.Web.UI.WebControls.SqlDataSource> (control), el <xref:System.Data.SqlClient?displayProperty=nameWithType>. Cada vez que la <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> propiedad no se establece explícitamente, se utiliza el proveedor predeterminado. El <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> propiedad es específica del proveedor.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/CS/sql1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/VB/sql1vb.aspx#1)]  
  
 El ejemplo de código siguiente, que es funcionalmente el mismo que el ejemplo de código anterior, muestra cómo conectarse a una base de datos ODBC utilizando el proveedor de datos de .NET Framework para ODBC, el <xref:System.Data.Odbc?displayProperty=nameWithType>. El <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> propiedad se establece en el nombre de un nombre de origen de datos ODBC (DSN) que se usa para conectarse a la base de datos ODBC.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_1odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1odbc/CS/odbc1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_1odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1odbc/VB/odbc1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="sqlDataSource.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Guarda el estado de vista actual del control <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <returns>Un objeto que contiene el estado guardado de <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="member this.Select : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="sqlDataSource.Select arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">Objeto <see cref="T:System.Web.UI.DataSourceSelectArguments" /> que se utiliza para solicitar operaciones con los datos, a parte de la recuperación básica de datos.</param>
        <summary>Recupera los datos de la base de datos subyacente utilizando la cadena SQL <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> y cualquier parámetro que esté en la colección <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />.</summary>
        <returns>Lista <see cref="T:System.Collections.IEnumerable" /> de filas de datos.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método se invoca automáticamente durante la <xref:System.Web.UI.Control.PreRender> fase del ciclo de vida de página. Se llama a los controles enlazados a datos que se han adjuntado a un <xref:System.Web.UI.WebControls.SqlDataSource> controlar a través de sus <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> propiedad.  
  
 El <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> método devuelve un <xref:System.Data.DataView> objeto si el <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> propiedad está establecida en el <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> valor. El <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> método devuelve un <xref:System.Data.IDataReader> objeto si el <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> propiedad está establecida en el <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> valor. Cerrar la <xref:System.Data.IDataReader> cuando termine de leer los datos del objeto.  
  
 Antes de la <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> se realiza la operación, el <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> se llama al método para provocar el <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> eventos. Puede controlar este evento para examinar los valores de los parámetros y realizar cualquier procesamiento antes de la <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operación.  
  
 Después de la <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operación se completa, el <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> se llama al método para provocar el <xref:System.Web.UI.WebControls.SqlDataSource.Selected> eventos. Puede controlar este evento para examinar los valores devueltos y los códigos de error y realizar cualquier procesamiento posterior.  
  
 Si el <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> propiedad está establecida en <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet?displayProperty=nameWithType> y almacenamiento en caché está habilitado, el <xref:System.Web.UI.WebControls.SqlDataSource> objeto recupera los datos y guarda los datos en la memoria caché durante el <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operación. La memoria caché se crea, descarta o se actualiza en función del comportamiento de almacenamiento en caché que se especifica mediante la combinación de la <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> y <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> propiedades.  
  
> [!IMPORTANT]
>  Cuando se utiliza la suplantación del cliente en la autenticación de Microsoft Windows, los datos se almacena en caché cuando el primer usuario tiene acceso a los datos. Si otro usuario solicita los mismos datos, los datos se recuperan de la memoria caché. No se recuperan los datos realizando otra llamada a la base de datos para comprobar el acceso del usuario a los datos. Si espera que más de un usuario para tener acceso a los datos y desea que cada recuperación de datos que debe comprobar las configuraciones de seguridad para la base de datos, no utilice el almacenamiento en caché.  
  
 Si el <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> propiedad está establecida en <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet?displayProperty=nameWithType> y un <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> se ha especificado la propiedad, la expresión de filtro se evalúa con cualquier proporcionado <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> propiedades y el filtro resultante se aplica a la lista de datos durante la <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>operación.  
  
 El <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método delega en el <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> método de la <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está asociado el <xref:System.Web.UI.WebControls.SqlDataSource> control. Para realizar una operación de recuperación de datos, el <xref:System.Web.UI.WebControls.SqlDataSourceView> genera un <xref:System.Data.Common.DbCommand> objeto mediante el uso de la <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> texto y cualquier asociado <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> , los valores y, a continuación, ejecuta el <xref:System.Data.Common.DbCommand> en la base de datos subyacente.  
  
> [!IMPORTANT]
>  Los valores se insertan en parámetros sin validación, lo que puede suponer una amenaza de seguridad. Use la <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> eventos para validar los valores de parámetro antes de ejecutar la consulta. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Los ejemplos siguientes muestran cómo llamar mediante programación a la <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método y establecer valores en función del resultado de la consulta. En el ejemplo siguiente se muestra el código declarativo para los controles Web.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource.Select#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource.Select#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/VB/Default.aspx#1)]  
  
 En el ejemplo siguiente se muestra cómo llamar mediante programación a la <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método. El <xref:System.Web.UI.WebControls.SqlDataSource> control devuelve un entero. El valor del entero se usa para establecer el texto de un <xref:System.Web.UI.WebControls.Label> control y para determinar si se debe mostrar un <xref:System.Web.UI.WebControls.HyperLink> control.  
  
 [!code-csharp[System.Web.UI.WebControls.SqlDataSource.Select#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.SqlDataSource.Select#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/VB/Default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El objeto <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> no puede establecer una conexión con el origen de datos subyacente.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public string SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la cadena de SQL que utiliza el control <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> para recuperar datos de la base de datos subyacente.</summary>
        <value>Cadena de SQL o nombre de un procedimiento almacenado que <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> utiliza para recuperar los datos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> propiedad representa una consulta SQL o el nombre de un procedimiento almacenado y se usa por la <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método para recuperar datos de una base de datos de SQL Server. Si es usar un asterisco (*) en el comando Select para seleccionar todas las columnas y, si utiliza generación automática de código para realizar la actualización o eliminación de operaciones, asegúrese de que ninguna columna tiene espacios en sus nombres.  
  
 Como productos de base de datos diferentes usan variedades diferentes de SQL, la sintaxis de la cadena de SQL depende del proveedor de ADO.NET actual que se está usando, identificado por la propiedad <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>. Si la cadena de SQL es un comando o consulta parametrizado, el marcador de posición del parámetro también depende del proveedor de ADO.NET que se está usando. Por ejemplo, si el proveedor es el <xref:System.Data.SqlClient?displayProperty=nameWithType>, que es el proveedor predeterminado para la <xref:System.Web.UI.WebControls.SqlDataSource> (clase), el marcador de posición del parámetro es `'@parameterName'`. Sin embargo, si el proveedor está establecido en el <xref:System.Data.Odbc?displayProperty=nameWithType> o <xref:System.Data.OleDb?displayProperty=nameWithType>, el marcador de posición del parámetro es `'?'`. Para obtener más información acerca de las consultas SQL con parámetros y comandos, vea [usar parámetros con el SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 El <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> propiedad puede ser una cadena SQL o el nombre de un procedimiento almacenado, si el origen de datos admite procedimientos almacenados.  
  
 El <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> propiedad delega en el <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> propiedad de la <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está asociado el <xref:System.Web.UI.WebControls.SqlDataSource> control.  
  
> [!IMPORTANT]
>  Por motivos de seguridad, la <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> no se almacena la propiedad está en estado de vista. Dado que es posible descodificar el contenido del estado de vista en el cliente, almacenar información confidencial sobre la estructura de base de datos en la vista estado podría provocar una vulnerabilidad de divulgación de información.  
  
> [!IMPORTANT]
>  Los valores se insertan en parámetros sin validación, lo que puede suponer una amenaza de seguridad. Use la <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> eventos para validar los valores de parámetro antes de ejecutar la consulta. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos de código. El primer ejemplo de código muestra cómo establecer el <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> texto en una consulta SQL básica para recuperar datos de una base de datos compatible con ODBC y mostrarlo en un <xref:System.Web.UI.WebControls.GridView> control. El segundo ejemplo de código muestra cómo establecer el <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> texto para el nombre de un procedimiento almacenado y el <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> propiedad a la <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> valor para recuperar datos de una base de datos de Microsoft SQL Server y mostrarlo en un <xref:System.Web.UI.WebControls.DropDownList> control.  
  
 En ambos ejemplos, no es necesario llamar explícitamente a la <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método porque los controles enlazados a datos que están conectados al origen de datos se controlan a través de la <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> propiedad llamará automáticamente el <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> método durante la <xref:System.Web.UI.Control.PreRender> fase.  
  
 En el ejemplo de código siguiente se muestra cómo establecer el <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> texto en una consulta SQL básica para recuperar datos de una base de datos compatible con ODBC y mostrarlo en un <xref:System.Web.UI.WebControls.GridView> control.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_4odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_4odbc/CS/odbc4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_4odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_4odbc/VB/odbc4vb.aspx#1)]  
  
 En el ejemplo de código siguiente se muestra cómo establecer el <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> texto para el nombre de un procedimiento almacenado y el <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> propiedad a la <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> valor para recuperar datos de una base de datos de SQL Server y mostrarlo en un <xref:System.Web.UI.WebControls.DropDownList> control. El <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> propiedad puede ser una consulta SQL o el nombre de un procedimiento almacenado, si el origen de datos admite procedimientos almacenados.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SelectCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType SelectCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.SelectCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el texto de la propiedad <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />, es una consulta SQL o el nombre de un procedimiento almacenado.</summary>
        <value>Uno de los valores de <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />. El valor predeterminado es <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> propiedad delega en el <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType%2A> propiedad de la <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está asociado el <xref:System.Web.UI.WebControls.SqlDataSource> control.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo establecer el <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> texto para el nombre de un procedimiento almacenado y el <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> propiedad a la <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> valor, con el fin de recuperar datos de una base de datos de Microsoft SQL Server y mostrarlo en un <xref:System.Web.UI.WebControls.DropDownList> control.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Selected;" />
      <MemberSignature Language="F#" Value="member this.Selected : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Selected : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tiene lugar cuando se termina una operación de recuperación de datos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controlar la <xref:System.Web.UI.WebControls.SqlDataSource.Selected> eventos para examinar los valores de parámetros de salida una vez completada una operación de recuperación de datos. Los parámetros de salida están disponibles en la <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> objeto que está asociado con el evento.  
  
 Para obtener más información sobre el control de eventos, vea [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As SqlDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberSignature Language="F#" Value="member this.Selecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler " Usage="member this.Selecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tiene lugar antes de una operación de recuperación de datos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controlar la <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> eventos para realizar operaciones de inicialización adicionales que son específicas de la aplicación, para validar los valores de parámetros o para cambiar los valores de parámetro antes de la <xref:System.Web.UI.WebControls.SqlDataSource> control realiza la operación de selección. Los argumentos de selección están disponibles desde el <xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs> objeto que está asociado con el evento.  
  
 Para obtener más información sobre el control de eventos, vea [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la colección de parámetros que contiene los parámetros utilizados por la propiedad <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> desde el objeto <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> asociado con el control <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> que contiene los parámetros utilizados por la propiedad <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> propiedad contiene una consulta SQL con parámetros, el <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> colección contiene cualquier <xref:System.Web.UI.WebControls.Parameter> objetos que corresponden a los marcadores de posición de parámetro en la cadena de SQL.  
  
 Dependiendo del proveedor ADO.NET, el orden de los parámetros en el <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> colección podría ser importante. El <xref:System.Data.OleDb?displayProperty=nameWithType> y <xref:System.Data.Odbc?displayProperty=nameWithType> proveedores asocian los parámetros de la colección según el orden en que aparecen los parámetros en la consulta SQL con parámetros. El <xref:System.Data.SqlClient?displayProperty=nameWithType> proveedor, que es el proveedor ADO.NET predeterminado para el <xref:System.Web.UI.WebControls.SqlDataSource> controlar, asocia los parámetros de la colección que coincide con el nombre del parámetro con un alias de marcador de posición en la consulta SQL. Para obtener más información acerca de las consultas SQL con parámetros y comandos, vea [usar parámetros con el SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 El <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> propiedad recupera la <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> propiedad que está contenida en el <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está asociado el <xref:System.Web.UI.WebControls.SqlDataSource> control.  
  
> [!IMPORTANT]
>  Los valores se insertan en parámetros sin validación, lo que puede suponer una amenaza de seguridad. Use la <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> eventos para validar los valores de parámetro antes de ejecutar la consulta. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo recuperar datos de la base de datos Northwind de Microsoft SQL Server estableciendo la <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> propiedad a una consulta SQL. La consulta SQL se parametriza y el marcador de posición en la <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> propiedad se asocia a la <xref:System.Web.UI.WebControls.ControlParameter> objeto que se agrega a la <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> colección. El <xref:System.Web.UI.WebControls.DropDownList> controlar qué la <xref:System.Web.UI.WebControls.ControlParameter> está enlazado a, actúa como un filtro para lo que se muestra en el <xref:System.Web.UI.WebControls.ListBox> control.  
  
 Para obtener información acerca de otros tipos de parámetros que puede utilizar, consulte la <xref:System.Web.UI.WebControls.Parameter> Introducción a la clase.  
  
> [!NOTE]
>  Dado que el parámetro se usa en una cláusula WHERE, el uso de la <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> propiedad en el ejemplo de código es funcionalmente equivalente a utilizar el <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> y <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> propiedades.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/CS/sql2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/VB/sql2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SortParameterName : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.SortParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre de un parámetro de procedimiento almacenado que se usa para ordenar los datos recuperados cuando la recuperación de datos se realiza mediante un procedimiento almacenado.</summary>
        <value>Nombre de un parámetro de procedimiento almacenado que se usa para ordenar los datos recuperados cuando la recuperación de datos se realizar mediante un procedimiento almacenado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> propiedad se evalúa solo al comando que es la instrucción SQL contiene el <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> propiedad es el nombre de un procedimiento almacenado. En este caso, si la <xref:System.Web.UI.WebControls.SqlDataSource.SortParameterName%2A> propiedad está establecida, contiene el nombre de un parámetro que se usa para ordenar los resultados del procedimiento almacenado.  
  
 Si el <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> propiedad está establecida, se antepone a la <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SqlCacheDependency">
      <MemberSignature Language="C#" Value="public virtual string SqlCacheDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SqlCacheDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SqlCacheDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SqlCacheDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SqlCacheDependency : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una cadena delimitada por puntos y comas que indica las bases de datos y las tablas que deben utilizarse para la dependencia de caché de Microsoft SQL Server.</summary>
        <value>Cadena que indica las bases de datos y las tablas que deben utilizarse para la dependencia de caché de SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.SqlDataSource> control es compatible con una directiva de expiración opcional basada en la <xref:System.Web.Caching.SqlCacheDependency> objeto para la caché de datos (el servicio debe configurarse para el servidor de base de datos).  
  
 El <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> cadena identifica las bases de datos y tablas de acuerdo con el mismo formato que usa el `@ Page` directiva, donde la primera parte de la cadena es una cadena de conexión a una base de datos de Microsoft SQL Server, seguida por un delimitador de dos puntos, y Por último, el nombre de la tabla de base de datos (por ejemplo, `"connectionstring1:table1"`). Si el <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> propiedad depende de más de una tabla, los pares de nombre de tabla de cadenas de conexión están separados por punto y coma (por ejemplo, `"connectionstring1:table1";connectionstring2:table2"`).  
  
> [!IMPORTANT]
>  Cuando se utiliza la suplantación del cliente en la autenticación de Microsoft Windows, los datos se almacena en caché cuando el primer usuario tiene acceso a los datos. Si otro usuario solicita los mismos datos, los datos se recuperan de la memoria caché. No se recuperan los datos realizando otra llamada a la base de datos para comprobar el acceso del usuario a los datos. Si espera que más de un usuario para tener acceso a los datos y desea que cada recuperación en los datos que debe comprobar las configuraciones de seguridad para la base de datos, no utilice el almacenamiento en caché.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear una dependencia de caché de SQL Server y establecer la <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> propiedad de un <xref:System.Web.UI.WebControls.SqlDataSource> control. En este ejemplo, la base de datos se sondea cada 120 segundos. Si los datos de los empleados de Northwind Traders tabla cambian durante el que vez, los datos que se almacena en caché por la <xref:System.Web.UI.WebControls.SqlDataSource> controlar y mostrar el <xref:System.Web.UI.WebControls.GridView> control se actualiza de forma el <xref:System.Web.UI.WebControls.SqlDataSource> controlar la próxima vez que se sondea la base de datos.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_23sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_23sql/CS/sql23cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_23sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_23sql/VB/sql23vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="sqlDataSource.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Efectúa el seguimiento de los cambios en el estado de vista del control <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> para poder almacenarlos en el objeto <see cref="T:System.Web.UI.StateBag" /> del control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.SqlDataSource.TrackViewState%2A> método se invalida para marcar el punto de partida para comenzar el seguimiento y guardar cambios en el control como parte del estado de vista para el control.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Update" />
      <MemberSignature Language="VB.NET" Value="Public Function Update () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; int" Usage="sqlDataSource.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Realiza una operación de actualización mediante la cadena SQL <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> SQL y cualquier parámetro que esté en la colección <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />.</summary>
        <returns>Valor que representa el número de filas actualizadas en la base de datos subyacente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> llama automáticamente a método la <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, y <xref:System.Web.UI.WebControls.FormView> controla durante la devolución de datos si se ha cambiado los datos. Para los datos que se ha cambiado en otros controles, el <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> método se puede llamar explícitamente en la devolución de datos durante la <xref:System.Windows.Forms.Form.Load> eventos.  
  
 Antes de la <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> se realiza la operación, el <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> se llama al método para provocar el <xref:System.Web.UI.WebControls.SqlDataSource.Updating> eventos. Puede controlar este evento para examinar los valores de los parámetros y realice algún preprocesamiento antes de realizar una <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> operación.  
  
 Después de la <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> operación se completa, el <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> se llama al método para provocar el <xref:System.Web.UI.WebControls.SqlDataSource.Updated> eventos. Puede controlar este evento para examinar los valores devueltos y los códigos de error y realizar cualquier procesamiento posterior.  
  
 El <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> método delega en el <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> método de la <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está asociado el <xref:System.Web.UI.WebControls.SqlDataSource> control. Para realizar una operación de actualización, el <xref:System.Web.UI.WebControls.SqlDataSourceView> genera un <xref:System.Data.Common.DbCommand> objeto mediante el <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> texto y cualquier asociado <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> propiedades y, a continuación, ejecuta el <xref:System.Data.Common.DbCommand> objeto en la base de datos subyacente.  
  
> [!IMPORTANT]
>  Los valores se insertan en parámetros sin validación, lo que puede suponer una amenaza de seguridad. Use la <xref:System.Web.UI.WebControls.SqlDataSource.Updating> eventos para validar los valores de parámetro antes de ejecutar la consulta. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos de código. El primer ejemplo de código muestra cómo utilizar un <xref:System.Web.UI.WebControls.SqlDataSource> control para mostrar datos en un <xref:System.Web.UI.WebControls.DropDownList> control y actualizar los datos cuando el **enviar** se hace clic en el botón. El segundo ejemplo de código muestra cómo mostrar los datos que se recuperan de una base de datos de Microsoft SQL Server en un <xref:System.Web.UI.WebControls.DropDownList> controlar y actualizar el registro mediante un <xref:System.Web.UI.WebControls.TextBox> control.  
  
 En el ejemplo de código siguiente se muestra cómo utilizar un <xref:System.Web.UI.WebControls.SqlDataSource> control para mostrar datos en un <xref:System.Web.UI.WebControls.DropDownList> control y actualizar los datos cuando el **enviar** se hace clic en el botón. El <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> propiedad se establece con una instrucción SQL parametrizada y dos <xref:System.Web.UI.WebControls.ControlParameter> parámetros se agregan a la <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> colección. Cuando el **enviar** se hace clic en el botón, el <xref:System.Web.UI.WebControls.Button.OnClick%2A> evento está controlado para llamar a la <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> método explícitamente.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 En el ejemplo de código siguiente se muestra cómo mostrar los datos que se recuperan de una base de datos de SQL Server en un <xref:System.Web.UI.WebControls.DropDownList> controlar y actualizar el registro mediante un <xref:System.Web.UI.WebControls.TextBox> control. En el ejemplo se muestra cómo puede utilizar un <xref:System.Data.Common.DbTransaction> objeto que se va a agregar el contexto de transacción cuando se usa el <xref:System.Web.UI.WebControls.SqlDataSource> control para actualizar los datos.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El control <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> no puede establecer una conexión con el origen de datos subyacente.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public string UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la cadena de SQL que utiliza el control <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> para actualizar datos en la base de datos subyacente.</summary>
        <value>Una cadena de SQL que utiliza el control <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> para actualizar datos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> representa una consulta SQL o el nombre de un procedimiento almacenado y se usa por la <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> método.  
  
 Como productos de base de datos diferentes usan variedades diferentes de SQL, la sintaxis de la cadena de SQL depende del proveedor de ADO.NET actual que se está usando, identificado por la propiedad <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>. Si la cadena de SQL es un comando o consulta parametrizado, el marcador de posición del parámetro también depende del proveedor de ADO.NET que se está usando. Por ejemplo, si el proveedor es el <xref:System.Data.SqlClient?displayProperty=nameWithType>, que es el proveedor predeterminado para la <xref:System.Web.UI.WebControls.SqlDataSource> (clase), el marcador de posición del parámetro es `'@parameterName'`. Sin embargo, si el proveedor está establecido en el <xref:System.Data.Odbc?displayProperty=nameWithType> o <xref:System.Data.OleDb?displayProperty=nameWithType>, el marcador de posición del parámetro es `'?'`. Para obtener más información acerca de las consultas SQL con parámetros y comandos, vea [usar parámetros con el SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 El <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> propiedad puede ser una cadena SQL o el nombre de un procedimiento almacenado, si el origen de datos admite procedimientos almacenados.  
  
 El <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> propiedad delega en el <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> propiedad de la <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está asociado el <xref:System.Web.UI.WebControls.SqlDataSource> control.  
  
> [!IMPORTANT]
>  Por motivos de seguridad, la <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> no se almacena la propiedad está en estado de vista. Dado que es posible descodificar el contenido del estado de vista en el cliente, almacenar información confidencial sobre la estructura de base de datos en la vista estado podría provocar una vulnerabilidad de divulgación de información.  
  
> [!IMPORTANT]
>  Los valores se insertan en parámetros sin validación, lo que puede suponer una amenaza de seguridad. Use la <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> eventos para validar los valores de parámetro antes de ejecutar la consulta. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos de código. El primer ejemplo de código muestra cómo establecer el <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> propiedad de la <xref:System.Web.UI.WebControls.SqlDataSource> control y actualizar los datos en una base de datos de Microsoft SQL Server mediante el <xref:System.Web.UI.WebControls.GridView> control. El segundo ejemplo de código muestra cómo actualizar datos en una base de datos ODBC mediante el <xref:System.Web.UI.WebControls.GridView> control.  
  
 En el ejemplo de código siguiente se muestra cómo establecer el <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> propiedad de la <xref:System.Web.UI.WebControls.SqlDataSource> control y actualizar los datos en una base de datos de SQL Server mediante el <xref:System.Web.UI.WebControls.GridView> control. El <xref:System.Web.UI.WebControls.GridView> rellena automáticamente el <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> colección, deducir los parámetros de la <xref:System.Web.UI.WebControls.BoundField> objetos y llama a la <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> método cuando el **actualización** vínculo en el editable<xref:System.Web.UI.WebControls.GridView>está seleccionada. En este ejemplo también incluye algún procesamiento posterior: después de actualiza un registro, se envía un mensaje de correo electrónico de notificación.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/CS/sql7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/VB/sql7vb.aspx#1)]  
  
 El ejemplo de código siguiente, que es funcionalmente idéntico al ejemplo de código anterior, muestra cómo actualizar datos en una base de datos ODBC mediante el <xref:System.Web.UI.WebControls.GridView> control. El <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> se establece en el proveedor ADO.NET para ODBC, el <xref:System.Data.Odbc?displayProperty=nameWithType>y el <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> propiedad se establece en el nombre de un nombre de origen de datos ODBC (DSN).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType UpdateCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.UpdateCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el texto de la propiedad <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />, es una instrucción SQL o el nombre de un procedimiento almacenado.</summary>
        <value>Uno de los valores de <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />. El valor predeterminado es <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType%2A> propiedad delega en el <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType%2A> propiedad de la <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está asociado el <xref:System.Web.UI.WebControls.SqlDataSource> control.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Updated : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tiene lugar cuando se termina una operación de actualización.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controlar la <xref:System.Web.UI.WebControls.SqlDataSource.Updated> eventos para examinar los valores de parámetros de salida una vez completada una operación de actualización. Los parámetros de salida están disponibles en la <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> objeto que está asociado con el evento.  
  
 Para obtener más información sobre el control de eventos, vea [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo mostrar y actualizar los datos que se recuperan de una base de datos ODBC en un <xref:System.Web.UI.WebControls.GridView> control. Después de actualizar correctamente un registro, el <xref:System.Web.UI.WebControls.SqlDataSource.Updated> evento está controlado por un controlador de eventos para realizar un paso posterior al procesamiento que se envía una notificación por correo electrónico.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la colección de parámetros que contiene los parámetros utilizados por la propiedad <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> desde el objeto <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> asociado con el control <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> que contiene los parámetros utilizados por la propiedad <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> propiedad contiene una consulta SQL con parámetros, el <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> colección contiene cualquier <xref:System.Web.UI.WebControls.Parameter> objetos que corresponden a los marcadores de posición de parámetro en la cadena de SQL.  
  
 Nombres de parámetro podrían verse afectados por la <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> propiedad, específicamente si el nombre identifica una clave principal, como una clave especificada utilizando el `DataKeyNames` propiedad del control enlazado a datos o en eliminar y actualizar los escenarios donde el <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> propiedad está establecida en el <xref:System.Web.UI.ConflictOptions.CompareAllValues> valor y un conjunto de `oldValues` se pasan al método de datos correspondiente. En este caso, la cadena de formato se aplica a cada nombre de parámetro en el `oldValues` colección.  
  
 El orden de los parámetros en el <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> colección podría ser importante, en función del proveedor ADO.NET. El <xref:System.Data.OleDb?displayProperty=nameWithType> y <xref:System.Data.Odbc?displayProperty=nameWithType> proveedores asocian los parámetros de la colección según el orden en que aparecen los parámetros en la consulta SQL con parámetros. El <xref:System.Data.SqlClient?displayProperty=nameWithType> proveedor, que es el proveedor ADO.NET predeterminado para el <xref:System.Web.UI.WebControls.SqlDataSource> controlar, asocia los parámetros de la colección que coincide con el nombre del parámetro con un alias de marcador de posición en la consulta SQL. Para obtener más información acerca de las consultas SQL con parámetros y comandos, vea [usar parámetros con el SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 El <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> propiedad recupera la <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> propiedad que está contenida en el <xref:System.Web.UI.WebControls.SqlDataSourceView> objeto que está asociado el <xref:System.Web.UI.WebControls.SqlDataSource> control.  
  
> [!IMPORTANT]
>  Los valores se insertan en parámetros sin validación, lo que puede suponer una amenaza de seguridad. Use la <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> eventos para validar los valores de parámetro antes de ejecutar la consulta. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar un <xref:System.Web.UI.WebControls.SqlDataSource> control para mostrar datos en un <xref:System.Web.UI.WebControls.DropDownList> control y actualizar los datos cuando el **enviar** se hace clic en el botón. El <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> se establece con una instrucción SQL parametrizada y dos <xref:System.Web.UI.WebControls.ControlParameter> parámetros se agregan a la <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> colección. Cuando el **enviar** se hace clic en el botón, el <xref:System.Web.UI.WebControls.Button.OnClick%2A> evento está controlado para llamar a la <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> método explícitamente.  
  
> [!IMPORTANT]
>  Este ejemplo incluye un cuadro de texto que acepta datos proporcionados por el usuario, que puede suponer una amenaza de seguridad, y se insertan valores en parámetros sin validación, lo que también puede suponer una amenaza de seguridad. Use la <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> eventos para validar los valores de parámetro antes de ejecutar la consulta. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Updating;" />
      <MemberSignature Language="F#" Value="member this.Updating : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Updating : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tiene lugar antes de una operación de actualización.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controlar la <xref:System.Web.UI.WebControls.SqlDataSource.Updating> eventos para realizar operaciones de inicialización adicionales que son específicas de la aplicación, para validar los valores de parámetros o para cambiar los valores de parámetro antes de la <xref:System.Web.UI.WebControls.SqlDataSource> control realiza la operación de actualización. La conexión al origen de datos subyacente no aún está abierta cuando se llama al delegado de controlador de eventos. Por lo tanto, no se puede cancelar directamente la <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> operación de base de datos mediante una llamada a la <xref:System.Data.Common.DbCommand.Cancel%2A> método en el <xref:System.Data.Common.DbCommand> objeto expuesto por la <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> objeto. Sin embargo, puede cancelar la operación de base de datos estableciendo el <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propiedad de la <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> a `true`.  
  
 Para obtener más información sobre el control de eventos, vea [NIB: consumir eventos](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
> [!IMPORTANT]
>  Los valores se insertan en parámetros sin validación, lo que puede suponer una amenaza de seguridad. Use la <xref:System.Web.UI.WebControls.SqlDataSource.Updating> eventos para validar los valores de parámetro antes de ejecutar la consulta. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo mostrar los datos que se recuperan de una base de datos de Microsoft SQL Server en un <xref:System.Web.UI.WebControls.DropDownList> controlar y actualizar el registro mediante un <xref:System.Web.UI.WebControls.TextBox> control. En el ejemplo se muestra cómo puede utilizar un <xref:System.Data.Common.DbTransaction> objeto que se va a agregar el contexto de transacción cuando se usa el <xref:System.Web.UI.WebControls.SqlDataSource> control para actualizar los datos.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      </Docs>
    </Member>
  </Members>
</Type>