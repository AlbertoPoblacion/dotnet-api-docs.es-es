<Type Name="RangeValidator" FullName="System.Web.UI.WebControls.RangeValidator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="15cbaa895e01975d1a712cea81b75077f10ff65a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36379812" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RangeValidator : System.Web.UI.WebControls.BaseCompareValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RangeValidator extends System.Web.UI.WebControls.BaseCompareValidator" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.RangeValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class RangeValidator&#xA;Inherits BaseCompareValidator" />
  <TypeSignature Language="C++ CLI" Value="public ref class RangeValidator : System::Web::UI::WebControls::BaseCompareValidator" />
  <TypeSignature Language="F#" Value="type RangeValidator = class&#xA;    inherit BaseCompareValidator" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseCompareValidator</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:RangeValidator runat="server" ErrorMessage="RangeValidator"&gt;&lt;/{0}:RangeValidator&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Checks whether the value of an input control is within a specified range of values.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.RangeValidator> controlar las pruebas si el valor de un control de entrada está dentro del intervalo especificado.  
  
 El <xref:System.Web.UI.WebControls.RangeValidator> control utiliza cuatro propiedades clave para realizar la validación. El <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> propiedad contiene el control de entrada para validar. El <xref:System.Web.UI.WebControls.RangeValidator.MinimumValue%2A> y <xref:System.Web.UI.WebControls.RangeValidator.MaximumValue%2A> propiedades especifican los valores mínimos y máximo del intervalo válido.  
  
 El <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> propiedad se utiliza para especificar el tipo de datos de los valores que desea comparar. Los valores para comparar se convierten a este tipo de datos antes de realiza la operación de validación.  
  
> [!NOTE]
>  Cuando el <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> propiedad está establecida en <xref:System.Web.UI.WebControls.ValidationDataType.Date> y el tipo de calendario actual es no gregorianos, el validador realiza la validación del lado servidor solo. El script de cliente del validador sólo admite calendarios gregorianos.  
  
 En la tabla siguiente se enumera los tipos de datos diferentes que se pueden comparar.  
  
|Tipo de datos|Descripción|  
|---------------|-----------------|  
|`String`|Un tipo de datos de cadena.|  
|`Integer`|Un tipo de datos entero de 32 bits con signo.|  
|`Double`|Doble precisión flotante punto de tipo de datos numérico.|  
|`Date`|Un tipo de datos date.|  
|`Currency`|Tipo de datos decimal que puede contener símbolos de moneda.|  
  
> [!NOTE]
>  Validación se realiza correctamente si el control de entrada está vacío. Use un <xref:System.Web.UI.WebControls.RequiredFieldValidator> control para que el control de entrada en un campo obligatorio.  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.RangeValidator> control produce una excepción si el valor especificado por el <xref:System.Web.UI.WebControls.RangeValidator.MaximumValue%2A> o <xref:System.Web.UI.WebControls.RangeValidator.MinimumValue%2A> propiedad no se puede convertir al especificado <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Cuando se usa el <xref:System.Web.UI.WebControls.RangeValidator> control dentro de un <xref:System.Web.UI.UpdatePanel> de control, asegúrese de que el control de validación y el control que está asociado están en el mismo panel. Para obtener más información sobre el uso de la <xref:System.Web.UI.UpdatePanel> control para actualizaciones parciales de página, vea [Partial-Page Rendering Overview](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
 Para obtener información adicional sobre los controles de validación, consulte <xref:System.Web.UI.WebControls.BaseValidator>.  
  
## <a name="accessibility"></a>Accesibilidad  
 Para obtener información acerca de cómo configurar este control para que genera el marcado que se ajusta a las normas de accesibilidad, consulte [accesibilidad en Visual Studio y ASP.NET](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) y [controles ASP.NET y accesibilidad](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo crear un <xref:System.Web.UI.WebControls.RangeValidator> control en la página Web para determinar si el valor especificado en un control de entrada está dentro del intervalo de comparación.  
  
> [!IMPORTANT]
>  Este ejemplo tiene un cuadro de texto que acepta datos proporcionados por el usuario, lo que puede suponer una amenaza para la seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[RangeValidator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/RangeValidator/CS/rangevalidatorcs.aspx#1)]
 [!code-aspx-vb[RangeValidator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/RangeValidator/VB/rangevalidatorvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" />
    <altmember cref="P:System.Web.UI.WebControls.RangeValidator.MaximumValue" />
    <altmember cref="P:System.Web.UI.WebControls.RangeValidator.MinimumValue" />
    <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
    <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
    <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RangeValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.RangeValidator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RangeValidator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.RangeValidator" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.RangeValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="rangeValidator.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream to render HTML content on the client.</param>
        <summary>Adds the HTML attributes and styles for the control that need to be rendered to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.WebControls.RangeValidator.AddAttributesToRender%2A> método en un control de servidor personalizado para que el <xref:System.Web.UI.WebControls.RangeValidator> texto siempre se muestra en negrita.  
  
> [!IMPORTANT]
>  Este ejemplo tiene un cuadro de texto que acepta datos proporcionados por el usuario, lo que puede suponer una amenaza para la seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[CustomRangeValidatorAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRangeValidatorAddAttributesToRender/CS/custom_rangevalidator_addattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomRangeValidatorAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRangeValidatorAddAttributesToRender/VB/custom_rangevalidator_addattributestorendervb.aspx#1)]  
[!code-csharp[CustomRangeValidatorAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRangeValidatorAddAttributesToRender/CS/custom_rangevalidator_addattributestorender.cs#2)]
[!code-vb[CustomRangeValidatorAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRangeValidatorAddAttributesToRender/VB/custom_rangevalidator_addattributestorender.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlPropertiesValid">
      <MemberSignature Language="C#" Value="protected override bool ControlPropertiesValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ControlPropertiesValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.RangeValidator.ControlPropertiesValid" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ControlPropertiesValid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ControlPropertiesValid();" />
      <MemberSignature Language="F#" Value="override this.ControlPropertiesValid : unit -&gt; bool" Usage="rangeValidator.ControlPropertiesValid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This is a check of properties to determine any errors made by the developer.</summary>
        <returns>
          <see langword="true" /> if the control properties are valid; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateIsValid">
      <MemberSignature Language="C#" Value="protected override bool EvaluateIsValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool EvaluateIsValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.RangeValidator.EvaluateIsValid" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function EvaluateIsValid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool EvaluateIsValid();" />
      <MemberSignature Language="F#" Value="override this.EvaluateIsValid : unit -&gt; bool" Usage="rangeValidator.EvaluateIsValid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determines whether the content in the input control is valid.</summary>
        <returns>
          <see langword="true" /> if the control is valid; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.WebControls.RangeValidator.EvaluateIsValid%2A> controlar el método en un servidor personalizado para que siempre se valida que el valor existe y está en el máximo y el valor mínimo especificado para el <xref:System.Web.UI.WebControls.RangeValidator>.  
  
 [!code-aspx-csharp[CustomRangeValidatorEvaluateIsValid#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRangeValidatorEvaluateIsValid/CS/custom_rangevalidator_evaluateisvalidcs.aspx#1)]
 [!code-aspx-vb[CustomRangeValidatorEvaluateIsValid#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRangeValidatorEvaluateIsValid/VB/custom_rangevalidator_evaluateisvalidvb.aspx#1)]  
[!code-csharp[CustomRangeValidatorEvaluateIsValid#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRangeValidatorEvaluateIsValid/CS/custom_rangevalidator_evaluateisvalid.cs#2)]
[!code-vb[CustomRangeValidatorEvaluateIsValid#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRangeValidatorEvaluateIsValid/VB/custom_rangevalidator_evaluateisvalid.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumValue">
      <MemberSignature Language="C#" Value="public string MaximumValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MaximumValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.RangeValidator.MaximumValue" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MaximumValue { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumValue : string with get, set" Usage="System.Web.UI.WebControls.RangeValidator.MaximumValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the maximum value of the validation range.</summary>
        <value>El valor máximo del intervalo de validación. El valor predeterminado es <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.RangeValidator.MaximumValue%2A> propiedad para especificar el valor máximo del intervalo de validación. Si el valor especificado por esta propiedad no se puede convertir al tipo de datos especificado por el <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> propiedad, se produce una excepción.  
  
> [!NOTE]
>  Si especifica `ValidationDataType.Date` para el <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> propiedad sin establecer mediante programación la referencia cultural para la aplicación, debe usar un formato de referencia cultural neutra, como aaaa/MM/DD, para la <xref:System.Web.UI.WebControls.RangeValidator.MaximumValue%2A> y <xref:System.Web.UI.WebControls.RangeValidator.MinimumValue%2A> propiedades. En caso contrario, puede que la fecha no se interpreten correctamente.  
  
 No se puede establecer esta propiedad por temas o temas de hoja de estilos. Para obtener más información, consulte <xref:System.Web.UI.ThemeableAttribute> y [ASP.NET temas y máscaras](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.RangeValidator.MaximumValue%2A> propiedad para especificar el valor máximo del intervalo de validación.  
  
> [!IMPORTANT]
>  Este ejemplo tiene un cuadro de texto que acepta datos proporcionados por el usuario, lo que puede suponer una amenaza para la seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[RangeValidator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/RangeValidator/CS/rangevalidatorcs.aspx#1)]
 [!code-aspx-vb[RangeValidator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/RangeValidator/VB/rangevalidatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.RangeValidator.MinimumValue" />
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.IsValid" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="MinimumValue">
      <MemberSignature Language="C#" Value="public string MinimumValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MinimumValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.RangeValidator.MinimumValue" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MinimumValue { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumValue : string with get, set" Usage="System.Web.UI.WebControls.RangeValidator.MinimumValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the minimum value of the validation range.</summary>
        <value>El valor mínimo del intervalo de validación. El valor predeterminado es <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.RangeValidator.MinimumValue%2A> propiedad para especificar el valor mínimo del intervalo de validación. Si el valor especificado por esta propiedad no se puede convertir al tipo de datos especificado por el <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> propiedad, se produce una excepción.  
  
> [!NOTE]
>  Si especifica `ValidationDataType.Date` para el <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> propiedad sin establecer mediante programación la referencia cultural para la aplicación, debe usar un formato de referencia cultural neutra, como aaaa/MM/DD, para la <xref:System.Web.UI.WebControls.RangeValidator.MaximumValue%2A> y <xref:System.Web.UI.WebControls.RangeValidator.MinimumValue%2A> propiedades. En caso contrario, puede que la fecha no se interpreten correctamente.  
  
 No se puede establecer esta propiedad por temas o temas de hoja de estilos. Para obtener más información, consulte <xref:System.Web.UI.ThemeableAttribute> y [ASP.NET temas y máscaras](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.RangeValidator.MinimumValue%2A> propiedad para especificar el valor mínimo del intervalo de validación.  
  
> [!IMPORTANT]
>  Este ejemplo tiene un cuadro de texto que acepta datos proporcionados por el usuario, lo que puede suponer una amenaza para la seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[RangeValidator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/RangeValidator/CS/rangevalidatorcs.aspx#1)]
 [!code-aspx-vb[RangeValidator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/RangeValidator/VB/rangevalidatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.RangeValidator.MaximumValue" />
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.IsValid" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
  </Members>
</Type>