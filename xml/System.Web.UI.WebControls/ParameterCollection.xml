<Type Name="ParameterCollection" FullName="System.Web.UI.WebControls.ParameterCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a16125d15d8d089b87ccd6b17ae3f0b4f1a465ba" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30600079" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ParameterCollection : System.Web.UI.StateManagedCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ParameterCollection extends System.Web.UI.StateManagedCollection" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ParameterCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ParameterCollection&#xA;Inherits StateManagedCollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParameterCollection : System::Web::UI::StateManagedCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.StateManagedCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa una colección de objetos derivados de <see cref="T:System.Web.UI.WebControls.Parameter" /> y <see cref="T:System.Web.UI.WebControls.Parameter" /> utilizados por controles de origen de datos en escenarios de enlace de datos avanzados.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ParameterCollection> clase representa una colección de <xref:System.Web.UI.WebControls.Parameter> objetos que se utilizan en escenarios de enlace de datos avanzados con controles de origen de datos. El <xref:System.Web.UI.WebControls.Parameter> objetos se utilizan para enlazar los valores contenidos en local <xref:System.Web.UI.Page> variables, las cookies HTTP, variables de sesión y los valores de otros controles a los controles de origen de datos al recuperar, actualizar, eliminar e inserción de datos.  
  
 Use la <xref:System.Web.UI.WebControls.ParameterCollection> clase para administrar mediante programación un conjunto de <xref:System.Web.UI.WebControls.Parameter> objetos. Puede agregar, insertar y quitar <xref:System.Web.UI.WebControls.Parameter> objetos mediante los métodos apropiados de la <xref:System.Web.UI.WebControls.ParameterCollection> clase. Para recuperar mediante programación <xref:System.Web.UI.WebControls.Parameter> objetos de una colección, utilice uno de los métodos siguientes:  
  
-   Use el indizador para obtener un único <xref:System.Web.UI.WebControls.Parameter> objeto de la colección, por nombre o mediante una notación de matriz.  
  
-   Use la <xref:System.Collections.IEnumerable.GetEnumerator%2A> método para crear un <xref:System.Collections.IEnumerator?displayProperty=nameWithType>-objeto implementado, que puede utilizarse para obtener elementos de la colección.  
  
 El <xref:System.Web.UI.StateManagedCollection.Count%2A> propiedad especifica el número total de elementos de la colección y se utiliza para determinar el límite superior de la colección. Puede agregar y quitar elementos de la colección utilizando la <xref:System.Web.UI.WebControls.ParameterCollection.Add%2A>, <xref:System.Web.UI.WebControls.ParameterCollection.Insert%2A>, <xref:System.Web.UI.WebControls.ParameterCollection.Remove%2A>, y <xref:System.Web.UI.WebControls.ParameterCollection.RemoveAt%2A> métodos.  
  
 Dependiendo de la implementación y la semántica de un control de origen de datos determinado, el orden en que los parámetros se almacenan en la <xref:System.Web.UI.WebControls.ParameterCollection> colección podría ser importante. Por ejemplo, al utilizar el <xref:System.Web.UI.WebControls.SqlDataSource> control como un origen de datos ODBC, el orden de la <xref:System.Web.UI.WebControls.Parameter> objetos en el <xref:System.Web.UI.WebControls.ParameterCollection> colección debe ser el mismo que el orden de los parámetros en las consultas SQL con parámetros que utiliza. Sin embargo, cuando se usa el <xref:System.Web.UI.WebControls.SqlDataSource> control con Microsoft SQL Server, el orden de la <xref:System.Web.UI.WebControls.Parameter> objetos no son importantes.  
  
> [!IMPORTANT]
>  Cuando se utilizan controles de origen de datos, se insertan valores en parámetros de comando sin validación, lo que puede suponer una amenaza de seguridad. Usar un evento en el control de origen de datos para validar los valores de parámetro antes de que se ejecuta el comando. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 En la tabla siguiente se enumera las diferentes clases de parámetros y cómo se utilizan.  
  
|Parameter (clase)|Descripción|  
|---------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Parameter>|La clase base del parámetro. Usar para enlazar a una variable local o cualquier cadena estática mediante la <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> propiedad.|  
|<xref:System.Web.UI.WebControls.ControlParameter>|Valor devuelto de un parámetro que puede usarse para enlazar a un control de la propiedad o método.|  
|<xref:System.Web.UI.WebControls.CookieParameter>|Un parámetro que puede utilizarse para enlazar con el valor de una cookie.|  
|<xref:System.Web.UI.WebControls.FormParameter>|Un parámetro que puede utilizarse para enlazar a un atributo de la página de formularios Web Forms actual.|  
|<xref:System.Web.UI.WebControls.QueryStringParameter>|Un parámetro que puede usarse para enlazar a un valor que se pasa a una página de formularios Web Forms en una cadena de consulta.|  
|<xref:System.Web.UI.WebControls.SessionParameter>|Un parámetro que puede utilizarse para enlazar con el valor de una variable de sesión.|  
|<xref:System.Web.UI.WebControls.ProfileParameter>|Un parámetro que puede utilizarse para enlazar con el valor de una propiedad de perfil de ASP.NET.|  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar un <xref:System.Web.UI.WebControls.AccessDataSource> control y un <xref:System.Web.UI.WebControls.FormParameter> para mostrar información de una base de datos de Microsoft Access en un <xref:System.Web.UI.WebControls.GridView> control. El <xref:System.Web.UI.WebControls.FormParameter> objeto se agrega a la <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> colección mediante el <xref:System.Web.UI.WebControls.ParameterCollection.Add%2A> método.  
  
> [!IMPORTANT]
>  Este ejemplo tiene un cuadro de texto que acepta datos proporcionados por el usuario, lo que puede suponer una amenaza para la seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/CS/fp2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/VB/fp2vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Parameter" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParameterCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParameterCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa la clase para que la use una instancia de la clase heredada. A este constructor sólo lo puede llamar una clase heredada.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Agrega un objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> a la colección.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Web.UI.WebControls.Parameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Web.UI.WebControls.Parameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.Add(System.Web.UI.WebControls.Parameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Web::UI::WebControls::Parameter ^ parameter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Web.UI.WebControls.Parameter" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <see cref="T:System.Web.UI.WebControls.Parameter" /> que se va a agregar a la colección.</param>
        <summary>Agrega el objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> especificado al final de la colección.</summary>
        <returns>El valor de índice del elemento que se ha agregado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.ParameterCollection.Add%28System.Web.UI.WebControls.Parameter%29> método para anexar una <xref:System.Web.UI.WebControls.Parameter> objeto al final de la colección. Esta implementación del método toma el <xref:System.Web.UI.WebControls.Parameter> objeto especificado por el `param` parámetro y se anexa a la colección.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar un <xref:System.Web.UI.WebControls.AccessDataSource> control y un <xref:System.Web.UI.WebControls.FormParameter> objeto para mostrar información de una base de datos de Microsoft Access en un <xref:System.Web.UI.WebControls.GridView> control. El <xref:System.Web.UI.WebControls.FormParameter> objeto se agrega a la <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> colección mediante el <xref:System.Web.UI.WebControls.ParameterCollection.Add%28System.Web.UI.WebControls.Parameter%29> método.  
  
> [!IMPORTANT]
>  Este ejemplo tiene un cuadro de texto que acepta datos proporcionados por el usuario, lo que puede suponer una amenaza para la seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/CS/fp2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/VB/fp2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.Insert(System.Int32,System.Web.UI.WebControls.Parameter)" />
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.Remove(System.Web.UI.WebControls.Parameter)" />
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (name As String, value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::String ^ name, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del parámetro.</param>
        <param name="value">Una cadena que actúa como un valor predeterminado para el parámetro.</param>
        <summary>Crea un objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> con el nombre y valor predeterminado especificados y lo anexa al final de la colección.</summary>
        <returns>El valor de índice del elemento que se ha agregado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.ParameterCollection.Add%28System.String%2CSystem.String%29> método para crear y anexar un <xref:System.Web.UI.WebControls.Parameter> objeto con un valor predeterminado al final de la colección. Esta implementación del método crea el <xref:System.Web.UI.WebControls.Parameter> objeto con el nombre y el valor predeterminado especificado por el `name` y `value` parámetros, respectivamente y lo anexa a la colección.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo el <xref:System.Web.UI.WebControls.ParameterCollection.Add%28System.String%2CSystem.String%29> método se puede utilizar para agregar nuevos <xref:System.Web.UI.WebControls.Parameter> objetos a un <xref:System.Web.UI.WebControls.ParameterCollection> colección proporcionando la `name` y `value` parámetros. En este ejemplo, un <xref:System.Web.UI.WebControls.Parameter> objeto se agrega a un comando de actualización de un control de origen de datos de Access que está enlazado al valor de un <xref:System.Web.UI.WebControls.TextBox> control.  
  
> [!IMPORTANT]
>  Este ejemplo tiene un cuadro de texto que acepta datos proporcionados por el usuario, lo que puede suponer una amenaza para la seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ParameterCollection_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ParameterCollection_2/CS/paramcoll2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.ParameterCollection_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ParameterCollection_2/VB/paramcoll2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Parameter" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (string name, System.Data.DbType dbType, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(string name, valuetype System.Data.DbType dbType, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.Add(System.String,System.Data.DbType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::String ^ name, System::Data::DbType dbType, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del parámetro.</param>
        <param name="dbType">Tipo de base de datos del parámetro.</param>
        <param name="value">Valor predeterminado del parámetro.</param>
        <summary>Crea un objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> con el nombre, el tipo de base de datos y el valor predeterminado especificados, y lo agrega al final de la colección.</summary>
        <returns>El valor de índice del elemento que se ha agregado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método es para tipos de base de datos. Use la <xref:System.Web.UI.WebControls.ParameterCollection.Add%28System.String%2CSystem.TypeCode%2CSystem.String%29> método para los tipos CLR.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (string name, TypeCode type, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(string name, valuetype System.TypeCode type, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.Add(System.String,System.TypeCode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (name As String, type As TypeCode, value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::String ^ name, TypeCode type, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del parámetro.</param>
        <param name="type">Tipo del parámetro.</param>
        <param name="value">Valor predeterminado del parámetro.</param>
        <summary>Crea un objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> con el nombre especificado, <see cref="T:System.TypeCode" />, y un valor predeterminado, y lo anexa al final de la colección.</summary>
        <returns>El valor de índice del elemento que se ha agregado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.ParameterCollection.Add%28System.String%2CSystem.TypeCode%2CSystem.String%29> método para crear y anexar un fuertemente tipado <xref:System.Web.UI.WebControls.Parameter> objeto con un valor predeterminado al final de la colección. Esta implementación del método crea el <xref:System.Web.UI.WebControls.Parameter> objeto usando el nombre, tipo y valor especificado por el `name`, `type` y `value` parámetros, respectivamente y lo anexa a la colección.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo el <xref:System.Web.UI.WebControls.ParameterCollection.Add%28System.String%2CSystem.TypeCode%2CSystem.String%29> método se puede utilizar para agregar nuevos <xref:System.Web.UI.WebControls.Parameter> objetos a un <xref:System.Web.UI.WebControls.ParameterCollection> colección proporcionando la `name`, `value`, y `type` parámetros. En este ejemplo, un <xref:System.Web.UI.WebControls.Parameter> objeto se agrega a un comando de actualización de un control de origen de datos de Access que proporciona el valor de la hora actual del sistema. El parámetro se agrega con el <xref:System.TypeCode> de <xref:System.DateTime>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ParameterCollection_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ParameterCollection_2/CS/paramcoll2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.ParameterCollection_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ParameterCollection_2/VB/paramcoll2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Parameter" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.Parameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.Parameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.Contains(System.Web.UI.WebControls.Parameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::UI::WebControls::Parameter ^ parameter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Web.UI.WebControls.Parameter" />
      </Parameters>
      <Docs>
        <param name="parameter">Objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> que se va a buscar en la interfaz <see cref="T:System.Web.UI.WebControls.ParameterCollection" />.</param>
        <summary>Determina si la colección <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> contiene un valor específico.</summary>
        <returns>
          <see langword="true" /> si el objeto se encuentra en <see cref="T:System.Web.UI.WebControls.ParameterCollection" />; en caso contrario, <see langword="false" />. Si se pasa <see langword="null" /> al parámetro <paramref name="value" />, se devuelve <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este método para determinar si un determinado <xref:System.Web.UI.WebControls.Parameter> objeto se encuentra en la <xref:System.Web.UI.WebControls.ParameterCollection> colección.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.Parameter[] parameterArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.Parameter[] parameterArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.CopyTo(System.Web.UI.WebControls.Parameter[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (parameterArray As Parameter(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::UI::WebControls::Parameter ^&gt; ^ parameterArray, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterArray" Type="System.Web.UI.WebControls.Parameter[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterArray">Matriz de parámetros de la que se copiará el valor en un índice especificado.</param>
        <param name="index">Índice <see langword="integer" /> del elemento <c>parameterArray</c> que se va a copiar.</param>
        <summary>Copia un índice especificado de una matriz de parámetros en la colección de parámetros.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateKnownType">
      <MemberSignature Language="C#" Value="protected override object CreateKnownType (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object CreateKnownType(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.CreateKnownType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateKnownType (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ CreateKnownType(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">El índice que se va a crear a partir de la lista ordenada de tipos devuelta por <see cref="T:System.Web.UI.WebControls.Parameter" />, del tipo del objeto <see cref="M:System.Web.UI.WebControls.ParameterCollection.GetKnownTypes" />.</param>
        <summary>Crea una instancia de un objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> predeterminado.</summary>
        <returns>Una instancia predeterminada de una clase <see cref="T:System.Web.UI.WebControls.Parameter" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ParameterCollection.CreateKnownType%2A> método crea una instancia de un <xref:System.Web.UI.WebControls.Parameter> objeto según el índice de la <xref:System.Type> devuelto por la <xref:System.Web.UI.WebControls.ParameterCollection.GetKnownTypes%2A> método. Los valores de índice corresponden a tipos que se muestran en la tabla siguiente.  
  
|Índice|Tipo de parámetro|  
|-----------|--------------------|  
|0|<xref:System.Web.UI.WebControls.ControlParameter>|  
|1|<xref:System.Web.UI.WebControls.CookieParameter>|  
|2|<xref:System.Web.UI.WebControls.FormParameter>|  
|3|<xref:System.Web.UI.WebControls.Parameter>|  
|4|<xref:System.Web.UI.WebControls.QueryStringParameter>|  
|5|<xref:System.Web.UI.WebControls.SessionParameter>|  
|6|<xref:System.Web.UI.WebControls.ProfileParameter>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El índice especificado no está dentro del intervalo reconocido.</exception>
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.GetKnownTypes" />
      </Docs>
    </Member>
    <Member MemberName="GetKnownTypes">
      <MemberSignature Language="C#" Value="protected override Type[] GetKnownTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Type[] GetKnownTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.GetKnownTypes" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetKnownTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;Type ^&gt; ^ GetKnownTypes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene una matriz de los tipos <see cref="T:System.Web.UI.WebControls.Parameter" /> que la colección <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> puede contener.</summary>
        <returns>Una matriz ordenada de objetos <see cref="T:System.Type" /> que identifican los tipos de objetos <see cref="T:System.Web.UI.WebControls.Parameter" /> que la colección puede contener.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.CreateKnownType(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary GetValues (System.Web.HttpContext context, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Specialized.IOrderedDictionary GetValues(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.GetValues(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Specialized::IOrderedDictionary ^ GetValues(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context">El objeto <see cref="T:System.Web.HttpRequest" /> actual al que se enlaza <see cref="T:System.Web.UI.WebControls.Parameter" />.</param>
        <param name="control">La instancia <see cref="T:System.Web.UI.Control" /> que se pasa al método <see cref="M:System.Web.UI.WebControls.ControlParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> de cada parámetro.</param>
        <summary>Obtiene una colección ordenada de los nombres de objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> y sus valores correspondientes que contiene actualmente la colección.</summary>
        <returns>Colección <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> de pares de nombre y valor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `control` se utiliza el parámetro <xref:System.Web.UI.WebControls.Parameter> objetos incluidos en la colección para recuperar el <xref:System.Web.UI.Page> actuales y <xref:System.Web.HttpRequest> objeto que la <xref:System.Web.UI.WebControls.Parameter> se enlaza un objeto a.  
  
 Porque el <xref:System.Collections.Specialized.IOrderedDictionary> objeto debe tener forma única con nombre entradas pero la <xref:System.Web.UI.WebControls.ParameterCollection> colección no requiere ni garantizar única <xref:System.Web.UI.WebControls.Parameter> nombres de objeto, la implementación de este método anexa un número al final de cada <xref:System.Web.UI.WebControls.Parameter.Name%2A> propiedad para garantizar la unicidad de la colección devuelta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.Parameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.Parameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.IndexOf(System.Web.UI.WebControls.Parameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::Parameter ^ parameter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Web.UI.WebControls.Parameter" />
      </Parameters>
      <Docs>
        <param name="parameter">Objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> que se va a buscar en la interfaz <see cref="T:System.Web.UI.WebControls.ParameterCollection" />.</param>
        <summary>Determina el índice de un objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> especificado en la colección <see cref="T:System.Web.UI.WebControls.ParameterCollection" />.</summary>
        <returns>El índice de <paramref name="parameter" />, si se encuentra en la colección; en caso contrario, es -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este método para determinar el índice de un parámetro en el <xref:System.Web.UI.WebControls.ParameterCollection> colección.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Web.UI.WebControls.Parameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Web.UI.WebControls.Parameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.Insert(System.Int32,System.Web.UI.WebControls.Parameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Web::UI::WebControls::Parameter ^ parameter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="parameter" Type="System.Web.UI.WebControls.Parameter" />
      </Parameters>
      <Docs>
        <param name="index">Índice de base cero en el que se inserta <see cref="T:System.Web.UI.WebControls.Parameter" />.</param>
        <param name="parameter">
          <see cref="T:System.Web.UI.WebControls.Parameter" /> que se va a insertar.</param>
        <summary>Inserta el objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> especificado en el índice especificado de la colección <see cref="T:System.Web.UI.WebControls.ParameterCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.ParameterCollection.Insert%2A> método para agregar un <xref:System.Web.UI.WebControls.Parameter> el objeto a un <xref:System.Web.UI.WebControls.ParameterCollection> colección en una ubicación específica. En este ejemplo, varias <xref:System.Web.UI.WebControls.QueryStringParameter> objetos se agregan a un <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> colección, uno <xref:System.Web.UI.WebControls.QueryStringParameter> se inserta en la colección, y se imprime el orden de la colección cuando se carga la página.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.QueryStringParameter_7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_7/CS/qsp7acs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.QueryStringParameter_7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_7/VB/qsp7avb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> es menor que cero.  
  
 O bien  
  
 <paramref name="index" /> es mayor que <see langword="Count" />.</exception>
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtiene o establece el objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> de la colección.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Parameter this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Parameter Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ParameterCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Parameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Parameter ^ default[int] { System::Web::UI::WebControls::Parameter ^ get(int index); void set(int index, System::Web::UI::WebControls::Parameter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Parameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Índice del objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> que se va a recuperar de la colección.</param>
        <summary>Obtiene o establece el objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> en el índice especificado de la colección.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Parameter" /> situada en el índice especificado de la colección.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este indizador para obtener un <xref:System.Web.UI.WebControls.Parameter> objeto por su ubicación en la <xref:System.Web.UI.WebControls.ParameterCollection> colección.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Parameter" />
        <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
        <altmember cref="T:System.Web.UI.WebControls.FormParameter" />
        <altmember cref="T:System.Web.UI.WebControls.QueryStringParameter" />
        <altmember cref="T:System.Web.UI.WebControls.SessionParameter" />
        <altmember cref="T:System.Web.UI.WebControls.ProfileParameter" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Parameter this[string name] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Parameter Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ParameterCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(name As String) As Parameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Parameter ^ default[System::String ^] { System::Web::UI::WebControls::Parameter ^ get(System::String ^ name); void set(System::String ^ name, System::Web::UI::WebControls::Parameter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Parameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Propiedad <see cref="P:System.Web.UI.WebControls.Parameter.Name" /> de la clase <see cref="T:System.Web.UI.WebControls.Parameter" /> que se va a recuperar de la colección.</param>
        <summary>Obtiene o establece el objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> con el nombre especificado en la colección.</summary>
        <value>El objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> con el nombre especificado en la colección. Si <see cref="T:System.Web.UI.WebControls.Parameter" /> no se encuentra en la colección, el indizador devuelve <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este indizador para obtener un <xref:System.Web.UI.WebControls.Parameter> objeto por nombre desde el <xref:System.Web.UI.WebControls.ParameterCollection> colección, usando la notación de matriz.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.ParameterCollection.Remove%2A> método y la <xref:System.Web.UI.WebControls.ParameterCollection.Item%2A> indizador para quitar un <xref:System.Web.UI.WebControls.Parameter> objeto desde un <xref:System.Web.UI.WebControls.ParameterCollection> colección. En este ejemplo, varias <xref:System.Web.UI.WebControls.QueryStringParameter> objetos se agregan a un <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> colección, uno <xref:System.Web.UI.WebControls.QueryStringParameter> se quita de la colección, y se imprime el orden de la colección cuando se carga la página.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.QueryStringParameter_6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_6/CS/qsp6cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.QueryStringParameter_6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_6/VB/qsp6vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Parameter" />
        <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
        <altmember cref="T:System.Web.UI.WebControls.FormParameter" />
        <altmember cref="T:System.Web.UI.WebControls.QueryStringParameter" />
        <altmember cref="T:System.Web.UI.WebControls.SessionParameter" />
        <altmember cref="T:System.Web.UI.WebControls.ProfileParameter" />
      </Docs>
    </Member>
    <Member MemberName="OnClearComplete">
      <MemberSignature Language="C#" Value="protected override void OnClearComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClearComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.OnClearComplete" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClearComplete ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClearComplete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Realiza procesos personalizados adicionales después de borrar el contenido de la colección.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ParameterCollection.OnClearComplete%2A> método se llama para realizar un procesamiento adicional después de la <xref:System.Web.UI.StateManagedCollection.Clear%2A> método se completa. Lo llama el <xref:System.Web.UI.WebControls.ParameterCollection.OnParametersChanged%2A> método.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Este método permite a los implementadores definir procesos que deben realizarse después de eliminar todos los elementos de la colección subyacente. Al definir este método, los implementadores pueden agregar funcionalidad a los métodos heredados sin tener que invalidar todos los demás métodos.  
  
 <see cref="M:System.Web.UI.StateManagedCollection.OnClear" /> se invoca antes del estándar <see langword="Clear" /> comportamiento, mientras que <see cref="M:System.Web.UI.WebControls.ParameterCollection.OnClearComplete" /> se invoca después de la norma <see langword="Clear" /> comportamiento.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.OnParametersChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnInsert">
      <MemberSignature Language="C#" Value="protected override void OnInsert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInsert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.OnInsert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInsert (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInsert(int index, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">El índice en la colección en el que se inserta <see cref="T:System.Web.UI.WebControls.Parameter" />.</param>
        <param name="value">El objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> insertado en la colección <see cref="T:System.Web.UI.WebControls.ParameterCollection" />.</param>
        <summary>Aparece antes de la llamada al método <see cref="M:System.Web.UI.WebControls.ParameterCollection.Insert(System.Int32,System.Web.UI.WebControls.Parameter)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ParameterCollection.OnInsert%2A> método se llama para realizar un procesamiento adicional antes de la <xref:System.Web.UI.WebControls.ParameterCollection.Insert%2A> se llama al método.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Este método permite a los implementadores definir procesos que deben realizarse antes de insertar un elemento en la colección subyacente. Al definir este método, los implementadores pueden agregar funcionalidad a los métodos heredados sin tener que invalidar todos los demás métodos.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.Insert(System.Int32,System.Web.UI.WebControls.Parameter)" />
      </Docs>
    </Member>
    <Member MemberName="OnInsertComplete">
      <MemberSignature Language="C#" Value="protected override void OnInsertComplete (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInsertComplete(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.OnInsertComplete(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInsertComplete (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInsertComplete(int index, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">El índice de la colección en el que se insertó <see cref="T:System.Web.UI.WebControls.Parameter" />.</param>
        <param name="value">El objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> insertado en la colección <see cref="T:System.Web.UI.WebControls.ParameterCollection" />.</param>
        <summary>Se produce cuando termina el método <see cref="M:System.Web.UI.WebControls.ParameterCollection.Insert(System.Int32,System.Web.UI.WebControls.Parameter)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ParameterCollection.OnInsertComplete%2A> método se llama para realizar un procesamiento adicional después de la <xref:System.Web.UI.WebControls.ParameterCollection.Insert%2A> método se completa. Lo llama el <xref:System.Web.UI.WebControls.ParameterCollection.OnParametersChanged%2A> método.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Este método permite a los implementadores definir procesos que deben realizarse después de insertar un elemento en la colección subyacente. Al definir este método, los implementadores pueden agregar funcionalidad a los métodos heredados sin tener que invalidar todos los demás métodos.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.Insert(System.Int32,System.Web.UI.WebControls.Parameter)" />
      </Docs>
    </Member>
    <Member MemberName="OnParametersChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParametersChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParametersChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.OnParametersChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParametersChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParametersChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Genera el evento <see cref="E:System.Web.UI.WebControls.ParameterCollection.ParametersChanged" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Web.UI.WebControls.ParameterCollection.ParametersChanged" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.OnParameterChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnRemoveComplete">
      <MemberSignature Language="C#" Value="protected override void OnRemoveComplete (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRemoveComplete(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.OnRemoveComplete(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRemoveComplete (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRemoveComplete(int index, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">El índice en la colección del que se quitó <see cref="T:System.Web.UI.WebControls.Parameter" />.</param>
        <param name="value">El objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> que se quitó de <see cref="T:System.Web.UI.WebControls.ParameterCollection" />.</param>
        <summary>Se produce cuando termina el método <see cref="M:System.Web.UI.WebControls.ParameterCollection.Remove(System.Web.UI.WebControls.Parameter)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ParameterCollection.OnRemoveComplete%2A> método se llama para realizar un procesamiento adicional después de la <xref:System.Web.UI.WebControls.ParameterCollection.Remove%2A> método se completa. Lo llama el <xref:System.Web.UI.WebControls.ParameterCollection.OnParametersChanged%2A> método.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Este método permite a los implementadores definir procesos que deben realizarse después de quitar un elemento de la colección subyacente. Al definir este método, los implementadores pueden agregar funcionalidad a los métodos heredados sin tener que invalidar todos los demás métodos.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.Remove(System.Web.UI.WebControls.Parameter)" />
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnValidate">
      <MemberSignature Language="C#" Value="protected override void OnValidate (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValidate(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.OnValidate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValidate (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValidate(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">El <see langword="object" /> que se valida.</param>
        <summary>Realiza procesos de personalización adicionales al validar un valor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ParameterCollection.OnValidate%2A> método determina si el objeto especificado en el `o` parámetro es un <xref:System.Web.UI.WebControls.Parameter> instancia. Si no es así, produce un <xref:System.ArgumentException> excepción.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El objeto no es una instancia de la clase <see cref="T:System.Web.UI.WebControls.Parameter" /> o una de sus clases derivadas.</exception>
        <exception cref="T:System.ArgumentNullException">El objeto es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ParametersChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ParametersChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ParametersChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ParameterCollection.ParametersChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ParametersChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ParametersChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aparece cuando cambia el estado de uno o varios objetos <see cref="T:System.Web.UI.WebControls.Parameter" /> que contiene la colección.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Web.UI.WebControls.ParameterCollection> colección está contenida en un control de origen de datos, el <xref:System.Web.UI.WebControls.ParameterCollection.ParametersChanged> event genera el control de origen de datos `DataSourceChanged` causada por un evento, los controles enlazados a datos para volver a enlazar.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar <see cref="M:System.Web.UI.WebControls.Parameter.OnParameterChanged" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Web.UI.WebControls.Parameter.OnParameterChanged" /> de la clase base para que los delegados registrados reciban el evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.WebControls.Parameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.WebControls.Parameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.Remove(System.Web.UI.WebControls.Parameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::WebControls::Parameter ^ parameter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Web.UI.WebControls.Parameter" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <see cref="T:System.Web.UI.WebControls.Parameter" /> que se va a quitar de <see cref="T:System.Web.UI.WebControls.ParameterCollection" />.</param>
        <summary>Quita el objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> especificado de la colección <see cref="T:System.Web.UI.WebControls.ParameterCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este método para quitar especificado <xref:System.Web.UI.WebControls.Parameter> objeto desde un <xref:System.Web.UI.WebControls.ParameterCollection> colección.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.ParameterCollection.Remove%2A> método y la <xref:System.Web.UI.WebControls.ParameterCollection.Item%2A> indizador para quitar un <xref:System.Web.UI.WebControls.Parameter> objeto desde un <xref:System.Web.UI.WebControls.ParameterCollection> colección. En este ejemplo, varias <xref:System.Web.UI.WebControls.QueryStringParameter> objetos se agregan a un <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> colección, uno <xref:System.Web.UI.WebControls.QueryStringParameter> objeto se quita de la colección y se imprime el orden de la colección cuando se carga la página.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.QueryStringParameter_6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_6/CS/qsp6cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.QueryStringParameter_6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_6/VB/qsp6vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Parameter" />
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.Add(System.Web.UI.WebControls.Parameter)" />
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Índice del objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> que se va a quitar.</param>
        <summary>Quita el objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> del índice especificado de la colección <see cref="T:System.Web.UI.WebControls.ParameterCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.ParameterCollection.RemoveAt%2A> método para quitar el <xref:System.Web.UI.WebControls.Parameter> objeto en el índice especificado de la colección.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.ParameterCollection.RemoveAt%2A> método para quitar un <xref:System.Web.UI.WebControls.Parameter> objeto desde un <xref:System.Web.UI.WebControls.ParameterCollection> colección en una ubicación específica. En este ejemplo, varias <xref:System.Web.UI.WebControls.QueryStringParameter> objetos se agregan a un <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> colección, uno <xref:System.Web.UI.WebControls.QueryStringParameter> objeto se quita de la colección y se imprime el orden de la colección cuando se carga la página.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.QueryStringParameter_5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_5/CS/qsp5cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.QueryStringParameter_5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_5/VB/qsp5vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Parameter" />
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.Add(System.Web.UI.WebControls.Parameter)" />
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetDirtyObject">
      <MemberSignature Language="C#" Value="protected override void SetDirtyObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDirtyObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.SetDirtyObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetDirtyObject (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetDirtyObject(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> que se debe marcar como cambiado desde la última vez que se cargó o se guardó desde el estado de vista.</param>
        <summary>Marca el objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> especificado como cambiado desde la última vez que se cargó o se guardó desde el estado de vista.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ParameterCollection.SetDirtyObject%2A> método es una función auxiliar que se utiliza para marcar un <xref:System.Web.UI.WebControls.Parameter> como cambiado desde la última carga del objeto o guardar estado de vista.  
  
> [!NOTE]
>  Este método se utiliza únicamente por los programadores de controles.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateValues">
      <MemberSignature Language="C#" Value="public void UpdateValues (System.Web.HttpContext context, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateValues(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.UpdateValues(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateValues(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context">El objeto <see cref="T:System.Web.HttpRequest" /> actual al que se enlaza <see cref="T:System.Web.UI.WebControls.Parameter" />.</param>
        <param name="control">La instancia <see cref="T:System.Web.UI.Control" /> que se pasa al método <see cref="M:System.Web.UI.WebControls.ControlParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> de cada parámetro.</param>
        <summary>Recorre en iteración los objetos <see cref="T:System.Web.UI.WebControls.Parameter" /> que contiene la colección y llama al método <see langword="Evaluate" /> en cada uno.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `control` se utiliza el parámetro <xref:System.Web.UI.WebControls.Parameter> objetos incluidos en la colección para recuperar el <xref:System.Web.UI.Page> actuales y <xref:System.Web.HttpRequest> objeto que la <xref:System.Web.UI.WebControls.Parameter> se enlaza un objeto a.  
  
 Si el valor actual para la <xref:System.Web.UI.WebControls.Parameter> objeto es diferente del valor almacenado en memoria caché en estado de vista, el <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> se llama al método.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.GetValues(System.Web.HttpContext,System.Web.UI.Control)" />
      </Docs>
    </Member>
  </Members>
</Type>