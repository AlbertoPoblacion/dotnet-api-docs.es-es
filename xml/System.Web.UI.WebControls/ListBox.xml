<Type Name="ListBox" FullName="System.Web.UI.WebControls.ListBox">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a18dfe59816aa1578cf15abd49ae9cf1f392d5bc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30599409" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListBox : System.Web.UI.WebControls.ListControl, System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListBox extends System.Web.UI.WebControls.ListControl implements class System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ListBox" />
  <TypeSignature Language="VB.NET" Value="Public Class ListBox&#xA;Inherits ListControl&#xA;Implements IPostBackDataHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListBox : System::Web::UI::WebControls::ListControl, System::Web::UI::IPostBackDataHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.ListControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ValidationProperty("SelectedItem")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa un control de cuadro de lista que permite seleccionar uno o varios elementos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En este tema:  
  
-   [Introducción](#introduction)  
  
-   [Accesibilidad](#accessibility)  
  
-   [Sintaxis declarativa](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introducción  
 Use el <xref:System.Web.UI.WebControls.ListBox> control para crear un control de lista que permita único o selección de varios elementos. Use la <xref:System.Web.UI.WebControls.ListBox.Rows%2A> propiedad para especificar el alto del control. Para habilitar la selección de varios elementos, establezca la <xref:System.Web.UI.WebControls.ListBox.SelectionMode%2A> propiedad `ListSelectionMode.Multiple`.  
  
 Para especificar los elementos que desea que aparezca en el <xref:System.Web.UI.WebControls.ListBox> controlar, coloque un `ListItem` elemento por cada entrada entre las etiquetas apertura y cierre de la <xref:System.Web.UI.WebControls.ListBox> control.  
  
 Use la <xref:System.Web.UI.WebControls.ListControl.Items%2A> colección para examinar el <xref:System.Web.UI.WebControls.ListItem> objetos incluidos en el <xref:System.Web.UI.WebControls.ListBox> control. Por ejemplo, puede determinar los elementos seleccionados en el <xref:System.Web.UI.WebControls.ListBox> control enumerando el <xref:System.Web.UI.WebControls.ListControl.Items%2A> colección y probar el <xref:System.Web.UI.WebControls.ListItem.Selected%2A> valor para cada <xref:System.Web.UI.WebControls.ListItem> elemento.  
  
 El <xref:System.Web.UI.WebControls.ListBox> control también admite el enlace de datos. Para enlazar el control a un origen de datos, cree primero un origen de datos, como uno de los <xref:System.Web.UI.DataSourceControl> objetos, que contiene los elementos que se va a mostrar en el control. A continuación, use la <xref:System.Web.UI.Control.DataBind%2A> método para enlazar el origen de datos para el <xref:System.Web.UI.WebControls.ListBox> control. Use la <xref:System.Web.UI.WebControls.ListControl.DataTextField%2A> y <xref:System.Web.UI.WebControls.ListControl.DataValueField%2A> propiedades para especificar qué campo del origen de datos para enlazar con el `Text` y `Value` propiedades, respectivamente, de cada elemento de lista en el control. El <xref:System.Web.UI.WebControls.ListBox> control ahora mostrará la información del origen de datos.  
  
> [!CAUTION]
>  Este control se puede utilizar para mostrar los datos proporcionados por el usuario, que pueden incluir script de cliente malintencionado. Compruebe que cualquier información que se envía desde un cliente de secuencias de comandos ejecutables, instrucciones SQL u otro código antes de mostrarla en la aplicación. Puede usar controles de validación para comprobar proporcionados por el usuario antes de mostrar el texto de entrada en un control. ASP.NET proporciona una característica de validación de solicitudes de entrada para bloquear secuencias de comandos y código HTML en proporcionados por el usuario. Para obtener más información, consulte [protección de los controles estándar](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [Cómo: proteger frente a ataques mediante secuencias de una aplicación Web mediante la aplicación de la codificación de HTML a cadenas](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), y [validar entrada de usuario en las páginas Web ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>Accesibilidad  
 Para obtener información acerca de cómo configurar este control para que genera el marcado que se ajusta a las normas de accesibilidad, consulte [accesibilidad en Visual Studio y ASP.NET](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) y [controles ASP.NET y accesibilidad](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Sintaxis declarativa  
  
```  
<asp:ListBox  
    AccessKey="string"  
    AppendDataBoundItems="True|False"  
    AutoPostBack="True|False"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CausesValidation="True|False"  
    CssClass="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    DataTextField="string"  
    DataTextFormatString="string"  
    DataValueField="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelectedIndexChanged="SelectedIndexChanged event handler"  
    OnTextChanged="TextChanged event handler"  
    OnUnload="Unload event handler"  
    Rows="integer"  
    runat="server"  
    SelectedIndex="integer"  
    SelectedValue="string"  
    SelectionMode="Single|Multiple"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    ValidationGroup="string"  
    Visible="True|False"  
    Width="size"  
>  
            <asp:ListItem  
                Enabled="True|False"  
                Selected="True|False"  
                Text="string"  
                Value="string"  
            />  
</asp:ListBox>  
```  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo crear un <xref:System.Web.UI.WebControls.ListBox> control.  
  
 [!code-aspx-csharp[Classic ListBox Example 2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic ListBox Example 2/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic ListBox Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic ListBox Example 2/VB/sourcevb.aspx#1)]  
  
 En el ejemplo siguiente se muestra cómo crear un <xref:System.Web.UI.WebControls.ListBox> control que admite varias selecciones.  
  
 [!code-aspx-csharp[Classic ListBox Example 2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic ListBox Example 2/CS/source3cs.aspx#3)]
 [!code-aspx-vb[Classic ListBox Example 2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic ListBox Example 2/VB/source3vb.aspx#3)]  
  
 En el ejemplo siguiente se muestra cómo crear un <xref:System.Web.UI.WebControls.ListBox> control a través del enlace de datos.  
  
 [!code-aspx-csharp[Classic ListBox Example 2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic ListBox Example 2/CS/source2cs.aspx#2)]
 [!code-aspx-vb[Classic ListBox Example 2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic ListBox Example 2/VB/source2vb.aspx#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ListControl" />
    <altmember cref="T:System.Web.UI.WebControls.ListItem" />
    <altmember cref="T:System.Web.UI.WebControls.ListItemCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.ListBox" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este constructor para crear e inicializar una nueva instancia de la <xref:System.Web.UI.WebControls.ListBox> clase.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListBox.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Flujo de salida que representa el contenido HTML en el cliente.</param>
        <summary>Agrega <see langword="name" />, <see langword="size" />, <see langword="multiple" /> y <see langword="onchange" /> a la lista de atributos para representar.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.WebControls.ListBox.AddAttributesToRender%2A> método en un control de servidor personalizado, para que la <xref:System.Web.UI.WebControls.ListBox> texto de elementos de lista siempre se muestra en negrita.  
  
 [!code-aspx-csharp[CustomListBoxAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomListBoxAddAttributesToRender/CS/custom_listbox_addattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomListBoxAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomListBoxAddAttributesToRender/VB/custom_listbox_addattributestorendervb.aspx#1)]  
  
 [!code-csharp[CustomListBoxAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomListBoxAddAttributesToRender/CS/custom_listbox_addattributestorender.cs#2)]
 [!code-vb[CustomListBoxAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomListBoxAddAttributesToRender/VB/custom_listbox_addattributestorender.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListBox.BorderColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BorderColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BorderColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el color del borde del control.</summary>
        <value>Objeto <see cref="T:System.Drawing.Color" /> que representa el color del borde del control.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.ListBox.BorderColor%2A> propiedad se hereda de la <xref:System.Web.UI.WebControls.WebControl> clase y no es aplicable a la <xref:System.Web.UI.WebControls.ListBox> control.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListBox.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::BorderStyle BorderStyle { System::Web::UI::WebControls::BorderStyle get(); void set(System::Web::UI::WebControls::BorderStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el estilo de borde del control.</summary>
        <value>Uno de los valores de <see cref="T:System.Web.UI.WebControls.BorderStyle" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.ListBox.BorderStyle%2A> propiedad se hereda de la <xref:System.Web.UI.WebControls.WebControl> clase y no es aplicable a la <xref:System.Web.UI.WebControls.ListBox> control.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListBox.BorderWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BorderWidth As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit BorderWidth { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el ancho del borde del control.</summary>
        <value>Objeto <see cref="T:System.Web.UI.WebControls.Unit" /> que representa el ancho del borde del control.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  El <xref:System.Web.UI.WebControls.ListBox.BorderWidth%2A> propiedad se hereda de la <xref:System.Web.UI.WebControls.WebControl> clase y no es aplicable a la <xref:System.Web.UI.WebControls.ListBox> control.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelectedIndices">
      <MemberSignature Language="C#" Value="public virtual int[] GetSelectedIndices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32[] GetSelectedIndices() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListBox.GetSelectedIndices" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSelectedIndices () As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;int&gt; ^ GetSelectedIndices();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene la matriz de valores de índice de los elementos  seleccionados actualmente en el control <see cref="T:System.Web.UI.WebControls.ListBox" />.</summary>
        <returns>Matriz de enteros que representan el índice de un elemento seleccionado en el cuadro de lista.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.ListBox.GetSelectedIndices%2A> método identificar u obtener acceso a los elementos seleccionados en el <xref:System.Web.UI.WebControls.ListBox> control. Cada elemento de la matriz devuelta representa el índice de un elemento de lista seleccionado. Puede usar los valores de índice para tener acceso a los elementos de la <xref:System.Web.UI.WebControls.ListControl.Items%2A> colección.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListBox.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Identificador de clave del control que se usa para indexar <c>postCollection</c>.</param>
        <param name="postCollection">
          <see cref="T:System.Collections.Specialized.NameValueCollection" /> que contiene información de valores indizada mediante identificadores de control.</param>
        <summary>Carga el contenido expuesto del control de lista en caso de que sea distinto al último contenido expuesto.</summary>
        <returns>
          <see langword="true" /> si el contenido expuesto es diferente al del último registro; de lo contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ListBox.LoadPostData%2A> método la usan principalmente los programadores de controles, al derivar un control personalizado de la <xref:System.Web.UI.WebControls.ListBox> clase.  
  
 El <xref:System.Web.UI.WebControls.ListBox.LoadPostData%2A> método indica si el estado de la <xref:System.Web.UI.WebControls.ListBox> control ha cambiado. En otras palabras, determina si cada elemento de lista en el control tiene el mismo <xref:System.Web.UI.WebControls.ListItem.Selected%2A> valor como el último valor enviado. Un usuario selecciona un elemento del control cambia la <xref:System.Web.UI.WebControls.ListItem.Selected%2A> valor correspondiente <xref:System.Web.UI.WebControls.ListItem> objeto en el <xref:System.Web.UI.WebControls.ListControl.Items%2A> colección de la <xref:System.Web.UI.WebControls.ListBox> control. Si algunos elementos de lista están seleccionadas en el control, o si la <xref:System.Web.UI.WebControls.ListBox> está deshabilitado, <xref:System.Web.UI.WebControls.ListBox.LoadPostData%2A> devuelve `false`.  
  
 Cuando el <xref:System.Web.UI.WebControls.ListBox.LoadPostData%2A> método `true` para un control, el marco de páginas ASP.NET invoca el <xref:System.Web.UI.WebControls.RadioButtonList.RaisePostDataChangedEvent%2A> método para el control.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListBox.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
        <summary>Configura el control <see cref="T:System.Web.UI.WebControls.ListBox" /> antes de representarlo en el cliente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ListBox.OnPreRender%2A> método la usan principalmente los programadores de controles, al derivar un control personalizado de la <xref:System.Web.UI.WebControls.ListBox> clase. El <xref:System.Web.UI.WebControls.ListBox.OnPreRender%2A> método permite que las clases derivadas controlen el <xref:System.Web.UI.Control.PreRender> evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
 El <xref:System.Web.UI.WebControls.ListBox.OnPreRender%2A> método realiza todos los pasos previos a la representación necesarios antes de guardar el estado de vista y representar el contenido de la <xref:System.Web.UI.WebControls.ListBox>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar el <see cref="M:System.Web.UI.WebControls.ListBox.OnPreRender(System.EventArgs)" /> método en una clase derivada, asegúrese de llamar a la <see cref="M:System.Web.UI.WebControls.ListBox.OnPreRender(System.EventArgs)" /> método de la clase base para que los delegados registrados reciban el evento.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListBox.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostDataChangedEvent();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Invoca el método <see cref="M:System.Web.UI.WebControls.ListControl.OnSelectedIndexChanged(System.EventArgs)" /> cada vez que se modifican los datos expuestos para el control <see cref="T:System.Web.UI.WebControls.ListBox" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ListBox.RaisePostDataChangedEvent%2A> método la usan principalmente los programadores de controles, al derivar un control personalizado de la <xref:System.Web.UI.WebControls.ListBox> control.  
  
 La página ASP.NET framework llama el <xref:System.Web.UI.WebControls.ListBox.RaisePostDataChangedEvent%2A> método en un <xref:System.Web.UI.WebControls.ListBox> controlar cuándo el <xref:System.Web.UI.WebControls.ListBox.LoadPostData%2A> método indica que ha cambiado el estado de los elementos de lista en el <xref:System.Web.UI.WebControls.ListBox> control. El <xref:System.Web.UI.WebControls.ListBox.RaisePostDataChangedEvent%2A> llamadas al método el <xref:System.Web.UI.WebControls.ListControl.OnSelectedIndexChanged%2A> método para generar el <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged> eventos. Los programadores de controles pueden invalidar el <xref:System.Web.UI.WebControls.ListControl.OnSelectedIndexChanged%2A> método para realizar un procesamiento personalizado cuando el usuario selecciona elementos de lista en el control.  
  
 El <xref:System.Web.UI.WebControls.ListBox.RaisePostDataChangedEvent%2A> método opcionalmente puede realizar la validación antes de generar el <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged> eventos para el control. Para validar un grupo de controles en la página cuando un elemento de lista dentro de la <xref:System.Web.UI.WebControls.ListBox> está seleccionada, establecer el <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> y <xref:System.Web.UI.WebControls.ListControl.CausesValidation%2A> propiedades a `true`, y, a continuación, especifique el grupo de controles que se validan en el <xref:System.Web.UI.WebControls.ListControl.ValidationGroup%2A> propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public virtual int Rows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Rows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListBox.Rows" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Rows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Rows { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el número de filas que se muestran en el control <see cref="T:System.Web.UI.WebControls.ListBox" />.</summary>
        <value>Número de filas que se muestran en el control <see cref="T:System.Web.UI.WebControls.ListBox" />. El valor predeterminado es <see langword="4" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.ListBox.Rows%2A> propiedad para especificar el número de filas que se va a mostrar en el <xref:System.Web.UI.WebControls.ListBox> control.  
  
> [!CAUTION]
>  El número de filas debe ser entre 1 y 2000. Valores fuera de este intervalo, provocan una excepción.  
  
 El valor de la <xref:System.Web.UI.WebControls.ListBox.Rows%2A> propiedad se almacena en estado de vista.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.ListBox.Rows%2A> propiedad para mostrar seis filas en el <xref:System.Web.UI.WebControls.ListBox> control.  
  
 [!code-aspx-csharp[Classic ListBox.Rows Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic ListBox.Rows Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic ListBox.Rows Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic ListBox.Rows Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El número especificado de filas es inferior a 1 o superior a 2000.</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectionMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ListSelectionMode SelectionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ListSelectionMode SelectionMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListBox.SelectionMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectionMode As ListSelectionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ListSelectionMode SelectionMode { System::Web::UI::WebControls::ListSelectionMode get(); void set(System::Web::UI::WebControls::ListSelectionMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListSelectionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el modo de selección del control <see cref="T:System.Web.UI.WebControls.ListBox" />.</summary>
        <value>Uno de los valores de <see cref="T:System.Web.UI.WebControls.ListSelectionMode" />. El valor predeterminado es <see langword="Single" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.ListBox.SelectionMode%2A> propiedad para especificar el comportamiento del modo de la <xref:System.Web.UI.WebControls.ListBox> control. Si se establece esta propiedad en `ListSelectionMode.Single` indica se puede seleccionar sólo un único elemento de la <xref:System.Web.UI.WebControls.ListBox> (control), mientras que `ListSelectionMode.Multiple` especifica que se pueden seleccionar varios elementos.  
  
 El valor de la <xref:System.Web.UI.WebControls.ListBox.SelectionMode%2A> propiedad se almacena en estado de vista.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.ListBox.SelectionMode%2A> propiedad para permitir que el usuario pueda seleccionar varios elementos de la <xref:System.Web.UI.WebControls.ListBox> control.  
  
 [!code-aspx-csharp[ListBoxSelectionMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ListBoxSelectionMode/CS/listboxselectionmodecs.aspx#1)]
 [!code-aspx-vb[ListBoxSelectionMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListBoxSelectionMode/VB/listboxselectionmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El modo de selección especificado no es ninguno de los valores de <see cref="T:System.Web.UI.WebControls.ListSelectionMode" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.ListSelectionMode" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListBox.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Índice de la colección expuesta que hace referencia al contenido que se va a cargar.</param>
        <param name="postCollection">Colección expuesta en el servidor.</param>
        <summary>Carga el contenido expuesto del control de lista en caso de que sea distinto al último contenido expuesto.</summary>
        <returns>
          <see langword="true" /> si el contenido expuesto es diferente al del último registro; de lo contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, se debe usar el <xref:System.Web.UI.WebControls.ListBox.LoadPostData%2A?displayProperty=nameWithType> método para procesar los datos expuestos para los cambios en un <xref:System.Web.UI.WebControls.ListBox> objeto.  
  
 El <xref:System.Web.UI.WebControls.ListBox.System%23Web%23UI%23IPostBackDataHandler%23LoadPostData%2A> método es una implementación de miembro de interfaz explícita. Solo se puede utilizar cuando la instancia de <xref:System.Web.UI.WebControls.ListBox> se convierte en una interfaz <xref:System.Web.UI.IPostBackDataHandler>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Para definir una implementación personalizada para procesar los datos expuestos para un <see cref="T:System.Web.UI.WebControls.ListBox" /> objeto, invalide el <see cref="M:System.Web.UI.WebControls.ListBox.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> miembro. La implementación de interfaz explícita llama el <see cref="M:System.Web.UI.WebControls.ListBox.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> método para procesar los datos expuestos para el control.</para>
        </block>
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListBox.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Invoca el método <see cref="M:System.Web.UI.WebControls.ListControl.OnSelectedIndexChanged(System.EventArgs)" /> cada vez que se modifican los datos expuestos para el control <see cref="T:System.Web.UI.WebControls.ListBox" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, se debe usar el <xref:System.Web.UI.WebControls.ListBox.RaisePostDataChangedEvent%2A?displayProperty=nameWithType> método para generar un evento cuando los datos expuestos para un <xref:System.Web.UI.WebControls.ListBox> cambios de un objeto.  
  
 El <xref:System.Web.UI.WebControls.ListBox.System%23Web%23UI%23IPostBackDataHandler%23LoadPostData%2A> método es una implementación de miembro de interfaz explícita. Solo se puede utilizar cuando la instancia de <xref:System.Web.UI.WebControls.ListBox> se convierte en una interfaz <xref:System.Web.UI.IPostBackDataHandler>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Para definir una implementación personalizada para generar el evento para un <see cref="T:System.Web.UI.WebControls.ListBox" /> objeto, invalide el <see cref="M:System.Web.UI.WebControls.ListBox.RaisePostDataChangedEvent" /> miembro. La implementación de interfaz explícita llama el <see cref="M:System.Web.UI.WebControls.ListBox.RaisePostDataChangedEvent" /> método para generar el evento cuando cambian los datos expuestos para el control.</para>
        </block>
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
      </Docs>
    </Member>
  </Members>
</Type>