<Type Name="ObjectDataSourceStatusEventArgs" FullName="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3c8513719cf4430e5736ae0e79945926496eb5cb" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64066530" /></Metadata><TypeSignature Language="C#" Value="public class ObjectDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSourceStatusEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSourceStatusEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ObjectDataSourceStatusEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona datos para los eventos <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />, <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />, <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" /> y <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" /> del control <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> clase se utiliza en el <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A>, y <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> métodos para proporcionar acceso a los parámetros de salida, los valores devueltos y las excepciones producidas por el método que llama el <xref:System.Web.UI.WebControls.ObjectDataSource> control. Estos se accede mediante el <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>, y <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> propiedades, respectivamente. Mediante la adición de un delegado para controlar el <xref:System.Web.UI.WebControls.ObjectDataSource.Selected>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>, <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, o <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> eventos, puede examinar estos datos y realizar cualquier procesamiento posterior adicional que es necesario.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource> control expone muchos eventos que se pueden controlar para trabajar con el objeto comercial subyacente en distintos momentos del ciclo de vida. En la tabla siguiente se enumera los eventos y asociado <xref:System.EventArgs> clases y delegados de controlador de eventos.  
  
|evento|EventArgs|EventHandler|  
|-----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>.<br /><br /> Se produce inmediatamente antes de que se crea la instancia del objeto comercial.|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>.<br /><br /> Se produce inmediatamente después de crea la instancia del objeto comercial.|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>.<br /><br /> se produce antes de que se recuperan los datos.|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> y <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>.<br /><br /> Se producen antes de realiza una operación de inserción, actualización o eliminación.|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selected>.<br /><br /> Se produce después de que se recuperan los datos.|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> y <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>.<br /><br /> Se producen una vez completada la operación de inserción, actualización o delete.|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>.<br /><br /> Se produce antes de destruir un objeto de negocios.|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|  
  
   
  
## Examples  
 Esta sección contiene dos ejemplos de código. El primer ejemplo de código muestra cómo usar un <xref:System.Web.UI.WebControls.ObjectDataSource> control con un objeto comercial y un <xref:System.Web.UI.WebControls.GridView> control para eliminar datos. El segundo ejemplo de código proporciona un ejemplo de objeto comercial de nivel medio que usa el primer ejemplo de código.  
  
 En el ejemplo de código siguiente se muestra cómo usar un <xref:System.Web.UI.WebControls.ObjectDataSource> control con un objeto comercial y un <xref:System.Web.UI.WebControls.GridView> control para eliminar datos. El <xref:System.Web.UI.WebControls.GridView> inicialmente muestra un conjunto de todos los empleados, utilizando el método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad para recuperar los datos desde el `EmployeeLogic` objeto. Dado que el <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> propiedad está establecida en `true`, el <xref:System.Web.UI.WebControls.GridView> automáticamente control muestra un **eliminar** botón.  
  
 Si hace clic en el **eliminar** botón, el <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> acción se realiza mediante el método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> propiedad y los parámetros que se especifican en el <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> colección. En este ejemplo de código, se especifica un parámetro en el <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> colección que se corresponde con el identificador de empleado. Esto es porque aunque el identificador se incluye en el <xref:System.Windows.Forms.DataGridView.Columns%2A> colección como un <xref:System.Web.UI.WebControls.BoundField> objeto, se pasará como una cadena para el <xref:System.Web.UI.WebControls.ObjectDataSource> control. Al agregarlo explícitamente a la <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> colección con un <xref:System.Web.UI.WebControls.Parameter.Type%2A> propiedad establecida en el <xref:System.TypeCode.Int32> valor, pasará por correctamente el <xref:System.Web.UI.WebControls.ObjectDataSource> al método como un entero, en lugar de como cadena.  
  
 En este ejemplo de código, también se realizan algunos pasos de preprocesamiento y posteriores al procesamiento. El `NorthwindEmployeeDeleting` delegado se llama para controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> eventos antes de la <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> se realiza la acción y el `NorthwindEmployeeDeleted` delegado se llama para controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> eventos después de la <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> acción completada, para controlar cualquier excepciones que pudieran haberse producido. El `NorthwindEmployeeDeleted` delegado tiene acceso a las posibles excepciones producidas por el objeto de negocios que está usando el <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> objeto. En este ejemplo, si un `NorthwindDataException` es produce, se controla por este delegado.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 En el ejemplo de código siguiente se proporciona un ejemplo de objeto comercial de nivel medio que usa el ejemplo de código anterior. En la lista siguiente se describe las dos clases principales que se definen en el ejemplo de código:  
  
-   El `EmployeeLogic` es una clase que no se mantiene el estado y encapsula la lógica de negocios.  
  
-   La `NorthwindEmployee` clase es una clase de modelo que contiene sólo la funcionalidad básica necesaria para cargar y conservar los datos de la capa de datos.  
  
 Además, un `NorthwindDataException` clase se proporciona por comodidad.  
  
 Este conjunto de clases de ejemplo usa la base de datos de Northwind Traders es una base de datos de ejemplo que está disponible con Microsoft SQL Server y Microsoft Access. Para obtener un ejemplo completo, debe compilar este código como una biblioteca y, a continuación, utilizar estas clases desde una página ASP. La página ASP que se proporciona en el ejemplo anterior está configurada para funcionar con esta biblioteca de clases.  El `UpdateEmployeeInfo` método no está completamente implementado, por lo que no se insertarán datos en la base de datos de Northwind Traders cuando se experimenta con este ejemplo.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceStatusEventArgs (object returnValue, System.Collections.IDictionary outputParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object returnValue, class System.Collections.IDictionary outputParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor(System.Object,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (returnValue As Object, outputParameters As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceStatusEventArgs(System::Object ^ returnValue, System::Collections::IDictionary ^ outputParameters);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs : obj * System.Collections.IDictionary -&gt; System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs (returnValue, outputParameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="returnValue" Type="System.Object" />
        <Parameter Name="outputParameters" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="returnValue">Un objeto que representa un valor devuelto para la operación de base de datos finalizada.</param>
        <param name="outputParameters">Un objeto <see cref="T:System.Collections.IDictionary" /> de pares nombre/valor de objetos de parámetro.</param>
        <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> con los parámetros de salida y el valor devueltos especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `returnValue` parámetro puede ser cualquier objeto que es devuelto por una llamada al método de datos del objeto de negocios. El `outputParameters` parámetro es un <xref:System.Collections.IDictionary> colección de pares nombre/valor que coinciden con los de la firma del método y se pasan por referencia.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceStatusEventArgs (object returnValue, System.Collections.IDictionary outputParameters, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object returnValue, class System.Collections.IDictionary outputParameters, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor(System.Object,System.Collections.IDictionary,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceStatusEventArgs(System::Object ^ returnValue, System::Collections::IDictionary ^ outputParameters, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs : obj * System.Collections.IDictionary * Exception -&gt; System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs (returnValue, outputParameters, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="returnValue" Type="System.Object" />
        <Parameter Name="outputParameters" Type="System.Collections.IDictionary" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="returnValue">Un objeto que representa un valor devuelto para la operación de base de datos finalizada.</param>
        <param name="outputParameters">Un objeto <see cref="T:System.Collections.IDictionary" /> de pares nombre/valor de objetos de parámetro.</param>
        <param name="exception">Una excepción <see cref="T:System.Exception" /> que contiene cualquier excepción interna que se haya producido durante la llamada al método.</param>
        <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> con los parámetros de salida, el valor devueltos y la excepción especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `returnValue` parámetro puede ser cualquier objeto que es devuelto por una llamada al método de datos del objeto de negocios. El `outputParameters` parámetro es un <xref:System.Collections.IDictionary> colección de pares nombre/valor que coinciden con los de la firma del método y se pasan por referencia. El `exception` parámetro es un <xref:System.Exception> excepción que contiene las excepciones producidas por el método que llama el <xref:System.Web.UI.WebControls.ObjectDataSource> control durante una operación de datos. Si la excepción no se controla mediante un <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A>, o <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> método, se produce por la <xref:System.Web.UI.WebControls.ObjectDataSource> controlar después de que la operación de datos.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el número de filas afectadas por la operación de datos.</summary>
        <value>El número de filas afectadas por la operación de datos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> valor para comprobar que el número esperado de filas se vieron afectado.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un contenedor para cualquier excepción que produzca el método al que llama el control <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> durante una operación de datos.</summary>
        <value>Una excepción <see cref="T:System.Exception" /> que contiene cualquier excepción producida por el objeto comercial en su <see cref="P:System.Exception.InnerException" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Exception> excepción no representa la excepción producida por el método de datos del objeto comercial. Puede usar el <xref:System.Exception.InnerException%2A> propiedad para tener acceso a la excepción iniciada.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar un <xref:System.Web.UI.WebControls.ObjectDataSource> control con un objeto comercial y un <xref:System.Web.UI.WebControls.GridView> control para eliminar datos. El <xref:System.Web.UI.WebControls.GridView> inicialmente muestra un conjunto de todos los empleados, utilizando el método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad para recuperar los datos desde el `EmployeeLogic` objeto. Dado que el <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> propiedad está establecida en `true`, el <xref:System.Web.UI.WebControls.GridView> automáticamente control muestra un **eliminar** botón.  
  
 Si hace clic en el **eliminar** botón, el <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> acción se realiza mediante el método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> propiedad y los parámetros que se especifican en el <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> colección.  
  
 En este ejemplo de código, también se realizan algunos pasos de preprocesamiento y posteriores al procesamiento. El `NorthwindEmployeeDeleting` delegado se llama para controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> eventos antes de la <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> se realiza la acción y el `NorthwindEmployeeDeleted` delegado se llama para controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> eventos después de la <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> acción completada, para llevar a cabo cualquier control de excepciones. En este ejemplo, si un `NorthwindDataException` es produce, se controla mediante el `NorthwindEmployeeDeleted` delegar.  
  
 Para examinar la implementación de la `EmployeeLogic` objeto empresarial de nivel medio que usa este ejemplo de código, vea la información general de clases en <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se ha controlado una excepción producida por el objeto comercial.</summary>
        <value>Es <see langword="true" /> si se ha controlado una excepción producida por el objeto comercial y no debe ser producida por <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />; de lo contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el objeto de negocios produce una excepción, el <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled%2A> propiedad está establecida en `false` y la excepción ajustada por el <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> propiedad. Si usa un <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler> objeto, puede comprobar el <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> propiedad y controle la excepción. Si controla la excepción, establezca el <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled%2A> propiedad `true` o <xref:System.Web.UI.WebControls.ObjectDataSource> control iniciará una excepción.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar un <xref:System.Web.UI.WebControls.ObjectDataSource> control con un objeto comercial y un <xref:System.Web.UI.WebControls.GridView> control para eliminar datos. El <xref:System.Web.UI.WebControls.GridView> inicialmente muestra un conjunto de todos los empleados, utilizando el método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad para recuperar los datos desde el `EmployeeLogic` objeto. Dado que el <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> propiedad está establecida en `true`, el <xref:System.Web.UI.WebControls.GridView> automáticamente control muestra un **eliminar** botón.  
  
 Si hace clic en el **eliminar** botón, el <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> acción se realiza mediante el método especificado por el <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> propiedad y los parámetros que se especifican en el <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> colección. En este ejemplo de código, también se realizan algunos pasos de preprocesamiento y posteriores al procesamiento. El `NorthwindEmployeeDeleting` delegado se llama para controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> eventos antes de la <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> se realiza la acción y el `NorthwindEmployeeDeleted` delegado se llama para controlar la <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> eventos después de la <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> acción completada, para controlar cualquier excepciones que pudieran haberse producido. En este ejemplo, si un `NorthwindDataException` es produce, se controla mediante el `NorthwindEmployeeDeleted` delegar.  
  
 Para examinar la implementación de la `EmployeeLogic` objeto empresarial de nivel medio que usa este ejemplo de código, vea la información general de clases en <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception" />
      </Docs>
    </Member>
    <Member MemberName="OutputParameters">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary OutputParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary OutputParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputParameters As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ OutputParameters { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputParameters : System.Collections.IDictionary" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una colección que contiene parámetros del método de objeto comercial y sus valores.</summary>
        <value>Un objeto <see cref="T:System.Collections.IDictionary" /> de pares nombre/valor que representan los parámetros del método de objeto comercial y sus valores correspondientes.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los parámetros que se pasan al método del objeto comercial por referencia se devuelven en el <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters%2A> colección.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnValue">
      <MemberSignature Language="C#" Value="public object ReturnValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ReturnValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReturnValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ReturnValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReturnValue : obj" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor que devuelve el método del objeto comercial, si existe, como un objeto.</summary>
        <value>Un objeto que representa el valor devuelto por el método de objeto comercial; o bien <see langword="null" />, si el método del objeto comercial no devuelve ningún valor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> propiedad está establecida el <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> constructor. El valor se establece en el valor devuelto de la llamada al método de objeto business, el que se llama mediante la reflexión. Si el método comercial no devuelve ningún valor (por ejemplo, cuando el método del objeto comercial devuelve `void`), el <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> propiedad evalúa a `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>