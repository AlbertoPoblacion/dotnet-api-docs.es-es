<Type Name="Parameter" FullName="System.Web.UI.WebControls.Parameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="211394378ef2adb4c8cd6b44faee79d4fb0b907a" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51897657" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Parameter : ICloneable, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Parameter extends System.Object implements class System.ICloneable, class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="VB.NET" Value="Public Class Parameter&#xA;Implements ICloneable, IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class Parameter : ICloneable, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type Parameter = class&#xA;    interface ICloneable&#xA;    interface IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultProperty("DefaultValue")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Ofrece un mecanismo que usan los controles de origen de datos para enlazarse a variables de aplicación, identidades de usuario y opciones, así como a otros datos. Actúa como clase base de todos los tipos de parámetros de ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Web.UI.WebControls.Parameter> clase representa un parámetro en una consulta SQL parametrizada, una expresión de filtrado, o una llamada al método de objeto de negocios que el control de origen de datos de una ASP.NET utiliza para seleccionar, filtrar o modificar los datos. Los objetos <xref:System.Web.UI.WebControls.Parameter> están contenidos en un objeto <xref:System.Web.UI.WebControls.ParameterCollection>. <xref:System.Web.UI.WebControls.Parameter> los objetos se evalúan en tiempo de ejecución para enlazar los valores de las variables que representan a cualquier método que se usa por un control de origen de datos para interactuar con los datos.  
  
 Utilice las clases que derivan de <xref:System.Web.UI.WebControls.Parameter> con el origen de datos y los controles enlazados a datos para crear aplicaciones de datos basada en Web. Estas clases de parámetros se usan controles de origen de datos para enlazar tipos concretos de valores que se encuentran en aplicaciones Web a marcadores de posición en cadenas de consulta SQL, los parámetros del método de objeto comercial y mucho más. En la tabla siguiente se enumera los tipos de parámetro que se incluyen en ASP.NET.  
  
|||  
|-|-|  
|<xref:System.Web.UI.WebControls.ControlParameter>|Enlaza las propiedades públicas de un control de servidor Web.|  
|<xref:System.Web.UI.WebControls.FormParameter>|Enlaza un campo de formulario.|  
|<xref:System.Web.UI.WebControls.SessionParameter>|Enlaza un campo de estado de sesión.|  
|<xref:System.Web.UI.WebControls.RouteParameter>|Enlaza un parámetro de dirección URL de ruta.|  
|<xref:System.Web.UI.WebControls.CookieParameter>|Enlaza un campo de la cookie.|  
|<xref:System.Web.UI.WebControls.QueryStringParameter>|Enlaza un parámetro de cadena de consulta.|  
|<xref:System.Web.UI.WebControls.ProfileParameter>|Enlaza un campo de perfil.|  
  
 Ampliar la base de <xref:System.Web.UI.WebControls.Parameter> clase cuando desee implementar sus propios tipos de parámetro personalizado.  
  
 <xref:System.Web.UI.WebControls.Parameter> los objetos son muy simples: tienen un <xref:System.Web.UI.WebControls.Parameter.Name%2A> y un <xref:System.Web.UI.WebControls.Parameter.Type%2A> propiedad, se puede representar mediante declaración y puede realizar un seguimiento de estado a través de varias solicitudes HTTP. Todos los parámetros admiten un <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> propiedad para los casos en que un parámetro se enlaza a un valor, pero se evalúa como el valor `null` en tiempo de ejecución.  
  
 Cuando se usa una colección de <xref:System.Web.UI.WebControls.Parameter> los objetos que tienen un control de origen de datos, podría ser importante el orden de la colección. Para obtener más información sobre cómo se usan parámetros, vea [usar parámetros con el SqlDataSource Control](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295) y [usar parámetros con el ObjectDataSource Control](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo usar el valor seleccionado de un <xref:System.Web.UI.WebControls.DropDownList> control en el W`here` cláusula de una consulta SQL. El ejemplo se usa el <xref:System.Web.UI.WebControls.ControlParameter> (clase), que se deriva de la <xref:System.Web.UI.WebControls.ControlParameter> clase.  
  
 El <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> elemento define la consulta con un parámetro denominado "@Title" donde el valor de `DropDownList1` debe ir. El <xref:System.Web.UI.WebControls.ControlParameter> elemento especifica que el "@Title" se reemplazará el marcador de posición por el valor de la <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> propiedad de la `DropDownList1` control. El <xref:System.Web.UI.WebControls.ControlParameter> elemento se agrega a la <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> colección de los <xref:System.Web.UI.WebControls.SqlDataSource> control.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/CS/sql2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/VB/sql2vb.aspx#1)]  
  
 El ejemplo siguiente es similar al anterior, pero usa el código en lugar de marcado. Cuando la página carga la primera vez, el <xref:System.Web.UI.WebControls.DropDownList> control no tiene ningún valor seleccionado y el <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> propiedad de la <xref:System.Web.UI.WebControls.Parameter> se usa el objeto.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.Parameter_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_3/CS/param1acs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.Parameter_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_3/VB/param1avb.aspx#1)]  
  
 El código siguiente muestra la clase de código subyacente para la página en el ejemplo anterior.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_3/CS/param1acs.aspx.cs#4)]
 [!code-vb[System.Web.UI.WebControls.Parameter_3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_3/VB/param1avb.aspx.vb#4)]  
  
 En el ejemplo de código siguiente se muestra cómo extender el <xref:System.Web.UI.WebControls.Parameter> clase para crear un nuevo tipo de parámetro que se puede usar controles de origen de datos y otros controles en escenarios de enlace de datos. Puede usar un control de origen de datos un `StaticParameter` parámetro para enlazar con el valor de cualquier objeto, normalmente una cadena, se declara en una página de formularios Web Forms.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#1)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
    <altmember cref="T:System.Web.UI.WebControls.CookieParameter" />
    <altmember cref="T:System.Web.UI.WebControls.FormParameter" />
    <altmember cref="T:System.Web.UI.WebControls.QueryStringParameter" />
    <altmember cref="T:System.Web.UI.WebControls.SessionParameter" />
    <altmember cref="T:System.Web.UI.WebControls.ProfileParameter" />
    <altmember cref="T:System.Web.UI.WebControls.RouteParameter" />
    <altmember cref="T:System.Web.UI.WebControls.ParameterCollection" />
    <altmember cref="T:System.Web.UI.DataSourceControl" />
    <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">Usar parámetros con controles de origen de datos</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.Parameter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia predeterminada de la clase <see cref="T:System.Web.UI.WebControls.Parameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Web.UI.WebControls.Parameter> objeto creado con el <xref:System.Web.UI.WebControls.Parameter.%23ctor> constructor se inicializa con valores predeterminados para todas sus propiedades. El <xref:System.Web.UI.WebControls.Parameter.Name%2A> propiedad se inicializa en <xref:System.String.Empty?displayProperty=nameWithType>, el <xref:System.Web.UI.WebControls.Parameter.Type%2A> propiedad se inicializa en <xref:System.TypeCode.Object?displayProperty=nameWithType>, el <xref:System.Web.UI.WebControls.Parameter.Direction%2A> propiedad se inicializa en <xref:System.Data.ParameterDirection.Input>y el <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> propiedad se inicializa en `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : string -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del parámetro.</param>
        <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Web.UI.WebControls.Parameter" /> utilizando el nombre especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Web.UI.WebControls.Parameter> objeto creado con la <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%29> constructor se inicializa con los valores especificados `name` y los valores predeterminados para las demás propiedades. El <xref:System.Web.UI.WebControls.Parameter.Type%2A> propiedad se inicializa en <xref:System.TypeCode.Object?displayProperty=nameWithType>, el <xref:System.Web.UI.WebControls.Parameter.Direction%2A> propiedad se inicializa en <xref:System.Data.ParameterDirection.Input>y el <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> propiedad se inicializa en `null`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo llamar a la <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%29> constructor desde una clase que extiende el <xref:System.Web.UI.WebControls.Parameter> clase para inicializar el <xref:System.Web.UI.WebControls.Parameter.Name%2A> propiedad de la instancia. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.WebControls.Parameter> información general de clases.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#2)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Parameter (System.Web.UI.WebControls.Parameter original);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.Parameter original) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.Web.UI.WebControls.Parameter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (original As Parameter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Parameter(System::Web::UI::WebControls::Parameter ^ original);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : System.Web.UI.WebControls.Parameter -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter original" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Web.UI.WebControls.Parameter" />
      </Parameters>
      <Docs>
        <param name="original">Instancia de <see cref="T:System.Web.UI.WebControls.Parameter" /> a partir de la cual se inicializa la instancia actual.</param>
        <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Web.UI.WebControls.Parameter" /> con los valores de la instancia original especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.Web.UI.WebControls.Parameter%29> constructor es un `protected` constructor de copias utilizado para clonar un <xref:System.Web.UI.WebControls.Parameter> instancia. Los valores de la <xref:System.Web.UI.WebControls.Parameter.Name%2A>, <xref:System.Web.UI.WebControls.Parameter.Type%2A>, <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>, <xref:System.Web.UI.WebControls.Parameter.Direction%2A>, y <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A> las propiedades se transfieren a la nueva instancia.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo llamar a la <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.Web.UI.WebControls.Parameter%29> constructor desde una clase que extiende el <xref:System.Web.UI.WebControls.Parameter> clase para implementar el comportamiento de la clase de clonación de objeto correcto. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.WebControls.Parameter> información general de clases.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#4)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Parameter.Clone" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter (string name, System.Data.DbType dbType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.DbType dbType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.String,System.Data.DbType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter(System::String ^ name, System::Data::DbType dbType);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : string * System.Data.DbType -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter (name, dbType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del parámetro.</param>
        <param name="dbType">Tipo de base de datos del parámetro.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.Parameter" /> con el nombre y el tipo de base de datos especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Web.UI.WebControls.Parameter> objeto creado con la <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%2CSystem.Data.DbType%29> constructor se inicializa con los valores especificados `name` y `dbType` parámetros y con los valores predeterminados de otras propiedades. El <xref:System.Web.UI.WebControls.Parameter.Direction%2A> propiedad se inicializa en <xref:System.Data.ParameterDirection.Input>y el <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> propiedad se inicializa en `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter (string name, TypeCode type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.TypeCode type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.String,System.TypeCode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As TypeCode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter(System::String ^ name, TypeCode type);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : string * TypeCode -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter (name, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del parámetro.</param>
        <param name="type">Un objeto <see cref="T:System.TypeCode" /> que describe el tipo del parámetro.</param>
        <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Web.UI.WebControls.Parameter" /> utilizando el tipo y el nombre que se hayan especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Web.UI.WebControls.Parameter> objeto creado con la <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%2CSystem.TypeCode%29> constructor se inicializa con los valores especificados `name` y `type` parámetros y valores predeterminados de otras propiedades. El <xref:System.Web.UI.WebControls.Parameter.Direction%2A> propiedad se inicializa en <xref:System.Data.ParameterDirection.Input>y el <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> propiedad se inicializa en `null`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo llamar a la <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%2CSystem.TypeCode%29> constructor desde una clase que extiende el <xref:System.Web.UI.WebControls.Parameter> clase para inicializar el <xref:System.Web.UI.WebControls.Parameter.Name%2A> y <xref:System.Web.UI.WebControls.Parameter.Type%2A> propiedades de la instancia. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.WebControls.Parameter> información general de clases.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#3)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Type" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter (string name, System.Data.DbType dbType, string defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.DbType dbType, string defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.String,System.Data.DbType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter(System::String ^ name, System::Data::DbType dbType, System::String ^ defaultValue);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : string * System.Data.DbType * string -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter (name, dbType, defaultValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
        <Parameter Name="defaultValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nombre de la instancia <see cref="T:System.Web.UI.WebControls.Parameter" />.</param>
        <param name="dbType">Tipo de base de datos de la instancia de <see cref="T:System.Web.UI.WebControls.Parameter" />.</param>
        <param name="defaultValue">Valor predeterminado de la instancia de <see cref="T:System.Web.UI.WebControls.Parameter" />, si <see cref="T:System.Web.UI.WebControls.Parameter" /> está enlazado a un valor que todavía no se ha inicializado cuando se llama a <see cref="M:System.Web.UI.WebControls.Parameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />.</param>
        <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Web.UI.WebControls.Parameter" /> con el nombre y el tipo de base de datos especificados, así como el valor especificado para su propiedad <see cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Parameter.Direction%2A> propiedad de la <xref:System.Web.UI.WebControls.Parameter> instancia se inicializa en <xref:System.Data.ParameterDirection.Input>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter (string name, TypeCode type, string defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.TypeCode type, string defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.String,System.TypeCode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As TypeCode, defaultValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter(System::String ^ name, TypeCode type, System::String ^ defaultValue);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : string * TypeCode * string -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter (name, type, defaultValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
        <Parameter Name="defaultValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del parámetro.</param>
        <param name="type">Un objeto <see cref="T:System.TypeCode" /> que describe el tipo del parámetro.</param>
        <param name="defaultValue">Una cadena que se utiliza como valor predeterminado del parámetro, si el objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> está enlazado a un valor que aún no se ha inicializado cuando se llama al método <see cref="M:System.Web.UI.WebControls.Parameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />.</param>
        <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Web.UI.WebControls.Parameter" />, utilizando el nombre especificado, el tipo especificado y la cadena especificada para su propiedad <see cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Web.UI.WebControls.Parameter> objeto creado con la <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%2CSystem.TypeCode%2CSystem.String%29> constructor se inicializa con los valores especificados `name` parámetro y `type` parámetro y asigna un <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> valor de propiedad. La propiedad <xref:System.Web.UI.WebControls.Parameter.Direction%2A> se inicializa en <xref:System.Data.ParameterDirection.Input>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%2CSystem.TypeCode%2CSystem.String%29> constructor para agregar objetos de parámetro de actualización para el <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> colección de un <xref:System.Web.UI.WebControls.AccessDataSource> control antes de llamar a la <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> método.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/CS/sql22cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/VB/sql22vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Type" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Parameter Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Parameter Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Clone () As Parameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::Parameter ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Web.UI.WebControls.Parameter&#xA;override this.Clone : unit -&gt; System.Web.UI.WebControls.Parameter" Usage="parameter.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Parameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve un duplicado de la instancia <see cref="T:System.Web.UI.WebControls.Parameter" /> actual.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.Parameter" /> que es un duplicado exacto del actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Parameter.Clone%2A> llamadas al método el <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.Web.UI.WebControls.Parameter%29> constructor de copias para inicializar una nueva instancia de la <xref:System.Web.UI.WebControls.Parameter> clase con los valores de la instancia actual.  
  
 Si extiende el <xref:System.Web.UI.WebControls.Parameter> (clase), puede invalidar el <xref:System.Web.UI.WebControls.Parameter.Clone%2A> método para incluir cualquier estado que se debe copiar en una nueva instancia de la clase derivada.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo llamar a la <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.Web.UI.WebControls.Parameter%29> constructor desde una clase que extiende el <xref:System.Web.UI.WebControls.Parameter> clase para implementar el comportamiento de la clase de clonación de objeto correcto. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.WebControls.Parameter> clase.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#4)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Parameter.#ctor(System.Web.UI.WebControls.Parameter)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertDbTypeToTypeCode">
      <MemberSignature Language="C#" Value="public static TypeCode ConvertDbTypeToTypeCode (System.Data.DbType dbType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TypeCode ConvertDbTypeToTypeCode(valuetype System.Data.DbType dbType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.ConvertDbTypeToTypeCode(System.Data.DbType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TypeCode ConvertDbTypeToTypeCode(System::Data::DbType dbType);" />
      <MemberSignature Language="F#" Value="static member ConvertDbTypeToTypeCode : System.Data.DbType -&gt; TypeCode" Usage="System.Web.UI.WebControls.Parameter.ConvertDbTypeToTypeCode dbType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dbType" Type="System.Data.DbType" />
      </Parameters>
      <Docs>
        <param name="dbType">Valor <see cref="T:System.Data.DbType" /> que se convierte en un valor <see cref="T:System.TypeCode" /> equivalente.</param>
        <summary>Convierte un valor de <see cref="T:System.Data.DbType" /> en un valor de <see cref="T:System.TypeCode" /> equivalente.</summary>
        <returns>Valor <see cref="T:System.TypeCode" /> que es equivalente al valor <see cref="T:System.Data.DbType" /> especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método devuelve un <xref:System.TypeCode.Object> si ningún equivalente para la instancia del <xref:System.Data.DbType> se encuentra el valor. Tipos de base de datos, sin incluyen tipos equivalentes <xref:System.Data.DbType.Guid>, <xref:System.Data.DbType.Binary>, y <xref:System.Data.DbType.DateTimeOffset>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool with get, set" Usage="System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el valor al que está enlazado el objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> debe convertirse a <see langword="null" /> si es <see cref="F:System.String.Empty" />.</summary>
        <value>Es <see langword="true" /> si el valor al que está enlazado <see cref="T:System.Web.UI.WebControls.Parameter" /> debe convertirse a <see langword="null" /> cuando es <see cref="F:System.String.Empty" />; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A> se cambia la propiedad del parámetro, el <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> se llama al método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTypeCodeToDbType">
      <MemberSignature Language="C#" Value="public static System.Data.DbType ConvertTypeCodeToDbType (TypeCode typeCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.DbType ConvertTypeCodeToDbType(valuetype System.TypeCode typeCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.ConvertTypeCodeToDbType(System.TypeCode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::DbType ConvertTypeCodeToDbType(TypeCode typeCode);" />
      <MemberSignature Language="F#" Value="static member ConvertTypeCodeToDbType : TypeCode -&gt; System.Data.DbType" Usage="System.Web.UI.WebControls.Parameter.ConvertTypeCodeToDbType typeCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeCode" Type="System.TypeCode" />
      </Parameters>
      <Docs>
        <param name="typeCode">Valor <see cref="T:System.TypeCode" /> que se convierte en un valor <see cref="T:System.Data.DbType" /> equivalente.</param>
        <summary>Convierte un valor de <see cref="T:System.TypeCode" /> en un valor de <see cref="T:System.Data.DbType" /> equivalente.</summary>
        <returns>Valor <see cref="T:System.Data.DbType" /> que es equivalente al valor <see cref="T:System.TypeCode" /> especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método devuelve un <xref:System.Data.DbType.Object> si no se encuentra ningún equivalente de la instancia. Tipos sin incluyen los tipos de base de datos equivalentes <xref:System.TypeCode.DBNull> y <xref:System.TypeCode.Empty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public System.Data.DbType DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DbType DbType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Property DbType As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DbType DbType { System::Data::DbType get(); void set(System::Data::DbType value); };" />
      <MemberSignature Language="F#" Value="member this.DbType : System.Data.DbType with get, set" Usage="System.Web.UI.WebControls.Parameter.DbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el tipo de base de datos del parámetro.</summary>
        <value>Tipo de base de datos de la instancia de <see cref="T:System.Web.UI.WebControls.Parameter" />. El valor predeterminado es <see cref="F:System.Data.DbType.Object" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El tipo de base de datos puede utilizarse para crear parámetros fuertemente tipados, para que los valores se convierten correctamente entre su aplicación Web y subyacente código o los valores de las tablas de base de datos.  
  
 Si se cambia el tipo de base de datos del parámetro estableciendo el <xref:System.Web.UI.WebControls.Parameter.DbType%2A> propiedad, el <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> se llama al método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Se intentó establecer esta propiedad en un valor distinto del valor de enumeración <see cref="T:System.Data.DbType" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public string DefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultValue { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultValue : string with get, set" Usage="System.Web.UI.WebControls.Parameter.DefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Especifica un valor predeterminado para el parámetro, si el valor al que está enlazado el parámetro no debe estar inicializado cuando se llame al método <see cref="M:System.Web.UI.WebControls.Parameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />.</summary>
        <value>Una cadena que actúa como valor predeterminado para el objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> cuando no se puede resolver el valor al que está enlazado o no está inicializado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> propiedad se usa en escenarios donde el parámetro se enlaza a un valor, pero el valor es `null` o no se puede resolver cuándo el <xref:System.Web.UI.WebControls.Parameter> se evalúa el objeto.  
  
 Si el <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> se cambia la propiedad del parámetro, el <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> se llama al método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo recuperar un registro de datos única mediante un <xref:System.Web.UI.WebControls.ObjectDataSource> controlar y mostrarlo en un <xref:System.Web.UI.WebControls.DetailsView> control. El <xref:System.Web.UI.WebControls.ObjectDataSource> control recupera un registro de empleado concreto mediante una llamada a la `GetEmployee` método de la `EmployeeLogic` clase. El `GetEmployee` método requiere un parámetro de Id. de empleado. El <xref:System.Web.UI.WebControls.ObjectDataSource> control utiliza un <xref:System.Web.UI.WebControls.QueryStringParameter> objeto en su <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> colección que se pasa un identificador para el `GetEmployee` método en este ejemplo.  
  
 Para ver el ejemplo de implementación de la `EmployeeLogic` clase y el `GetEmployee` método, consulte el <xref:System.Web.UI.WebControls.ObjectDataSource> información general de clases.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/CS/objds3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/VB/objds3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.Data.ParameterDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ParameterDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As ParameterDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::ParameterDirection Direction { System::Data::ParameterDirection get(); void set(System::Data::ParameterDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Data.ParameterDirection with get, set" Usage="System.Web.UI.WebControls.Parameter.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ParameterDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indica si el objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> se utiliza para enlazar un valor a un control o si se puede utilizar el control para cambiar el valor.</summary>
        <value>Uno de los valores de <see cref="T:System.Data.ParameterDirection" />. De forma predeterminada, la propiedad <see cref="P:System.Web.UI.WebControls.Parameter.Direction" /> se establece en <see cref="F:System.Data.ParameterDirection.Input" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Parameter.Direction%2A> propiedad actualmente no se utiliza por la <xref:System.Web.UI.WebControls.Parameter> clase y está reservada para uso futuro.  
  
 El <xref:System.Web.UI.WebControls.Parameter.Direction%2A> propiedad describe la dirección del flujo de datos entre el valor que un <xref:System.Web.UI.WebControls.Parameter> instancia se enlaza a y el <xref:System.Web.UI.WebControls.Parameter> propio objeto. El valor predeterminado para el <xref:System.Web.UI.WebControls.Parameter.Direction%2A> propiedad, <xref:System.Data.ParameterDirection.Input>, describe el escenario más común donde es siempre el flujo de datos en una dirección: desde el valor en el que el <xref:System.Web.UI.WebControls.Parameter> objeto está enlazado a la <xref:System.Web.UI.WebControls.Parameter> objeto. Los cambios realizados en el valor subyacente se reflejan en el <xref:System.Web.UI.WebControls.Parameter> objeto, pero los cambios realizados en el <xref:System.Web.UI.WebControls.Parameter> objeto no se reflejan en los datos subyacentes. Puede establecer el <xref:System.Web.UI.WebControls.Parameter.Direction%2A> propiedad <xref:System.Data.ParameterDirection.InputOutput> o <xref:System.Data.ParameterDirection.Output> cuando se trabaja con los parámetros de salida, o <xref:System.Data.ParameterDirection.ReturnValue> cuando se trabaja con un valor devuelto de un procedimiento almacenado.  
  
 Si el <xref:System.Web.UI.WebControls.Parameter.Direction%2A> se cambia la propiedad del parámetro, el <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> se llama al método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo establecer el <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>, <xref:System.Web.UI.WebControls.Parameter.Type%2A>, y <xref:System.Web.UI.WebControls.Parameter.Direction%2A> propiedades de <xref:System.Web.UI.WebControls.Parameter> objetos cuando se usan como parámetros de salida y parámetros de valor devuelto con un procedimiento almacenado. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> información general de clases.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="protected internal virtual object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object Evaluate(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ Evaluate(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.Web.HttpContext * System.Web.UI.Control -&gt; obj&#xA;override this.Evaluate : System.Web.HttpContext * System.Web.UI.Control -&gt; obj" Usage="parameter.Evaluate (context, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Web.HttpContext" /> actual de la solicitud.</param>
        <param name="control">El objeto <see cref="T:System.Web.UI.Control" /> al que se enlaza el parámetro. Si el parámetro no está enlazado a un control, se omite el parámetro <c>control</c>.</param>
        <summary>Actualiza y devuelve el valor del objeto <see cref="T:System.Web.UI.WebControls.Parameter" />.</summary>
        <returns>Un objeto <see langword="object" /> que representa el valor actualizado y actual del parámetro.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La implementación predeterminada de la <xref:System.Web.UI.WebControls.Parameter.Evaluate%2A> método va a devolver `null` en todos los casos. Las clases que derivan de la <xref:System.Web.UI.WebControls.Parameter> clase invalidación el <xref:System.Web.UI.WebControls.Parameter.Evaluate%2A> método devuelva un valor de parámetro actualizados. Por ejemplo, el <xref:System.Web.UI.WebControls.ControlParameter> objeto devuelve el valor del control que está enlazado, mientras que el <xref:System.Web.UI.WebControls.QueryStringParameter> objeto recupera el par nombre/valor actual de la <xref:System.Web.HttpRequest> objeto.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Web.UI.WebControls.Parameter.Evaluate%2A> método para devolver el valor correcto en una clase que se deriva el <xref:System.Web.UI.WebControls.Parameter> clase. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.WebControls.Parameter> información general de clases.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#6)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDatabaseType">
      <MemberSignature Language="C#" Value="public System.Data.DbType GetDatabaseType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.DbType GetDatabaseType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.GetDatabaseType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDatabaseType () As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DbType GetDatabaseType();" />
      <MemberSignature Language="F#" Value="member this.GetDatabaseType : unit -&gt; System.Data.DbType" Usage="parameter.GetDatabaseType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene el valor <see cref="T:System.Data.DbType" /> que es equivalente al tipo CLR de la instancia <see cref="T:System.Web.UI.WebControls.Parameter" /> actual.</summary>
        <returns>Valor de <see cref="T:System.Data.DbType" /> que es equivalente al tipo CLR de la instancia actual de <see cref="T:System.Web.UI.WebControls.Parameter" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Parameter.DbType%2A> propiedad debe no ya se han establecido o se debe establecer en <xref:System.Data.DbType.Object>. Este método está pensado para su uso sólo cuando se establece el tipo CLR, pero la <xref:System.Web.UI.WebControls.Parameter.DbType%2A> propiedad no es.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Web.UI.WebControls.Parameter.DbType" /> ya se encuentra establecida en un valor distinto de <see cref="F:System.Data.DbType.Object" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTrackingViewState : bool" Usage="System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> está guardando los cambios en su estado de vista.</summary>
        <value>Es <see langword="true" /> si la vista de orígenes de datos está marcado para guardar su estado; en caso contrario, es <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="abstract member LoadViewState : obj -&gt; unit&#xA;override this.LoadViewState : obj -&gt; unit" Usage="parameter.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <see cref="T:System.Object" /> que representa el estado de <see cref="T:System.Web.UI.WebControls.Parameter" /> que se va a restaurar.</param>
        <summary>Restaura la vista del origen de datos tal y como se guardó previamente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se usa principalmente por la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código. Sin embargo, los desarrolladores de controles pueden invalidar este método para especificar cómo un control de servidor personalizado restaura su estado de vista. Para obtener más información, consulte [información general sobre la administración de estado de ASP.NET](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)).  
  
 Este método restaura la información de estado de vista para la <xref:System.Web.UI.WebControls.Parameter> objeto de una solicitud de página anterior guardada por el <xref:System.Web.UI.WebControls.Parameter.SaveViewState%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.WebControls.Parameter.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre del parámetro.</summary>
        <value>Nombre del parámetro. El valor predeterminado es <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter> los objetos no tienen que tener un nombre; Sin embargo, los controles de origen de datos pueden usar el nombre del parámetro para que coincida con un <xref:System.Web.UI.WebControls.Parameter> objeto en una colección con un parámetro en una firma de método de consulta o business SQL. Por ejemplo, el <xref:System.Web.UI.WebControls.SqlDataSource> control puede usar el nombre de la <xref:System.Web.UI.WebControls.Parameter> objeto para que coincida con un marcador de posición en una consulta SQL con parámetros. De forma similar, el <xref:System.Web.UI.WebControls.SqlDataSource> control puede usar el nombre de un <xref:System.Web.UI.WebControls.Parameter> objeto en el <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> colección para que coincida con un marcador de posición en el <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> propiedad. En algunos casos, no se usa el nombre y el orden en que el <xref:System.Web.UI.WebControls.Parameter> objeto se agrega a un <xref:System.Web.UI.WebControls.ParameterCollection> colección es más importante. Para obtener más información, consulte [usar parámetros con el SqlDataSource Control](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295) y [usar parámetros con el ObjectDataSource Control](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 Si se cambia el nombre del parámetro, el <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> se llama al método.  
  
   
  
## Examples  
 El código siguiente muestra cómo mostrar datos filtrados mediante un <xref:System.Web.UI.WebControls.ObjectDataSource> control para recuperar datos de un objeto de negocios de nivel intermedio y un <xref:System.Web.UI.WebControls.GridView> control para mostrar los resultados. El ejemplo de código consta de un <xref:System.Web.UI.WebControls.TextBox> (control), un <xref:System.Web.UI.WebControls.GridView> (control), el <xref:System.Web.UI.WebControls.ObjectDataSource> control y un botón de envío. De forma predeterminada, el <xref:System.Web.UI.WebControls.TextBox> control se rellena con el nombre de uno de los `Northwind` empleados. El <xref:System.Web.UI.WebControls.GridView> control muestra información sobre el empleado identificado por el nombre de la <xref:System.Web.UI.WebControls.TextBox> control. Para recuperar datos de otro empleado, escriba el nombre completo del empleado en el <xref:System.Web.UI.WebControls.TextBox> control y haga clic en el botón.  
  
 El <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> propiedad especifica una expresión usada para filtrar los datos recuperados por el <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> propiedad. Usa marcadores de posición de parámetro que se evalúan en los parámetros contenidos en el <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> colección. En este ejemplo, el marcador de posición de parámetro está limitado por comillas simples porque el tipo del parámetro es un tipo de cadena que puede contener espacios. Si el tipo del parámetro es un tipo numérico o de fecha, no se necesitan comillas delimitadores.  
  
 Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> propiedad de la <xref:System.Web.UI.WebControls.ObjectDataSource> clase.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Type" />
      </Docs>
    </Member>
    <Member MemberName="OnParameterChanged">
      <MemberSignature Language="C#" Value="protected void OnParameterChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnParameterChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.OnParameterChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnParameterChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnParameterChanged();" />
      <MemberSignature Language="F#" Value="member this.OnParameterChanged : unit -&gt; unit" Usage="parameter.OnParameterChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Llama al método <see cref="M:System.Web.UI.WebControls.ParameterCollection.OnParametersChanged(System.EventArgs)" /> de la colección <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> que contiene el objeto <see cref="T:System.Web.UI.WebControls.Parameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Web.UI.WebControls.Parameter> objeto no está incluido en un <xref:System.Web.UI.WebControls.ParameterCollection> colección, la llamada a la <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> método no tiene ningún efecto. Si el <xref:System.Web.UI.WebControls.Parameter> objeto está contenido en un <xref:System.Web.UI.WebControls.ParameterCollection> colección, <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> provoca la <xref:System.Web.UI.WebControls.ParameterCollection.ParametersChanged?displayProperty=nameWithType> eventos de la colección.  
  
 Si el <xref:System.Web.UI.WebControls.ParameterCollection> colección está contenida en un control de origen de datos, el <xref:System.Web.UI.WebControls.ParameterCollection.ParametersChanged?displayProperty=nameWithType> event genera el control de origen de datos <xref:System.Web.UI.IDataSource.DataSourceChanged> por los controles enlazados a datos para volver a enlazar, evento.  
  
 Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado. Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
 El método <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado. Ésta es la técnica preferida para controlar el evento en una clase derivada.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo llamar a la <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> método para generar el <xref:System.Web.UI.WebControls.ParameterCollection.ParametersChanged> evento cuando cambia el estado de un parámetro. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.WebControls.Parameter> información general de clases.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#7)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#7)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar <see cref="M:System.Web.UI.WebControls.Parameter.OnParameterChanged" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Web.UI.WebControls.Parameter.OnParameterChanged" /> de la clase base para que los delegados registrados reciban el evento.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ParameterCollection.ParametersChanged" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="abstract member SaveViewState : unit -&gt; obj&#xA;override this.SaveViewState : unit -&gt; obj" Usage="parameter.SaveViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Guarda los cambios realizados en el estado de la vista del objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> desde el momento en que se devolvió la página al servidor.</summary>
        <returns>Objeto <see cref="T:System.Object" /> que contiene los cambios efectuados en el estado de vista de <see cref="T:System.Web.UI.WebControls.Parameter" />. Si no hay un estado de vista asociado al objeto, este método devuelve <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método lo usan principalmente los desarrolladores de controles.  
  
 Estado de vista es la acumulación de los valores de propiedades de un control de servidor. Estos valores se colocan automáticamente en el control de servidor <xref:System.Web.UI.Control.ViewState%2A> propiedad, que es una instancia de la <xref:System.Web.UI.StateBag> clase. Valor de esta propiedad, a continuación, se conserva en un objeto de cadena después de guardar estado fase del ciclo de vida del control de servidor.  
  
 Cuando se guarda el estado de vista, este objeto de cadena se devuelve al cliente como una variable que se almacena en un elemento HTML `hidden` elemento. Al crear controles de servidor personalizados, se puede mejorar la eficacia reemplazando este método y modificando el control de servidor <xref:System.Web.UI.WebControls.Parameter.ViewState%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="SetDirty">
      <MemberSignature Language="C#" Value="protected internal virtual void SetDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SetDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.SetDirty" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub SetDirty ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void SetDirty();" />
      <MemberSignature Language="F#" Value="abstract member SetDirty : unit -&gt; unit&#xA;override this.SetDirty : unit -&gt; unit" Usage="parameter.SetDirty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Marca el objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> para que su estado se registre en el estado de vista.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Parameter.SetDirty%2A> se llama al método directamente por el <xref:System.Web.UI.WebControls.ParameterCollection.SetDirtyObject%2A?displayProperty=nameWithType> método, para marcar el <xref:System.Web.UI.WebControls.Parameter> objeto para que su estado se registra en estado de vista.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Size { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Size : int with get, set" Usage="System.Web.UI.WebControls.Parameter.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el tamaño del parámetro.</summary>
        <value>El tamaño del parámetro, expresado como un entero.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando el valor de <xref:System.Web.UI.WebControls.Parameter.Size%2A> se cambia, el <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> se llama al método.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Type" />
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve un duplicado de la instancia <see cref="T:System.Web.UI.WebControls.Parameter" /> actual.</summary>
        <returns>Un objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> que es una copia del objeto actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Parameter.Clone%2A> llamadas al método el <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.Web.UI.WebControls.Parameter%29> constructor para inicializar una nueva instancia de la <xref:System.Web.UI.WebControls.Parameter> clase con los valores de la instancia actual.  
  
 Si extiende el <xref:System.Web.UI.WebControls.Parameter> (clase), puede invalidar el <xref:System.Web.UI.WebControls.Parameter.Clone%2A> método para incluir cualquier estado que se debe copiar en una nueva instancia de la clase derivada.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Parameter.#ctor(System.Web.UI.WebControls.Parameter)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IStateManager::IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> está guardando los cambios en su estado de vista.</summary>
        <value>Es <see langword="true" /> si la vista de orígenes de datos está marcado para guardar su estado; en caso contrario, es <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (savedState As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ savedState) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <see cref="T:System.Object" /> que representa el estado de <see cref="T:System.Web.UI.WebControls.Parameter" /> que se va a restaurar.</param>
        <summary>Restaura la vista del origen de datos tal y como se guardó previamente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método restaura la información de estado de vista para la <xref:System.Web.UI.WebControls.Parameter> objeto de una solicitud de página anterior guardada por el <xref:System.Web.UI.WebControls.Parameter.SaveViewState%2A> método.  
  
 Este método lo usan principalmente los desarrolladores de controles. Puede invalidar este método para controlar la forma en que un control de servidor personalizado restaura su estado de vista.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Guarda los cambios realizados en el estado de la vista del objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> desde el momento en que se devolvió la página al servidor.</summary>
        <returns>Clase <see cref="T:System.Object" /> que contiene los cambios efectuados en el estado de vista del objeto <see cref="T:System.Web.UI.WebControls.Parameter" />. Si no hay un estado de vista asociado al objeto, este método devuelve <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método lo usan principalmente los desarrolladores de controles.  
  
 Estado de vista es la acumulación de los valores de propiedades de un control de servidor. Estos valores se colocan automáticamente en el control de servidor <xref:System.Web.UI.Control.ViewState%2A> propiedad, que es una instancia de la <xref:System.Web.UI.StateBag> clase. Valor de esta propiedad, a continuación, se conserva en un objeto de cadena después de guardar estado fase del ciclo de vida del control de servidor.  
  
 Cuando se guarda el estado de vista, este objeto de cadena se devuelve al cliente como una variable que se almacena en un elemento HTML `hidden` elemento. Al crear controles de servidor personalizados, se puede mejorar la eficacia reemplazando este método y modificando el control de servidor <xref:System.Web.UI.WebControls.Parameter.ViewState%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Hace que el objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> realice el seguimiento de los cambios en su estado de vista, de modo que puedan almacenarse en el objeto <see cref="P:System.Web.UI.Control.ViewState" /> del control y mantenerse en todas las solicitudes de la misma página.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="parameter.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Convierte el valor de esta instancia en la representación de cadena equivalente.</summary>
        <returns>Una representación de cadena del valor de esta instancia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.Parameter.ToString%2A> método devuelve el <xref:System.Web.UI.WebControls.Parameter.Name%2A> propiedad de la <xref:System.Web.UI.WebControls.Parameter> objeto. Si el <xref:System.Web.UI.WebControls.Parameter> objeto no tiene ningún nombre, <xref:System.Web.UI.WebControls.Parameter.ToString%2A> devuelve <xref:System.String.Empty?displayProperty=nameWithType>.  
  
   
  
## Examples  
 El código siguiente muestra cómo obtener acceso a las distintas propiedades de un <xref:System.Web.UI.WebControls.Parameter> objeto, incluida su <xref:System.Web.UI.WebControls.Parameter.Name%2A> y <xref:System.Web.UI.WebControls.Parameter.Type%2A> propiedades.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.Parameter.ToString_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter.ToString_1/CS/parametertostringcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.Parameter.ToString_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter.ToString_1/VB/parametertostringvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected virtual void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TrackViewState();" />
      <MemberSignature Language="F#" Value="abstract member TrackViewState : unit -&gt; unit&#xA;override this.TrackViewState : unit -&gt; unit" Usage="parameter.TrackViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Hace que el objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> realice el seguimiento de los cambios en su estado de vista, de modo que puedan almacenarse en el objeto <see cref="P:System.Web.UI.Control.ViewState" /> del control y mantenerse en todas las solicitudes de la misma página.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public TypeCode Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TypeCode Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TypeCode Type { TypeCode get(); void set(TypeCode value); };" />
      <MemberSignature Language="F#" Value="member this.Type : TypeCode with get, set" Usage="System.Web.UI.WebControls.Parameter.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el tipo del parámetro.</summary>
        <value>Tipo de la propiedad <see cref="T:System.Web.UI.WebControls.Parameter" />. El valor predeterminado es <see cref="F:System.TypeCode.Object" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El tipo se puede utilizar para crear parámetros fuertemente tipados, para que los valores se convierten correctamente entre su aplicación Web y el código subyacente.  
  
 Si se cambia el tipo del parámetro, el <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> se llama al método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo establecer el <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>, <xref:System.Web.UI.WebControls.Parameter.Type%2A>, y <xref:System.Web.UI.WebControls.Parameter.Direction%2A> propiedades de <xref:System.Web.UI.WebControls.Parameter> objetos cuando se usan como parámetros de salida y parámetros de valor devuelto con un procedimiento almacenado. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> información general de clases.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El tipo de parámetro no es ninguno de los valores de <see cref="T:System.TypeCode" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <related type="Article" href="https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295">Usar los controles de AccessDataSource y SqlDataSource con parámetros</related>
        <related type="Article" href="https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4">Usar parámetros con el Control ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="ViewState">
      <MemberSignature Language="C#" Value="protected System.Web.UI.StateBag ViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.StateBag ViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.ViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ViewState As StateBag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::StateBag ^ ViewState { System::Web::UI::StateBag ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ViewState : System.Web.UI.StateBag" Usage="System.Web.UI.WebControls.Parameter.ViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.StateBag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un diccionario con información de estado que permite guardar y restaurar el estado de vista de un objeto <see cref="T:System.Web.UI.WebControls.Parameter" /> en las distintas solicitudes de la misma página.</summary>
        <value>Una instancia de <see cref="T:System.Web.UI.StateBag" /> que contiene la información del estado de vista del objeto <see cref="T:System.Web.UI.WebControls.Parameter" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Estado de vista de un parámetro es la acumulación de todos sus valores de propiedad. Para conservar estos valores en las solicitudes HTTP, controles de servidor ASP.NET utilizan esta propiedad, que es una instancia de la <xref:System.Web.UI.StateBag> (clase), para almacenar los valores de propiedad. Los valores, a continuación, se pasan como una variable a un elemento HTML `hidden` elemento de entrada cuando se procesan las solicitudes posteriores. Estado de vista está habilitado para todos los controles de servidor de forma predeterminada.  
  
 Para obtener más información sobre los diccionarios y cómo usarlas, vea [colecciones y estructuras de datos](~/docs/standard/collections/index.md).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el objeto de estado de vista para almacenar el estado del objeto de parámetro en una clase que extiende el <xref:System.Web.UI.WebControls.Parameter> clase. Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.UI.WebControls.Parameter> información general de clases.  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#5)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
      </Docs>
    </Member>
  </Members>
</Type>