<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DbDataAdapter.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5790ce3520f5c395d9b802fc24df3edc1b6c9ffdb.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">790ce3520f5c395d9b802fc24df3edc1b6c9ffdb</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbDataAdapter">
          <source>Aids implementation of the <ph id="ph1">&lt;see cref="T:System.Data.IDbDataAdapter" /&gt;</ph> interface.</source>
          <target state="translated">Facilita la implementación de la interfaz <ph id="ph1">&lt;see cref="T:System.Data.IDbDataAdapter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbDataAdapter">
          <source>Inheritors of <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> implement a set of functions to provide strong typing, but inherit most of the functionality needed to fully implement a <bpt id="p1">**</bpt>DataAdapter<ept id="p1">**</ept>.</source>
          <target state="translated">Los herederos de <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> implementan un conjunto de funciones para proporcionar un tipado fuerte, pero heredan la mayoría de las funciones necesarias para implementar completamente un elemento <bpt id="p1">**</bpt>DataAdapter<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> class inherits from the <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> class and implements the <ph id="ph3">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> clase hereda de la <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> clase e implementa el <ph id="ph3">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interfaz.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source>It helps a class implement a <bpt id="p1">**</bpt>DataAdapter<ept id="p1">**</ept> designed for use with a relational database.</source>
          <target state="translated">Ayuda a una clase implementar un <bpt id="p1">**</bpt>DataAdapter<ept id="p1">**</ept> diseñado para su uso con una base de datos relacional.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source>An application does not create an instance of the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> class directly, but creates an instance of a class that inherits from it.</source>
          <target state="translated">Una aplicación no crea una instancia de la <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> clase directamente, sino que crea una instancia de una clase que hereda de ella.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source>Classes that inherit <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> must implement the inherited members, and typically define additional members to add provider-specific functionality.</source>
          <target state="translated">Las clases que heredan <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> deben implementar los miembros heredados y suelen definir miembros adicionales para agregar la funcionalidad específica del proveedor.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source>For example, the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> class defines the <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> property, and the <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> class defines eight overloads of the <ph id="ph4">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph> method.</source>
          <target state="translated">Por ejemplo, el <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> clase define la <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> propiedad y el <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> clase define ocho sobrecargas de la <ph id="ph4">&lt;xref:System.Data.IDataAdapter.Fill%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source>In turn, the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> class inherits the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method, and also defines two additional overloads of <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> that take an ADO Recordset object as a parameter.</source>
          <target state="translated">A su vez, el <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> clase hereda el <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> método y también define dos sobrecargas adicionales de <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A&gt;</ph> que toma un objeto ADO Recordset como parámetro.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source>When you inherit from the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> class, we recommend that you implement the following constructors:</source>
          <target state="translated">Al heredar de la <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> (clase), es recomendable que implemente los siguientes constructores:</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Item</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Elemento</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Descripción</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> <bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>DataAdapter()</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> <bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>DataAdapter()</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Initializes a new instance of the <bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>DataAdapter class.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Inicializa una nueva instancia de la <bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>DataAdapter (clase).</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> <bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>DataAdapter(<bpt id="p2">*</bpt>Prv<ept id="p2">*</ept>Command <bpt id="p3">*</bpt>selectCommand<ept id="p3">*</ept>)</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> <bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>DataAdapter (<bpt id="p2">*</bpt>Prv<ept id="p2">*</ept>comando <bpt id="p3">*</bpt>selectCommand<ept id="p3">*</ept>)</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Initializes a new instance of the <bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>DataAdapter class with the specified SQL SELECT statement.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Inicializa una nueva instancia de la <bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>clase DataAdapter con la instrucción SELECT de SQL especificada.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> <bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>DataAdapter(string <bpt id="p2">*</bpt>selectCommandText<ept id="p2">*</ept>, string <bpt id="p3">*</bpt>selectConnectionString<ept id="p3">*</ept>)</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> <bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>DataAdapter (cadena <bpt id="p2">*</bpt>selectCommandText<ept id="p2">*</ept>, cadena <bpt id="p3">*</bpt>selectConnectionString<ept id="p3">*</ept>)</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Initializes a new instance of the <bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>DataAdapter class with an SQL SELECT statement and a connection string.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Inicializa una nueva instancia de la <bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>clase DataAdapter con una instrucción SELECT de SQL y una cadena de conexión.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> <bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>DataAdapter(string <bpt id="p2">*</bpt>selectCommandText<ept id="p2">*</ept>, <bpt id="p3">*</bpt>Prv<ept id="p3">*</ept>Connection <bpt id="p4">*</bpt>selectConnection<ept id="p4">*</ept>)</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> <bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>DataAdapter (cadena <bpt id="p2">*</bpt>selectCommandText<ept id="p2">*</ept>, <bpt id="p3">*</bpt>Prv<ept id="p3">*</ept>conexión <bpt id="p4">*</bpt>selectConnection<ept id="p4">*</ept>)</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Initializes a new instance of the <bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>DataAdapter class with an SQL SELECT statement and a <bpt id="p2">*</bpt>Prv<ept id="p2">*</ept>Connection object.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Inicializa una nueva instancia de la <bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>clase DataAdapter con una instrucción SELECT de SQL y una <bpt id="p2">*</bpt>Prv<ept id="p2">*</ept>objeto de conexión.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source>To promote consistency among .NET Framework data providers, you should name the inheriting class in the form <bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>DataAdapter, where <bpt id="p2">*</bpt>Prv<ept id="p2">*</ept> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</source>
          <target state="translated">Para promover la coherencia entre los proveedores de datos de .NET Framework, debe nombrar la clase heredada en el formulario <bpt id="p1">*</bpt>Prv<ept id="p1">*</ept>DataAdapter, donde <bpt id="p2">*</bpt>Prv<ept id="p2">*</ept> es el prefijo uniforme que se asigna a todas las clases de .NET específico Espacio de nombres de proveedor de datos de marco.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbDataAdapter">
          <source>For example, "Sql" is the prefix of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> class in the <bpt id="p1">**</bpt>System.Data.SqlClient<ept id="p1">**</ept> namespace.</source>
          <target state="translated">Por ejemplo, "Sql" es el prefijo de la <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> clase en el <bpt id="p1">**</bpt>System.Data.SqlClient<ept id="p1">**</ept> espacio de nombres.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbDataAdapter">
          <source>Initializes a new instance of a <ph id="ph1">&lt;see langword="DataAdapter" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de una clase <ph id="ph1">&lt;see langword="DataAdapter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.#ctor">
          <source>Initializes a new instance of a <bpt id="p1">**</bpt>DataAdapter<ept id="p1">**</ept> class.</source>
          <target state="translated">Inicializa una nueva instancia de una clase <bpt id="p1">**</bpt>DataAdapter<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.#ctor">
          <source>When you create an instance of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, the following read/write properties are set to the following initial values.</source>
          <target state="translated">Cuando se crea una instancia de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, las siguientes propiedades de lectura y escritura se establecen en los siguientes valores iniciales.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.#ctor">
          <source>Properties</source>
          <target state="translated">Propiedades</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.#ctor">
          <source>Initial value</source>
          <target state="translated">Valor inicial</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.#ctor">
          <source>A new <ph id="ph1">&lt;xref:System.Data.IDbCommand&gt;</ph>.</source>
          <target state="translated">Un nuevo objeto <ph id="ph1">&lt;xref:System.Data.IDbCommand&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.#ctor">
          <source>A new <ph id="ph1">&lt;xref:System.Data.IDbCommand&gt;</ph>.</source>
          <target state="translated">Un nuevo objeto <ph id="ph1">&lt;xref:System.Data.IDbCommand&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.#ctor">
          <source>A new <ph id="ph1">&lt;xref:System.Data.IDbCommand&gt;</ph>.</source>
          <target state="translated">Un nuevo objeto <ph id="ph1">&lt;xref:System.Data.IDbCommand&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.#ctor">
          <source>A new <ph id="ph1">&lt;xref:System.Data.IDbCommand&gt;</ph>.</source>
          <target state="translated">Un nuevo objeto <ph id="ph1">&lt;xref:System.Data.IDbCommand&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.#ctor">
          <source>You can change the value of any of these properties through a separate call to the property.</source>
          <target state="translated">Puede cambiar el valor de cualquiera de estas propiedades mediante una llamada independiente a la propiedad.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)">
          <source>A <ph id="ph1">&lt;see langword="DataAdapter" /&gt;</ph> object used to create the new <ph id="ph2">&lt;see langword="DataAdapter" /&gt;</ph>.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see langword="DataAdapter" /&gt;</ph> utilizado para crear el nuevo <ph id="ph2">&lt;see langword="DataAdapter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)">
          <source>Initializes a new instance of a <ph id="ph1">&lt;see langword="DataAdapter" /&gt;</ph> class from an existing object of the same type.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see langword="DataAdapter" /&gt;</ph> a partir de un objeto existente del mismo tipo.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> constructor is designed for use by a .NET Framework data provider when implementing a similar constructor for use in a clone implementation.</source>
          <target state="translated">Esta sobrecarga de la <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> constructor está diseñado para su uso por un proveedor de datos de .NET Framework cuando se implementa un constructor similar para utilizarlo en una implementación de clonación.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> to add to the batch.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> que se va a agregar al lote.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> to the current batch.</source>
          <target state="translated">Agrega una interfaz <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> al lote actual.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)">
          <source>The number of commands in the batch before adding the <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph>.</source>
          <target state="translated">Número de comandos en el lote antes de agregar <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)">
          <source>In <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, this method throws <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">En <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, este método produce <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)">
          <source>Classes that inherit from <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> override this method to provide support for batches.</source>
          <target state="translated">Las clases que heredan de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> invalide este método para proporcionar compatibilidad con lotes.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)">
          <source>The adapter does not support batches.</source>
          <target state="translated">El adaptador no admite el procesamiento por lotes.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)">
          <source>This method is protected and is designed for use by a .NET Framework data provider.</source>
          <target state="translated">Este método está protegido y está diseñado para su uso por un proveedor de datos de .NET Framework.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)">
          <source>If a class that inherits from <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> supports batches, that class overrides this method to allow users to add a command to a batch.</source>
          <target state="translated">Si una clase que hereda de <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> es compatible con lotes, que la clase invalida este método para permitir a los usuarios agregar un comando a un lote.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.ClearBatch">
          <source>Removes all <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> objects from the batch.</source>
          <target state="translated">Quita todos los objetos <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> del lote.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.ClearBatch">
          <source>In <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, this method throws <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">En <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, este método produce <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.ClearBatch">
          <source>Classes that inherit from <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> override this method to provide support for batches.</source>
          <target state="translated">Las clases que heredan de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> invalide este método para proporcionar compatibilidad con lotes.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.ClearBatch">
          <source>The adapter does not support batches.</source>
          <target state="translated">El adaptador no admite el procesamiento por lotes.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.ClearBatch">
          <source>This method is protected and is designed for use by a .NET Framework data provider.</source>
          <target state="translated">Este método está protegido y está diseñado para su uso por un proveedor de datos de .NET Framework.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.ClearBatch">
          <source>If a class that inherits from <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> supports batches, that class overrides this method to allow users to remove all commands from a batch.</source>
          <target state="translated">Si una clase que hereda de <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> es compatible con lotes, que la clase invalida este método para permitir a los usuarios quitar todos los comandos de un lote.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> used to update the data source.</source>
          <target state="translated">Clase <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> que se utiliza para actualizar el origen de datos.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> executed during the <ph id="ph2">&lt;see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> ejecutado durante <ph id="ph2">&lt;see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
          <source>Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</source>
          <target state="translated">Si el comando es una instrucción UPDATE, INSERT, DELETE o SELECT.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DataTableMapping" /&gt;</ph> object.</source>
          <target state="translated">Un objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DataTableMapping" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.RowUpdatedEventArgs" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Data.Common.RowUpdatedEventArgs" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
          <source>A new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.RowUpdatedEventArgs" /&gt;</ph> class.</source>
          <target state="translated">Nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Data.Common.RowUpdatedEventArgs" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /&gt;</ph> method.</source>
          <target state="translated">Al reemplazar <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /&gt;</ph> en una clase derivada, asegúrese de llamar a la clase base <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> that updates the data source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> que actualiza el origen de datos.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> to execute during the <ph id="ph2">&lt;see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> que se va a ejecutar durante <ph id="ph2">&lt;see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
          <source>Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</source>
          <target state="translated">Si el comando es una instrucción UPDATE, INSERT, DELETE o SELECT.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DataTableMapping" /&gt;</ph> object.</source>
          <target state="translated">Un objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DataTableMapping" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.RowUpdatingEventArgs" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Data.Common.RowUpdatingEventArgs" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
          <source>A new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.RowUpdatingEventArgs" /&gt;</ph> class.</source>
          <target state="translated">Nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Data.Common.RowUpdatingEventArgs" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /&gt;</ph> method.</source>
          <target state="translated">Al reemplazar <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /&gt;</ph> en una clase derivada, asegúrese de llamar a la clase base <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName">
          <source>The default name used by the <ph id="ph1">&lt;see cref="T:System.Data.Common.DataAdapter" /&gt;</ph> object for table mappings.</source>
          <target state="translated">Nombre predeterminado que el objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DataAdapter" /&gt;</ph> utiliza para las asignaciones de tabla.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName">
          <source>"Table" is the default name used by the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> object for table mappings.</source>
          <target state="translated">"Table" es el nombre predeterminado utilizado por la <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> objeto para las asignaciones de tabla.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName&gt;</ph> is when an application adds a table mapping to be used with <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>, but does not specify a <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName&gt;</ph> es cuando una aplicación agrega una asignación de tabla para su uso con <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>, pero no especifica un <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> nombre.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbDataAdapter.DeleteCommand">
          <source>Gets or sets a command for deleting records from the data set.</source>
          <target state="translated">Obtiene o establece un comando para eliminar registros del conjunto de datos.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.DeleteCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> used during <ph id="ph2">&lt;see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to delete records in the data source for deleted rows in the data set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> utilizado mientras opera <ph id="ph2">&lt;see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> para eliminar registros del origen de datos para filas eliminadas en el conjunto de datos.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.DeleteCommand">
          <source>During <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, if this property is not set and primary key information is present in the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.IDbDataAdapter.DeleteCommand%2A&gt;</ph> is automatically generated.</source>
          <target state="translated">Durante la <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, si no se establece esta propiedad y la información de clave principal está presente en el <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, el <ph id="ph3">&lt;xref:System.Data.IDbDataAdapter.DeleteCommand%2A&gt;</ph> se genera automáticamente.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.DeleteCommand">
          <source>The following example creates the derived class <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and sets some of its properties.</source>
          <target state="translated">En el ejemplo siguiente se crea la clase derivada <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> y establece algunas de sus propiedades.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para liberar tanto recursos administrados como no administrados; es <ph id="ph2">&lt;see langword="false" /&gt;</ph> para liberar únicamente recursos no administrados.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Libera los recursos no administrados que usa <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> y, de forma opcional, libera los recursos administrados.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.ExecuteBatch">
          <source>Executes the current batch.</source>
          <target state="translated">Ejecuta el lote actual.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.ExecuteBatch">
          <source>The return value from the last command in the batch.</source>
          <target state="translated">Valor devuelto del último comando del lote.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.ExecuteBatch">
          <source>In <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, this method throws <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">En <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, este método produce <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.ExecuteBatch">
          <source>Classes that inherit from <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> override this method to provide support for batches.</source>
          <target state="translated">Las clases que heredan de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> invalide este método para proporcionar compatibilidad con lotes.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.ExecuteBatch">
          <source>This method is protected and is designed for use by a .NET Framework data provider.</source>
          <target state="translated">Este método está protegido y está diseñado para su uso por un proveedor de datos de .NET Framework.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.ExecuteBatch">
          <source>If a class that inherits from <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> supports batches, that class overrides this method to allow users to execute a batch.</source>
          <target state="translated">Si una clase que hereda de <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> es compatible con lotes, que la clase invalida este método para permitir a los usuarios ejecutar un lote.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.ExecuteBatch">
          <source>An implementation of this method combines the commands in the adapter into a batch, then executes the batch and returns the return value of the batch.</source>
          <target state="translated">Una implementación de este método combina los comandos en el adaptador en un lote, a continuación, ejecuta el lote y devuelve el valor devuelto del lote.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbDataAdapter">
          <source>Fills a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> or a <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Rellena un objeto <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> o un objeto <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to fill with records and, if necessary, schema.</source>
          <target state="translated">Clase <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> que se va a rellenar con registros y, si es necesario, con un esquema.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>Adds or refreshes rows in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Agrega o actualiza filas en <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>The number of rows successfully added to or refreshed in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Número de filas agregadas o actualizadas correctamente en la clase <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">No se incluyen las filas afectadas por instrucciones que no devuelven filas.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method retrieves the data from the data source using a SELECT statement.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> método recupera los datos de origen de datos con una instrucción SELECT.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> object associated with the select command must be valid, but it does not need to be open.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> objeto asociado con el comando select debe ser válido, pero no es necesario que esté abierto.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> is closed before <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called, it is opened to retrieve data and then closed.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> se cerró antes de <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> es llama, que se abrió para recuperar datos y, a continuación, se cierra.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>If the connection is open before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called, it remains open.</source>
          <target state="translated">Si la conexión está abierta antes de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> es llama, permanece abierta.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</source>
          <target state="translated">Si se encuentra un error o una excepción al rellenar las tablas de datos, las filas agregadas antes de producirse el error mantienen en las tablas de datos.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>The remainder of the operation is aborted.</source>
          <target state="translated">El resto de la operación se ha anulado.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>If a command does not return any rows, no tables are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, and no exception is raised.</source>
          <target state="translated">Si un comando no devuelve ninguna fila, ninguna de las tablas se agrega a la <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, y no se genera ninguna excepción.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> object encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it generates names for the subsequent columns using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> objeto detecta columnas duplicadas al rellenar un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, genera nombres para las columnas siguientes utilizando el modelo "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2","<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>If the incoming data contains unnamed columns, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">Si los datos entrantes contienen columnas sin nombre, se colocan en la <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> según el modelo "Columna1", "Columna2" y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>When the query specified returns multiple results, the result set for each row returning query is placed in a separate table.</source>
          <target state="translated">Cuando la consulta especificada devuelve varios resultados, el conjunto de resultados para cada consulta que devuelve filas se coloca en una tabla independiente.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</source>
          <target state="translated">Conjuntos de resultados adicionales se denominan agregando valores enteros al nombre de tabla especificado (por ejemplo, "Table", "Tabla1", "Tabla2" y así sucesivamente).</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table" because it is the first table created.</source>
          <target state="translated">Dado que no hay ninguna tabla se crea para una consulta que no devuelve filas, si se procesa una consulta insert seguida de una consulta select, la tabla creada para la consulta select se denomina "Table" porque es la primera tabla creada.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">Las aplicaciones que usan nombres de tabla y columna deben asegurarse de que no haya conflictos con estos modelos de nomenclatura.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>When the SELECT statement used to populate the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> returns multiple results, such as batch SQL statements, if one of the results contains an error, all subsequent results are skipped and are not added to the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Si la instrucción SELECT utilizada para rellenar el <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> devuelve varios resultados, como instrucciones SQL por lotes, si uno de los resultados contiene un error, todos los resultados posteriores se omiten y no se agregan a la <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>When using subsequent <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> calls to refresh the contents of the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, two conditions must be met:</source>
          <target state="translated">Cuando se usa posteriores <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> llamadas para actualizar el contenido de la <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, se deben cumplir dos condiciones:</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>The SQL statement should match the one initially used to populate the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">La instrucción SQL debe coincidir con la que se usó inicialmente para rellenar el <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>The <bpt id="p1">**</bpt>Key<ept id="p1">**</ept> column information must be present.</source>
          <target state="translated">El <bpt id="p1">**</bpt>clave<ept id="p1">**</ept> información de la columna debe estar presente.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>If primary key information is present, any duplicate rows are reconciled and only appear once in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> that corresponds to the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Si hay información de clave principal, las filas duplicadas se reconcilian y sólo aparecen una vez en el <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> que corresponde a la <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>Primary key information may be set either through <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>, by specifying the <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>, or by setting the <ph id="ph4">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> property to <ph id="ph5">`AddWithKey`</ph>.</source>
          <target state="translated">Información de clave principal puede establecerse a través de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>, especificando la <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> propiedad de la <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>, o estableciendo la <ph id="ph4">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> propiedad <ph id="ph5">`AddWithKey`</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>If the <ph id="ph1">`SelectCommand`</ph> returns the results of an OUTER JOIN, the <ph id="ph2">`DataAdapter`</ph> does not set a <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> value for the resulting <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Si <ph id="ph1">`SelectCommand`</ph> devuelve los resultados de OUTER JOIN, <ph id="ph2">`DataAdapter`</ph> no establece un valor <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> para el objeto <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> resultante.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</source>
          <target state="translated">Debe definir explícitamente la clave principal para asegurarse de que las filas duplicadas se resuelven correctamente.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>For more information, see <bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>definir claves principales<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>When handling batch SQL statements that return multiple results, the implementation of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</source>
          <target state="translated">Al controlar instrucciones SQL por lotes que devuelven varios resultados, la implementación de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> para el proveedor de datos de .NET Framework para OLE DB recupera información de esquema para sólo el primer resultado.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
          <source>To retrieve schema information for multiple results, use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> with the <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> set to <ph id="ph3">`AddWithKey`</ph>.</source>
          <target state="translated">Para recuperar información de esquema de varios resultados, utilice <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> con el <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> establecido en <ph id="ph3">`AddWithKey`</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to use for table mapping.</source>
          <target state="translated">Nombre de <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> que se va a utilizar para la asignación de tabla.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>Adds or refreshes rows in a specified range in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to match those in the data source using the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> name.</source>
          <target state="translated">Agrega filas en un intervalo especificado de <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> o las actualiza para hacerlas coincidir con las filas del origen de datos utilizando el nombre de <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>The number of rows successfully added to or refreshed in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Número de filas agregadas o actualizadas correctamente en la clase <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">No se incluyen las filas afectadas por instrucciones que no devuelven filas.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method retrieves rows from the data source using the SELECT statement specified by an associated <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> property.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> método recupera filas del origen de datos mediante la instrucción SELECT especificada por un asociado <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>The connection object associated with the SELECT statement must be valid, but it does not need to be open.</source>
          <target state="translated">El objeto de conexión asociado a la instrucción SELECT debe ser válido, pero no es necesario que esté abierto.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>If the connection is closed before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">Si la conexión se cerró antes de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> es llama, se abre para recuperar datos, a continuación, se cierra.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>If the connection is open before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called, it remains open.</source>
          <target state="translated">Si la conexión está abierta antes de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> es llama, permanece abierta.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> operation then adds the rows to destination <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects in the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, creating the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> objects if they do not already exist.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> operación, a continuación, agrega las filas al destino <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objetos en el <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, creando la <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> objetos si aún no existen.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>When creating <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects, the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> operation normally creates only column name metadata.</source>
          <target state="translated">Al crear <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objetos, la <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> operación suele crear únicamente metadatos de nombre de columna.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>However, if the <ph id="ph1">&lt;xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt;</ph> property is set to <ph id="ph2">`AddWithKey`</ph>, appropriate primary keys and constraints are also created.</source>
          <target state="translated">Sin embargo, si la <ph id="ph1">&lt;xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt;</ph> propiedad está establecida en <ph id="ph2">`AddWithKey`</ph>, también se crean claves principales adecuadas y restricciones.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it generates names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> detecta columnas duplicadas al rellenar un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, genera nombres para las columnas siguientes, utilizando el patrón "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2","<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>If the incoming data contains unnamed columns, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">Si los datos entrantes contienen columnas sin nombre, se colocan en la <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> según el modelo "Columna1", "Columna2" y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>When multiple result sets are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> each result set is placed in a separate table.</source>
          <target state="translated">Cuando se agregan varios conjuntos de resultados a la <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> cada conjunto de resultados se coloca en una tabla independiente.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>The overload of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> that takes <ph id="ph2">`DataTable`</ph> as a parameter only obtains the first result.</source>
          <target state="translated">La sobrecarga de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> que toma <ph id="ph2">`DataTable`</ph> como un parámetro sólo obtiene el primer resultado.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>Use an overload of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> that takes <ph id="ph2">`DataSet`</ph> as a parameter to obtain multiple results.</source>
          <target state="translated">Use una sobrecarga de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> que toma <ph id="ph2">`DataSet`</ph> como un parámetro para obtener varios resultados.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method supports scenarios where the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contains multiple <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> objects whose names differ only by case.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> método es compatible con escenarios donde la <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contiene varias <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> objetos cuyos nombres se diferencien solo por el uso de mayúsculas o minúsculas.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>In such situations, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</source>
          <target state="translated">En estas situaciones, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> realiza una comparación entre mayúsculas y minúsculas para encontrar la tabla correspondiente y crea una tabla nueva si no existe ninguna coincidencia exacta.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">El siguiente código C# ilustra este comportamiento.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>If <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called and the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contains only one <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> whose name differs only by case, that <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> is updated.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> se llama y <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contiene solamente un <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> cuyo nombre difiere sólo por mayúsculas, o que <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> se actualiza.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>In this scenario, the comparison is case insensitive.</source>
          <target state="translated">En este escenario, la comparación distingue entre mayúsculas y minúsculas.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">El siguiente código C# ilustra este comportamiento.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method multiple times on the same <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Puede usar el <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> método varias veces en la misma <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>If a primary key exists, incoming rows are merged with matching rows that already exist.</source>
          <target state="translated">Si existe una clave principal, las filas entrantes se combinan con filas coincidentes que ya existen.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>If no primary key exists, incoming rows are appended to the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Si no existe ninguna clave principal, las filas entrantes se anexan a la <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>If the <ph id="ph1">`SelectCommand`</ph> returns the results of an OUTER JOIN, the <ph id="ph2">`DataAdapter`</ph> does not set a <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> value for the resulting <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Si <ph id="ph1">`SelectCommand`</ph> devuelve los resultados de OUTER JOIN, <ph id="ph2">`DataAdapter`</ph> no establece un valor <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> para el objeto <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> resultante.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</source>
          <target state="translated">Debe definir explícitamente la clave principal para asegurarse de que las filas duplicadas se resuelven correctamente.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>For more information, see <bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>definir claves principales<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>When handling batch SQL statements that return multiple results, the implementation of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> for a .NET Framework data provider retrieves schema information for only the first result.</source>
          <target state="translated">Al controlar instrucciones SQL por lotes que devuelven varios resultados, la implementación de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> para datos de .NET Framework proveedor recupera información de esquema para sólo el primer resultado.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>The source table is invalid.</source>
          <target state="translated">La tabla de origen no es válida.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
          <source>This overload of the <ph id="ph1">&lt;see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> method is protected and is designed for use by a .NET Framework data provider.</source>
          <target state="translated">Esta sobrecarga de la <ph id="ph1">&lt;see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> método está protegido y está diseñado para su uso por un proveedor de datos de .NET Framework.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to fill with records and, if necessary, schema.</source>
          <target state="translated">Clase <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> que se va a rellenar con registros y, si es necesario, con un esquema.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>The name of the source table to use for table mapping.</source>
          <target state="translated">Nombre de la tabla de origen que se utilizará para la asignación de tabla.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>Adds or refreshes rows in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to match those in the data source using the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> names.</source>
          <target state="translated">Agrega filas a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> o las actualiza para hacerlas coincidir con las filas del origen de datos utilizando los nombres de <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> y <ph id="ph3">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>The number of rows successfully added to or refreshed in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Número de filas agregadas o actualizadas correctamente en la clase <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">No se incluyen las filas afectadas por instrucciones que no devuelven filas.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method retrieves the data from the data source using a SELECT statement.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> método recupera los datos de origen de datos con una instrucción SELECT.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> object associated with the select command must be valid, but it does not need to be open.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> objeto asociado con el comando select debe ser válido, pero no es necesario que esté abierto.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> is closed before <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> se cerró antes de <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> es llama, se abre para recuperar datos, a continuación, se cierra.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>If the connection is open before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called, it remains open.</source>
          <target state="translated">Si la conexión está abierta antes de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> es llama, permanece abierta.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>If a command does not return any rows, no tables are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, and no exception is raised.</source>
          <target state="translated">Si un comando no devuelve ninguna fila, ninguna de las tablas se agrega a la <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, y no se genera ninguna excepción.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> object encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it will generate names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> objeto detecta columnas duplicadas al rellenar un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, generará nombres para las columnas siguientes, utilizando el patrón "columnname1", "columnname2", "nombredecolumna3" y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>If the incoming data contains unnamed columns, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">Si los datos entrantes contienen columnas sin nombre, se colocan en la <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> según el modelo "Columna1", "Columna2" y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>When the query specified returns multiple results, each result set is placed in a separate table.</source>
          <target state="translated">Cuando la consulta especificada devuelve varios resultados, cada conjunto de resultados se coloca en una tabla independiente.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</source>
          <target state="translated">Conjuntos de resultados adicionales se denominan agregando valores enteros al nombre de tabla especificado (por ejemplo, "Table", "Tabla1", "Tabla2" y así sucesivamente).</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</source>
          <target state="translated">Puesto que no se crean tablas para una consulta que no devuelve filas, si tuviera que procesar una consulta insert seguida de una consulta select, la tabla creada para la consulta select se denominaría "Tabla", porque es la primera tabla creada.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">Las aplicaciones que usan nombres de tabla y columna deben asegurarse de que no haya conflictos con estos modelos de nomenclatura.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method supports scenarios where the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contains multiple <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> objects whose names differ only by case.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> método es compatible con escenarios donde la <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contiene varias <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> objetos cuyos nombres se diferencien solo por el uso de mayúsculas o minúsculas.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>In such situations, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</source>
          <target state="translated">En estas situaciones, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> realiza una comparación entre mayúsculas y minúsculas para encontrar la tabla correspondiente y crea una tabla nueva si no existe ninguna coincidencia exacta.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">El siguiente código C# ilustra este comportamiento.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>If <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called and the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contains only one <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> whose name differs only by case, that <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> is updated.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> se llama y <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contiene solamente un <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> cuyo nombre difiere sólo por mayúsculas, o que <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> se actualiza.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>In this scenario, the comparison is case insensitive.</source>
          <target state="translated">En este escenario, la comparación distingue entre mayúsculas y minúsculas.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">El siguiente código C# ilustra este comportamiento.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</source>
          <target state="translated">Si se encuentra un error o una excepción al rellenar las tablas de datos, las filas agregadas antes de producirse el error mantienen en las tablas de datos.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>The remainder of the operation is aborted.</source>
          <target state="translated">El resto de la operación se ha anulado.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>When the SELECT statement used to populate the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> returns multiple results, such as a batch SQL statement, be aware of the following:</source>
          <target state="translated">Si la instrucción SELECT utilizada para rellenar el <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> devuelve varios resultados, como un lote de instrucciones SQL, tener en cuenta lo siguiente:</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>If one of the results contains an error, all subsequent results are skipped and not added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Si uno de los resultados contiene un error, todos los resultados posteriores se omiten y no se agregan a la <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>When using subsequent <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> calls to refresh the contents of the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, two conditions must be met:</source>
          <target state="translated">Cuando se usa posteriores <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> llamadas para actualizar el contenido de la <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, se deben cumplir dos condiciones:</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>The SQL statement should match the one initially used to populate the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">La instrucción SQL debe coincidir con la que se usó inicialmente para rellenar el <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>The <bpt id="p1">**</bpt>Key<ept id="p1">**</ept> column information must be present.</source>
          <target state="translated">El <bpt id="p1">**</bpt>clave<ept id="p1">**</ept> información de la columna debe estar presente.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>If primary key information is present, any duplicate rows are reconciled and only appear once in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> that corresponds to the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Si hay información de clave principal, las filas duplicadas se reconcilian y sólo aparecen una vez en el <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> que corresponde a la <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>Primary key information may be set either through <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>, by specifying the <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>, or by setting the <ph id="ph4">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> property to <ph id="ph5">`AddWithKey`</ph>.</source>
          <target state="translated">Información de clave principal puede establecerse a través de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>, especificando la <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> propiedad de la <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>, o estableciendo la <ph id="ph4">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> propiedad <ph id="ph5">`AddWithKey`</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>If the <ph id="ph1">`SelectCommand`</ph> returns the results of an OUTER JOIN, the <ph id="ph2">`DataAdapter`</ph> does not set a <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> value for the resulting <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Si <ph id="ph1">`SelectCommand`</ph> devuelve los resultados de OUTER JOIN, <ph id="ph2">`DataAdapter`</ph> no establece un valor <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> para el objeto <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> resultante.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</source>
          <target state="translated">Debe definir explícitamente la clave principal para asegurarse de que las filas duplicadas se resuelven correctamente.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>For more information, see<bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte<bpt id="p1">[</bpt>definir claves principales<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>When handling batch SQL statements that return multiple results, the implementation of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</source>
          <target state="translated">Al controlar instrucciones SQL por lotes que devuelven varios resultados, la implementación de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> para el proveedor de datos de .NET Framework para OLE DB recupera información de esquema para sólo el primer resultado.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>To retrieve schema information for multiple results, use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> with the <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> set to <ph id="ph3">`AddWithKey`</ph>.</source>
          <target state="translated">Para recuperar información de esquema de varios resultados, utilice <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> con el <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> establecido en <ph id="ph3">`AddWithKey`</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>The following example uses the derived class, <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, to fill a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with rows from the categories table.</source>
          <target state="translated">En el ejemplo siguiente se utiliza la clase derivada, <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, para rellenar un <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> con filas de la tabla categories.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>This example assumes that you have created an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">En este ejemplo se da por supuesto que ha creado un <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> y <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>The source table is invalid.</source>
          <target state="translated">La tabla de origen no es válida.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> method.</source>
          <target state="translated">Al reemplazar <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> en una clase derivada, asegúrese de llamar a la clase base <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to fill with records and, if necessary, schema.</source>
          <target state="translated">Clase <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> que se va a rellenar con registros y, si es necesario, con un esquema.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The SQL SELECT statement used to retrieve rows from the data source.</source>
          <target state="translated">Instrucción SELECT de SQL utilizada para recuperar las filas del origen de datos.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> values.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>Adds or refreshes rows in a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to match those in the data source using the specified <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> and <ph id="ph4">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph>.</source>
          <target state="translated">Agrega filas a un objeto <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> o las actualiza para hacerlas coincidir con las del origen de datos, utilizando los objetos <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> y <ph id="ph4">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> especificados.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The number of rows successfully added to or refreshed in the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Número de filas agregadas o actualizadas correctamente en la clase <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">No se incluyen las filas afectadas por instrucciones que no devuelven filas.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method retrieves rows from the data source using the SELECT statement specified by an associated <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> property.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> método recupera filas del origen de datos mediante la instrucción SELECT especificada por un asociado <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The connection object associated with the SELECT statement must be valid, but it does not need to be open.</source>
          <target state="translated">El objeto de conexión asociado a la instrucción SELECT debe ser válido, pero no es necesario que esté abierto.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the connection is closed before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called, it is opened to retrieve data and then closed.</source>
          <target state="translated">Si la conexión se cerró antes de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> es llama, que se abrió para recuperar datos y, a continuación, se cierra.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the connection is open before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called, it remains open.</source>
          <target state="translated">Si la conexión está abierta antes de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> es llama, permanece abierta.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> operation then adds the rows to the specified destination <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> object in the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, creating the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> object if it does not already exist.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> operación, a continuación, agrega las filas en el destino especificado <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objeto en el <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, creando la <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> objeto si aún no existe.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>When creating a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> object, the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> operation normally creates only column name metadata.</source>
          <target state="translated">Al crear un <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objeto, la <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> operación suele crear únicamente metadatos de nombre de columna.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>However, if the <ph id="ph1">&lt;xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt;</ph> property is set to <ph id="ph2">`AddWithKey`</ph>, appropriate primary keys and constraints are also created.</source>
          <target state="translated">Sin embargo, si la <ph id="ph1">&lt;xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt;</ph> propiedad está establecida en <ph id="ph2">`AddWithKey`</ph>, también se crean claves principales adecuadas y restricciones.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> object encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it will generate names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> objeto detecta columnas duplicadas al rellenar un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, generará nombres para las columnas siguientes, utilizando el patrón "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2","<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the incoming data contains unnamed columns, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">Si los datos entrantes contienen columnas sin nombre, se colocan en la <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> según el modelo "Columna1", "Columna2" y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The overload of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> that takes <ph id="ph2">`DataTable`</ph> as a parameter only obtains the first result.</source>
          <target state="translated">La sobrecarga de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> que toma <ph id="ph2">`DataTable`</ph> como un parámetro sólo obtiene el primer resultado.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>Use an overload of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> that takes <ph id="ph2">`DataSet`</ph> as a parameter to obtain multiple results.</source>
          <target state="translated">Use una sobrecarga de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> que toma <ph id="ph2">`DataSet`</ph> como un parámetro para obtener varios resultados.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method multiple times on the same <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Puede usar el <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> método varias veces en la misma <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If a primary key exists, incoming rows are merged with matching rows that already exist.</source>
          <target state="translated">Si existe una clave principal, las filas entrantes se combinan con filas coincidentes que ya existen.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If no primary key exists, incoming rows are appended to the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Si no existe ninguna clave principal, las filas entrantes se anexan a la <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the <ph id="ph1">`SelectCommand`</ph> returns the results of an OUTER JOIN, the <ph id="ph2">`DataAdapter`</ph> does not set a <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> value for the resulting <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Si <ph id="ph1">`SelectCommand`</ph> devuelve los resultados de OUTER JOIN, <ph id="ph2">`DataAdapter`</ph> no establece un valor <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> para el objeto <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> resultante.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</source>
          <target state="translated">Debe definir explícitamente la clave principal para asegurarse de que las filas duplicadas se resuelven correctamente.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>For more information, see <bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>definir claves principales<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>When handling batch SQL statements that return multiple results, the implementation of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</source>
          <target state="translated">Al controlar instrucciones SQL por lotes que devuelven varios resultados, la implementación de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> para el proveedor de datos de .NET Framework para OLE DB recupera información de esquema para sólo el primer resultado.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>To retrieve schema information for multiple results, use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> with the <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> set to <ph id="ph3">`AddWithKey`</ph>.</source>
          <target state="translated">Para recuperar información de esquema de varios resultados, utilice <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> con el <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> establecido en <ph id="ph3">`AddWithKey`</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>This overload of the <ph id="ph1">&lt;see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> method is protected and is designed for use by a .NET Framework data provider.</source>
          <target state="translated">Esta sobrecarga de la <ph id="ph1">&lt;see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> método está protegido y está diseñado para su uso por un proveedor de datos de .NET Framework.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>The zero-based record number to start with.</source>
          <target state="translated">Número de registro de base cero inicial.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>The maximum number of records to retrieve.</source>
          <target state="translated">Número máximo de registros que se van a recuperar.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> objects to fill from the data source.</source>
          <target state="translated">Objetos <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> que se van a rellenar a partir del origen de datos.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>Adds or refreshes rows in a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to match those in the data source starting at the specified record and retrieving up to the specified maximum number of records.</source>
          <target state="translated">Agrega filas a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> o las actualiza para hacerlas coincidir con las del origen de datos, empezando en el registro especificado y recuperando hasta el número máximo de registros especificado.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>The number of rows successfully added to or refreshed in the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Número de filas agregadas o actualizadas correctamente en la clase <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>This value does not include rows affected by statements that do not return rows.</source>
          <target state="translated">Este valor no incluye las filas afectadas por instrucciones que no devuelven filas.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> method retrieves rows from the data source using the SELECT statement specified by an associated <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> property.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> método recupera filas del origen de datos mediante la instrucción SELECT especificada por un asociado <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>The connection object associated with the SELECT statement must be valid, but it does not need to be open.</source>
          <target state="translated">El objeto de conexión asociado a la instrucción SELECT debe ser válido, pero no es necesario que esté abierto.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>If the connection is closed before <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> is called, it is opened to retrieve data, and then it is closed.</source>
          <target state="translated">Si la conexión se cerró antes de <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> es llama, se abre para recuperar datos y, a continuación, se cierra.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>If the connection is open before <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> is called, it remains open.</source>
          <target state="translated">Si la conexión está abierta antes de <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> es llama, permanece abierta.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> operation then adds the rows to destination <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects in the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, creating the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> objects if they do not already exist.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> operación, a continuación, agrega las filas al destino <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objetos en el <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, creando la <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> objetos si aún no existen.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>When creating <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects, the <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> operation normally creates only column name metadata.</source>
          <target state="translated">Al crear <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objetos, la <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> operación suele crear únicamente metadatos de nombre de columna.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>However, if the <ph id="ph1">&lt;xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt;</ph> property is set to <ph id="ph2">`AddWithKey`</ph>, appropriate primary keys and constraints are also created.</source>
          <target state="translated">Sin embargo, si la <ph id="ph1">&lt;xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt;</ph> propiedad está establecida en <ph id="ph2">`AddWithKey`</ph>, también se crean claves principales adecuadas y restricciones.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>If the <ph id="ph1">`SelectCommand`</ph> returns the results of an OUTER JOIN, the <ph id="ph2">`DataAdapter`</ph> does not set a <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> value for the resulting <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Si <ph id="ph1">`SelectCommand`</ph> devuelve los resultados de OUTER JOIN, <ph id="ph2">`DataAdapter`</ph> no establece un valor <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> para el objeto <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> resultante.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</source>
          <target state="translated">Debe definir explícitamente la clave principal para asegurarse de que las filas duplicadas se resuelven correctamente.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>For more information, see <bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>definir claves principales<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>If the data adapter encounters duplicate columns while populating a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, it generates names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</source>
          <target state="translated">Si el adaptador de datos detecta columnas duplicadas al rellenar un <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, genera nombres para las columnas siguientes, utilizando el patrón "columnname1", "columnname2", "nombredecolumna3" y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>If the incoming data contains unnamed columns, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">Si los datos entrantes contienen columnas sin nombre, se colocan en la <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> según el modelo "Columna1", "Columna2" y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>When multiple result sets are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, each result set is placed in a separate table.</source>
          <target state="translated">Cuando se agregan varios conjuntos de resultados a la <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, cada conjunto de resultados se coloca en una tabla independiente.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</source>
          <target state="translated">Conjuntos de resultados adicionales se denominan agregando valores enteros al nombre de tabla especificado (por ejemplo, "Table", "Tabla1", "Tabla2" y así sucesivamente).</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">Las aplicaciones que usan nombres de tabla y columna deben asegurarse de que no haya conflictos con estos modelos de nomenclatura.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>When the SELECT statement used to populate the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> returns multiple results, such as a batch SQL statements, if one of the results contains an error, all subsequent results are skipped and not added to the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Si la instrucción SELECT utilizada para rellenar el <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> devuelve varios resultados, como un lote de instrucciones SQL, si uno de los resultados contiene un error, todos los resultados posteriores se omiten y no se agrega a la <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> method multiple times on the same <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Puede usar el <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Fill%2A&gt;</ph> método varias veces en la misma <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>If a primary key exists, incoming rows are merged with matching rows that already exist.</source>
          <target state="translated">Si existe una clave principal, las filas entrantes se combinan con filas coincidentes que ya existen.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>If no primary key exists, incoming rows are appended to the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Si no existe ninguna clave principal, las filas entrantes se anexan a la <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>When handling batch SQL statements that return multiple results, the implementation of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</source>
          <target state="translated">Al controlar instrucciones SQL por lotes que devuelven varios resultados, la implementación de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> para el proveedor de datos de .NET Framework para OLE DB recupera información de esquema para sólo el primer resultado.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])">
          <source>To retrieve schema information for multiple results, use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> with the <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> set to <ph id="ph3">`AddWithKey`</ph>.</source>
          <target state="translated">Para recuperar información de esquema de varios resultados, utilice <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> con el <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> establecido en <ph id="ph3">`AddWithKey`</ph>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to fill with records and, if necessary, schema.</source>
          <target state="translated">Clase <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> que se va a rellenar con registros y, si es necesario, con un esquema.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The zero-based record number to start with.</source>
          <target state="translated">Número de registro de base cero inicial.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The maximum number of records to retrieve.</source>
          <target state="translated">Número máximo de registros que se van a recuperar.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The name of the source table to use for table mapping.</source>
          <target state="translated">Nombre de la tabla de origen que se utilizará para la asignación de tabla.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>Adds or refreshes rows in a specified range in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to match those in the data source using the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> names.</source>
          <target state="translated">Agrega filas en un intervalo especificado de <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> o las actualiza para hacerlas coincidir con las filas del origen de datos utilizando los nombres de <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> y <ph id="ph3">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The number of rows successfully added to or refreshed in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Número de filas agregadas o actualizadas correctamente en la clase <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">No se incluyen las filas afectadas por instrucciones que no devuelven filas.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>A <ph id="ph1">`maxRecords`</ph> value of 0 gets all records found after the start record.</source>
          <target state="translated">A <ph id="ph1">`maxRecords`</ph> el valor 0 obtiene todos los registros encontrados después del registro inicial.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>If <ph id="ph1">`maxRecords`</ph> is greater than the number of remaining rows, only the remaining rows are returned, and no error is issued.</source>
          <target state="translated">Si <ph id="ph1">`maxRecords`</ph> es mayor que el número de filas restantes, sólo se devuelven las filas restantes y se emite ningún error.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>If the corresponding select command is a statement returning multiple results, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> only applies <ph id="ph2">`maxRecords`</ph> to the first result.</source>
          <target state="translated">Si el comando select correspondiente es una instrucción devuelve varios resultados, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> solo se aplica <ph id="ph2">`maxRecords`</ph> al primer resultado.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method retrieves the data from the data source using a SELECT statement.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> método recupera los datos de origen de datos con una instrucción SELECT.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> object associated with the SELECT statement must be valid, but it does not need to be open.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> objeto asociado a la instrucción SELECT debe ser válido, pero no es necesario que esté abierto.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> is closed before <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called, it is opened to retrieve data and then closed.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> se cerró antes de <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> es llama, que se abrió para recuperar datos y, a continuación, se cierra.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>If the connection is open before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called, it remains open.</source>
          <target state="translated">Si la conexión está abierta antes de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> es llama, permanece abierta.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>If a command does not return any rows, no tables are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, but no exception is raised.</source>
          <target state="translated">Si un comando no devuelve ninguna fila, ninguna de las tablas se agrega a la <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, pero no se produce ninguna excepción.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> object encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it will generate names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> objeto detecta columnas duplicadas al rellenar un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, generará nombres para las columnas siguientes, utilizando el patrón "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2","<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>If the incoming data contains unnamed columns, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">Si los datos entrantes contienen columnas sin nombre, se colocan en la <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> según el modelo "Columna1", "Columna2" y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>When the query specified returns multiple results, each result set is placed in a separate table.</source>
          <target state="translated">Cuando la consulta especificada devuelve varios resultados, cada conjunto de resultados se coloca en una tabla independiente.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</source>
          <target state="translated">Conjuntos de resultados adicionales se denominan agregando valores enteros al nombre de tabla especificado (por ejemplo, "Table", "Tabla1", "Tabla2" y así sucesivamente).</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table", because it is the first table created.</source>
          <target state="translated">Dado que no hay ninguna tabla se crea para una consulta que no devuelve filas, si se procesa una consulta insert seguida de una consulta select, la tabla creada para la consulta select se denomina "Table", porque es la primera tabla creada.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">Las aplicaciones que usan nombres de tabla y columna deben asegurarse de que no haya conflictos con estos modelos de nomenclatura.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method supports scenarios where the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contains multiple <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> objects whose names differ only by case.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> método es compatible con escenarios donde la <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contiene varias <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> objetos cuyos nombres se diferencien solo por el uso de mayúsculas o minúsculas.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>In such situations, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</source>
          <target state="translated">En estas situaciones, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> realiza una comparación entre mayúsculas y minúsculas para encontrar la tabla correspondiente y crea una tabla nueva si no existe ninguna coincidencia exacta.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">El siguiente código C# ilustra este comportamiento.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>If <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called and the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contains only one <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> whose name differs only by case, that <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> is updated.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> se llama y <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contiene solamente un <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> cuyo nombre difiere sólo por mayúsculas, o que <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> se actualiza.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>In this scenario, the comparison is case insensitive.</source>
          <target state="translated">En este escenario, la comparación distingue entre mayúsculas y minúsculas.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">El siguiente código C# ilustra este comportamiento.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</source>
          <target state="translated">Si se encuentra un error o una excepción al rellenar las tablas de datos, las filas agregadas antes de producirse el error mantienen en las tablas de datos.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The remainder of the operation is aborted.</source>
          <target state="translated">El resto de la operación se ha anulado.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>When the SELECT statement used to populate the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> returns multiple results, such as batch SQL statements, be aware of the following:</source>
          <target state="translated">Si la instrucción SELECT utilizada para rellenar el <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> devuelve varios resultados, como instrucciones SQL por lotes, sea consciente de las acciones siguientes:</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>When processing multiple results from a batch SQL statement, <ph id="ph1">`maxRecords`</ph> only applies to the first result.</source>
          <target state="translated">Cuando se procesan varios resultados de una instrucción SQL, por lotes <ph id="ph1">`maxRecords`</ph> solo se aplica al primer resultado.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</source>
          <target state="translated">Lo mismo puede decirse de filas que contienen resultados divididos en segmentos (proveedor de datos de .NET Framework para OLE DB solo).</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The top level result is limited by <ph id="ph1">`maxRecords`</ph>, but all child rows are added.</source>
          <target state="translated">El resultado de nivel superior está limitado por <ph id="ph1">`maxRecords`</ph>, pero se agregan todas las filas secundarias.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>If one of the results contains an error, all subsequent results are skipped and not added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Si uno de los resultados contiene un error, todos los resultados posteriores se omiten y no se agregan a la <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>When using subsequent <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> calls to refresh the contents of the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, two conditions must be met:</source>
          <target state="translated">Cuando se usa posteriores <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> llamadas para actualizar el contenido de la <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, se deben cumplir dos condiciones:</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The SQL statement should match the one initially used to populate the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">La instrucción SQL debe coincidir con la que se usó inicialmente para rellenar el <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The <bpt id="p1">**</bpt>Key<ept id="p1">**</ept> column information must be present.</source>
          <target state="translated">El <bpt id="p1">**</bpt>clave<ept id="p1">**</ept> información de la columna debe estar presente.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>If primary key information is present, any duplicate rows will be reconciled and only appear once in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> that corresponds to the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Si hay información de clave principal, las filas duplicadas se reconciliarán y sólo aparecerán una vez en el <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> que corresponde a la <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>Primary key information may be set either through <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>, by specifying the <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>, or by setting the <ph id="ph4">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> property to <ph id="ph5">`AddWithKey`</ph>.</source>
          <target state="translated">Información de clave principal puede establecerse a través de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>, especificando la <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> propiedad de la <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>, o estableciendo la <ph id="ph4">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> propiedad <ph id="ph5">`AddWithKey`</ph>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>If the <ph id="ph1">`SelectCommand`</ph> returns the results of an OUTER JOIN, the <ph id="ph2">`DataAdapter`</ph> does not set a <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> value for the resulting <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Si <ph id="ph1">`SelectCommand`</ph> devuelve los resultados de OUTER JOIN, <ph id="ph2">`DataAdapter`</ph> no establece un valor <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> para el objeto <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> resultante.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</source>
          <target state="translated">Debe definir explícitamente la clave principal para asegurarse de que las filas duplicadas se resuelven correctamente.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>definir claves principales<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>When handling batch SQL statements that return multiple results, the implementation of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</source>
          <target state="translated">Al controlar instrucciones SQL por lotes que devuelven varios resultados, la implementación de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> para el proveedor de datos de .NET Framework para OLE DB recupera información de esquema para sólo el primer resultado.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>To retrieve schema information for multiple results, use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> with the <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> set to <ph id="ph3">`AddWithKey`</ph>.</source>
          <target state="translated">Para recuperar información de esquema de varios resultados, utilice <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> con el <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> establecido en <ph id="ph3">`AddWithKey`</ph>.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The <ph id="ph1">`DataSet`</ph> will not contain more than the number of records indicated by <ph id="ph2">`maxRecords`</ph>.</source>
          <target state="translated">El <ph id="ph1">`DataSet`</ph> no contendrá más del número de registros indicado por <ph id="ph2">`maxRecords`</ph>.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>However, the entire result set generated by the query is still returned from the server.</source>
          <target state="translated">Sin embargo, el conjunto de resultados completo generado por la consulta aún se devuelve desde el servidor.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The following example uses the derived class, <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, to fill a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with 15 rows, beginning at row 10, from the <bpt id="p1">**</bpt>Categories<ept id="p1">**</ept> table.</source>
          <target state="translated">En el ejemplo siguiente se utiliza la clase derivada, <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, para rellenar un <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> con 15 filas, comenzando en la fila 10, desde el <bpt id="p1">**</bpt>categorías<ept id="p1">**</ept> tabla.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>This example assumes that you have created an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">En este ejemplo se da por supuesto que ha creado un <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> y <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> no es válido.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The source table is invalid.</source>
          <target state="translated">La tabla de origen no es válida.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The connection is invalid.</source>
          <target state="translated">La conexión no es válida.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The connection could not be found.</source>
          <target state="translated">No se encontró la conexión.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="startRecord" /&gt;</ph> parameter is less than 0.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="startRecord" /&gt;</ph> es menor que 0.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="maxRecords" /&gt;</ph> parameter is less than 0.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="maxRecords" /&gt;</ph> es menor que 0.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> method.</source>
          <target state="translated">Al reemplazar <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> en una clase derivada, asegúrese de llamar a la clase base <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> objects to fill from the data source.</source>
          <target state="translated">Objetos <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> que se van a rellenar a partir del origen de datos.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The zero-based record number to start with.</source>
          <target state="translated">Número de registro de base cero inicial.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The maximum number of records to retrieve.</source>
          <target state="translated">Número máximo de registros que se van a recuperar.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> executed to fill the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> objects.</source>
          <target state="translated">Interfaz <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> ejecutada para rellenar los objetos <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> values.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>Adds or refreshes rows in a specified range in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to match those in the data source using the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> names.</source>
          <target state="translated">Agrega filas en un intervalo especificado de <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> o las actualiza para hacerlas coincidir con las filas del origen de datos utilizando los nombres de <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> y <ph id="ph3">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The number of rows added to or refreshed in the data tables.</source>
          <target state="translated">Número de filas agregadas o actualizadas en las tablas de datos.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>A <ph id="ph1">`maxRecords`</ph> value of 0 gets all records found after the start record.</source>
          <target state="translated">A <ph id="ph1">`maxRecords`</ph> el valor 0 obtiene todos los registros encontrados después del registro inicial.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If <ph id="ph1">`maxRecords`</ph> is greater than the number of remaining rows, only the remaining rows are returned and no error is issued.</source>
          <target state="translated">Si <ph id="ph1">`maxRecords`</ph> es mayor que el número de filas restantes, sólo se devuelven las filas restantes y se emite ningún error.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method retrieves the data from the data source using a SELECT statement.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> método recupera los datos de origen de datos con una instrucción SELECT.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> object associated with the SELECT statement must be valid, but it does not need to be open.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> objeto asociado a la instrucción SELECT debe ser válido, pero no es necesario que esté abierto.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> is closed before <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> se cerró antes de <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> es llama, se abre para recuperar datos, a continuación, se cierra.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the connection is open before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called, it remains open.</source>
          <target state="translated">Si la conexión está abierta antes de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> es llama, permanece abierta.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If a command does not return any rows, no tables are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, but no exception is raised.</source>
          <target state="translated">Si un comando no devuelve ninguna fila, ninguna de las tablas se agrega a la <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, pero no se produce ninguna excepción.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> object encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it will generate names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> objeto detecta columnas duplicadas al rellenar un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, generará nombres para las columnas siguientes, utilizando el patrón "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2","<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the incoming data contains unnamed columns, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">Si los datos entrantes contienen columnas sin nombre, se colocan en la <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> según el modelo "Columna1", "Columna2" y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>When the query specified returns multiple results, each result set is placed in a separate table.</source>
          <target state="translated">Cuando la consulta especificada devuelve varios resultados, cada conjunto de resultados se coloca en una tabla independiente.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</source>
          <target state="translated">Conjuntos de resultados adicionales se denominan agregando valores enteros al nombre de tabla especificado (por ejemplo, "Table", "Tabla1", "Tabla2" y así sucesivamente).</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</source>
          <target state="translated">Puesto que no se crean tablas para una consulta que no devuelve filas, si tuviera que procesar una consulta insert seguida de una consulta select, la tabla creada para la consulta select se denominaría "Tabla", porque es la primera tabla creada.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">Las aplicaciones que usan nombres de tabla y columna deben asegurarse de que no haya conflictos con estos modelos de nomenclatura.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method supports scenarios where the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contains multiple <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> objects whose names differ only by case.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> método es compatible con escenarios donde la <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contiene varias <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> objetos cuyos nombres se diferencien solo por el uso de mayúsculas o minúsculas.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>In such situations, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</source>
          <target state="translated">En estas situaciones, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> realiza una comparación entre mayúsculas y minúsculas para encontrar la tabla correspondiente y crea una tabla nueva si no existe ninguna coincidencia exacta.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">El siguiente código C# ilustra este comportamiento.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called and the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contains only one <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> whose name differs only by case, that <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> is updated.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> se llama y <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contiene solamente un <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> cuyo nombre difiere sólo por mayúsculas, o que <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> se actualiza.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>In this scenario, the comparison is case insensitive.</source>
          <target state="translated">En este escenario, la comparación distingue entre mayúsculas y minúsculas.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">El siguiente código C# ilustra este comportamiento.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</source>
          <target state="translated">Si se encuentra un error o una excepción al rellenar las tablas de datos, las filas agregadas antes de producirse el error mantienen en las tablas de datos.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The remainder of the operation is aborted.</source>
          <target state="translated">El resto de la operación se ha anulado.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>When the SELECT statement used to populate the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects returns multiple results, such as a batch SQL statement, be aware of the following:</source>
          <target state="translated">Si la instrucción SELECT utilizada para rellenar el <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objetos devuelve varios resultados, como un lote de instrucciones SQL, tener en cuenta lo siguiente:</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>When processing multiple results from a batch SQL statement, <ph id="ph1">`maxRecords`</ph> only applies to the first result.</source>
          <target state="translated">Cuando se procesan varios resultados de una instrucción SQL, por lotes <ph id="ph1">`maxRecords`</ph> solo se aplica al primer resultado.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</source>
          <target state="translated">Lo mismo puede decirse de filas que contienen resultados divididos en segmentos (proveedor de datos de .NET Framework para OLE DB solo).</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The top level result is limited by <ph id="ph1">`maxRecords`</ph>, but all child rows are added.</source>
          <target state="translated">El resultado de nivel superior está limitado por <ph id="ph1">`maxRecords`</ph>, pero se agregan todas las filas secundarias.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If one of the results contains an error, all subsequent results are skipped.</source>
          <target state="translated">Si uno de los resultados contiene un error, se omiten todos los resultados siguientes.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">`DataSet`</ph> will not contain more than the number of records indicated by <ph id="ph2">`maxRecords`</ph>.</source>
          <target state="translated">El <ph id="ph1">`DataSet`</ph> no contendrá más del número de registros indicado por <ph id="ph2">`maxRecords`</ph>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>However, the entire resultset generated by the query is still returned from the server.</source>
          <target state="translated">Sin embargo, todo el conjunto de resultados generado por la consulta aún se devuelve desde el servidor.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> no es válido.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The source table is invalid.</source>
          <target state="translated">La tabla de origen no es válida.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The connection is invalid.</source>
          <target state="translated">La conexión no es válida.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The connection could not be found.</source>
          <target state="translated">No se encontró la conexión.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;paramref name="startRecord" /&gt;</ph> parameter is less than 0.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="startRecord" /&gt;</ph> es menor que 0.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;paramref name="maxRecords" /&gt;</ph> parameter is less than 0.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="maxRecords" /&gt;</ph> es menor que 0.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> method.</source>
          <target state="translated">Al reemplazar <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> en una clase derivada, asegúrese de llamar a la clase base <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to fill with records and, if necessary, schema.</source>
          <target state="translated">Clase <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> que se va a rellenar con registros y, si es necesario, con un esquema.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The zero-based record number to start with.</source>
          <target state="translated">Número de registro de base cero inicial.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The maximum number of records to retrieve.</source>
          <target state="translated">Número máximo de registros que se van a recuperar.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The name of the source table to use for table mapping.</source>
          <target state="translated">Nombre de la tabla de origen que se utilizará para la asignación de tabla.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The SQL SELECT statement used to retrieve rows from the data source.</source>
          <target state="translated">Instrucción SELECT de SQL utilizada para recuperar las filas del origen de datos.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> values.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>Adds or refreshes rows in a specified range in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to match those in the data source using the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> and source table names, command string, and command behavior.</source>
          <target state="translated">Agrega filas en un intervalo especificado de <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> o las actualiza para hacerlas coincidir con las filas del origen de datos utilizando los nombres de <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> y los nombres de tabla de origen, la cadena de comando y el comportamiento de comando.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The number of rows successfully added to or refreshed in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Número de filas agregadas o actualizadas correctamente en la clase <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>This does not include rows affected by statements that do not return rows.</source>
          <target state="translated">No se incluyen las filas afectadas por instrucciones que no devuelven filas.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method retrieves rows from the data source using the SELECT statement specified by an associated <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> property.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> método recupera filas del origen de datos mediante la instrucción SELECT especificada por un asociado <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The connection object associated with the SELECT statement must be valid, but it does not need to be open.</source>
          <target state="translated">El objeto de conexión asociado a la instrucción SELECT debe ser válido, pero no es necesario que esté abierto.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the connection is closed before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">Si la conexión se cerró antes de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> es llama, se abre para recuperar datos, a continuación, se cierra.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the connection is open before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called, it remains open.</source>
          <target state="translated">Si la conexión está abierta antes de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> es llama, permanece abierta.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> operation then adds the rows to destination <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects in the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, creating the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> objects if they do not already exist.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> operación, a continuación, agrega las filas al destino <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objetos en el <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, creando la <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> objetos si aún no existen.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>When creating <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects, the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> operation normally creates only column name metadata.</source>
          <target state="translated">Al crear <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objetos, la <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> operación suele crear únicamente metadatos de nombre de columna.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>However, if the <ph id="ph1">&lt;xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt;</ph> property is set to <ph id="ph2">`AddWithKey`</ph>, appropriate primary keys and constraints are also created.</source>
          <target state="translated">Sin embargo, si la <ph id="ph1">&lt;xref:System.Data.IDataAdapter.MissingSchemaAction%2A&gt;</ph> propiedad está establecida en <ph id="ph2">`AddWithKey`</ph>, también se crean claves principales adecuadas y restricciones.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it generates names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> detecta columnas duplicadas al rellenar un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, genera nombres para las columnas siguientes, utilizando el patrón "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2","<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the incoming data contains unnamed columns, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">Si los datos entrantes contienen columnas sin nombre, se colocan en la <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> según el modelo "Columna1", "Columna2" y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>When multiple result sets are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> each result set is placed in a separate table.</source>
          <target state="translated">Cuando se agregan varios conjuntos de resultados a la <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> cada conjunto de resultados se coloca en una tabla independiente.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</source>
          <target state="translated">Conjuntos de resultados adicionales se denominan agregando valores enteros al nombre de tabla especificado (por ejemplo, "Table", "Tabla1", "Tabla2" y así sucesivamente).</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">Las aplicaciones que usan nombres de tabla y columna deben asegurarse de que no haya conflictos con estos modelos de nomenclatura.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method supports scenarios where the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contains multiple <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> objects whose names differ only by case.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> método es compatible con escenarios donde la <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contiene varias <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> objetos cuyos nombres se diferencien solo por el uso de mayúsculas o minúsculas.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>In such situations, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</source>
          <target state="translated">En estas situaciones, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> realiza una comparación entre mayúsculas y minúsculas para encontrar la tabla correspondiente y crea una tabla nueva si no existe ninguna coincidencia exacta.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">El siguiente código C# ilustra este comportamiento.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> is called and the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contains only one <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> whose name differs only by case, that <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> is updated.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> se llama y <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contiene solamente un <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> cuyo nombre difiere sólo por mayúsculas, o que <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> se actualiza.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>In this scenario, the comparison is case insensitive.</source>
          <target state="translated">En este escenario, la comparación distingue entre mayúsculas y minúsculas.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">El siguiente código C# ilustra este comportamiento.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method multiple times on the same <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Puede usar el <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> método varias veces en la misma <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If a primary key exists, incoming rows are merged with matching rows that already exist.</source>
          <target state="translated">Si existe una clave principal, las filas entrantes se combinan con filas coincidentes que ya existen.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If no primary key exists, incoming rows are appended to the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Si no existe ninguna clave principal, las filas entrantes se anexan a la <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the <ph id="ph1">`SelectCommand`</ph> returns the results of an OUTER JOIN, the <ph id="ph2">`DataAdapter`</ph> does not set a <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> value for the resulting <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Si <ph id="ph1">`SelectCommand`</ph> devuelve los resultados de OUTER JOIN, <ph id="ph2">`DataAdapter`</ph> no establece un valor <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> para el objeto <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> resultante.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</source>
          <target state="translated">Debe definir explícitamente la clave principal para asegurarse de que las filas duplicadas se resuelven correctamente.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>For more information, see<bpt id="p1">[</bpt>Defining Primary Keys<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte<bpt id="p1">[</bpt>definir claves principales<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)</ept>.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>When handling batch SQL statements that return multiple results, the implementation of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> for a .NET Framework data provider retrieves schema information for only the first result.</source>
          <target state="translated">Al controlar instrucciones SQL por lotes que devuelven varios resultados, la implementación de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> para datos de .NET Framework proveedor recupera información de esquema para sólo el primer resultado.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The source table is invalid.</source>
          <target state="translated">La tabla de origen no es válida.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;paramref name="startRecord" /&gt;</ph> parameter is less than 0.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="startRecord" /&gt;</ph> es menor que 0.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;paramref name="maxRecords" /&gt;</ph> parameter is less than 0.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="maxRecords" /&gt;</ph> es menor que 0.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>This overload of the <ph id="ph1">&lt;see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> method is protected and is designed for use by a .NET Framework data provider.</source>
          <target state="translated">Esta sobrecarga de la <ph id="ph1">&lt;see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /&gt;</ph> método está protegido y está diseñado para su uso por un proveedor de datos de .NET Framework.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbDataAdapter.FillCommandBehavior">
          <source>Gets or sets the behavior of the command used to fill the data adapter.</source>
          <target state="translated">Obtiene o establece el comportamiento del comando utilizado para rellenar el adaptador de datos.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.FillCommandBehavior">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> of the command used to fill the data adapter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> del comando utilizado para rellenar el adaptador de datos.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbDataAdapter">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> and configures the schema to match that in the data source.</source>
          <target state="translated">Agrega <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> a <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> y configura el esquema para hacerlo coincidir con el del origen de datos.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to insert the schema in.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> donde se va a insertar el esquema.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> values that specify how to insert the schema.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> que especifica cómo insertar el esquema.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> named "Table" to the specified <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> and configures the schema to match that in the data source based on the specified <ph id="ph3">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph>.</source>
          <target state="translated">Agrega un objeto <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> denominado "Table" a la interfaz <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> que se ha especificado y configura el esquema para que coincida con el del origen de datos en función de la <ph id="ph3">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> especificada.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>A reference to a collection of <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> objects that were added to the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Referencia a una colección de objetos <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> que se agregaron a <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>This method retrieves the schema information from the data source using the <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>.</source>
          <target state="translated">Este método recupera la información del esquema de origen de datos mediante el <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> operation adds a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to the destination <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> operación agrega un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> al destino <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>It then adds columns to the <ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph> of the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, and configures the following <ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph> properties if they exist at the data source:</source>
          <target state="translated">A continuación, agrega columnas a la <ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph> de la <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>y configura las siguientes <ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph> propiedades si existen en el origen de datos:</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source><ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>You must set <ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;</ph> separately.</source>
          <target state="translated">Debe establecer <ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;</ph> por separado.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> also configures the <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataTable.Constraints%2A&gt;</ph> properties according to the following rules:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> también configura el <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> y <ph id="ph3">&lt;xref:System.Data.DataTable.Constraints%2A&gt;</ph> propiedades según las reglas siguientes:</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If one or more primary key columns are returned by the <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>, they are used as the primary key columns for the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Si una o varias columnas de clave principal no se devuelve el <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>, se utilizan como columnas de clave principales para el <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</source>
          <target state="translated">Si no se devuelve ninguna columna de clave principal pero sí columnas únicas, las columnas únicas se usan como clave principal si y solo si todas las columnas únicas son no admiten valores NULL.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If any of the columns are nullable, a <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> is added to the <ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph>, but the <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> property is not set.</source>
          <target state="translated">Si hay alguna de las columnas que aceptan valores NULL, un <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> se agrega a la <ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph>, pero la <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> no se establece la propiedad.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Si se devuelven columnas de clave principal y columnas únicas, las columnas de clave principales se utilizan como columnas de clave principal para el <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>Note that primary keys and unique constraints are added to the <ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph> according to the preceding rules, but other constraint types are not added.</source>
          <target state="translated">Tenga en cuenta que las claves principales y las restricciones únicas se agregan a la <ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph> según las reglas anteriores, pero otra restricción de tipos no se agregan.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</source>
          <target state="translated">Si un clúster un único índice está definido en una o varias columnas en una tabla de SQL Server y la restricción de clave principal se define en un conjunto diferente de columnas, se devolverá los nombres de las columnas en el índice clúster.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</source>
          <target state="translated">Para devolver el nombre o nombres de las columnas de clave principal, use una sugerencia de consulta con la instrucción SELECT que especifica el nombre del índice de clave principal.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>For more information about specifying query hints, see <bpt id="p1">[</bpt>Query Hint (Transact-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>.</source>
          <target state="translated">Para obtener más información acerca de cómo especificar sugerencias de consulta, vea <bpt id="p1">[</bpt>sugerencia de consulta (Transact-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>Primary key information is used during <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> to find and replace any rows whose key columns match.</source>
          <target state="translated">Información de clave principal se utiliza durante la <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> para buscar y reemplazar todas las filas cuyas columnas de clave coincidan.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If this is not the desired behavior, use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> without requesting schema information.</source>
          <target state="translated">Si esto no es el comportamiento deseado, utilice <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> sin solicitar la información de esquema.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph> encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it generates names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph> detecta columnas duplicadas al rellenar un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, genera nombres para las columnas siguientes, utilizando el patrón "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2","<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If the incoming data contains unnamed columns, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">Si los datos entrantes contienen columnas sin nombre, se colocan en la <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> según el modelo "Columna1", "Columna2" y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>When multiple result sets are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> each result set is placed in a separate table.</source>
          <target state="translated">Cuando se agregan varios conjuntos de resultados a la <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> cada conjunto de resultados se coloca en una tabla independiente.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</source>
          <target state="translated">Conjuntos de resultados adicionales se denominan agregando valores enteros al nombre de tabla especificado (por ejemplo, "Table", "Tabla1", "Tabla2" y así sucesivamente.).</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">Las aplicaciones que usan nombres de tabla y columna deben asegurarse de que no haya conflictos con estos modelos de nomenclatura.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>The <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> object associated with the select command must be valid, but it does not need to open.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> objeto asociado con el comando select debe ser válido, pero no es necesario abrir.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> is closed before <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> se cerró antes de <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> es llama, se abre para recuperar datos, a continuación, se cierra.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>If the connection is open before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> is called, it is left open.</source>
          <target state="translated">Si la conexión está abierta antes de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> es llama, se deja abierto.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>When handling batch SQL statements that return multiple results, the implementation of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</source>
          <target state="translated">Al controlar instrucciones SQL por lotes que devuelven varios resultados, la implementación de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> para el proveedor de datos de .NET Framework para OLE DB recupera información de esquema para sólo el primer resultado.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>To retrieve schema information for multiple results, use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> with the <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> set to <ph id="ph3">`AddWithKey`</ph>.</source>
          <target state="translated">Para recuperar información de esquema de varios resultados, utilice <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> con el <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> establecido en <ph id="ph3">`AddWithKey`</ph>.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>When using <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</source>
          <target state="translated">Cuando se utiliza el método <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>, el proveedor de datos de .NET Framework para SQL Server agrega una cláusula FOR BROWSE a la instrucción que se está ejecutando.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</source>
          <target state="translated">El usuario debe tener en cuenta los posibles efectos secundarios, como las interferencias con el uso de las instrucciones SET FMTONLY ON.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>See SQL Server Books Online for more information.</source>
          <target state="translated">Vea los Libros en pantalla de SQL Server para obtener más información.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
          <source>The following example uses the derived class, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>, to fill a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with the schema, and returns a <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">En el ejemplo siguiente se utiliza la clase derivada, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>, para rellenar un <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> con el esquema y devuelve un <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to be filled with the schema from the data source.</source>
          <target state="translated">Clase <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> que se va a rellenar con el esquema a partir del origen de datos.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> values.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>Configures the schema of the specified <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> based on the specified <ph id="ph2">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph>.</source>
          <target state="translated">Configura el esquema de la tabla <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> especificada en función del tipo <ph id="ph2">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that contains schema information returned from the data source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> que contiene la información de esquema devuelta desde el origen de datos.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> method retrieves the schema from the data source using the <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> método recupera el esquema de origen de datos mediante el <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>The connection object associated with the <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> must be valid, but it does not need to be open.</source>
          <target state="translated">El objeto de conexión asociado con el <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> debe ser válido, pero no es necesario que esté abierto.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>If the connection is closed before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">Si la conexión se cerró antes de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> es llama, se abre para recuperar datos, a continuación, se cierra.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>If the connection is open before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> is called, it remains open.</source>
          <target state="translated">Si la conexión está abierta antes de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> es llama, permanece abierta.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> operation returns a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> operación devuelve un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>It then adds columns to the <ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph> of the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, and configures the following <ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph> properties if they exist at the data source:</source>
          <target state="translated">A continuación, agrega columnas a la <ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph> de la <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>y configura las siguientes <ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph> propiedades si existen en el origen de datos:</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source><ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>You must set <ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;</ph> separately.</source>
          <target state="translated">Debe establecer <ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;</ph> por separado.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> also configures the <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataTable.Constraints%2A&gt;</ph> properties according to the following rules:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> también configura el <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> y <ph id="ph3">&lt;xref:System.Data.DataTable.Constraints%2A&gt;</ph> propiedades según las reglas siguientes:</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>If a <ph id="ph1">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> has already been defined for the <ph id="ph2">`DataTable`</ph>, or the <ph id="ph3">`DataTable`</ph> contains data, the <ph id="ph4">`PrimaryKey`</ph> property will not be set.</source>
          <target state="translated">Si un <ph id="ph1">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> ya se ha definido para el <ph id="ph2">`DataTable`</ph>, o la <ph id="ph3">`DataTable`</ph> contiene datos, la <ph id="ph4">`PrimaryKey`</ph> no se establecerá la propiedad.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>If one or more primary key columns are returned by the <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>, they are used as the primary key columns for the <ph id="ph2">`DataTable`</ph>.</source>
          <target state="translated">Si una o varias columnas de clave principal no se devuelve el <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>, se utilizan como columnas de clave principales para el <ph id="ph2">`DataTable`</ph>.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</source>
          <target state="translated">Si no se devuelve ninguna columna de clave principal pero sí columnas únicas, las columnas únicas se usan como clave principal si y solo si todas las columnas únicas son no admiten valores NULL.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>If any of the columns are nullable, a <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> is added to the <ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph>, but the <ph id="ph3">`PrimaryKey`</ph> property is not set.</source>
          <target state="translated">Si hay alguna de las columnas que aceptan valores NULL, un <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> se agrega a la <ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph>, pero la <ph id="ph3">`PrimaryKey`</ph> no se establece la propiedad.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <ph id="ph1">`DataTable`</ph>.</source>
          <target state="translated">Si se devuelven columnas de clave principal y columnas únicas, las columnas de clave principales se utilizan como columnas de clave principal para el <ph id="ph1">`DataTable`</ph>.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>Note that primary keys and unique constraints are added to the <ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph> according to the preceding rules, but other constraint types are not added.</source>
          <target state="translated">Tenga en cuenta que las claves principales y las restricciones únicas se agregan a la <ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph> según las reglas anteriores, pero otra restricción de tipos no se agregan.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>This process may require several round-trips to the server.</source>
          <target state="translated">Este proceso puede requerir varios ida y vuelta al servidor.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</source>
          <target state="translated">Si un clúster un único índice está definido en una o varias columnas en una tabla de SQL Server y la restricción de clave principal se define en un conjunto diferente de columnas, se devolverá los nombres de las columnas en el índice clúster.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</source>
          <target state="translated">Para devolver el nombre o nombres de las columnas de clave principal, use una sugerencia de consulta con la instrucción SELECT que especifica el nombre del índice de clave principal.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>For more information about specifying query hints, see <bpt id="p1">[</bpt>Query Hint (Transact-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>.</source>
          <target state="translated">Para obtener más información acerca de cómo especificar sugerencias de consulta, vea <bpt id="p1">[</bpt>sugerencia de consulta (Transact-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it generates names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> detecta columnas duplicadas al rellenar un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, genera nombres para las columnas siguientes, utilizando el patrón "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2","<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>If the incoming data contains unnamed columns, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">Si los datos entrantes contienen columnas sin nombre, se colocan en la <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> según el modelo "Columna1", "Columna2" y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>When multiple result sets are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> each result set is placed in a separate table.</source>
          <target state="translated">Cuando se agregan varios conjuntos de resultados a la <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> cada conjunto de resultados se coloca en una tabla independiente.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</source>
          <target state="translated">Conjuntos de resultados adicionales se denominan agregando valores enteros al nombre de tabla especificado (por ejemplo, "Table", "Tabla1", "Tabla2" y así sucesivamente.).</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">Las aplicaciones que usan nombres de tabla y columna deben asegurarse de que no haya conflictos con estos modelos de nomenclatura.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> does not return any rows.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> no devuelve ninguna fila.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method to add rows to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> método para agregar filas a una <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>When handling batch SQL statements that return multiple results, the implementation of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</source>
          <target state="translated">Al controlar instrucciones SQL por lotes que devuelven varios resultados, la implementación de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> para el proveedor de datos de .NET Framework para OLE DB recupera información de esquema para sólo el primer resultado.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>To retrieve schema information for multiple results, use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> with the <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> set to <ph id="ph3">`AddWithKey`</ph>.</source>
          <target state="translated">Para recuperar información de esquema de varios resultados, utilice <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> con el <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> establecido en <ph id="ph3">`AddWithKey`</ph>.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>When using <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</source>
          <target state="translated">Cuando se utiliza el método <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>, el proveedor de datos de .NET Framework para SQL Server agrega una cláusula FOR BROWSE a la instrucción que se está ejecutando.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</source>
          <target state="translated">El usuario debe tener en cuenta los posibles efectos secundarios, como las interferencias con el uso de las instrucciones SET FMTONLY ON.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>See SQL Server Books Online for more information.</source>
          <target state="translated">Vea los Libros en pantalla de SQL Server para obtener más información.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
          <source>The following example uses the derived class, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>, to fill a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with the schema, and returns a <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">En el ejemplo siguiente se utiliza la clase derivada, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>, para rellenar un <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> con el esquema y devuelve un <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to insert the schema in.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> donde se va a insertar el esquema.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> values that specify how to insert the schema.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> que especifica cómo insertar el esquema.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>The name of the source table to use for table mapping.</source>
          <target state="translated">Nombre de la tabla de origen que se utilizará para la asignación de tabla.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to the specified <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> and configures the schema to match that in the data source based upon the specified <ph id="ph3">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> and <ph id="ph4">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Agrega <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> al <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> especificado y configura el esquema para hacerlo coincidir con el del origen de datos en función del tipo <ph id="ph3">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> y la tabla <ph id="ph4">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> especificados.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>A reference to a collection of <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> objects that were added to the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Referencia a una colección de objetos <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> que se agregaron a <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>This method retrieves the schema information from the data source using the <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>.</source>
          <target state="translated">Este método recupera la información del esquema de origen de datos mediante el <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> operation adds a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to the destination <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> operación agrega un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> al destino <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>It then adds columns to the <ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph> of the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, and configures the following <ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph> properties if they exist at the data source:</source>
          <target state="translated">A continuación, agrega columnas a la <ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph> de la <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>y configura las siguientes <ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph> propiedades si existen en el origen de datos:</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source><ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>You must set <ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;</ph> separately.</source>
          <target state="translated">Debe establecer <ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;</ph> por separado.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> also configures the <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataTable.Constraints%2A&gt;</ph> properties according to the following rules:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> también configura el <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> y <ph id="ph3">&lt;xref:System.Data.DataTable.Constraints%2A&gt;</ph> propiedades según las reglas siguientes:</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>If one or more primary key columns are returned by the <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>, they are used as the primary key columns for the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Si una o varias columnas de clave principal no se devuelve el <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>, se utilizan como columnas de clave principales para el <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</source>
          <target state="translated">Si no se devuelve ninguna columna de clave principal pero sí columnas únicas, las columnas únicas se usan como clave principal si y solo si todas las columnas únicas son no admiten valores NULL.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>If any of the columns are nullable, a <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> is added to the <ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph>, but the <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> property is not set.</source>
          <target state="translated">Si hay alguna de las columnas que aceptan valores NULL, un <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> se agrega a la <ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph>, pero la <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> no se establece la propiedad.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Si se devuelven columnas de clave principal y columnas únicas, las columnas de clave principales se utilizan como columnas de clave principal para el <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>Note that primary keys and unique constraints are added to the <ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph> according to the preceding rules, but other constraint types are not added.</source>
          <target state="translated">Tenga en cuenta que las claves principales y las restricciones únicas se agregan a la <ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph> según las reglas anteriores, pero otra restricción de tipos no se agregan.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</source>
          <target state="translated">Si un clúster un único índice está definido en una o varias columnas en una tabla de SQL Server y la restricción de clave principal se define en un conjunto diferente de columnas, se devolverá los nombres de las columnas en el índice clúster.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</source>
          <target state="translated">Para devolver el nombre o nombres de las columnas de clave principal, use una sugerencia de consulta con la instrucción SELECT que especifica el nombre del índice de clave principal.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>For more information about specifying query hints, see <bpt id="p1">[</bpt>Query Hint (Transact-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>.</source>
          <target state="translated">Para obtener más información acerca de cómo especificar sugerencias de consulta, vea <bpt id="p1">[</bpt>sugerencia de consulta (Transact-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>Primary key information is used during <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> to find and replace any rows whose key columns match.</source>
          <target state="translated">Información de clave principal se utiliza durante la <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> para buscar y reemplazar todas las filas cuyas columnas de clave coincidan.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>If this is not the desired behavior, use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> without requesting schema information.</source>
          <target state="translated">Si esto no es el comportamiento deseado, utilice <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> sin solicitar la información de esquema.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it generates names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> detecta columnas duplicadas al rellenar un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, genera nombres para las columnas siguientes, utilizando el patrón "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2","<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>If the incoming data contains unnamed columns, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">Si los datos entrantes contienen columnas sin nombre, se colocan en la <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> según el modelo "Columna1", "Columna2" y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>When multiple result sets are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> each result set is placed in a separate table.</source>
          <target state="translated">Cuando se agregan varios conjuntos de resultados a la <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> cada conjunto de resultados se coloca en una tabla independiente.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</source>
          <target state="translated">Conjuntos de resultados adicionales se denominan agregando valores enteros al nombre de tabla especificado (por ejemplo, "Table", "Tabla1", "Tabla2" y así sucesivamente.).</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">Las aplicaciones que usan nombres de tabla y columna deben asegurarse de que no haya conflictos con estos modelos de nomenclatura.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> method supports scenarios where the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contains multiple <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> objects whose names differ only by case.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> método es compatible con escenarios donde la <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contiene varias <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> objetos cuyos nombres se diferencien solo por el uso de mayúsculas o minúsculas.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>In such situations, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</source>
          <target state="translated">En estas situaciones, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> realiza una comparación entre mayúsculas y minúsculas para encontrar la tabla correspondiente y crea una tabla nueva si no existe ninguna coincidencia exacta.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">El siguiente código C# ilustra este comportamiento.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>If <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> is called and the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contains only one <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> whose name differs only by case, that <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> is updated.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> se llama y <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contiene solamente un <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> cuyo nombre difiere sólo por mayúsculas, o que <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> se actualiza.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>In this scenario, the comparison is case insensitive.</source>
          <target state="translated">En este escenario, la comparación distingue entre mayúsculas y minúsculas.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">El siguiente código C# ilustra este comportamiento.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> object associated with the select command must be valid, but it does not need to open.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> objeto asociado con el comando select debe ser válido, pero no es necesario abrir.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> is closed before <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Data.IDbConnection&gt;</ph> se cerró antes de <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> es llama, se abre para recuperar datos, a continuación, se cierra.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>If the connection is open before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> is called, it is left open.</source>
          <target state="translated">Si la conexión está abierta antes de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> es llama, se deja abierto.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>When handling batch SQL statements that return multiple results, the implementation of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</source>
          <target state="translated">Al controlar instrucciones SQL por lotes que devuelven varios resultados, la implementación de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> para el proveedor de datos de .NET Framework para OLE DB recupera información de esquema para sólo el primer resultado.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>To retrieve schema information for multiple results, use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> with the <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> set to <ph id="ph3">`AddWithKey`</ph>.</source>
          <target state="translated">Para recuperar información de esquema de varios resultados, utilice <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> con el <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> establecido en <ph id="ph3">`AddWithKey`</ph>.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>When using <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</source>
          <target state="translated">Cuando se utiliza el método <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>, el proveedor de datos de .NET Framework para SQL Server agrega una cláusula FOR BROWSE a la instrucción que se está ejecutando.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</source>
          <target state="translated">El usuario debe tener en cuenta los posibles efectos secundarios, como las interferencias con el uso de las instrucciones SET FMTONLY ON.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>See SQL Server Books Online for more information.</source>
          <target state="translated">Vea los Libros en pantalla de SQL Server para obtener más información.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>The following example uses the derived class, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>, to fill a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with the schema, and returns a <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">En el ejemplo siguiente se utiliza la clase derivada, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>, para rellenar un <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> con el esquema y devuelve un <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
          <source>A source table from which to get the schema could not be found.</source>
          <target state="translated">No se encontró una tabla de origen desde la que se pueda obtener el esquema.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to be filled with the schema from the data source.</source>
          <target state="translated">Clase <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> que se va a rellenar con el esquema a partir del origen de datos.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> values.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The SQL SELECT statement used to retrieve rows from the data source.</source>
          <target state="translated">Instrucción SELECT de SQL utilizada para recuperar las filas del origen de datos.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> values.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>Configures the schema of the specified <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> based on the specified <ph id="ph2">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph>, command string, and <ph id="ph3">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> values.</source>
          <target state="translated">Configura el esquema de la tabla <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> especificada en función del <ph id="ph2">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph>, la cadena de comando y los valores de <ph id="ph3">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> especificados.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>A of <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> object that contains schema information returned from the data source.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> que contiene la información de esquema devuelta desde el origen de datos.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> method retrieves the schema from the data source using the <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> método recupera el esquema de origen de datos mediante el <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The connection object associated with the <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> must be valid, but it does not need to be open.</source>
          <target state="translated">El objeto de conexión asociado con el <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> debe ser válido, pero no es necesario que esté abierto.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the connection is closed before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">Si la conexión se cerró antes de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> es llama, se abre para recuperar datos, a continuación, se cierra.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the connection is open before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> is called, it remains open.</source>
          <target state="translated">Si la conexión está abierta antes de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> es llama, permanece abierta.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> operation adds a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to the destination <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> operación agrega un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> al destino <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>It then adds columns to the <ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph> of the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, and configures the following <ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph> properties if they exist at the data source:</source>
          <target state="translated">A continuación, agrega columnas a la <ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph> de la <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>y configura las siguientes <ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph> propiedades si existen en el origen de datos:</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source><ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>You must set <ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;</ph> separately.</source>
          <target state="translated">Debe establecer <ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;</ph> por separado.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> also configures the <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataTable.Constraints%2A&gt;</ph> properties according to the following rules:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> también configura el <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> y <ph id="ph3">&lt;xref:System.Data.DataTable.Constraints%2A&gt;</ph> propiedades según las reglas siguientes:</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If one or more primary key columns are returned by the <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>, they are used as the primary key columns for the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Si una o varias columnas de clave principal no se devuelve el <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>, se utilizan como columnas de clave principales para el <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</source>
          <target state="translated">Si no se devuelve ninguna columna de clave principal pero sí columnas únicas, las columnas únicas se usan como clave principal si y solo si todas las columnas únicas son no admiten valores NULL.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If any of the columns are nullable, a <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> is added to the <ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph>, but the <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> property is not set.</source>
          <target state="translated">Si hay alguna de las columnas que aceptan valores NULL, un <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> se agrega a la <ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph>, pero la <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> no se establece la propiedad.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Si se devuelven columnas de clave principal y columnas únicas, las columnas de clave principales se utilizan como columnas de clave principal para el <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>Note that primary keys and unique constraints are added to the <ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph> according to the preceding rules, but other constraint types are not added.</source>
          <target state="translated">Tenga en cuenta que las claves principales y las restricciones únicas se agregan a la <ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph> según las reglas anteriores, pero otra restricción de tipos no se agregan.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</source>
          <target state="translated">Si un clúster un único índice está definido en una o varias columnas en una tabla de SQL Server y la restricción de clave principal se define en un conjunto diferente de columnas, se devolverá los nombres de las columnas en el índice clúster.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</source>
          <target state="translated">Para devolver el nombre o nombres de las columnas de clave principal, use una sugerencia de consulta con la instrucción SELECT que especifica el nombre del índice de clave principal.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>For more information about specifying query hints, see <bpt id="p1">[</bpt>Query Hint (Transact-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>.</source>
          <target state="translated">Para obtener más información acerca de cómo especificar sugerencias de consulta, vea <bpt id="p1">[</bpt>sugerencia de consulta (Transact-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph> encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it generates names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph> detecta columnas duplicadas al rellenar un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, genera nombres para las columnas siguientes, utilizando el patrón "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2","<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>If the incoming data contains unnamed columns, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">Si los datos entrantes contienen columnas sin nombre, se colocan en la <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> según el modelo "Columna1", "Columna2" y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>When multiple result sets are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> each result set is placed in a separate table.</source>
          <target state="translated">Cuando se agregan varios conjuntos de resultados a la <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> cada conjunto de resultados se coloca en una tabla independiente.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</source>
          <target state="translated">Conjuntos de resultados adicionales se denominan agregando valores enteros al nombre de tabla especificado (por ejemplo, "Table", "Tabla1", "Tabla2" y así sucesivamente.).</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">Las aplicaciones que usan nombres de tabla y columna deben asegurarse de que no haya conflictos con estos modelos de nomenclatura.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> does not return any rows.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> no devuelve ninguna fila.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method to add rows to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> método para agregar filas a una <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>When handling batch SQL statements that return multiple results, the implementation of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</source>
          <target state="translated">Al controlar instrucciones SQL por lotes que devuelven varios resultados, la implementación de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> para el proveedor de datos de .NET Framework para OLE DB recupera información de esquema para sólo el primer resultado.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>To retrieve schema information for multiple results, use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> with the <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> set to <ph id="ph3">`AddWithKey`</ph>.</source>
          <target state="translated">Para recuperar información de esquema de varios resultados, utilice <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> con el <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> establecido en <ph id="ph3">`AddWithKey`</ph>.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>When using <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</source>
          <target state="translated">Cuando se utiliza el método <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>, el proveedor de datos de .NET Framework para SQL Server agrega una cláusula FOR BROWSE a la instrucción que se está ejecutando.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</source>
          <target state="translated">El usuario debe tener en cuenta los posibles efectos secundarios, como las interferencias con el uso de las instrucciones SET FMTONLY ON.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>See SQL Server Books Online for more information.</source>
          <target state="translated">Vea los Libros en pantalla de SQL Server para obtener más información.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
          <source>This implementation of the <ph id="ph1">&lt;see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /&gt;</ph> method is protected and is designed for use by a .NET Framework data provider.</source>
          <target state="translated">Esta implementación de la <ph id="ph1">&lt;see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /&gt;</ph> método está protegido y está diseñado para su uso por un proveedor de datos de .NET Framework.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to be filled with the schema from the data source.</source>
          <target state="translated">Clase <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> que se va a rellenar con el esquema a partir del origen de datos.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> values.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>The SQL SELECT statement used to retrieve rows from the data source.</source>
          <target state="translated">Instrucción SELECT de SQL utilizada para recuperar las filas del origen de datos.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>The name of the source table to use for table mapping.</source>
          <target state="translated">Nombre de la tabla de origen que se utilizará para la asignación de tabla.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph> values.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Data.CommandBehavior" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to the specified <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> and configures the schema to match that in the data source based on the specified <ph id="ph3">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph>.</source>
          <target state="translated">Agrega <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> al <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> especificado y configura el esquema para hacerlo coincidir con el del origen de datos en función del tipo <ph id="ph3">&lt;see cref="T:System.Data.SchemaType" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> objects that contain schema information returned from the data source.</source>
          <target state="translated">Matriz de objetos <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> que contienen la información de esquema devuelta a partir del origen de datos.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> method retrieves the schema from the data source using the <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> método recupera el esquema de origen de datos mediante el <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>The connection object associated with the <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> must be valid, but it does not need to be open.</source>
          <target state="translated">El objeto de conexión asociado con el <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph> debe ser válido, pero no es necesario que esté abierto.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>If the connection is closed before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> is called, it is opened to retrieve data, then closed.</source>
          <target state="translated">Si la conexión se cerró antes de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> es llama, se abre para recuperar datos, a continuación, se cierra.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>If the connection is open before <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> is called, it remains open.</source>
          <target state="translated">Si la conexión está abierta antes de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> es llama, permanece abierta.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> operation adds a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to the destination <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> operación agrega un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> al destino <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>It then adds columns to the <ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph> of the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, and configures the following <ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph> properties if they exist at the data source:</source>
          <target state="translated">A continuación, agrega columnas a la <ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph> de la <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>y configura las siguientes <ph id="ph3">&lt;xref:System.Data.DataColumn&gt;</ph> propiedades si existen en el origen de datos:</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source><ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>You must set <ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;</ph> separately.</source>
          <target state="translated">Debe establecer <ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrementStep%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Data.DataColumn.AutoIncrementSeed%2A&gt;</ph> por separado.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> also configures the <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataTable.Constraints%2A&gt;</ph> properties according to the following rules:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> también configura el <ph id="ph2">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> y <ph id="ph3">&lt;xref:System.Data.DataTable.Constraints%2A&gt;</ph> propiedades según las reglas siguientes:</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>If one or more primary key columns are returned by the <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>, they are used as the primary key columns for the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Si una o varias columnas de clave principal no se devuelve el <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>, se utilizan como columnas de clave principales para el <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</source>
          <target state="translated">Si no se devuelve ninguna columna de clave principal pero sí columnas únicas, las columnas únicas se usan como clave principal si y solo si todas las columnas únicas son no admiten valores NULL.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>If any of the columns are nullable, a <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> is added to the <ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph>, but the <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> property is not set.</source>
          <target state="translated">Si hay alguna de las columnas que aceptan valores NULL, un <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> se agrega a la <ph id="ph2">&lt;xref:System.Data.ConstraintCollection&gt;</ph>, pero la <ph id="ph3">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> no se establece la propiedad.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Si se devuelven columnas de clave principal y columnas únicas, las columnas de clave principales se utilizan como columnas de clave principal para el <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>Note that primary keys and unique constraints are added to the <ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph> according to the preceding rules, but other constraint types are not added.</source>
          <target state="translated">Tenga en cuenta que las claves principales y las restricciones únicas se agregan a la <ph id="ph1">&lt;xref:System.Data.ConstraintCollection&gt;</ph> según las reglas anteriores, pero otra restricción de tipos no se agregan.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</source>
          <target state="translated">Si un clúster un único índice está definido en una o varias columnas en una tabla de SQL Server y la restricción de clave principal se define en un conjunto diferente de columnas, se devolverá los nombres de las columnas en el índice clúster.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</source>
          <target state="translated">Para devolver el nombre o nombres de las columnas de clave principal, use una sugerencia de consulta con la instrucción SELECT que especifica el nombre del índice de clave principal.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>For more information about specifying query hints, see <bpt id="p1">[</bpt>Query Hint (Transact-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>.</source>
          <target state="translated">Para obtener más información acerca de cómo especificar sugerencias de consulta, vea <bpt id="p1">[</bpt>sugerencia de consulta (Transact-SQL)<ept id="p1">](http://msdn.microsoft.com/library/ms181714.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph> encounters duplicate columns while populating a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, it generates names for the subsequent columns, using the pattern "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2", "<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", and so on.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Data.IDataAdapter&gt;</ph> detecta columnas duplicadas al rellenar un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, genera nombres para las columnas siguientes, utilizando el patrón "<bpt id="p1">*</bpt>columnname<ept id="p1">*</ept>1", "<bpt id="p2">*</bpt>columnname<ept id="p2">*</ept>2","<bpt id="p3">*</bpt>columnname<ept id="p3">*</ept>3", y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>If the incoming data contains unnamed columns, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> according to the pattern "Column1", "Column2", and so on.</source>
          <target state="translated">Si los datos entrantes contienen columnas sin nombre, se colocan en la <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> según el modelo "Columna1", "Columna2" y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>When multiple result sets are added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> each result set is placed in a separate table.</source>
          <target state="translated">Cuando se agregan varios conjuntos de resultados a la <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> cada conjunto de resultados se coloca en una tabla independiente.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</source>
          <target state="translated">Conjuntos de resultados adicionales se denominan agregando valores enteros al nombre de tabla especificado (por ejemplo, "Table", "Tabla1", "Tabla2" y así sucesivamente.).</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</source>
          <target state="translated">Las aplicaciones que usan nombres de tabla y columna deben asegurarse de que no haya conflictos con estos modelos de nomenclatura.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> method supports scenarios where the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contains multiple <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> objects whose names differ only by case.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> método es compatible con escenarios donde la <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contiene varias <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> objetos cuyos nombres se diferencien solo por el uso de mayúsculas o minúsculas.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>In such situations, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</source>
          <target state="translated">En estas situaciones, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> realiza una comparación entre mayúsculas y minúsculas para encontrar la tabla correspondiente y crea una tabla nueva si no existe ninguna coincidencia exacta.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">El siguiente código C# ilustra este comportamiento.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>If <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> is called and the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contains only one <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> whose name differs only by case, that <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> is updated.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> se llama y <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contiene solamente un <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> cuyo nombre difiere sólo por mayúsculas, o que <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> se actualiza.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>In this scenario, the comparison is case insensitive.</source>
          <target state="translated">En este escenario, la comparación distingue entre mayúsculas y minúsculas.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">El siguiente código C# ilustra este comportamiento.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> does not return any rows.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> no devuelve ninguna fila.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method to add rows to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> método para agregar filas a una <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>When handling batch SQL statements that return multiple results, the implementation of <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</source>
          <target state="translated">Al controlar instrucciones SQL por lotes que devuelven varios resultados, la implementación de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph> para el proveedor de datos de .NET Framework para OLE DB recupera información de esquema para sólo el primer resultado.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>To retrieve schema information for multiple results, use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> with the <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> set to <ph id="ph3">`AddWithKey`</ph>.</source>
          <target state="translated">Para recuperar información de esquema de varios resultados, utilice <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> con el <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction&gt;</ph> establecido en <ph id="ph3">`AddWithKey`</ph>.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>When using <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</source>
          <target state="translated">Cuando se utiliza el método <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>, el proveedor de datos de .NET Framework para SQL Server agrega una cláusula FOR BROWSE a la instrucción que se está ejecutando.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</source>
          <target state="translated">El usuario debe tener en cuenta los posibles efectos secundarios, como las interferencias con el uso de las instrucciones SET FMTONLY ON.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>See SQL Server Books Online for more information.</source>
          <target state="translated">Vea los Libros en pantalla de SQL Server para obtener más información.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
          <source>This implementation of the <ph id="ph1">&lt;see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /&gt;</ph> method is protected and is designed for use by a .NET Framework data provider.</source>
          <target state="translated">Esta implementación de la <ph id="ph1">&lt;see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /&gt;</ph> método está protegido y está diseñado para su uso por un proveedor de datos de .NET Framework.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
          <source>The index of the command to retrieve the parameter from.</source>
          <target state="translated">Índice del comando del que se va a recuperar el parámetro.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
          <source>The index of the parameter within the command.</source>
          <target state="translated">Índice del parámetro incluido en el comando.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Data.IDataParameter" /&gt;</ph> from one of the commands in the current batch.</source>
          <target state="translated">Devuelve una interfaz <ph id="ph1">&lt;see cref="T:System.Data.IDataParameter" /&gt;</ph> de uno de los comandos del lote actual.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDataParameter" /&gt;</ph> specified.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Data.IDataParameter" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
          <source>In <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, this method throws <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">En <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, este método produce <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
          <source>Classes that inherit from <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> override this method to provide support for batches.</source>
          <target state="translated">Las clases que heredan de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> invalide este método para proporcionar compatibilidad con lotes.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
          <source>The adapter does not support batches.</source>
          <target state="translated">El adaptador no admite el procesamiento por lotes.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
          <source>This method is protected and is designed for use by a .NET Framework data provider.</source>
          <target state="translated">Este método está protegido y está diseñado para su uso por un proveedor de datos de .NET Framework.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
          <source>If a class that inherits from <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> supports batches, that class overrides this method to allow users to execute a batch.</source>
          <target state="translated">Si una clase que hereda de <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> es compatible con lotes, que la clase invalida este método para permitir a los usuarios ejecutar un lote.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
          <source>An implementation uses the <ph id="ph1">&lt;paramref name="commandIdentifier" /&gt;</ph> provided to locate the requested command, then uses the <ph id="ph2">&lt;paramref name="parameterIndex" /&gt;</ph> provided to locate the requested parameter.</source>
          <target state="translated">Una implementación usa la <ph id="ph1">&lt;paramref name="commandIdentifier" /&gt;</ph> proporcionado para buscar el comando solicitado, a continuación, usa el <ph id="ph2">&lt;paramref name="parameterIndex" /&gt;</ph> proporcionado para buscar el parámetro solicitado.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)">
          <source>For example, a <ph id="ph1">&lt;paramref name="commandIdentifier" /&gt;</ph> of 0 and a <ph id="ph2">&lt;paramref name="parameterIndex" /&gt;</ph> of 0 returns the first parameter from the first command in the batch.</source>
          <target state="translated">Por ejemplo, un <ph id="ph1">&lt;paramref name="commandIdentifier" /&gt;</ph> de 0 y un <ph id="ph2">&lt;paramref name="parameterIndex" /&gt;</ph> de 0 devuelve el primer parámetro del primer comando del lote.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
          <source>The zero-based column ordinal of the individual command within the batch.</source>
          <target state="translated">Índice de columna de base cero del comando individual dentro del lote.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
          <source>The number of rows affected in the data store by the specified command within the batch.</source>
          <target state="translated">Número de filas del almacén de datos que se ven afectadas por el comando especificado dentro del lote.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> thrown during execution of the specified command.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> que se ha producido durante la ejecución del comando especificado.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
          <source>Returns <ph id="ph1">&lt;see langword="null" /&gt;</ph> (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) if no exception is thrown.</source>
          <target state="translated">Devuelve <ph id="ph1">&lt;see langword="null" /&gt;</ph> (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic) si no se ha producido ninguna excepción.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
          <source>Returns information about an individual update attempt within a larger batched update.</source>
          <target state="translated">Devuelve información sobre un intento de actualización dentro de una actualización más amplia por lotes.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
          <source>Information about an individual update attempt within a larger batched update.</source>
          <target state="translated">Información sobre un intento de actualización individual dentro de una actualización por lotes más amplia.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
          <source>Data providers that support batched updating logic must override a series of virtual methods on the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> class.</source>
          <target state="translated">Proveedores de datos que admiten la lógica de actualización por lotes deben invalidar una serie de métodos virtuales en la <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
          <source><ph id="ph1">`GetBatchedRecordsAffected`</ph> represents one of those virtual methods.</source>
          <target state="translated"><ph id="ph1">`GetBatchedRecordsAffected`</ph> representa uno de los métodos virtuales.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)">
          <source>The <ph id="ph1">`DbDataAdapter`</ph> class relies on <ph id="ph2">`GetBatchedRecordsAffected`</ph> to determine the success or failure of individual update attempts within a batch so it can mark each corresponding <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> accordingly.</source>
          <target state="translated">El <ph id="ph1">`DbDataAdapter`</ph> depende de la clase <ph id="ph2">`GetBatchedRecordsAffected`</ph> para determinar el éxito o fracaso de intentos de actualización individual dentro de un lote de modo que pueda marcar cada correspondiente <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> en consecuencia.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.GetFillParameters">
          <source>Gets the parameters set by the user when executing an SQL SELECT statement.</source>
          <target state="translated">Obtiene los parámetros establecidos por el usuario al ejecutar una instrucción SELECT de SQL.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.GetFillParameters">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.IDataParameter" /&gt;</ph> objects that contains the parameters set by the user.</source>
          <target state="translated">Matriz de objetos <ph id="ph1">&lt;see cref="T:System.Data.IDataParameter" /&gt;</ph> que contienen los parámetros establecidos por el usuario.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.InitializeBatching">
          <source>Initializes batching for the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph>.</source>
          <target state="translated">Inicializa el procesamiento por lotes de <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.InitializeBatching">
          <source>In <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, this method throws <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">En <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, este método produce <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.InitializeBatching">
          <source>Classes that inherit from <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> override this method to provide support for batches.</source>
          <target state="translated">Las clases que heredan de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> invalide este método para proporcionar compatibilidad con lotes.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.InitializeBatching">
          <source>The adapter does not support batches.</source>
          <target state="translated">El adaptador no admite el procesamiento por lotes.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.InitializeBatching">
          <source>This method is protected and is designed for use by a .NET Framework data provider.</source>
          <target state="translated">Este método está protegido y está diseñado para su uso por un proveedor de datos de .NET Framework.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.InitializeBatching">
          <source>If a class that inherits from <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> supports batches, that class overrides this method.</source>
          <target state="translated">Si una clase que hereda de <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> es compatible con lotes, que la clase invalida este método.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.InitializeBatching">
          <source>This method gives the class the opportunity to initialize any resources necessary to support batching.</source>
          <target state="translated">Este método ofrece la oportunidad de inicializar los recursos necesarios para admitir el procesamiento por lotes de la clase.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.InitializeBatching">
          <source>For example, a class may allocate a data structure to hold the set of commands in the batch.</source>
          <target state="translated">Por ejemplo, una clase puede asignar una estructura de datos para contener el conjunto de comandos en el lote.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbDataAdapter.InsertCommand">
          <source>Gets or sets a command used to insert new records into the data source.</source>
          <target state="translated">Obtiene o establece un comando que se utiliza para insertar nuevos registros en el origen de datos.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.InsertCommand">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> used during <ph id="ph2">&lt;see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to insert records in the data source for new rows in the data set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> que se utiliza mientras opera <ph id="ph2">&lt;see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> para insertar registros en el origen de datos para nuevas filas en el conjunto de datos.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.InsertCommand">
          <source>During <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, if this property is not set and primary key information is present in the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.IDbDataAdapter.InsertCommand%2A&gt;</ph> will be automatically generated.</source>
          <target state="translated">Durante la <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, si no se establece esta propiedad y la información de clave principal está presente en el <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, el <ph id="ph3">&lt;xref:System.Data.IDbDataAdapter.InsertCommand%2A&gt;</ph> se generará automáticamente.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.InsertCommand">
          <source>The following example creates the derived class <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and sets some of its properties.</source>
          <target state="translated">En el ejemplo siguiente se crea la clase derivada <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> y establece algunas de sus propiedades.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.RowUpdatedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.RowUpdatedEventArgs" /&gt;</ph> que contiene los datos del evento.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see langword="RowUpdated" /&gt;</ph> event of a .NET Framework data provider.</source>
          <target state="translated">Provoca el evento <ph id="ph1">&lt;see langword="RowUpdated" /&gt;</ph> de un proveedor de datos de .NET Framework.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Para obtener información general, vea <bpt id="p1">[</bpt>controlar y provocar eventos<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">Al reemplazar <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /&gt;</ph> en una clase derivada, asegúrese de llamar a la clase base <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Common.RowUpdatingEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.RowUpdatingEventArgs" /&gt;</ph> que contiene los datos del evento.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see langword="RowUpdating" /&gt;</ph> event of a .NET Framework data provider.</source>
          <target state="translated">Provoca el evento <ph id="ph1">&lt;see langword="RowUpdating" /&gt;</ph> de un proveedor de datos de .NET Framework.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Para obtener información general, vea <bpt id="p1">[</bpt>controlar y provocar eventos<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /&gt;</ph> in a derived class, be sure to call the bases class's <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">Al reemplazar <ph id="ph1">&lt;see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /&gt;</ph> en una clase derivada, asegúrese de llamar a la clase base <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbDataAdapter.SelectCommand">
          <source>Gets or sets a command used to select records in the data source.</source>
          <target state="translated">Obtiene o establece un comando que se utiliza para seleccionar registros en el origen de datos.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.SelectCommand">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> that is used during <ph id="ph2">&lt;see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to select records from data source for placement in the data set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> que se utiliza mientras opera <ph id="ph2">&lt;see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> para seleccionar registros del origen de datos y colocarlos en el conjunto de datos.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.SelectCommand">
          <source>The following example creates the derived class <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and sets some of its properties.</source>
          <target state="translated">En el ejemplo siguiente se crea la clase derivada <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> y establece algunas de sus propiedades.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
          <source>Gets or sets an SQL statement for deleting records from the data set.</source>
          <target state="translated">Obtiene o establece una instrucción SQL para eliminar registros del conjunto de datos.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> used during <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to delete records in the data source for deleted rows in the data set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> utilizado mientras opera <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> para eliminar registros del origen de datos para filas eliminadas en el conjunto de datos.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.DeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">Para obtener más información, vea <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.DeleteCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
          <source>Gets or sets an SQL statement used to insert new records into the data source.</source>
          <target state="translated">Obtiene o establece una instrucción SQL utilizada para insertar nuevos registros en el origen de datos.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> used during <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to insert records in the data source for new rows in the data set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> utilizado mientras opera <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> para insertar registros en el origen de datos para nuevas filas en el conjunto de datos.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.InsertCommand%2A&gt;</ph>.</source>
          <target state="translated">Para obtener más información, vea <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.InsertCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
          <source>Gets or sets an SQL statement used to select records in the data source.</source>
          <target state="translated">Obtiene o establece una instrucción SQL utilizada para seleccionar registros en el origen de datos.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> that is used during <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to select records from data source for placement in the data set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> que se utiliza mientras opera <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> para seleccionar registros del origen de datos para su colocación en el conjunto de datos.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>.</source>
          <target state="translated">Para obtener más información, vea <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.SelectCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
          <source>Gets or sets an SQL statement used to update records in the data source.</source>
          <target state="translated">Obtiene o establece una instrucción SQL utilizada para actualizar registros en el origen de datos.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> used during <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to update records in the data source for modified rows in the data set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> utilizado mientras opera <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> para actualizar registros del origen de datos para filas modificadas en el conjunto de datos.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.UpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">Para obtener más información, vea <ph id="ph1">&lt;xref:System.Data.IDbDataAdapter.UpdateCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone">
          <source>Creates a new object that is a copy of the current instance.</source>
          <target state="translated">Crea un nuevo objeto copiado de la instancia actual.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone">
          <source>A new object that is a copy of this instance.</source>
          <target state="translated">Nuevo objeto que es copia de esta instancia.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ICloneable&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.ICloneable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone">
          <source>For more information, see <ph id="ph1">&lt;xref:System.ICloneable.Clone%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Para obtener más información, vea <ph id="ph1">&lt;xref:System.ICloneable.Clone%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.TerminateBatching">
          <source>Ends batching for the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph>.</source>
          <target state="translated">Finaliza el procesamiento por lotes para <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.TerminateBatching">
          <source>In <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, this method throws <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">En <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, este método produce <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.TerminateBatching">
          <source>Classes that inherit from <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> override this method to provide support for batches.</source>
          <target state="translated">Las clases que heredan de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> invalide este método para proporcionar compatibilidad con lotes.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.TerminateBatching">
          <source>The adapter does not support batches.</source>
          <target state="translated">El adaptador no admite el procesamiento por lotes.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.TerminateBatching">
          <source>This method is protected and is designed for use by a .NET Framework data provider.</source>
          <target state="translated">Este método está protegido y está diseñado para su uso por un proveedor de datos de .NET Framework.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.TerminateBatching">
          <source>If a class that inherits from <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> supports batches, that class overrides this method.</source>
          <target state="translated">Si una clase que hereda de <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> es compatible con lotes, que la clase invalida este método.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.TerminateBatching">
          <source>This method gives the class the opportunity to dispose of any resources allocated to support batching.</source>
          <target state="translated">Este método proporciona la clase la oportunidad de eliminar todos los recursos asignados para admitir el procesamiento por lotes.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.TerminateBatching">
          <source>For example, the class may deallocate the data structure that holds the commands in the batch.</source>
          <target state="translated">Por ejemplo, la clase puede desasignar la estructura de datos que contiene los comandos en el lote.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbDataAdapter">
          <source>Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Actualiza los valores de la base de datos ejecutando las instrucciones INSERT, UPDATE o DELETE respectivas para cada fila insertada, actualizada o eliminada en <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects used to update the data source.</source>
          <target state="translated">Matriz de objetos <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> utilizada para actualizar el origen de datos.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Actualiza los valores de la base de datos ejecutando las instrucciones INSERT, UPDATE o DELETE respectivas para cada fila insertada, actualizada o eliminada en la matriz especificada en <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>The number of rows successfully updated from the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Número de filas del <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> actualizadas correctamente.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>When an application calls the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> examines the <ph id="ph3">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Cuando una aplicación llama el <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> método, el <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> examina la <ph id="ph3">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> propiedad y ejecuta las instrucciones INSERT, UPDATE o DELETE necesarias forma iterativa para cada fila, según el orden de los índices configurados en el <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>For example, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Por ejemplo, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> podría ejecutar una instrucción DELETE, seguida de una instrucción INSERT y, a continuación, otra instrucción DELETE, debido al orden de las filas de la <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>It should be noted that these statements are not performed as a batch process; each row is updated individually.</source>
          <target state="translated">Se debe tener en cuenta que estas instrucciones no se realizan como un proceso por lotes; cada fila se actualiza individualmente.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>An application can call the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</source>
          <target state="translated">Una aplicación puede llamar a la <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> método en situaciones donde se debe controlar la secuencia de tipos de instrucciones (por ejemplo, las instrucciones INSERT antes de las actualizaciones).</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>For more information, see <bpt id="p1">[</bpt>Updating Data Sources with DataAdapters<ept id="p1">](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>actualizar orígenes de datos con DataAdapters<ept id="p1">](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)</ept>.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>If INSERT, UPDATE, or DELETE statements have not been specified, the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method generates an exception.</source>
          <target state="translated">Si no ha especificado las instrucciones INSERT, UPDATE o DELETE, la <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> método genera una excepción.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>However, you can create a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> object to automatically generate SQL statements for single-table updates if you set the <ph id="ph3">`SelectCommand`</ph> property of a .NET Framework data provider.</source>
          <target state="translated">Sin embargo, puede crear un <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> objeto que se va a generar automáticamente las instrucciones SQL para las actualizaciones de tabla única si se establece la <ph id="ph3">`SelectCommand`</ph> propiedad de un proveedor de datos de .NET Framework.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>Then, any additional SQL statements that you do not set are generated by the <bpt id="p1">**</bpt>CommandBuilder<ept id="p1">**</ept>.</source>
          <target state="translated">A continuación, se generan las instrucciones SQL que no se establecen mediante el <bpt id="p1">**</bpt>CommandBuilder<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>This generation logic requires key column information to be present in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Esta lógica de generación requiere información de columna de clave debe estar presente en el <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>For more information see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>generar comandos con objetos CommandBuilder<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method retrieves rows from the table listed in the first mapping before performing an update.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> método recupera filas de la tabla que aparece en la primera asignación antes de realizar una actualización.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> then refreshes the row using the value of the <ph id="ph2">&lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;</ph> property.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> , a continuación, actualiza la fila con el valor de la <ph id="ph2">&lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>Any additional rows returned are ignored.</source>
          <target state="translated">Se omite cualquier fila adicional devuelta.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>After any data is loaded back into the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised, allowing the user to inspect the reconciled <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> row and any output parameters returned by the command.</source>
          <target state="translated">Después de que los datos se vuelve a cargar en el <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> se genera el evento, que permite al usuario inspeccionar el reconciliarse <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> fila y cualquier parámetro de salida devuelto por el comando.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>After a row updates successfully, the changes to that row are accepted.</source>
          <target state="translated">Después de una fila se actualiza correctamente, se aceptan los cambios en esa fila.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>When using <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, the order of execution is as follows:</source>
          <target state="translated">Cuando se usa <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, el orden de ejecución es el siguiente:</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>The values in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> are moved to the parameter values.</source>
          <target state="translated">Los valores de la <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> se mueven a los valores de parámetro.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> event is raised.</source>
          <target state="translated">Se genera el evento <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>The command executes.</source>
          <target state="translated">Ejecuta el comando.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, the first returned result is placed in the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">Si el comando se establece en <ph id="ph1">`FirstReturnedRecord`</ph>, el primer resultado devuelto se coloca en el <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>If there are output parameters, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">Si no hay parámetros de salida, se colocan en la <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised.</source>
          <target state="translated">Se genera el evento <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source><ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> is called.</source>
          <target state="translated">Se llama a <ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>Each command associated with the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> usually has a parameters collection associated with it.</source>
          <target state="translated">Cada comando asociado a la <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> normalmente tiene una colección de parámetros asociada a él.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>Parameters are mapped to the current row through the <ph id="ph1">`SourceColumn`</ph> and <ph id="ph2">`SourceVersion`</ph> properties of a .NET Framework data provider's <ph id="ph3">`Parameter`</ph> class.</source>
          <target state="translated">Parámetros se asignan a la fila actual a través de la <ph id="ph1">`SourceColumn`</ph> y <ph id="ph2">`SourceVersion`</ph> propiedades de un proveedor de datos de .NET Framework <ph id="ph3">`Parameter`</ph> clase.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source><ph id="ph1">`SourceColumn`</ph> refers to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> column that the <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> references to obtain parameter values for the current row.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph> hace referencia a un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> columna que el <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> referencias para obtener los valores de parámetro de la fila actual.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source><ph id="ph1">`SourceColumn`</ph> refers to the unmapped column name before any table mappings have been applied.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph> hace referencia al nombre de columna no asignada antes de que se aplicaron las asignaciones de tabla.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>If <ph id="ph1">`SourceColumn`</ph> refers to a nonexistent column, the action taken depends on one of the following <ph id="ph2">&lt;xref:System.Data.MissingMappingAction&gt;</ph> values.</source>
          <target state="translated">Si <ph id="ph1">`SourceColumn`</ph> hace referencia a una columna que no existe, la acción realizada depende de uno de los siguientes <ph id="ph2">&lt;xref:System.Data.MissingMappingAction&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>Enumeration value</source>
          <target state="translated">Valor de enumeración</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>Action taken</source>
          <target state="translated">Acción realizada</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>Use the source column names and table names in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> if no mapping is present.</source>
          <target state="translated">Utilice los nombres de columna de origen y los nombres de tabla en el <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> si no hay ninguna asignación.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>A <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> is generated.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> se genera.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</source>
          <target state="translated">Cuando las asignaciones se establecen explícitamente, falta de una asignación para un parámetro de entrada suele ser el resultado de un error.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>A <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> is generated.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> se genera.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>The <ph id="ph1">`SourceColumn`</ph> property is also used to map the value for output or input/output parameters back to the <ph id="ph2">`DataSet`</ph>.</source>
          <target state="translated">El <ph id="ph1">`SourceColumn`</ph> propiedad también se utiliza para asignar el valor de salida o parámetros de entrada/salida de nuevo a la <ph id="ph2">`DataSet`</ph>.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>An exception is generated if it refers to a nonexistent column.</source>
          <target state="translated">Si hace referencia a una columna que no existe, se genera una excepción.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>The <ph id="ph1">`SourceVersion`</ph> property of a .NET Framework data provider's <ph id="ph2">`Parameter`</ph> class determines whether to use the Original, Current, or Proposed version of the column value.</source>
          <target state="translated">El <ph id="ph1">`SourceVersion`</ph> propiedad de un proveedor de datos de .NET Framework <ph id="ph2">`Parameter`</ph> clase determina si se utiliza la versión Original, actual o propuesta de valor de la columna.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</source>
          <target state="translated">Esta capacidad se utiliza a menudo para incluir valores originales en la cláusula WHERE de una instrucción UPDATE para comprobar las infracciones de simultaneidad optimista.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</source>
          <target state="translated">Si se produce un error al actualizar una fila, se produce una excepción y se interrumpe la ejecución de la actualización.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>To continue the update operation without generating exceptions when an error is encountered, set the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> property to <ph id="ph2">`true`</ph> before calling <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>.</source>
          <target state="translated">Para reanudar la operación de actualización sin generar excepciones cuando se produce un error, establezca el <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> propiedad <ph id="ph2">`true`</ph> antes de llamar a <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>You may also respond to errors on a per-row basis within the <ph id="ph1">`RowUpdated`</ph> event of a DataAdapter.</source>
          <target state="translated">También puede responder a los errores según una fila por fila dentro de la <ph id="ph1">`RowUpdated`</ph> eventos de un objeto DataAdapter.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>To continue the update operation without generating an exception within the <ph id="ph1">`RowUpdated`</ph> event, set the <ph id="ph2">&lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.Common.RowUpdatedEventArgs&gt;</ph> to <ph id="ph4">&lt;xref:System.Data.UpdateStatus.Continue&gt;</ph>.</source>
          <target state="translated">Para continuar la operación de actualización sin que se genere una excepción dentro de la <ph id="ph1">`RowUpdated`</ph> conjunto de eventos, el <ph id="ph2">&lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt;</ph> propiedad de la <ph id="ph3">&lt;xref:System.Data.Common.RowUpdatedEventArgs&gt;</ph> a <ph id="ph4">&lt;xref:System.Data.UpdateStatus.Continue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>The following example uses the derived class, <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, to update the data source.</source>
          <target state="translated">En el ejemplo siguiente se utiliza la clase derivada, <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>para actualizar el origen de datos.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> no es válido.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>The source table is invalid.</source>
          <target state="translated">La tabla de origen no es válida.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>No <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> exists to update.</source>
          <target state="translated">No existe ningún objeto <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> que actualizar.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>No <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> exists to update.</source>
          <target state="translated">No existe ningún objeto <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> que actualizar.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>No <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> exists to use as a source.</source>
          <target state="translated">No existe ninguna clase <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> que se vaya a utilizar como origen.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
          <source>An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</source>
          <target state="translated">El hecho de intentar ejecutar una instrucción INSERT, UPDATE o DELETE no ha afectado a ningún registro.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> used to update the data source.</source>
          <target state="translated">Clase <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> que se utiliza para actualizar el origen de datos.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Actualiza los valores de la base de datos ejecutando las instrucciones INSERT, UPDATE o DELETE respectivas para cada fila insertada, actualizada o eliminada en los objetos <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> especificados.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>The number of rows successfully updated from the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Número de filas del <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> actualizadas correctamente.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>When an application calls the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> examines the <ph id="ph3">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Cuando una aplicación llama el <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> método, el <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> examina la <ph id="ph3">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> propiedad y ejecuta las instrucciones INSERT, UPDATE o DELETE necesarias forma iterativa para cada fila, según el orden de los índices configurados en el <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>For example, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Por ejemplo, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> podría ejecutar una instrucción DELETE, seguida de una instrucción INSERT y, a continuación, otra instrucción DELETE, debido al orden de las filas de la <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>It should be noted that these statements are not performed as a batch process; each row is updated individually.</source>
          <target state="translated">Se debe tener en cuenta que estas instrucciones no se realizan como un proceso por lotes; cada fila se actualiza individualmente.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>An application can call the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</source>
          <target state="translated">Una aplicación puede llamar a la <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> método en situaciones donde se debe controlar la secuencia de tipos de instrucciones (por ejemplo, las instrucciones INSERT antes de las actualizaciones).</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>For more information, see <bpt id="p1">[</bpt>Updating Data Sources with DataAdapters<ept id="p1">](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>actualizar orígenes de datos con DataAdapters<ept id="p1">](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)</ept>.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>If INSERT, UPDATE, or DELETE statements have not been specified, the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method generates an exception.</source>
          <target state="translated">Si no ha especificado las instrucciones INSERT, UPDATE o DELETE, la <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> método genera una excepción.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>However, you can create a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> object to automatically generate SQL statements for single-table updates if you set the <ph id="ph3">`SelectCommand`</ph> property of a .NET Framework data provider.</source>
          <target state="translated">Sin embargo, puede crear un <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> objeto que se va a generar automáticamente las instrucciones SQL para las actualizaciones de tabla única si se establece la <ph id="ph3">`SelectCommand`</ph> propiedad de un proveedor de datos de .NET Framework.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>Then, any additional SQL statements that you do not set are generated by the <bpt id="p1">**</bpt>CommandBuilder<ept id="p1">**</ept>.</source>
          <target state="translated">A continuación, se generan las instrucciones SQL que no se establecen mediante el <bpt id="p1">**</bpt>CommandBuilder<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>This generation logic requires key column information to be present in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Esta lógica de generación requiere información de columna de clave debe estar presente en el <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>For more information see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>generar comandos con objetos CommandBuilder<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method retrieves rows from the table listed in the first mapping before performing an update.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> método recupera filas de la tabla que aparece en la primera asignación antes de realizar una actualización.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> then refreshes the row using the value of the <ph id="ph2">&lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;</ph> property.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> , a continuación, actualiza la fila con el valor de la <ph id="ph2">&lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>Any additional rows returned are ignored.</source>
          <target state="translated">Se omite cualquier fila adicional devuelta.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>After any data is loaded back into the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised, allowing the user to inspect the reconciled <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> row and any output parameters returned by the command.</source>
          <target state="translated">Después de que los datos se vuelve a cargar en el <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> se genera el evento, que permite al usuario inspeccionar el reconciliarse <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> fila y cualquier parámetro de salida devuelto por el comando.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>After a row updates successfully, the changes to that row are accepted.</source>
          <target state="translated">Después de una fila se actualiza correctamente, se aceptan los cambios en esa fila.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>When using <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, the order of execution is as follows:</source>
          <target state="translated">Cuando se usa <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, el orden de ejecución es el siguiente:</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>The values in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> are moved to the parameter values.</source>
          <target state="translated">Los valores de la <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> se mueven a los valores de parámetro.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> event is raised.</source>
          <target state="translated">Se genera el evento <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>The command executes.</source>
          <target state="translated">Ejecuta el comando.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, then the first returned result is placed in the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">Si el comando se establece en <ph id="ph1">`FirstReturnedRecord`</ph>, a continuación, el primer resultado devuelto se coloca en el <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>If there are output parameters, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">Si no hay parámetros de salida, se colocan en la <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised.</source>
          <target state="translated">Se genera el evento <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source><ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> is called.</source>
          <target state="translated">Se llama a <ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>Each command associated with the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> usually has a parameters collection associated with it.</source>
          <target state="translated">Cada comando asociado a la <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> normalmente tiene una colección de parámetros asociada a él.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>Parameters are mapped to the current row through the <ph id="ph1">`SourceColumn`</ph> and <ph id="ph2">`SourceVersion`</ph> properties of a .NET Framework data provider's <ph id="ph3">`Parameter`</ph> class.</source>
          <target state="translated">Parámetros se asignan a la fila actual a través de la <ph id="ph1">`SourceColumn`</ph> y <ph id="ph2">`SourceVersion`</ph> propiedades de un proveedor de datos de .NET Framework <ph id="ph3">`Parameter`</ph> clase.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source><ph id="ph1">`SourceColumn`</ph> refers to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> column that the <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> references to obtain parameter values for the current row.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph> hace referencia a un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> columna que el <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> referencias para obtener los valores de parámetro de la fila actual.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source><ph id="ph1">`SourceColumn`</ph> refers to the unmapped column name before any table mappings have been applied.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph> hace referencia al nombre de columna no asignada antes de que se aplicaron las asignaciones de tabla.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>If <ph id="ph1">`SourceColumn`</ph> refers to a nonexistent column, the action taken depends on one of the following <ph id="ph2">&lt;xref:System.Data.MissingMappingAction&gt;</ph> values.</source>
          <target state="translated">Si <ph id="ph1">`SourceColumn`</ph> hace referencia a una columna que no existe, la acción realizada depende de uno de los siguientes <ph id="ph2">&lt;xref:System.Data.MissingMappingAction&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>Enumeration value</source>
          <target state="translated">Valor de enumeración</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>Action taken</source>
          <target state="translated">Acción realizada</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>Use the source column names and table names in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> if no mapping is present.</source>
          <target state="translated">Utilice los nombres de columna de origen y los nombres de tabla en el <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> si no hay ninguna asignación.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>A <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> is generated.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> se genera.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</source>
          <target state="translated">Cuando las asignaciones se establecen explícitamente, falta de una asignación para un parámetro de entrada suele ser el resultado de un error.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>A <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> is generated.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> se genera.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">`SourceColumn`</ph> property is also used to map the value for output or input/output parameters back to the <ph id="ph2">`DataSet`</ph>.</source>
          <target state="translated">El <ph id="ph1">`SourceColumn`</ph> propiedad también se utiliza para asignar el valor de salida o parámetros de entrada/salida de nuevo a la <ph id="ph2">`DataSet`</ph>.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>An exception is generated if it refers to a nonexistent column.</source>
          <target state="translated">Si hace referencia a una columna que no existe, se genera una excepción.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>The <ph id="ph1">`SourceVersion`</ph> property of a .NET Framework data provider's <ph id="ph2">`Parameter`</ph> class determines whether to use the Original, Current, or Proposed version of the column value.</source>
          <target state="translated">El <ph id="ph1">`SourceVersion`</ph> propiedad de un proveedor de datos de .NET Framework <ph id="ph2">`Parameter`</ph> clase determina si se utiliza la versión Original, actual o propuesta de valor de la columna.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</source>
          <target state="translated">Esta capacidad se utiliza a menudo para incluir valores originales en la cláusula WHERE de una instrucción UPDATE para comprobar las infracciones de simultaneidad optimista.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</source>
          <target state="translated">Si se produce un error al actualizar una fila, se produce una excepción y se interrumpe la ejecución de la actualización.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>To continue the update operation without generating exceptions when an error is encountered, set the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> property to <ph id="ph2">`true`</ph> before calling <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>.</source>
          <target state="translated">Para reanudar la operación de actualización sin generar excepciones cuando se produce un error, establezca el <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> propiedad <ph id="ph2">`true`</ph> antes de llamar a <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>You may also respond to errors on a per-row basis within the <ph id="ph1">`RowUpdated`</ph> event of a DataAdapter.</source>
          <target state="translated">También puede responder a los errores según una fila por fila dentro de la <ph id="ph1">`RowUpdated`</ph> eventos de un objeto DataAdapter.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>To continue the update operation without generating an exception within the <ph id="ph1">`RowUpdated`</ph> event, set the <ph id="ph2">&lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.Common.RowUpdatedEventArgs&gt;</ph> to <ph id="ph4">&lt;xref:System.Data.UpdateStatus.Continue&gt;</ph>.</source>
          <target state="translated">Para continuar la operación de actualización sin que se genere una excepción dentro de la <ph id="ph1">`RowUpdated`</ph> conjunto de eventos, el <ph id="ph2">&lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt;</ph> propiedad de la <ph id="ph3">&lt;xref:System.Data.Common.RowUpdatedEventArgs&gt;</ph> a <ph id="ph4">&lt;xref:System.Data.UpdateStatus.Continue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>The following example uses the derived class, <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, to update the data source.</source>
          <target state="translated">En el ejemplo siguiente se utiliza la clase derivada, <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>para actualizar el origen de datos.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>The source table is invalid.</source>
          <target state="translated">La tabla de origen no es válida.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
          <source>An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</source>
          <target state="translated">El hecho de intentar ejecutar una instrucción INSERT, UPDATE o DELETE no ha afectado a ningún registro.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> used to update the data source.</source>
          <target state="translated">Clase <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> que se utiliza para actualizar el origen de datos.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Actualiza los valores de la base de datos ejecutando las instrucciones INSERT, UPDATE o DELETE respectivas para cada fila insertada, actualizada o eliminada en los objetos <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> especificados.</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>The number of rows successfully updated from the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Número de filas del <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> actualizadas correctamente.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>When an application calls the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> examines the <ph id="ph3">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Cuando una aplicación llama el <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> método, el <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> examina la <ph id="ph3">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> propiedad y ejecuta las instrucciones INSERT, UPDATE o DELETE necesarias forma iterativa para cada fila, según el orden de los índices configurados en el <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>For example, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Por ejemplo, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> podría ejecutar una instrucción DELETE, seguida de una instrucción INSERT y, a continuación, otra instrucción DELETE, debido al orden de las filas de la <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>It should be noted that these statements are not performed as a batch process; each row is updated individually.</source>
          <target state="translated">Se debe tener en cuenta que estas instrucciones no se realizan como un proceso por lotes; cada fila se actualiza individualmente.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>An application can call the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</source>
          <target state="translated">Una aplicación puede llamar a la <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> método en situaciones donde se debe controlar la secuencia de tipos de instrucciones (por ejemplo, las instrucciones INSERT antes de las actualizaciones).</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>For more information, see <bpt id="p1">[</bpt>Updating Data Sources with DataAdapters<ept id="p1">](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>actualizar orígenes de datos con DataAdapters<ept id="p1">](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)</ept>.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>If INSERT, UPDATE, or DELETE statements have not been specified, the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method generates an exception.</source>
          <target state="translated">Si no ha especificado las instrucciones INSERT, UPDATE o DELETE, la <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> método genera una excepción.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>However, you can create a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> object to automatically generate SQL statements for single-table updates if you set the <ph id="ph3">`SelectCommand`</ph> property of a .NET Framework data provider.</source>
          <target state="translated">Sin embargo, puede crear un <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> objeto que se va a generar automáticamente las instrucciones SQL para las actualizaciones de tabla única si se establece la <ph id="ph3">`SelectCommand`</ph> propiedad de un proveedor de datos de .NET Framework.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>Then, any additional SQL statements that you do not set are generated by the <bpt id="p1">**</bpt>CommandBuilder<ept id="p1">**</ept>.</source>
          <target state="translated">A continuación, se generan las instrucciones SQL que no se establecen mediante el <bpt id="p1">**</bpt>CommandBuilder<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>This generation logic requires key column information to be present in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Esta lógica de generación requiere información de columna de clave debe estar presente en el <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>For more information see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>generar comandos con objetos CommandBuilder<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method retrieves rows from the table listed in the first mapping before performing an update.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> método recupera filas de la tabla que aparece en la primera asignación antes de realizar una actualización.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> then refreshes the row using the value of the <ph id="ph2">&lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;</ph> property.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> , a continuación, actualiza la fila con el valor de la <ph id="ph2">&lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>Any additional rows returned are ignored.</source>
          <target state="translated">Se omite cualquier fila adicional devuelta.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>After any data is loaded back into the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised, allowing the user to inspect the reconciled <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> row and any output parameters returned by the command.</source>
          <target state="translated">Después de que los datos se vuelve a cargar en el <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> se genera el evento, que permite al usuario inspeccionar el reconciliarse <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> fila y cualquier parámetro de salida devuelto por el comando.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>After a row updates successfully, the changes to that row are accepted.</source>
          <target state="translated">Después de una fila se actualiza correctamente, se aceptan los cambios en esa fila.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>When using <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, the order of execution is as follows:</source>
          <target state="translated">Cuando se usa <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, el orden de ejecución es el siguiente:</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>The values in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> are moved to the parameter values.</source>
          <target state="translated">Los valores de la <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> se mueven a los valores de parámetro.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> event is raised.</source>
          <target state="translated">Se genera el evento <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>The command executes.</source>
          <target state="translated">Ejecuta el comando.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, then the first returned result is placed in the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">Si el comando se establece en <ph id="ph1">`FirstReturnedRecord`</ph>, a continuación, el primer resultado devuelto se coloca en el <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>If there are output parameters, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">Si no hay parámetros de salida, se colocan en la <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised.</source>
          <target state="translated">Se genera el evento <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source><ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> is called.</source>
          <target state="translated">Se llama a <ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>Each command associated with the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> usually has a parameters collection associated with it.</source>
          <target state="translated">Cada comando asociado a la <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> normalmente tiene una colección de parámetros asociada a él.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>Parameters are mapped to the current row through the <ph id="ph1">`SourceColumn`</ph> and <ph id="ph2">`SourceVersion`</ph> properties of a .NET Framework data provider's <ph id="ph3">`Parameter`</ph> class.</source>
          <target state="translated">Parámetros se asignan a la fila actual a través de la <ph id="ph1">`SourceColumn`</ph> y <ph id="ph2">`SourceVersion`</ph> propiedades de un proveedor de datos de .NET Framework <ph id="ph3">`Parameter`</ph> clase.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source><ph id="ph1">`SourceColumn`</ph> refers to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> column that the <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> references to obtain parameter values for the current row.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph> hace referencia a un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> columna que el <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> referencias para obtener los valores de parámetro de la fila actual.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source><ph id="ph1">`SourceColumn`</ph> refers to the unmapped column name before any table mappings have been applied.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph> hace referencia al nombre de columna no asignada antes de que se aplicaron las asignaciones de tabla.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>If <ph id="ph1">`SourceColumn`</ph> refers to a nonexistent column, the action taken depends on one of the following <ph id="ph2">&lt;xref:System.Data.MissingMappingAction&gt;</ph> values.</source>
          <target state="translated">Si <ph id="ph1">`SourceColumn`</ph> hace referencia a una columna que no existe, la acción realizada depende de uno de los siguientes <ph id="ph2">&lt;xref:System.Data.MissingMappingAction&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>Enumeration value</source>
          <target state="translated">Valor de enumeración</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>Action taken</source>
          <target state="translated">Acción realizada</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>Use the source column names and table names in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> if no mapping is present.</source>
          <target state="translated">Utilice los nombres de columna de origen y los nombres de tabla en el <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> si no hay ninguna asignación.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>A <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> is generated.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> se genera.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</source>
          <target state="translated">Cuando las asignaciones se establecen explícitamente, falta de una asignación para un parámetro de entrada suele ser el resultado de un error.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>A <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> is generated.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> se genera.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>The <ph id="ph1">`SourceColumn`</ph> property is also used to map the value for output or input/output parameters back to the <ph id="ph2">`DataSet`</ph>.</source>
          <target state="translated">El <ph id="ph1">`SourceColumn`</ph> propiedad también se utiliza para asignar el valor de salida o parámetros de entrada/salida de nuevo a la <ph id="ph2">`DataSet`</ph>.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>An exception is generated if it refers to a nonexistent column.</source>
          <target state="translated">Si hace referencia a una columna que no existe, se genera una excepción.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>The <ph id="ph1">`SourceVersion`</ph> property of a .NET Framework data provider's <ph id="ph2">`Parameter`</ph> class determines whether to use the Original, Current, or Proposed version of the column value.</source>
          <target state="translated">El <ph id="ph1">`SourceVersion`</ph> propiedad de un proveedor de datos de .NET Framework <ph id="ph2">`Parameter`</ph> clase determina si se utiliza la versión Original, actual o propuesta de valor de la columna.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</source>
          <target state="translated">Esta capacidad se utiliza a menudo para incluir valores originales en la cláusula WHERE de una instrucción UPDATE para comprobar las infracciones de simultaneidad optimista.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</source>
          <target state="translated">Si se produce un error al actualizar una fila, se produce una excepción y se interrumpe la ejecución de la actualización.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>To continue the update operation without generating exceptions when an error is encountered, set the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> property to <ph id="ph2">`true`</ph> before calling <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>.</source>
          <target state="translated">Para reanudar la operación de actualización sin generar excepciones cuando se produce un error, establezca el <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> propiedad <ph id="ph2">`true`</ph> antes de llamar a <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>You may also respond to errors on a per-row basis within the <ph id="ph1">`RowUpdated`</ph> event of a DataAdapter.</source>
          <target state="translated">También puede responder a los errores según una fila por fila dentro de la <ph id="ph1">`RowUpdated`</ph> eventos de un objeto DataAdapter.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>To continue the update operation without generating an exception within the <ph id="ph1">`RowUpdated`</ph> event, set the <ph id="ph2">&lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.Common.RowUpdatedEventArgs&gt;</ph> to <ph id="ph4">&lt;xref:System.Data.UpdateStatus.Continue&gt;</ph>.</source>
          <target state="translated">Para continuar la operación de actualización sin que se genere una excepción dentro de la <ph id="ph1">`RowUpdated`</ph> conjunto de eventos, el <ph id="ph2">&lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt;</ph> propiedad de la <ph id="ph3">&lt;xref:System.Data.Common.RowUpdatedEventArgs&gt;</ph> a <ph id="ph4">&lt;xref:System.Data.UpdateStatus.Continue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>The following example uses the derived class, <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, to update the data source.</source>
          <target state="translated">En el ejemplo siguiente se utiliza la clase derivada, <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>para actualizar el origen de datos.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> no es válido.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>The source table is invalid.</source>
          <target state="translated">La tabla de origen no es válida.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>No <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> exists to update.</source>
          <target state="translated">No existe ningún objeto <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> que actualizar.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>No <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> exists to update.</source>
          <target state="translated">No existe ningún objeto <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> que actualizar.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>No <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> exists to use as a source.</source>
          <target state="translated">No existe ninguna clase <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> que se vaya a utilizar como origen.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
          <source>An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</source>
          <target state="translated">El hecho de intentar ejecutar una instrucción INSERT, UPDATE o DELETE no ha afectado a ningún registro.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects used to update the data source.</source>
          <target state="translated">Matriz de objetos <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> utilizada para actualizar el origen de datos.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Data.IDataAdapter.TableMappings" /&gt;</ph> collection to use.</source>
          <target state="translated">Colección <ph id="ph1">&lt;see cref="P:System.Data.IDataAdapter.TableMappings" /&gt;</ph> que se va a utilizar.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array of <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> objects.</source>
          <target state="translated">Actualiza los valores de la base de datos ejecutando las instrucciones INSERT, UPDATE o DELETE respectivas para cada fila insertada, actualizada o eliminada en la matriz de objetos <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> especificada.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>The number of rows successfully updated from the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Número de filas del <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> actualizadas correctamente.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>When an application calls the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> examines the <ph id="ph3">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Cuando una aplicación llama el <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> método, el <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> examina la <ph id="ph3">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> propiedad y ejecuta las instrucciones INSERT, UPDATE o DELETE necesarias forma iterativa para cada fila, según el orden de los índices configurados en el <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>For example, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Por ejemplo, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> podría ejecutar una instrucción DELETE, seguida de una instrucción INSERT y, a continuación, otra instrucción DELETE, debido al orden de las filas de la <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>It should be noted that these statements are not performed as a batch process; each row is updated individually.</source>
          <target state="translated">Se debe tener en cuenta que estas instrucciones no se realizan como un proceso por lotes; cada fila se actualiza individualmente.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>An application can call the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</source>
          <target state="translated">Una aplicación puede llamar a la <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> método en situaciones donde se debe controlar la secuencia de tipos de instrucciones (por ejemplo, las instrucciones INSERT antes de las actualizaciones).</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>For more information, see <bpt id="p1">[</bpt>Updating Data Sources with DataAdapters<ept id="p1">](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>actualizar orígenes de datos con DataAdapters<ept id="p1">](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)</ept>.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>If INSERT, UPDATE, or DELETE statements have not been specified, the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method generates an exception.</source>
          <target state="translated">Si no ha especificado las instrucciones INSERT, UPDATE o DELETE, la <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> método genera una excepción.</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>However, you can create a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> object to automatically generate SQL statements for single-table updates if you set the <ph id="ph3">`SelectCommand`</ph> property of a .NET Framework data provider.</source>
          <target state="translated">Sin embargo, puede crear un <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> objeto que se va a generar automáticamente las instrucciones SQL para las actualizaciones de tabla única si se establece la <ph id="ph3">`SelectCommand`</ph> propiedad de un proveedor de datos de .NET Framework.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>Then, any additional SQL statements that you do not set are generated by the <bpt id="p1">**</bpt>CommandBuilder<ept id="p1">**</ept>.</source>
          <target state="translated">A continuación, se generan las instrucciones SQL que no se establecen mediante el <bpt id="p1">**</bpt>CommandBuilder<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>This generation logic requires key column information to be present in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Esta lógica de generación requiere información de columna de clave debe estar presente en el <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>For more information see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>generar comandos con objetos CommandBuilder<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method retrieves rows from the table listed in the first mapping before performing an update.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> método recupera filas de la tabla que aparece en la primera asignación antes de realizar una actualización.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> then refreshes the row using the value of the <ph id="ph2">&lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;</ph> property.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> , a continuación, actualiza la fila con el valor de la <ph id="ph2">&lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>Any additional rows returned are ignored.</source>
          <target state="translated">Se omite cualquier fila adicional devuelta.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>After any data is loaded back into the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised, allowing the user to inspect the reconciled <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> row and any output parameters returned by the command.</source>
          <target state="translated">Después de que los datos se vuelve a cargar en el <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> se genera el evento, que permite al usuario inspeccionar el reconciliarse <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> fila y cualquier parámetro de salida devuelto por el comando.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>After a row updates successfully, the changes to that row are accepted.</source>
          <target state="translated">Después de una fila se actualiza correctamente, se aceptan los cambios en esa fila.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>When using <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, the order of execution is as follows:</source>
          <target state="translated">Cuando se usa <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, el orden de ejecución es el siguiente:</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>The values in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> are moved to the parameter values.</source>
          <target state="translated">Los valores de la <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> se mueven a los valores de parámetro.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> event is raised.</source>
          <target state="translated">Se genera el evento <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>The command executes.</source>
          <target state="translated">Ejecuta el comando.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, then the first returned result is placed in the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">Si el comando se establece en <ph id="ph1">`FirstReturnedRecord`</ph>, a continuación, el primer resultado devuelto se coloca en el <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>If there are output parameters, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">Si no hay parámetros de salida, se colocan en la <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised.</source>
          <target state="translated">Se genera el evento <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source><ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> is called.</source>
          <target state="translated">Se llama a <ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>Each command associated with the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> usually has a parameters collection associated with it.</source>
          <target state="translated">Cada comando asociado a la <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> normalmente tiene una colección de parámetros asociada a él.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>Parameters are mapped to the current row through the <ph id="ph1">`SourceColumn`</ph> and <ph id="ph2">`SourceVersion`</ph> properties of a .NET Framework data provider's <ph id="ph3">`Parameter`</ph> class.</source>
          <target state="translated">Parámetros se asignan a la fila actual a través de la <ph id="ph1">`SourceColumn`</ph> y <ph id="ph2">`SourceVersion`</ph> propiedades de un proveedor de datos de .NET Framework <ph id="ph3">`Parameter`</ph> clase.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source><ph id="ph1">`SourceColumn`</ph> refers to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> column that the <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> references to obtain parameter values for the current row.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph> hace referencia a un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> columna que el <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> referencias para obtener los valores de parámetro de la fila actual.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source><ph id="ph1">`SourceColumn`</ph> refers to the unmapped column name before any table mappings have been applied.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph> hace referencia al nombre de columna no asignada antes de que se aplicaron las asignaciones de tabla.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>If <ph id="ph1">`SourceColumn`</ph> refers to a nonexistent column, the action taken depends on one of the following <ph id="ph2">&lt;xref:System.Data.MissingMappingAction&gt;</ph> values.</source>
          <target state="translated">Si <ph id="ph1">`SourceColumn`</ph> hace referencia a una columna que no existe, la acción realizada depende de uno de los siguientes <ph id="ph2">&lt;xref:System.Data.MissingMappingAction&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>Enumeration value</source>
          <target state="translated">Valor de enumeración</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>Action taken</source>
          <target state="translated">Acción realizada</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>Use the source column names and table names in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> if no mapping is present.</source>
          <target state="translated">Utilice los nombres de columna de origen y los nombres de tabla en el <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> si no hay ninguna asignación.</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>A <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> is generated.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> se genera.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</source>
          <target state="translated">Cuando las asignaciones se establecen explícitamente, falta de una asignación para un parámetro de entrada suele ser el resultado de un error.</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>A <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> is generated.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> se genera.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>The <ph id="ph1">`SourceColumn`</ph> property is also used to map the value for output or input/output parameters back to the <ph id="ph2">`DataSet`</ph>.</source>
          <target state="translated">El <ph id="ph1">`SourceColumn`</ph> propiedad también se utiliza para asignar el valor de salida o parámetros de entrada/salida de nuevo a la <ph id="ph2">`DataSet`</ph>.</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>An exception is generated if it refers to a nonexistent column.</source>
          <target state="translated">Si hace referencia a una columna que no existe, se genera una excepción.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>The <ph id="ph1">`SourceVersion`</ph> property of a .NET Framework data provider's <ph id="ph2">`Parameter`</ph> class determines whether to use the Original, Current, or Proposed version of the column value.</source>
          <target state="translated">El <ph id="ph1">`SourceVersion`</ph> propiedad de un proveedor de datos de .NET Framework <ph id="ph2">`Parameter`</ph> clase determina si se utiliza la versión Original, actual o propuesta de valor de la columna.</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</source>
          <target state="translated">Esta capacidad se utiliza a menudo para incluir valores originales en la cláusula WHERE de una instrucción UPDATE para comprobar las infracciones de simultaneidad optimista.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</source>
          <target state="translated">Si se produce un error al actualizar una fila, se produce una excepción y se interrumpe la ejecución de la actualización.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>To continue the update operation without generating exceptions when an error is encountered, set the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> property to <ph id="ph2">`true`</ph> before calling <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>.</source>
          <target state="translated">Para reanudar la operación de actualización sin generar excepciones cuando se produce un error, establezca el <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> propiedad <ph id="ph2">`true`</ph> antes de llamar a <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>You may also respond to errors on a per-row basis within the <ph id="ph1">`RowUpdated`</ph> event of a DataAdapter.</source>
          <target state="translated">También puede responder a los errores según una fila por fila dentro de la <ph id="ph1">`RowUpdated`</ph> eventos de un objeto DataAdapter.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>To continue the update operation without generating an exception within the <ph id="ph1">`RowUpdated`</ph> event, set the <ph id="ph2">&lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.Common.RowUpdatedEventArgs&gt;</ph> to <ph id="ph4">&lt;xref:System.Data.UpdateStatus.Continue&gt;</ph>.</source>
          <target state="translated">Para continuar la operación de actualización sin que se genere una excepción dentro de la <ph id="ph1">`RowUpdated`</ph> conjunto de eventos, el <ph id="ph2">&lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt;</ph> propiedad de la <ph id="ph3">&lt;xref:System.Data.Common.RowUpdatedEventArgs&gt;</ph> a <ph id="ph4">&lt;xref:System.Data.UpdateStatus.Continue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> no es válido.</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>The source table is invalid.</source>
          <target state="translated">La tabla de origen no es válida.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>No <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> exists to update.</source>
          <target state="translated">No existe ningún objeto <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> que actualizar.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>No <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> exists to update.</source>
          <target state="translated">No existe ningún objeto <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> que actualizar.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>No <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> exists to use as a source.</source>
          <target state="translated">No existe ninguna clase <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> que se vaya a utilizar como origen.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
          <source>An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</source>
          <target state="translated">El hecho de intentar ejecutar una instrucción INSERT, UPDATE o DELETE no ha afectado a ningún registro.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to use to update the data source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> que se va a utilizar para actualizar el origen de datos.</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>The name of the source table to use for table mapping.</source>
          <target state="translated">Nombre de la tabla de origen que se utilizará para la asignación de tabla.</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> with the specified <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> name.</source>
          <target state="translated">Actualiza los valores de la base de datos al ejecutar las instrucciones INSERT, UPDATE o DELETE respectivas para cada fila insertada, actualizada o eliminada en los objetos <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> con el nombre de <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>The number of rows successfully updated from the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Número de filas del <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> actualizadas correctamente.</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>When an application calls the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> examines the <ph id="ph3">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Cuando una aplicación llama el <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> método, el <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> examina la <ph id="ph3">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> propiedad y ejecuta las instrucciones INSERT, UPDATE o DELETE necesarias forma iterativa para cada fila, según el orden de los índices configurados en el <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>For example, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">Por ejemplo, <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> podría ejecutar una instrucción DELETE, seguida de una instrucción INSERT y, a continuación, otra instrucción DELETE, debido al orden de las filas de la <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>It should be noted that these statements are not performed as a batch process; each row is updated individually.</source>
          <target state="translated">Se debe tener en cuenta que estas instrucciones no se realizan como un proceso por lotes; cada fila se actualiza individualmente.</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>An application can call the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method in situations where you must control the sequence of statement types (for example, INSERT before UPDATE).</source>
          <target state="translated">Una aplicación puede llamar a la <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> método en situaciones donde se debe controlar la secuencia de tipos de instrucciones (por ejemplo, insertar antes de la actualización).</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Updating Data Sources with DataAdapters<ept id="p1">](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>actualizar orígenes de datos con DataAdapters<ept id="p1">](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)</ept>.</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>If INSERT, UPDATE, or DELETE statements have not been specified, the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method generates an exception.</source>
          <target state="translated">Si no ha especificado las instrucciones INSERT, UPDATE o DELETE, la <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> método genera una excepción.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>However, you can create a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> object to automatically generate SQL statements for single-table updates if you set the <ph id="ph3">`SelectCommand`</ph> property of a .NET Framework data provider.</source>
          <target state="translated">Sin embargo, puede crear un <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommandBuilder&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommandBuilder&gt;</ph> objeto que se va a generar automáticamente las instrucciones SQL para las actualizaciones de tabla única si se establece la <ph id="ph3">`SelectCommand`</ph> propiedad de un proveedor de datos de .NET Framework.</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>Then, any additional SQL statements that you do not set are generated by the <bpt id="p1">**</bpt>CommandBuilder<ept id="p1">**</ept>.</source>
          <target state="translated">A continuación, se generan las instrucciones SQL que no se establecen mediante el <bpt id="p1">**</bpt>CommandBuilder<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>This generation logic requires key column information to be present in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Esta lógica de generación requiere información de columna de clave debe estar presente en el <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>For more information see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>generar comandos con objetos CommandBuilder<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method supports scenarios where the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contains multiple <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> objects whose names differ only by case.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> método es compatible con escenarios donde la <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contiene varias <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> objetos cuyos nombres se diferencien solo por el uso de mayúsculas o minúsculas.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>When multiple tables with the same name, but different case, exist in a <ph id="ph1">`DataSet`</ph>, <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> performs a case-sensitive comparison to find the corresponding table, and generates an exception if no exact match exists.</source>
          <target state="translated">Cuando existen varias tablas con el mismo nombre, pero con mayúsculas o minúsculas, en un <ph id="ph1">`DataSet`</ph>, <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> realiza una comparación entre mayúsculas y minúsculas para encontrar la tabla correspondiente y genera una excepción si no hay ninguna coincidencia exacta.</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">El siguiente código C# ilustra este comportamiento.</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>If <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> is called and the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contains only one <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> whose name differs only by case, that <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> is updated.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> se llama y <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> contiene solamente un <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> cuyo nombre difiere sólo por mayúsculas, o que <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> se actualiza.</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>In this scenario, the comparison is case insensitive.</source>
          <target state="translated">En este escenario, la comparación distingue entre mayúsculas y minúsculas.</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>The following C# code illustrates this behavior.</source>
          <target state="translated">El siguiente código C# ilustra este comportamiento.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> method retrieves rows from the table listed in the first mapping before performing an update.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> método recupera filas de la tabla que aparece en la primera asignación antes de realizar una actualización.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> then refreshes the row using the value of the <ph id="ph2">&lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;</ph> property.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> , a continuación, actualiza la fila con el valor de la <ph id="ph2">&lt;xref:System.Data.IDbCommand.UpdatedRowSource%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>Any additional rows returned are ignored.</source>
          <target state="translated">Se omite cualquier fila adicional devuelta.</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>After any data is loaded back into the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised, allowing the user to inspect the reconciled <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> row and any output parameters returned by the command.</source>
          <target state="translated">Después de que los datos se vuelve a cargar en el <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> se genera el evento, que permite al usuario inspeccionar el reconciliarse <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> fila y cualquier parámetro de salida devuelto por el comando.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>After a row updates successfully, the changes to that row are accepted.</source>
          <target state="translated">Después de una fila se actualiza correctamente, se aceptan los cambios en esa fila.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>When using <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, the order of execution is as follows:</source>
          <target state="translated">Cuando se usa <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, el orden de ejecución es el siguiente:</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>The values in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> are moved to the parameter values.</source>
          <target state="translated">Los valores de la <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> se mueven a los valores de parámetro.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> event is raised.</source>
          <target state="translated">Se genera el evento <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>The command executes.</source>
          <target state="translated">Ejecuta el comando.</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, then the first returned result is placed in the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">Si el comando se establece en <ph id="ph1">`FirstReturnedRecord`</ph>, a continuación, el primer resultado devuelto se coloca en el <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>If there are output parameters, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
          <target state="translated">Si no hay parámetros de salida, se colocan en la <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised.</source>
          <target state="translated">Se genera el evento <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source><ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> is called.</source>
          <target state="translated">Se llama a <ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>Each command associated with the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> usually has a parameters collection associated with it.</source>
          <target state="translated">Cada comando asociado a la <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> normalmente tiene una colección de parámetros asociada a él.</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>Parameters are mapped to the current row through the <ph id="ph1">`SourceColumn`</ph> and <ph id="ph2">`SourceVersion`</ph> properties of a .NET Framework data provider's <ph id="ph3">`Parameter`</ph> class.</source>
          <target state="translated">Parámetros se asignan a la fila actual a través de la <ph id="ph1">`SourceColumn`</ph> y <ph id="ph2">`SourceVersion`</ph> propiedades de un proveedor de datos de .NET Framework <ph id="ph3">`Parameter`</ph> clase.</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source><ph id="ph1">`SourceColumn`</ph> refers to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> column that the <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> references to obtain parameter values for the current row.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph> hace referencia a un <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> columna que el <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> referencias para obtener los valores de parámetro de la fila actual.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source><ph id="ph1">`SourceColumn`</ph> refers to the unmapped column name before any table mappings have been applied.</source>
          <target state="translated"><ph id="ph1">`SourceColumn`</ph> hace referencia al nombre de columna no asignada antes de que se aplicaron las asignaciones de tabla.</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>If <ph id="ph1">`SourceColumn`</ph> refers to a nonexistent column, the action taken depends on one of the following <ph id="ph2">&lt;xref:System.Data.MissingMappingAction&gt;</ph> values.</source>
          <target state="translated">Si <ph id="ph1">`SourceColumn`</ph> hace referencia a una columna que no existe, la acción realizada depende de uno de los siguientes <ph id="ph2">&lt;xref:System.Data.MissingMappingAction&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>Enumeration value</source>
          <target state="translated">Valor de enumeración</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>Action taken</source>
          <target state="translated">Acción realizada</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>Use the source column names and table names in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> if no mapping is present.</source>
          <target state="translated">Utilice los nombres de columna de origen y los nombres de tabla en el <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> si no hay ninguna asignación.</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>A <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> is generated.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> se genera.</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</source>
          <target state="translated">Cuando las asignaciones se establecen explícitamente, falta de una asignación para un parámetro de entrada suele ser el resultado de un error.</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>A <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> is generated.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.SystemException&gt;</ph> se genera.</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>The <ph id="ph1">`SourceColumn`</ph> property is also used to map the value for output or input/output parameters back to the <ph id="ph2">`DataSet`</ph>.</source>
          <target state="translated">El <ph id="ph1">`SourceColumn`</ph> propiedad también se utiliza para asignar el valor de salida o parámetros de entrada/salida de nuevo a la <ph id="ph2">`DataSet`</ph>.</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>An exception is generated if it refers to a nonexistent column.</source>
          <target state="translated">Si hace referencia a una columna que no existe, se genera una excepción.</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>The <ph id="ph1">`SourceVersion`</ph> property of a .NET Framework data provider's <ph id="ph2">`Parameter`</ph> class determines whether to use the Original, Current, or Proposed version of the column value.</source>
          <target state="translated">El <ph id="ph1">`SourceVersion`</ph> propiedad de un proveedor de datos de .NET Framework <ph id="ph2">`Parameter`</ph> clase determina si se utiliza la versión Original, actual o propuesta de valor de la columna.</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</source>
          <target state="translated">Esta capacidad se utiliza a menudo para incluir valores originales en la cláusula WHERE de una instrucción UPDATE para comprobar las infracciones de simultaneidad optimista.</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</source>
          <target state="translated">Si se produce un error al actualizar una fila, se produce una excepción y se interrumpe la ejecución de la actualización.</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>To continue the update operation without generating exceptions when an error is encountered, set the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> property to <ph id="ph2">`true`</ph> before calling <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>.</source>
          <target state="translated">Para reanudar la operación de actualización sin generar excepciones cuando se produce un error, establezca el <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> propiedad <ph id="ph2">`true`</ph> antes de llamar a <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>You may also respond to errors on a per-row basis within the <ph id="ph1">`RowUpdated`</ph> event of a DataAdapter.</source>
          <target state="translated">También puede responder a los errores según una fila por fila dentro de la <ph id="ph1">`RowUpdated`</ph> eventos de un objeto DataAdapter.</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>To continue the update operation without generating an exception within the <ph id="ph1">`RowUpdated`</ph> event, set the <ph id="ph2">&lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.Common.RowUpdatedEventArgs&gt;</ph> to <ph id="ph4">&lt;xref:System.Data.UpdateStatus.Continue&gt;</ph>.</source>
          <target state="translated">Para continuar la operación de actualización sin que se genere una excepción dentro de la <ph id="ph1">`RowUpdated`</ph> conjunto de eventos, el <ph id="ph2">&lt;xref:System.Data.Common.RowUpdatedEventArgs.Status%2A&gt;</ph> propiedad de la <ph id="ph3">&lt;xref:System.Data.Common.RowUpdatedEventArgs&gt;</ph> a <ph id="ph4">&lt;xref:System.Data.UpdateStatus.Continue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>The following example uses the derived class, <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>, to update the data source.</source>
          <target state="translated">En el ejemplo siguiente se utiliza la clase derivada, <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph>para actualizar el origen de datos.</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> no es válido.</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>The source table is invalid.</source>
          <target state="translated">La tabla de origen no es válida.</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
          <source>An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</source>
          <target state="translated">El hecho de intentar ejecutar una instrucción INSERT, UPDATE o DELETE no ha afectado a ningún registro.</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source>Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.</source>
          <target state="translated">Obtiene o establece un valor que habilita o deshabilita la compatibilidad con el procesamiento por lotes, y especifica el número de comandos que se pueden ejecutar en un lote.</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source>The number of rows to process per batch.</source>
          <target state="translated">Número de filas que se van a procesar por lote.</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value is</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Valor es</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Effect</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Efecto</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> There is no limit on the batch size.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> No hay ningún límite en el tamaño del lote.</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 1</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Disables batch updating.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Deshabilita la actualización por lotes.</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> <ph id="ph5">&amp;gt;</ph> 1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> <ph id="ph5">&amp;gt;</ph> 1</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Changes are sent using batches of <ph id="ph3">&lt;see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /&gt;</ph> operations at a time.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Los cambios se envían utilizando los lotes de <ph id="ph3">&lt;see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /&gt;</ph> operaciones a la vez.</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source>When setting this to a value other than 1, all the commands associated with the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> must have their <ph id="ph2">&lt;see cref="P:System.Data.IDbCommand.UpdatedRowSource" /&gt;</ph> property set to <bpt id="p1">**</bpt>None<ept id="p1">**</ept> or <bpt id="p2">**</bpt>OutputParameters<ept id="p2">**</ept>.</source>
          <target state="translated">Si se establece en un valor distinto de 1, todos los comandos asociados a la <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> debe tener su <ph id="ph2">&lt;see cref="P:System.Data.IDbCommand.UpdatedRowSource" /&gt;</ph> propiedad establecida en <bpt id="p1">**</bpt>ninguno<ept id="p1">**</ept> o <bpt id="p2">**</bpt>OutputParameters<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source>An exception will be thrown otherwise.</source>
          <target state="translated">De lo contrario, se producirá una excepción.</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A&gt;</ph> property to update a data source with changes from a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A&gt;</ph> propiedad que se va a actualizar un origen de datos con los cambios de un <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source>If the data provider supports batch processing, this can increase application performance by reducing the number of round-trips to the server.</source>
          <target state="translated">Si el proveedor de datos admite el procesamiento por lotes, esto puede aumentar el rendimiento de la aplicación reduciendo el número de ida y vuelta al servidor.</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source>In ADO.NET 2.0, this property is supported for the .NET data providers for SQL Server (SqlClient) and Oracle (OracleClient).</source>
          <target state="translated">En ADO.NET 2.0, esta propiedad se admite para los proveedores de datos .NET para SQL Server (SqlClient) y Oracle (OracleClient).</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source>Executing an extremely large batch could decrease performance.</source>
          <target state="translated">Si se ejecuta un lote demasiado grande, el rendimiento podría verse afectado.</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source>Therefore, you should test for the optimum batch size setting before implementing your application.</source>
          <target state="translated">Por tanto, es conveniente realizar pruebas a fin de determinar el valor óptimo del tamaño del lote antes de implementar la aplicación.</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateBatchSize">
          <source>An <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> will be thrown if the value is set to a number less than zero.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> se producirá si el valor se establece en un número menor que cero.</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbDataAdapter.UpdateCommand">
          <source>Gets or sets a command used to update records in the data source.</source>
          <target state="translated">Obtiene o establece un comando que se utiliza para actualizar registros en el origen de datos.</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateCommand">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> used during <ph id="ph2">&lt;see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> to update records in the data source for modified rows in the data set.</source>
          <target state="translated">Interfaz <ph id="ph1">&lt;see cref="T:System.Data.IDbCommand" /&gt;</ph> utilizada mientras opera <ph id="ph2">&lt;see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /&gt;</ph> para actualizar registros del origen de datos para filas modificadas en el conjunto de datos.</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateCommand">
          <source>During <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, if this property is not set and primary key information is present in the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.IDbDataAdapter.UpdateCommand%2A&gt;</ph> will be automatically generated.</source>
          <target state="translated">Durante la <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, si no se establece esta propiedad y la información de clave principal está presente en el <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, el <ph id="ph3">&lt;xref:System.Data.IDbDataAdapter.UpdateCommand%2A&gt;</ph> se generará automáticamente.</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbDataAdapter.UpdateCommand">
          <source>The following example creates the derived class <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> and sets some of its properties.</source>
          <target state="translated">En el ejemplo siguiente se crea la clase derivada <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataAdapter&gt;</ph> y establece algunas de sus propiedades.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>