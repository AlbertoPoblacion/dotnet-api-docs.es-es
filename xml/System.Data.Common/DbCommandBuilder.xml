<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DbCommandBuilder.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55bfb54f7b76a4739f53cb9e965eb71e14aa89733.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5bfb54f7b76a4739f53cb9e965eb71e14aa89733</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Automatically generates single-table commands used to reconcile changes made to a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> with the associated database.</source>
          <target state="translated">Genera automáticamente comandos de tabla única que se utilizan para conciliar los cambios realizados en un objeto <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> con la base de datos asociada.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbCommandBuilder">
          <source>This is an abstract class that can only be inherited.</source>
          <target state="translated">Es una clase abstracta que sólo se puede heredar.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> class is provided for the convenience of provider writers creating their own command builders.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> clase se proporciona para la comodidad de los programadores de proveedores crear sus propios generadores de comandos.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>By inheriting from this class, developers can implement provider specific behavior in their own code.</source>
          <target state="translated">Al heredar de esta clase, los desarrolladores pueden implementar el comportamiento específico del proveedor en su propio código.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> does not automatically generate the SQL statements required to reconcile changes made to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with the associated data source.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> no genera automáticamente las instrucciones SQL necesarias para reconciliar los cambios realizados en un <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> con el origen de datos asociado.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>However, you can create a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> object to automatically generate SQL statements for single-table updates if you set the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">Sin embargo, puede crear un <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> objeto que se va a generar automáticamente las instrucciones SQL para las actualizaciones de tabla única si se establece la <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph> propiedad de la <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Then, any additional SQL statements that you do not set are generated by the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>.</source>
          <target state="translated">A continuación, se generan las instrucciones SQL que no se establecen mediante el <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> registers itself as a listener for <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;</ph> events whenever you set the <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder.DataAdapter%2A&gt;</ph> property.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> registra a sí mismo como un agente de escucha para <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;</ph> eventos siempre que se establezca la <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder.DataAdapter%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>You can only associate one <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> object with each other at one time.</source>
          <target state="translated">Sólo se puede asociar uno <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> objetos entre sí al mismo tiempo.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>To generate INSERT, UPDATE, or DELETE statements, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> uses the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph> property to retrieve a required set of metadata automatically.</source>
          <target state="translated">Para generar instrucciones INSERT, UPDATE o DELETE, el <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> usa el <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph> propiedad que se va a recuperar automáticamente un conjunto de metadatos requerido.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>If you change the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph> after the metadata has been retrieved (for example, after the first update), you should call the <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> method to update the metadata.</source>
          <target state="translated">Si cambia la <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph> una vez recuperados los metadatos (por ejemplo, después de la primera actualización), debe llamar a la <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> método para actualizar los metadatos.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The <ph id="ph1">`SelectCommand`</ph> must also return at least one primary key or unique column.</source>
          <target state="translated"><ph id="ph1">`SelectCommand`</ph> también debe devolver como mínimo una clave principal o una columna única.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>If none exist, an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception is generated, and the commands are not generated.</source>
          <target state="translated">Si no existe ninguna, una <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> se genera la excepción y no se generan los comandos.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> also uses the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand.Connection%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.Common.DbCommand.CommandTimeout%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Data.Common.DbCommand.Transaction%2A&gt;</ph> properties referenced by the <ph id="ph5">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> también usa el <ph id="ph2">&lt;xref:System.Data.Common.DbCommand.Connection%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.Common.DbCommand.CommandTimeout%2A&gt;</ph>, y <ph id="ph4">&lt;xref:System.Data.Common.DbCommand.Transaction%2A&gt;</ph> propiedades al que hace referencia el <ph id="ph5">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The user should call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if any of these properties are modified, or if the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph> itself is replaced.</source>
          <target state="translated">El usuario debe llamar a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> si se modifica alguna de estas propiedades, o si el <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph> propio se reemplaza.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Otherwise the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A&gt;</ph> properties retain their previous values.</source>
          <target state="translated">En caso contrario, el <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A&gt;</ph>, y <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A&gt;</ph> propiedades conservan sus valores anteriores.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>If you call <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> is disassociated from the <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, and the generated commands are no longer used.</source>
          <target state="translated">Si se llama a <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> se desasocie de la <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, y los comandos generados dejan de usarse.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.#ctor">
          <source>Initializes a new instance of a class that inherits from the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de una clase que hereda de la clase <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DbParameter" /&gt;</ph> to which the additional modifications are applied.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.DbParameter" /&gt;</ph> al que se aplican las modificaciones adicionales.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> from the schema table provided by <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> de la tabla de esquema que proporciona <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
          <source>The type of command being generated; INSERT, UPDATE or DELETE.</source>
          <target state="translated">Tipo de comando que se genera: INSERT, UPDATE o DELETE.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the parameter is part of the update or delete WHERE clause, <ph id="ph2">&lt;see langword="false" /&gt;</ph> if it is part of the insert or update values.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el parámetro forma parte de la cláusula WHERE de actualización o eliminación, <ph id="ph2">&lt;see langword="false" /&gt;</ph> si forma parte de los valores de inserción o actualización.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
          <source>Allows the provider implementation of the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> class to handle additional parameter properties.</source>
          <target state="translated">Permite que la implementación del proveedor de la clase <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> controle propiedades de parámetro adicionales.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
          <source>This method allows an implementation of the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> class to handle provider-specific parameter properties.</source>
          <target state="translated">Este método permite que una implementación de la <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> clase para administrar propiedades del parámetro específico del proveedor.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.CatalogLocation">
          <source>Sets or gets the <ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph> for an instance of the <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated">Establece u obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph> para una instancia de la clase <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.CatalogLocation">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph> object.</source>
          <target state="translated">Un objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.CatalogSeparator">
          <source>Sets or gets a string used as the catalog separator for an instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated">Establece u obtiene una cadena que se utiliza como separador de catálogo para una instancia de la clase <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.CatalogSeparator">
          <source>A string indicating the catalog separator for use with an instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated">Cadena que indica el separador de catálogo que se utiliza con una instancia de la clase <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.ConflictOption">
          <source>Specifies which <ph id="ph1">&lt;see cref="T:System.Data.ConflictOption" /&gt;</ph> is to be used by the <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</source>
          <target state="translated">Especifica qué <ph id="ph1">&lt;see cref="T:System.Data.ConflictOption" /&gt;</ph> va a utilizar <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.ConflictOption">
          <source>Returns one of the <ph id="ph1">&lt;see cref="T:System.Data.ConflictOption" /&gt;</ph> values describing the behavior of this <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</source>
          <target state="translated">Devuelve uno de los valores de <ph id="ph1">&lt;see cref="T:System.Data.ConflictOption" /&gt;</ph> que describe el comportamiento de <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.DataAdapter">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> object for which Transact-SQL statements are automatically generated.</source>
          <target state="translated">Obtiene o establece un objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> para el que se generan automáticamente instrucciones de Transact-SQL.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.DataAdapter">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> object.</source>
          <target state="translated">Un objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.DataAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> registers itself as a listener for <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;</ph> events that are generated by the <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> specified in this property.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> registra a sí mismo como un agente de escucha para <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;</ph> eventos generados por el <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> especificado en esta propiedad.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.DataAdapter">
          <source>When you create a new instance of <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>, any existing <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> associated with this <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> is released.</source>
          <target state="translated">Cuando se crea una nueva instancia de <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>, cualquier existente <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> asociada a esta <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> se libera.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para liberar tanto recursos administrados como no administrados; es <ph id="ph2">&lt;see langword="false" /&gt;</ph> para liberar únicamente recursos no administrados.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Libera los recursos no administrados que usa <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> y, de forma opcional, libera los recursos administrados.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;</ph> method and the <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">Se llama a este método público <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;</ph> método y <ph id="ph2">`Finalize`</ph> método.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;</ph> invokes the protected <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;</ph> method with the disposing parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;</ph> se invoca el protegido <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;</ph> método con el parámetro va a eliminar establecido en <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source><ph id="ph1">`Finalize`</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`Finalize`</ph> invoca <ph id="ph2">`Dispose`</ph> con <ph id="ph3">`disposing`</ph> establecido en <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> references.</source>
          <target state="translated">Cuando el parámetro <ph id="ph1">`disposing`</ph> es <ph id="ph2">`true`</ph>, este método libera todos los recursos retenidos por los objetos administrados a los que el control <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> hace referencia.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;</ph> method of each referenced object.</source>
          <target state="translated">Este método invoca al método <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;</ph> de cada uno de los objetos a los que se hace referencia.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" /&gt;</ph> puede recibir varias llamadas de otros objetos.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" /&gt;</ph>.</source>
          <target state="translated">Al invalidar <ph id="ph1">&lt;see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" /&gt;</ph>, tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a <ph id="ph2">&lt;see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo implementar <ph id="ph1">&lt;see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" /&gt;</ph>, consulte <bpt id="p1">[</bpt>implementa un método Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Para obtener más información acerca de <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> y <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, consulte <bpt id="p1">[</bpt>limpiar recursos no administrados<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> y <bpt id="p2">[</bpt>reemplazar el método Finalize<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform deletions at the data source.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> generado automáticamente que es necesario para realizar eliminaciones en el origen de datos.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Una aplicación puede utilizar el <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> método de información o solucionar problemas porque devuelve la <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> objeto va a ejecutar.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">También puede usar <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> como base de un comando modificado.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the associated command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">Por ejemplo, puede llamar a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> y modifique el texto del comando asociado y, a continuación, establezca la explícitamente en el <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> si se cambia la instrucción en modo alguno.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">En caso contrario, el <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> seguirá utilizando la información de la instrucción anterior, que puede no ser correcta.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">Las instrucciones SQL son primera generan cuando la aplicación llama <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">El comportamiento predeterminado, al generar nombres de parámetro, consiste en usar <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, y así sucesivamente para los distintos parámetros.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>If the overloaded version of <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> allows you to specify this behavior by supplying a Boolean value, you can cause the <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> to generate parameters based on the column names instead by passing <ph id="ph3">`True`</ph>.</source>
          <target state="translated">Si la versión sobrecargada de <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> le permite especificar este comportamiento proporcionando un valor booleano, puede provocar la <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> para generar los parámetros basados en los nombres de columna en su lugar, pasando <ph id="ph3">`True`</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform deletions at the data source.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> generado automáticamente que es necesario para realizar eliminaciones en el origen de datos.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform deletions.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> generado automáticamente que es necesario para realizar eliminaciones.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Una aplicación puede utilizar el <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> método de información o solucionar problemas porque devuelve la <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> objeto va a ejecutar.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">También puede usar <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> como base de un comando modificado.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">Por ejemplo, puede llamar a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> y modifique el texto del comando y, a continuación, establezca la explícitamente en el <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> si se cambia la instrucción en modo alguno.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">En caso contrario, el <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> seguirá utilizando la información de la instrucción anterior, que puede no ser correcta.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">Las instrucciones SQL son primera generan cuando la aplicación llama <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, generate parameter names matching column names, if possible.</source>
          <target state="translated">Si es <ph id="ph1">&lt;see langword="true" /&gt;</ph>, hay que generar nombres de parámetro que coincidan con los nombres de columna, si es posible.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, generate <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, and so on.</source>
          <target state="translated">Si es <ph id="ph1">&lt;see langword="false" /&gt;</ph>, genera <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, etc.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform deletions at the data source, optionally using columns for parameter names.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> generado automáticamente que es necesario para realizar eliminaciones en el origen de datos, utilizando opcionalmente columnas para los nombres de parámetro.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform deletions.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> generado automáticamente que es necesario para realizar eliminaciones.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Una aplicación puede utilizar el <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> método de información o solucionar problemas porque devuelve la <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> objeto va a ejecutar.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">También puede usar <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> como base de un comando modificado.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">Por ejemplo, puede llamar a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> y modifique el texto del comando y, a continuación, establezca la explícitamente en el <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> si se cambia la instrucción en modo alguno.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">En caso contrario, el <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> seguirá utilizando la información de la instrucción anterior, que puede no ser correcta.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">Las instrucciones SQL son primera generan cuando la aplicación llama <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">El comportamiento predeterminado, al generar nombres de parámetro, consiste en usar <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, y así sucesivamente para los distintos parámetros.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter allows you to force the <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">Pasar <ph id="ph1">`true`</ph> para el <ph id="ph2">`useColumnsForParameterNames`</ph> parámetro permite forzar la <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> para generar los parámetros basados en los nombres de columna en su lugar.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>This succeeds only if the following conditions are met:</source>
          <target state="translated">Esto se realiza correctamente solo si se cumplen las condiciones siguientes:</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> se ha especificado y su longitud es igual o mayor que el nombre del parámetro generado.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> regular expression.</source>
          <target state="translated">El nombre de parámetro generado cumple los criterios especificados en la <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> expresión regular.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> is specified.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> se especifica.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform insertions at the data source.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> generado automáticamente que es necesario para realizar inserciones en el origen de datos.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the text of the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Una aplicación puede utilizar el <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> método informativos o para solucionar problemas con fines porque devuelve el texto de la <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> objeto va a ejecutar.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">También puede usar <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> como base de un comando modificado.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">Por ejemplo, puede llamar a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> y modificar el texto de comando y, a continuación, establezca la explícitamente en el <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> si se cambia la instrucción en modo alguno.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">En caso contrario, el <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> seguirá utilizando la información de la instrucción anterior, que puede no ser correcta.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">Las instrucciones SQL son primera generan cuando la aplicación llama <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">El comportamiento predeterminado, al generar nombres de parámetro, consiste en usar <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, y así sucesivamente para los distintos parámetros.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>If the overloaded version of <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> allows you to specify this behavior, you can cause the <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">Si la versión sobrecargada de <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> le permite especificar este comportamiento, puede hacer que el <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> para generar los parámetros basados en los nombres de columna en su lugar.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform insertions at the data source.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> generado automáticamente que es necesario para realizar inserciones en el origen de datos.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform insertions.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> generado automáticamente que es necesario para realizar inserciones.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the text of the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Una aplicación puede utilizar el <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> método informativos o para solucionar problemas con fines porque devuelve el texto de la <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> objeto va a ejecutar.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">También puede usar <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> como base de un comando modificado.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify the command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">Por ejemplo, puede llamar a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> y modifique el texto del comando y, a continuación, establezca la explícitamente en el <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> si se cambia la instrucción en modo alguno.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">En caso contrario, el <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> seguirá utilizando la información de la instrucción anterior, que puede no ser correcta.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">Las instrucciones SQL son primera generan cuando la aplicación llama <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, generate parameter names matching column names, if possible.</source>
          <target state="translated">Si es <ph id="ph1">&lt;see langword="true" /&gt;</ph>, hay que generar nombres de parámetro que coincidan con los nombres de columna, si es posible.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, generate <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, and so on.</source>
          <target state="translated">Si es <ph id="ph1">&lt;see langword="false" /&gt;</ph>, genera <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, etc.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform insertions at the data source, optionally using columns for parameter names.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> generado automáticamente que es necesario para realizar inserciones en el origen de datos, utilizando opcionalmente columnas para los nombres de parámetro.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform insertions.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> generado automáticamente que es necesario para realizar inserciones.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the text of the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Una aplicación puede utilizar el <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> método informativos o para solucionar problemas con fines porque devuelve el texto de la <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> objeto va a ejecutar.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">También puede usar <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> como base de un comando modificado.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify the command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">Por ejemplo, puede llamar a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> y modifique el texto del comando y, a continuación, establezca la explícitamente en el <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> si se cambia la instrucción en modo alguno.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">En caso contrario, el <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> seguirá utilizando la información de la instrucción anterior, que puede no ser correcta.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">Las instrucciones SQL son primera generan cuando la aplicación llama <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">El comportamiento predeterminado, al generar nombres de parámetro, consiste en usar <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, y así sucesivamente para los distintos parámetros.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter allows you to force the <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">Pasar <ph id="ph1">`true`</ph> para el <ph id="ph2">`useColumnsForParameterNames`</ph> parámetro permite forzar la <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> para generar los parámetros basados en los nombres de columna en su lugar.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Generation of the parameters based on column names succeeds only if the following conditions are met:</source>
          <target state="translated">Generación de los parámetros basados en nombres de columna se realiza correctamente solo si se cumplen las condiciones siguientes:</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> se ha especificado y su longitud es igual o mayor que el nombre del parámetro generado.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> regular expression.</source>
          <target state="translated">El nombre de parámetro generado cumple los criterios especificados en la <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> expresión regular.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> is specified.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> se especifica.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Returns the name of the specified parameter.</source>
          <target state="translated">Devuelve el nombre del parámetro especificado.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)">
          <source>The number to be included as part of the parameter's name..</source>
          <target state="translated">Número que se va a incluir como parte del nombre del parámetro.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)">
          <source>Returns the name of the specified parameter in the format of <ph id="ph1">@p</ph><bpt id="p1">*</bpt><ph id="ph2">#</ph><ept id="p1">*</ept>.</source>
          <target state="translated">Devuelve el nombre del parámetro especificado con el formato <ph id="ph1">@p</ph><bpt id="p1">*</bpt><ph id="ph2">#</ph><ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)">
          <source>Use when building a custom command builder.</source>
          <target state="translated">Utilícelo al crear un generador de comandos personalizado.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)">
          <source>The name of the parameter with the specified number appended as part of the parameter name.</source>
          <target state="translated">Nombre del parámetro con el número especificado anexado como parte del nombre de parámetro.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.String)">
          <source>The partial name of the parameter.</source>
          <target state="translated">Nombre parcial del parámetro.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.String)">
          <source>Returns the full parameter name, given the partial parameter name.</source>
          <target state="translated">Devuelve el nombre completo del parámetro, a partir de su nombre parcial.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.String)">
          <source>The full parameter name corresponding to the partial parameter name requested.</source>
          <target state="translated">Nombre completo del parámetro que corresponde al nombre parcial solicitado.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)">
          <source>The number to be included as part of the parameter's name.</source>
          <target state="translated">Número que se va a incluir como parte del nombre del parámetro.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)">
          <source>Returns the placeholder for the parameter in the associated SQL statement.</source>
          <target state="translated">Devuelve el marcador de posición para el parámetro en la instrucción SQL asociada.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)">
          <source>The name of the parameter with the specified number appended.</source>
          <target state="translated">Nombre del parámetro con el número especificado anexado.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)">
          <source>This method is intended for use by provider writers building a custom command builder.</source>
          <target state="translated">Este método está pensado para su uso por los escritores de proveedores compilar un generador de comandos personalizado.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> for which to retrieve the corresponding schema table.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> para el que se va a recuperar la tabla de esquema correspondiente.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)">
          <source>Returns the schema table for the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</source>
          <target state="translated">Devuelve la tabla de esquema para <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that represents the schema for the specific <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> que representa el esquema para el específico <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)">
          <source>This method is intended for use by provider writers building a custom command builder.</source>
          <target state="translated">Este método está pensado para su uso por los escritores de proveedores compilar un generador de comandos personalizado.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform updates at the data source.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> generado automáticamente que es necesario para realizar actualizaciones en el origen de datos.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Una aplicación puede utilizar el <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> método de información o solucionar problemas porque devuelve la <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> objeto va a ejecutar.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">También puede usar <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> como base de un comando modificado.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify the command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">Por ejemplo, puede llamar a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> y modifique el texto del comando y, a continuación, establezca la explícitamente en el <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> si se cambia la instrucción en modo alguno.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">En caso contrario, el <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> seguirá utilizando la información de la instrucción anterior, que puede no ser correcta.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">Las instrucciones SQL son primera generan cuando la aplicación llama <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">El comportamiento predeterminado, al generar nombres de parámetro, consiste en usar <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, y así sucesivamente para los distintos parámetros.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>If the overloaded version of <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> allows you to specify this behavior, you can cause the <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">Si la versión sobrecargada de <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> le permite especificar este comportamiento, puede hacer que el <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> para generar los parámetros basados en los nombres de columna en su lugar.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform updates at the data source.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> generado automáticamente que es necesario para realizar actualizaciones en el origen de datos.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform updates.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> generado automáticamente que es necesario para realizar actualizaciones.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Una aplicación puede utilizar el <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> método de información o solucionar problemas porque devuelve la <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> objeto va a ejecutar.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">También puede usar <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> como base de un comando modificado.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify the command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">Por ejemplo, puede llamar a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> y modifique el texto del comando y, a continuación, establezca la explícitamente en el <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> si se cambia la instrucción en modo alguno.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">En caso contrario, el <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> seguirá utilizando la información de la instrucción anterior, que puede no ser correcta.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">Las instrucciones SQL son primera generan cuando la aplicación llama <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, generate parameter names matching column names, if possible.</source>
          <target state="translated">Si es <ph id="ph1">&lt;see langword="true" /&gt;</ph>, hay que generar nombres de parámetro que coincidan con los nombres de columna, si es posible.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, generate <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, and so on.</source>
          <target state="translated">Si es <ph id="ph1">&lt;see langword="false" /&gt;</ph>, genera <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, etc.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform updates at the data source, optionally using columns for parameter names.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> generado automáticamente que es necesario para realizar actualizaciones en el origen de datos, utilizando opcionalmente columnas para los nombres de parámetro.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform updates.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> generado automáticamente que es necesario para realizar actualizaciones.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">Una aplicación puede utilizar el <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> método de información o solucionar problemas porque devuelve la <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> objeto va a ejecutar.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">También puede usar <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> como base de un comando modificado.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">Por ejemplo, puede llamar a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> y modificar el texto de comando y, a continuación, establezca la explícitamente en el <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> si se cambia la instrucción en modo alguno.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">En caso contrario, el <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> seguirá utilizando la información de la instrucción anterior, que puede no ser correcta.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">Las instrucciones SQL son primera generan cuando la aplicación llama <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">El comportamiento predeterminado, al generar nombres de parámetro, consiste en usar <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, y así sucesivamente para los distintos parámetros.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter allows you to force the <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">Pasar <ph id="ph1">`true`</ph> para el <ph id="ph2">`useColumnsForParameterNames`</ph> parámetro permite forzar la <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> para generar los parámetros basados en los nombres de columna en su lugar.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Generation of the parameters based on column names succeeds only if the following conditions are met:</source>
          <target state="translated">Generación de los parámetros basados en nombres de columna se realiza correctamente solo si se cumplen las condiciones siguientes:</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> se ha especificado y su longitud es igual o mayor que el nombre del parámetro generado.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> regular expression.</source>
          <target state="translated">El nombre de parámetro generado cumple los criterios especificados en la <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> expresión regular.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> is specified.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> se especifica.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> to be used by the command builder for the corresponding insert, update, or delete command.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> que va a utilizar el generador de comandos para el correspondiente comando de inserción, actualización o eliminación.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Data.Common.DbCommand.CommandTimeout" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.Data.Common.DbCommand.Transaction" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.Data.Common.DbCommand.CommandType" /&gt;</ph>, and <ph id="ph4">&lt;see cref="T:System.Data.UpdateRowSource" /&gt;</ph> properties on the <ph id="ph5">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph>.</source>
          <target state="translated">Restablece las propiedades <ph id="ph1">&lt;see cref="P:System.Data.Common.DbCommand.CommandTimeout" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.Data.Common.DbCommand.Transaction" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.Data.Common.DbCommand.CommandType" /&gt;</ph> y <ph id="ph4">&lt;see cref="T:System.Data.UpdateRowSource" /&gt;</ph> en el objeto <ph id="ph5">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> instance to use for each insert, update, or delete operation.</source>
          <target state="translated">Instancia de <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> que se va a utilizar para cada operación de inserción, actualización o eliminación.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
          <source>Passing a null value allows the <ph id="ph1">&lt;see cref="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" /&gt;</ph> method to create a <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object based on the Select command associated with the <ph id="ph3">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</source>
          <target state="translated">Si se pasa un valor null, el método <ph id="ph1">&lt;see cref="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" /&gt;</ph> puede crear un objeto <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> basado en el comando Select asociado al objeto <ph id="ph3">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
          <source>This method is intended for use by provider writers building a custom command builder.</source>
          <target state="translated">Este método está pensado para su uso por los escritores de proveedores compilar un generador de comandos personalizado.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)">
          <source>The original unquoted identifier.</source>
          <target state="translated">Identificador original sin comillas.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)">
          <source>Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier, including properly escaping any embedded quotes in the identifier.</source>
          <target state="translated">Dado un identificador sin comillas en el caso de un catálogo correcto, devuelve el formato correcto entrecomillado de ese identificador, incluyendo una secuencia de escape adecuada para las comillas incrustadas en el identificador.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)">
          <source>The quoted version of the identifier.</source>
          <target state="translated">Versión entrecomillada del identificador.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)">
          <source>Embedded quotes within the identifier are properly escaped.</source>
          <target state="translated">Se crea una secuencia de escape adecuada para las comillas incrustadas dentro del identificador.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
          <source>Gets or sets the beginning character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.</source>
          <target state="translated">Obtiene o establece el carácter o los caracteres iniciales que se van a utilizar al especificar objetos de base de datos (por ejemplo, tablas o columnas), cuyos nombres contengan caracteres como espacios o símbolos (token) reservados.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
          <source>The beginning character or characters to use.</source>
          <target state="translated">Caracteres iniciales que se van a utilizar.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
          <source>The default is an empty string.</source>
          <target state="translated">El valor predeterminado es una cadena vacía.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
          <source>Some data sources may have objects that can contain characters such as spaces, commas, and semicolons.</source>
          <target state="translated">Algunos orígenes de datos pueden tener objetos que pueden contener caracteres como espacios, comas y puntos y comas.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
          <source>To accommodate this capability, use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;</ph> properties to specify delimiters such as a left bracket and a right bracket to encapsulate the object name.</source>
          <target state="translated">Para admitir esta capacidad, utilice la <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;</ph> propiedades para especificar delimitadores como un corchete de apertura o un corchete de cierre para encapsular el nombre del objeto.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
          <source>Although you cannot change the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;</ph> properties after an insert, update, or delete command has been generated, you can change their settings after calling the <ph id="ph3">`Update`</ph> method of a <ph id="ph4">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">Aunque no se puede cambiar la <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;</ph> propiedades después de una instrucción insert, update o delete se ha generado el comando, se pueden cambiar sus valores después de llamar a la <ph id="ph3">`Update`</ph> método de un <ph id="ph4">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
          <source>This property cannot be changed after an insert, update, or delete command has been generated.</source>
          <target state="translated">Esta propiedad no se puede cambiar después de generar un comando de inserción, actualización o eliminación.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
          <source>Gets or sets the ending character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.</source>
          <target state="translated">Obtiene o establece el carácter o los caracteres finales que se van a usar al especificar los objetos de base de datos (por ejemplo, tablas o columnas) cuyos nombres contienen caracteres como espacios o tokens reservados.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
          <source>The ending character or characters to use.</source>
          <target state="translated">Caracteres finales que se van a utilizar.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
          <source>The default is an empty string.</source>
          <target state="translated">El valor predeterminado es una cadena vacía.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
          <source>Some data sources may have objects that can contain characters such as spaces, commas, and semicolons.</source>
          <target state="translated">Algunos orígenes de datos pueden tener objetos que pueden contener caracteres como espacios, comas y puntos y comas.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
          <source>To accommodate this capability, use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;</ph> properties to specify delimiters such as a left bracket and a right bracket to encapsulate the object name.</source>
          <target state="translated">Para admitir esta capacidad, utilice la <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;</ph> propiedades para especificar delimitadores como un corchete de apertura o un corchete de cierre para encapsular el nombre del objeto.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
          <source>Although you cannot change the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;</ph> properties after an insert, update, or delete command has been generated, you can change their settings after calling the <ph id="ph3">`Update`</ph> method of a <ph id="ph4">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">Aunque no se puede cambiar la <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;</ph> propiedades después de una instrucción insert, update o delete se ha generado el comando, se pueden cambiar sus valores después de llamar a la <ph id="ph3">`Update`</ph> método de un <ph id="ph4">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.RefreshSchema">
          <source>Clears the commands associated with this <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</source>
          <target state="translated">Borra los comandos asociados a este <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.RefreshSchema">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> method effectively removes all the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> objects referred to by the <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph>,</source>
          <target state="translated">Llamando a la <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> método elimina de forma eficaz todos los <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> objetos que hace referencia el <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.RefreshSchema">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A&gt;</ph>,</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.RefreshSchema">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A&gt;</ph>, and</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A&gt;</ph> y </target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.RefreshSchema">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.InsertCommand%2A&gt;</ph> properties.</source>
          <target state="translated">Propiedades de <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.InsertCommand%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.RowUpdatingEventArgs" /&gt;</ph> instance containing information about the event.</source>
          <target state="translated">Instancia de <ph id="ph1">&lt;see cref="T:System.Data.Common.RowUpdatingEventArgs" /&gt;</ph> que contiene información sobre el evento.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)">
          <source>Adds an event handler for the <ph id="ph1">&lt;see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /&gt;</ph> event.</source>
          <target state="translated">Agrega un controlador de eventos para el evento <ph id="ph1">&lt;see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.SchemaSeparator">
          <source>Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.</source>
          <target state="translated">Obtiene o establece el carácter que se va a utilizar para el separador entre el identificador de esquema y cualquier otro identificador.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.SchemaSeparator">
          <source>The character to be used as the schema separator.</source>
          <target state="translated">Carácter que se va a utilizar como separador de esquema.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.SchemaSeparator">
          <source>Generally, database servers indicate the schema for an identifier by separating the schema name from the identifier with some character.</source>
          <target state="translated">Generalmente, los servidores de base de datos indican el esquema para un identificador separando el nombre del esquema del identificador con algún carácter.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.SchemaSeparator">
          <source>For example, SQL Server uses a colon, creating complete identifiers such as <bpt id="p1">**</bpt>Person:CustomerName<ept id="p1">**</ept>, where "Person" is the schema name and "CustomerName" is the identifier.</source>
          <target state="translated">Por ejemplo, SQL Server utiliza un signo de dos puntos, creando identificadores completos como <bpt id="p1">**</bpt>persona: NombreCliente<ept id="p1">**</ept>, donde "Persona" es el nombre del esquema y "NombreCliente" es el identificador.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.SchemaSeparator">
          <source>Setting this property allows developers to modify this behavior.</source>
          <target state="translated">Al establecer esta propiedad permite a los programadores modificar este comportamiento.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.SetAllValues">
          <source>Specifies whether all column values in an update statement are included or only changed ones.</source>
          <target state="translated">Especifica si en una instrucción de actualización se incluyen todos los valores de columna o sólo los que han cambiado.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.SetAllValues">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the UPDATE statement generated by the <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> includes all columns; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if it includes only changed columns.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la instrucción UPDATE que genera <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> incluye todas las columnas; <ph id="ph3">&lt;see langword="false" /&gt;</ph> si sólo incluye las columnas cambiadas.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.SetAllValues">
          <source>The UPDATE statement generated by a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> can include update information about all the columns, or it can include information only about those columns whose values have changed.</source>
          <target state="translated">La instrucción de actualización generada por un <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> puede incluir información de actualización sobre todas las columnas, o puede incluir sólo la información sobre las columnas cuyos valores han cambiado.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.SetAllValues">
          <source>Setting the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.SetAllValues%2A&gt;</ph> property to <ph id="ph2">`true`</ph> causes the generated UPDATE statement to include all the columns, whether their values have changed or not.</source>
          <target state="translated">Establecer el <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.SetAllValues%2A&gt;</ph> propiedad <ph id="ph2">`true`</ph> hace que la instrucción UPDATE generada incluir todas las columnas, si sus valores han cambiado o no.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> to be used for the update.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> que se va a utilizar para la actualización.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
          <source>Registers the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> to handle the <ph id="ph2">&lt;see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /&gt;</ph> event for a <ph id="ph3">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph>.</source>
          <target state="translated">Registra el objeto <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> para controlar el evento <ph id="ph2">&lt;see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /&gt;</ph> de un objeto <ph id="ph3">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
          <source>This method is intended for use by provider writers building a custom command builder.</source>
          <target state="translated">Este método está pensado para su uso por los escritores de proveedores compilar un generador de comandos personalizado.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
          <source>When a new <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> is added to the <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>, it is registered for the DbDataAdapter's <bpt id="p1">**</bpt>RowUpdating<ept id="p1">**</ept> event.</source>
          <target state="translated">Cuando una nueva <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> se agrega a la <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>, se registra para el DbDataAdapter <bpt id="p1">**</bpt>RowUpdating<ept id="p1">**</ept> eventos.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
          <source>If this method is called again with the same <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> is unregistered for that DbDataAdapter's <bpt id="p1">**</bpt>RowUpdating<ept id="p1">**</ept> event.</source>
          <target state="translated">Si este método se llama de nuevo con el mismo <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> no está registrado para ese DbDataAdapter <bpt id="p1">**</bpt>RowUpdating<ept id="p1">**</ept> eventos.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)">
          <source>The identifier that will have its embedded quotes removed.</source>
          <target state="translated">Identificador del que se van a quitar las comillas incrustadas.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)">
          <source>Given a quoted identifier, returns the correct unquoted form of that identifier, including properly un-escaping any embedded quotes in the identifier.</source>
          <target state="translated">Dado un identificador entre comillas, devuelve el formato correcto sin comillas de ese identificador, incluyendo una secuencia sin escape adecuada para las comillas incrustadas en el identificador.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)">
          <source>The unquoted identifier, with embedded quotes properly un-escaped.</source>
          <target state="translated">Identificador sin comillas, del que también se han quitado adecuadamente las comillas incrustadas.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>