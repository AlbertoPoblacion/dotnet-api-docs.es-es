<Type Name="DbCommandBuilder" FullName="System.Data.Common.DbCommandBuilder">
  <TypeSignature Language="C#" Value="public abstract class DbCommandBuilder : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbCommandBuilder extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbCommandBuilder&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbCommandBuilder abstract : System::ComponentModel::Component" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="618e0-101">Genera automáticamente comandos de tabla única que se utilizan para conciliar los cambios realizados en un objeto <see cref="T:System.Data.DataSet" /> con la base de datos asociada.</span><span class="sxs-lookup"><span data-stu-id="618e0-101">Automatically generates single-table commands used to reconcile changes made to a <see cref="T:System.Data.DataSet" /> with the associated database.</span></span> <span data-ttu-id="618e0-102">Es una clase abstracta que sólo se puede heredar.</span><span class="sxs-lookup"><span data-stu-id="618e0-102">This is an abstract class that can only be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="618e0-103">La <xref:System.Data.Common.DbCommandBuilder> clase se proporciona para la comodidad de los programadores de proveedores crear sus propios generadores de comandos.</span><span class="sxs-lookup"><span data-stu-id="618e0-103">The <xref:System.Data.Common.DbCommandBuilder> class is provided for the convenience of provider writers creating their own command builders.</span></span> <span data-ttu-id="618e0-104">Al heredar de esta clase, los desarrolladores pueden implementar el comportamiento específico del proveedor en su propio código.</span><span class="sxs-lookup"><span data-stu-id="618e0-104">By inheriting from this class, developers can implement provider specific behavior in their own code.</span></span>  
  
 <span data-ttu-id="618e0-105">El <xref:System.Data.Common.DbDataAdapter> no genera automáticamente las instrucciones SQL necesarias para reconciliar los cambios realizados en un <xref:System.Data.DataSet> con el origen de datos asociado.</span><span class="sxs-lookup"><span data-stu-id="618e0-105">The <xref:System.Data.Common.DbDataAdapter> does not automatically generate the SQL statements required to reconcile changes made to a <xref:System.Data.DataSet> with the associated data source.</span></span> <span data-ttu-id="618e0-106">Sin embargo, puede crear un <xref:System.Data.Common.DbCommandBuilder> objeto que se va a generar automáticamente las instrucciones SQL para las actualizaciones de tabla única si se establece la <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> propiedad de la <xref:System.Data.Common.DbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="618e0-106">However, you can create a <xref:System.Data.Common.DbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> property of the <xref:System.Data.Common.DbDataAdapter>.</span></span> <span data-ttu-id="618e0-107">A continuación, se generan las instrucciones SQL que no se establecen mediante el <xref:System.Data.Common.DbCommandBuilder>.</span><span class="sxs-lookup"><span data-stu-id="618e0-107">Then, any additional SQL statements that you do not set are generated by the <xref:System.Data.Common.DbCommandBuilder>.</span></span>  
  
 <span data-ttu-id="618e0-108">El <xref:System.Data.Common.DbCommandBuilder> registra a sí mismo como un agente de escucha para <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> eventos siempre que se establezca la <xref:System.Data.Common.DbCommandBuilder.DataAdapter%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="618e0-108">The <xref:System.Data.Common.DbCommandBuilder> registers itself as a listener for <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> events whenever you set the <xref:System.Data.Common.DbCommandBuilder.DataAdapter%2A> property.</span></span> <span data-ttu-id="618e0-109">Sólo se puede asociar uno <xref:System.Data.Common.DbDataAdapter> o <xref:System.Data.Common.DbCommandBuilder> objetos entre sí al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="618e0-109">You can only associate one <xref:System.Data.Common.DbDataAdapter> or <xref:System.Data.Common.DbCommandBuilder> object with each other at one time.</span></span>  
  
 <span data-ttu-id="618e0-110">Para generar instrucciones INSERT, UPDATE o DELETE, el <xref:System.Data.Common.DbCommandBuilder> usa el <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> propiedad que se va a recuperar automáticamente un conjunto de metadatos requerido.</span><span class="sxs-lookup"><span data-stu-id="618e0-110">To generate INSERT, UPDATE, or DELETE statements, the <xref:System.Data.Common.DbCommandBuilder> uses the <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> property to retrieve a required set of metadata automatically.</span></span> <span data-ttu-id="618e0-111">Si cambia la <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> una vez recuperados los metadatos (por ejemplo, después de la primera actualización), debe llamar a la <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> método para actualizar los metadatos.</span><span class="sxs-lookup"><span data-stu-id="618e0-111">If you change the <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> after the metadata has been retrieved (for example, after the first update), you should call the <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> method to update the metadata.</span></span>  
  
 <span data-ttu-id="618e0-112">`SelectCommand` también debe devolver como mínimo una clave principal o una columna única.</span><span class="sxs-lookup"><span data-stu-id="618e0-112">The `SelectCommand` must also return at least one primary key or unique column.</span></span> <span data-ttu-id="618e0-113">Si no existe ninguna, una <xref:System.InvalidOperationException> se genera la excepción y no se generan los comandos.</span><span class="sxs-lookup"><span data-stu-id="618e0-113">If none exist, an <xref:System.InvalidOperationException> exception is generated, and the commands are not generated.</span></span>  
  
 <span data-ttu-id="618e0-114">El <xref:System.Data.Common.DbCommandBuilder> también usa el <xref:System.Data.Common.DbCommand.Connection%2A>, <xref:System.Data.Common.DbCommand.CommandTimeout%2A>, y <xref:System.Data.Common.DbCommand.Transaction%2A> propiedades al que hace referencia el <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="618e0-114">The <xref:System.Data.Common.DbCommandBuilder> also uses the <xref:System.Data.Common.DbCommand.Connection%2A>, <xref:System.Data.Common.DbCommand.CommandTimeout%2A>, and <xref:System.Data.Common.DbCommand.Transaction%2A> properties referenced by the <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="618e0-115">El usuario debe llamar a <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> si se modifica alguna de estas propiedades, o si el <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> propio se reemplaza.</span><span class="sxs-lookup"><span data-stu-id="618e0-115">The user should call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if any of these properties are modified, or if the <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> itself is replaced.</span></span> <span data-ttu-id="618e0-116">En caso contrario, el <xref:System.Data.Common.DbDataAdapter.InsertCommand%2A>, <xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A>, y <xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A> propiedades conservan sus valores anteriores.</span><span class="sxs-lookup"><span data-stu-id="618e0-116">Otherwise the <xref:System.Data.Common.DbDataAdapter.InsertCommand%2A>, <xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A>, and <xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A> properties retain their previous values.</span></span>  
  
 <span data-ttu-id="618e0-117">Si se llama a <xref:System.ComponentModel.Component.Dispose%2A>, <xref:System.Data.Common.DbCommandBuilder> se desasocie de la <xref:System.Data.Common.DbDataAdapter>, y los comandos generados dejan de usarse.</span><span class="sxs-lookup"><span data-stu-id="618e0-117">If you call <xref:System.ComponentModel.Component.Dispose%2A>, the <xref:System.Data.Common.DbCommandBuilder> is disassociated from the <xref:System.Data.Common.DbDataAdapter>, and the generated commands are no longer used.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbCommandBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbCommandBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="618e0-118">Inicializa una nueva instancia de una clase que hereda de la clase <see cref="T:System.Data.Common.DbCommandBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="618e0-118">Initializes a new instance of a class that inherits from the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyParameterInfo">
      <MemberSignature Language="C#" Value="protected abstract void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow row, System.Data.StatementType statementType, bool whereClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ApplyParameterInfo(class System.Data.Common.DbParameter parameter, class System.Data.DataRow row, valuetype System.Data.StatementType statementType, bool whereClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void ApplyParameterInfo(System::Data::Common::DbParameter ^ parameter, System::Data::DataRow ^ row, System::Data::StatementType statementType, bool whereClause);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" />
        <Parameter Name="row" Type="System.Data.DataRow" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="whereClause" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="618e0-119"><see cref="T:System.Data.Common.DbParameter" /> al que se aplican las modificaciones adicionales.</span><span class="sxs-lookup"><span data-stu-id="618e0-119">A <see cref="T:System.Data.Common.DbParameter" /> to which the additional modifications are applied.</span></span></param>
        <param name="row"><span data-ttu-id="618e0-120"><see cref="T:System.Data.DataRow" /> de la tabla de esquema que proporciona <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" />.</span><span class="sxs-lookup"><span data-stu-id="618e0-120">The <see cref="T:System.Data.DataRow" /> from the schema table provided by <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" />.</span></span></param>
        <param name="statementType"><span data-ttu-id="618e0-121">Tipo de comando que se genera: INSERT, UPDATE o DELETE.</span><span class="sxs-lookup"><span data-stu-id="618e0-121">The type of command being generated; INSERT, UPDATE or DELETE.</span></span></param>
        <param name="whereClause">
          <span data-ttu-id="618e0-122"><see langword="true" /> si el parámetro forma parte de la cláusula WHERE de actualización o eliminación, <see langword="false" /> si forma parte de los valores de inserción o actualización.</span><span class="sxs-lookup"><span data-stu-id="618e0-122"><see langword="true" /> if the parameter is part of the update or delete WHERE clause, <see langword="false" /> if it is part of the insert or update values.</span></span></param>
        <summary><span data-ttu-id="618e0-123">Permite que la implementación del proveedor de la clase <see cref="T:System.Data.Common.DbCommandBuilder" /> controle propiedades de parámetro adicionales.</span><span class="sxs-lookup"><span data-stu-id="618e0-123">Allows the provider implementation of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class to handle additional parameter properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="618e0-124">Este método permite que una implementación de la <xref:System.Data.Common.DbCommandBuilder> clase para administrar propiedades del parámetro específico del proveedor.</span><span class="sxs-lookup"><span data-stu-id="618e0-124">This method allows an implementation of the <xref:System.Data.Common.DbCommandBuilder> class to handle provider-specific parameter properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogLocation">
      <MemberSignature Language="C#" Value="public virtual System.Data.Common.CatalogLocation CatalogLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Common.CatalogLocation CatalogLocation" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.CatalogLocation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CatalogLocation As CatalogLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::Common::CatalogLocation CatalogLocation { System::Data::Common::CatalogLocation get(); void set(System::Data::Common::CatalogLocation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.CatalogLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="618e0-125">Establece u obtiene el objeto <see cref="T:System.Data.Common.CatalogLocation" /> para una instancia de la clase <see cref="T:System.Data.Common.DbCommandBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="618e0-125">Sets or gets the <see cref="T:System.Data.Common.CatalogLocation" /> for an instance of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</span></span></summary>
        <value><span data-ttu-id="618e0-126">Un objeto <see cref="T:System.Data.Common.CatalogLocation" />.</span><span class="sxs-lookup"><span data-stu-id="618e0-126">A <see cref="T:System.Data.Common.CatalogLocation" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogSeparator">
      <MemberSignature Language="C#" Value="public virtual string CatalogSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.CatalogSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CatalogSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CatalogSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(".")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="618e0-127">Establece u obtiene una cadena que se utiliza como separador de catálogo para una instancia de la clase <see cref="T:System.Data.Common.DbCommandBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="618e0-127">Sets or gets a string used as the catalog separator for an instance of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</span></span></summary>
        <value><span data-ttu-id="618e0-128">Cadena que indica el separador de catálogo que se utiliza con una instancia de la clase <see cref="T:System.Data.Common.DbCommandBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="618e0-128">A string indicating the catalog separator for use with an instance of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictOption">
      <MemberSignature Language="C#" Value="public virtual System.Data.ConflictOption ConflictOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConflictOption ConflictOption" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.ConflictOption" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConflictOption As ConflictOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConflictOption ConflictOption { System::Data::ConflictOption get(); void set(System::Data::ConflictOption value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConflictOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="618e0-129">Especifica qué <see cref="T:System.Data.ConflictOption" /> va a utilizar <see cref="T:System.Data.Common.DbCommandBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="618e0-129">Specifies which <see cref="T:System.Data.ConflictOption" /> is to be used by the <see cref="T:System.Data.Common.DbCommandBuilder" />.</span></span></summary>
        <value><span data-ttu-id="618e0-130">Devuelve uno de los valores de <see cref="T:System.Data.ConflictOption" /> que describe el comportamiento de <see cref="T:System.Data.Common.DbCommandBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="618e0-130">Returns one of the <see cref="T:System.Data.ConflictOption" /> values describing the behavior of this <see cref="T:System.Data.Common.DbCommandBuilder" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataAdapter">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbDataAdapter DataAdapter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbDataAdapter DataAdapter" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.DataAdapter" />
      <MemberSignature Language="VB.NET" Value="Public Property DataAdapter As DbDataAdapter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbDataAdapter ^ DataAdapter { System::Data::Common::DbDataAdapter ^ get(); void set(System::Data::Common::DbDataAdapter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="618e0-131">Obtiene o establece un objeto <see cref="T:System.Data.Common.DbDataAdapter" /> para el que se generan automáticamente instrucciones de Transact-SQL.</span><span class="sxs-lookup"><span data-stu-id="618e0-131">Gets or sets a <see cref="T:System.Data.Common.DbDataAdapter" /> object for which Transact-SQL statements are automatically generated.</span></span></summary>
        <value><span data-ttu-id="618e0-132">Un objeto <see cref="T:System.Data.Common.DbDataAdapter" />.</span><span class="sxs-lookup"><span data-stu-id="618e0-132">A <see cref="T:System.Data.Common.DbDataAdapter" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="618e0-133">El <xref:System.Data.Common.DbCommandBuilder> registra a sí mismo como un agente de escucha para <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> eventos generados por el <xref:System.Data.Common.DbDataAdapter> especificado en esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="618e0-133">The <xref:System.Data.Common.DbCommandBuilder> registers itself as a listener for <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> events that are generated by the <xref:System.Data.Common.DbDataAdapter> specified in this property.</span></span>  
  
 <span data-ttu-id="618e0-134">Cuando se crea una nueva instancia de <xref:System.Data.Common.DbCommandBuilder>, cualquier existente <xref:System.Data.Common.DbCommandBuilder> asociada a esta <xref:System.Data.Common.DbDataAdapter> se libera.</span><span class="sxs-lookup"><span data-stu-id="618e0-134">When you create a new instance of <xref:System.Data.Common.DbCommandBuilder>, any existing <xref:System.Data.Common.DbCommandBuilder> associated with this <xref:System.Data.Common.DbDataAdapter> is released.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="618e0-135">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</span><span class="sxs-lookup"><span data-stu-id="618e0-135"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="618e0-136">Libera los recursos no administrados que usa <see cref="T:System.Data.Common.DbCommandBuilder" /> y, de forma opcional, libera los recursos administrados.</span><span class="sxs-lookup"><span data-stu-id="618e0-136">Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DbCommandBuilder" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="618e0-137">Se llama a este método público <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> método y `Finalize` método.</span><span class="sxs-lookup"><span data-stu-id="618e0-137">This method is called by the public <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> method and the `Finalize` method.</span></span> <span data-ttu-id="618e0-138"><xref:System.Data.Common.DbCommandBuilder.Dispose%2A> se invoca el protegido <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> método con el parámetro va a eliminar establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="618e0-138"><xref:System.Data.Common.DbCommandBuilder.Dispose%2A> invokes the protected <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> method with the disposing parameter set to `true`.</span></span> <span data-ttu-id="618e0-139">`Finalize` invoca `Dispose` con `disposing` establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="618e0-139">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="618e0-140">Cuando el parámetro `disposing` es `true`, este método libera todos los recursos retenidos por los objetos administrados a los que el control <xref:System.Data.Common.DbCommandBuilder> hace referencia.</span><span class="sxs-lookup"><span data-stu-id="618e0-140">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Data.Common.DbCommandBuilder> references.</span></span> <span data-ttu-id="618e0-141">Este método invoca al método <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> de cada uno de los objetos a los que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="618e0-141">This method invokes the <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="618e0-142"><see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" /> puede recibir varias llamadas de otros objetos.</span><span class="sxs-lookup"><span data-stu-id="618e0-142"><see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="618e0-143">Al invalidar <see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" />, tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a <see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="618e0-143">When overriding <see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" />.</span></span> <span data-ttu-id="618e0-144">Para obtener más información sobre cómo implementar <see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" />, consulte [implementa un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="618e0-144">For more information about how to implement <see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="618e0-145">Para obtener más información acerca de <see langword="Dispose" /> y <see langword="Finalize" />, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [reemplazar el método Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span><span class="sxs-lookup"><span data-stu-id="618e0-145">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span></para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDeleteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="618e0-146">Obtiene el objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar eliminaciones en el origen de datos.</span><span class="sxs-lookup"><span data-stu-id="618e0-146">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions at the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="618e0-147">Una aplicación puede utilizar el <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> método de información o solucionar problemas porque devuelve la <xref:System.Data.Common.DbCommand> objeto va a ejecutar.</span><span class="sxs-lookup"><span data-stu-id="618e0-147">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="618e0-148">También puede usar <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> como base de un comando modificado.</span><span class="sxs-lookup"><span data-stu-id="618e0-148">You can also use <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="618e0-149">Por ejemplo, puede llamar a <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> y modifique el texto del comando asociado y, a continuación, establezca la explícitamente en el <xref:System.Data.Common.DbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="618e0-149">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> and modify the associated command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="618e0-150">Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> si se cambia la instrucción en modo alguno.</span><span class="sxs-lookup"><span data-stu-id="618e0-150">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="618e0-151">En caso contrario, el <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> seguirá utilizando la información de la instrucción anterior, que puede no ser correcta.</span><span class="sxs-lookup"><span data-stu-id="618e0-151">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="618e0-152">Las instrucciones SQL son primera generan cuando la aplicación llama <xref:System.Data.Common.DbDataAdapter.Update%2A> o <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="618e0-152">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 <span data-ttu-id="618e0-153">El comportamiento predeterminado, al generar nombres de parámetro, consiste en usar @p1, @p2, y así sucesivamente para los distintos parámetros.</span><span class="sxs-lookup"><span data-stu-id="618e0-153">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="618e0-154">Si la versión sobrecargada de <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> le permite especificar este comportamiento proporcionando un valor booleano, puede provocar la <xref:System.Data.Common.DbCommandBuilder> para generar los parámetros basados en los nombres de columna en su lugar, pasando `True`.</span><span class="sxs-lookup"><span data-stu-id="618e0-154">If the overloaded version of <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> allows you to specify this behavior by supplying a Boolean value, you can cause the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead by passing `True`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetDeleteCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetDeleteCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetDeleteCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="618e0-155">Obtiene el objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar eliminaciones en el origen de datos.</span><span class="sxs-lookup"><span data-stu-id="618e0-155">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions at the data source.</span></span></summary>
        <returns><span data-ttu-id="618e0-156">Objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar eliminaciones.</span><span class="sxs-lookup"><span data-stu-id="618e0-156">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="618e0-157">Una aplicación puede utilizar el <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> método de información o solucionar problemas porque devuelve la <xref:System.Data.Common.DbCommand> objeto va a ejecutar.</span><span class="sxs-lookup"><span data-stu-id="618e0-157">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="618e0-158">También puede usar <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> como base de un comando modificado.</span><span class="sxs-lookup"><span data-stu-id="618e0-158">You can also use <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="618e0-159">Por ejemplo, puede llamar a <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> y modifique el texto del comando y, a continuación, establezca la explícitamente en el <xref:System.Data.Common.DbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="618e0-159">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> and modify the command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="618e0-160">Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> si se cambia la instrucción en modo alguno.</span><span class="sxs-lookup"><span data-stu-id="618e0-160">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="618e0-161">En caso contrario, el <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> seguirá utilizando la información de la instrucción anterior, que puede no ser correcta.</span><span class="sxs-lookup"><span data-stu-id="618e0-161">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="618e0-162">Las instrucciones SQL son primera generan cuando la aplicación llama <xref:System.Data.Common.DbDataAdapter.Update%2A> o <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="618e0-162">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetDeleteCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetDeleteCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand (useColumnsForParameterNames As Boolean) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetDeleteCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames"><span data-ttu-id="618e0-163">Si es <see langword="true" />, hay que generar nombres de parámetro que coincidan con los nombres de columna, si es posible.</span><span class="sxs-lookup"><span data-stu-id="618e0-163">If <see langword="true" />, generate parameter names matching column names, if possible.</span></span> <span data-ttu-id="618e0-164">Si es <see langword="false" />, genera @p1, @p2, etc.</span><span class="sxs-lookup"><span data-stu-id="618e0-164">If <see langword="false" />, generate @p1, @p2, and so on.</span></span></param>
        <summary><span data-ttu-id="618e0-165">Obtiene el objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar eliminaciones en el origen de datos, utilizando opcionalmente columnas para los nombres de parámetro.</span><span class="sxs-lookup"><span data-stu-id="618e0-165">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions at the data source, optionally using columns for parameter names.</span></span></summary>
        <returns><span data-ttu-id="618e0-166">Objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar eliminaciones.</span><span class="sxs-lookup"><span data-stu-id="618e0-166">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="618e0-167">Una aplicación puede utilizar el <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> método de información o solucionar problemas porque devuelve la <xref:System.Data.Common.DbCommand> objeto va a ejecutar.</span><span class="sxs-lookup"><span data-stu-id="618e0-167">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="618e0-168">También puede usar <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> como base de un comando modificado.</span><span class="sxs-lookup"><span data-stu-id="618e0-168">You can also use <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="618e0-169">Por ejemplo, puede llamar a <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> y modifique el texto del comando y, a continuación, establezca la explícitamente en el <xref:System.Data.Common.DbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="618e0-169">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> and modify the command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="618e0-170">Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> si se cambia la instrucción en modo alguno.</span><span class="sxs-lookup"><span data-stu-id="618e0-170">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="618e0-171">En caso contrario, el <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> seguirá utilizando la información de la instrucción anterior, que puede no ser correcta.</span><span class="sxs-lookup"><span data-stu-id="618e0-171">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="618e0-172">Las instrucciones SQL son primera generan cuando la aplicación llama <xref:System.Data.Common.DbDataAdapter.Update%2A> o <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="618e0-172">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 <span data-ttu-id="618e0-173">El comportamiento predeterminado, al generar nombres de parámetro, consiste en usar @p1, @p2, y así sucesivamente para los distintos parámetros.</span><span class="sxs-lookup"><span data-stu-id="618e0-173">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="618e0-174">Pasar `true` para el `useColumnsForParameterNames` parámetro permite forzar la <xref:System.Data.Common.DbCommandBuilder> para generar los parámetros basados en los nombres de columna en su lugar.</span><span class="sxs-lookup"><span data-stu-id="618e0-174">Passing `true` for the `useColumnsForParameterNames` parameter allows you to force the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="618e0-175">Esto se realiza correctamente solo si se cumplen las condiciones siguientes:</span><span class="sxs-lookup"><span data-stu-id="618e0-175">This succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="618e0-176">El <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> se ha especificado y su longitud es igual o mayor que el nombre del parámetro generado.</span><span class="sxs-lookup"><span data-stu-id="618e0-176">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="618e0-177">El nombre de parámetro generado cumple los criterios especificados en la <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> expresión regular.</span><span class="sxs-lookup"><span data-stu-id="618e0-177">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="618e0-178">Un <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> se especifica.</span><span class="sxs-lookup"><span data-stu-id="618e0-178">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInsertCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="618e0-179">Obtiene el objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar inserciones en el origen de datos.</span><span class="sxs-lookup"><span data-stu-id="618e0-179">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions at the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="618e0-180">Una aplicación puede utilizar el <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> método informativos o para solucionar problemas con fines porque devuelve el texto de la <xref:System.Data.Common.DbCommand> objeto va a ejecutar.</span><span class="sxs-lookup"><span data-stu-id="618e0-180">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the text of the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="618e0-181">También puede usar <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> como base de un comando modificado.</span><span class="sxs-lookup"><span data-stu-id="618e0-181">You can also use <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="618e0-182">Por ejemplo, puede llamar a <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> y modificar el texto de comando y, a continuación, establezca la explícitamente en el <xref:System.Data.Common.DbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="618e0-182">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> and modify command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="618e0-183">Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> si se cambia la instrucción en modo alguno.</span><span class="sxs-lookup"><span data-stu-id="618e0-183">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="618e0-184">En caso contrario, el <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> seguirá utilizando la información de la instrucción anterior, que puede no ser correcta.</span><span class="sxs-lookup"><span data-stu-id="618e0-184">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="618e0-185">Las instrucciones SQL son primera generan cuando la aplicación llama <xref:System.Data.Common.DbDataAdapter.Update%2A> o <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="618e0-185">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 <span data-ttu-id="618e0-186">El comportamiento predeterminado, al generar nombres de parámetro, consiste en usar @p1, @p2, y así sucesivamente para los distintos parámetros.</span><span class="sxs-lookup"><span data-stu-id="618e0-186">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="618e0-187">Si la versión sobrecargada de <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> le permite especificar este comportamiento, puede hacer que el <xref:System.Data.Common.DbCommandBuilder> para generar los parámetros basados en los nombres de columna en su lugar.</span><span class="sxs-lookup"><span data-stu-id="618e0-187">If the overloaded version of <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> allows you to specify this behavior, you can cause the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetInsertCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetInsertCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetInsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetInsertCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="618e0-188">Obtiene el objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar inserciones en el origen de datos.</span><span class="sxs-lookup"><span data-stu-id="618e0-188">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions at the data source.</span></span></summary>
        <returns><span data-ttu-id="618e0-189">Objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar inserciones.</span><span class="sxs-lookup"><span data-stu-id="618e0-189">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="618e0-190">Una aplicación puede utilizar el <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> método informativos o para solucionar problemas con fines porque devuelve el texto de la <xref:System.Data.Common.DbCommand> objeto va a ejecutar.</span><span class="sxs-lookup"><span data-stu-id="618e0-190">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the text of the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="618e0-191">También puede usar <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> como base de un comando modificado.</span><span class="sxs-lookup"><span data-stu-id="618e0-191">You can also use <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="618e0-192">Por ejemplo, puede llamar a <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> y modifique el texto del comando y, a continuación, establezca la explícitamente en el <xref:System.Data.Common.DbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="618e0-192">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> and modify the command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="618e0-193">Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> si se cambia la instrucción en modo alguno.</span><span class="sxs-lookup"><span data-stu-id="618e0-193">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="618e0-194">En caso contrario, el <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> seguirá utilizando la información de la instrucción anterior, que puede no ser correcta.</span><span class="sxs-lookup"><span data-stu-id="618e0-194">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="618e0-195">Las instrucciones SQL son primera generan cuando la aplicación llama <xref:System.Data.Common.DbDataAdapter.Update%2A> o <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="618e0-195">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetInsertCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetInsertCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand (useColumnsForParameterNames As Boolean) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetInsertCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames"><span data-ttu-id="618e0-196">Si es <see langword="true" />, hay que generar nombres de parámetro que coincidan con los nombres de columna, si es posible.</span><span class="sxs-lookup"><span data-stu-id="618e0-196">If <see langword="true" />, generate parameter names matching column names, if possible.</span></span> <span data-ttu-id="618e0-197">Si es <see langword="false" />, genera @p1, @p2, etc.</span><span class="sxs-lookup"><span data-stu-id="618e0-197">If <see langword="false" />, generate @p1, @p2, and so on.</span></span></param>
        <summary><span data-ttu-id="618e0-198">Obtiene el objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar inserciones en el origen de datos, utilizando opcionalmente columnas para los nombres de parámetro.</span><span class="sxs-lookup"><span data-stu-id="618e0-198">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions at the data source, optionally using columns for parameter names.</span></span></summary>
        <returns><span data-ttu-id="618e0-199">Objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar inserciones.</span><span class="sxs-lookup"><span data-stu-id="618e0-199">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="618e0-200">Una aplicación puede utilizar el <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> método informativos o para solucionar problemas con fines porque devuelve el texto de la <xref:System.Data.Common.DbCommand> objeto va a ejecutar.</span><span class="sxs-lookup"><span data-stu-id="618e0-200">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the text of the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="618e0-201">También puede usar <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> como base de un comando modificado.</span><span class="sxs-lookup"><span data-stu-id="618e0-201">You can also use <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="618e0-202">Por ejemplo, puede llamar a <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> y modifique el texto del comando y, a continuación, establezca la explícitamente en el <xref:System.Data.Common.DbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="618e0-202">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> and modify the command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="618e0-203">Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> si se cambia la instrucción en modo alguno.</span><span class="sxs-lookup"><span data-stu-id="618e0-203">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="618e0-204">En caso contrario, el <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> seguirá utilizando la información de la instrucción anterior, que puede no ser correcta.</span><span class="sxs-lookup"><span data-stu-id="618e0-204">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="618e0-205">Las instrucciones SQL son primera generan cuando la aplicación llama <xref:System.Data.Common.DbDataAdapter.Update%2A> o <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="618e0-205">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 <span data-ttu-id="618e0-206">El comportamiento predeterminado, al generar nombres de parámetro, consiste en usar @p1, @p2, y así sucesivamente para los distintos parámetros.</span><span class="sxs-lookup"><span data-stu-id="618e0-206">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="618e0-207">Pasar `true` para el `useColumnsForParameterNames` parámetro permite forzar la <xref:System.Data.Common.DbCommandBuilder> para generar los parámetros basados en los nombres de columna en su lugar.</span><span class="sxs-lookup"><span data-stu-id="618e0-207">Passing `true` for the `useColumnsForParameterNames` parameter allows you to force the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="618e0-208">Generación de los parámetros basados en nombres de columna se realiza correctamente solo si se cumplen las condiciones siguientes:</span><span class="sxs-lookup"><span data-stu-id="618e0-208">Generation of the parameters based on column names succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="618e0-209">El <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> se ha especificado y su longitud es igual o mayor que el nombre del parámetro generado.</span><span class="sxs-lookup"><span data-stu-id="618e0-209">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="618e0-210">El nombre de parámetro generado cumple los criterios especificados en la <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> expresión regular.</span><span class="sxs-lookup"><span data-stu-id="618e0-210">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="618e0-211">Un <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> se especifica.</span><span class="sxs-lookup"><span data-stu-id="618e0-211">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParameterName">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="618e0-212">Devuelve el nombre del parámetro especificado.</span><span class="sxs-lookup"><span data-stu-id="618e0-212">Returns the name of the specified parameter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected abstract string GetParameterName (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetParameterName(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetParameterName (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetParameterName(int parameterOrdinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal"><span data-ttu-id="618e0-213">Número que se va a incluir como parte del nombre del parámetro.</span><span class="sxs-lookup"><span data-stu-id="618e0-213">The number to be included as part of the parameter's name..</span></span></param>
        <summary><span data-ttu-id="618e0-214">Devuelve el nombre del parámetro especificado con el formato @p*#*.</span><span class="sxs-lookup"><span data-stu-id="618e0-214">Returns the name of the specified parameter in the format of @p*#*.</span></span> <span data-ttu-id="618e0-215">Utilícelo al crear un generador de comandos personalizado.</span><span class="sxs-lookup"><span data-stu-id="618e0-215">Use when building a custom command builder.</span></span></summary>
        <returns><span data-ttu-id="618e0-216">Nombre del parámetro con el número especificado anexado como parte del nombre de parámetro.</span><span class="sxs-lookup"><span data-stu-id="618e0-216">The name of the parameter with the specified number appended as part of the parameter name.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected abstract string GetParameterName (string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetParameterName(string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetParameterName (parameterName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetParameterName(System::String ^ parameterName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName"><span data-ttu-id="618e0-217">Nombre parcial del parámetro.</span><span class="sxs-lookup"><span data-stu-id="618e0-217">The partial name of the parameter.</span></span></param>
        <summary><span data-ttu-id="618e0-218">Devuelve el nombre completo del parámetro, a partir de su nombre parcial.</span><span class="sxs-lookup"><span data-stu-id="618e0-218">Returns the full parameter name, given the partial parameter name.</span></span></summary>
        <returns><span data-ttu-id="618e0-219">Nombre completo del parámetro que corresponde al nombre parcial solicitado.</span><span class="sxs-lookup"><span data-stu-id="618e0-219">The full parameter name corresponding to the partial parameter name requested.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterPlaceholder">
      <MemberSignature Language="C#" Value="protected abstract string GetParameterPlaceholder (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetParameterPlaceholder(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetParameterPlaceholder (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetParameterPlaceholder(int parameterOrdinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal"><span data-ttu-id="618e0-220">Número que se va a incluir como parte del nombre del parámetro.</span><span class="sxs-lookup"><span data-stu-id="618e0-220">The number to be included as part of the parameter's name.</span></span></param>
        <summary><span data-ttu-id="618e0-221">Devuelve el marcador de posición para el parámetro en la instrucción SQL asociada.</span><span class="sxs-lookup"><span data-stu-id="618e0-221">Returns the placeholder for the parameter in the associated SQL statement.</span></span></summary>
        <returns><span data-ttu-id="618e0-222">Nombre del parámetro con el número especificado anexado.</span><span class="sxs-lookup"><span data-stu-id="618e0-222">The name of the parameter with the specified number appended.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="618e0-223">Este método está pensado para su uso por los escritores de proveedores compilar un generador de comandos personalizado.</span><span class="sxs-lookup"><span data-stu-id="618e0-223">This method is intended for use by provider writers building a custom command builder.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable GetSchemaTable (System.Data.Common.DbCommand sourceCommand);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable GetSchemaTable(class System.Data.Common.DbCommand sourceCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSchemaTable (sourceCommand As DbCommand) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataTable ^ GetSchemaTable(System::Data::Common::DbCommand ^ sourceCommand);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceCommand" Type="System.Data.Common.DbCommand" />
      </Parameters>
      <Docs>
        <param name="sourceCommand"><span data-ttu-id="618e0-224"><see cref="T:System.Data.Common.DbCommand" /> para el que se va a recuperar la tabla de esquema correspondiente.</span><span class="sxs-lookup"><span data-stu-id="618e0-224">The <see cref="T:System.Data.Common.DbCommand" /> for which to retrieve the corresponding schema table.</span></span></param>
        <summary><span data-ttu-id="618e0-225">Devuelve la tabla de esquema para <see cref="T:System.Data.Common.DbCommandBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="618e0-225">Returns the schema table for the <see cref="T:System.Data.Common.DbCommandBuilder" />.</span></span></summary>
        <returns><span data-ttu-id="618e0-226"><see cref="T:System.Data.DataTable" /> que representa el esquema para el específico <see cref="T:System.Data.Common.DbCommand" />.</span><span class="sxs-lookup"><span data-stu-id="618e0-226">A <see cref="T:System.Data.DataTable" /> that represents the schema for the specific <see cref="T:System.Data.Common.DbCommand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="618e0-227">Este método está pensado para su uso por los escritores de proveedores compilar un generador de comandos personalizado.</span><span class="sxs-lookup"><span data-stu-id="618e0-227">This method is intended for use by provider writers building a custom command builder.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUpdateCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="618e0-228">Obtiene el objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar actualizaciones en el origen de datos.</span><span class="sxs-lookup"><span data-stu-id="618e0-228">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates at the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="618e0-229">Una aplicación puede utilizar el <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> método de información o solucionar problemas porque devuelve la <xref:System.Data.Common.DbCommand> objeto va a ejecutar.</span><span class="sxs-lookup"><span data-stu-id="618e0-229">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="618e0-230">También puede usar <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> como base de un comando modificado.</span><span class="sxs-lookup"><span data-stu-id="618e0-230">You can also use <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="618e0-231">Por ejemplo, puede llamar a <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> y modifique el texto del comando y, a continuación, establezca la explícitamente en el <xref:System.Data.Common.DbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="618e0-231">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> and modify the command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="618e0-232">Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> si se cambia la instrucción en modo alguno.</span><span class="sxs-lookup"><span data-stu-id="618e0-232">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="618e0-233">En caso contrario, el <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> seguirá utilizando la información de la instrucción anterior, que puede no ser correcta.</span><span class="sxs-lookup"><span data-stu-id="618e0-233">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="618e0-234">Las instrucciones SQL son primera generan cuando la aplicación llama <xref:System.Data.Common.DbDataAdapter.Update%2A> o <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="618e0-234">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 <span data-ttu-id="618e0-235">El comportamiento predeterminado, al generar nombres de parámetro, consiste en usar @p1, @p2, y así sucesivamente para los distintos parámetros.</span><span class="sxs-lookup"><span data-stu-id="618e0-235">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="618e0-236">Si la versión sobrecargada de <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> le permite especificar este comportamiento, puede hacer que el <xref:System.Data.Common.DbCommandBuilder> para generar los parámetros basados en los nombres de columna en su lugar.</span><span class="sxs-lookup"><span data-stu-id="618e0-236">If the overloaded version of <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> allows you to specify this behavior, you can cause the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetUpdateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetUpdateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetUpdateCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="618e0-237">Obtiene el objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar actualizaciones en el origen de datos.</span><span class="sxs-lookup"><span data-stu-id="618e0-237">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates at the data source.</span></span></summary>
        <returns><span data-ttu-id="618e0-238">Objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar actualizaciones.</span><span class="sxs-lookup"><span data-stu-id="618e0-238">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="618e0-239">Una aplicación puede utilizar el <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> método de información o solucionar problemas porque devuelve la <xref:System.Data.Common.DbCommand> objeto va a ejecutar.</span><span class="sxs-lookup"><span data-stu-id="618e0-239">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="618e0-240">También puede usar <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> como base de un comando modificado.</span><span class="sxs-lookup"><span data-stu-id="618e0-240">You can also use <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="618e0-241">Por ejemplo, puede llamar a <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> y modifique el texto del comando y, a continuación, establezca la explícitamente en el <xref:System.Data.Common.DbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="618e0-241">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> and modify the command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="618e0-242">Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> si se cambia la instrucción en modo alguno.</span><span class="sxs-lookup"><span data-stu-id="618e0-242">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="618e0-243">En caso contrario, el <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> seguirá utilizando la información de la instrucción anterior, que puede no ser correcta.</span><span class="sxs-lookup"><span data-stu-id="618e0-243">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="618e0-244">Las instrucciones SQL son primera generan cuando la aplicación llama <xref:System.Data.Common.DbDataAdapter.Update%2A> o <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="618e0-244">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetUpdateCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetUpdateCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand (useColumnsForParameterNames As Boolean) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetUpdateCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames"><span data-ttu-id="618e0-245">Si es <see langword="true" />, hay que generar nombres de parámetro que coincidan con los nombres de columna, si es posible.</span><span class="sxs-lookup"><span data-stu-id="618e0-245">If <see langword="true" />, generate parameter names matching column names, if possible.</span></span> <span data-ttu-id="618e0-246">Si es <see langword="false" />, genera @p1, @p2, etc.</span><span class="sxs-lookup"><span data-stu-id="618e0-246">If <see langword="false" />, generate @p1, @p2, and so on.</span></span></param>
        <summary><span data-ttu-id="618e0-247">Obtiene el objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar actualizaciones en el origen de datos, utilizando opcionalmente columnas para los nombres de parámetro.</span><span class="sxs-lookup"><span data-stu-id="618e0-247">Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates at the data source, optionally using columns for parameter names.</span></span></summary>
        <returns><span data-ttu-id="618e0-248">Objeto <see cref="T:System.Data.Common.DbCommand" /> generado automáticamente que es necesario para realizar actualizaciones.</span><span class="sxs-lookup"><span data-stu-id="618e0-248">The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="618e0-249">Una aplicación puede utilizar el <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> método de información o solucionar problemas porque devuelve la <xref:System.Data.Common.DbCommand> objeto va a ejecutar.</span><span class="sxs-lookup"><span data-stu-id="618e0-249">An application can use the <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Common.DbCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="618e0-250">También puede usar <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> como base de un comando modificado.</span><span class="sxs-lookup"><span data-stu-id="618e0-250">You can also use <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="618e0-251">Por ejemplo, puede llamar a <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> y modificar el texto de comando y, a continuación, establezca la explícitamente en el <xref:System.Data.Common.DbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="618e0-251">For example, you might call <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> and modify command text, and then explicitly set that on the <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="618e0-252">Después de la instrucción SQL se genera por primera vez, la aplicación debe llamar explícitamente a <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> si se cambia la instrucción en modo alguno.</span><span class="sxs-lookup"><span data-stu-id="618e0-252">After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="618e0-253">En caso contrario, el <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> seguirá utilizando la información de la instrucción anterior, que puede no ser correcta.</span><span class="sxs-lookup"><span data-stu-id="618e0-253">Otherwise, the <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> will still be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="618e0-254">Las instrucciones SQL son primera generan cuando la aplicación llama <xref:System.Data.Common.DbDataAdapter.Update%2A> o <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="618e0-254">The SQL statements are first generated either when the application calls <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 <span data-ttu-id="618e0-255">El comportamiento predeterminado, al generar nombres de parámetro, consiste en usar @p1, @p2, y así sucesivamente para los distintos parámetros.</span><span class="sxs-lookup"><span data-stu-id="618e0-255">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="618e0-256">Pasar `true` para el `useColumnsForParameterNames` parámetro permite forzar la <xref:System.Data.Common.DbCommandBuilder> para generar los parámetros basados en los nombres de columna en su lugar.</span><span class="sxs-lookup"><span data-stu-id="618e0-256">Passing `true` for the `useColumnsForParameterNames` parameter allows you to force the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="618e0-257">Generación de los parámetros basados en nombres de columna se realiza correctamente solo si se cumplen las condiciones siguientes:</span><span class="sxs-lookup"><span data-stu-id="618e0-257">Generation of the parameters based on column names succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="618e0-258">El <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> se ha especificado y su longitud es igual o mayor que el nombre del parámetro generado.</span><span class="sxs-lookup"><span data-stu-id="618e0-258">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="618e0-259">El nombre de parámetro generado cumple los criterios especificados en la <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> expresión regular.</span><span class="sxs-lookup"><span data-stu-id="618e0-259">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="618e0-260">Un <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> se especifica.</span><span class="sxs-lookup"><span data-stu-id="618e0-260">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeCommand">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.DbCommand InitializeCommand (System.Data.Common.DbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DbCommand InitializeCommand(class System.Data.Common.DbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function InitializeCommand (command As DbCommand) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::DbCommand ^ InitializeCommand(System::Data::Common::DbCommand ^ command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="618e0-261"><see cref="T:System.Data.Common.DbCommand" /> que va a utilizar el generador de comandos para el correspondiente comando de inserción, actualización o eliminación.</span><span class="sxs-lookup"><span data-stu-id="618e0-261">The <see cref="T:System.Data.Common.DbCommand" /> to be used by the command builder for the corresponding insert, update, or delete command.</span></span></param>
        <summary><span data-ttu-id="618e0-262">Restablece las propiedades <see cref="P:System.Data.Common.DbCommand.CommandTimeout" />, <see cref="P:System.Data.Common.DbCommand.Transaction" />, <see cref="P:System.Data.Common.DbCommand.CommandType" /> y <see cref="T:System.Data.UpdateRowSource" /> en el objeto <see cref="T:System.Data.Common.DbCommand" />.</span><span class="sxs-lookup"><span data-stu-id="618e0-262">Resets the <see cref="P:System.Data.Common.DbCommand.CommandTimeout" />, <see cref="P:System.Data.Common.DbCommand.Transaction" />, <see cref="P:System.Data.Common.DbCommand.CommandType" />, and <see cref="T:System.Data.UpdateRowSource" /> properties on the <see cref="T:System.Data.Common.DbCommand" />.</span></span></summary>
        <returns><span data-ttu-id="618e0-263">Instancia de <see cref="T:System.Data.Common.DbCommand" /> que se va a utilizar para cada operación de inserción, actualización o eliminación.</span><span class="sxs-lookup"><span data-stu-id="618e0-263">A <see cref="T:System.Data.Common.DbCommand" /> instance to use for each insert, update, or delete operation.</span></span> <span data-ttu-id="618e0-264">Si se pasa un valor null, el método <see cref="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" /> puede crear un objeto <see cref="T:System.Data.Common.DbCommand" /> basado en el comando Select asociado al objeto <see cref="T:System.Data.Common.DbCommandBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="618e0-264">Passing a null value allows the <see cref="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" /> method to create a <see cref="T:System.Data.Common.DbCommand" /> object based on the Select command associated with the <see cref="T:System.Data.Common.DbCommandBuilder" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="618e0-265">Este método está pensado para su uso por los escritores de proveedores compilar un generador de comandos personalizado.</span><span class="sxs-lookup"><span data-stu-id="618e0-265">This method is intended for use by provider writers building a custom command builder.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public virtual string QuoteIdentifier (string unquotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string QuoteIdentifier(string unquotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QuoteIdentifier (unquotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier"><span data-ttu-id="618e0-266">Identificador original sin comillas.</span><span class="sxs-lookup"><span data-stu-id="618e0-266">The original unquoted identifier.</span></span></param>
        <summary><span data-ttu-id="618e0-267">Dado un identificador sin comillas en el caso de un catálogo correcto, devuelve el formato correcto entrecomillado de ese identificador, incluyendo una secuencia de escape adecuada para las comillas incrustadas en el identificador.</span><span class="sxs-lookup"><span data-stu-id="618e0-267">Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier, including properly escaping any embedded quotes in the identifier.</span></span></summary>
        <returns><span data-ttu-id="618e0-268">Versión entrecomillada del identificador.</span><span class="sxs-lookup"><span data-stu-id="618e0-268">The quoted version of the identifier.</span></span> <span data-ttu-id="618e0-269">Se crea una secuencia de escape adecuada para las comillas incrustadas dentro del identificador.</span><span class="sxs-lookup"><span data-stu-id="618e0-269">Embedded quotes within the identifier are properly escaped.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuotePrefix">
      <MemberSignature Language="C#" Value="public virtual string QuotePrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QuotePrefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.QuotePrefix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property QuotePrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ QuotePrefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="618e0-270">Obtiene o establece el carácter o los caracteres iniciales que se van a utilizar al especificar objetos de base de datos (por ejemplo, tablas o columnas), cuyos nombres contengan caracteres como espacios o símbolos (token) reservados.</span><span class="sxs-lookup"><span data-stu-id="618e0-270">Gets or sets the beginning character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.</span></span></summary>
        <value><span data-ttu-id="618e0-271">Caracteres iniciales que se van a utilizar.</span><span class="sxs-lookup"><span data-stu-id="618e0-271">The beginning character or characters to use.</span></span> <span data-ttu-id="618e0-272">El valor predeterminado es una cadena vacía.</span><span class="sxs-lookup"><span data-stu-id="618e0-272">The default is an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="618e0-273">Algunos orígenes de datos pueden tener objetos que pueden contener caracteres como espacios, comas y puntos y comas.</span><span class="sxs-lookup"><span data-stu-id="618e0-273">Some data sources may have objects that can contain characters such as spaces, commas, and semicolons.</span></span> <span data-ttu-id="618e0-274">Para admitir esta capacidad, utilice la <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> y <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> propiedades para especificar delimitadores como un corchete de apertura o un corchete de cierre para encapsular el nombre del objeto.</span><span class="sxs-lookup"><span data-stu-id="618e0-274">To accommodate this capability, use the <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> and <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> properties to specify delimiters such as a left bracket and a right bracket to encapsulate the object name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="618e0-275">Aunque no se puede cambiar la <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> o <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> propiedades después de una instrucción insert, update o delete se ha generado el comando, se pueden cambiar sus valores después de llamar a la `Update` método de un <xref:System.Data.Common.DbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="618e0-275">Although you cannot change the <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> or <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> properties after an insert, update, or delete command has been generated, you can change their settings after calling the `Update` method of a <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="618e0-276">Esta propiedad no se puede cambiar después de generar un comando de inserción, actualización o eliminación.</span><span class="sxs-lookup"><span data-stu-id="618e0-276">This property cannot be changed after an insert, update, or delete command has been generated.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="QuoteSuffix">
      <MemberSignature Language="C#" Value="public virtual string QuoteSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QuoteSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.QuoteSuffix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property QuoteSuffix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ QuoteSuffix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="618e0-277">Obtiene o establece el carácter o los caracteres finales que se van a usar al especificar los objetos de base de datos (por ejemplo, tablas o columnas) cuyos nombres contienen caracteres como espacios o tokens reservados.</span><span class="sxs-lookup"><span data-stu-id="618e0-277">Gets or sets the ending character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.</span></span></summary>
        <value><span data-ttu-id="618e0-278">Caracteres finales que se van a utilizar.</span><span class="sxs-lookup"><span data-stu-id="618e0-278">The ending character or characters to use.</span></span> <span data-ttu-id="618e0-279">El valor predeterminado es una cadena vacía.</span><span class="sxs-lookup"><span data-stu-id="618e0-279">The default is an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="618e0-280">Algunos orígenes de datos pueden tener objetos que pueden contener caracteres como espacios, comas y puntos y comas.</span><span class="sxs-lookup"><span data-stu-id="618e0-280">Some data sources may have objects that can contain characters such as spaces, commas, and semicolons.</span></span> <span data-ttu-id="618e0-281">Para admitir esta capacidad, utilice la <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> y <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> propiedades para especificar delimitadores como un corchete de apertura o un corchete de cierre para encapsular el nombre del objeto.</span><span class="sxs-lookup"><span data-stu-id="618e0-281">To accommodate this capability, use the <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> and <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> properties to specify delimiters such as a left bracket and a right bracket to encapsulate the object name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="618e0-282">Aunque no se puede cambiar la <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> o <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> propiedades después de una instrucción insert, update o delete se ha generado el comando, se pueden cambiar sus valores después de llamar a la `Update` método de un <xref:System.Data.Common.DbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="618e0-282">Although you cannot change the <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> or <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> properties after an insert, update, or delete command has been generated, you can change their settings after calling the `Update` method of a <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshSchema">
      <MemberSignature Language="C#" Value="public virtual void RefreshSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RefreshSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.RefreshSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RefreshSchema ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RefreshSchema();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="618e0-283">Borra los comandos asociados a este <see cref="T:System.Data.Common.DbCommandBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="618e0-283">Clears the commands associated with this <see cref="T:System.Data.Common.DbCommandBuilder" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="618e0-284">Llamando a la <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> método elimina de forma eficaz todos los <xref:System.Data.Common.DbCommand> objetos que hace referencia el <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>,</span><span class="sxs-lookup"><span data-stu-id="618e0-284">Calling the <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> method effectively removes all the <xref:System.Data.Common.DbCommand> objects referred to by the <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>,</span></span>  
  
 <span data-ttu-id="618e0-285"><xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A>,</span><span class="sxs-lookup"><span data-stu-id="618e0-285"><xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A>,</span></span>  
  
 <span data-ttu-id="618e0-286"><xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A> y </span><span class="sxs-lookup"><span data-stu-id="618e0-286"><xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A>, and</span></span>  
  
 <span data-ttu-id="618e0-287">Propiedades de <xref:System.Data.Common.DbDataAdapter.InsertCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="618e0-287"><xref:System.Data.Common.DbDataAdapter.InsertCommand%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected void RowUpdatingHandler (System.Data.Common.RowUpdatingEventArgs rowUpdatingEvent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RowUpdatingHandler(class System.Data.Common.RowUpdatingEventArgs rowUpdatingEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RowUpdatingHandler (rowUpdatingEvent As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RowUpdatingHandler(System::Data::Common::RowUpdatingEventArgs ^ rowUpdatingEvent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowUpdatingEvent" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="rowUpdatingEvent"><span data-ttu-id="618e0-288">Instancia de <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> que contiene información sobre el evento.</span><span class="sxs-lookup"><span data-stu-id="618e0-288">A <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> instance containing information about the event.</span></span></param>
        <summary><span data-ttu-id="618e0-289">Agrega un controlador de eventos para el evento <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" />.</span><span class="sxs-lookup"><span data-stu-id="618e0-289">Adds an event handler for the <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaSeparator">
      <MemberSignature Language="C#" Value="public virtual string SchemaSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SchemaSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.SchemaSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SchemaSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SchemaSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(".")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="618e0-290">Obtiene o establece el carácter que se va a utilizar para el separador entre el identificador de esquema y cualquier otro identificador.</span><span class="sxs-lookup"><span data-stu-id="618e0-290">Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.</span></span></summary>
        <value><span data-ttu-id="618e0-291">Carácter que se va a utilizar como separador de esquema.</span><span class="sxs-lookup"><span data-stu-id="618e0-291">The character to be used as the schema separator.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="618e0-292">Generalmente, los servidores de base de datos indican el esquema para un identificador separando el nombre del esquema del identificador con algún carácter.</span><span class="sxs-lookup"><span data-stu-id="618e0-292">Generally, database servers indicate the schema for an identifier by separating the schema name from the identifier with some character.</span></span> <span data-ttu-id="618e0-293">Por ejemplo, SQL Server utiliza un signo de dos puntos, creando identificadores completos como **persona: NombreCliente**, donde "Persona" es el nombre del esquema y "NombreCliente" es el identificador.</span><span class="sxs-lookup"><span data-stu-id="618e0-293">For example, SQL Server uses a colon, creating complete identifiers such as **Person:CustomerName**, where "Person" is the schema name and "CustomerName" is the identifier.</span></span> <span data-ttu-id="618e0-294">Al establecer esta propiedad permite a los programadores modificar este comportamiento.</span><span class="sxs-lookup"><span data-stu-id="618e0-294">Setting this property allows developers to modify this behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAllValues">
      <MemberSignature Language="C#" Value="public bool SetAllValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SetAllValues" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.SetAllValues" />
      <MemberSignature Language="VB.NET" Value="Public Property SetAllValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SetAllValues { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="618e0-295">Especifica si en una instrucción de actualización se incluyen todos los valores de columna o sólo los que han cambiado.</span><span class="sxs-lookup"><span data-stu-id="618e0-295">Specifies whether all column values in an update statement are included or only changed ones.</span></span></summary>
        <value>
          <span data-ttu-id="618e0-296"><see langword="true" /> si la instrucción UPDATE que genera <see cref="T:System.Data.Common.DbCommandBuilder" /> incluye todas las columnas; <see langword="false" /> si sólo incluye las columnas cambiadas.</span><span class="sxs-lookup"><span data-stu-id="618e0-296"><see langword="true" /> if the UPDATE statement generated by the <see cref="T:System.Data.Common.DbCommandBuilder" /> includes all columns; <see langword="false" /> if it includes only changed columns.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="618e0-297">La instrucción de actualización generada por un <xref:System.Data.Common.DbCommandBuilder> puede incluir información de actualización sobre todas las columnas, o puede incluir sólo la información sobre las columnas cuyos valores han cambiado.</span><span class="sxs-lookup"><span data-stu-id="618e0-297">The UPDATE statement generated by a <xref:System.Data.Common.DbCommandBuilder> can include update information about all the columns, or it can include information only about those columns whose values have changed.</span></span> <span data-ttu-id="618e0-298">Establecer el <xref:System.Data.Common.DbCommandBuilder.SetAllValues%2A> propiedad `true` hace que la instrucción UPDATE generada incluir todas las columnas, si sus valores han cambiado o no.</span><span class="sxs-lookup"><span data-stu-id="618e0-298">Setting the <xref:System.Data.Common.DbCommandBuilder.SetAllValues%2A> property to `true` causes the generated UPDATE statement to include all the columns, whether their values have changed or not.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected abstract void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetRowUpdatingHandler(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub SetRowUpdatingHandler (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void SetRowUpdatingHandler(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter"><span data-ttu-id="618e0-299"><see cref="T:System.Data.Common.DbDataAdapter" /> que se va a utilizar para la actualización.</span><span class="sxs-lookup"><span data-stu-id="618e0-299">The <see cref="T:System.Data.Common.DbDataAdapter" /> to be used for the update.</span></span></param>
        <summary><span data-ttu-id="618e0-300">Registra el objeto <see cref="T:System.Data.Common.DbCommandBuilder" /> para controlar el evento <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> de un objeto <see cref="T:System.Data.Common.DbDataAdapter" />.</span><span class="sxs-lookup"><span data-stu-id="618e0-300">Registers the <see cref="T:System.Data.Common.DbCommandBuilder" /> to handle the <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> event for a <see cref="T:System.Data.Common.DbDataAdapter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="618e0-301">Este método está pensado para su uso por los escritores de proveedores compilar un generador de comandos personalizado.</span><span class="sxs-lookup"><span data-stu-id="618e0-301">This method is intended for use by provider writers building a custom command builder.</span></span> <span data-ttu-id="618e0-302">Cuando una nueva <xref:System.Data.Common.DbDataAdapter> se agrega a la <xref:System.Data.Common.DbCommandBuilder>, se registra para el DbDataAdapter **RowUpdating** eventos.</span><span class="sxs-lookup"><span data-stu-id="618e0-302">When a new <xref:System.Data.Common.DbDataAdapter> is added to the <xref:System.Data.Common.DbCommandBuilder>, it is registered for the DbDataAdapter's **RowUpdating** event.</span></span> <span data-ttu-id="618e0-303">Si este método se llama de nuevo con el mismo <xref:System.Data.Common.DbDataAdapter>, <xref:System.Data.Common.DbCommandBuilder> no está registrado para ese DbDataAdapter **RowUpdating** eventos.</span><span class="sxs-lookup"><span data-stu-id="618e0-303">If this method is called again with the same <xref:System.Data.Common.DbDataAdapter>, the <xref:System.Data.Common.DbCommandBuilder> is unregistered for that DbDataAdapter's **RowUpdating** event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public virtual string UnquoteIdentifier (string quotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string UnquoteIdentifier(string quotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UnquoteIdentifier (quotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier"><span data-ttu-id="618e0-304">Identificador del que se van a quitar las comillas incrustadas.</span><span class="sxs-lookup"><span data-stu-id="618e0-304">The identifier that will have its embedded quotes removed.</span></span></param>
        <summary><span data-ttu-id="618e0-305">Dado un identificador entre comillas, devuelve el formato correcto sin comillas de ese identificador, incluyendo una secuencia sin escape adecuada para las comillas incrustadas en el identificador.</span><span class="sxs-lookup"><span data-stu-id="618e0-305">Given a quoted identifier, returns the correct unquoted form of that identifier, including properly un-escaping any embedded quotes in the identifier.</span></span></summary>
        <returns><span data-ttu-id="618e0-306">Identificador sin comillas, del que también se han quitado adecuadamente las comillas incrustadas.</span><span class="sxs-lookup"><span data-stu-id="618e0-306">The unquoted identifier, with embedded quotes properly un-escaped.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>