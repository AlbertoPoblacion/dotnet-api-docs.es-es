<Type Name="DataAdapter" FullName="System.Data.Common.DataAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c2ebaa8f380dc7733c8d56b9c4a0aaeacc1dfa2e" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
    <Meta Name="ms.locfileid" Value="32037831" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataAdapter : System.ComponentModel.Component, System.Data.IDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataAdapter extends System.ComponentModel.Component implements class System.Data.IDataAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Class DataAdapter&#xA;Inherits Component&#xA;Implements IDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataAdapter : System::ComponentModel::Component, System::Data::IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Representa un conjunto de comandos SQL y una conexión a una base de datos que se usan para rellenar <see cref="T:System.Data.DataSet" /> y actualizar el origen de datos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.Common.DataAdapter> actúa como puente entre un <xref:System.Data.DataSet> y un origen de datos para recuperar y guardar los datos. El <xref:System.Data.Common.DataAdapter> proporciona este puente mediante la asignación de <xref:System.Data.Common.DataAdapter.Fill%2A>, que cambia los datos en el <xref:System.Data.DataSet> para que coincida con los datos del origen de datos, y <xref:System.Data.IDataAdapter.Update%2A>, que cambia los datos en el origen de datos para que coincida con los datos en el <xref:System.Data.DataSet>.  
  
 Si se conecta a una base de datos de SQL Server, puede aumentar el rendimiento general mediante la <xref:System.Data.SqlClient.SqlDataAdapter> junto con sus asociados <xref:System.Data.SqlClient.SqlCommand> y <xref:System.Data.SqlClient.SqlConnection> objetos. Para los orígenes de datos compatibles con OLE DB, utilice el <xref:System.Data.Common.DataAdapter> con su asociado <xref:System.Data.OleDb.OleDbCommand> y <xref:System.Data.OleDb.OleDbConnection> objetos. Para los orígenes de datos compatibles con ODBC, utilice la <xref:System.Data.Common.DataAdapter> con su asociado <xref:System.Data.Odbc.OdbcCommand> y <xref:System.Data.Odbc.OdbcConnection> objetos. Bases de datos de Oracle, use la <xref:System.Data.Common.DataAdapter> con su asociado <xref:System.Data.OracleClient.OracleCommand> y <xref:System.Data.OracleClient.OracleConnection> objetos.  
  
 Cuando una instancia de <xref:System.Data.Common.DataAdapter> se crea la lectura y escritura propiedades se establecen en sus valores iniciales. Para obtener una lista de estos valores, consulte el <xref:System.Data.Common.DataAdapter> constructor.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de una clase <see cref="T:System.Data.Common.DataAdapter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de una clase <see cref="T:System.Data.Common.DataAdapter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando una instancia de <xref:System.Data.Common.DataAdapter> se crea los siguientes propiedades se establecen en los siguientes valores iniciales de lectura/escritura.  
  
|Propiedades|Valor inicial|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
|<xref:System.Data.Common.DataAdapter.TableMappings%2A>|Matriz de objetos <xref:System.Data.Common.DataAdapter.TableMappings%2A>.|  
  
 Puede cambiar el valor de cualquiera de estas propiedades mediante una llamada independiente a la propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataAdapter (System.Data.Common.DataAdapter from);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DataAdapter from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (from As DataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataAdapter(System::Data::Common::DataAdapter ^ from);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="from" Type="System.Data.Common.DataAdapter" />
      </Parameters>
      <Docs>
        <param name="from">Objeto <see cref="T:System.Data.Common.DataAdapter" /> utilizado para crear el nuevo <see cref="T:System.Data.Common.DataAdapter" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DataAdapter" /> a partir de un objeto existente del mismo tipo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta sobrecarga de la <xref:System.Data.Common.DataAdapter> constructor está diseñado para su uso por un proveedor de datos de .NET Framework cuando se implementa un constructor similar para utilizarlo en una implementación de clonación.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptChangesDuringFill">
      <MemberSignature Language="C#" Value="public bool AcceptChangesDuringFill { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptChangesDuringFill" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptChangesDuringFill As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptChangesDuringFill { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se llama a <see cref="M:System.Data.DataRow.AcceptChanges" /> en un elemento <see cref="T:System.Data.DataRow" /> después de agregarlo a <see cref="T:System.Data.DataTable" /> durante cualquiera de las operaciones **Fill**.</summary>
        <value>
          <see langword="true" /> si se llama a <see cref="M:System.Data.DataRow.AcceptChanges" /> en <see cref="T:System.Data.DataRow" />; de lo contrario, <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `false`, <xref:System.Data.DataRow.AcceptChanges%2A> no se llama, y las filas recién agregadas se tratan como filas insertadas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptChangesDuringUpdate">
      <MemberSignature Language="C#" Value="public bool AcceptChangesDuringUpdate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptChangesDuringUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptChangesDuringUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptChangesDuringUpdate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece si se llama a <see cref="M:System.Data.DataRow.AcceptChanges" /> durante una operación <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" />.</summary>
        <value>
          <see langword="true" /> si se llama a <see cref="M:System.Data.DataRow.AcceptChanges" /> durante una operación <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" />; de lo contrario, <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durante una llamada a la `Update` método de una `DataAdapter`, la base de datos puede enviar datos a la aplicación de ADO.NET como parámetros de salida o como el primer registro devuelto de un conjunto de resultados. ADO.NET puede recuperar estos valores y actualizar las columnas correspondientes en el <xref:System.Data.DataRow> que se está actualizando. De forma predeterminada, ADO.NET llama el `AcceptChanges` método de la `DataRow` después de la actualización. Sin embargo, si desea combinar la fila actualizada se copia en otro <xref:System.Data.DataTable>, puede que desee para conservar el valor original de una columna de clave principal. Por ejemplo, una columna de clave principal correspondiente a una columna incrementa automáticamente en la base de datos, como una columna de identidad, puede contener nuevos valores que se asignan a la base de datos que no coincide con los valores originales que se asignan en el `DataRow`. De forma predeterminada, `AcceptChanges` se llama implícitamente después de una actualización y los valores originales de la fila, que pueden haber sido <xref:System.Data.DataColumn.AutoIncrement%2A> valores asignados por ADO.NET, se pierden. Puede conservar los valores originales de la `DataRow` evitando `ADO.NET` de llamar al método `AcceptChanges` después de realizar una actualización en una fila, estableciendo el <xref:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate%2A> propiedad `false`, que conserva los valores originales.  
  
> [!NOTE]
>  Establecer el `AcceptChangesDuringUpdate` propiedad `false` se aplica a todas las modificaciones de datos, no solo se inserta. Si desea modificar o eliminar filas en la misma actualización, y si desea suprimir la llamada a `AcceptChanges` sólo para las inserciones, a continuación, en lugar de establecer `AccceptChangesDuringUpdate` a `false`, use un controlador de eventos para el `RowUpdated` eventos de la `DataAdapter`. En el evento controlador puede comprobar la <xref:System.Data.Common.RowUpdatedEventArgs.StatementType%2A> para determinar si la modificación de datos es una inserción y si `true`, establezca el <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> propiedad de la <xref:System.Data.Common.RowUpdatedEventArgs> a <xref:System.Data.UpdateStatus.SkipCurrentRow>. Para obtener más información y un ejemplo, vea [recuperar identidad o valores Autonuméricos](~/docs/framework/data/adonet/retrieving-identity-or-autonumber-values.md).  
  
   
  
## Examples  
 Este ejemplo muestra la extracción de filas modificadas desde `DataTable` y el uso de <xref:System.Data.SqlClient.SqlDataAdapter> para actualizar el origen de datos y recuperar un nuevo valor de columna de identidad. Estableciendo la `AcceptChangesDuringUpdate` propiedad de la <xref:System.Data.SqlClient.SqlDataAdapter> a `false` para conservar el valor de incremento automático original, los nuevos datos se pueden combinar, a continuación, en la versión original <xref:System.Data.DataTable>, incluso si el nuevo valor de identidad no coincide con el incremento automático original valor de la `DataTable`.  
  
 [!code-csharp[DataWorks SqlClient.AcceptChangesDuringUpdate#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlClient.AcceptChangesDuringUpdate/CS/source.cs#1)]
 [!code-vb[DataWorks SqlClient.AcceptChangesDuringUpdate#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlClient.AcceptChangesDuringUpdate/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneInternals">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.DataAdapter CloneInternals ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DataAdapter CloneInternals() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.CloneInternals" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CloneInternals () As DataAdapter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::DataAdapter ^ CloneInternals();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("CloneInternals() has been deprecated.  Use the DataAdapter(DataAdapter from) constructor.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DataAdapter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una copia de esta instancia de <see cref="T:System.Data.Common.DataAdapter" />.</summary>
        <returns>Instancia clonada de <see cref="T:System.Data.Common.DataAdapter" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método es obsoleto. El <xref:System.Data.Common.DataAdapter.%23ctor%2A> constructor se debe utilizar en lugar de este método.  
  
 Todos los comandos, el <xref:System.Data.Common.DataAdapter.TableMappings%2A>, <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>y el <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A> se clonan. Sin embargo, las conexiones de los comandos no se copian, sino que se comparten. Por lo tanto, clonado <xref:System.Data.Common.DataAdapter> se pueden usar con la misma conexión que el original.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Al reemplazar <see cref="M:System.Data.Common.DataAdapter.CloneInternals" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Data.Common.DataAdapter.CloneInternals" /> método.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ContinueUpdateOnError">
      <MemberSignature Language="C#" Value="public bool ContinueUpdateOnError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ContinueUpdateOnError" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DataAdapter.ContinueUpdateOnError" />
      <MemberSignature Language="VB.NET" Value="Public Property ContinueUpdateOnError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ContinueUpdateOnError { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que especifica si debe generarse una excepción cuando se produce un error durante una actualización de fila.</summary>
        <value>
          Es <see langword="true" /> para reanudar la actualización sin generar una excepción, en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `ContinueUpdateOnError` se establece en `true`, se inicia ninguna excepción cuando se produce un error durante la actualización de una fila. Se omitió la actualización de la fila y la información de error se coloca en el <xref:System.Data.DataRow.RowError%2A> propiedad de la fila de error. La <xref:System.Data.Common.DataAdapter> continúa actualizando las siguientes filas.  
  
 Si `ContinueUpdateOnError` se establece en `false`, se produce una excepción cuando se produce un error durante la actualización de una fila.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTableMappings">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.DataTableMappingCollection CreateTableMappings ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DataTableMappingCollection CreateTableMappings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.CreateTableMappings" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateTableMappings () As DataTableMappingCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::DataTableMappingCollection ^ CreateTableMappings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DataTableMappingCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un nuevo <see cref="T:System.Data.Common.DataTableMappingCollection" />.</summary>
        <returns>Nueva colección de asignación de la tabla.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
        <summary>Libera los recursos no administrados que usa <see cref="T:System.Data.Common.DataAdapter" /> y, de forma opcional, libera los recursos administrados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se llama a este método público <xref:System.IDisposable.Dispose%2A> método y <xref:System.Object.Finalize%2A> método. `Dispose` se invoca el protegido `Dispose(Boolean)` método con el `disposing` parámetro establecido en `true`. <xref:System.Object.Finalize%2A> invoca `Dispose` con `disposing` establecido en `false`.  
  
 Cuando el parámetro `disposing` es `true`, este método libera todos los recursos retenidos por los objetos administrados a los que el control <xref:System.Data.Common.DataAdapter> hace referencia. Este método invoca al método `Dispose` de cada uno de los objetos a los que se hace referencia.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> puede recibir varias llamadas de otros objetos. Al reemplazar <see langword="Dispose(Boolean)" />, tenga cuidado de no hacer referencia a objetos que se han eliminado en una llamada anterior a <see langword="Dispose" />. Para obtener más información sobre cómo implementar <see langword="Dispose(Boolean)" />, consulte [implementa un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
 Para obtener más información acerca de <see langword="Dispose" /> y <see cref="M:System.Object.Finalize" />, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [reemplazar el método Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fill">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Agrega o actualiza las filas del objeto <see cref="T:System.Data.DataSet" /> para que se correspondan con las del origen de datos.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public virtual int Fill (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Fill(System::Data::DataSet ^ dataSet);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Fill(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet">Clase <see cref="T:System.Data.DataSet" /> que se va a rellenar con registros y, si es necesario, con un esquema.</param>
        <summary>Agrega o actualiza las filas del objeto <see cref="T:System.Data.DataSet" /> para que se correspondan con las del origen de datos.</summary>
        <returns>Número de filas agregadas o actualizadas correctamente en la clase <see cref="T:System.Data.DataSet" />. No se incluyen las filas afectadas por instrucciones que no devuelven filas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.Common.DataAdapter.Fill%2A> método recupera filas del origen de datos mediante la instrucción SELECT especificada por un asociado <xref:System.Data.IDbDataAdapter.SelectCommand%2A> propiedad. El objeto de conexión asociado a la instrucción SELECT debe ser válido, pero no es necesario que esté abierto. Si la conexión se cerró antes de <xref:System.Data.Common.DataAdapter.Fill%2A> es llama, se abre para recuperar datos, a continuación, se cierra. Si la conexión está abierta antes de <xref:System.Data.Common.DataAdapter.Fill%2A> es llama, permanece abierta.  
  
 El <xref:System.Data.Common.DataAdapter.Fill%2A> operación, a continuación, agrega las filas al destino <xref:System.Data.DataTable> objetos en el <xref:System.Data.DataSet>, creando la <xref:System.Data.DataTable> objetos si aún no existen. Al crear <xref:System.Data.DataTable> objetos, la <xref:System.Data.Common.DataAdapter.Fill%2A> operación suele crear únicamente metadatos de nombre de columna. Sin embargo, si la <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> propiedad está establecida en `AddWithKey`, también se crean claves principales adecuadas y restricciones.  
  
 Si `SelectCommand` devuelve los resultados de OUTER JOIN, `DataAdapter` no establece un valor <xref:System.Data.DataTable.PrimaryKey%2A> para el objeto <xref:System.Data.DataTable> resultante. Debe definir explícitamente la clave principal para asegurarse de que las filas duplicadas se resuelven correctamente. Para obtener más información, consulte [definir claves principales](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).  
  
 Si el adaptador de datos detecta columnas duplicadas al rellenar un <xref:System.Data.DataTable>, genera nombres para las columnas siguientes, utilizando el patrón "columnname1", "columnname2", "nombredecolumna3" y así sucesivamente. Si los datos entrantes contienen columnas sin nombre, se colocan en la <xref:System.Data.DataSet> según el modelo "Columna1", "Columna2" y así sucesivamente. Cuando se agregan varios conjuntos de resultados a la <xref:System.Data.DataSet> cada conjunto de resultados se coloca en una tabla independiente. Conjuntos de resultados adicionales se denominan agregando valores enteros al nombre de tabla especificado (por ejemplo, "Table", "Tabla1", "Tabla2" y así sucesivamente). Las aplicaciones que usan nombres de tabla y columna deben asegurarse de que no haya conflictos con estos modelos de nomenclatura.  
  
 Si la instrucción SELECT utilizada para rellenar el <xref:System.Data.DataSet> devuelve varios resultados, como un lote de instrucciones SQL, si uno de los resultados contiene un error, todos los resultados posteriores se omiten y no se agrega a la <xref:System.Data.DataSet>.  
  
 Puede usar el <xref:System.Data.Common.DataAdapter.Fill%2A> método varias veces en la misma <xref:System.Data.DataTable>. Si existe una clave principal, las filas entrantes se combinan con filas coincidentes que ya existen. Si no existe ninguna clave principal, las filas entrantes se anexan a la <xref:System.Data.DataTable>.  
  
> [!NOTE]
>  Al controlar instrucciones SQL por lotes que devuelven varios resultados, la implementación de <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> para el proveedor de datos de .NET Framework para OLE DB recupera información de esquema para sólo el primer resultado. Para recuperar información de esquema de varios resultados, utilice <xref:System.Data.Common.DbDataAdapter.Fill%2A> con el <xref:System.Data.MissingSchemaAction> establecido en `AddWithKey`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDataReader dataReader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable dataTable, class System.Data.IDataReader dataReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataTable ^ dataTable, System::Data::IDataReader ^ dataReader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" />
      </Parameters>
      <Docs>
        <param name="dataTable">Objeto <see cref="T:System.Data.DataTable" /> que se va a llenar de registros.</param>
        <param name="dataReader">Instancia de <see cref="T:System.Data.IDataReader" />.</param>
        <summary>Agrega filas al objeto <see cref="T:System.Data.DataTable" /> o las actualiza para hacerlas coincidir con las del origen de datos, utilizando el nombre de <see cref="T:System.Data.DataTable" /> y la interfaz <see cref="T:System.Data.IDataReader" /> especificada.</summary>
        <returns>Número de filas agregadas o actualizadas correctamente en la clase <see cref="T:System.Data.DataTable" />. No se incluyen las filas afectadas por instrucciones que no devuelven filas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vea la sección Comentarios para `System.Data.Common.DataAdapter.Fill(System.Data.DataSet)` para obtener información adicional.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable[] dataTables, System.Data.IDataReader dataReader, int startRecord, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable[] dataTables, class System.Data.IDataReader dataReader, int32 startRecord, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Fill (dataTables As DataTable(), dataReader As IDataReader, startRecord As Integer, maxRecords As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables, System::Data::IDataReader ^ dataReader, int startRecord, int maxRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dataTables">Colección de objetos <see cref="T:System.Data.DataTable" /> que se va a llenar de registros.</param>
        <param name="dataReader">Instancia de <see cref="T:System.Data.IDataReader" />.</param>
        <param name="startRecord">Índice de base cero de la búsqueda del registro inicial.</param>
        <param name="maxRecords">Entero que indica el máximo número de registros.</param>
        <summary>Agrega filas en un intervalo especificado de la colección de objetos <see cref="T:System.Data.DataTable" /> o las actualiza para hacerlas coincidir con las filas del origen de datos.</summary>
        <returns>Número de filas agregadas o actualizadas correctamente en la clase <see cref="T:System.Data.DataTable" />. No se incluyen las filas afectadas por instrucciones que no devuelven filas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vea la sección Comentarios para `System.Data.Common.DataAdapter.Fill(System.Data.DataSet)` para obtener información adicional.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataSet dataSet, string srcTable, System.Data.IDataReader dataReader, int startRecord, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet, string srcTable, class System.Data.IDataReader dataReader, int32 startRecord, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataSet ^ dataSet, System::String ^ srcTable, System::Data::IDataReader ^ dataReader, int startRecord, int maxRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dataSet">Objeto <see cref="T:System.Data.DataSet" /> que se va a llenar de registros.</param>
        <param name="srcTable">Cadena que indica el nombre de la tabla de origen.</param>
        <param name="dataReader">Instancia de <see cref="T:System.Data.IDataReader" />.</param>
        <param name="startRecord">Índice de base cero de la búsqueda del registro inicial.</param>
        <param name="maxRecords">Entero que indica el máximo número de registros.</param>
        <summary>Agrega filas en un intervalo especificado de <see cref="T:System.Data.DataSet" /> o las actualiza para hacerlas coincidir con las filas del origen de datos utilizando los nombres de <see cref="T:System.Data.DataSet" /> y <see cref="T:System.Data.DataTable" />.</summary>
        <returns>Número de filas agregadas o actualizadas correctamente en la clase <see cref="T:System.Data.DataSet" />. No se incluyen las filas afectadas por instrucciones que no devuelven filas.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vea la sección Comentarios para `System.Data.Common.DataAdapter.Fill(System.Data.DataSet)` para obtener información adicional.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillError">
      <MemberSignature Language="C#" Value="public event System.Data.FillErrorEventHandler FillError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.FillErrorEventHandler FillError" />
      <MemberSignature Language="DocId" Value="E:System.Data.Common.DataAdapter.FillError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FillError As FillErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::FillErrorEventHandler ^ FillError;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.FillErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se devuelve cuando se produce un error durante una operación de relleno.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El **FillError** evento permite a un usuario determinar si la operación de relleno debe continuar después de producirse el error. Ejemplos de cuándo la **FillError** pueden producirse eventos son:  
  
-   Los datos que se va a agregar a un `DataSet` no se puede convertir a un tipo de common language runtime sin perder precisión.  
  
-   La fila que se agrega contiene datos que infringen una restricción que se debe aplicar en un `DataColumn` en el `DataSet`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillLoadOption">
      <MemberSignature Language="C#" Value="public System.Data.LoadOption FillLoadOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.LoadOption FillLoadOption" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DataAdapter.FillLoadOption" />
      <MemberSignature Language="VB.NET" Value="Public Property FillLoadOption As LoadOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::LoadOption FillLoadOption { System::Data::LoadOption get(); void set(System::Data::LoadOption value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.LoadOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el valor de <see cref="T:System.Data.LoadOption" /> que determina cómo rellena el adaptador el objeto <see cref="T:System.Data.DataTable" /> a partir de <see cref="T:System.Data.Common.DbDataReader" />.</summary>
        <value>Valor <see cref="T:System.Data.LoadOption" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Data.LoadOption" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FillSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Agrega un objeto <see cref="T:System.Data.DataTable" /> al objeto <see cref="T:System.Data.DataSet" /> especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataSet">Clase <see cref="T:System.Data.DataSet" /> que se va a rellenar con el esquema a partir del origen de datos.</param>
        <param name="schemaType">Uno de los valores de <see cref="T:System.Data.SchemaType" />.</param>
        <summary>Agrega <see cref="T:System.Data.DataTable" /> al <see cref="T:System.Data.DataSet" /> especificado y configura el esquema para hacerlo coincidir con el del origen de datos en función del tipo <see cref="T:System.Data.SchemaType" /> especificado.</summary>
        <returns>Objeto <see cref="T:System.Data.DataTable" /> que contiene la información de esquema devuelta desde el origen de datos.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.Common.DataAdapter.FillSchema%2A> método recupera el esquema de origen de datos mediante el <xref:System.Data.IDbDataAdapter.SelectCommand%2A>. El objeto de conexión asociado con el <xref:System.Data.IDbDataAdapter.SelectCommand%2A> debe ser válido, pero no es necesario que esté abierto. Si la conexión se cerró antes de <xref:System.Data.Common.DataAdapter.FillSchema%2A> es llama, que se abrió para recuperar datos y, a continuación, se cierra. Si la conexión está abierta antes de <xref:System.Data.Common.DataAdapter.FillSchema%2A> es llama, permanece abierta.  
  
 A <xref:System.Data.Common.DataAdapter.FillSchema%2A> operación agrega un <xref:System.Data.DataTable> al destino <xref:System.Data.DataSet>. A continuación, agrega columnas a la <xref:System.Data.DataColumnCollection> de la <xref:System.Data.DataTable>y configura las siguientes <xref:System.Data.DataColumn> propiedades si existen en el origen de datos:  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <xref:System.Data.DataColumn.AutoIncrement%2A>. Debe establecer <xref:System.Data.DataColumn.AutoIncrementStep%2A> y <xref:System.Data.DataColumn.AutoIncrementSeed%2A> por separado.  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <xref:System.Data.Common.DataAdapter.FillSchema%2A> también configura el <xref:System.Data.DataTable.PrimaryKey%2A> y <xref:System.Data.DataTable.Constraints%2A> propiedades según las reglas siguientes:  
  
-   Si una o varias columnas de clave principal no se devuelve el <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, se utilizan como columnas de clave principales para el <xref:System.Data.DataTable>.  
  
-   Si no se devuelve ninguna columna de clave principal pero sí columnas únicas, las columnas únicas se usan como clave principal si y solo si todas las columnas únicas son no admiten valores NULL. Si hay alguna de las columnas que aceptan valores NULL, un <xref:System.Data.UniqueConstraint> se agrega a la <xref:System.Data.ConstraintCollection>, pero la <xref:System.Data.DataTable.PrimaryKey%2A> no se establece la propiedad.  
  
-   Si se devuelven columnas de clave principal y columnas únicas, las columnas de clave principales se utilizan como columnas de clave principal para el <xref:System.Data.DataTable>.  
  
> [!NOTE]
>  El almacén de datos subyacente puede permitir que los atributos de columna que no se admiten en un <xref:System.Data.DataColumn>, lo que hace que algunos atributos de columna no se traduzcan correctamente. Por ejemplo, SQL Server permite que una columna de identidad con un tipo de datos tinyint, mientras que un <xref:System.Data.DataColumn> sólo permite Int16, Int32 e Int64 tener la <xref:System.Data.DataColumn.AutoIncrement%2A> del conjunto de propiedades. `FillSchema` en modo silencioso omite los casos donde el <xref:System.Data.DataColumn> no es posible reflejar con precisión el origen de datos y no produce ninguna excepción.  
  
 Tenga en cuenta que las claves principales y las restricciones únicas se agregan a la <xref:System.Data.ConstraintCollection> según las reglas anteriores, pero otra restricción de tipos no se agregan.  
  
Si un clúster un único índice está definido en una o varias columnas en una tabla de SQL Server y la restricción de clave principal se define en un conjunto diferente de columnas, se devolverá los nombres de las columnas en el índice clúster. Para devolver el nombre o nombres de las columnas de clave principal, use una sugerencia de consulta con la instrucción SELECT que especifica el nombre del índice de clave principal. Para obtener más información acerca de cómo especificar sugerencias de consulta, vea [sugerencia de consulta (Transact-SQL)](/sql/t-sql/queries/hints-transact-sql-query).  
  
 Si el <xref:System.Data.Common.DataAdapter> detecta columnas duplicadas al rellenar un <xref:System.Data.DataTable>, genera nombres para las columnas siguientes, utilizando el patrón "*columnname*1", "*columnname*2","*columnname*3", y así sucesivamente. Si los datos entrantes contienen columnas sin nombre, se colocan en la <xref:System.Data.DataSet> según el modelo "Columna1", "Columna2" y así sucesivamente. Cuando se agregan varios conjuntos de resultados a la <xref:System.Data.DataSet> cada conjunto de resultados se coloca en una tabla independiente. Conjuntos de resultados adicionales se denominan agregando valores enteros al nombre de tabla especificado (por ejemplo, "Table", "Tabla1", "Tabla2" y así sucesivamente). Las aplicaciones que usan nombres de tabla y columna deben asegurarse de que no haya conflictos con estos modelos de nomenclatura.  
  
 <xref:System.Data.Common.DataAdapter.FillSchema%2A> no devuelve ninguna fila. Use la <xref:System.Data.Common.DataAdapter.Fill%2A> método para agregar filas a una <xref:System.Data.DataTable>.  
  
> [!NOTE]
>  Al controlar instrucciones SQL por lotes que devuelven varios resultados, la implementación de <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> para el proveedor de datos de .NET Framework para OLE DB recupera información de esquema para sólo el primer resultado. Para recuperar información de esquema de varios resultados, utilice <xref:System.Data.Common.DbDataAdapter.Fill%2A> con el <xref:System.Data.MissingSchemaAction> establecido en `AddWithKey`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)" />
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType, System.Data.IDataReader dataReader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable FillSchema(class System.Data.DataTable dataTable, valuetype System.Data.SchemaType schemaType, class System.Data.IDataReader dataReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataTable ^ FillSchema(System::Data::DataTable ^ dataTable, System::Data::SchemaType schemaType, System::Data::IDataReader ^ dataReader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" />
      </Parameters>
      <Docs>
        <param name="dataTable">Objeto <see cref="T:System.Data.DataTable" /> que se va a rellenar desde la interfaz <see cref="T:System.Data.IDataReader" />.</param>
        <param name="schemaType">Uno de los valores de <see cref="T:System.Data.SchemaType" />.</param>
        <param name="dataReader">Interfaz <see cref="T:System.Data.IDataReader" /> que se va a utilizar como el origen de datos al rellenar el objeto <see cref="T:System.Data.DataTable" />.</param>
        <summary>Agrega un objeto <see cref="T:System.Data.DataTable" /> al objeto <see cref="T:System.Data.DataSet" /> especificado.</summary>
        <returns>Objeto <see cref="T:System.Data.DataTable" /> que contiene la información de esquema devuelta desde el origen de datos.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, string srcTable, System.Data.IDataReader dataReader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType, string srcTable, class System.Data.IDataReader dataReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType, System::String ^ srcTable, System::Data::IDataReader ^ dataReader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" />
      </Parameters>
      <Docs>
        <param name="dataSet">Objeto <see cref="T:System.Data.DataTable" /> que se va a rellenar desde la interfaz <see cref="T:System.Data.IDataReader" />.</param>
        <param name="schemaType">Uno de los valores de <see cref="T:System.Data.SchemaType" />.</param>
        <param name="srcTable">Nombre de la tabla de origen que se utilizará para la asignación de tabla.</param>
        <param name="dataReader">Interfaz <see cref="T:System.Data.IDataReader" /> que se va a utilizar como el origen de datos al rellenar el objeto <see cref="T:System.Data.DataTable" />.</param>
        <summary>Agrega un objeto <see cref="T:System.Data.DataTable" /> al objeto <see cref="T:System.Data.DataSet" /> especificado.</summary>
        <returns>Referencia a una colección de objetos <see cref="T:System.Data.DataTable" /> que se agregaron a <see cref="T:System.Data.DataSet" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFillParameters">
      <MemberSignature Language="C#" Value="public virtual System.Data.IDataParameter[] GetFillParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDataParameter[] GetFillParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.GetFillParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFillParameters () As IDataParameter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Data::IDataParameter ^&gt; ^ GetFillParameters();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.GetFillParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene los parámetros establecidos por el usuario al ejecutar una instrucción SELECT de SQL.</summary>
        <returns>Matriz de objetos <see cref="T:System.Data.IDataParameter" /> que contienen los parámetros establecidos por el usuario.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasTableMappings">
      <MemberSignature Language="C#" Value="protected bool HasTableMappings ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool HasTableMappings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.HasTableMappings" />
      <MemberSignature Language="VB.NET" Value="Protected Function HasTableMappings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool HasTableMappings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica si se ha creado una colección <see cref="T:System.Data.Common.DataTableMappingCollection" />.</summary>
        <returns>
          <see langword="true" /> si se ha creado una colección <see cref="T:System.Data.Common.DataTableMappingCollection" />; en caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MissingMappingAction">
      <MemberSignature Language="C#" Value="public System.Data.MissingMappingAction MissingMappingAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.MissingMappingAction MissingMappingAction" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DataAdapter.MissingMappingAction" />
      <MemberSignature Language="VB.NET" Value="Public Property MissingMappingAction As MissingMappingAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::MissingMappingAction MissingMappingAction { System::Data::MissingMappingAction get(); void set(System::Data::MissingMappingAction value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataAdapter.MissingMappingAction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.MissingMappingAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Determina la acción que hay que llevar a cabo si los datos entrantes no tienen una tabla o una columna coincidente.</summary>
        <value>Uno de los valores de <see cref="T:System.Data.MissingMappingAction" />. El valor predeterminado es <see langword="Passthrough" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.Common.DataAdapter.TableMappings%2A> propiedad proporciona la asignación principal entre los registros devueltos y la <xref:System.Data.DataSet>.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea una clase derivada, <xref:System.Data.OleDb.OleDbDataAdapter> y establece algunas de sus propiedades.  
  
 [!code-csharp[Classic WebData DataAdapter.MissingMappingAction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataAdapter.MissingMappingAction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataAdapter.MissingMappingAction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataAdapter.MissingMappingAction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El valor establecido no es ninguno de los valores de <see cref="T:System.Data.MissingMappingAction" />.</exception>
        <altmember cref="P:System.Data.Common.DataAdapter.MissingSchemaAction" />
      </Docs>
    </Member>
    <Member MemberName="MissingSchemaAction">
      <MemberSignature Language="C#" Value="public System.Data.MissingSchemaAction MissingSchemaAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.MissingSchemaAction MissingSchemaAction" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DataAdapter.MissingSchemaAction" />
      <MemberSignature Language="VB.NET" Value="Public Property MissingSchemaAction As MissingSchemaAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::MissingSchemaAction MissingSchemaAction { System::Data::MissingSchemaAction get(); void set(System::Data::MissingSchemaAction value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataAdapter.MissingSchemaAction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.MissingSchemaAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Determina la acción que hay que llevar a cabo cuando el esquema <see cref="T:System.Data.DataSet" /> existente no coincide con los datos entrantes.</summary>
        <value>Uno de los valores de <see cref="T:System.Data.MissingSchemaAction" />. El valor predeterminado es <see langword="Add" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se crea una clase derivada, <xref:System.Data.OleDb.OleDbDataAdapter> y establece algunas de sus propiedades.  
  
 [!code-csharp[Classic WebData DataAdapter.MissingMappingAction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataAdapter.MissingMappingAction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataAdapter.MissingMappingAction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataAdapter.MissingMappingAction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El valor establecido no es ninguno de los valores de <see cref="T:System.Data.MissingSchemaAction" />.</exception>
        <altmember cref="P:System.Data.Common.DataAdapter.MissingMappingAction" />
      </Docs>
    </Member>
    <Member MemberName="OnFillError">
      <MemberSignature Language="C#" Value="protected virtual void OnFillError (System.Data.FillErrorEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFillError(class System.Data.FillErrorEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFillError (value As FillErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFillError(System::Data::FillErrorEventArgs ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.FillErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">Un objeto <see cref="T:System.Data.FillErrorEventArgs" />.</param>
        <summary>Se invoca cuando se produce un error durante una operación <see langword="Fill" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetFillLoadOption">
      <MemberSignature Language="C#" Value="public void ResetFillLoadOption ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetFillLoadOption() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.ResetFillLoadOption" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetFillLoadOption ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetFillLoadOption();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restablece <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> a su estado predeterminado y hace que <see cref="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)" /> tenga en cuenta <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnProviderSpecificTypes">
      <MemberSignature Language="C#" Value="public virtual bool ReturnProviderSpecificTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReturnProviderSpecificTypes" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DataAdapter.ReturnProviderSpecificTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReturnProviderSpecificTypes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReturnProviderSpecificTypes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el método <see langword="Fill" /> debe devolver valores específicos del proveedor o valores comunes conforme a CLS.</summary>
        <value>
          Es <see langword="true" /> si el método <see langword="Fill" /> debe devolver valores específicos del proveedor; de lo contrario, es <see langword="false" /> para que devuelva valores comunes conforme a CLS.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor predeterminado es `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeAcceptChangesDuringFill">
      <MemberSignature Language="C#" Value="public virtual bool ShouldSerializeAcceptChangesDuringFill ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldSerializeAcceptChangesDuringFill() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldSerializeAcceptChangesDuringFill () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ShouldSerializeAcceptChangesDuringFill();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina si la propiedad <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /> debe persistir.</summary>
        <returns>
          <see langword="true" /> si se conserva la propiedad <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" />; en caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeFillLoadOption">
      <MemberSignature Language="C#" Value="public virtual bool ShouldSerializeFillLoadOption ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldSerializeFillLoadOption() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldSerializeFillLoadOption () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ShouldSerializeFillLoadOption();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina si la propiedad <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> debe persistir.</summary>
        <returns>
          <see langword="true" /> si se conserva la propiedad <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" />; en caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTableMappings">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldSerializeTableMappings ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldSerializeTableMappings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.ShouldSerializeTableMappings" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ShouldSerializeTableMappings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ShouldSerializeTableMappings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determina si uno o más objetos <see cref="T:System.Data.Common.DataTableMapping" /> existen y si deben almacenarse.</summary>
        <returns>
          <see langword="true" /> si existen uno o más objetos <see cref="T:System.Data.Common.DataTableMapping" />; en caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDataAdapter.TableMappings">
      <MemberSignature Language="C#" Value="System.Data.ITableMappingCollection System.Data.IDataAdapter.TableMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.ITableMappingCollection System.Data.IDataAdapter.TableMappings" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property TableMappings As ITableMappingCollection Implements IDataAdapter.TableMappings" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::ITableMappingCollection ^ System.Data.IDataAdapter.TableMappings { System::Data::ITableMappingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataAdapter.TableMappings</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.ITableMappingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indica cómo se asigna una tabla de origen a una tabla de conjuntos de datos.</summary>
        <value>Colección que proporciona la asignación maestra entre los registros devueltos y la clase <see cref="T:System.Data.DataSet" />. El valor predeterminado es una colección vacía.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Data.Common.DataAdapter> se convierte en una interfaz <xref:System.Data.IDataAdapter>.  
  
 Para obtener más información, vea <xref:System.Data.IDataAdapter.TableMappings%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TableMappings">
      <MemberSignature Language="C#" Value="public System.Data.Common.DataTableMappingCollection TableMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DataTableMappingCollection TableMappings" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DataAdapter.TableMappings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TableMappings As DataTableMappingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DataTableMappingCollection ^ TableMappings { System::Data::Common::DataTableMappingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DataTableMappingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una colección que proporciona la asignación principal entre una tabla de origen y <see cref="T:System.Data.DataTable" />.</summary>
        <value>Colección que proporciona la asignación maestra entre los registros devueltos y la clase <see cref="T:System.Data.DataSet" />. El valor predeterminado es una colección vacía.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se reconcilian los cambios, el <xref:System.Data.Common.DataAdapter> utiliza la <xref:System.Data.Common.DataTableMappingCollection> colección para asociar los nombres de columna utilizados por el origen de datos con los nombres de columna utilizados por el <xref:System.Data.DataSet>.  
  
   
  
## Examples  
 En el ejemplo siguiente se utiliza una clase derivada, <xref:System.Data.OleDb.OleDbDataAdapter>, para agregar <xref:System.Data.Common.DataTableMapping> objetos a su <xref:System.Data.Common.DataAdapter.TableMappings%2A> colección y mostrar asigna una lista de las tablas de origen. En este ejemplo se da por supuesto que una <xref:System.Data.OleDb.OleDbDataAdapter> ya se ha creado.  
  
 [!code-csharp[Classic WebData DataAdapter.TableMappings Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataAdapter.TableMappings Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataAdapter.TableMappings Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataAdapter.TableMappings Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual int Update (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Update(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Update(System::Data::DataSet ^ dataSet);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Update(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet">Clase <see cref="T:System.Data.DataSet" /> que se utiliza para actualizar el origen de datos.</param>
        <summary>Llama a las instrucciones INSERT, UPDATE o DELETE respectivas para cada fila insertada, actualizada o eliminada en el objeto <see cref="T:System.Data.DataSet" /> especificado a partir de un objeto <see cref="T:System.Data.DataTable" /> denominado "Table".</summary>
        <returns>Número de filas del <see cref="T:System.Data.DataSet" /> actualizadas correctamente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La actualización se realiza por fila. Para cada fila insertada, modificada y eliminada, el <xref:System.Data.Common.DataAdapter.Update%2A> método determina el tipo de cambio que se ha realizado en ella (Insert, Update o Delete). Según el tipo de cambio, el `Insert`, `Update,` o `Delete` plantilla del comando se ejecuta para propagar la fila modificada en el origen de datos. Cuando una aplicación llama el <xref:System.Data.Common.DataAdapter.Update%2A> método, el <xref:System.Data.Common.DataAdapter> examina la <xref:System.Data.DataRow.RowState%2A> propiedad y ejecuta las instrucciones INSERT, UPDATE o DELETE necesarias forma iterativa para cada fila, según el orden de los índices configurados en el <xref:System.Data.DataSet>. Por ejemplo, <xref:System.Data.Common.DataAdapter.Update%2A> podría ejecutar una instrucción DELETE, seguida de una instrucción INSERT y, a continuación, otra instrucción DELETE, debido al orden de las filas de la <xref:System.Data.DataTable>.  
  
 Se debe tener en cuenta que estas instrucciones no se realizan como un proceso por lotes; cada fila se actualiza individualmente. Una aplicación puede llamar a la <xref:System.Data.DataSet.GetChanges%2A> método en situaciones donde se debe controlar la secuencia de tipos de instrucciones (por ejemplo, insertar antes de la actualización). Para obtener más información, consulte [actualizar orígenes de datos con DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).  
  
 Si no ha especificado las instrucciones INSERT, UPDATE o DELETE, la <xref:System.Data.Common.DataAdapter.Update%2A> método genera una excepción. Sin embargo, puede crear un <xref:System.Data.SqlClient.SqlCommandBuilder> o <xref:System.Data.OleDb.OleDbCommandBuilder> objeto que se va a generar automáticamente las instrucciones SQL para las actualizaciones de tabla única si se establece la `SelectCommand` propiedad de un proveedor de datos de .NET Framework. A continuación, se generan las instrucciones SQL que no se establecen mediante el **CommandBuilder**. Esta lógica de generación requiere información de columna de clave debe estar presente en el <xref:System.Data.DataSet>. Para obtener más información, consulte [generar comandos con objetos CommandBuilder](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 El <xref:System.Data.Common.DataAdapter.Update%2A> método recupera filas de la tabla que aparece en la primera asignación antes de realizar una actualización. El <xref:System.Data.Common.DataAdapter.Update%2A> , a continuación, actualiza la fila con el valor de la <xref:System.Data.IDbCommand.UpdatedRowSource%2A> propiedad. Se omite cualquier fila adicional devuelta.  
  
 Después de que los datos se vuelve a cargar en el <xref:System.Data.DataSet>, <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> se genera el evento, que permite al usuario inspeccionar el reconciliarse <xref:System.Data.DataSet> fila y cualquier parámetro de salida devuelto por el comando. Después de una fila se actualiza correctamente, se aceptan los cambios en esa fila.  
  
 Cuando se usa <xref:System.Data.Common.DataAdapter.Update%2A>, el orden de ejecución es el siguiente:  
  
1.  Los valores de la <xref:System.Data.DataRow> se mueven a los valores de parámetro.  
  
2.  Se genera el evento <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>.  
  
3.  Ejecuta el comando.  
  
4.  Si el comando se establece en `FirstReturnedRecord`, a continuación, el primer resultado devuelto se coloca en el <xref:System.Data.DataRow>.  
  
5.  Si no hay parámetros de salida, se colocan en la <xref:System.Data.DataRow>.  
  
6.  Se genera el evento <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>.  
  
7.  Se llama a <xref:System.Data.DataRow.AcceptChanges%2A?displayProperty=nameWithType>. Esto producirá tanto la <xref:System.Data.DataTable.RowChanging?displayProperty=nameWithType> y <xref:System.Data.DataTable.RowChanged?displayProperty=nameWithType> eventos para la actualización <xref:System.Data.DataRow>.  
  
 Cada comando asociado a la <xref:System.Data.Common.DataAdapter> normalmente tiene una colección de parámetros asociada a él. Parámetros se asignan a la fila actual a través de la `SourceColumn` y `SourceVersion` propiedades de un proveedor de datos de .NET `Parameter` clase. `SourceColumn` hace referencia a un <xref:System.Data.DataTable> columna que el <xref:System.Data.Common.DataAdapter> referencias para obtener los valores de parámetro de la fila actual.  
  
 `SourceColumn` hace referencia al nombre de columna no asignada antes de que se aplicaron las asignaciones de tabla. Si `SourceColumn` hace referencia a una columna que no existe, la acción realizada depende de uno de los siguientes <xref:System.Data.MissingMappingAction> valores.  
  
|Valor de enumeración|Acción realizada|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|Utilice los nombres de columna de origen y los nombres de tabla en el <xref:System.Data.DataSet> si no hay ninguna asignación.|  
|`MissingMappingAction.Ignore`|Un <xref:System.SystemException> se genera. Cuando las asignaciones se establecen explícitamente, falta de una asignación para un parámetro de entrada suele ser el resultado de un error.|  
|`MissingMappingAction.Error`|Un <xref:System.SystemException> se genera.|  
  
 El `SourceColumn` propiedad también se utiliza para asignar el valor de salida o parámetros de entrada/salida de nuevo a la `DataSet`. Si hace referencia a una columna que no existe, se genera una excepción.  
  
 El `SourceVersion` propiedad de un proveedor de datos de .NET `Parameter` clase determina si se utiliza la versión Original, actual o propuesta de valor de la columna. Esta capacidad se utiliza a menudo para incluir valores originales en la cláusula WHERE de una instrucción UPDATE para comprobar las infracciones de simultaneidad optimista.  
  
 Llamar a la <xref:System.Data.DataSet.AcceptChanges%2A> método o <xref:System.Data.DataTable.AcceptChanges%2A> método confirmará todos los cambios en el <xref:System.Data.DataSet> o <xref:System.Data.DataTable>. Si se llama a alguno de estos métodos antes de la <xref:System.Data.Common.DbDataAdapter.Update%2A> se llama al método, no hay cambios se confirmarán cuando la <xref:System.Data.Common.DbDataAdapter.Update%2A> método se llama, a menos que se han realizado cambios adicionales desde <xref:System.Data.DataSet.AcceptChanges%2A> o <xref:System.Data.DataTable.AcceptChanges%2A> se llamó.  
  
> [!NOTE]
>  Si se produce un error al actualizar una fila, se produce una excepción y se interrumpe la ejecución de la actualización. Para reanudar la operación de actualización sin generar excepciones cuando se produce un error, establezca el <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> propiedad `true` antes de llamar a <xref:System.Data.Common.DbDataAdapter.Update%2A>. También puede responder a los errores según una fila por fila dentro de la `RowUpdated` eventos de un objeto DataAdapter. Para continuar la operación de actualización sin que se genere una excepción dentro de la `RowUpdated` conjunto de eventos, el <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> propiedad de la <xref:System.Data.Common.RowUpdatedEventArgs> a <xref:System.Data.UpdateStatus.Continue>.  
>   
>  Para cada columna que propaga al origen de datos en <xref:System.Data.Common.DataAdapter.Update%2A>, debe agregar un parámetro a la `InsertCommand`, `UpdateCommand`, o `DeleteCommand`. El `SourceColumn` propiedad del parámetro debe establecerse en el nombre de la columna. Este valor indica que el valor del parámetro no se establece manualmente, sino que se toma de la columna concreta en la fila procesada actualmente.  
  
   
  
## Examples  
 En el ejemplo siguiente se utiliza la clase derivada, <xref:System.Data.OleDb.OleDbDataAdapter>a <xref:System.Data.Common.DataAdapter.Update%2A> el origen de datos.  
  
 [!code-csharp[Classic WebData DataAdapter.IDataAdapter.Update Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataAdapter.IDataAdapter.Update Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataAdapter.IDataAdapter.Update Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataAdapter.IDataAdapter.Update Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La tabla de origen no es válida.</exception>
        <exception cref="T:System.Data.DBConcurrencyException">El hecho de intentar ejecutar una instrucción INSERT, UPDATE o DELETE no ha afectado a ningún registro.</exception>
      </Docs>
    </Member>
  </Members>
</Type>