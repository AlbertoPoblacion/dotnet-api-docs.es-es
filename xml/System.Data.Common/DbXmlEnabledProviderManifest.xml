<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DbXmlEnabledProviderManifest.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5514857ce9dcda7949f0c1952099581cbc2243ee6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">514857ce9dcda7949f0c1952099581cbc2243ee6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbXmlEnabledProviderManifest">
          <source>Represents a base class that implements the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbProviderManifest" /&gt;</ph> based on an XML definition.</source>
          <target state="translated">Representa una clase base que implementa el <ph id="ph1">&lt;see cref="T:System.Data.Common.DbProviderManifest" /&gt;</ph> basado en una definición XML.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbXmlEnabledProviderManifest">
          <source>You can use the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbXmlEnabledProviderManifest" /&gt;</ph> class to obtain provider-specific information at runtime.</source>
          <target state="translated">Puede utilizar la clase <ph id="ph1">&lt;see cref="T:System.Data.Common.DbXmlEnabledProviderManifest" /&gt;</ph> para obtener información específica del proveedor en tiempo de ejecución.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbXmlEnabledProviderManifest">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbXmlEnabledProviderManifest&gt;</ph> class is especially appropriate for the providers whose type mapping to EDM is symmetrical.</source>
          <target state="translated">La clase <ph id="ph1">&lt;xref:System.Data.Common.DbXmlEnabledProviderManifest&gt;</ph> es especialmente adecuada para los proveedores cuya asignación de tipos a EDM es simétrica.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbXmlEnabledProviderManifest">
          <source>In symmetrical type mapping scenarios, each storage type maps to a single Entity Data Model (EDM) type regardless of the mapping direction.</source>
          <target state="translated">En escenarios de asignación de tipos simétrica, cada tipo de almacenamiento se asigna a un tipo de Entity Data Model (EDM) único con independencia de la dirección de asignación.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbXmlEnabledProviderManifest">
          <source>In other words, the EDM-to-provider type mapping is the same as the provider-to-EDM type mapping.</source>
          <target state="translated">En otras palabras, la asignación de tipos de EDM a proveedor es igual que la asignación de tipos de proveedor a EDM.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbXmlEnabledProviderManifest">
          <source>In symmetric mapping scenarios, you can either derive your custom provider class from the <ph id="ph1">&lt;xref:System.Data.Common.DbXmlEnabledProviderManifest&gt;</ph> class or the <ph id="ph2">&lt;xref:System.Data.Common.DbProviderManifest&gt;</ph> class.</source>
          <target state="translated">En escenarios de asignación simétrica, se puede derivar la clase de proveedor personalizada de la clase <ph id="ph1">&lt;xref:System.Data.Common.DbXmlEnabledProviderManifest&gt;</ph> o de la clase <ph id="ph2">&lt;xref:System.Data.Common.DbProviderManifest&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbXmlEnabledProviderManifest">
          <source>We recommend that you derive your custom provider class from the <ph id="ph1">&lt;xref:System.Data.Common.DbXmlEnabledProviderManifest&gt;</ph> class for symmetric mapping scenarios because the <ph id="ph2">&lt;xref:System.Data.Common.DbXmlEnabledProviderManifest&gt;</ph> class will allow you to specify the manifests declaratively.</source>
          <target state="translated">Se recomienda derivar la clase de proveedor personalizada de la clase <ph id="ph1">&lt;xref:System.Data.Common.DbXmlEnabledProviderManifest&gt;</ph> para escenarios de asignación simétrica porque la clase <ph id="ph2">&lt;xref:System.Data.Common.DbXmlEnabledProviderManifest&gt;</ph> permitirá especificar los manifiestos mediante declaración.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbXmlEnabledProviderManifest.#ctor(System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object that provides access to the XML data in the provider manifest file.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> que proporciona acceso a los datos XML en el archivo de manifiesto del proveedor.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbXmlEnabledProviderManifest.#ctor(System.Xml.XmlReader)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbXmlEnabledProviderManifest" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Data.Common.DbXmlEnabledProviderManifest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbXmlEnabledProviderManifest.#ctor(System.Xml.XmlReader)">
          <source>The Entity Framework provides a default implementation that builds the provider manifest information from the given XmlReader.</source>
          <target state="translated">Entity Framework proporciona una implementación predeterminada que genera el proveedor de la información de XmlReader determinado del manifiesto.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbXmlEnabledProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Metadata.Edm.EdmType" /&gt;</ph> for which the facet descriptions are to be retrieved.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Metadata.Edm.EdmType" /&gt;</ph> para el que se van a recuperar las descripciones de facetas.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbXmlEnabledProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)">
          <source>Returns the list of facet descriptions for the specified Entity Data Model (EDM) type.</source>
          <target state="translated">Devuelve la lista de descripciones de facetas para el tipo de Entity Data Model (EDM) especificado.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbXmlEnabledProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)">
          <source>A collection of type <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> that contains the list of facet descriptions for the specified EDM type.</source>
          <target state="translated">Una colección de tipo <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> que contiene la lista de descripciones de facetas para el tipo de EDM especificado.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbXmlEnabledProviderManifest.GetStoreFunctions">
          <source>Returns the list of provider-supported functions.</source>
          <target state="translated">Devuelve la lista de funciones admitidas por el proveedor.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbXmlEnabledProviderManifest.GetStoreFunctions">
          <source>A collection of type <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> that contains the list of provider-supported functions.</source>
          <target state="translated">Una colección de tipo <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> que contiene la lista de funciones admitidas por el proveedor.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbXmlEnabledProviderManifest.GetStoreFunctions">
          <source>This (not nullable) method does not return user-defined functions.</source>
          <target state="translated">Este método (que no acepta valores NULL) no devuelve las funciones definidas por el usuario.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbXmlEnabledProviderManifest.GetStoreFunctions">
          <source>If the provider does not support any functions, this method returns an empty collection.</source>
          <target state="translated">Si el proveedor no admite ninguna función, este método devuelve una colección vacía.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbXmlEnabledProviderManifest.GetStoreTypes">
          <source>Returns the list of primitive types supported by the storage provider.</source>
          <target state="translated">Devuelve la lista de tipos primitivos admitidos por el proveedor de almacenamiento.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbXmlEnabledProviderManifest.GetStoreTypes">
          <source>A collection of type <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> that contains the list of primitive types supported by the storage provider.</source>
          <target state="translated">Una colección de tipo <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> que contiene la lista de tipos primitivos admitidos por el proveedor de almacenamiento.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbXmlEnabledProviderManifest.GetStoreTypes">
          <source>If the store does not support any type, this (not nullable) method returns an empty collection.</source>
          <target state="translated">Si el almacén no admite ningún tipo, este método (que no acepta valores NULL) devuelve una colección vacía.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbXmlEnabledProviderManifest.NamespaceName">
          <source>Gets the namespace name supported by this provider manifest.</source>
          <target state="translated">Obtiene el nombre de espacio de nombres admitido por este manifiesto del proveedor.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbXmlEnabledProviderManifest.NamespaceName">
          <source>The namespace name supported by this provider manifest.</source>
          <target state="translated">El nombre de espacio de nombres admitido por este manifiesto del proveedor.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType">
          <source>Gets the best mapped equivalent Entity Data Model (EDM) type for a specified storage type name.</source>
          <target state="translated">Obtiene el mejor tipo de Entity Data Model (EDM) equivalente asignado para un nombre de tipo de almacenamiento especificado.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType">
          <source>The best mapped equivalent EDM type for a specified storage type name.</source>
          <target state="translated">El mejor tipo de EDM equivalente asignado para un nombre de tipo de almacenamiento especificado.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType">
          <source>This property (not nullable) returns the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary`2&gt;</ph> object, which accepts a storage type name as a key and returns its associated EDM type value.</source>
          <target state="translated">Esta propiedad (que no acepta valores NULL) devuelve el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary`2&gt;</ph> objeto, que acepta un nombre de tipo de almacenamiento como clave y devuelve su valor de tipo EDM asociado.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType">
          <source>Gets the best mapped equivalent storage primitive type for a specified storage type name.</source>
          <target state="translated">Obtiene el mejor tipo primitivo de almacenamiento equivalente asignado para un nombre de tipo de almacenamiento especificado.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType">
          <source>The best mapped equivalent storage primitive type for a specified storage type name.</source>
          <target state="translated">El mejor tipo primitivo de almacenamiento equivalente asignado para un nombre de tipo de almacenamiento especificado.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType">
          <source>This property (not nullable) returns the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary`2&gt;</ph> object, which accepts a storage type name as a key and returns its associated storage primitive type value.</source>
          <target state="translated">Esta propiedad (que no acepta valores NULL) devuelve el <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary`2&gt;</ph> objeto, que acepta un nombre de tipo de almacenamiento como clave y devuelve su valor de tipo primitivo de almacenamiento asociado.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>