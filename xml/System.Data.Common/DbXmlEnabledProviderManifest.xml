<Type Name="DbXmlEnabledProviderManifest" FullName="System.Data.Common.DbXmlEnabledProviderManifest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fd2921bc4bb2bd178719dbd7c3800946ea50cec5" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="63895780" /></Metadata><TypeSignature Language="C#" Value="public abstract class DbXmlEnabledProviderManifest : System.Data.Common.DbProviderManifest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbXmlEnabledProviderManifest extends System.Data.Common.DbProviderManifest" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbXmlEnabledProviderManifest" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbXmlEnabledProviderManifest&#xA;Inherits DbProviderManifest" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbXmlEnabledProviderManifest abstract : System::Data::Common::DbProviderManifest" />
  <TypeSignature Language="F#" Value="type DbXmlEnabledProviderManifest = class&#xA;    inherit DbProviderManifest" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbProviderManifest</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa una clase base que implementa el <see cref="T:System.Data.Common.DbProviderManifest" /> basado en una definición XML. Puede utilizar la clase <see cref="T:System.Data.Common.DbXmlEnabledProviderManifest" /> para obtener información específica del proveedor en tiempo de ejecución.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La clase <xref:System.Data.Common.DbXmlEnabledProviderManifest> es especialmente adecuada para los proveedores cuya asignación de tipos a EDM es simétrica. En escenarios de asignación de tipos simétrica, cada tipo de almacenamiento se asigna a un tipo de Entity Data Model (EDM) único con independencia de la dirección de asignación. En otras palabras, la asignación de tipos de EDM a proveedor es igual que la asignación de tipos de proveedor a EDM.  
  
 En escenarios de asignación simétrica, se puede derivar la clase de proveedor personalizada de la clase <xref:System.Data.Common.DbXmlEnabledProviderManifest> o de la clase <xref:System.Data.Common.DbProviderManifest>. Se recomienda derivar la clase de proveedor personalizada de la clase <xref:System.Data.Common.DbXmlEnabledProviderManifest> para escenarios de asignación simétrica porque la clase <xref:System.Data.Common.DbXmlEnabledProviderManifest> permitirá especificar los manifiestos mediante declaración.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbXmlEnabledProviderManifest (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbXmlEnabledProviderManifest.#ctor(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbXmlEnabledProviderManifest(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="new System.Data.Common.DbXmlEnabledProviderManifest : System.Xml.XmlReader -&gt; System.Data.Common.DbXmlEnabledProviderManifest" Usage="new System.Data.Common.DbXmlEnabledProviderManifest reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">Objeto <see cref="T:System.Xml.XmlReader" /> que proporciona acceso a los datos XML en el archivo de manifiesto del proveedor.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Data.Common.DbXmlEnabledProviderManifest" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Entity Framework proporciona una implementación predeterminada que crea el proveedor de información desde el XmlReader especificado del manifiesto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFacetDescriptions">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.FacetDescription&gt; GetFacetDescriptions (System.Data.Metadata.Edm.EdmType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.FacetDescription&gt; GetFacetDescriptions(class System.Data.Metadata.Edm.EdmType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbXmlEnabledProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFacetDescriptions (type As EdmType) As ReadOnlyCollection(Of FacetDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::FacetDescription ^&gt; ^ GetFacetDescriptions(System::Data::Metadata::Edm::EdmType ^ type);" />
      <MemberSignature Language="F#" Value="override this.GetFacetDescriptions : System.Data.Metadata.Edm.EdmType -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.FacetDescription&gt;" Usage="dbXmlEnabledProviderManifest.GetFacetDescriptions type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.FacetDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.EdmType" />
      </Parameters>
      <Docs>
        <param name="type"><see cref="T:System.Data.Metadata.Edm.EdmType" /> para el que se van a recuperar las descripciones de facetas.</param>
        <summary>Devuelve la lista de descripciones de facetas para el tipo de Entity Data Model (EDM) especificado.</summary>
        <returns>Una colección de tipo <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> que contiene la lista de descripciones de facetas para el tipo de EDM especificado.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStoreFunctions">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt; GetStoreFunctions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.EdmFunction&gt; GetStoreFunctions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbXmlEnabledProviderManifest.GetStoreFunctions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStoreFunctions () As ReadOnlyCollection(Of EdmFunction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::EdmFunction ^&gt; ^ GetStoreFunctions();" />
      <MemberSignature Language="F#" Value="override this.GetStoreFunctions : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;" Usage="dbXmlEnabledProviderManifest.GetStoreFunctions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve la lista de funciones admitidas por el proveedor.</summary>
        <returns>Una colección de tipo <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> que contiene la lista de funciones admitidas por el proveedor.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método (que no acepta valores NULL) devuelven las funciones definidas por el usuario. Si el proveedor no admite ninguna función, este método devuelve una colección vacía.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStoreTypes">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.PrimitiveType&gt; GetStoreTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.PrimitiveType&gt; GetStoreTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbXmlEnabledProviderManifest.GetStoreTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStoreTypes () As ReadOnlyCollection(Of PrimitiveType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::PrimitiveType ^&gt; ^ GetStoreTypes();" />
      <MemberSignature Language="F#" Value="override this.GetStoreTypes : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.PrimitiveType&gt;" Usage="dbXmlEnabledProviderManifest.GetStoreTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.PrimitiveType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve la lista de tipos primitivos admitidos por el proveedor de almacenamiento.</summary>
        <returns>Una colección de tipo <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> que contiene la lista de tipos primitivos admitidos por el proveedor de almacenamiento.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el almacén no es compatible con cualquier tipo, este método (que no acepta valores NULL) devuelve una colección vacía.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceName">
      <MemberSignature Language="C#" Value="public override string NamespaceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbXmlEnabledProviderManifest.NamespaceName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NamespaceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NamespaceName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceName : string" Usage="System.Data.Common.DbXmlEnabledProviderManifest.NamespaceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de espacio de nombres admitido por este manifiesto del proveedor.</summary>
        <value>El nombre de espacio de nombres admitido por este manifiesto del proveedor.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreTypeNameToEdmPrimitiveType">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.Dictionary&lt;string,System.Data.Metadata.Edm.PrimitiveType&gt; StoreTypeNameToEdmPrimitiveType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;string, class System.Data.Metadata.Edm.PrimitiveType&gt; StoreTypeNameToEdmPrimitiveType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property StoreTypeNameToEdmPrimitiveType As Dictionary(Of String, PrimitiveType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::Dictionary&lt;System::String ^, System::Data::Metadata::Edm::PrimitiveType ^&gt; ^ StoreTypeNameToEdmPrimitiveType { System::Collections::Generic::Dictionary&lt;System::String ^, System::Data::Metadata::Edm::PrimitiveType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StoreTypeNameToEdmPrimitiveType : System.Collections.Generic.Dictionary&lt;string, System.Data.Metadata.Edm.PrimitiveType&gt;" Usage="System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Data.Metadata.Edm.PrimitiveType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el mejor tipo de Entity Data Model (EDM) equivalente asignado para un nombre de tipo de almacenamiento especificado.</summary>
        <value>El mejor tipo de EDM equivalente asignado para un nombre de tipo de almacenamiento especificado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad (que no acepta valores NULL) devuelve el <xref:System.Collections.Generic.Dictionary`2> object, que acepta un nombre de tipo de almacenamiento como clave y devuelve su valor de tipo EDM asociado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreTypeNameToStorePrimitiveType">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.Dictionary&lt;string,System.Data.Metadata.Edm.PrimitiveType&gt; StoreTypeNameToStorePrimitiveType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;string, class System.Data.Metadata.Edm.PrimitiveType&gt; StoreTypeNameToStorePrimitiveType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property StoreTypeNameToStorePrimitiveType As Dictionary(Of String, PrimitiveType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::Dictionary&lt;System::String ^, System::Data::Metadata::Edm::PrimitiveType ^&gt; ^ StoreTypeNameToStorePrimitiveType { System::Collections::Generic::Dictionary&lt;System::String ^, System::Data::Metadata::Edm::PrimitiveType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StoreTypeNameToStorePrimitiveType : System.Collections.Generic.Dictionary&lt;string, System.Data.Metadata.Edm.PrimitiveType&gt;" Usage="System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Data.Metadata.Edm.PrimitiveType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el mejor tipo primitivo de almacenamiento equivalente asignado para un nombre de tipo de almacenamiento especificado.</summary>
        <value>El mejor tipo primitivo de almacenamiento equivalente asignado para un nombre de tipo de almacenamiento especificado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad (que no acepta valores NULL) devuelve el <xref:System.Collections.Generic.Dictionary`2> object, que acepta un nombre de tipo de almacenamiento como clave y devuelve su valor de tipo primitivo de almacenamiento asociada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>