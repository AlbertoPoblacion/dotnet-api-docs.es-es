<Type Name="AttributeCallbackBuilder" FullName="System.Activities.Presentation.Metadata.AttributeCallbackBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="83e5b50c48439d273251d5a7a90a78a7890cfc1f" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57938011" /></Metadata><TypeSignature Language="C#" Value="public sealed class AttributeCallbackBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AttributeCallbackBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Metadata.AttributeCallbackBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AttributeCallbackBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttributeCallbackBuilder sealed" />
  <TypeSignature Language="F#" Value="type AttributeCallbackBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona acceso para agregar atributos de un tipo específico a una tabla <see cref="T:System.Activities.Presentation.Metadata.AttributeTable" /> concreta.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La primera vez que se consulta una tabla <xref:System.Activities.Presentation.Metadata.AttributeTable> para obtener atributos de un tipo determinado, si se rellenó la instancia de <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder> mediante el método <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> para dicho tipo, se pasa una instancia de <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder> al delegado. El objeto <xref:System.Activities.Presentation.Metadata.AttributeTable> quita la referencia a la devolución de llamada y agrega la información de atributos proporcionada por las llamadas a <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes%2A>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="AddCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Agrega el contenido de los atributos proporcionados a la tabla de atributos que creó este generador.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si un atributo entra en conflicto con otro ya incluido en la tabla, el último atributo agregado reemplaza los atributos anteriores.  
  
 Los atributos solo se pueden agregar al tipo especificado por la propiedad <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddCustomAttributes">
      <MemberSignature Language="C#" Value="public void AddCustomAttributes (params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCustomAttributes(class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes(System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCustomAttributes (ParamArray attributes As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCustomAttributes(... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="member this.AddCustomAttributes : Attribute[] -&gt; unit" Usage="attributeCallbackBuilder.AddCustomAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-4.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="attributes">Los atributos que se agregan a la tabla.</param>
        <summary>Agrega el contenido de los atributos proporcionados a la tabla de atributos que creó este generador.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si un atributo entra en conflicto con otro ya incluido en la tabla, el último atributo agregado reemplaza los atributos anteriores.  
  
 Los atributos solo se pueden agregar al tipo especificado por la propiedad <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="attributes" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddCustomAttributes">
      <MemberSignature Language="C#" Value="public void AddCustomAttributes (System.ComponentModel.MemberDescriptor descriptor, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCustomAttributes(class System.ComponentModel.MemberDescriptor descriptor, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes(System.ComponentModel.MemberDescriptor,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCustomAttributes (descriptor As MemberDescriptor, ParamArray attributes As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCustomAttributes(System::ComponentModel::MemberDescriptor ^ descriptor, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="member this.AddCustomAttributes : System.ComponentModel.MemberDescriptor * Attribute[] -&gt; unit" Usage="attributeCallbackBuilder.AddCustomAttributes (descriptor, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descriptor" Type="System.ComponentModel.MemberDescriptor" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-4.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="descriptor">El miembro al que se agregan los atributos.</param>
        <param name="attributes">Los atributos que se agregan a la tabla.</param>
        <summary>Agrega el contenido de los atributos proporcionados a la tabla de atributos que creó este generador.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si un atributo entra en conflicto con otro ya incluido en la tabla, el último atributo agregado reemplaza los atributos anteriores.  
  
 Los atributos solo se pueden agregar al tipo especificado por la propiedad <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="descriptor" /> o <paramref name="attributes" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddCustomAttributes">
      <MemberSignature Language="C#" Value="public void AddCustomAttributes (System.Reflection.MemberInfo member, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCustomAttributes(class System.Reflection.MemberInfo member, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes(System.Reflection.MemberInfo,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCustomAttributes (member As MemberInfo, ParamArray attributes As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCustomAttributes(System::Reflection::MemberInfo ^ member, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="member this.AddCustomAttributes : System.Reflection.MemberInfo * Attribute[] -&gt; unit" Usage="attributeCallbackBuilder.AddCustomAttributes (member, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-4.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="member">El miembro al que se agregan los atributos.</param>
        <param name="attributes">Los atributos que se agregan a la tabla.</param>
        <summary>Agrega el contenido de los atributos proporcionados a la tabla de atributos que creó este generador.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si un atributo entra en conflicto con otro ya incluido en la tabla, el último atributo agregado reemplaza los atributos anteriores.  
  
 Los atributos solo se pueden agregar al tipo especificado por la propiedad <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="member" /> o <paramref name="attributes" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddCustomAttributes">
      <MemberSignature Language="C#" Value="public void AddCustomAttributes (string memberName, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCustomAttributes(string memberName, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes(System.String,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCustomAttributes (memberName As String, ParamArray attributes As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCustomAttributes(System::String ^ memberName, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="member this.AddCustomAttributes : string * Attribute[] -&gt; unit" Usage="attributeCallbackBuilder.AddCustomAttributes (memberName, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-4.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="memberName">El nombre del miembro al que se agregan los atributos.</param>
        <param name="attributes">Los atributos que se agregan a la tabla.</param>
        <summary>Agrega el contenido de los atributos proporcionados a la tabla de atributos que creó este generador.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si un atributo entra en conflicto con otro ya incluido en la tabla, el último atributo agregado reemplaza los atributos anteriores.  
  
 Los atributos solo se pueden agregar al tipo especificado por la propiedad <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="memberName" /> o <paramref name="attributes" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddCustomAttributes">
      <MemberSignature Language="C#" Value="public void AddCustomAttributes (System.Windows.DependencyProperty dp, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCustomAttributes(class System.Windows.DependencyProperty dp, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.AddCustomAttributes(System.Windows.DependencyProperty,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCustomAttributes (dp As DependencyProperty, ParamArray attributes As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCustomAttributes(System::Windows::DependencyProperty ^ dp, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="member this.AddCustomAttributes : System.Windows.DependencyProperty * Attribute[] -&gt; unit" Usage="attributeCallbackBuilder.AddCustomAttributes (dp, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-4.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="dp">La dependencia a la que se agregan los atributos.</param>
        <param name="attributes">Los atributos que se agregan a la tabla.</param>
        <summary>Agrega el contenido de los atributos proporcionados a la tabla de atributos que creó este generador.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si un atributo entra en conflicto con otro ya incluido en la tabla, el último atributo agregado reemplaza los atributos anteriores.  
  
 Los atributos solo se pueden agregar al tipo especificado por la propiedad <xref:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dp" /> o <paramref name="attributes" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CallbackType">
      <MemberSignature Language="C#" Value="public Type CallbackType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type CallbackType" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CallbackType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ CallbackType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CallbackType : Type" Usage="System.Activities.Presentation.Metadata.AttributeCallbackBuilder.CallbackType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>El tipo al que se agregarán los atributos.</summary>
        <value>El tipo al que se agregarán los atributos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El tipo se establece en el constructor y no se puede cambiar.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>