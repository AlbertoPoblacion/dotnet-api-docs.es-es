<Type Name="MetadataStore" FullName="System.Activities.Presentation.Metadata.MetadataStore">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dfcbbc448561b61b41daed246ea7787c52e5115e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36721507" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class MetadataStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed MetadataStore extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Metadata.MetadataStore" />
  <TypeSignature Language="VB.NET" Value="Public Class MetadataStore" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataStore abstract sealed" />
  <TypeSignature Language="F#" Value="type MetadataStore = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Colección en memoria de tablas hash que permite la búsqueda rápida de elementos de diseñador por <see cref="T:System.Type" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El almacén de metadatos contiene metadatos de atributo personalizados, como la asociación entre los diseñadores y los tipos. Los atributos personalizados pueden definirse en un objeto <xref:System.Activities.Presentation.Metadata.AttributeTable> y agregarse al almacén de metadatos. Una vez agregados los atributos, aparecerán en llamadas realizadas a <xref:System.ComponentModel.TypeDescriptor>.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra cómo asociar el diseñador de actividad personalizado `AcitivityDesigner1` con una actividad personalizada. Para obtener más información sobre cómo crear diseñadores de actividad personalizados, consulte [Cómo: crear un diseñador de actividad personalizado](~/docs/framework/windows-workflow-foundation/how-to-create-a-custom-activity-designer.md).  
  
```csharp  
internal class Metadata : IRegisterMetadata  
{  
    private AttributeTable attributes;  
  
    // Called by the designer to register any design-time metadata.  
    public void Register()  
    {  
        AttributeTableBuilder builder = new AttributeTableBuilder();  
  
        // Add the custom attributes to associate the ActivityDesigner1 custom designer  
        // with the custom activity MyActivity.  
        builder.AddCustomAttributes(  
            typeof(MyActivity),  
            new DesignerAttribute(typeof(ActivityDesigner1)));  
        MetadataStore.AddAttributeTable(builder.CreateTable());  
  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddAttributeTable">
      <MemberSignature Language="C#" Value="public static void AddAttributeTable (System.Activities.Presentation.Metadata.AttributeTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddAttributeTable(class System.Activities.Presentation.Metadata.AttributeTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Metadata.MetadataStore.AddAttributeTable(System.Activities.Presentation.Metadata.AttributeTable)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddAttributeTable (table As AttributeTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddAttributeTable(System::Activities::Presentation::Metadata::AttributeTable ^ table);" />
      <MemberSignature Language="F#" Value="static member AddAttributeTable : System.Activities.Presentation.Metadata.AttributeTable -&gt; unit" Usage="System.Activities.Presentation.Metadata.MetadataStore.AddAttributeTable table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Activities.Presentation.Metadata.AttributeTable" />
      </Parameters>
      <Docs>
        <param name="table">La tabla que se desea agregar.</param>
        <summary>Agrega la tabla indicada al almacén de atributos del objeto <see cref="T:System.AppDomain" /> actual.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una vez agregada la tabla, las llamadas a <xref:System.ComponentModel.TypeDescriptor> usarán los atributos definidos en dicha tabla. Se pueden agregar varias tablas al almacén de atributos. En el caso de que se produzcan conflictos, se usarán los atributos de la última tabla que se ha agregado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>