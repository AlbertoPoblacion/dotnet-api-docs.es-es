<Type Name="TaskFactory&lt;TResult&gt;" FullName="System.Threading.Tasks.TaskFactory&lt;TResult&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="747373803d9599335d466c7382a5dde926cb04ca" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36606753" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TaskFactory&lt;TResult&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TaskFactory`1&lt;TResult&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.TaskFactory`1" />
  <TypeSignature Language="VB.NET" Value="Public Class TaskFactory(Of TResult)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TResult&gt;&#xA;public ref class TaskFactory" />
  <TypeSignature Language="F#" Value="type TaskFactory&lt;'Result&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TResult" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TResult">
      <span data-ttu-id="4cd88-101">Valor devuelto de los objetos <see cref="T:System.Threading.Tasks.Task`1" /> creados por los métodos de esta clase.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4cd88-101">The return value of the <see cref="T:System.Threading.Tasks.Task`1" /> objects that the methods of this class create.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="4cd88-102">Proporciona compatibilidad para crear y programar objetos <see cref="T:System.Threading.Tasks.Task`1" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4cd88-102">Provides support for creating and scheduling <see cref="T:System.Threading.Tasks.Task`1" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-103">.NET Framework proporciona dos factorías para crear y programar tareas:</span><span class="sxs-lookup"><span data-stu-id="4cd88-103">The .NET Framework provides two factories for creating and scheduling tasks:</span></span>  
  
-   <span data-ttu-id="4cd88-104">El <xref:System.Threading.Tasks.TaskFactory> (clase), que crea <xref:System.Threading.Tasks.Task> y <xref:System.Threading.Tasks.Task%601> objetos.</span><span class="sxs-lookup"><span data-stu-id="4cd88-104">The <xref:System.Threading.Tasks.TaskFactory> class, which creates <xref:System.Threading.Tasks.Task> and <xref:System.Threading.Tasks.Task%601> objects.</span></span>  
  
-   <span data-ttu-id="4cd88-105">El <xref:System.Threading.Tasks.TaskFactory%601> (clase), que crea <xref:System.Threading.Tasks.Task%601> objetos.</span><span class="sxs-lookup"><span data-stu-id="4cd88-105">The <xref:System.Threading.Tasks.TaskFactory%601> class, which creates <xref:System.Threading.Tasks.Task%601> objects.</span></span>  
  
 <span data-ttu-id="4cd88-106">La <xref:System.Threading.Tasks.TaskFactory%601> clase le permite hacer lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="4cd88-106">The <xref:System.Threading.Tasks.TaskFactory%601> class allows you to do the following:</span></span>  
  
-   <span data-ttu-id="4cd88-107">Crear una tarea e inícielo inmediatamente mediante una llamada a la <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4cd88-107">Create a task and start it immediately by calling the <xref:System.Threading.Tasks.TaskFactory.StartNew%2A> method.</span></span> <span data-ttu-id="4cd88-108">Puede llamar a las sobrecargas de este método para crear y ejecutar una tarea que requiere argumentos no predeterminados.</span><span class="sxs-lookup"><span data-stu-id="4cd88-108">You can call the overloads of this method to create and execute a task that requires non-default arguments.</span></span>  
  
    > [!WARNING]
    >  <span data-ttu-id="4cd88-109">A partir de la [!INCLUDE[net_v45](~/includes/net-v45-md.md)], el <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> método proporciona la manera más fácil de crear una tarea no tiene valor predeterminado de los valores de configuración y la inicia inmediatamente.</span><span class="sxs-lookup"><span data-stu-id="4cd88-109">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> method provides the easiest way to create a task with default configuration values and start it immediately.</span></span>  
  
-   <span data-ttu-id="4cd88-110">Crear una tarea que se inicia cuando se ha completado cualquiera de las tareas en una matriz mediante una llamada a la <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAny%2A> o <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAny%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4cd88-110">Create a task that starts when any one of the tasks in an array has completed by calling the <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAny%2A> or   <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAny%2A> method.</span></span>  
  
-   <span data-ttu-id="4cd88-111">Crear una tarea que se inicia cuando se hayan completado todas las tareas en una matriz mediante una llamada a la <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> o <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4cd88-111">Create a task that starts when all the tasks in an array have completed by calling the <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> or <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A> method.</span></span>  
  
 <span data-ttu-id="4cd88-112">Estático <xref:System.Threading.Tasks.Task%601.Factory%2A?displayProperty=nameWithType> propiedad devuelve el valor predeterminado es <xref:System.Threading.Tasks.TaskFactory%601> objeto.</span><span class="sxs-lookup"><span data-stu-id="4cd88-112">The static <xref:System.Threading.Tasks.Task%601.Factory%2A?displayProperty=nameWithType> property returns a default <xref:System.Threading.Tasks.TaskFactory%601> object.</span></span> <span data-ttu-id="4cd88-113">También puede llamar a uno de los <xref:System.Threading.Tasks.TaskFactory%601> clase constructores para configurar el <xref:System.Threading.Tasks.Task%601> objetos que el <xref:System.Threading.Tasks.TaskFactory%601> crea la clase.</span><span class="sxs-lookup"><span data-stu-id="4cd88-113">You can also call one of the <xref:System.Threading.Tasks.TaskFactory%601> class constructors to configure the <xref:System.Threading.Tasks.Task%601> objects that  the <xref:System.Threading.Tasks.TaskFactory%601> class creates.</span></span> <span data-ttu-id="4cd88-114">En el ejemplo siguiente se configura un nuevo <xref:System.Threading.Tasks.TaskFactory%601> objeto para crear tareas que tienen un token de cancelación indicado, opciones de creación de tareas, las opciones de continuación y un programador de tareas personalizado.</span><span class="sxs-lookup"><span data-stu-id="4cd88-114">The following example configures a new <xref:System.Threading.Tasks.TaskFactory%601> object to create tasks that have a specified cancellation token, task creation options, continuation options, and a customized task scheduler.</span></span>  
  
 [!code-csharp[TPL_Factories#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpl_factories/cs/factoriestresult.cs#2)]
 [!code-vb[TPL_Factories#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl_factories/vb/factoriestresult.vb#2)]  
  
 <span data-ttu-id="4cd88-115">En la mayoría de los casos, no es necesario crear una nueva instancia <xref:System.Threading.Tasks.TaskFactory%601> instancia.</span><span class="sxs-lookup"><span data-stu-id="4cd88-115">In most cases, you do not have to instantiate a new <xref:System.Threading.Tasks.TaskFactory%601> instance.</span></span> <span data-ttu-id="4cd88-116">En su lugar, puede usar estático <xref:System.Threading.Tasks.Task%601.Factory%2A?displayProperty=nameWithType> propiedad, que devuelve un objeto de fábrica que utiliza valores predeterminados.</span><span class="sxs-lookup"><span data-stu-id="4cd88-116">Instead, you can use the static <xref:System.Threading.Tasks.Task%601.Factory%2A?displayProperty=nameWithType> property, which returns a factory object that uses default values.</span></span> <span data-ttu-id="4cd88-117">A continuación, puede llamar a sus métodos para iniciar nuevas tareas o definir las continuaciones de tareas.</span><span class="sxs-lookup"><span data-stu-id="4cd88-117">You can then call its methods to start new tasks or define task continuations.</span></span> <span data-ttu-id="4cd88-118">Para obtener un ejemplo, vea el ejemplo.</span><span class="sxs-lookup"><span data-stu-id="4cd88-118">For an illustration, see the example.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4cd88-119">En el ejemplo siguiente se usa estático <xref:System.Threading.Tasks.Task%601.Factory%2A> propiedad para realizar dos llamadas a la <xref:System.Threading.Tasks.TaskFactory%601.StartNew%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="4cd88-119">The following example uses the static <xref:System.Threading.Tasks.Task%601.Factory%2A> property to make two calls to the <xref:System.Threading.Tasks.TaskFactory%601.StartNew%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4cd88-120">La primera tarea devuelve una matriz de cadenas que se rellena con los nombres de archivos en el directorio Mis documentos del usuario, mientras que el segundo devuelve una matriz de cadenas que se rellena con los nombres de los subdirectorios del directorio de Mis documentos del usuario.</span><span class="sxs-lookup"><span data-stu-id="4cd88-120">The first task returns a string array that is populated with the names of files in the user's MyDocuments directory, while the second returns a string array that is populated with the names of subdirectories of the user's MyDocuments directory.</span></span> <span data-ttu-id="4cd88-121">A continuación, llama el <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%28System.Threading.Tasks.Task%5B%5D%2CSystem.Action%7BSystem.Threading.Tasks.Task%5B%5D%7D%29?displayProperty=nameWithType> método, que muestra información sobre el número de archivos y directorios en las matrices devueltas por las dos tareas una vez que haya completado la ejecución.</span><span class="sxs-lookup"><span data-stu-id="4cd88-121">It then calls the <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%28System.Threading.Tasks.Task%5B%5D%2CSystem.Action%7BSystem.Threading.Tasks.Task%5B%5D%7D%29?displayProperty=nameWithType> method, which displays information about the number of files and directories in the arrays returned by the two tasks after they have completed execution.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task.Factory#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task.factory/cs/factory2.cs#2)]
 [!code-vb[System.Threading.Tasks.Task.Factory#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task.factory/vb/factory2.vb#2)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="4cd88-122">Todos los miembros públicos y protegidos de <see cref="T:System.Threading.Tasks.TaskFactory`1" /> son seguros para subprocesos y se pueden usar simultáneamente desde varios subprocesos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4cd88-122">All public and protected members of <see cref="T:System.Threading.Tasks.TaskFactory`1" /> are thread-safe and may be used concurrently from multiple threads.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4cd88-123">Inicializa una instancia de <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-123">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4cd88-124">Inicializa una instancia de <see cref="T:System.Threading.Tasks.TaskFactory`1" /> con la configuración predeterminada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-124">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance with the default configuration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-125">Este constructor crea un <xref:System.Threading.Tasks.TaskFactory%601> instancia con una configuración predeterminada.</span><span class="sxs-lookup"><span data-stu-id="4cd88-125">This constructor creates a <xref:System.Threading.Tasks.TaskFactory%601> instance with a default configuration.</span></span> <span data-ttu-id="4cd88-126">El <xref:System.Threading.Tasks.TaskCreationOptions> propiedad se inicializa en <xref:System.Threading.Tasks.TaskCreationOptions.None>, el <xref:System.Threading.Tasks.TaskContinuationOptions> propiedad se inicializa en <xref:System.Threading.Tasks.TaskContinuationOptions.None>y el <xref:System.Threading.Tasks.TaskScheduler> propiedad se inicializa en el programador actual (vea <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="4cd88-126">The <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to <xref:System.Threading.Tasks.TaskCreationOptions.None>, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to <xref:System.Threading.Tasks.TaskContinuationOptions.None>, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; : System.Threading.CancellationToken -&gt; System.Threading.Tasks.TaskFactory&lt;'Result&gt;" Usage="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; cancellationToken" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="4cd88-127">Token de cancelación predeterminado que se asignará a las tareas creadas por este <see cref="T:System.Threading.Tasks.TaskFactory" /> a menos que se especifique otro token de cancelación de forma explícita mientras se llama a los métodos de generador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-127">The default cancellation token that will be assigned to tasks created by this <see cref="T:System.Threading.Tasks.TaskFactory" /> unless another cancellation token is explicitly specified when calling the factory methods.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-128">Inicializa una instancia de <see cref="T:System.Threading.Tasks.TaskFactory`1" /> con la configuración predeterminada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-128">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance with the default configuration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-129">Este constructor crea un <xref:System.Threading.Tasks.TaskFactory%601> instancia con una configuración predeterminada.</span><span class="sxs-lookup"><span data-stu-id="4cd88-129">This constructor creates a <xref:System.Threading.Tasks.TaskFactory%601> instance with a default configuration.</span></span> <span data-ttu-id="4cd88-130">El <xref:System.Threading.Tasks.TaskCreationOptions> propiedad se inicializa en <xref:System.Threading.Tasks.TaskCreationOptions.None>, el <xref:System.Threading.Tasks.TaskContinuationOptions> propiedad se inicializa en <xref:System.Threading.Tasks.TaskContinuationOptions.None>y el <xref:System.Threading.Tasks.TaskScheduler> propiedad se inicializa en el programador actual (vea <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="4cd88-130">The <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to <xref:System.Threading.Tasks.TaskCreationOptions.None>, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to <xref:System.Threading.Tasks.TaskContinuationOptions.None>, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory (System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scheduler As TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory(System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; : System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.TaskFactory&lt;'Result&gt;" Usage="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; scheduler" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="scheduler">
          <span data-ttu-id="4cd88-131">Programador que se va a usar para programar las tareas creadas con este <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-131">The scheduler to use to schedule any tasks created with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          </span>
          <span data-ttu-id="4cd88-132">Un valor null indica que se debería usar el <see cref="T:System.Threading.Tasks.TaskScheduler" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-132">A null value indicates that the current <see cref="T:System.Threading.Tasks.TaskScheduler" /> should be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-133">Inicializa una instancia de <see cref="T:System.Threading.Tasks.TaskFactory`1" /> con la configuración especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-133">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance with the specified configuration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-134">Con este constructor, el <xref:System.Threading.Tasks.TaskCreationOptions> propiedad se inicializa en <xref:System.Threading.Tasks.TaskCreationOptions.None>, el <xref:System.Threading.Tasks.TaskContinuationOptions> propiedad se inicializa en <xref:System.Threading.Tasks.TaskContinuationOptions.None>y el <xref:System.Threading.Tasks.TaskScheduler> propiedad se inicializa en `scheduler`, a menos que tenga `null`, en cuyo caso la propiedad se inicializa en el programador actual (vea <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="4cd88-134">With this constructor, the <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to <xref:System.Threading.Tasks.TaskCreationOptions.None>, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to <xref:System.Threading.Tasks.TaskContinuationOptions.None>, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to `scheduler`, unless it's `null`, in which case the property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory (System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (creationOptions As TaskCreationOptions, continuationOptions As TaskContinuationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory(System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; : System.Threading.Tasks.TaskCreationOptions * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.TaskFactory&lt;'Result&gt;" Usage="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; (creationOptions, continuationOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <param name="creationOptions">
          <span data-ttu-id="4cd88-135">Opciones predeterminadas que se van a usar al crear tareas con este <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-135">The default options to use when creating tasks with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="4cd88-136">Opciones predeterminadas que se van a usar al crear tareas de continuación con este <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-136">The default options to use when creating continuation tasks with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-137">Inicializa una instancia de <see cref="T:System.Threading.Tasks.TaskFactory`1" /> con la configuración especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-137">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance with the specified configuration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-138">Con este constructor, el <xref:System.Threading.Tasks.TaskCreationOptions> propiedad se inicializa en `creationOptions`, el <xref:System.Threading.Tasks.TaskContinuationOptions> propiedad se inicializa en `continuationOptions`y el <xref:System.Threading.Tasks.TaskScheduler> propiedad se inicializa en el programador actual (vea <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="4cd88-138">With this constructor, the <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to `creationOptions`, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to `continuationOptions`, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4cd88-139">
            <paramref name="creationOptions" /> o <paramref name="continuationOptions" /> especifica un valor no válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-139">
              <paramref name="creationOptions" /> or <paramref name="continuationOptions" /> specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskFactory (System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskFactory(System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; : System.Threading.CancellationToken * System.Threading.Tasks.TaskCreationOptions * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.TaskFactory&lt;'Result&gt;" Usage="new System.Threading.Tasks.TaskFactory&lt;'Result&gt; (cancellationToken, creationOptions, continuationOptions, scheduler)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="4cd88-140">Token de cancelación predeterminado que se asignará a las tareas creadas por este <see cref="T:System.Threading.Tasks.TaskFactory" /> a menos que se especifique otro token de cancelación de forma explícita mientras se llama a los métodos de generador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-140">The default cancellation token that will be assigned to tasks created by this <see cref="T:System.Threading.Tasks.TaskFactory" /> unless another cancellation token is explicitly specified when calling the factory methods.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="4cd88-141">Opciones predeterminadas que se van a usar al crear tareas con este <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-141">The default options to use when creating tasks with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="4cd88-142">Opciones predeterminadas que se van a usar al crear tareas de continuación con este <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-142">The default options to use when creating continuation tasks with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="4cd88-143">Programador predeterminado que se va a usar para programar las tareas creadas con este <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-143">The default scheduler to use to schedule any tasks created with this <see cref="T:System.Threading.Tasks.TaskFactory`1" />.</span>
          </span>
          <span data-ttu-id="4cd88-144">Un valor null indica que se debería usar <see cref="P:System.Threading.Tasks.TaskScheduler.Current" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-144">A null value indicates that <see cref="P:System.Threading.Tasks.TaskScheduler.Current" /> should be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-145">Inicializa una instancia de <see cref="T:System.Threading.Tasks.TaskFactory`1" /> con la configuración especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-145">Initializes a <see cref="T:System.Threading.Tasks.TaskFactory`1" /> instance with the specified configuration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-146">Con este constructor, el <xref:System.Threading.Tasks.TaskCreationOptions> propiedad se inicializa en `creationOptions`, el <xref:System.Threading.Tasks.TaskContinuationOptions> propiedad se inicializa en `continuationOptions`y el <xref:System.Threading.Tasks.TaskScheduler> propiedad se inicializa en `scheduler`, a menos que tenga `null`, en cuyo caso la propiedad se inicializa en el programador actual (vea <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span><span class="sxs-lookup"><span data-stu-id="4cd88-146">With this constructor, the <xref:System.Threading.Tasks.TaskCreationOptions> property is initialized to `creationOptions`, the <xref:System.Threading.Tasks.TaskContinuationOptions> property is initialized to `continuationOptions`, and the <xref:System.Threading.Tasks.TaskScheduler> property is initialized to `scheduler`, unless it's `null`, in which case the property is initialized to the current scheduler (see <xref:System.Threading.Tasks.TaskScheduler.Current%2A>).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4cd88-147">
            <paramref name="creationOptions" /> o <paramref name="continuationOptions" /> especifica un valor no válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-147">
              <paramref name="creationOptions" /> or <paramref name="continuationOptions" /> specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CancellationToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken CancellationToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken CancellationToken" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskFactory`1.CancellationToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CancellationToken As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken CancellationToken { System::Threading::CancellationToken get(); };" />
      <MemberSignature Language="F#" Value="member this.CancellationToken : System.Threading.CancellationToken" Usage="System.Threading.Tasks.TaskFactory&lt;'Result&gt;.CancellationToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4cd88-148">Obtiene el token de cancelación predeterminado para este generador de tareas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-148">Gets the default cancellation token for this task factory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4cd88-149">El token de cancelación predeterminado para este generador de tareas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-149">The default cancellation token for this task factory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-150">Esta propiedad devuelve el token de cancelación predeterminado que se asignará a todas las tareas creadas por este generador, a menos que otro valor del token de cancelación se especifica explícitamente durante la llamada a los métodos de generador de tareas.</span><span class="sxs-lookup"><span data-stu-id="4cd88-150">This property returns the default cancellation token that will be assigned to all tasks created by this factory unless another cancellation token value is explicitly specified during the call to the task factory methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinuationOptions">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskContinuationOptions ContinuationOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.Tasks.TaskContinuationOptions ContinuationOptions" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskFactory`1.ContinuationOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContinuationOptions As TaskContinuationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::TaskContinuationOptions ContinuationOptions { System::Threading::Tasks::TaskContinuationOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.ContinuationOptions : System.Threading.Tasks.TaskContinuationOptions" Usage="System.Threading.Tasks.TaskFactory&lt;'Result&gt;.ContinuationOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskContinuationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4cd88-151">Obtiene el valor de enumeración <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> para este generador de tareas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-151">Gets the <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> enumeration value for this task factory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4cd88-152">Uno de los valores de enumeración que especifica las opciones de continuación predeterminadas para este generador de tareas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-152">One of the enumeration values that specifies the default continuation options for this task factory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-153">Esta propiedad devuelve el valor predeterminado de opciones de continuación para este generador.</span><span class="sxs-lookup"><span data-stu-id="4cd88-153">This property returns the default continuation options for this factory.</span></span> <span data-ttu-id="4cd88-154">Se utilizará para crear todas las tareas de continuación a menos que se especifiquen explícitamente otras opciones durante las llamadas a métodos de este generador.</span><span class="sxs-lookup"><span data-stu-id="4cd88-154">They will be used to create all continuation tasks unless other options are explicitly specified during calls to this factory's methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ContinueWhenAll">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4cd88-155">Crea una tarea de continuación que se iniciará cuando se complete el conjunto de tareas proporcionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-155">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task[], !TResult&gt; continuationFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll (tasks As Task(), continuationFunction As Func(Of Task(), TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^, TResult&gt; ^ continuationFunction);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task[], 'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="4cd88-156">Matriz de tareas desde la que se va a continuar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-156">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="4cd88-157">Delegado de función que se va a ejecutar asincrónicamente cuando se completen todas las tareas de la matriz <c>tasks</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-157">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-158">Crea una tarea de continuación que se iniciará cuando se complete el conjunto de tareas proporcionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-158">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cd88-159">Nueva tarea de continuación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-159">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-160">Cuando haya finalizado, una tarea está en uno de estos estados: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, o <xref:System.Threading.Tasks.TaskStatus.Canceled> Estados.</span><span class="sxs-lookup"><span data-stu-id="4cd88-160">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4cd88-161">Uno de los elementos de la matriz <paramref name="tasks" /> se ha eliminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-161">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4cd88-162">La matriz <paramref name="tasks" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-162">
              <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4cd88-163">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-163">-or-</span>
          </span>
          <span data-ttu-id="4cd88-164">El valor de <paramref name="continuationFunction" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-164">The <paramref name="continuationFunction" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4cd88-165">La matriz <paramref name="tasks" /> contiene un valor null o está vacío.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-165">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task[], !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task[], 'Result&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="4cd88-166">Matriz de tareas desde la que se va a continuar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-166">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="4cd88-167">Delegado de función que se va a ejecutar asincrónicamente cuando se completen todas las tareas de la matriz <c>tasks</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-167">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="4cd88-168">Token de cancelación que se va a asignar a la nueva tarea de continuación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-168">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-169">Crea una tarea de continuación que se iniciará cuando se complete el conjunto de tareas proporcionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-169">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cd88-170">Nueva tarea de continuación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-170">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-171">Cuando haya finalizado, una tarea está en uno de estos estados: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, o <xref:System.Threading.Tasks.TaskStatus.Canceled> Estados.</span><span class="sxs-lookup"><span data-stu-id="4cd88-171">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4cd88-172">Uno de los elementos de la matriz <paramref name="tasks" /> se ha eliminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-172">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="4cd88-173">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-173">-or-</span>
          </span>
          <span data-ttu-id="4cd88-174">El <see cref="T:System.Threading.CancellationTokenSource" /> que creó <paramref name="cancellationToken" /> ya se ha eliminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-174">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4cd88-175">La matriz <paramref name="tasks" /> está <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-175">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4cd88-176">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-176">-or-</span>
          </span>
          <span data-ttu-id="4cd88-177">
            <paramref name="continuationFunction" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-177">
              <paramref name="continuationFunction" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4cd88-178">La matriz <paramref name="tasks" /> contiene un valor null o está vacío.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-178">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task[], !TResult&gt; continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll (tasks As Task(), continuationFunction As Func(Of Task(), TResult), continuationOptions As TaskContinuationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task[], 'Result&gt; * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="4cd88-179">Matriz de tareas desde la que se va a continuar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-179">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="4cd88-180">Delegado de función que se va a ejecutar asincrónicamente cuando se completen todas las tareas de la matriz <c>tasks</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-180">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="4cd88-181">Uno de los valores de enumeración que controla el comportamiento de la tarea de continuación creada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-181">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="4cd88-182">Los valores NotOn* u OnlyOn* no son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-182">The NotOn* or OnlyOn* values are not valid.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-183">Crea una tarea de continuación que se iniciará cuando se complete el conjunto de tareas proporcionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-183">Creates a continuation task that will be started upon the completion of a set of provided Tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cd88-184">Nueva tarea de continuación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-184">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-185">Cuando haya finalizado, una tarea está en uno de estos estados: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, o <xref:System.Threading.Tasks.TaskStatus.Canceled> Estados.</span><span class="sxs-lookup"><span data-stu-id="4cd88-185">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4cd88-186">Uno de los elementos de la matriz <paramref name="tasks" /> se ha eliminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-186">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4cd88-187">La matriz <paramref name="tasks" /> está <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-187">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4cd88-188">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-188">-or-</span>
          </span>
          <span data-ttu-id="4cd88-189">El argumento <paramref name="continuationFunction" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-189">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4cd88-190">El argumento <paramref name="continuationOptions" /> especifica un valor no válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-190">The <paramref name="continuationOptions" /> argument specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4cd88-191">La matriz <paramref name="tasks" /> contiene un valor null o está vacío.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-191">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task[], !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task[], 'Result&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task[],TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="4cd88-192">Matriz de tareas desde la que se va a continuar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-192">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="4cd88-193">Delegado de función que se va a ejecutar asincrónicamente cuando se completen todas las tareas de la matriz <c>tasks</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-193">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="4cd88-194">Token de cancelación que se va a asignar a la nueva tarea de continuación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-194">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="4cd88-195">Uno de los valores de enumeración que controla el comportamiento de la tarea de continuación creada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-195">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="4cd88-196">Los valores NotOn* u OnlyOn* no son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-196">The NotOn* or OnlyOn* values are not valid.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="4cd88-197">Programador que se usa para programar la tarea de continuación creada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-197">The scheduler that is used to schedule the created continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-198">Crea una tarea de continuación que se iniciará cuando se complete el conjunto de tareas proporcionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-198">Creates a continuation task that will be started upon the completion of a set of provided Tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cd88-199">Nueva tarea de continuación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-199">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-200">Cuando haya finalizado, una tarea está en uno de estos estados: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, o <xref:System.Threading.Tasks.TaskStatus.Canceled> Estados.</span><span class="sxs-lookup"><span data-stu-id="4cd88-200">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4cd88-201">La matriz <paramref name="tasks" /> está <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-201">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4cd88-202">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-202">-or-</span>
          </span>
          <span data-ttu-id="4cd88-203">El argumento <paramref name="continuationFunction" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-203">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4cd88-204">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-204">-or-</span>
          </span>
          <span data-ttu-id="4cd88-205">El argumento <paramref name="scheduler" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-205">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4cd88-206">La matriz <paramref name="tasks" /> contiene un valor null o está vacío.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-206">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4cd88-207">
            <paramref name="continuationOptions" /> especifica un valor no válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-207">
              <paramref name="continuationOptions" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4cd88-208">Uno de los elementos de la matriz <paramref name="tasks" /> se ha eliminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-208">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="4cd88-209">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-209">-or-</span>
          </span>
          <span data-ttu-id="4cd88-210">El <see cref="T:System.Threading.CancellationTokenSource" /> que creó <paramref name="cancellationToken" /> ya se ha eliminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-210">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[], !TResult&gt; continuationFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll(Of TAntecedentResult) (tasks As Task(Of TAntecedentResult)(), continuationFunction As Func(Of Task(Of TAntecedentResult)(), TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^, TResult&gt; ^ continuationFunction);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[], 'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="4cd88-211">El tipo del resultado del antecedente <c>tareas</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-211">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="4cd88-212">Matriz de tareas desde la que se va a continuar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-212">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="4cd88-213">Delegado de función que se va a ejecutar asincrónicamente cuando se completen todas las tareas de la matriz <c>tasks</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-213">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-214">Crea una tarea de continuación que se iniciará cuando se complete el conjunto de tareas proporcionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-214">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cd88-215">Nueva tarea de continuación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-215">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-216">Cuando haya finalizado, una tarea está en uno de estos estados: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, o <xref:System.Threading.Tasks.TaskStatus.Canceled> Estados.</span><span class="sxs-lookup"><span data-stu-id="4cd88-216">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4cd88-217">Uno de los elementos de la matriz <paramref name="tasks" /> se ha eliminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-217">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4cd88-218">La matriz <paramref name="tasks" /> está <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-218">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4cd88-219">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-219">-or-</span>
          </span>
          <span data-ttu-id="4cd88-220">El argumento <paramref name="continuationFunction" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-220">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4cd88-221">La matriz <paramref name="tasks" /> contiene un valor null o está vacío.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-221">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[], !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[], 'Result&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="4cd88-222">El tipo del resultado del antecedente <c>tareas</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-222">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="4cd88-223">Matriz de tareas desde la que se va a continuar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-223">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="4cd88-224">Delegado de función que se va a ejecutar asincrónicamente cuando se completen todas las tareas de la matriz <c>tasks</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-224">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="4cd88-225">Token de cancelación que se va a asignar a la nueva tarea de continuación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-225">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-226">Crea una tarea de continuación que se iniciará cuando se complete el conjunto de tareas proporcionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-226">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cd88-227">Nueva tarea de continuación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-227">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-228">Cuando haya finalizado, una tarea está en uno de estos estados: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, o <xref:System.Threading.Tasks.TaskStatus.Canceled> Estados.</span><span class="sxs-lookup"><span data-stu-id="4cd88-228">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4cd88-229">Uno de los elementos de la matriz <paramref name="tasks" /> se ha eliminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-229">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="4cd88-230">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-230">-or-</span>
          </span>
          <span data-ttu-id="4cd88-231">El <see cref="T:System.Threading.CancellationTokenSource" /> que creó <paramref name="cancellationToken" /> ya se ha eliminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-231">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4cd88-232">La matriz <paramref name="tasks" /> está <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-232">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4cd88-233">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-233">-or-</span>
          </span>
          <span data-ttu-id="4cd88-234">El argumento <paramref name="continuationFunction" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-234">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4cd88-235">La matriz <paramref name="tasks" /> contiene un valor null o está vacío.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-235">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[], !TResult&gt; continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAll(Of TAntecedentResult) (tasks As Task(Of TAntecedentResult)(), continuationFunction As Func(Of Task(Of TAntecedentResult)(), TResult), continuationOptions As TaskContinuationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[], 'Result&gt; * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="4cd88-236">El tipo del resultado del antecedente <c>tareas</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-236">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="4cd88-237">Matriz de tareas desde la que se va a continuar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-237">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="4cd88-238">Delegado de función que se va a ejecutar asincrónicamente cuando se completen todas las tareas de la matriz <c>tasks</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-238">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="4cd88-239">Uno de los valores de enumeración que controla el comportamiento de la tarea de continuación creada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-239">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="4cd88-240">Los valores NotOn* u OnlyOn* no son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-240">The NotOn* or OnlyOn* values are not valid.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-241">Crea una tarea de continuación que se iniciará cuando se complete el conjunto de tareas proporcionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-241">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cd88-242">Nueva tarea de continuación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-242">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-243">Cuando haya finalizado, una tarea está en uno de estos estados: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, o <xref:System.Threading.Tasks.TaskStatus.Canceled> Estados.</span><span class="sxs-lookup"><span data-stu-id="4cd88-243">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4cd88-244">Uno de los elementos de la matriz <paramref name="tasks" /> se ha eliminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-244">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4cd88-245">La matriz <paramref name="tasks" /> está <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-245">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4cd88-246">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-246">-or-</span>
          </span>
          <span data-ttu-id="4cd88-247">El argumento <paramref name="continuationFunction" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-247">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4cd88-248">El argumento <paramref name="continuationOptions" /> especifica un valor no válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-248">The <paramref name="continuationOptions" /> argument specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4cd88-249">La matriz <paramref name="tasks" /> contiene un valor null o está vacío.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-249">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAll&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAll&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[], !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAll(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAll : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[], 'Result&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAll (tasks, continuationFunction, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[],TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="4cd88-250">El tipo del resultado del antecedente <c>tareas</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-250">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="4cd88-251">Matriz de tareas desde la que se va a continuar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-251">The array of tasks from which to continue.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="4cd88-252">Delegado de función que se va a ejecutar asincrónicamente cuando se completen todas las tareas de la matriz <c>tasks</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-252">The function delegate to execute asynchronously when all tasks in the <c>tasks</c> array have completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="4cd88-253">Token de cancelación que se va a asignar a la nueva tarea de continuación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-253">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="4cd88-254">Uno de los valores de enumeración que controla el comportamiento de la tarea de continuación creada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-254">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="4cd88-255">Los valores NotOn* u OnlyOn* no son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-255">The NotOn* or OnlyOn* values are not valid.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="4cd88-256">Programador que se usa para programar la tarea de continuación creada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-256">The scheduler that is used to schedule the created continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-257">Crea una tarea de continuación que se iniciará cuando se complete el conjunto de tareas proporcionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-257">Creates a continuation task that will be started upon the completion of a set of provided tasks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cd88-258">Nueva tarea de continuación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-258">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-259">Cuando haya finalizado, una tarea está en uno de estos estados: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, o <xref:System.Threading.Tasks.TaskStatus.Canceled> Estados.</span><span class="sxs-lookup"><span data-stu-id="4cd88-259">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4cd88-260">La matriz <paramref name="tasks" /> está <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-260">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4cd88-261">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-261">-or-</span>
          </span>
          <span data-ttu-id="4cd88-262">El argumento <paramref name="continuationFunction" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-262">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4cd88-263">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-263">-or-</span>
          </span>
          <span data-ttu-id="4cd88-264">El argumento <paramref name="scheduler" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-264">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4cd88-265">La matriz <paramref name="tasks" /> contiene un valor null o está vacío.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-265">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4cd88-266">El argumento <paramref name="continuationOptions" /> especifica un valor no válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-266">The <paramref name="continuationOptions" /> argument specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4cd88-267">Uno de los elementos de la matriz <paramref name="tasks" /> se ha eliminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-267">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="4cd88-268">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-268">-or-</span>
          </span>
          <span data-ttu-id="4cd88-269">El <see cref="T:System.Threading.CancellationTokenSource" /> que creó <paramref name="cancellationToken" /> ya se ha eliminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-269">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ContinueWhenAny">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4cd88-270">Crea una tarea de continuación que se iniciará cuando se complete cualquier tarea del conjunto proporcionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-270">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task, !TResult&gt; continuationFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny (tasks As Task(), continuationFunction As Func(Of Task, TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task ^, TResult&gt; ^ continuationFunction);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task, 'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task,TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="4cd88-271">Matriz de tareas desde la que se va a continuar cuando se complete una tarea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-271">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="4cd88-272">Delegado de función que se va a ejecutar asincrónicamente cuando se complete una tarea de la matriz <c>tasks</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-272">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-273">Crea una tarea de continuación que se iniciará cuando se complete cualquier tarea del conjunto proporcionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-273">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cd88-274">Nueva tarea de continuación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-274">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-275">Cuando haya finalizado, una tarea está en uno de estos estados: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, o <xref:System.Threading.Tasks.TaskStatus.Canceled> Estados.</span><span class="sxs-lookup"><span data-stu-id="4cd88-275">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4cd88-276">Uno de los elementos de la matriz <paramref name="tasks" /> se ha eliminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-276">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4cd88-277">La matriz <paramref name="tasks" /> está <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-277">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4cd88-278">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-278">-or-</span>
          </span>
          <span data-ttu-id="4cd88-279">El argumento <paramref name="continuationFunction" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-279">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4cd88-280">La matriz <paramref name="tasks" /> contiene un valor null o está vacío.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-280">The <paramref name="tasks" /> array contains a null value or is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task, !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task, 'Result&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task,TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="4cd88-281">Matriz de tareas desde la que se va a continuar cuando se complete una tarea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-281">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="4cd88-282">Delegado de función que se va a ejecutar asincrónicamente cuando se complete una tarea de la matriz <c>tasks</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-282">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="4cd88-283">Token de cancelación que se va a asignar a la nueva tarea de continuación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-283">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-284">Crea una tarea de continuación que se iniciará cuando se complete cualquier tarea del conjunto proporcionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-284">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cd88-285">Nueva tarea de continuación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-285">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-286">Cuando haya finalizado, una tarea está en uno de estos estados: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, o <xref:System.Threading.Tasks.TaskStatus.Canceled> Estados.</span><span class="sxs-lookup"><span data-stu-id="4cd88-286">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4cd88-287">Uno de los elementos de la matriz <paramref name="tasks" /> se ha eliminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-287">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="4cd88-288">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-288">-or-</span>
          </span>
          <span data-ttu-id="4cd88-289">El <see cref="T:System.Threading.CancellationTokenSource" /> que creó <paramref name="cancellationToken" /> ya se ha eliminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-289">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4cd88-290">La matriz de <paramref name="tasks" /> es null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-290">The <paramref name="tasks" /> array is null.</span>
          </span>
          <span data-ttu-id="4cd88-291">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-291">-or-</span>
          </span>
          <span data-ttu-id="4cd88-292">El argumento <paramref name="continuationFunction" /> es null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-292">The <paramref name="continuationFunction" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4cd88-293">La matriz <paramref name="tasks" /> contiene un valor null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-293">The <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="4cd88-294">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-294">-or-</span>
          </span>
          <span data-ttu-id="4cd88-295">La matriz <paramref name="tasks" /> está vacía.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-295">The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task, !TResult&gt; continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny (tasks As Task(), continuationFunction As Func(Of Task, TResult), continuationOptions As TaskContinuationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task ^, TResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task, 'Result&gt; * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task,TResult&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="4cd88-296">Matriz de tareas desde la que se va a continuar cuando se complete una tarea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-296">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="4cd88-297">Delegado de función que se va a ejecutar asincrónicamente cuando se complete una tarea de la matriz <c>tasks</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-297">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="4cd88-298">Uno de los valores de enumeración que controla el comportamiento de la tarea de continuación creada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-298">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="4cd88-299">Los valores <see langword="NotOn*" /> o <see langword="OnlyOn*" /> no son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-299">The <see langword="NotOn*" /> or <see langword="OnlyOn*" /> values are not valid.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-300">Crea una tarea de continuación que se iniciará cuando se complete cualquier tarea del conjunto proporcionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-300">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cd88-301">Nueva tarea de continuación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-301">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-302">Cuando haya finalizado, una tarea está en uno de estos estados: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, o <xref:System.Threading.Tasks.TaskStatus.Canceled> Estados.</span><span class="sxs-lookup"><span data-stu-id="4cd88-302">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4cd88-303">Uno de los elementos de la matriz <paramref name="tasks" /> se ha eliminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-303">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4cd88-304">La matriz <paramref name="tasks" /> está <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-304">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4cd88-305">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-305">-or-</span>
          </span>
          <span data-ttu-id="4cd88-306">El argumento <paramref name="continuationFunction" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-306">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4cd88-307">El argumento <paramref name="continuationOptions" /> especifica un valor de enumeración no válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-307">The <paramref name="continuationOptions" /> argument specifies an invalid enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4cd88-308">La matriz <paramref name="tasks" /> contiene un valor null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-308">The <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="4cd88-309">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-309">-or-</span>
          </span>
          <span data-ttu-id="4cd88-310">La matriz <paramref name="tasks" /> está vacía.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-310">The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Func&lt;System.Threading.Tasks.Task,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny(class System.Threading.Tasks.Task[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task, !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task[] * Func&lt;System.Threading.Tasks.Task, 'Result&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task,TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="tasks">
          <span data-ttu-id="4cd88-311">Matriz de tareas desde la que se va a continuar cuando se complete una tarea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-311">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="4cd88-312">Delegado de función que se va a ejecutar asincrónicamente cuando se complete una tarea de la matriz <c>tasks</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-312">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="4cd88-313">Token de cancelación que se va a asignar a la nueva tarea de continuación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-313">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="4cd88-314">Uno de los valores de enumeración que controla el comportamiento de la tarea de continuación creada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-314">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="4cd88-315">Los valores <see langword="NotOn*" /> o <see langword="OnlyOn*" /> no son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-315">The <see langword="NotOn*" /> or <see langword="OnlyOn*" /> values are not valid.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="4cd88-316">Programador que se usa para programar la tarea de continuación creada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-316">The task scheduler that is used to schedule the created continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-317">Crea una tarea de continuación que se iniciará cuando se complete cualquier tarea del conjunto proporcionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-317">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cd88-318">Nueva tarea de continuación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-318">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-319">Cuando haya finalizado, una tarea está en uno de estos estados: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, o <xref:System.Threading.Tasks.TaskStatus.Canceled> Estados.</span><span class="sxs-lookup"><span data-stu-id="4cd88-319">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4cd88-320">La matriz <paramref name="tasks" /> está <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-320">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4cd88-321">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-321">-or-</span>
          </span>
          <span data-ttu-id="4cd88-322">El argumento <paramref name="continuationFunction" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-322">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4cd88-323">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-323">-or-</span>
          </span>
          <span data-ttu-id="4cd88-324">El argumento <paramref name="scheduler" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-324">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4cd88-325">La matriz <paramref name="tasks" /> contiene un valor null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-325">The <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="4cd88-326">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-326">-or-</span>
          </span>
          <span data-ttu-id="4cd88-327">La matriz <paramref name="tasks" /> está vacía.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-327">The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4cd88-328">El argumento <paramref name="continuationOptions" /> especifica un valor <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> no válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-328">The <paramref name="continuationOptions" /> argument specifies an invalid <see cref="T:System.Threading.Tasks.TaskContinuationOptions" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4cd88-329">Uno de los elementos de la matriz <paramref name="tasks" /> se ha eliminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-329">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="4cd88-330">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-330">-or-</span>
          </span>
          <span data-ttu-id="4cd88-331">El <see cref="T:System.Threading.CancellationTokenSource" /> que creó <paramref name="cancellationToken" /> ya se ha eliminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-331">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;, !TResult&gt; continuationFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny(Of TAntecedentResult) (tasks As Task(Of TAntecedentResult)(), continuationFunction As Func(Of Task(Of TAntecedentResult), TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^, TResult&gt; ^ continuationFunction);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;, 'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="4cd88-332">El tipo del resultado del antecedente <c>tareas</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-332">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="4cd88-333">Matriz de tareas desde la que se va a continuar cuando se complete una tarea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-333">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="4cd88-334">Delegado de función que se va a ejecutar asincrónicamente cuando se complete una tarea de la matriz <c>tasks</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-334">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-335">Crea una tarea de continuación que se iniciará cuando se complete cualquier tarea del conjunto proporcionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-335">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cd88-336">Nuevo objeto <see cref="T:System.Threading.Tasks.Task`1" /> de continuación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-336">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-337">Cuando haya finalizado, una tarea está en uno de estos estados: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, o <xref:System.Threading.Tasks.TaskStatus.Canceled> Estados.</span><span class="sxs-lookup"><span data-stu-id="4cd88-337">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4cd88-338">Uno de los elementos de la matriz <paramref name="tasks" /> se ha eliminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-338">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4cd88-339">La matriz <paramref name="tasks" /> está <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-339">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4cd88-340">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-340">-or-</span>
          </span>
          <span data-ttu-id="4cd88-341">El argumento <paramref name="continuationFunction" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-341">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4cd88-342">La matriz <paramref name="tasks" /> contiene un valor null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-342">The <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="4cd88-343">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-343">-or-</span>
          </span>
          <span data-ttu-id="4cd88-344">La matriz <paramref name="tasks" /> está vacía.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-344">The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;, !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;, 'Result&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="4cd88-345">El tipo del resultado del antecedente <c>tareas</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-345">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="4cd88-346">Matriz de tareas desde la que se va a continuar cuando se complete una tarea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-346">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="4cd88-347">Delegado de función que se va a ejecutar asincrónicamente cuando se complete una tarea de la matriz <c>tasks</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-347">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="4cd88-348">Token de cancelación que se va a asignar a la nueva tarea de continuación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-348">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-349">Crea una tarea de continuación que se iniciará cuando se complete cualquier tarea del conjunto proporcionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-349">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cd88-350">Nueva tarea de continuación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-350">The new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-351">Cuando haya finalizado, una tarea está en uno de estos estados: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, o <xref:System.Threading.Tasks.TaskStatus.Canceled> Estados.</span><span class="sxs-lookup"><span data-stu-id="4cd88-351">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4cd88-352">Uno de los elementos de la matriz <paramref name="tasks" /> se ha eliminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-352">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="4cd88-353">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-353">-or-</span>
          </span>
          <span data-ttu-id="4cd88-354">El <see cref="T:System.Threading.CancellationTokenSource" /> que creó <paramref name="cancellationToken" /> ya se ha eliminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-354">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4cd88-355">La matriz <paramref name="tasks" /> está <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-355">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4cd88-356">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-356">-or-</span>
          </span>
          <span data-ttu-id="4cd88-357">El argumento <paramref name="continuationFunction" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-357">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4cd88-358">La matriz <paramref name="tasks" /> contiene un valor null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-358">The <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="4cd88-359">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-359">-or-</span>
          </span>
          <span data-ttu-id="4cd88-360">La matriz <paramref name="tasks" /> está vacía.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-360">The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;, !TResult&gt; continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWhenAny(Of TAntecedentResult) (tasks As Task(Of TAntecedentResult)(), continuationFunction As Func(Of Task(Of TAntecedentResult), TResult), continuationOptions As TaskContinuationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;, 'Result&gt; * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="4cd88-361">El tipo del resultado del antecedente <c>tareas</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-361">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="4cd88-362">Matriz de tareas desde la que se va a continuar cuando se complete una tarea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-362">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="4cd88-363">Delegado de función que se va a ejecutar asincrónicamente cuando se complete una tarea de la matriz <c>tasks</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-363">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="4cd88-364">Uno de los valores de enumeración que controla el comportamiento de la tarea de continuación creada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-364">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="4cd88-365">Los valores <see langword="NotOn*" /> o <see langword="OnlyOn*" /> no son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-365">The <see langword="NotOn*" /> or <see langword="OnlyOn*" /> values are not valid.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-366">Crea una tarea de continuación que se iniciará cuando se complete cualquier tarea del conjunto proporcionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-366">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cd88-367">Nuevo objeto <see cref="T:System.Threading.Tasks.Task`1" /> de continuación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-367">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-368">Cuando haya finalizado, una tarea está en uno de estos estados: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, o <xref:System.Threading.Tasks.TaskStatus.Canceled> Estados.</span><span class="sxs-lookup"><span data-stu-id="4cd88-368">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4cd88-369">Uno de los elementos de la matriz <paramref name="tasks" /> se ha eliminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-369">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4cd88-370">La matriz <paramref name="tasks" /> está <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-370">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4cd88-371">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-371">-or-</span>
          </span>
          <span data-ttu-id="4cd88-372">El argumento <paramref name="continuationFunction" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-372">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4cd88-373">El argumento <paramref name="continuationOptions" /> especifica un valor de enumeración no válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-373">The <paramref name="continuationOptions" /> argument specifies an invalid enumeration value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4cd88-374">La matriz <paramref name="tasks" /> contiene un valor null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-374">The <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="4cd88-375">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-375">-or-</span>
          </span>
          <span data-ttu-id="4cd88-376">La matriz <paramref name="tasks" /> está vacía.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-376">The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWhenAny&lt;TAntecedentResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt; (System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[] tasks, Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; ContinueWhenAny&lt;TAntecedentResult&gt;(class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;[] tasks, class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!!TAntecedentResult&gt;, !TResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAntecedentResult&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ ContinueWhenAny(cli::array &lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^&gt; ^ tasks, Func&lt;System::Threading::Tasks::Task&lt;TAntecedentResult&gt; ^, TResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.ContinueWhenAny : System.Threading.Tasks.Task&lt;'AntecedentResult&gt;[] * Func&lt;System.Threading.Tasks.Task&lt;'AntecedentResult&gt;, 'Result&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.ContinueWhenAny (tasks, continuationFunction, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAntecedentResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="tasks" Type="System.Threading.Tasks.Task&lt;TAntecedentResult&gt;[]" />
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TAntecedentResult&gt;,TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TAntecedentResult">
          <span data-ttu-id="4cd88-377">El tipo del resultado del antecedente <c>tareas</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-377">The type of the result of the antecedent <c>tasks</c>.</span>
          </span>
        </typeparam>
        <param name="tasks">
          <span data-ttu-id="4cd88-378">Matriz de tareas desde la que se va a continuar cuando se complete una tarea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-378">The array of tasks from which to continue when one task completes.</span>
          </span>
        </param>
        <param name="continuationFunction">
          <span data-ttu-id="4cd88-379">Delegado de función que se va a ejecutar asincrónicamente cuando se complete una tarea de la matriz <c>tasks</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-379">The function delegate to execute asynchronously when one task in the <c>tasks</c> array completes.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="4cd88-380">Token de cancelación que se va a asignar a la nueva tarea de continuación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-380">The cancellation token that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="4cd88-381">Uno de los valores de enumeración que controla el comportamiento de la tarea de continuación creada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-381">One of the enumeration values that controls the behavior of the created continuation task.</span>
          </span>
          <span data-ttu-id="4cd88-382">Los valores <see langword="NotOn*" /> o <see langword="OnlyOn*" /> no son válidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-382">The <see langword="NotOn*" /> or <see langword="OnlyOn*" /> values are not valid.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="4cd88-383">Objeto <see cref="T:System.Threading.Tasks.TaskScheduler" /> que se usa para programar el objeto <see cref="T:System.Threading.Tasks.Task`1" /> de continuación creado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-383">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> that is used to schedule the created continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-384">Crea una tarea de continuación que se iniciará cuando se complete cualquier tarea del conjunto proporcionado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-384">Creates a continuation task that will be started upon the completion of any task in the provided set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cd88-385">Nuevo objeto <see cref="T:System.Threading.Tasks.Task`1" /> de continuación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-385">The new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-386">Cuando haya finalizado, una tarea está en uno de estos estados: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, o <xref:System.Threading.Tasks.TaskStatus.Canceled> Estados.</span><span class="sxs-lookup"><span data-stu-id="4cd88-386">After completion, a task is in one of these states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled> states.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4cd88-387">La matriz <paramref name="tasks" /> está <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-387">The <paramref name="tasks" /> array is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4cd88-388">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-388">-or-</span>
          </span>
          <span data-ttu-id="4cd88-389">El argumento <paramref name="continuationFunction" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-389">The <paramref name="continuationFunction" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4cd88-390">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-390">-or-</span>
          </span>
          <span data-ttu-id="4cd88-391">El argumento <paramref name="scheduler" /> es null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-391">The <paramref name="scheduler" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4cd88-392">La matriz <paramref name="tasks" /> contiene un valor null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-392">The <paramref name="tasks" /> array contains a null value.</span>
          </span>
          <span data-ttu-id="4cd88-393">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-393">-or-</span>
          </span>
          <span data-ttu-id="4cd88-394">La matriz <paramref name="tasks" /> está vacía.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-394">The <paramref name="tasks" /> array is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4cd88-395">El argumento <paramref name="continuationOptions" /> especifica un valor TaskContinuationOptions no válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-395">The <paramref name="continuationOptions" /> argument specifies an invalid TaskContinuationOptions value.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4cd88-396">Uno de los elementos de la matriz <paramref name="tasks" /> se ha eliminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-396">One of the elements in the <paramref name="tasks" /> array has been disposed.</span>
          </span>
          <span data-ttu-id="4cd88-397">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-397">-or-</span>
          </span>
          <span data-ttu-id="4cd88-398">El <see cref="T:System.Threading.CancellationTokenSource" /> que creó <paramref name="cancellationToken" /> ya se ha eliminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-398">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreationOptions">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskCreationOptions CreationOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.Tasks.TaskCreationOptions CreationOptions" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskFactory`1.CreationOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CreationOptions As TaskCreationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::TaskCreationOptions CreationOptions { System::Threading::Tasks::TaskCreationOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.CreationOptions : System.Threading.Tasks.TaskCreationOptions" Usage="System.Threading.Tasks.TaskFactory&lt;'Result&gt;.CreationOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskCreationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4cd88-399">Obtiene el valor de enumeración <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> para este generador de tareas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-399">Gets the <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> enumeration value for this task factory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4cd88-400">Uno de los valores de enumeración que especifica las opciones de creación predeterminadas para este generador de tareas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-400">One of the enumeration values that specifies the default creation options for this task factory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-401">Esta propiedad devuelve el valor predeterminado de opciones de creación de este generador.</span><span class="sxs-lookup"><span data-stu-id="4cd88-401">This property returns the default creation options for this factory.</span></span> <span data-ttu-id="4cd88-402">Se utilizará para crear todas las tareas, a menos que se especifiquen explícitamente otras opciones durante las llamadas a métodos de este generador.</span><span class="sxs-lookup"><span data-stu-id="4cd88-402">They will be used to create all tasks unless other options are explicitly specified during calls to this factory's methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromAsync">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4cd88-403">Crea una nueva instancia de tarea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-403">Creates a task instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync (IAsyncResult asyncResult, Func&lt;IAsyncResult,TResult&gt; endMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync(class System.IAsyncResult asyncResult, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (asyncResult As IAsyncResult, endMethod As Func(Of IAsyncResult, TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(IAsyncResult ^ asyncResult, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : IAsyncResult * Func&lt;IAsyncResult, 'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (asyncResult, endMethod)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="4cd88-404">
            <see cref="T:System.IAsyncResult" /> cuya finalización debe desencadenar el procesamiento de <c>endMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-404">The <see cref="T:System.IAsyncResult" /> whose completion should trigger the processing of the <c>endMethod</c>.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="4cd88-405">Delegado de función que procesa el objeto <c>asyncResult</c> completado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-405">The function delegate that processes the completed <c>asyncResult</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-406">Crea una tarea que ejecuta una función del método End cuando se completa el <see cref="T:System.IAsyncResult" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-406">Creates a task that executes an end method function when a specified <see cref="T:System.IAsyncResult" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cd88-407">Objeto <see cref="T:System.Threading.Tasks.Task`1" /> que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-407">A <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4cd88-408">El argumento <paramref name="asyncResult" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-408">The <paramref name="asyncResult" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4cd88-409">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-409">-or-</span>
          </span>
          <span data-ttu-id="4cd88-410">El argumento <paramref name="endMethod" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-410">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync (Func&lt;AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync(class System.Func`3&lt;class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (beginMethod As Func(Of AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * obj -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginMethod">
          <span data-ttu-id="4cd88-411">Delegado que comienza la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-411">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="4cd88-412">Delegado que finaliza la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-412">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="4cd88-413">Objeto que contiene los datos que el delegado de <c>beginMethod</c> va a usar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-413">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-414">Crea una tarea que representa un par de métodos Begin y End que se ajustan al modelo de programación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-414">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cd88-415">Tarea creada que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-415">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-416">Este método produce cualquier excepción producida por el `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="4cd88-416">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="4cd88-417">Excepciones para `endmethod` se produce cuando se espera en la tarea devuelta.</span><span class="sxs-lookup"><span data-stu-id="4cd88-417">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4cd88-418">El argumento <paramref name="beginMethod" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-418">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4cd88-419">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-419">-or-</span>
          </span>
          <span data-ttu-id="4cd88-420">El argumento <paramref name="endMethod" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-420">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync (IAsyncResult asyncResult, Func&lt;IAsyncResult,TResult&gt; endMethod, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync(class System.IAsyncResult asyncResult, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0},System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (asyncResult As IAsyncResult, endMethod As Func(Of IAsyncResult, TResult), creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(IAsyncResult ^ asyncResult, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : IAsyncResult * Func&lt;IAsyncResult, 'Result&gt; * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (asyncResult, endMethod, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="4cd88-421">
            <see cref="T:System.IAsyncResult" /> cuya finalización debe desencadenar el procesamiento de <c>endMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-421">The <see cref="T:System.IAsyncResult" /> whose completion should trigger the processing of the <c>endMethod</c>.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="4cd88-422">Delegado de función que procesa el objeto <c>asyncResult</c> completado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-422">The function delegate that processes the completed <c>asyncResult</c>.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="4cd88-423">Uno de los valores de enumeración que controla el comportamiento de la tarea creada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-423">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-424">Crea una tarea que ejecuta una función del método End cuando se completa el <see cref="T:System.IAsyncResult" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-424">Creates a task that executes an end method function when a specified <see cref="T:System.IAsyncResult" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cd88-425">Tarea que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-425">A task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4cd88-426">El argumento <paramref name="asyncResult" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-426">The <paramref name="asyncResult" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4cd88-427">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-427">-or-</span>
          </span>
          <span data-ttu-id="4cd88-428">El argumento <paramref name="endMethod" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-428">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4cd88-429">El argumento <paramref name="creationOptions" /> especifica un valor no válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-429">The <paramref name="creationOptions" /> argument specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync (Func&lt;AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync(class System.Func`3&lt;class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (beginMethod As Func(Of AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, state, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="beginMethod">
          <span data-ttu-id="4cd88-430">Delegado que comienza la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-430">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="4cd88-431">Delegado que finaliza la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-431">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="4cd88-432">Objeto que contiene los datos que el delegado de <c>beginMethod</c> va a usar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-432">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="4cd88-433">Uno de los valores de enumeración que controla el comportamiento de la tarea creada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-433">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-434">Crea una tarea que representa un par de métodos Begin y End que se ajustan al modelo de programación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-434">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cd88-435">Objeto <see cref="T:System.Threading.Tasks.Task`1" /> creado que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-435">The created <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-436">Este método produce cualquier excepción producida por el `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="4cd88-436">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="4cd88-437">Excepciones para `endmethod` se produce cuando se espera en la tarea devuelta.</span><span class="sxs-lookup"><span data-stu-id="4cd88-437">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4cd88-438">El argumento <paramref name="beginMethod" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-438">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4cd88-439">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-439">-or-</span>
          </span>
          <span data-ttu-id="4cd88-440">El argumento <paramref name="endMethod" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-440">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4cd88-441">El argumento <paramref name="creationOptions" /> especifica un valor no válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-441">The <paramref name="creationOptions" /> argument specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync (IAsyncResult asyncResult, Func&lt;IAsyncResult,TResult&gt; endMethod, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync(class System.IAsyncResult asyncResult, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync (asyncResult As IAsyncResult, endMethod As Func(Of IAsyncResult, TResult), creationOptions As TaskCreationOptions, scheduler As TaskScheduler) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(IAsyncResult ^ asyncResult, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : IAsyncResult * Func&lt;IAsyncResult, 'Result&gt; * System.Threading.Tasks.TaskCreationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (asyncResult, endMethod, creationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="4cd88-442">
            <see cref="T:System.IAsyncResult" /> cuya finalización debe desencadenar el procesamiento de <c>endMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-442">The <see cref="T:System.IAsyncResult" /> whose completion should trigger the processing of the <c>endMethod</c>.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="4cd88-443">Delegado de función que procesa el objeto <c>asyncResult</c> completado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-443">The function delegate that processes the completed <c>asyncResult</c>.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="4cd88-444">Uno de los valores de enumeración que controla el comportamiento de la tarea creada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-444">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="4cd88-445">El programador de tareas que se usa para programar la tarea que ejecuta el método End.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-445">The task scheduler that is used to schedule the task that executes the end method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-446">Crea una tarea que ejecuta una función del método End cuando se completa el <see cref="T:System.IAsyncResult" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-446">Creates a task that executes an end method function when a specified <see cref="T:System.IAsyncResult" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cd88-447">Tarea creada que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-447">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4cd88-448">El argumento <paramref name="asyncResult" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-448">The <paramref name="asyncResult" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4cd88-449">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-449">-or-</span>
          </span>
          <span data-ttu-id="4cd88-450">El argumento <paramref name="endMethod" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-450">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4cd88-451">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-451">-or-</span>
          </span>
          <span data-ttu-id="4cd88-452">El argumento <paramref name="scheduler" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-452">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4cd88-453">El parámetro <paramref name="creationOptions" /> especifica un valor no válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-453">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1&gt; (Func&lt;TArg1,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1&gt;(class System.Func`4&lt;!!TArg1, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1) (beginMethod As Func(Of TArg1, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * obj -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="4cd88-454">El tipo del primer argumento pasado a la <c>beginMethod</c> delegar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-454">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="4cd88-455">Delegado que comienza la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-455">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="4cd88-456">Delegado que finaliza la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-456">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="4cd88-457">Primer argumento que se pasa al delegado de <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-457">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="4cd88-458">Objeto que contiene los datos que el delegado de <c>beginMethod</c> va a usar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-458">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-459">Crea una tarea que representa un par de métodos Begin y End que se ajustan al modelo de programación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-459">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cd88-460">Tarea creada que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-460">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-461">Este método produce cualquier excepción producida por el `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="4cd88-461">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="4cd88-462">Excepciones para `endmethod` se produce cuando se espera en la tarea devuelta.</span><span class="sxs-lookup"><span data-stu-id="4cd88-462">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4cd88-463">El argumento <paramref name="beginMethod" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-463">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4cd88-464">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-464">-or-</span>
          </span>
          <span data-ttu-id="4cd88-465">El argumento <paramref name="endMethod" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-465">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1&gt; (Func&lt;TArg1,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1&gt;(class System.Func`4&lt;!!TArg1, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1) (beginMethod As Func(Of TArg1, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, state, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="4cd88-466">El tipo del primer argumento pasado a la <c>beginMethod</c> delegar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-466">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="4cd88-467">Delegado que comienza la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-467">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="4cd88-468">Delegado que finaliza la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-468">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="4cd88-469">Primer argumento que se pasa al delegado de <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-469">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="4cd88-470">Objeto que contiene los datos que el delegado de <c>beginMethod</c> va a usar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-470">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="4cd88-471">Uno de los valores de enumeración que controla el comportamiento de la tarea creada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-471">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-472">Crea una tarea que representa un par de métodos Begin y End que se ajustan al modelo de programación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-472">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cd88-473">Tarea creada que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-473">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-474">Este método produce cualquier excepción producida por el `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="4cd88-474">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="4cd88-475">Excepciones para `endmethod` se produce cuando se espera en la tarea devuelta.</span><span class="sxs-lookup"><span data-stu-id="4cd88-475">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4cd88-476">El argumento <paramref name="beginMethod" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-476">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4cd88-477">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-477">-or-</span>
          </span>
          <span data-ttu-id="4cd88-478">El argumento <paramref name="endMethod" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-478">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4cd88-479">El parámetro <paramref name="creationOptions" /> especifica un valor no válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-479">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2&gt; (Func&lt;TArg1,TArg2,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1, TArg2&gt;(class System.Func`5&lt;!!TArg1, !!TArg2, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2) (beginMethod As Func(Of TArg1, TArg2, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, arg2 As TArg2, state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, TArg2, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, 'TArg2, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * 'TArg2 * obj -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, arg2, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="4cd88-480">El tipo del segundo argumento pasado a <c>beginMethod</c> delegar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-480">The type of the second argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="4cd88-481">El tipo del primer argumento pasado a la <c>beginMethod</c> delegar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-481">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="4cd88-482">Delegado que comienza la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-482">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="4cd88-483">Delegado que finaliza la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-483">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="4cd88-484">Primer argumento que se pasa al delegado de <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-484">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="4cd88-485">Segundo argumento que se pasa al delegado de <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-485">The second argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="4cd88-486">Objeto que contiene los datos que el delegado de <c>beginMethod</c> va a usar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-486">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-487">Crea una tarea que representa un par de métodos Begin y End que se ajustan al modelo de programación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-487">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cd88-488">Tarea creada que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-488">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-489">Este método produce cualquier excepción producida por el `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="4cd88-489">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="4cd88-490">Excepciones para `endmethod` se produce cuando se espera en la tarea devuelta.</span><span class="sxs-lookup"><span data-stu-id="4cd88-490">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4cd88-491">El argumento <paramref name="beginMethod" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-491">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4cd88-492">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-492">-or-</span>
          </span>
          <span data-ttu-id="4cd88-493">El argumento <paramref name="endMethod" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-493">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2&gt; (Func&lt;TArg1,TArg2,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1, TArg2&gt;(class System.Func`5&lt;!!TArg1, !!TArg2, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2) (beginMethod As Func(Of TArg1, TArg2, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, arg2 As TArg2, state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, TArg2, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, 'TArg2, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * 'TArg2 * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, arg2, state, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="4cd88-494">El tipo del segundo argumento pasado a <c>beginMethod</c> delegar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-494">The type of the second argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="4cd88-495">El tipo del primer argumento pasado a la <c>beginMethod</c> delegar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-495">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="4cd88-496">Delegado que comienza la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-496">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="4cd88-497">Delegado que finaliza la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-497">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="4cd88-498">Primer argumento que se pasa al delegado de <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-498">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="4cd88-499">Segundo argumento que se pasa al delegado de <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-499">The second argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="4cd88-500">Objeto que contiene los datos que el delegado de <c>beginMethod</c> va a usar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-500">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="4cd88-501">Objeto que controla el comportamiento del <see cref="T:System.Threading.Tasks.Task`1" /> creado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-501">An object that controls the behavior of the created <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-502">Crea una tarea que representa un par de métodos Begin y End que se ajustan al modelo de programación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-502">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cd88-503">Tarea creada que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-503">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-504">Este método produce cualquier excepción producida por el `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="4cd88-504">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="4cd88-505">Excepciones para `endmethod` se produce cuando se espera en la tarea devuelta.</span><span class="sxs-lookup"><span data-stu-id="4cd88-505">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4cd88-506">El argumento <paramref name="beginMethod" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-506">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4cd88-507">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-507">-or-</span>
          </span>
          <span data-ttu-id="4cd88-508">El argumento <paramref name="endMethod" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-508">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4cd88-509">El parámetro <paramref name="creationOptions" /> especifica un valor no válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-509">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2,TArg3&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2,TArg3&gt; (Func&lt;TArg1,TArg2,TArg3,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1, TArg2, TArg3&gt;(class System.Func`6&lt;!!TArg1, !!TArg2, !!TArg3, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, !!TArg3 arg3, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2, TArg3) (beginMethod As Func(Of TArg1, TArg2, TArg3, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, arg2 As TArg2, arg3 As TArg3, state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2, typename TArg3&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, TArg2, TArg3, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, 'TArg2, 'TArg3, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * 'TArg2 * 'TArg3 * obj -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, arg2, arg3, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="arg3" Type="TArg3" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="4cd88-510">El tipo del segundo argumento pasado a <c>beginMethod</c> delegar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-510">The type of the second argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="4cd88-511">El tipo del tercer argumento pasado a <c>beginMethod</c> delegar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-511">The type of the third argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg3">
          <span data-ttu-id="4cd88-512">El tipo del primer argumento pasado a la <c>beginMethod</c> delegar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-512">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="4cd88-513">Delegado que comienza la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-513">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="4cd88-514">Delegado que finaliza la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-514">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="4cd88-515">Primer argumento que se pasa al delegado de <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-515">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="4cd88-516">Segundo argumento que se pasa al delegado de <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-516">The second argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="4cd88-517">Tercer argumento que se pasa al delegado de <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-517">The third argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="4cd88-518">Objeto que contiene los datos que el delegado de <c>beginMethod</c> va a usar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-518">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-519">Crea una tarea que representa un par de métodos Begin y End que se ajustan al modelo de programación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-519">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cd88-520">Tarea creada que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-520">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-521">Este método produce cualquier excepción producida por el `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="4cd88-521">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="4cd88-522">Excepciones para `endmethod` se produce cuando se espera en la tarea devuelta.</span><span class="sxs-lookup"><span data-stu-id="4cd88-522">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4cd88-523">El argumento <paramref name="beginMethod" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-523">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4cd88-524">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-524">-or-</span>
          </span>
          <span data-ttu-id="4cd88-525">El argumento <paramref name="endMethod" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-525">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FromAsync&lt;TArg1,TArg2,TArg3&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; FromAsync&lt;TArg1,TArg2,TArg3&gt; (Func&lt;TArg1,TArg2,TArg3,AsyncCallback,object,IAsyncResult&gt; beginMethod, Func&lt;IAsyncResult,TResult&gt; endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; FromAsync&lt;TArg1, TArg2, TArg3&gt;(class System.Func`6&lt;!!TArg1, !!TArg2, !!TArg3, class System.AsyncCallback, object, class System.IAsyncResult&gt; beginMethod, class System.Func`2&lt;class System.IAsyncResult, !TResult&gt; endMethod, !!TArg1 arg1, !!TArg2 arg2, !!TArg3 arg3, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromAsync(Of TArg1, TArg2, TArg3) (beginMethod As Func(Of TArg1, TArg2, TArg3, AsyncCallback, Object, IAsyncResult), endMethod As Func(Of IAsyncResult, TResult), arg1 As TArg1, arg2 As TArg2, arg3 As TArg3, state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg1, typename TArg2, typename TArg3&gt;&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ FromAsync(Func&lt;TArg1, TArg2, TArg3, AsyncCallback ^, System::Object ^, IAsyncResult ^&gt; ^ beginMethod, Func&lt;IAsyncResult ^, TResult&gt; ^ endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.FromAsync : Func&lt;'TArg1, 'TArg2, 'TArg3, AsyncCallback, obj, IAsyncResult&gt; * Func&lt;IAsyncResult, 'Result&gt; * 'TArg1 * 'TArg2 * 'TArg3 * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.FromAsync (beginMethod, endMethod, arg1, arg2, arg3, state, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="beginMethod" Type="System.Func&lt;TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult&gt;" />
        <Parameter Name="endMethod" Type="System.Func&lt;System.IAsyncResult,TResult&gt;" />
        <Parameter Name="arg1" Type="TArg1" />
        <Parameter Name="arg2" Type="TArg2" />
        <Parameter Name="arg3" Type="TArg3" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TArg1">
          <span data-ttu-id="4cd88-526">El tipo del segundo argumento pasado a <c>beginMethod</c> delegar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-526">The type of the second argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg2">
          <span data-ttu-id="4cd88-527">El tipo del tercer argumento pasado a <c>beginMethod</c> delegar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-527">The type of the third argument passed to <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <typeparam name="TArg3">
          <span data-ttu-id="4cd88-528">El tipo del primer argumento pasado a la <c>beginMethod</c> delegar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-528">The type of the first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </typeparam>
        <param name="beginMethod">
          <span data-ttu-id="4cd88-529">Delegado que comienza la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-529">The delegate that begins the asynchronous operation.</span>
          </span>
        </param>
        <param name="endMethod">
          <span data-ttu-id="4cd88-530">Delegado que finaliza la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-530">The delegate that ends the asynchronous operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="4cd88-531">Primer argumento que se pasa al delegado de <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-531">The first argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="4cd88-532">Segundo argumento que se pasa al delegado de <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-532">The second argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="4cd88-533">Tercer argumento que se pasa al delegado de <c>beginMethod</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-533">The third argument passed to the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="4cd88-534">Objeto que contiene los datos que el delegado de <c>beginMethod</c> va a usar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-534">An object containing data to be used by the <c>beginMethod</c> delegate.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="4cd88-535">Un objeto que controla el comportamiento de la tarea creada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-535">An object that controls the behavior of the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-536">Crea una tarea que representa un par de métodos Begin y End que se ajustan al modelo de programación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-536">Creates a task that represents a pair of begin and end methods that conform to the Asynchronous Programming Model pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cd88-537">Tarea creada que representa la operación asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-537">The created task that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-538">Este método produce cualquier excepción producida por el `beginMethod`.</span><span class="sxs-lookup"><span data-stu-id="4cd88-538">This method throws any exceptions thrown by the `beginMethod`.</span></span> <span data-ttu-id="4cd88-539">Excepciones para `endmethod` se produce cuando se espera en la tarea devuelta.</span><span class="sxs-lookup"><span data-stu-id="4cd88-539">Exceptions for `endmethod` are thrown when waiting on the returned task.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4cd88-540">El argumento <paramref name="beginMethod" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-540">The <paramref name="beginMethod" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4cd88-541">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-541">-or-</span>
          </span>
          <span data-ttu-id="4cd88-542">El argumento <paramref name="endMethod" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-542">The <paramref name="endMethod" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4cd88-543">El parámetro <paramref name="creationOptions" /> especifica un valor no válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-543">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Scheduler">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskScheduler Scheduler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.TaskScheduler Scheduler" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskFactory`1.Scheduler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scheduler As TaskScheduler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::TaskScheduler ^ Scheduler { System::Threading::Tasks::TaskScheduler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scheduler : System.Threading.Tasks.TaskScheduler" Usage="System.Threading.Tasks.TaskFactory&lt;'Result&gt;.Scheduler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskScheduler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4cd88-544">Obtiene el programador de tareas para este generador de tareas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-544">Gets the task scheduler for this task factory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4cd88-545">El programador de tareas para este generador de tareas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-545">The task scheduler for this task factory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-546">Esta propiedad devuelve al programador predeterminado para este generador.</span><span class="sxs-lookup"><span data-stu-id="4cd88-546">This property returns the default scheduler for this factory.</span></span> <span data-ttu-id="4cd88-547">Se utilizará para programar todas las tareas, a menos que se especifique explícitamente otro programador durante las llamadas a métodos de este generador.</span><span class="sxs-lookup"><span data-stu-id="4cd88-547">It will be used to schedule all tasks unless another scheduler is explicitly specified during calls to this factory's methods.</span></span>  
  
 <span data-ttu-id="4cd88-548">Si esta propiedad devuelve `null`, <xref:System.Threading.Tasks.TaskScheduler.Current%2A> se usará.</span><span class="sxs-lookup"><span data-stu-id="4cd88-548">If this property returns `null`, <xref:System.Threading.Tasks.TaskScheduler.Current%2A> will be used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="StartNew">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4cd88-549">Crea e inicia una tarea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-549">Creates and starts a task.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;TResult&gt; function);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`1&lt;!TResult&gt; function) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew (function As Func(Of TResult)) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;TResult&gt; ^ function);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew function" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="4cd88-550">Delegado de función que devuelve el resultado futuro que va a estar disponible a través de la tarea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-550">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-551">Crea e inicia una tarea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-551">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cd88-552">La tarea iniciada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-552">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-553">Una llamada a `StartNew` es funcionalmente equivalente a la creación de una tarea mediante uno de los <xref:System.Threading.Tasks.Task%601> constructores y llamadas a continuación, el <xref:System.Threading.Tasks.Task.Start%2A> método para programar su ejecución.</span><span class="sxs-lookup"><span data-stu-id="4cd88-553">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors, and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="4cd88-554">Sin embargo, a menos que la creación y la programación deben estar separados, `StartNew` es el enfoque recomendado para mayor simplicidad y rendimiento.</span><span class="sxs-lookup"><span data-stu-id="4cd88-554">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4cd88-555">El argumento <paramref name="function" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-555">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;object,TResult&gt; function, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`2&lt;object, !TResult&gt; function, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew (function As Func(Of Object, TResult), state As Object) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;obj, 'Result&gt; * obj -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="4cd88-556">Delegado de función que devuelve el resultado futuro que va a estar disponible a través de la tarea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-556">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="4cd88-557">Objeto que contiene los datos que el delegado de <c>function</c> va a usar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-557">An object that contains data to be used by the <c>function</c> delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-558">Crea e inicia una tarea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-558">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cd88-559">La tarea iniciada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-559">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-560">Una llamada a `StartNew` es funcionalmente equivalente a la creación de una tarea mediante uno de los <xref:System.Threading.Tasks.Task%601> constructores y, a continuación, que realiza la llamada la <xref:System.Threading.Tasks.Task.Start%2A> método para programar su ejecución.</span><span class="sxs-lookup"><span data-stu-id="4cd88-560">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="4cd88-561">Sin embargo, a menos que la creación y la programación deben estar separados, `StartNew` es el enfoque recomendado para mayor simplicidad y rendimiento.</span><span class="sxs-lookup"><span data-stu-id="4cd88-561">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4cd88-562">El argumento <paramref name="function" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-562">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;TResult&gt; function, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`1&lt;!TResult&gt; function, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;TResult&gt; ^ function, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;'Result&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="4cd88-563">Delegado de función que devuelve el resultado futuro que va a estar disponible a través de la tarea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-563">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="4cd88-564">Token de cancelación que se va a asignar a la nueva tarea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-564">The cancellation token that will be assigned to the new task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-565">Crea e inicia una tarea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-565">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cd88-566">La tarea iniciada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-566">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-567">Una llamada a `StartNew` es funcionalmente equivalente a la creación de una tarea mediante uno de los <xref:System.Threading.Tasks.Task%601> constructores y, a continuación, que realiza la llamada la <xref:System.Threading.Tasks.Task.Start%2A> método para programar su ejecución.</span><span class="sxs-lookup"><span data-stu-id="4cd88-567">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="4cd88-568">Sin embargo, a menos que la creación y la programación deben estar separados, `StartNew` es el enfoque recomendado para mayor simplicidad y rendimiento.</span><span class="sxs-lookup"><span data-stu-id="4cd88-568">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4cd88-569">Ya se ha eliminado el origen de token de cancelación que ha creado <paramref name="cancellationToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-569">The cancellation token source that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4cd88-570">El argumento <paramref name="function" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-570">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;TResult&gt; function, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`1&lt;!TResult&gt; function, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew (function As Func(Of TResult), creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;TResult&gt; ^ function, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;'Result&gt; * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="4cd88-571">Delegado de función que devuelve el resultado futuro que va a estar disponible a través de la tarea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-571">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="4cd88-572">Uno de los valores de enumeración que controla el comportamiento de la tarea creada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-572">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-573">Crea e inicia una tarea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-573">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cd88-574">Objeto <see cref="T:System.Threading.Tasks.Task`1" /> iniciado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-574">The started <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-575">Una llamada a `StartNew` es funcionalmente equivalente a la creación de una tarea mediante uno de los <xref:System.Threading.Tasks.Task%601> constructores y, a continuación, que realiza la llamada la <xref:System.Threading.Tasks.Task.Start%2A> método para programar su ejecución.</span><span class="sxs-lookup"><span data-stu-id="4cd88-575">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="4cd88-576">Sin embargo, a menos que la creación y la programación deben estar separados, `StartNew` es el enfoque recomendado para mayor simplicidad y rendimiento.</span><span class="sxs-lookup"><span data-stu-id="4cd88-576">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4cd88-577">El argumento <paramref name="function" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-577">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4cd88-578">El parámetro <paramref name="creationOptions" /> especifica un valor no válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-578">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;object,TResult&gt; function, object state, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`2&lt;object, !TResult&gt; function, object state, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;obj, 'Result&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, state, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="4cd88-579">Delegado de función que devuelve el resultado futuro que va a estar disponible a través de la tarea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-579">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="4cd88-580">Objeto que contiene los datos que el delegado de <c>function</c> va a usar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-580">An object that contains data to be used by the <c>function</c> delegate.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="4cd88-581">Token de cancelación que se va a asignar a la nueva tarea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-581">The cancellation token that will be assigned to the new task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-582">Crea e inicia una tarea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-582">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cd88-583">La tarea iniciada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-583">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-584">Una llamada a `StartNew` es funcionalmente equivalente a la creación de una tarea mediante uno de los <xref:System.Threading.Tasks.Task%601> constructores y, a continuación, que realiza la llamada la <xref:System.Threading.Tasks.Task.Start%2A> método para programar su ejecución.</span><span class="sxs-lookup"><span data-stu-id="4cd88-584">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="4cd88-585">Sin embargo, a menos que la creación y la programación deben estar separados, `StartNew` es el enfoque recomendado para mayor simplicidad y rendimiento.</span><span class="sxs-lookup"><span data-stu-id="4cd88-585">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4cd88-586">Ya se ha eliminado el origen de token de cancelación que ha creado <paramref name="cancellationToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-586">The cancellation token source that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4cd88-587">El argumento <paramref name="function" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-587">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;object,TResult&gt; function, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`2&lt;object, !TResult&gt; function, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartNew (function As Func(Of Object, TResult), state As Object, creationOptions As TaskCreationOptions) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;obj, 'Result&gt; * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, state, creationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="4cd88-588">Delegado de función que devuelve el resultado futuro que va a estar disponible a través de la tarea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-588">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="4cd88-589">Objeto que contiene los datos que el delegado de <c>function</c> va a usar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-589">An object that contains data to be used by the <c>function</c> delegate.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="4cd88-590">Uno de los valores de enumeración que controla el comportamiento de la tarea creada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-590">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-591">Crea e inicia una tarea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-591">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cd88-592">La tarea iniciada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-592">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-593">Una llamada a `StartNew` es funcionalmente equivalente a la creación de una tarea mediante uno de los <xref:System.Threading.Tasks.Task%601> constructores y, a continuación, que realiza la llamada la <xref:System.Threading.Tasks.Task.Start%2A> método para programar su ejecución.</span><span class="sxs-lookup"><span data-stu-id="4cd88-593">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="4cd88-594">Sin embargo, a menos que la creación y la programación deben estar separados, `StartNew` es el enfoque recomendado para mayor simplicidad y rendimiento.</span><span class="sxs-lookup"><span data-stu-id="4cd88-594">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4cd88-595">El argumento <paramref name="function" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-595">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4cd88-596">El parámetro <paramref name="creationOptions" /> especifica un valor no válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-596">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;TResult&gt; function, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`1&lt;!TResult&gt; function, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;TResult&gt; ^ function, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;'Result&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskCreationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, cancellationToken, creationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="4cd88-597">Delegado de función que devuelve el resultado futuro que va a estar disponible a través de la tarea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-597">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="4cd88-598">Token de cancelación que se va a asignar a la nueva tarea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-598">The cancellation token that will be assigned to the new task.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="4cd88-599">Uno de los valores de enumeración que controla el comportamiento de la tarea creada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-599">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="4cd88-600">Programador de tareas que se usó para programar la tarea creada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-600">The task scheduler that is used to schedule the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-601">Crea e inicia una tarea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-601">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cd88-602">La tarea iniciada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-602">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-603">Una llamada a `StartNew` es funcionalmente equivalente a la creación de una tarea mediante uno de los <xref:System.Threading.Tasks.Task%601> constructores y, a continuación, que realiza la llamada la <xref:System.Threading.Tasks.Task.Start%2A> método para programar su ejecución.</span><span class="sxs-lookup"><span data-stu-id="4cd88-603">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="4cd88-604">Sin embargo, a menos que la creación y la programación deben estar separados, `StartNew` es el enfoque recomendado para mayor simplicidad y rendimiento.</span><span class="sxs-lookup"><span data-stu-id="4cd88-604">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4cd88-605">Ya se ha eliminado el origen de token de cancelación que ha creado <paramref name="cancellationToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-605">The cancellation token source that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4cd88-606">El argumento <paramref name="function" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-606">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4cd88-607">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-607">-or-</span>
          </span>
          <span data-ttu-id="4cd88-608">El argumento <paramref name="scheduler" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-608">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4cd88-609">El parámetro <paramref name="creationOptions" /> especifica un valor no válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-609">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; StartNew (Func&lt;object,TResult&gt; function, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; StartNew(class System.Func`2&lt;object, !TResult&gt; function, object state, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ StartNew(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="member this.StartNew : Func&lt;obj, 'Result&gt; * obj * System.Threading.CancellationToken * System.Threading.Tasks.TaskCreationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="taskFactory.StartNew (function, state, cancellationToken, creationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="4cd88-610">Delegado de función que devuelve el resultado futuro que va a estar disponible a través de la tarea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-610">A function delegate that returns the future result to be available through the task.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="4cd88-611">Objeto que contiene los datos que el delegado de <c>function</c> va a usar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-611">An object that contains data to be used by the <c>function</c> delegate.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="4cd88-612">Token de cancelación que se va a asignar a la nueva tarea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-612">The cancellation token that will be assigned to the new task.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="4cd88-613">Uno de los valores de enumeración que controla el comportamiento de la tarea creada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-613">One of the enumeration values that controls the behavior of the created task.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="4cd88-614">Programador de tareas que se usó para programar la tarea creada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-614">The task scheduler that is used to schedule the created task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4cd88-615">Crea e inicia una tarea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-615">Creates and starts a task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4cd88-616">La tarea iniciada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-616">The started task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cd88-617">Una llamada a `StartNew` es funcionalmente equivalente a la creación de una tarea mediante uno de los <xref:System.Threading.Tasks.Task%601> constructores y, a continuación, que realiza la llamada la <xref:System.Threading.Tasks.Task.Start%2A> método para programar su ejecución.</span><span class="sxs-lookup"><span data-stu-id="4cd88-617">Calling `StartNew` is functionally equivalent to creating a task by using one of the <xref:System.Threading.Tasks.Task%601> constructors and then calling the <xref:System.Threading.Tasks.Task.Start%2A> method to schedule it for execution.</span></span>  
  
 <span data-ttu-id="4cd88-618">Sin embargo, a menos que la creación y la programación deben estar separados, `StartNew` es el enfoque recomendado para mayor simplicidad y rendimiento.</span><span class="sxs-lookup"><span data-stu-id="4cd88-618">However, unless creation and scheduling must be separated, `StartNew` is the recommended approach for both simplicity and performance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="4cd88-619">Ya se ha eliminado el origen de token de cancelación que ha creado <paramref name="cancellationToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-619">The cancellation token source that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4cd88-620">El argumento <paramref name="function" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-620">The <paramref name="function" /> argument is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4cd88-621">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-621">-or-</span>
          </span>
          <span data-ttu-id="4cd88-622">El argumento <paramref name="scheduler" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-622">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4cd88-623">El parámetro <paramref name="creationOptions" /> especifica un valor no válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4cd88-623">The <paramref name="creationOptions" /> parameter specifies an invalid value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>