<Type Name="ParallelOptions" FullName="System.Threading.Tasks.ParallelOptions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="558953d371251bc19cfbb1941130c0c85d94b7ed" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30527739" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ParallelOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ParallelOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.ParallelOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class ParallelOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParallelOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Almacena las opciones que configuran el funcionamiento de los métodos en la clase <see cref="T:System.Threading.Tasks.Parallel" />.</summary>
    <remarks>To be added.</remarks>
    <threadsafe>El constructor es segura para subprocesos y se puede usar en varios subprocesos simultáneamente para construir varias instancias. Ninguno de los otros miembros públicos es seguro para subprocesos.</threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParallelOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ParallelOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParallelOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Threading.Tasks.ParallelOptions" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor inicializa la instancia con los valores predeterminados. <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> se inicializa en -1, lo que significa que no hay ningún conjunto de límite superior en cuánto paralelismo se debería emplear. <xref:System.Threading.Tasks.ParallelOptions.CancellationToken%2A> se inicializa en un token no se puede cancelar, y <xref:System.Threading.Tasks.ParallelOptions.TaskScheduler%2A> se inicializa en el programador predeterminado (TaskScheduler.Default).  
  
 Todos estos valores predeterminados pueden sobrescribirse mediante los descriptores de acceso del conjunto de propiedades en la instancia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancellationToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken CancellationToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken CancellationToken" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ParallelOptions.CancellationToken" />
      <MemberSignature Language="VB.NET" Value="Public Property CancellationToken As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken CancellationToken { System::Threading::CancellationToken get(); void set(System::Threading::CancellationToken value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el <see cref="T:System.Threading.CancellationToken" /> asociado a esta instancia de <see cref="T:System.Threading.Tasks.ParallelOptions" />.</summary>
        <value>Token que está asociado a esta instancia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Proporcionar un <xref:System.Threading.CancellationToken> a una <xref:System.Threading.Tasks.Parallel> método permite que la operación se puede salir pronto. El código externo a la operación puede cancelar el token, y si la operación observa el símbolo (token) que se va a establecer, pueda salir pronto iniciando una <xref:System.OperationCanceledException>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDegreeOfParallelism">
      <MemberSignature Language="C#" Value="public int MaxDegreeOfParallelism { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDegreeOfParallelism" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDegreeOfParallelism As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxDegreeOfParallelism { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el número máximo de tareas simultáneas habilitadas por esta instancia <see cref="T:System.Threading.Tasks.ParallelOptions" />.</summary>
        <value>Entero que representa el grado máximo de paralelismo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> propiedad afecta al número de operaciones simultáneas ejecutadas por <xref:System.Threading.Tasks.Parallel> llamadas al método que se pasan esto <xref:System.Threading.Tasks.ParallelOptions> instancia. Un valor de propiedad positivo limita el número de operaciones simultáneas al valor establecido. Si es -1, no hay ningún límite en el número de operaciones en ejecución simultánea.  
  
 De forma predeterminada, <xref:System.Threading.Tasks.Parallel.For%2A> y <xref:System.Threading.Tasks.Parallel.ForEach%2A> usará muchos subprocesos proporciona el programador subyacente, por lo que cambiar <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> de manera predeterminada sólo limita cuántas tareas simultáneas que se usará.  
  
 Por lo general, no es necesario modificar esta configuración. Sin embargo, puede establecer de forma explícita en escenarios de uso avanzados como los siguientes:  
  
-   Cuando se sabe que un algoritmo determinado está usando no escala más allá de un cierto número de núcleos. Puede establecer la propiedad para evitar malgastar ciclos en núcleos adicionales.  
  
-   Cuando está ejecutando simultáneamente varios algoritmos y desea definir manualmente la cantidad del sistema puede utilizar cada algoritmo. Puede establecer un <xref:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism%2A> valor para cada uno.  
  
-   Cuando la heurística del grupo de subprocesos no puede determinar el número correcto de subprocesos que se utilizarán y puede acabar inyectar demasiados subprocesos. Por ejemplo, en iteraciones del cuerpo de bucle de ejecución prolongada, el grupo de subprocesos no puede distinguir entre progreso razonable o bloqueo activo o interbloqueo y no pueda recuperar los subprocesos que se agregaron para mejorar el rendimiento. En este caso, puede establecer la propiedad para asegurarse de que no utilice más de un número razonable de subprocesos.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La propiedad se establece en cero o en un valor que es menor que -1.</exception>
      </Docs>
    </Member>
    <Member MemberName="TaskScheduler">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.TaskScheduler TaskScheduler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.TaskScheduler TaskScheduler" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ParallelOptions.TaskScheduler" />
      <MemberSignature Language="VB.NET" Value="Public Property TaskScheduler As TaskScheduler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::TaskScheduler ^ TaskScheduler { System::Threading::Tasks::TaskScheduler ^ get(); void set(System::Threading::Tasks::TaskScheduler ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Parallel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskScheduler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el <see cref="T:System.Threading.Tasks.TaskScheduler" /> asociado a esta instancia de <see cref="T:System.Threading.Tasks.ParallelOptions" />. Al establecer esta propiedad en null, se indica que no debe usarse el programador actual.</summary>
        <value>Programador de tareas asociado a esta instancia.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>