<Type Name="CustomAttributeNamedArgument" FullName="System.Reflection.CustomAttributeNamedArgument">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cb5683beef3de443e9a5df3d7cf110331a07a5fe" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct CustomAttributeNamedArgument" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit CustomAttributeNamedArgument extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.CustomAttributeNamedArgument" />
  <TypeSignature Language="VB.NET" Value="Public Structure CustomAttributeNamedArgument" />
  <TypeSignature Language="C++ CLI" Value="public value class CustomAttributeNamedArgument" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="cca80-101">Representa un argumento con nombre de un atributo personalizado en el contexto de sólo reflexión.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cca80-101">Represents a named argument of a custom attribute in the reflection-only context.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cca80-102">No se puede ejecutar código que se examina en el contexto de solo reflexión, por lo que no siempre es posible examinar los atributos personalizados mediante la creación de instancias de ellos y, a continuación, examinar sus propiedades, mediante métodos como <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>, y así sucesivamente.</span><span class="sxs-lookup"><span data-stu-id="cca80-102">Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>, and so on.</span></span> <span data-ttu-id="cca80-103">Si se ha cargado el código para el propio tipo de atributo en el contexto de solo reflexión, no se puede ejecutar.</span><span class="sxs-lookup"><span data-stu-id="cca80-103">If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.</span></span>  
  
 <span data-ttu-id="cca80-104">El <xref:System.Reflection.CustomAttributeNamedArgument> estructura se usa por la <xref:System.Reflection.CustomAttributeData> clase para proporcionar acceso a un argumento con nombre especificado para una instancia del atributo personalizado, sin ejecutar el código de la propiedad correspondiente del tipo de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="cca80-104">The <xref:System.Reflection.CustomAttributeNamedArgument> structure is used by the <xref:System.Reflection.CustomAttributeData> class to provide access to a named argument specified for a custom attribute instance, without executing the code of the corresponding property of the custom attribute type.</span></span> <span data-ttu-id="cca80-105">El <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A> propiedad devuelve un <xref:System.Reflection.CustomAttributeTypedArgument> estructura que contiene el tipo y el valor del argumento con nombre.</span><span class="sxs-lookup"><span data-stu-id="cca80-105">The <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A> property returns a <xref:System.Reflection.CustomAttributeTypedArgument> structure that contains the type and value of the named argument.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cca80-106">Si un argumento tiene un nombre o posicionales, debe acceder a su tipo y valor utilizando el <xref:System.Reflection.CustomAttributeTypedArgument> estructura.</span><span class="sxs-lookup"><span data-stu-id="cca80-106">Whether an argument is named or positional, you must access its type and value by using the <xref:System.Reflection.CustomAttributeTypedArgument> structure.</span></span>  
  
 <span data-ttu-id="cca80-107">Para crear instancias de la <xref:System.Reflection.CustomAttributeData> clase, use la `static` <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> método de fábrica.</span><span class="sxs-lookup"><span data-stu-id="cca80-107">To create instances of the <xref:System.Reflection.CustomAttributeData> class, use the `static`<xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> factory method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cca80-108">En el ejemplo siguiente se define un atributo personalizado con cuatro constructores y cuatro propiedades.</span><span class="sxs-lookup"><span data-stu-id="cca80-108">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="cca80-109">Dos de las propiedades son de solo lectura y se establecen mediante los parámetros posicionales de los constructores.</span><span class="sxs-lookup"><span data-stu-id="cca80-109">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="cca80-110">Las otras dos propiedades son de lectura/escritura, y puede ser conjunto sólo mediante argumentos con nombre.</span><span class="sxs-lookup"><span data-stu-id="cca80-110">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="cca80-111">Una propiedad posicional es una matriz de cadenas y una propiedad con nombre es una matriz de enteros.</span><span class="sxs-lookup"><span data-stu-id="cca80-111">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="cca80-112">El atributo se aplica al ensamblado, a un tipo declarado en el ensamblado, a un método del tipo y a un parámetro del método.</span><span class="sxs-lookup"><span data-stu-id="cca80-112">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="cca80-113">Se usan distintos constructores para estos casos.</span><span class="sxs-lookup"><span data-stu-id="cca80-113">Different constructors are used for these cases.</span></span> <span data-ttu-id="cca80-114">Cuando se ejecuta, el ensamblado se carga en el contexto de solo reflexión y muestra información sobre los atributos personalizados que se aplicaron a él y a los tipos y miembros que contiene.</span><span class="sxs-lookup"><span data-stu-id="cca80-114">When executed, the assembly loads itself into the reflection-only context and displays information about the custom attributes that were applied to it and to the type and members it contains.</span></span>  
  
 <span data-ttu-id="cca80-115">El atributo que se aplica al tipo muestra propiedades de matriz, con argumentos posicionales y con nombre.</span><span class="sxs-lookup"><span data-stu-id="cca80-115">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Reflection.CustomAttributeData" />
    <altmember cref="T:System.Reflection.CustomAttributeTypedArgument" />
    <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cca80-116">Inicializa una nueva instancia de la clase <see cref="T:System.Reflection.CustomAttributeNamedArgument" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cca80-116">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeNamedArgument (System.Reflection.MemberInfo memberInfo, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.MemberInfo memberInfo, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomAttributeNamedArgument(System::Reflection::MemberInfo ^ memberInfo, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="memberInfo">
          <span data-ttu-id="cca80-117">Campo o propiedad del atributo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cca80-117">A field or property of the custom attribute.</span>
          </span>
          <span data-ttu-id="cca80-118">El nuevo objeto <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> representa este miembro y su valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cca80-118">The new <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> object represents this member and its value.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="cca80-119">Valor del campo o de la propiedad del atributo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cca80-119">The value of the field or property of the custom attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cca80-120">Inicializa una nueva instancia de la clase <see cref="T:System.Reflection.CustomAttributeNamedArgument" />, que representa la propiedad o el campo especificado del atributo personalizado, y especifica el valor del campo o la propiedad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cca80-120">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> class, which represents the specified field or property of the custom attribute, and specifies the value of the field or property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cca80-121">Este constructor está destinado a los herederos de la <xref:System.Reflection.CustomAttributeNamedArgument> clase.</span><span class="sxs-lookup"><span data-stu-id="cca80-121">This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeNamedArgument> class.</span></span> <span data-ttu-id="cca80-122">No está pensado para su uso en código de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="cca80-122">It is not intended for use in application code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cca80-123">
            <paramref name="memberInfo" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cca80-123">
              <paramref name="memberInfo" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cca80-124">
            <paramref name="memberInfo" /> no es un campo o propiedad del atributo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cca80-124">
              <paramref name="memberInfo" /> is not a field or property of the custom attribute.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeNamedArgument (System.Reflection.MemberInfo memberInfo, System.Reflection.CustomAttributeTypedArgument typedArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.MemberInfo memberInfo, valuetype System.Reflection.CustomAttributeTypedArgument typedArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Reflection.CustomAttributeTypedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomAttributeNamedArgument(System::Reflection::MemberInfo ^ memberInfo, System::Reflection::CustomAttributeTypedArgument typedArgument);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" />
        <Parameter Name="typedArgument" Type="System.Reflection.CustomAttributeTypedArgument" />
      </Parameters>
      <Docs>
        <param name="memberInfo">
          <span data-ttu-id="cca80-125">Campo o propiedad del atributo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cca80-125">A field or property of the custom attribute.</span>
          </span>
          <span data-ttu-id="cca80-126">El nuevo objeto <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> representa este miembro y su valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cca80-126">The new <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> object represents this member and its value.</span>
          </span>
        </param>
        <param name="typedArgument">
          <span data-ttu-id="cca80-127">Objeto que describe el tipo y el valor del campo o la propiedad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cca80-127">An object that describes the type and value of the field or property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cca80-128">Inicializa una nueva instancia de la clase <see cref="T:System.Reflection.CustomAttributeNamedArgument" />, que representa la propiedad o el campo especificado del atributo personalizado, y especifica un objeto <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> que describe el tipo y el valor del campo o de la propiedad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cca80-128">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> class, which represents the specified field or property of the custom attribute, and specifies a <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> object that describes the type and value of the field or property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cca80-129">Este constructor está destinado a los herederos de la <xref:System.Reflection.CustomAttributeNamedArgument> clase.</span><span class="sxs-lookup"><span data-stu-id="cca80-129">This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeNamedArgument> class.</span></span> <span data-ttu-id="cca80-130">No está pensado para su uso en código de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="cca80-130">It is not intended for use in application code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cca80-131">
            <paramref name="memberInfo" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cca80-131">
              <paramref name="memberInfo" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="cca80-132">Objeto que se va a comparar con esta instancia o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cca80-132">An object to compare with this instance, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cca80-133">Devuelve un valor que indica si esta instancia equivale a un objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cca80-133">Returns a value that indicates whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cca80-134">Es <see langword="true" /> si <paramref name="obj" /> es igual al tipo y valor de esta instancia; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cca80-134">
              <see langword="true" /> if <paramref name="obj" /> equals the type and value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cca80-135">Devuelve el código hash de esta instancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cca80-135">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cca80-136">Código hash de un entero de 32 bits con signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cca80-136">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsField">
      <MemberSignature Language="C#" Value="public bool IsField { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsField" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeNamedArgument.IsField" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsField As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsField { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cca80-137">Obtiene un valor que indica si el argumento con nombre es un campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cca80-137">Gets a value that indicates whether the named argument is a field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cca80-138">
            <see langword="true" /> si el argumento con nombre es un campo; si no, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cca80-138">
              <see langword="true" /> if the named argument is a field; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberInfo">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo MemberInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo MemberInfo" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeNamedArgument.MemberInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberInfo As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberInfo ^ MemberInfo { System::Reflection::MemberInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cca80-139">Obtiene el miembro de atributo que se utilizaría para establecer el argumento con nombre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cca80-139">Gets the attribute member that would be used to set the named argument.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cca80-140">Obtiene el miembro de atributo que se usaría para establecer el argumento con nombre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cca80-140">The attribute member that would be used to set the named argument.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cca80-141">En la mayoría de los casos, el miembro es una propiedad.</span><span class="sxs-lookup"><span data-stu-id="cca80-141">In most cases, the member is a property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberName">
      <MemberSignature Language="C#" Value="public string MemberName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MemberName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeNamedArgument.MemberName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MemberName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cca80-142">Obtiene el miembro de atributo que se usaría para establecer el argumento con nombre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cca80-142">Gets the name of the attribute member that would be used to set the named argument.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cca80-143">Miembro de atributo que se usaría para establecer el argumento con nombre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cca80-143">The name of the attribute member that would be used to set the named argument.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.CustomAttributeNamedArgument left, System.Reflection.CustomAttributeNamedArgument right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Reflection.CustomAttributeNamedArgument left, valuetype System.Reflection.CustomAttributeNamedArgument right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.op_Equality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As CustomAttributeNamedArgument, right As CustomAttributeNamedArgument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::CustomAttributeNamedArgument left, System::Reflection::CustomAttributeNamedArgument right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.CustomAttributeNamedArgument" />
        <Parameter Name="right" Type="System.Reflection.CustomAttributeNamedArgument" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="cca80-144">Estructura situada a la izquierda del operador de igualdad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cca80-144">The structure to the left of the equality operator.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="cca80-145">Estructura situada a la derecha del operador de igualdad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cca80-145">The structure to the right of the equality operator.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cca80-146">Comprueba si dos estructuras <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> son iguales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cca80-146">Tests whether two <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> structures are equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cca80-147">Es <see langword="true" /> si las dos estructuras <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> son iguales; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cca80-147">
              <see langword="true" /> if the two <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> structures are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="cca80-148">El método equivalente para este operador es <xref:System.Reflection.CustomAttributeNamedArgument.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cca80-148">The equivalent method for this operator is <xref:System.Reflection.CustomAttributeNamedArgument.Equals%2A?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.CustomAttributeNamedArgument left, System.Reflection.CustomAttributeNamedArgument right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Reflection.CustomAttributeNamedArgument left, valuetype System.Reflection.CustomAttributeNamedArgument right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.op_Inequality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As CustomAttributeNamedArgument, right As CustomAttributeNamedArgument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::CustomAttributeNamedArgument left, System::Reflection::CustomAttributeNamedArgument right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.CustomAttributeNamedArgument" />
        <Parameter Name="right" Type="System.Reflection.CustomAttributeNamedArgument" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="cca80-149">Estructura situada a la izquierda del operador de no igualdad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cca80-149">The structure to the left of the inequality operator.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="cca80-150">Estructura situada a la derecha del operador de no igualdad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cca80-150">The structure to the right of the inequality operator.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cca80-151">Comprueba si dos estructuras <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> son distintas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cca80-151">Tests whether two <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> structures are different.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cca80-152">Es <see langword="true" /> si las dos estructuras <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> son diferentes; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cca80-152">
              <see langword="true" /> if the two <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> structures are different; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="cca80-153">El método equivalente para este operador es <xref:System.Reflection.CustomAttributeNamedArgument.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cca80-153">The equivalent method for this operator is <xref:System.Reflection.CustomAttributeNamedArgument.Equals%2A?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cca80-154">Devuelve una cadena formada por el nombre del argumento, el signo igual y una representación de cadena del valor del argumento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cca80-154">Returns a string that consists of the argument name, the equal sign, and a string representation of the argument value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cca80-155">Cadena formada por el nombre del argumento, el signo igual y una representación de cadena del valor del argumento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cca80-155">A string that consists of the argument name, the equal sign, and a string representation of the argument value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypedValue">
      <MemberSignature Language="C#" Value="public System.Reflection.CustomAttributeTypedArgument TypedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.CustomAttributeTypedArgument TypedValue" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeNamedArgument.TypedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypedValue As CustomAttributeTypedArgument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::CustomAttributeTypedArgument TypedValue { System::Reflection::CustomAttributeTypedArgument get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.CustomAttributeTypedArgument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cca80-156">Obtiene una estructura <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> que se puede utilizar para obtener el tipo y el valor del argumento con nombre actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cca80-156">Gets a <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structure that can be used to obtain the type and value of the current named argument.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cca80-157">Estructura que se puede utilizar para obtener el tipo y el valor del argumento con nombre actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cca80-157">A structure that can be used to obtain the type and value of the current named argument.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cca80-158">El <xref:System.Reflection.CustomAttributeNamedArgument> estructura solo contiene información sobre cómo se estableció el valor del argumento.</span><span class="sxs-lookup"><span data-stu-id="cca80-158">The <xref:System.Reflection.CustomAttributeNamedArgument> structure only contains information about how the argument value was set.</span></span> <span data-ttu-id="cca80-159">Utilice esta propiedad para obtener un <xref:System.Reflection.CustomAttributeTypedArgument> estructura que contiene el tipo y valor.</span><span class="sxs-lookup"><span data-stu-id="cca80-159">Use this property to obtain a <xref:System.Reflection.CustomAttributeTypedArgument> structure that contains the type and value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cca80-160">En el ejemplo de código siguiente se define un atributo personalizado con cuatro constructores y cuatro propiedades.</span><span class="sxs-lookup"><span data-stu-id="cca80-160">The following code example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="cca80-161">Dos de las propiedades son de solo lectura y se establecen mediante los parámetros posicionales de los constructores.</span><span class="sxs-lookup"><span data-stu-id="cca80-161">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="cca80-162">Las otras dos propiedades son de lectura/escritura, y puede ser conjunto sólo mediante argumentos con nombre.</span><span class="sxs-lookup"><span data-stu-id="cca80-162">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="cca80-163">Una propiedad posicional es una matriz de cadenas y una propiedad con nombre es una matriz de enteros.</span><span class="sxs-lookup"><span data-stu-id="cca80-163">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="cca80-164">El atributo se aplica al ensamblado, a un tipo declarado en el ensamblado, a un método del tipo y a un parámetro del método.</span><span class="sxs-lookup"><span data-stu-id="cca80-164">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="cca80-165">Se usan distintos constructores para estos casos.</span><span class="sxs-lookup"><span data-stu-id="cca80-165">Different constructors are used for these cases.</span></span> <span data-ttu-id="cca80-166">Cuando se ejecuta, el ensamblado se carga en el contexto de solo reflexión y muestra los atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="cca80-166">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="cca80-167">El atributo que se aplica al tipo muestra propiedades de matriz, con argumentos posicionales y con nombre.</span><span class="sxs-lookup"><span data-stu-id="cca80-167">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="cca80-168">El <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A> propiedad se utiliza en el `ShowAttributeData` método que muestra datos de atributos personalizados, para obtener los tipos y valores de los atributos con nombre.</span><span class="sxs-lookup"><span data-stu-id="cca80-168">The <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A> property is used in the `ShowAttributeData` method that displays custom attribute data, to obtain the types and values of named attributes.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.CustomAttributeData" />
        <altmember cref="T:System.Reflection.CustomAttributeTypedArgument" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
  </Members>
</Type>