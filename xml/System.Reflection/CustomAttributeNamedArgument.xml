<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CustomAttributeNamedArgument.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5cb5683beef3de443e9a5df3d7cf110331a07a5fe.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cb5683beef3de443e9a5df3d7cf110331a07a5fe</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.CustomAttributeNamedArgument">
          <source>Represents a named argument of a custom attribute in the reflection-only context.</source>
          <target state="translated">Representa un argumento con nombre de un atributo personalizado en el contexto de sólo reflexión.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeNamedArgument">
          <source>Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph>, and so on.</source>
          <target state="translated">No se puede ejecutar código que se examina en el contexto de solo reflexión, por lo que no siempre es posible examinar los atributos personalizados mediante la creación de instancias de ellos y, a continuación, examinar sus propiedades, mediante métodos como <ph id="ph1">&lt;xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType&gt;</ph>, y así sucesivamente.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeNamedArgument">
          <source>If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.</source>
          <target state="translated">Si se ha cargado el código para el propio tipo de atributo en el contexto de solo reflexión, no se puede ejecutar.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeNamedArgument">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> structure is used by the <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> class to provide access to a named argument specified for a custom attribute instance, without executing the code of the corresponding property of the custom attribute type.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> estructura se usa por la <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> clase para proporcionar acceso a un argumento con nombre especificado para una instancia del atributo personalizado, sin ejecutar el código de la propiedad correspondiente del tipo de atributo personalizado.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeNamedArgument">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> structure that contains the type and value of the named argument.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A&gt;</ph> propiedad devuelve un <ph id="ph2">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> estructura que contiene el tipo y el valor del argumento con nombre.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeNamedArgument">
          <source>Whether an argument is named or positional, you must access its type and value by using the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> structure.</source>
          <target state="translated">Si un argumento tiene un nombre o posicionales, debe acceder a su tipo y valor utilizando el <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> estructura.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeNamedArgument">
          <source>To create instances of the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> class, use the <ph id="ph2">`static`</ph><ph id="ph3">&lt;xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A&gt;</ph> factory method.</source>
          <target state="translated">Para crear instancias de la <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> clase, use la <ph id="ph2">`static`</ph> <ph id="ph3">&lt;xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A&gt;</ph> método de fábrica.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeNamedArgument">
          <source>The following example defines a custom attribute with four constructors and four properties.</source>
          <target state="translated">En el ejemplo siguiente se define un atributo personalizado con cuatro constructores y cuatro propiedades.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeNamedArgument">
          <source>Two of the properties are read-only, and are set by using the positional parameters of the constructors.</source>
          <target state="translated">Dos de las propiedades son de solo lectura y se establecen mediante los parámetros posicionales de los constructores.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeNamedArgument">
          <source>The other two properties are read/write, and can be set only by using named arguments.</source>
          <target state="translated">Las otras dos propiedades son de lectura/escritura, y puede ser conjunto sólo mediante argumentos con nombre.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeNamedArgument">
          <source>One positional property is an array of strings, and one named property is an array of integers.</source>
          <target state="translated">Una propiedad posicional es una matriz de cadenas y una propiedad con nombre es una matriz de enteros.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeNamedArgument">
          <source>The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</source>
          <target state="translated">El atributo se aplica al ensamblado, a un tipo declarado en el ensamblado, a un método del tipo y a un parámetro del método.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeNamedArgument">
          <source>Different constructors are used for these cases.</source>
          <target state="translated">Se usan distintos constructores para estos casos.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeNamedArgument">
          <source>When executed, the assembly loads itself into the reflection-only context and displays information about the custom attributes that were applied to it and to the type and members it contains.</source>
          <target state="translated">Cuando se ejecuta, el ensamblado se carga en el contexto de solo reflexión y muestra información sobre los atributos personalizados que se aplicaron a él y a los tipos y miembros que contiene.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.CustomAttributeNamedArgument">
          <source>The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</source>
          <target state="translated">El atributo que se aplica al tipo muestra propiedades de matriz, con argumentos posicionales y con nombre.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.Reflection.CustomAttributeNamedArgument">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Object)">
          <source>A field or property of the custom attribute.</source>
          <target state="translated">Campo o propiedad del atributo personalizado.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Object)">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph> object represents this member and its value.</source>
          <target state="translated">El nuevo objeto <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph> representa este miembro y su valor.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Object)">
          <source>The value of the field or property of the custom attribute.</source>
          <target state="translated">Valor del campo o de la propiedad del atributo personalizado.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph> class, which represents the specified field or property of the custom attribute, and specifies the value of the field or property.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph>, que representa la propiedad o el campo especificado del atributo personalizado, y especifica el valor del campo o la propiedad.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Object)">
          <source>This constructor is for use by inheritors of the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> class.</source>
          <target state="translated">Este constructor está destinado a los herederos de la <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Object)">
          <source>It is not intended for use in application code.</source>
          <target state="translated">No está pensado para su uso en código de la aplicación.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Object)">
          <source><ph id="ph1">&lt;paramref name="memberInfo" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="memberInfo" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Object)">
          <source><ph id="ph1">&lt;paramref name="memberInfo" /&gt;</ph> is not a field or property of the custom attribute.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="memberInfo" /&gt;</ph> no es un campo o propiedad del atributo personalizado.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Reflection.CustomAttributeTypedArgument)">
          <source>A field or property of the custom attribute.</source>
          <target state="translated">Campo o propiedad del atributo personalizado.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Reflection.CustomAttributeTypedArgument)">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph> object represents this member and its value.</source>
          <target state="translated">El nuevo objeto <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph> representa este miembro y su valor.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Reflection.CustomAttributeTypedArgument)">
          <source>An object that describes the type and value of the field or property.</source>
          <target state="translated">Objeto que describe el tipo y el valor del campo o la propiedad.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Reflection.CustomAttributeTypedArgument)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph> class, which represents the specified field or property of the custom attribute, and specifies a <ph id="ph2">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> object that describes the type and value of the field or property.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph>, que representa la propiedad o el campo especificado del atributo personalizado, y especifica un objeto <ph id="ph2">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> que describe el tipo y el valor del campo o de la propiedad.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Reflection.CustomAttributeTypedArgument)">
          <source>This constructor is for use by inheritors of the <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> class.</source>
          <target state="translated">Este constructor está destinado a los herederos de la <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Reflection.CustomAttributeTypedArgument)">
          <source>It is not intended for use in application code.</source>
          <target state="translated">No está pensado para su uso en código de la aplicación.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Reflection.CustomAttributeTypedArgument)">
          <source><ph id="ph1">&lt;paramref name="memberInfo" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="memberInfo" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.Equals(System.Object)">
          <source>An object to compare with this instance, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Objeto que se va a comparar con esta instancia o <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.Equals(System.Object)">
          <source>Returns a value that indicates whether this instance is equal to a specified object.</source>
          <target state="translated">Devuelve un valor que indica si esta instancia equivale a un objeto especificado.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> equals the type and value of this instance; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> es igual al tipo y valor de esta instancia; de lo contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">Devuelve el código hash de esta instancia.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Código hash de un entero de 32 bits con signo.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Reflection.CustomAttributeNamedArgument.IsField">
          <source>Gets a value that indicates whether the named argument is a field.</source>
          <target state="translated">Obtiene un valor que indica si el argumento con nombre es un campo.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeNamedArgument.IsField">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the named argument is a field; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el argumento con nombre es un campo; si no, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Reflection.CustomAttributeNamedArgument.MemberInfo">
          <source>Gets the attribute member that would be used to set the named argument.</source>
          <target state="translated">Obtiene el miembro de atributo que se utilizaría para establecer el argumento con nombre.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeNamedArgument.MemberInfo">
          <source>The attribute member that would be used to set the named argument.</source>
          <target state="translated">Obtiene el miembro de atributo que se usaría para establecer el argumento con nombre.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeNamedArgument.MemberInfo">
          <source>In most cases, the member is a property.</source>
          <target state="translated">En la mayoría de los casos, el miembro es una propiedad.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.Reflection.CustomAttributeNamedArgument.MemberName">
          <source>Gets the name of the attribute member that would be used to set the named argument.</source>
          <target state="translated">Obtiene el miembro de atributo que se usaría para establecer el argumento con nombre.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeNamedArgument.MemberName">
          <source>The name of the attribute member that would be used to set the named argument.</source>
          <target state="translated">Miembro de atributo que se usaría para establecer el argumento con nombre.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.op_Equality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)">
          <source>The structure to the left of the equality operator.</source>
          <target state="translated">Estructura situada a la izquierda del operador de igualdad.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.op_Equality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)">
          <source>The structure to the right of the equality operator.</source>
          <target state="translated">Estructura situada a la derecha del operador de igualdad.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.op_Equality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)">
          <source>Tests whether two <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph> structures are equivalent.</source>
          <target state="translated">Comprueba si dos estructuras <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph> son iguales.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.op_Equality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two <ph id="ph2">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph> structures are equal; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si las dos estructuras <ph id="ph2">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph> son iguales; en caso contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeNamedArgument.op_Equality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">El método equivalente para este operador es <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument.Equals%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.op_Inequality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)">
          <source>The structure to the left of the inequality operator.</source>
          <target state="translated">Estructura situada a la izquierda del operador de no igualdad.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.op_Inequality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)">
          <source>The structure to the right of the inequality operator.</source>
          <target state="translated">Estructura situada a la derecha del operador de no igualdad.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.op_Inequality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)">
          <source>Tests whether two <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph> structures are different.</source>
          <target state="translated">Comprueba si dos estructuras <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph> son distintas.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.op_Inequality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two <ph id="ph2">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph> structures are different; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si las dos estructuras <ph id="ph2">&lt;see cref="T:System.Reflection.CustomAttributeNamedArgument" /&gt;</ph> son diferentes; en caso contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.CustomAttributeNamedArgument.op_Inequality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument.Equals%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">El método equivalente para este operador es <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument.Equals%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.ToString">
          <source>Returns a string that consists of the argument name, the equal sign, and a string representation of the argument value.</source>
          <target state="translated">Devuelve una cadena formada por el nombre del argumento, el signo igual y una representación de cadena del valor del argumento.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Reflection.CustomAttributeNamedArgument.ToString">
          <source>A string that consists of the argument name, the equal sign, and a string representation of the argument value.</source>
          <target state="translated">Cadena formada por el nombre del argumento, el signo igual y una representación de cadena del valor del argumento.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Reflection.CustomAttributeNamedArgument.TypedValue">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> structure that can be used to obtain the type and value of the current named argument.</source>
          <target state="translated">Obtiene una estructura <ph id="ph1">&lt;see cref="T:System.Reflection.CustomAttributeTypedArgument" /&gt;</ph> que se puede utilizar para obtener el tipo y el valor del argumento con nombre actual.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeNamedArgument.TypedValue">
          <source>A structure that can be used to obtain the type and value of the current named argument.</source>
          <target state="translated">Estructura que se puede utilizar para obtener el tipo y el valor del argumento con nombre actual.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeNamedArgument.TypedValue">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> structure only contains information about how the argument value was set.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument&gt;</ph> estructura solo contiene información sobre cómo se estableció el valor del argumento.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeNamedArgument.TypedValue">
          <source>Use this property to obtain a <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> structure that contains the type and value.</source>
          <target state="translated">Utilice esta propiedad para obtener un <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeTypedArgument&gt;</ph> estructura que contiene el tipo y valor.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeNamedArgument.TypedValue">
          <source>The following code example defines a custom attribute with four constructors and four properties.</source>
          <target state="translated">En el ejemplo de código siguiente se define un atributo personalizado con cuatro constructores y cuatro propiedades.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeNamedArgument.TypedValue">
          <source>Two of the properties are read-only, and are set by using the positional parameters of the constructors.</source>
          <target state="translated">Dos de las propiedades son de solo lectura y se establecen mediante los parámetros posicionales de los constructores.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeNamedArgument.TypedValue">
          <source>The other two properties are read/write, and can be set only by using named arguments.</source>
          <target state="translated">Las otras dos propiedades son de lectura/escritura, y puede ser conjunto sólo mediante argumentos con nombre.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeNamedArgument.TypedValue">
          <source>One positional property is an array of strings, and one named property is an array of integers.</source>
          <target state="translated">Una propiedad posicional es una matriz de cadenas y una propiedad con nombre es una matriz de enteros.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeNamedArgument.TypedValue">
          <source>The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</source>
          <target state="translated">El atributo se aplica al ensamblado, a un tipo declarado en el ensamblado, a un método del tipo y a un parámetro del método.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeNamedArgument.TypedValue">
          <source>Different constructors are used for these cases.</source>
          <target state="translated">Se usan distintos constructores para estos casos.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeNamedArgument.TypedValue">
          <source>When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</source>
          <target state="translated">Cuando se ejecuta, el ensamblado se carga en el contexto de solo reflexión y muestra los atributos personalizados.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeNamedArgument.TypedValue">
          <source>The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</source>
          <target state="translated">El atributo que se aplica al tipo muestra propiedades de matriz, con argumentos posicionales y con nombre.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.CustomAttributeNamedArgument.TypedValue">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A&gt;</ph> property is used in the <ph id="ph2">`ShowAttributeData`</ph> method that displays custom attribute data, to obtain the types and values of named attributes.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A&gt;</ph> propiedad se utiliza en el <ph id="ph2">`ShowAttributeData`</ph> método que muestra datos de atributos personalizados, para obtener los tipos y valores de los atributos con nombre.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>