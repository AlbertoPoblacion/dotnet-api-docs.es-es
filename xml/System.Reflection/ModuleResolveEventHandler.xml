<Type Name="ModuleResolveEventHandler" FullName="System.Reflection.ModuleResolveEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="233cdc9bc9fdbf9733eb698aef9189525d1868d4" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36638593" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate System.Reflection.Module ModuleResolveEventHandler(object sender, ResolveEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed ModuleResolveEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.ModuleResolveEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ModuleResolveEventHandler(sender As Object, e As ResolveEventArgs) As Module " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Reflection::Module ^ ModuleResolveEventHandler(System::Object ^ sender, ResolveEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type ModuleResolveEventHandler = delegate of obj * ResolveEventArgs -&gt; Module" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ResolveEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Reflection.Module</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Ensamblado que constituía el origen del evento.</param>
    <param name="e">Argumentos proporcionados por el objeto que describe el evento.</param>
    <summary>Representa el método que controlará el evento <see cref="E:System.Reflection.Assembly.ModuleResolve" /> de <see cref="T:System.Reflection.Assembly" />.</summary>
    <returns>Módulo que satisface la solicitud.</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el cargador de clases de common language runtime no puede resolver una referencia a un módulo interno de un ensamblado por medios normales, se produce este evento. El controlador de eventos para este delegado debe buscar y devolver un módulo que satisfaga la solicitud.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra la secuencia de ejecución en el que se llama a un controlador de eventos. En este ejemplo, Server1 es un módulo externo de la clase MySample.  
  
### <a name="to-compile-and-run-the-example"></a>Para compilar y ejecutar el ejemplo  
  
1.  Abra una ventana del símbolo del sistema y desplácese al directorio que contiene MySample.cs.  
  
2.  Compile Server1 mediante el comando siguiente:  
  
    ```console  
    csc /out:subfolder\Server1.netmodule /t:module Server1.cs  
    ```  
  
3.  Compile MySample mediante el comando siguiente:  
  
    ```console  
    csc /out:MySample.exe /t:exe /addmodule:subfolder\Server1.netmodule MySample.cs  
    ```  
  
4.  Ejecute MySample.exe.  
  
> [!NOTE]
>  El archivo de módulo Server1.netmodule debe estar en un subdirectorio denominado "subcarpeta" para que este ejemplo funcione correctamente.  
  
 [!code-csharp[System.Reflection.ModuleResolveEventHandler#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.moduleresolveeventhandler/cs/mysample.cs#1)]  
[!code-csharp[System.Reflection.ModuleResolveEventHandler#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.moduleresolveeventhandler/cs/server1.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>