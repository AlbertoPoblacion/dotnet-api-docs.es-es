<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DefaultMemberAttribute.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a1b6ba1f6b901f690dec748b76a421a04a325333.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a1b6ba1f6b901f690dec748b76a421a04a325333</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.DefaultMemberAttribute">
          <source>Defines the member of a type that is the default member used by <ph id="ph1">&lt;see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /&gt;</ph>.</source>
          <target state="translated">Define el miembro de un tipo que es el miembro predeterminado utilizado por <ph id="ph1">&lt;see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.DefaultMemberAttribute">
          <source>A property is imported as an indexer (default indexed property in Visual Basic) if the property has arguments and if the name of the property or one of its accessors matches the name specified by the <ph id="ph1">&lt;xref:System.Reflection.DefaultMemberAttribute&gt;</ph>.</source>
          <target state="translated">Una propiedad se importa como un indizador (propiedad indizada predeterminada en Visual Basic) si la propiedad no tiene argumentos y si el nombre de la propiedad o una de sus descriptores de acceso coincide con el nombre especificado por el <ph id="ph1">&lt;xref:System.Reflection.DefaultMemberAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.DefaultMemberAttribute">
          <source>If the <ph id="ph1">&lt;xref:System.Reflection.DefaultMemberAttribute&gt;</ph> is not present on the containing type, then the type does not have an indexer.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Reflection.DefaultMemberAttribute&gt;</ph> no está presente en el tipo contenedor, a continuación, el tipo no tiene un indizador.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.DefaultMemberAttribute">
          <source>The C# compiler emits the <ph id="ph1">&lt;xref:System.Reflection.DefaultMemberAttribute&gt;</ph> on any type containing an indexer.</source>
          <target state="translated">El compilador de C# emite el <ph id="ph1">&lt;xref:System.Reflection.DefaultMemberAttribute&gt;</ph> en cualquier tipo que contenga un indizador.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.DefaultMemberAttribute">
          <source>In C# it is an error to manually attribute a type with the <ph id="ph1">&lt;xref:System.Reflection.DefaultMemberAttribute&gt;</ph> if the type also declares an indexer.</source>
          <target state="translated">En C# es un error a un tipo con el atributo manualmente el <ph id="ph1">&lt;xref:System.Reflection.DefaultMemberAttribute&gt;</ph> si el tipo también declara un indizador.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.DefaultMemberAttribute">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Reflection.DefaultMemberAttribute&gt;</ph> attribute to make the <ph id="ph2">`Age`</ph> property the default member of the <ph id="ph3">`MyClass`</ph> class.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Reflection.DefaultMemberAttribute&gt;</ph> atributo para realizar la <ph id="ph2">`Age`</ph> propiedad el miembro predeterminado de la <ph id="ph3">`MyClass`</ph> clase.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)">
          <source>A <ph id="ph1">&lt;see langword="String" /&gt;</ph> containing the name of the member to invoke.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see langword="String" /&gt;</ph> que contiene el nombre del miembro al que se va a invocar.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)">
          <source>This may be a constructor, method, property, or field.</source>
          <target state="translated">Este puede ser un constructor, método, propiedad o campo.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)">
          <source>A suitable invocation attribute must be specified when the member is invoked.</source>
          <target state="translated">Se debe especificar un atributo de invocación adecuado cuando se invoca el miembro.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)">
          <source>The default member of a class can be specified by passing an empty <ph id="ph1">&lt;see langword="String" /&gt;</ph> as the name of the member.</source>
          <target state="translated">El miembro predeterminado de una clase se puede especificar pasando un valor <ph id="ph1">&lt;see langword="String" /&gt;</ph> vacío como nombre del miembro.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)">
          <source>The default member of a type is marked with the <ph id="ph1">&lt;see langword="DefaultMemberAttribute" /&gt;</ph> custom attribute or marked in COM in the usual way.</source>
          <target state="translated">El miembro predeterminado de un tipo se marca con el atributo personalizado <ph id="ph1">&lt;see langword="DefaultMemberAttribute" /&gt;</ph> o se marca en COM de la forma habitual.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.DefaultMemberAttribute" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Reflection.DefaultMemberAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.Reflection.DefaultMemberAttribute.MemberName">
          <source>Gets the name from the attribute.</source>
          <target state="translated">Obtiene el nombre del atributo.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.DefaultMemberAttribute.MemberName">
          <source>A string representing the member name.</source>
          <target state="translated">Cadena que representa el nombre del miembro.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.DefaultMemberAttribute.MemberName">
          <source>There is no set accessor because the name must be provided to the constructor.</source>
          <target state="translated">No hay ningún descriptor de acceso set porque debe proporcionarse el nombre al constructor.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.DefaultMemberAttribute.MemberName">
          <source>The name is not optional.</source>
          <target state="translated">El nombre no es opcional.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>