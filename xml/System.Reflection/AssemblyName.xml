<Type Name="AssemblyName" FullName="System.Reflection.AssemblyName">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5e8d575c8f6baf9dd58560db2cd8c587433f5908" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30481199" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AssemblyName : ICloneable, System.Runtime.InteropServices._AssemblyName, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit AssemblyName extends System.Object implements class System.ICloneable, class System.Runtime.InteropServices._AssemblyName, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.AssemblyName" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AssemblyName&#xA;Implements _AssemblyName, ICloneable, IDeserializationCallback, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyName sealed : ICloneable, System::Runtime::InteropServices::_AssemblyName, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._AssemblyName</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._AssemblyName))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c7280-101">Describe la identidad única de un ensamblado en su totalidad.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c7280-101">Describes an assembly's unique identity in full.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7280-102">La <xref:System.Reflection.AssemblyName> objeto contiene información sobre un ensamblado, que puede usar para enlazar a dicho ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c7280-102">The <xref:System.Reflection.AssemblyName> object contains information about an assembly, which you can use to bind to that assembly.</span></span> <span data-ttu-id="c7280-103">Identidad de un ensamblado consta de las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="c7280-103">An assembly's identity consists of the following:</span></span>  
  
-   <span data-ttu-id="c7280-104">Nombre simple.</span><span class="sxs-lookup"><span data-stu-id="c7280-104">Simple name.</span></span>  
  
-   <span data-ttu-id="c7280-105">Número de versión.</span><span class="sxs-lookup"><span data-stu-id="c7280-105">Version number.</span></span>  
  
-   <span data-ttu-id="c7280-106">Par de claves criptográficas.</span><span class="sxs-lookup"><span data-stu-id="c7280-106">Cryptographic key pair.</span></span>  
  
-   <span data-ttu-id="c7280-107">Referencia cultural admitida.</span><span class="sxs-lookup"><span data-stu-id="c7280-107">Supported culture.</span></span>  
  
 <span data-ttu-id="c7280-108">El nombre simple suele ser el nombre de archivo para el archivo de manifiesto sin la extensión.</span><span class="sxs-lookup"><span data-stu-id="c7280-108">The simple name is typically the file name for the manifest file without its extension.</span></span> <span data-ttu-id="c7280-109">El par de claves incluye una clave pública y privada, utilizar para crear firmas de nombre seguro para los ensamblados.</span><span class="sxs-lookup"><span data-stu-id="c7280-109">The key pair includes a public and private key, used to create strong-name signatures for assemblies.</span></span>  
  
 <span data-ttu-id="c7280-110">Todos los compiladores que admiten common language runtime emitirán el nombre sencillo de una clase anidada y la reflexión construirá un nombre con sufijo cuando ejecute la consulta, con arreglo a las siguientes convenciones.</span><span class="sxs-lookup"><span data-stu-id="c7280-110">All compilers that support the common language runtime will emit the simple name of a nested class, and reflection constructs a mangled name when queried, in accordance with the following conventions.</span></span>  
  
|<span data-ttu-id="c7280-111">Delimitador</span><span class="sxs-lookup"><span data-stu-id="c7280-111">Delimiter</span></span>|<span data-ttu-id="c7280-112">Significado</span><span class="sxs-lookup"><span data-stu-id="c7280-112">Meaning</span></span>|  
|---------------|-------------|  
|<span data-ttu-id="c7280-113">Barra diagonal inversa (\\)</span><span class="sxs-lookup"><span data-stu-id="c7280-113">Backslash (\\)</span></span>|<span data-ttu-id="c7280-114">Carácter de escape.</span><span class="sxs-lookup"><span data-stu-id="c7280-114">Escape character.</span></span>|  
|<span data-ttu-id="c7280-115">Coma (,)</span><span class="sxs-lookup"><span data-stu-id="c7280-115">Comma (,)</span></span>|<span data-ttu-id="c7280-116">Precede al nombre de ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c7280-116">Precedes the assembly name.</span></span>|  
|<span data-ttu-id="c7280-117">Signo más (+)</span><span class="sxs-lookup"><span data-stu-id="c7280-117">Plus sign (+)</span></span>|<span data-ttu-id="c7280-118">Precede a una clase anidada.</span><span class="sxs-lookup"><span data-stu-id="c7280-118">Precedes a nested class.</span></span>|  
  
 <span data-ttu-id="c7280-119">Por ejemplo, el nombre completo para una clase podría ser similar al siguiente:</span><span class="sxs-lookup"><span data-stu-id="c7280-119">For example, the fully qualified name for a class might look like this:</span></span>  
  
 <span data-ttu-id="c7280-120">ContainingClass + NestedClass, MyAssembly</span><span class="sxs-lookup"><span data-stu-id="c7280-120">ContainingClass+NestedClass,MyAssembly</span></span>  
  
 <span data-ttu-id="c7280-121">A "++" becomes "\\+\\+", and a "\\" becomes "\\\\".</span><span class="sxs-lookup"><span data-stu-id="c7280-121">A "++" becomes "\\+\\+", and a "\\" becomes "\\\\".</span></span>  
  
 <span data-ttu-id="c7280-122">Este nombre completo puede se conserven y se utiliza posteriormente para cargar el <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="c7280-122">This qualified name can be persisted and later used to load the <xref:System.Type>.</span></span> <span data-ttu-id="c7280-123">Para buscar y cargar un <xref:System.Type>, utilice <xref:System.Type.GetType%2A> con el tipo de nombre solo o con el nombre de tipo calificado de ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c7280-123">To search for and load a <xref:System.Type>, use <xref:System.Type.GetType%2A> either with the type name only or with the assembly qualified type name.</span></span> <span data-ttu-id="c7280-124"><xref:System.Type.GetType%2A> con el tipo de nombre sólo buscará la <xref:System.Type> en el ensamblado del llamador y, a continuación, en el ensamblado del sistema.</span><span class="sxs-lookup"><span data-stu-id="c7280-124"><xref:System.Type.GetType%2A> with the type name only will look for the <xref:System.Type> in the caller's assembly and then in the System assembly.</span></span> <span data-ttu-id="c7280-125"><xref:System.Type.GetType%2A> con el ensamblado de nombre de tipo calificado buscará la <xref:System.Type> de cualquier ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c7280-125"><xref:System.Type.GetType%2A> with the assembly qualified type name will look for the <xref:System.Type> in any assembly.</span></span>  
  
 <span data-ttu-id="c7280-126">Totalmente especificado <xref:System.Reflection.AssemblyName> debe tener el nombre, referencia cultural, clave pública o token de clave pública, las principales versiones, versión secundaria, número de compilación y parámetros de número de revisión.</span><span class="sxs-lookup"><span data-stu-id="c7280-126">A fully specified <xref:System.Reflection.AssemblyName> must have the name, culture, public key or public key token, major version, minor version, build number, and revision number parameters.</span></span> <span data-ttu-id="c7280-127">Los últimos cuatro se empaquetan en la <xref:System.Version> tipo.</span><span class="sxs-lookup"><span data-stu-id="c7280-127">The last four are packaged in the <xref:System.Version> type.</span></span>  
  
 <span data-ttu-id="c7280-128">Para crear un nombre sencillo, cree un <xref:System.Reflection.AssemblyName> objeto utilizando el constructor predeterminado y establecer el <xref:System.Reflection.AssemblyName.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="c7280-128">To create a simple name, create an <xref:System.Reflection.AssemblyName> object using the default constructor and set the <xref:System.Reflection.AssemblyName.Name%2A>.</span></span> <span data-ttu-id="c7280-129">Las demás propiedades son opcionales.</span><span class="sxs-lookup"><span data-stu-id="c7280-129">The other properties are optional.</span></span>  
  
 <span data-ttu-id="c7280-130">Para crear un nombre seguro completo, cree un <xref:System.Reflection.AssemblyName> objeto utilizando el constructor predeterminado y establecer el <xref:System.Reflection.AssemblyName.Name%2A> y <xref:System.Reflection.AssemblyName.KeyPair%2A>.</span><span class="sxs-lookup"><span data-stu-id="c7280-130">To create a full strong name, create an <xref:System.Reflection.AssemblyName> object using the default constructor and set the <xref:System.Reflection.AssemblyName.Name%2A> and <xref:System.Reflection.AssemblyName.KeyPair%2A>.</span></span> <span data-ttu-id="c7280-131">Las demás propiedades son opcionales.</span><span class="sxs-lookup"><span data-stu-id="c7280-131">The other properties are optional.</span></span> <span data-ttu-id="c7280-132">Use <xref:System.Reflection.AssemblyName.SetPublicKey%2A> y <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> para establecer la clave pública y el nombre seguro.</span><span class="sxs-lookup"><span data-stu-id="c7280-132">Use <xref:System.Reflection.AssemblyName.SetPublicKey%2A> and <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> to set the public key and the strong name.</span></span> <span data-ttu-id="c7280-133">El nombre seguro firma siempre utiliza la <xref:System.Security.Cryptography.SHA1> algoritmo hash.</span><span class="sxs-lookup"><span data-stu-id="c7280-133">The strong name signing always uses the <xref:System.Security.Cryptography.SHA1> hash algorithm.</span></span>  
  
 <span data-ttu-id="c7280-134">Para asegurarse de que los nombres se ha generado correctamente, utilice las siguientes propiedades:</span><span class="sxs-lookup"><span data-stu-id="c7280-134">To ensure that the names are constructed correctly, use the following properties:</span></span>  
  
-   <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType>  
  
-   <xref:System.Reflection.AssemblyName.FullName%2A?displayProperty=nameWithType>  
  
-   <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="c7280-135">También puede obtener el nombre mediante el uso de la `/l` opción con el [Gacutil.exe (herramienta de caché Global de ensamblados)](~/docs/framework/tools/gacutil-exe-gac-tool.md)</span><span class="sxs-lookup"><span data-stu-id="c7280-135">You can also get the name by using the `/l` option with the [Gacutil.exe (Global Assembly Cache Tool)](~/docs/framework/tools/gacutil-exe-gac-tool.md)</span></span>  
  
 <span data-ttu-id="c7280-136">Para un nombre seguro parcialmente especificado, cree una <xref:System.Reflection.AssemblyName> objeto utilizando el constructor predeterminado y establezca el nombre y la clave pública.</span><span class="sxs-lookup"><span data-stu-id="c7280-136">For a partially specified strong name, create an <xref:System.Reflection.AssemblyName> object using the default constructor and set the name and public key.</span></span> <span data-ttu-id="c7280-137">Un ensamblado creado con como un <xref:System.Reflection.AssemblyName> puede firmarse más adelante mediante la herramienta Assembly Linker (Al.exe).</span><span class="sxs-lookup"><span data-stu-id="c7280-137">An assembly created using such an <xref:System.Reflection.AssemblyName> can be signed later using the Assembly Linker (Al.exe).</span></span>  
  
 <span data-ttu-id="c7280-138">Es posible especificar una clave pública y un <xref:System.Reflection.AssemblyName.KeyPair%2A> con valores incoherentes.</span><span class="sxs-lookup"><span data-stu-id="c7280-138">It is possible to specify a public key and a <xref:System.Reflection.AssemblyName.KeyPair%2A> with inconsistent values.</span></span> <span data-ttu-id="c7280-139">Esto puede ser útil en escenarios de desarrollador.</span><span class="sxs-lookup"><span data-stu-id="c7280-139">This can be useful in developer scenarios.</span></span> <span data-ttu-id="c7280-140">En este caso, se recupera la clave pública con <xref:System.Reflection.AssemblyName.GetPublicKey%2A> especifica la clave, público correcto mientras el <xref:System.Reflection.AssemblyName.KeyPair%2A> especifica las claves públicas y privadas utilizadas durante el desarrollo.</span><span class="sxs-lookup"><span data-stu-id="c7280-140">In this case, the public key retrieved with <xref:System.Reflection.AssemblyName.GetPublicKey%2A> specifies the correct public key, while the <xref:System.Reflection.AssemblyName.KeyPair%2A> specifies the public and private keys used during development.</span></span> <span data-ttu-id="c7280-141">Cuando el tiempo de ejecución detecta una discrepancia entre el <xref:System.Reflection.AssemblyName.KeyPair%2A> y la clave pública, éste busca en el registro de la clave correcta que coincida con la clave pública.</span><span class="sxs-lookup"><span data-stu-id="c7280-141">When the runtime detects a mismatch between the <xref:System.Reflection.AssemblyName.KeyPair%2A> and the public key, it looks up in the registry the correct key that matches the public key.</span></span>  
  
 <span data-ttu-id="c7280-142">El formato del nombre para mostrar de un <xref:System.Reflection.AssemblyName> es una cadena Unicode delimitada por comas que comienza con el nombre, como se indica a continuación:</span><span class="sxs-lookup"><span data-stu-id="c7280-142">The format of the display name of an <xref:System.Reflection.AssemblyName> is a comma-delimited Unicode string that begins with the name, as follows:</span></span>  
  
 `Name <,Culture = CultureInfo> <,Version = Major.Minor.Build.Revision> <, StrongName> <,PublicKeyToken> '\0'`  
  
 <span data-ttu-id="c7280-143">`Name` es el nombre textual del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c7280-143">`Name` is the textual name of the assembly.</span></span> <span data-ttu-id="c7280-144">`CultureInfo` es la referencia cultural en formato RFC1766.</span><span class="sxs-lookup"><span data-stu-id="c7280-144">`CultureInfo` is the RFC1766-format-defined culture.</span></span> <span data-ttu-id="c7280-145">`Major`, `Minor`, `Build`, y `Revision` son la versión principal, la versión secundaria, el número de compilación y el número de revisión del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c7280-145">`Major`, `Minor`, `Build`, and `Revision` are the major version, minor version, build number, and revision number of the assembly.</span></span> <span data-ttu-id="c7280-146">`StrongName` es la codificación hexadecimal orden inferior 64 bits del valor hash de la clave pública generada mediante el algoritmo hash SHA-1 y la clave pública especificada por <xref:System.Reflection.AssemblyName.SetPublicKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="c7280-146">`StrongName` is the hexadecimal-encoded low-order 64 bits of the hash value of the public key generated using the SHA-1 hashing algorithm and the public key specified by <xref:System.Reflection.AssemblyName.SetPublicKey%2A>.</span></span> <span data-ttu-id="c7280-147">`PublicKeyToken` es la clave pública en formato hexadecimal especificada por <xref:System.Reflection.AssemblyName.SetPublicKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="c7280-147">`PublicKeyToken` is the hexadecimal-encoded public key specified by <xref:System.Reflection.AssemblyName.SetPublicKey%2A>.</span></span>  
  
 <span data-ttu-id="c7280-148">Codificación hexadecimal se define como la conversión de cada byte de un objeto binario a dos caracteres hexadecimales, de menor hasta el byte más significativo.</span><span class="sxs-lookup"><span data-stu-id="c7280-148">Hexadecimal encoding is defined as the conversion of each byte of a binary object to two hexadecimal characters, progressing from least to most significant byte.</span></span> <span data-ttu-id="c7280-149">Valores de presentación adicionales se agregarán según sea necesario.</span><span class="sxs-lookup"><span data-stu-id="c7280-149">Additional display values will be added as deemed necessary.</span></span>  
  
 <span data-ttu-id="c7280-150">Si se conoce la clave pública completa, se puede sustituir PublicKey por StrongName.</span><span class="sxs-lookup"><span data-stu-id="c7280-150">If the full public key is known, then PublicKey may be substituted for StrongName.</span></span>  
  
 <span data-ttu-id="c7280-151">Tenga en cuenta también que excepto `Name`, que debe aparecer en primer lugar, el orden léxico de los parámetros no es significativo.</span><span class="sxs-lookup"><span data-stu-id="c7280-151">Also note that except for `Name`, which must come first, the lexical order of parameters is unimportant.</span></span> <span data-ttu-id="c7280-152">Sin embargo, cualquier parámetro (`Version`, `Culture`, `StrongName` o `PublicKey`) no específicamente conjunto se considera que se omiten y el <xref:System.Reflection.AssemblyName> , a continuación, se considera parcial.</span><span class="sxs-lookup"><span data-stu-id="c7280-152">However, any parameter (`Version`, `Culture`, `StrongName` or `PublicKey`) not specifically set is considered to be omitted, and the <xref:System.Reflection.AssemblyName> is then considered partial.</span></span> <span data-ttu-id="c7280-153">Al especificar información parcial, los parámetros de nombre deben especificarse en el orden descrito anteriormente.</span><span class="sxs-lookup"><span data-stu-id="c7280-153">When specifying partial information, Name parameters must be specified in the order described above.</span></span>  
  
 <span data-ttu-id="c7280-154">Al proporcionar un nombre para mostrar, la convención de `StrongName =null` o `PublicKey= null` indica que se requiere el enlace y búsqueda de coincidencias en un ensamblado de nombre simple.</span><span class="sxs-lookup"><span data-stu-id="c7280-154">When supplying a display name, the convention `StrongName =null` or `PublicKey= null` indicates that binding and matching against a simply named assembly is required.</span></span> <span data-ttu-id="c7280-155">Además, la convención de `Culture= ""` (comillas dobles que representan una cadena vacía) indica una comparación con la referencia cultural predeterminada.</span><span class="sxs-lookup"><span data-stu-id="c7280-155">Additionally, the convention `Culture= ""` (double quote representing an empty string) indicates matching against the default culture.</span></span>  
  
 <span data-ttu-id="c7280-156">El ejemplo siguiente muestra un <xref:System.Reflection.AssemblyName> para un ensamblado de nombre sencillo con la referencia cultural predeterminada.</span><span class="sxs-lookup"><span data-stu-id="c7280-156">The following example shows an <xref:System.Reflection.AssemblyName> for a simply named assembly with default culture.</span></span>  
  
```  
ExampleAssembly, Culture=""  
```  
  
 <span data-ttu-id="c7280-157">En el ejemplo siguiente se muestra una referencia completa para un ensamblado con nombre seguro con la referencia cultural "en".</span><span class="sxs-lookup"><span data-stu-id="c7280-157">The following example shows a fully specified reference for a strongly named assembly with culture "en".</span></span>  
  
```  
ExampleAssembly, Version=1.0.0.0, Culture=en, PublicKeyToken=a5d015c7d5a0b012  
```  
  
   
  
## Examples  
 <span data-ttu-id="c7280-158">Este ejemplo muestra cómo usar varias clases de reflexión para analizar los metadatos contenidos en un ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c7280-158">This example shows how to use various reflection classes to analyze the metadata contained in an assembly.</span></span>  
  
 [!code-cpp[Reflection#1](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection/CPP/reflection.cpp#1)]
 [!code-csharp[Reflection#1](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection/CS/Reflection.cs#1)]
 [!code-vb[Reflection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection/VB/Reflection.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Version" />
    <altmember cref="M:System.Reflection.AssemblyName.GetPublicKey" />
    <altmember cref="M:System.Reflection.AssemblyName.GetPublicKeyToken" />
    <altmember cref="M:System.Reflection.AssemblyName.SetPublicKey(System.Byte[])" />
    <altmember cref="M:System.Reflection.AssemblyName.SetPublicKeyToken(System.Byte[])" />
    <altmember cref="P:System.Type.FullName" />
    <altmember cref="M:System.Type.GetType" />
    <altmember cref="P:System.Type.AssemblyQualifiedName" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c7280-159">Inicializa una nueva instancia de la clase <see cref="T:System.Reflection.AssemblyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-159">Initializes a new instance of the <see cref="T:System.Reflection.AssemblyName" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyName();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c7280-160">Inicializa una nueva instancia de la clase <see cref="T:System.Reflection.AssemblyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-160">Initializes a new instance of the <see cref="T:System.Reflection.AssemblyName" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c7280-161">En el ejemplo siguiente se crea un ensamblado dinámico con el nombre `MyAssembly.exe` y lo guarda en el disco duro.</span><span class="sxs-lookup"><span data-stu-id="c7280-161">The following example creates a dynamic assembly named `MyAssembly.exe` and saves it to your hard disk.</span></span> <span data-ttu-id="c7280-162">Después de ejecutar el ejemplo, puede usar el [Ildasm.exe (Desensamblador de IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) para examinar los metadatos del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c7280-162">After running the example, you can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the assembly metadata.</span></span>  
  
 [!code-cpp[AssemblyName_Constructor#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_Constructor/CPP/assemblyname_constructor.cpp#1)]
 [!code-csharp[AssemblyName_Constructor#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_Constructor/CS/assemblyname_constructor.cs#1)]
 [!code-vb[AssemblyName_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_Constructor/VB/assemblyname_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyName (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyName(System::String ^ assemblyName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="c7280-163">Nombre para mostrar del ensamblado, tal como lo devuelve la propiedad <see cref="P:System.Reflection.AssemblyName.FullName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-163">The display name of the assembly, as returned by the <see cref="P:System.Reflection.AssemblyName.FullName" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7280-164">Inicializa una nueva instancia de la clase <see cref="T:System.Reflection.AssemblyName" /> con el nombre para mostrar especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-164">Initializes a new instance of the <see cref="T:System.Reflection.AssemblyName" /> class with the specified display name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7280-165">Suministrado `assemblyName` se analiza y los campos correspondientes del nuevo <xref:System.Reflection.AssemblyName> se inicializan con los valores del nombre para mostrar.</span><span class="sxs-lookup"><span data-stu-id="c7280-165">The supplied `assemblyName` is parsed, and the appropriate fields of the new <xref:System.Reflection.AssemblyName> are initialized with values from the display name.</span></span> <span data-ttu-id="c7280-166">Se trata de la manera recomendada de analizar los nombres para mostrar.</span><span class="sxs-lookup"><span data-stu-id="c7280-166">This is the recommended way of parsing display names.</span></span> <span data-ttu-id="c7280-167">No se recomienda escribir su propio código para analizar los nombres para mostrar.</span><span class="sxs-lookup"><span data-stu-id="c7280-167">Writing your own code to parse display names is not recommended.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7280-168">En el ejemplo siguiente se crea una instancia de <xref:System.Reflection.AssemblyName> un nombre para mostrar.</span><span class="sxs-lookup"><span data-stu-id="c7280-168">The following example creates an instance of <xref:System.Reflection.AssemblyName> from a display name.</span></span> <span data-ttu-id="c7280-169">Los elementos individuales del nombre para mostrar son resultado de la consola como propiedades de la <xref:System.Reflection.AssemblyName> objeto.</span><span class="sxs-lookup"><span data-stu-id="c7280-169">The individual elements of the display name are output to the console as properties of the <xref:System.Reflection.AssemblyName> object.</span></span>  
  
 [!code-cpp[AssemblyName_Constructor_2#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_Constructor_2/CPP/source.cpp#1)]
 [!code-csharp[AssemblyName_Constructor_2#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_Constructor_2/CS/source.cs#1)]
 [!code-vb[AssemblyName_Constructor_2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_Constructor_2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c7280-170">
            <paramref name="assemblyName" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-170">
              <paramref name="assemblyName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c7280-171">
            <paramref name="assemblyName" /> es una cadena de longitud cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-171">
              <paramref name="assemblyName" /> is a zero length string.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <block subset="none" type="note">
            <para>
              <span data-ttu-id="c7280-172">En [.NET para aplicaciones de la Tienda Windows](http://go.microsoft.com/fwlink/?LinkID=247912) o la [Biblioteca de clases portable](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), capture en su lugar la excepción de clase base, <see cref="T:System.IO.IOException" />.</span>
              <span class="sxs-lookup">
                <span data-stu-id="c7280-172">In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.IO.IOException" />, instead.</span>
              </span>
            </para>
          </block>
          <span data-ttu-id="c7280-173">El ensamblado al que se hace referencia no se pudo encontrar o cargar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-173">The referenced assembly could not be found, or could not be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c7280-174">Realiza una copia de este objeto <see cref="T:System.Reflection.AssemblyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-174">Makes a copy of this <see cref="T:System.Reflection.AssemblyName" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c7280-175">Objeto que es una copia de este objeto <see cref="T:System.Reflection.AssemblyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-175">An object that is a copy of this <see cref="T:System.Reflection.AssemblyName" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7280-176">Se crea un nuevo objeto, idéntico al original.</span><span class="sxs-lookup"><span data-stu-id="c7280-176">A new object is created, identical to the original.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeBase">
      <MemberSignature Language="C#" Value="public string CodeBase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.CodeBase" />
      <MemberSignature Language="VB.NET" Value="Public Property CodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeBase { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c7280-177">Indica o establece la ubicación del ensamblado como una dirección URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-177">Gets or sets the location of the assembly as a URL.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c7280-178">Cadena que representa la dirección URL del ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-178">A string that is the URL location of the assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7280-179">Cuando se carga un ensamblado, este valor también puede obtenerse mediante la <xref:System.Reflection.Assembly.CodeBase%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c7280-179">When an assembly is loaded, this value can also be obtained using the <xref:System.Reflection.Assembly.CodeBase%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="c7280-180">Si el ensamblado se cargó como una matriz de bytes, esta propiedad devuelve la ubicación del llamador de la <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%29> sobrecarga del método, no la ubicación del ensamblado cargado.</span><span class="sxs-lookup"><span data-stu-id="c7280-180">If the assembly was loaded as a byte array, this property returns the location of the caller of the <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%29> method overload, not the location of the loaded assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c7280-181">No use un <xref:System.Reflection.AssemblyName> solamente con el <xref:System.Reflection.AssemblyName.CodeBase%2A> del conjunto de propiedades.</span><span class="sxs-lookup"><span data-stu-id="c7280-181">Do not use an <xref:System.Reflection.AssemblyName> with only the <xref:System.Reflection.AssemblyName.CodeBase%2A> property set.</span></span> <span data-ttu-id="c7280-182">El <xref:System.Reflection.AssemblyName.CodeBase%2A> propiedad no proporciona todos los elementos de la identidad del ensamblado (como nombre o versión), por lo que la carga no se produce según las reglas de carga por identidad, tal y como se podría esperar de la <xref:System.Reflection.Assembly.Load%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c7280-182">The <xref:System.Reflection.AssemblyName.CodeBase%2A> property does not supply any elements of the assembly identity (such as name or version), so loading does not occur according to load-by-identity rules, as you would expect from the <xref:System.Reflection.Assembly.Load%2A> method.</span></span> <span data-ttu-id="c7280-183">En su lugar, el ensamblado se carga mediante la carga de reglas.</span><span class="sxs-lookup"><span data-stu-id="c7280-183">Instead, the assembly is loaded using load-from rules.</span></span> <span data-ttu-id="c7280-184">Para obtener información acerca de las desventajas de usar el contexto de carga, consulte la <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> sobrecarga del método o [procedimientos recomendados para cargar ensamblados](~/docs/framework/deployment/best-practices-for-assembly-loading.md).</span><span class="sxs-lookup"><span data-stu-id="c7280-184">For information about the disadvantages of using the load-from context, see the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> method overload or [Best Practices for Assembly Loading](~/docs/framework/deployment/best-practices-for-assembly-loading.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7280-185">En el ejemplo siguiente, se emite un ensamblado dinámico y lo guarda en el directorio actual.</span><span class="sxs-lookup"><span data-stu-id="c7280-185">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="c7280-186">Cuando se crea el ensamblado, el <xref:System.Reflection.AssemblyName.CodeBase%2A> propiedad se utiliza para especificar el directorio donde se guarda el ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c7280-186">When the assembly is created, the <xref:System.Reflection.AssemblyName.CodeBase%2A> property is used to specify the directory where the assembly is saved.</span></span>  
  
 [!code-cpp[AssemblyName_CodeBase#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_CodeBase/CPP/assemblyname_codebase.cpp#1)]
 [!code-csharp[AssemblyName_CodeBase#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_CodeBase/CS/assemblyname_codebase.cs#1)]
 [!code-vb[AssemblyName_CodeBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_CodeBase/VB/assemblyname_codebase.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public System.Reflection.AssemblyContentType ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.AssemblyContentType ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentType As AssemblyContentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::AssemblyContentType ContentType { System::Reflection::AssemblyContentType get(); void set(System::Reflection::AssemblyContentType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyContentType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c7280-187">Obtiene o establece un valor que indica el tipo del contenido del ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-187">Gets or sets a value that indicates what type of content the assembly contains.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c7280-188">Un valor que indica lo que contiene el ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-188">A value that indicates what type of content the assembly contains.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CultureInfo">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo CultureInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo CultureInfo" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.CultureInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property CultureInfo As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ CultureInfo { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c7280-189">Indica o establece la referencia cultural que admite el ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-189">Gets or sets the culture supported by the assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c7280-190">Objeto que representa la referencia cultural que admite el ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-190">An object that represents the culture supported by the assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c7280-191">En el ejemplo siguiente, se emite un ensamblado dinámico y lo guarda en el directorio actual.</span><span class="sxs-lookup"><span data-stu-id="c7280-191">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="c7280-192">Cuando se crea el ensamblado, el <xref:System.Reflection.AssemblyName.CultureInfo%2A> propiedad se utiliza para especificar la referencia cultural, que forma parte del nombre para mostrar del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c7280-192">When the assembly is created, the <xref:System.Reflection.AssemblyName.CultureInfo%2A> property is used to specify the culture, which is part of the assembly's display name.</span></span>  
  
 [!code-cpp[AssemblyName_CodeBase#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_CodeBase/CPP/assemblyname_codebase.cpp#2)]
 [!code-csharp[AssemblyName_CodeBase#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_CodeBase/CS/assemblyname_codebase.cs#2)]
 [!code-vb[AssemblyName_CodeBase#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_CodeBase/VB/assemblyname_codebase.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CultureName">
      <MemberSignature Language="C#" Value="public string CultureName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CultureName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.CultureName" />
      <MemberSignature Language="VB.NET" Value="Public Property CultureName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CultureName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c7280-193">Obtiene o establece el nombre de la referencia cultural asociada al ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-193">Gets or sets the name of the culture associated with the assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c7280-194">Nombre de la referencia cultural</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-194">The culture name.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EscapedCodeBase">
      <MemberSignature Language="C#" Value="public string EscapedCodeBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EscapedCodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.EscapedCodeBase" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EscapedCodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EscapedCodeBase { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c7280-195">Obtiene el identificador URI, incluidos los caracteres de escape, que representa el código base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-195">Gets the URI, including escape characters, that represents the codebase.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c7280-196">URI con caracteres de escape.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-196">A URI with escape characters.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public System.Reflection.AssemblyNameFlags Flags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.AssemblyNameFlags Flags" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.Flags" />
      <MemberSignature Language="VB.NET" Value="Public Property Flags As AssemblyNameFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::AssemblyNameFlags Flags { System::Reflection::AssemblyNameFlags get(); void set(System::Reflection::AssemblyNameFlags value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyNameFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c7280-197">Obtiene o establece los atributos del ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-197">Gets or sets the attributes of the assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c7280-198">Un valor que representa los atributos del ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-198">A value that represents the attributes of the assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c7280-199">En el ejemplo siguiente, se emite un ensamblado dinámico y lo guarda en el directorio actual.</span><span class="sxs-lookup"><span data-stu-id="c7280-199">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="c7280-200">Cuando se crea el ensamblado, el <xref:System.Reflection.AssemblyName.Flags%2A> propiedad se utiliza para especificar que el ensamblado tiene una clave pública.</span><span class="sxs-lookup"><span data-stu-id="c7280-200">When the assembly is created, the <xref:System.Reflection.AssemblyName.Flags%2A> property is used to specify that the assembly has a public key.</span></span>  
  
 [!code-cpp[AssemblyName_KeyPair#4](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_KeyPair/CPP/assemblyname_keypair.cpp#4)]
 [!code-csharp[AssemblyName_KeyPair#4](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_KeyPair/CS/assemblyname_keypair.cs#4)]
 [!code-vb[AssemblyName_KeyPair#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_KeyPair/VB/assemblyname_keypair.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.FullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c7280-201">Obtiene el nombre completo del ensamblado, que también se conoce como nombre para mostrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-201">Gets the full name of the assembly, also known as the display name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c7280-202">Cadena que constituye el nombre completo del ensamblado, también conocido como nombre para mostrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-202">A string that is the full name of the assembly, also known as the display name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7280-203">El nombre para mostrar normalmente formada por el nombre simple, el número de versión, la referencia cultural admitida y la clave pública.</span><span class="sxs-lookup"><span data-stu-id="c7280-203">The display name typically consists of the simple name, version number, supported culture, and public key.</span></span> <span data-ttu-id="c7280-204">Por ejemplo:</span><span class="sxs-lookup"><span data-stu-id="c7280-204">For example:</span></span>  
  
```  
mylib, Version=1.2.1900.0, Culture=neutral, PublicKeyToken=a14f3033def15840  
```  
  
 <span data-ttu-id="c7280-205">No se recomienda escribir su propio código para analizar los nombres para mostrar.</span><span class="sxs-lookup"><span data-stu-id="c7280-205">Writing your own code to parse display names is not recommended.</span></span> <span data-ttu-id="c7280-206">En su lugar, pase el nombre para mostrar para la <xref:System.Reflection.AssemblyName.%23ctor%2A> constructor, que lo analiza y rellena los campos correspondientes del nuevo <xref:System.Reflection.AssemblyName>.</span><span class="sxs-lookup"><span data-stu-id="c7280-206">Instead, pass the display name to the <xref:System.Reflection.AssemblyName.%23ctor%2A> constructor, which parses it and populates the appropriate fields of the new <xref:System.Reflection.AssemblyName>.</span></span>  
  
 <span data-ttu-id="c7280-207">Cuando se carga un ensamblado, este valor también puede obtenerse mediante la <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c7280-207">When an assembly is loaded, this value can also be obtained using the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7280-208">En el ejemplo siguiente, se emite un ensamblado dinámico y lo guarda en el directorio actual.</span><span class="sxs-lookup"><span data-stu-id="c7280-208">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="c7280-209">Cuando se crea el ensamblado, el ejemplo de código establece la <xref:System.Reflection.AssemblyName.Name%2A>, <xref:System.Reflection.AssemblyName.Version%2A>, <xref:System.Reflection.AssemblyName.CultureInfo%2A>, y <xref:System.Reflection.AssemblyName.KeyPair%2A> propiedades, que juntas conforman el nombre completo de un ensamblado o nombre para mostrar.</span><span class="sxs-lookup"><span data-stu-id="c7280-209">When the assembly is created, the code example sets the <xref:System.Reflection.AssemblyName.Name%2A>, <xref:System.Reflection.AssemblyName.Version%2A>, <xref:System.Reflection.AssemblyName.CultureInfo%2A>, and <xref:System.Reflection.AssemblyName.KeyPair%2A> properties, which together comprise an assembly's full name, or display name.</span></span> <span data-ttu-id="c7280-210">El <xref:System.Reflection.AssemblyName.FullName%2A> propiedad, a continuación, se usa para recuperar el nombre para mostrar.</span><span class="sxs-lookup"><span data-stu-id="c7280-210">The <xref:System.Reflection.AssemblyName.FullName%2A> property is then used to retrieve the display name.</span></span>  
  
 [!code-cpp[AssemblyName_CodeBase#4](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_CodeBase/CPP/assemblyname_codebase.cpp#4)]
 [!code-csharp[AssemblyName_CodeBase#4](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_CodeBase/CS/assemblyname_codebase.cs#4)]
 [!code-vb[AssemblyName_CodeBase#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_CodeBase/VB/assemblyname_codebase.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssemblyName">
      <MemberSignature Language="C#" Value="public static System.Reflection.AssemblyName GetAssemblyName (string assemblyFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.AssemblyName GetAssemblyName(string assemblyFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.GetAssemblyName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAssemblyName (assemblyFile As String) As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::AssemblyName ^ GetAssemblyName(System::String ^ assemblyFile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="c7280-211">Ruta de acceso para el ensamblado cuyo <see cref="T:System.Reflection.AssemblyName" /> se va a devolver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-211">The path for the assembly whose <see cref="T:System.Reflection.AssemblyName" /> is to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7280-212">Obtiene el nombre de ensamblado (<see cref="T:System.Reflection.AssemblyName" />) de un archivo dado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-212">Gets the <see cref="T:System.Reflection.AssemblyName" /> for a given file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c7280-213">Objeto que representa el archivo de ensamblado determinado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-213">An object that represents the given assembly file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7280-214">Esto solo funcionará si el archivo contiene un manifiesto del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c7280-214">This will only work if the file contains an assembly manifest.</span></span> <span data-ttu-id="c7280-215">Este método hace que el archivo se abre y se cierra, pero el ensamblado no se agrega a este dominio.</span><span class="sxs-lookup"><span data-stu-id="c7280-215">This method causes the file to be opened and closed, but the assembly is not added to this domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7280-216">En el ejemplo siguiente se obtiene el <xref:System.Reflection.AssemblyName> para un ensamblado en el disco.</span><span class="sxs-lookup"><span data-stu-id="c7280-216">The following example gets the <xref:System.Reflection.AssemblyName> for an assembly on disk.</span></span> <span data-ttu-id="c7280-217">No se ejecutará a menos que se reemplace la cadena "MyAssembly.exe" con el nombre de archivo de un ensamblado (incluida la ruta de acceso, si es necesario) en el disco duro.</span><span class="sxs-lookup"><span data-stu-id="c7280-217">It will not run unless you replace the string "MyAssembly.exe" with the file name of an assembly (including the path, if necessary) on your hard disk.</span></span> <span data-ttu-id="c7280-218">Como alternativa, puede compilar este ejemplo como "MyAssembly.exe".</span><span class="sxs-lookup"><span data-stu-id="c7280-218">Alternatively, you can compile this example as "MyAssembly.exe".</span></span>  
  
 [!code-cpp[AssemblyName_GetAssemblyName#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_GetAssemblyName/CPP/assemblyname_getassemblyname.cpp#1)]
 [!code-csharp[AssemblyName_GetAssemblyName#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_GetAssemblyName/CS/assemblyname_getassemblyname.cs#1)]
 [!code-vb[AssemblyName_GetAssemblyName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_GetAssemblyName/VB/assemblyname_getassemblyname.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c7280-219">
            <paramref name="assemblyFile" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-219">
              <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c7280-220">
            <paramref name="assemblyFile" /> no es válido, al igual que un ensamblado con una referencia cultural no válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-220">
              <paramref name="assemblyFile" /> is invalid, such as an assembly with an invalid culture.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="c7280-221">No se ha encontrado <paramref name="assemblyFile" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-221">
              <paramref name="assemblyFile" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="c7280-222">El llamador no dispone del permiso de detección de rutas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-222">The caller does not have path discovery permission.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="c7280-223">
            <paramref name="assemblyFile" /> no es un ensamblado válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-223">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="c7280-224">Se cargó un ensamblado o módulo dos veces con dos conjuntos de evidencias diferentes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-224">An assembly or module was loaded twice with two different sets of evidence.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="c7280-225">Para obtener acceso a la información de la ruta de acceso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-225">for access to information in the path.</span>
          </span>
          <span data-ttu-id="c7280-226">Enumeración asociada: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-226">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="c7280-227">Objeto que debe llenarse con información de serialización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-227">The object to be populated with serialization information.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="c7280-228">Contexto de destino de la serialización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-228">The destination context of the serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7280-229">Obtiene información de serialización con todos los datos necesarios para volver a crear una instancia de este <see langword="AssemblyName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-229">Gets serialization information with all the data needed to recreate an instance of this <see langword="AssemblyName" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c7280-230">
            <paramref name="info" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-230">
              <paramref name="info" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="c7280-231">requiere plena confianza para el llamador inmediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-231">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="c7280-232">Este miembro no puede usarse por código de confianza parcial o transparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-232">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetPublicKey">
      <MemberSignature Language="C#" Value="public byte[] GetPublicKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetPublicKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.GetPublicKey" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPublicKey () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetPublicKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c7280-233">Obtiene la clave pública del ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-233">Gets the public key of the assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c7280-234">Matriz de bytes que contiene la clave pública del ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-234">A byte array that contains the public key of the assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c7280-235">En el ejemplo siguiente, se emite un ensamblado dinámico y lo guarda en el directorio actual.</span><span class="sxs-lookup"><span data-stu-id="c7280-235">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="c7280-236">Cuando se crea el ensamblado, el <xref:System.Reflection.AssemblyName.SetPublicKey%2A> método se usa para proporcionar al ensamblado una clave pública.</span><span class="sxs-lookup"><span data-stu-id="c7280-236">When the assembly is created, the <xref:System.Reflection.AssemblyName.SetPublicKey%2A> method is used to give the assembly a public key.</span></span> <span data-ttu-id="c7280-237">El <xref:System.Reflection.AssemblyName.GetPublicKey%2A> , a continuación, se utiliza el método para recuperar la clave pública, que se muestra en la consola.</span><span class="sxs-lookup"><span data-stu-id="c7280-237">The <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is then used to retrieve the public key, which is displayed to the console.</span></span>  
  
 [!code-cpp[AssemblyName_KeyPair#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_KeyPair/CPP/assemblyname_keypair.cpp#2)]
 [!code-csharp[AssemblyName_KeyPair#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_KeyPair/CS/assemblyname_keypair.cs#2)]
 [!code-vb[AssemblyName_KeyPair#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_KeyPair/VB/assemblyname_keypair.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="c7280-238">Se ha proporcionado una clave pública (por ejemplo, mediante el método <see cref="M:System.Reflection.AssemblyName.SetPublicKey(System.Byte[])" />), pero no se ha proporcionado ningún token de clave pública.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-238">A public key was provided (for example, by using the <see cref="M:System.Reflection.AssemblyName.SetPublicKey(System.Byte[])" /> method), but no public key token was provided.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPublicKeyToken">
      <MemberSignature Language="C#" Value="public byte[] GetPublicKeyToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetPublicKeyToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.GetPublicKeyToken" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPublicKeyToken () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetPublicKeyToken();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c7280-239">Obtiene el token de clave pública, formado por los 8 últimos bytes del hash SHA-1 de la clave pública con la que se firma la aplicación o el ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-239">Gets the public key token, which is the last 8 bytes of the SHA-1 hash of the public key under which the application or assembly is signed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c7280-240">Matriz de bytes que contiene el token de la clave pública.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-240">A byte array that contains the public key token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c7280-241">En el ejemplo siguiente, se emite un ensamblado dinámico y lo guarda en el directorio actual.</span><span class="sxs-lookup"><span data-stu-id="c7280-241">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="c7280-242">Cuando se crea el ensamblado, el <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> método se usa para establecer el token de clave pública del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c7280-242">When the assembly is created, the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method is used to set the assembly's public key token.</span></span> <span data-ttu-id="c7280-243">El <xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A> , a continuación, se utiliza el método para recuperar el token de clave pública, que se muestra en la consola.</span><span class="sxs-lookup"><span data-stu-id="c7280-243">The <xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A> method is then used to retrieve the public key token, which is displayed to the console.</span></span>  
  
 [!code-cpp[AssemblyName_KeyPair#3](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_KeyPair/CPP/assemblyname_keypair.cpp#3)]
 [!code-csharp[AssemblyName_KeyPair#3](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_KeyPair/CS/assemblyname_keypair.cs#3)]
 [!code-vb[AssemblyName_KeyPair#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_KeyPair/VB/assemblyname_keypair.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public System.Configuration.Assemblies.AssemblyHashAlgorithm HashAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property HashAlgorithm As AssemblyHashAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Assemblies::AssemblyHashAlgorithm HashAlgorithm { System::Configuration::Assemblies::AssemblyHashAlgorithm get(); void set(System::Configuration::Assemblies::AssemblyHashAlgorithm value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Assemblies.AssemblyHashAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c7280-244">Indica o establece el algoritmo hash que utiliza el manifiesto del ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-244">Gets or sets the hash algorithm used by the assembly manifest.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c7280-245">Algoritmo hash utilizado por el manifiesto del ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-245">The hash algorithm used by the assembly manifest.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="c7280-246">A partir de la [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], el <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> propiedad de un <xref:System.Reflection.AssemblyName> objeto devuelto por la <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A?displayProperty=nameWithType> método es <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.None?displayProperty=nameWithType> si no hay ningún algoritmo hash para el ensamblado que se hace referencia, o si el algoritmo de hash del ensamblado que se hace referencia no se identifica por el <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=nameWithType> enumeración.</span><span class="sxs-lookup"><span data-stu-id="c7280-246">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property of an <xref:System.Reflection.AssemblyName> object that is returned by the <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A?displayProperty=nameWithType> method is <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.None?displayProperty=nameWithType> if there is no hash algorithm for the referenced assembly, or if the hash algorithm of the referenced assembly is not identified by the <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=nameWithType> enumeration.</span></span> <span data-ttu-id="c7280-247">En versiones anteriores de .NET Framework, el <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> propiedad devuelta <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1?displayProperty=nameWithType> en esta situación.</span><span class="sxs-lookup"><span data-stu-id="c7280-247">In previous versions of the .NET Framework, the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property returned <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1?displayProperty=nameWithType> in this situation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7280-248">En el ejemplo siguiente, se emite un ensamblado dinámico y lo guarda en el directorio actual.</span><span class="sxs-lookup"><span data-stu-id="c7280-248">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="c7280-249">Cuando se crea el ensamblado, el <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> propiedad se utiliza para establecer el algoritmo hash para el manifiesto del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c7280-249">When the assembly is created, the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property is used to set the hash algorithm for the assembly manifest.</span></span>  
  
 [!code-cpp[AssemblyName_CodeBase#3](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_CodeBase/CPP/assemblyname_codebase.cpp#3)]
 [!code-csharp[AssemblyName_CodeBase#3](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_CodeBase/CS/assemblyname_codebase.cs#3)]
 [!code-vb[AssemblyName_CodeBase#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_CodeBase/VB/assemblyname_codebase.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPair">
      <MemberSignature Language="C#" Value="public System.Reflection.StrongNameKeyPair KeyPair { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.StrongNameKeyPair KeyPair" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.KeyPair" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyPair As StrongNameKeyPair" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::StrongNameKeyPair ^ KeyPair { System::Reflection::StrongNameKeyPair ^ get(); void set(System::Reflection::StrongNameKeyPair ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.StrongNameKeyPair</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c7280-250">Obtiene o establece el par de claves criptográficas pública y privada que se utiliza para crear una firma de nombre seguro para el ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-250">Gets or sets the public and private cryptographic key pair that is used to create a strong name signature for the assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c7280-251">Clave criptográfica pública y privada que se va a utilizar para crear un nombre seguro para el ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-251">The public and private cryptographic key pair to be used to create a strong name for the assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7280-252">Cuando el tiempo de ejecución carga un ensamblado, no establezca la <xref:System.Reflection.AssemblyName.KeyPair%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c7280-252">When the runtime loads an assembly, it does not set the <xref:System.Reflection.AssemblyName.KeyPair%2A> property.</span></span> <span data-ttu-id="c7280-253">El captador de la propiedad sólo es útil si el usuario establece la propiedad antes de utilizar el <xref:System.Reflection.AssemblyName> de objetos para crear un ensamblado dinámico y, posteriormente, desea recuperar el par de claves.</span><span class="sxs-lookup"><span data-stu-id="c7280-253">The getter for the property is only useful if the user set the property before using the <xref:System.Reflection.AssemblyName> object to create a dynamic assembly, and subsequently wants to retrieve the key pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7280-254">En el ejemplo siguiente, se emite un ensamblado dinámico y lo guarda en el directorio actual.</span><span class="sxs-lookup"><span data-stu-id="c7280-254">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="c7280-255">Cuando se crea el ensamblado, el <xref:System.Reflection.AssemblyName.KeyPair%2A> propiedad se usa para establecer claves criptográficas pública y privada del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c7280-255">When the assembly is created, the <xref:System.Reflection.AssemblyName.KeyPair%2A> property is used to set the assembly's public and private cryptographic keys.</span></span> <span data-ttu-id="c7280-256">.</span><span class="sxs-lookup"><span data-stu-id="c7280-256">.</span></span>  
  
 [!code-cpp[AssemblyName_KeyPair#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_KeyPair/CPP/assemblyname_keypair.cpp#1)]
 [!code-csharp[AssemblyName_KeyPair#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_KeyPair/CS/assemblyname_keypair.cs#1)]
 [!code-vb[AssemblyName_KeyPair#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_KeyPair/VB/assemblyname_keypair.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c7280-257">Obtiene o establece el nombre simple del ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-257">Gets or sets the simple name of the assembly.</span>
          </span>
          <span data-ttu-id="c7280-258">Suele ser, aunque no necesariamente, el nombre del archivo de manifiesto del ensamblado, menos su extensión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-258">This is usually, but not necessarily, the file name of the manifest file of the assembly, minus its extension.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c7280-259">Nombre simple del ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-259">The simple name of the assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7280-260">El archivo de manifiesto es el archivo que contiene el manifiesto del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c7280-260">The manifest file is the file that contains the assembly manifest.</span></span>  
  
 <span data-ttu-id="c7280-261">Por ejemplo, el nombre sencillo de un ensamblado de único archivo denominado "MyAssembly.dll" es "MyAssembly".</span><span class="sxs-lookup"><span data-stu-id="c7280-261">For example, the simple name of a single-file assembly named "MyAssembly.dll" is "MyAssembly".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7280-262">En el ejemplo siguiente, se emite un ensamblado dinámico y lo guarda en el directorio actual.</span><span class="sxs-lookup"><span data-stu-id="c7280-262">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="c7280-263">Cuando se crea el ensamblado, el <xref:System.Reflection.AssemblyName.Name%2A> propiedad se usa para establecer el nombre simple del ensamblado dinámico.</span><span class="sxs-lookup"><span data-stu-id="c7280-263">When the assembly is created, the <xref:System.Reflection.AssemblyName.Name%2A> property is used to set the simple name of the dynamic assembly.</span></span>  
  
 [!code-cpp[AssemblyName_Constructor#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_Constructor/CPP/assemblyname_constructor.cpp#2)]
 [!code-csharp[AssemblyName_Constructor#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_Constructor/CS/assemblyname_constructor.cs#2)]
 [!code-vb[AssemblyName_Constructor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_Constructor/VB/assemblyname_constructor.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserialization">
      <MemberSignature Language="C#" Value="public void OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnDeserialization (sender As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDeserialization(System::Object ^ sender);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="c7280-264">Origen del evento de deserialización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-264">The source of the deserialization event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7280-265">Implementa la interfaz <see cref="T:System.Runtime.Serialization.ISerializable" />. El evento de deserialización vuelve a llamar a este método cuando se completa la deserialización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-265">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and is called back by the deserialization event when deserialization is complete.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="M:System.Reflection.AssemblyName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </Docs>
    </Member>
    <Member MemberName="ProcessorArchitecture">
      <MemberSignature Language="C#" Value="public System.Reflection.ProcessorArchitecture ProcessorArchitecture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.ProcessorArchitecture ProcessorArchitecture" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.ProcessorArchitecture" />
      <MemberSignature Language="VB.NET" Value="Public Property ProcessorArchitecture As ProcessorArchitecture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::ProcessorArchitecture ProcessorArchitecture { System::Reflection::ProcessorArchitecture get(); void set(System::Reflection::ProcessorArchitecture value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ProcessorArchitecture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c7280-266">Obtiene o establece un valor que identifica el procesador y los bits por palabra de la plataforma de destino de una aplicación ejecutable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-266">Gets or sets a value that identifies the processor and bits-per-word of the platform targeted by an executable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c7280-267">Uno de los valores de enumeración que identifica el procesador y los bits por palabra de la plataforma de destino de una aplicación ejecutable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-267">One of the enumeration values that identifies the processor and bits-per-word of the platform targeted by an executable.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7280-268">A partir del [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], esta propiedad devuelve siempre <xref:System.Reflection.ProcessorArchitecture.None?displayProperty=nameWithType> ensamblados de referencia.</span><span class="sxs-lookup"><span data-stu-id="c7280-268">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], this property always returns <xref:System.Reflection.ProcessorArchitecture.None?displayProperty=nameWithType> for reference assemblies.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Module.GetPEKind(System.Reflection.PortableExecutableKinds@,System.Reflection.ImageFileMachine@)" />
      </Docs>
    </Member>
    <Member MemberName="ReferenceMatchesDefinition">
      <MemberSignature Language="C#" Value="public static bool ReferenceMatchesDefinition (System.Reflection.AssemblyName reference, System.Reflection.AssemblyName definition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ReferenceMatchesDefinition(class System.Reflection.AssemblyName reference, class System.Reflection.AssemblyName definition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.ReferenceMatchesDefinition(System.Reflection.AssemblyName,System.Reflection.AssemblyName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReferenceMatchesDefinition (reference As AssemblyName, definition As AssemblyName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ReferenceMatchesDefinition(System::Reflection::AssemblyName ^ reference, System::Reflection::AssemblyName ^ definition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Reflection.AssemblyName" />
        <Parameter Name="definition" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="reference">
          <span data-ttu-id="c7280-269">Nombre del ensamblado de referencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-269">The reference assembly name.</span>
          </span>
        </param>
        <param name="definition">
          <span data-ttu-id="c7280-270">Nombre de ensamblado que se compara con el ensamblado de referencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-270">The assembly name that is compared to the reference assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7280-271">Devuelve un valor que indica si dos nombres de ensamblado son iguales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-271">Returns a value indicating whether two assembly names are the same.</span>
          </span>
          <span data-ttu-id="c7280-272">La comparación se basa en los nombres de ensamblado simples.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-272">The comparison is based on the simple assembly names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c7280-273">
            <see langword="true" /> si los nombres de ensamblado simples son iguales; si no, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-273">
              <see langword="true" /> if the simple assembly names are the same; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7280-274">La comparación depende solo el nombre sencillo de ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c7280-274">The comparison depends only on the simple assembly name.</span></span> <span data-ttu-id="c7280-275">Omite la versión y referencia cultural, token de clave pública.</span><span class="sxs-lookup"><span data-stu-id="c7280-275">It ignores version, culture, and public key token.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPublicKey">
      <MemberSignature Language="C#" Value="public void SetPublicKey (byte[] publicKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPublicKey(unsigned int8[] publicKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.SetPublicKey(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPublicKey (publicKey As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPublicKey(cli::array &lt;System::Byte&gt; ^ publicKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publicKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="publicKey">
          <span data-ttu-id="c7280-276">Matriz de bytes que contiene la clave pública del ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-276">A byte array containing the public key of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7280-277">Establece la clave pública que identifica el ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-277">Sets the public key identifying the assembly.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7280-278">También debe utilizar el <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> método para proporcionar un token de clave pública.</span><span class="sxs-lookup"><span data-stu-id="c7280-278">You must also use the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method to provide a public key token.</span></span> <span data-ttu-id="c7280-279">En caso contrario, un <xref:System.Security.SecurityException> se produce cuando el <xref:System.Reflection.AssemblyName.GetPublicKey%2A> se llama al método.</span><span class="sxs-lookup"><span data-stu-id="c7280-279">Otherwise, a <xref:System.Security.SecurityException> is thrown when the <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7280-280">En el ejemplo siguiente, se emite un ensamblado dinámico y lo guarda en el directorio actual.</span><span class="sxs-lookup"><span data-stu-id="c7280-280">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="c7280-281">Cuando se crea el ensamblado, el <xref:System.Reflection.AssemblyName.SetPublicKey%2A> método se usa para proporcionar al ensamblado una clave pública.</span><span class="sxs-lookup"><span data-stu-id="c7280-281">When the assembly is created, the <xref:System.Reflection.AssemblyName.SetPublicKey%2A> method is used to give the assembly a public key.</span></span> <span data-ttu-id="c7280-282">El <xref:System.Reflection.AssemblyName.GetPublicKey%2A> , a continuación, se utiliza el método para recuperar la clave pública, que se muestra en la consola.</span><span class="sxs-lookup"><span data-stu-id="c7280-282">The <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is then used to retrieve the public key, which is displayed to the console.</span></span>  
  
 [!code-cpp[AssemblyName_SetPublicKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_SetPublicKey/CPP/assemblyname_setpublickey.cpp#1)]
 [!code-csharp[AssemblyName_SetPublicKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_SetPublicKey/CS/assemblyname_setpublickey.cs#1)]
 [!code-vb[AssemblyName_SetPublicKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_SetPublicKey/VB/assemblyname_setpublickey.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPublicKeyToken">
      <MemberSignature Language="C#" Value="public void SetPublicKeyToken (byte[] publicKeyToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPublicKeyToken(unsigned int8[] publicKeyToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.SetPublicKeyToken(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPublicKeyToken (publicKeyToken As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPublicKeyToken(cli::array &lt;System::Byte&gt; ^ publicKeyToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publicKeyToken" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="publicKeyToken">
          <span data-ttu-id="c7280-283">Matriz de bytes que contiene el token de clave pública del ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-283">A byte array containing the public key token of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7280-284">Establece el token de clave pública, formado por los últimos 8 bytes del código hash SHA-1 de la clave pública con la que se firma la aplicación o el ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-284">Sets the public key token, which is the last 8 bytes of the SHA-1 hash of the public key under which the application or assembly is signed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7280-285">Al establecer la clave pública mediante una llamada a la <xref:System.Reflection.AssemblyName.SetPublicKey%2A> método, también debe utilizar el <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> método para proporcionar un token de clave pública.</span><span class="sxs-lookup"><span data-stu-id="c7280-285">When you set the public key by calling the <xref:System.Reflection.AssemblyName.SetPublicKey%2A> method, you must also use the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method to provide a public key token.</span></span> <span data-ttu-id="c7280-286">En caso contrario, un <xref:System.Security.SecurityException> se produce cuando el <xref:System.Reflection.AssemblyName.GetPublicKey%2A> se llama al método.</span><span class="sxs-lookup"><span data-stu-id="c7280-286">Otherwise, a <xref:System.Security.SecurityException> is thrown when the <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7280-287">En el ejemplo siguiente, se emite un ensamblado dinámico y lo guarda en el directorio actual.</span><span class="sxs-lookup"><span data-stu-id="c7280-287">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="c7280-288">Cuando se crea el ensamblado, el <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> método se usa para establecer el token de clave pública del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c7280-288">When the assembly is created, the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method is used to set the assembly's public key token.</span></span> <span data-ttu-id="c7280-289">El <xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A> , a continuación, se utiliza el método para recuperar el token de clave pública, que se muestra en la consola.</span><span class="sxs-lookup"><span data-stu-id="c7280-289">The <xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A> method is then used to retrieve the public key token, which is displayed to the console.</span></span>  
  
 [!code-cpp[AssemblyName_SetPublicKey#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_SetPublicKey/CPP/assemblyname_setpublickey.cpp#2)]
 [!code-csharp[AssemblyName_SetPublicKey#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_SetPublicKey/CS/assemblyname_setpublickey.cs#2)]
 [!code-vb[AssemblyName_SetPublicKey#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_SetPublicKey/VB/assemblyname_setpublickey.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyName.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _AssemblyName.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyName.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _AssemblyName.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyName.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_AssemblyName::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyName.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="c7280-290">Reservado para un uso futuro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-290">Reserved for future use.</span>
          </span>
          <span data-ttu-id="c7280-291">Debe ser IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-291">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="c7280-292">Matriz que se pasa con los nombres que se van a asignar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-292">Passed-in array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="c7280-293">Número de nombres que se van a asignar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-293">Count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="c7280-294">Contexto de configuración regional en el que se van a interpretar los nombres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-294">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="c7280-295">Matriz asignada por el llamador que recibe los identificadores que corresponden a los nombres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-295">Caller-allocated array that receives the IDs corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7280-296">Asigna un conjunto de nombres a un conjunto correspondiente de identificadores de envío.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-296">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7280-297">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="c7280-297">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="c7280-298">Para obtener más información sobre `IDispatch::GetIDsOfNames`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="c7280-298">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="c7280-299">No se admite el acceso enlazado en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-299">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyName.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _AssemblyName.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyName.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _AssemblyName.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyName.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_AssemblyName::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyName.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="c7280-300">Información de tipos que se va a devolver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-300">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="c7280-301">Identificador de la configuración regional de la información de tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-301">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="c7280-302">Recibe un puntero al objeto de información de tipo solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-302">Receives a pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7280-303">Recupera la información de tipo de un objeto, que se puede usar después para obtener la información de tipo de una interfaz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-303">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7280-304">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="c7280-304">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="c7280-305">Para obtener más información sobre `IDispatch::GetTypeInfo`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="c7280-305">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="c7280-306">No se admite el acceso enlazado en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-306">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _AssemblyName.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _AssemblyName.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_AssemblyName::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="c7280-307">Señala a una ubicación que recibe el número de interfaces de información de tipo proporcionado por el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-307">Points to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7280-308">Recupera el número de interfaces de información de tipo que proporciona un objeto (0 ó 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-308">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7280-309">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="c7280-309">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="c7280-310">Para obtener más información sobre `IDispatch::GetTypeInfoCount`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="c7280-310">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="c7280-311">No se admite el acceso enlazado en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-311">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyName.Invoke">
      <MemberSignature Language="C#" Value="void _AssemblyName.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyName.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _AssemblyName.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyName.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_AssemblyName::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyName.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="c7280-312">Identifica el miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-312">Identifies the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="c7280-313">Reservado para un uso futuro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-313">Reserved for future use.</span>
          </span>
          <span data-ttu-id="c7280-314">Debe ser IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-314">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="c7280-315">Contexto de la configuración regional en que se interpretan los argumentos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-315">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="c7280-316">Marcas que describen el contexto de la llamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-316">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="c7280-317">Puntero a una estructura que contiene una matriz de argumentos, una matriz de valores DispID de argumento para argumentos con nombre y recuentos del número de elementos de cada matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-317">Pointer to a structure containing an array of arguments, an array of argument DispIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="c7280-318">Puntero a la ubicación donde se va a almacenar el resultado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-318">Pointer to the location where the result is to be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="c7280-319">Puntero a una estructura que contiene información de excepciones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-319">Pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="c7280-320">Índice del primer argumento que tiene un error.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-320">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7280-321">Proporciona acceso a las propiedades y los métodos expuestos por un objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-321">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7280-322">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="c7280-322">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="c7280-323">Para obtener más información sobre `IDispatch::Invoke`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="c7280-323">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="c7280-324">No se admite el acceso enlazado en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-324">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c7280-325">Devuelve el nombre completo del ensamblado, también conocido como nombre para mostrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-325">Returns the full name of the assembly, also known as the display name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c7280-326">Nombre completo del ensamblado o nombre de la clase si no es posible determinar su nombre completo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-326">The full name of the assembly, or the class name if the full name cannot be determined.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7280-327">Vea la descripción de <xref:System.Reflection.AssemblyName> para el formato de la cadena devuelta.</span><span class="sxs-lookup"><span data-stu-id="c7280-327">See the description of <xref:System.Reflection.AssemblyName> for the format of the returned string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7280-328">En el ejemplo siguiente se obtiene un <xref:System.Reflection.AssemblyName> objeto para un hipotético `MyAssembly.exe` ensamblado y, a continuación, utiliza el <xref:System.Reflection.AssemblyName.ToString%2A> método para recuperar el nombre completo del ensamblado o nombre para mostrar.</span><span class="sxs-lookup"><span data-stu-id="c7280-328">The following example gets an <xref:System.Reflection.AssemblyName> object for a hypothetical `MyAssembly.exe` assembly, and then uses the <xref:System.Reflection.AssemblyName.ToString%2A> method to retrieve the full assembly name, or display name.</span></span>  
  
 [!code-cpp[AssemblyName_GetAssemblyName#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_GetAssemblyName/CPP/assemblyname_getassemblyname.cpp#2)]
 [!code-csharp[AssemblyName_GetAssemblyName#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_GetAssemblyName/CS/assemblyname_getassemblyname.cs#2)]
 [!code-vb[AssemblyName_GetAssemblyName#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_GetAssemblyName/VB/assemblyname_getassemblyname.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public Version Version { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version Version" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.Version" />
      <MemberSignature Language="VB.NET" Value="Public Property Version As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ Version { Version ^ get(); void set(Version ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c7280-329">Obtiene o establece los números de versión principal, secundaria, de compilación y de revisión del ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-329">Gets or sets the major, minor, build, and revision numbers of the assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c7280-330">Objeto que representa los números de versión principal, secundaria, de compilación y de revisión del ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-330">An object that represents the major, minor, build, and revision numbers of the assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7280-331">Todos los componentes de la versión deben ser enteros mayores o iguales a cero.</span><span class="sxs-lookup"><span data-stu-id="c7280-331">All components of the version must be integers greater than or equal to zero.</span></span> <span data-ttu-id="c7280-332">Metadatos restringen el principal, secundaria, compilación y componentes de revisión de un ensamblado y el valor máximo de <xref:System.UInt16.MaxValue?displayProperty=nameWithType> - 1.</span><span class="sxs-lookup"><span data-stu-id="c7280-332">Metadata restricts the major, minor, build, and revision components for an assembly to a maximum value of <xref:System.UInt16.MaxValue?displayProperty=nameWithType> - 1.</span></span> <span data-ttu-id="c7280-333">Si un componente supera este valor, no se produce ningún error; Sin embargo, en un ensamblado dinámico, ese componente es cero.</span><span class="sxs-lookup"><span data-stu-id="c7280-333">If a component exceeds this value, no error is thrown; however, in a dynamic assembly, that component is zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7280-334">Esta sección contiene dos ejemplos.</span><span class="sxs-lookup"><span data-stu-id="c7280-334">This section contains two examples.</span></span> <span data-ttu-id="c7280-335">El primer ejemplo muestra cómo recuperar la versión del ensamblado en ejecución actualmente.</span><span class="sxs-lookup"><span data-stu-id="c7280-335">The first example shows how to retrieve the version of the currently executing assembly.</span></span> <span data-ttu-id="c7280-336">El segundo ejemplo muestra cómo utilizar el <xref:System.Reflection.AssemblyName.Version%2A> propiedad para especificar la versión del ensamblado cuando se emite un ensamblado dinámico.</span><span class="sxs-lookup"><span data-stu-id="c7280-336">The second example shows how to use the <xref:System.Reflection.AssemblyName.Version%2A> property to specify the assembly version when you emit a dynamic assembly.</span></span>  
  
 <span data-ttu-id="c7280-337">**Ejemplo 1**</span><span class="sxs-lookup"><span data-stu-id="c7280-337">**Example 1**</span></span>  
  
 <span data-ttu-id="c7280-338">En el ejemplo siguiente se recupera y muestra los números de versión del ensamblado actualmente en ejecución y el ensamblado que contiene el <xref:System.String> clase.</span><span class="sxs-lookup"><span data-stu-id="c7280-338">The following example retrieves and displays the version numbers of the currently executing assembly and the assembly that contains the <xref:System.String> class.</span></span>  
  
 [!code-cpp[AssemblyName.Version#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName.Version/cpp/Example.cpp#1)]
 [!code-csharp[AssemblyName.Version#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName.Version/cs/Example.cs#1)]
 [!code-vb[AssemblyName.Version#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName.Version/vb/Example.vb#1)]  
  
 <span data-ttu-id="c7280-339">**Ejemplo 2**</span><span class="sxs-lookup"><span data-stu-id="c7280-339">**Example 2**</span></span>  
  
 <span data-ttu-id="c7280-340">En el ejemplo siguiente, se emite un ensamblado dinámico y lo guarda en el directorio actual.</span><span class="sxs-lookup"><span data-stu-id="c7280-340">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="c7280-341">Cuando se crea el ensamblado, el <xref:System.Reflection.AssemblyName.Version%2A> propiedad se utiliza para especificar la información de versión del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c7280-341">When the assembly is created, the <xref:System.Reflection.AssemblyName.Version%2A> property is used to specify version information for the assembly.</span></span>  
  
 [!code-cpp[AssemblyName_Constructor#3](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_Constructor/CPP/assemblyname_constructor.cpp#3)]
 [!code-csharp[AssemblyName_Constructor#3](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_Constructor/CS/assemblyname_constructor.cs#3)]
 [!code-vb[AssemblyName_Constructor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_Constructor/VB/assemblyname_constructor.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VersionCompatibility">
      <MemberSignature Language="C#" Value="public System.Configuration.Assemblies.AssemblyVersionCompatibility VersionCompatibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.Assemblies.AssemblyVersionCompatibility VersionCompatibility" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.VersionCompatibility" />
      <MemberSignature Language="VB.NET" Value="Public Property VersionCompatibility As AssemblyVersionCompatibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Assemblies::AssemblyVersionCompatibility VersionCompatibility { System::Configuration::Assemblies::AssemblyVersionCompatibility get(); void set(System::Configuration::Assemblies::AssemblyVersionCompatibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Assemblies.AssemblyVersionCompatibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c7280-342">Obtiene o establece la información relacionada con la compatibilidad del ensamblado con otros ensamblados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-342">Gets or sets the information related to the assembly's compatibility with other assemblies.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c7280-343">Valor que representa la información relacionada con la compatibilidad del ensamblado con otros ensamblados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7280-343">A value that represents information about the assembly's compatibility with other assemblies.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7280-344"><xref:System.Reflection.AssemblyName.VersionCompatibility%2A> información indica, por ejemplo, que no puede ejecutar el ensamblado en paralelo con otras versiones debido a conflictos con un controlador de dispositivo.</span><span class="sxs-lookup"><span data-stu-id="c7280-344"><xref:System.Reflection.AssemblyName.VersionCompatibility%2A> information indicates, for example, that the assembly cannot execute side-by-side with other versions due to conflicts over a device driver.</span></span>  
  
 <span data-ttu-id="c7280-345">Actualmente, <xref:System.Reflection.AssemblyName.VersionCompatibility%2A> siempre devuelve <xref:System.Configuration.Assemblies.AssemblyVersionCompatibility.SameMachine?displayProperty=nameWithType>y no se utiliza por el cargador.</span><span class="sxs-lookup"><span data-stu-id="c7280-345">Currently, <xref:System.Reflection.AssemblyName.VersionCompatibility%2A> always returns <xref:System.Configuration.Assemblies.AssemblyVersionCompatibility.SameMachine?displayProperty=nameWithType>, and is not used by the loader.</span></span> <span data-ttu-id="c7280-346">Esta propiedad está reservada para una característica futura.</span><span class="sxs-lookup"><span data-stu-id="c7280-346">This property is reserved for a future feature.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>