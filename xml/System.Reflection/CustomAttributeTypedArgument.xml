<Type Name="CustomAttributeTypedArgument" FullName="System.Reflection.CustomAttributeTypedArgument">
  <Metadata><Meta Name="ms.openlocfilehash" Value="155eb403f2f9f61c1a95de46e16c401fd50f764d" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52342226" /></Metadata><TypeSignature Language="C#" Value="public struct CustomAttributeTypedArgument" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit CustomAttributeTypedArgument extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.CustomAttributeTypedArgument" />
  <TypeSignature Language="VB.NET" Value="Public Structure CustomAttributeTypedArgument" />
  <TypeSignature Language="C++ CLI" Value="public value class CustomAttributeTypedArgument" />
  <TypeSignature Language="F#" Value="type CustomAttributeTypedArgument = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa un argumento de un atributo personalizado en el contexto de solo reflexión o un elemento de un argumento de matriz.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No se puede ejecutar código que se examina en el contexto de solo reflexión, por lo que no siempre es posible examinar los atributos personalizados mediante la creación de instancias de ellos y, a continuación, examinar sus propiedades, utilizando métodos como <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>, etc. . Si el código para el propio tipo de atributo se carga en el contexto de solo reflexión, no se puede ejecutar.  
  
 El <xref:System.Reflection.CustomAttributeNamedArgument> estructura la usa el <xref:System.Reflection.CustomAttributeData> clase para proporcionar acceso al tipo y valor de un argumento posicional especificado para una instancia de atributo personalizado, sin ejecutar el constructor de atributo. También proporciona acceso al tipo y valor de un argumento con nombre sin ejecutar el código de la propiedad correspondiente del tipo de atributo personalizado.  
  
 Proporcionan los tipos y valores de todos los argumentos posicionales y con nombre de una instancia de atributo <xref:System.Reflection.CustomAttributeTypedArgument> estructuras. Los atributos de posición devueltos por la <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A?displayProperty=nameWithType> propiedad directamente se representan mediante <xref:System.Reflection.CustomAttributeTypedArgument> estructuras, pero los argumentos con nombre devueltos por la <xref:System.Reflection.CustomAttributeData.NamedArguments%2A?displayProperty=nameWithType> propiedad están representadas por <xref:System.Reflection.CustomAttributeNamedArgument> estructuras; para obtener el <xref:System.Reflection.CustomAttributeTypedArgument> estructura de un argumento con nombre, use la <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> propiedad.  
  
 Si un argumento es una matriz de valores, el <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> propiedad de la <xref:System.Reflection.CustomAttributeTypedArgument> que representa el argumento devuelve un tipo genérico <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> de <xref:System.Reflection.CustomAttributeTypedArgument> objetos. Cada <xref:System.Reflection.CustomAttributeTypedArgument> objeto de la colección representa el elemento correspondiente de la matriz.  
  
 Para crear instancias de la <xref:System.Reflection.CustomAttributeData> clase, use la `static` <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> método de fábrica.  
  
   
  
## Examples  
 El ejemplo siguiente define un atributo personalizado con cuatro constructores y cuatro propiedades. Dos de las propiedades son de solo lectura y se establecen mediante el uso de los parámetros posicionales de los constructores. Las otras dos propiedades son de lectura/escritura, y puede ser conjunto sólo mediante argumentos con nombre. Una propiedad posicional es una matriz de cadenas y una propiedad con nombre es una matriz de enteros.  
  
 El atributo se aplica al ensamblado, a un tipo declarado en el ensamblado, a un método del tipo y a un parámetro del método. En estos casos, se usan diferentes constructores. Cuando se ejecuta, el ensamblado se carga en el contexto de solo reflexión y muestra los atributos personalizados.  
  
 El atributo que se aplica al tipo muestra las propiedades de la matriz, con argumentos posicionales y con nombre.  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Reflection.CustomAttributeData" />
    <altmember cref="T:System.Reflection.CustomAttributeNamedArgument" />
    <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Reflection.CustomAttributeTypedArgument" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeTypedArgument (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomAttributeTypedArgument(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Reflection.CustomAttributeTypedArgument : obj -&gt; System.Reflection.CustomAttributeTypedArgument" Usage="new System.Reflection.CustomAttributeTypedArgument value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Valor del argumento del atributo personalizado.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> con el valor especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `value` parámetro no puede ser `null` para este constructor, porque el tipo de argumento se deduce el tipo de `value`. Para especificar un `null` valor, use la <xref:System.Reflection.CustomAttributeTypedArgument.%23ctor%28System.Type%2CSystem.Object%29> constructor.  
  
 Este constructor es para su uso por los herederos de la <xref:System.Reflection.CustomAttributeTypedArgument> clase. No está pensado para su uso en código de la aplicación.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="value" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeTypedArgument (Type argumentType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type argumentType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (argumentType As Type, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomAttributeTypedArgument(Type ^ argumentType, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Reflection.CustomAttributeTypedArgument : Type * obj -&gt; System.Reflection.CustomAttributeTypedArgument" Usage="new System.Reflection.CustomAttributeTypedArgument (argumentType, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="argumentType" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="argumentType">Tipo del argumento del atributo personalizado.</param>
        <param name="value">Valor del argumento del atributo personalizado.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> con el tipo y el valor especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor es para su uso por los herederos de la <xref:System.Reflection.CustomAttributeTypedArgument> clase. No está pensado para su uso en código de la aplicación.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="argumentType" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ArgumentType">
      <MemberSignature Language="C#" Value="public Type ArgumentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ArgumentType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArgumentType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ArgumentType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ArgumentType : Type" Usage="System.Reflection.CustomAttributeTypedArgument.ArgumentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el tipo del argumento o del elemento de argumento de matriz.</summary>
        <value>Objeto <see cref="T:System.Type" /> que representa el tipo del argumento o del elemento de matriz.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Argumentos simples o de los elementos de argumentos de matriz, esta propiedad identifica el tipo real del valor devuelto por la <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> propiedad. Para los argumentos de matriz, esta propiedad devuelve el tipo de matriz, pero la <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> propiedad devuelve un `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` en Visual Basic) en el que cada elemento de la colección representa el elemento correspondiente del argumento de matriz.  
  
   
  
## Examples  
 El ejemplo siguiente define un atributo personalizado con cuatro constructores y cuatro propiedades. Dos de las propiedades son de solo lectura y se establecen mediante el uso de los parámetros posicionales de los constructores. Las otras dos propiedades son de lectura/escritura, y puede ser conjunto sólo mediante argumentos con nombre. Una propiedad posicional es una matriz de cadenas y una propiedad con nombre es una matriz de enteros.  
  
 El atributo se aplica al ensamblado, a un tipo declarado en el ensamblado, a un método del tipo y a un parámetro del método. En estos casos, se usan diferentes constructores. Cuando se ejecuta, el ensamblado se carga en el contexto de solo reflexión y muestra los atributos personalizados.  
  
 El atributo que se aplica al tipo muestra las propiedades de la matriz, con argumentos posicionales y con nombre.  
  
 El <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> propiedad se utiliza en el `ShowValueOrArray` método que muestra datos de atributos personalizados, para mostrar los tipos de atributos.  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeTypedArgument.Value" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="customAttributeTypedArgument.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Otro objeto con el que se va a realizar la comparación.</param>
        <summary>Indica si esta instancia y un objeto especificado son iguales.</summary>
        <returns><see langword="true" /> si <paramref name="obj" /> y esta instancia son del mismo tipo y representan el mismo valor; en caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="customAttributeTypedArgument.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve el código hash de esta instancia.</summary>
        <returns>Entero de 32 bits con signo, que es el código hash de esta instancia.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.CustomAttributeTypedArgument left, System.Reflection.CustomAttributeTypedArgument right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Reflection.CustomAttributeTypedArgument left, valuetype System.Reflection.CustomAttributeTypedArgument right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.op_Equality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As CustomAttributeTypedArgument, right As CustomAttributeTypedArgument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::CustomAttributeTypedArgument left, System::Reflection::CustomAttributeTypedArgument right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Reflection.CustomAttributeTypedArgument * System.Reflection.CustomAttributeTypedArgument -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.CustomAttributeTypedArgument" />
        <Parameter Name="right" Type="System.Reflection.CustomAttributeTypedArgument" />
      </Parameters>
      <Docs>
        <param name="left">Estructura <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> situada a la izquierda del operador de igualdad.</param>
        <param name="right">Estructura <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> situada a la derecha del operador de igualdad.</param>
        <summary>Prueba si dos estructuras <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> son equivalentes.</summary>
        <returns><see langword="true" /> si las dos estructuras <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> son iguales; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[El método equivalente para este operador es <xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType>.]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.CustomAttributeTypedArgument left, System.Reflection.CustomAttributeTypedArgument right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Reflection.CustomAttributeTypedArgument left, valuetype System.Reflection.CustomAttributeTypedArgument right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.op_Inequality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As CustomAttributeTypedArgument, right As CustomAttributeTypedArgument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::CustomAttributeTypedArgument left, System::Reflection::CustomAttributeTypedArgument right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Reflection.CustomAttributeTypedArgument * System.Reflection.CustomAttributeTypedArgument -&gt; bool" Usage="System.Reflection.CustomAttributeTypedArgument.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.CustomAttributeTypedArgument" />
        <Parameter Name="right" Type="System.Reflection.CustomAttributeTypedArgument" />
      </Parameters>
      <Docs>
        <param name="left">Estructura <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> situada a la izquierda del operador de desigualdad.</param>
        <param name="right">Estructura <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> situada a la derecha del operador de no igualdad.</param>
        <summary>Prueba si dos estructuras de <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> son diferentes.</summary>
        <returns><see langword="true" /> si las dos estructuras <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> son diferentes; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[El método equivalente para este operador es <xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType>.]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="customAttributeTypedArgument.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve una cadena formada por el nombre de argumento, el signo igual y una representación de cadena del valor del argumento.</summary>
        <returns>Cadena formada por el nombre de argumento, el signo igual y una representación de cadena del valor del argumento.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeTypedArgument.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Reflection.CustomAttributeTypedArgument.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor del argumento para un argumento simple o para un elemento de un argumento de matriz; obtiene una colección de valores para un argumento de matriz.</summary>
        <value>Objeto que representa el valor del argumento o elemento, o colección <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> genérica de objetos <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> que representa los valores de un argumento de tipo matriz.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Reflection.CustomAttributeTypedArgument> representa un argumento de matriz, esta propiedad devuelve un `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` en Visual Basic). Cada elemento de la colección representa el elemento correspondiente del argumento de matriz.  
  
 El tipo del valor puede obtenerse utilizando el <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> propiedad. <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> Obtiene el tipo real del valor devuelto por la <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> propiedad argumentos simples o de los elementos de argumentos de matriz. Devuelve el tipo de matriz de argumentos de matriz.  
  
   
  
## Examples  
 El ejemplo siguiente define un atributo personalizado con cuatro constructores y cuatro propiedades. Dos de las propiedades son de solo lectura y se establecen mediante el uso de los parámetros posicionales de los constructores. Las otras dos propiedades son de lectura/escritura, y puede ser conjunto sólo mediante argumentos con nombre. Una propiedad posicional es una matriz de cadenas y una propiedad con nombre es una matriz de enteros.  
  
 El atributo se aplica al ensamblado, a un tipo declarado en el ensamblado, a un método del tipo y a un parámetro del método. En estos casos, se usan diferentes constructores. Cuando se ejecuta, el ensamblado se carga en el contexto de solo reflexión y muestra los atributos personalizados.  
  
 El atributo que se aplica al tipo muestra las propiedades de la matriz, con argumentos posicionales y con nombre.  
  
 El <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> propiedad se utiliza en el `ShowValueOrArray` método que muestra datos de atributos personalizados, para mostrar los valores de atributos.  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> &#124; <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>