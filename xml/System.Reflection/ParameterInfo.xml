<Type Name="ParameterInfo" FullName="System.Reflection.ParameterInfo">
  <TypeSignature Language="C#" Value="public class ParameterInfo : System.Reflection.ICustomAttributeProvider, System.Runtime.InteropServices._ParameterInfo, System.Runtime.Serialization.IObjectReference" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable beforefieldinit ParameterInfo extends System.Object implements class System.Reflection.ICustomAttributeProvider, class System.Runtime.InteropServices._ParameterInfo, class System.Runtime.Serialization.IObjectReference" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.ParameterInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class ParameterInfo&#xA;Implements _ParameterInfo, ICustomAttributeProvider, IObjectReference" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParameterInfo : System::Reflection::ICustomAttributeProvider, System::Runtime::InteropServices::_ParameterInfo, System::Runtime::Serialization::IObjectReference" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Reflection.ICustomAttributeProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._ParameterInfo</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IObjectReference</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._ParameterInfo))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ea4c4-101">Detecta los atributos de un parámetro y proporciona acceso a los metadatos del parámetro.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-101">Discovers the attributes of a parameter and provides access to parameter metadata.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea4c4-102">Usar una instancia de `ParameterInfo` para obtener información sobre el tipo de datos del parámetro, el valor predeterminado y así sucesivamente.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-102">Use an instance of `ParameterInfo` to obtain information about the parameter's data type, default value, and so on.</span></span>  
  
 <span data-ttu-id="ea4c4-103"><xref:System.Reflection.MethodBase.GetParameters%2A> Devuelve una matriz de `ParameterInfo` objetos que representan los parámetros de un método, por orden.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-103"><xref:System.Reflection.MethodBase.GetParameters%2A> returns an array of `ParameterInfo` objects representing the parameters of a method, in order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ea4c4-104">Este ejemplo muestra cómo usar varias clases de reflexión para analizar los metadatos contenidos en un ensamblado.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-104">This example shows how to use various reflection classes to analyze the metadata contained in an assembly.</span></span>  
  
 [!code-cpp[Reflection#1](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection/CPP/reflection.cpp#1)]
 [!code-csharp[Reflection#1](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection/CS/Reflection.cs#1)]
 [!code-vb[Reflection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection/VB/Reflection.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="ea4c4-105">Este tipo es seguro para la ejecución de subprocesos.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-105">This type is thread safe.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ParameterInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ParameterInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ea4c4-106">Inicializa una nueva instancia de la clase <see langword="ParameterInfo" />.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-106">Initializes a new instance of the <see langword="ParameterInfo" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.ParameterAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.ParameterAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Attributes As ParameterAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::ParameterAttributes Attributes { System::Reflection::ParameterAttributes get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea4c4-107">Obtiene los atributos de este parámetro.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-107">Gets the attributes for this parameter.</span></span></summary>
        <value><span data-ttu-id="ea4c4-108">Objeto <see langword="ParameterAttributes" /> que representa los atributos de este parámetro.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-108">A <see langword="ParameterAttributes" /> object representing the attributes for this parameter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea4c4-109">Este método utiliza el <xref:System.Reflection.ParameterInfo.AttrsImpl> método.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-109">This method utilizes the <xref:System.Reflection.ParameterInfo.AttrsImpl> method.</span></span>  
  
 <span data-ttu-id="ea4c4-110">Para obtener la <xref:System.Reflection.ParameterInfo> de matriz, primero hay que obtener el método o el constructor y, a continuación, llame a <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-110">To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ea4c4-111">En el ejemplo siguiente se define un método con tres parámetros.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-111">The following example defines a method with three parameters.</span></span> <span data-ttu-id="ea4c4-112">Usa el <xref:System.Reflection.ParameterInfo.Attributes%2A> propiedad para obtener los atributos del segundo parámetro y mostrarlos en la consola.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-112">It uses the <xref:System.Reflection.ParameterInfo.Attributes%2A> property to get the attributes of the second parameter and display them at the console.</span></span>  
  
 [!code-cpp[ParameterInfo_Attributes1#1](~/samples/snippets/cpp/VS_Snippets_CLR/ParameterInfo_Attributes1/CPP/parameterinfo_attributes1.cpp#1)]
 [!code-csharp[ParameterInfo_Attributes1#1](~/samples/snippets/csharp/VS_Snippets_CLR/ParameterInfo_Attributes1/CS/parameterinfo_attributes1.cs#1)]
 [!code-vb[ParameterInfo_Attributes1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParameterInfo_Attributes1/VB/parameterinfo_attributes1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.ParameterAttributes" />
      </Docs>
    </Member>
    <Member MemberName="AttrsImpl">
      <MemberSignature Language="C#" Value="protected System.Reflection.ParameterAttributes AttrsImpl;" />
      <MemberSignature Language="ILAsm" Value=".field family valuetype System.Reflection.ParameterAttributes AttrsImpl" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.ParameterInfo.AttrsImpl" />
      <MemberSignature Language="VB.NET" Value="Protected AttrsImpl As ParameterAttributes " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Reflection::ParameterAttributes AttrsImpl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea4c4-113">Atributos del parámetro.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-113">The attributes of the parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea4c4-114">Este campo sólo está diseñado para los usuarios que se va a derivar clases desde `ParameterInfo`.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-114">This field is intended only for users who are deriving classes from `ParameterInfo`.</span></span>  
  
 <span data-ttu-id="ea4c4-115">El acceso a los atributos de parámetro es a través de <xref:System.Reflection.ParameterInfo.Attributes%2A>.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-115">Typical access to parameter attributes is through <xref:System.Reflection.ParameterInfo.Attributes%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassImpl">
      <MemberSignature Language="C#" Value="protected Type ClassImpl;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Type ClassImpl" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.ParameterInfo.ClassImpl" />
      <MemberSignature Language="VB.NET" Value="Protected ClassImpl As Type " />
      <MemberSignature Language="C++ CLI" Value="protected: Type ^ ClassImpl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea4c4-116">El objeto <see langword="Type" /> del parámetro.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-116">The <see langword="Type" /> of the parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea4c4-117">Este campo sólo está diseñado para los usuarios que se va a derivar clases desde `ParameterInfo`.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-117">This field is intended only for users who are deriving classes from `ParameterInfo`.</span></span>  
  
 <span data-ttu-id="ea4c4-118">El acceso a los tipos de parámetros es a través de <xref:System.Reflection.ParameterInfo.ParameterType%2A>.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-118">Typical access to parameter types is through <xref:System.Reflection.ParameterInfo.ParameterType%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomAttributes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Reflection.CustomAttributeData&gt; CustomAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.CustomAttributeData&gt; CustomAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.CustomAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CustomAttributes As IEnumerable(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Reflection::CustomAttributeData ^&gt; ^ CustomAttributes { System::Collections::Generic::IEnumerable&lt;System::Reflection::CustomAttributeData ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea4c4-119">Obtiene una colección que contiene los atributos personalizados de este parámetro.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-119">Gets a collection that contains this parameter's custom attributes.</span></span></summary>
        <value><span data-ttu-id="ea4c4-120">Colección que contiene los atributos personalizados de este parámetro.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-120">A collection that contains this parameter's custom attributes.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public virtual object DefaultValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ DefaultValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea4c4-121">Obtiene un valor que indica el valor predeterminado del parámetro si este tiene un valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-121">Gets a value indicating the default value if the parameter has a default value.</span></span></summary>
        <value><span data-ttu-id="ea4c4-122">Valor predeterminado del parámetro o <see cref="F:System.DBNull.Value" /> si no tiene ningún valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-122">The default value of the parameter, or <see cref="F:System.DBNull.Value" /> if the parameter has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea4c4-123">Esta propiedad solo se usa en el contexto de ejecución.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-123">This property is used only in the execution context.</span></span> <span data-ttu-id="ea4c4-124">En el contexto de solo reflexión, use la <xref:System.Reflection.ParameterInfo.RawDefaultValue%2A> propiedad en su lugar.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-124">In the reflection-only context, use the <xref:System.Reflection.ParameterInfo.RawDefaultValue%2A> property instead.</span></span>  
  
 <span data-ttu-id="ea4c4-125">El valor predeterminado se utiliza cuando no se especifica un valor real en la llamada al método.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-125">The default value is used when an actual value is not specified in the method call.</span></span> <span data-ttu-id="ea4c4-126">Un parámetro puede tener un valor predeterminado que es `null`.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-126">A parameter can have a default value that is `null`.</span></span> <span data-ttu-id="ea4c4-127">Esto es diferente de los casos donde no se define un valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-127">This is distinct from the case where a default value is not defined.</span></span>  
  
 <span data-ttu-id="ea4c4-128">Este método utiliza el <xref:System.Reflection.ParameterInfo.DefaultValueImpl> método.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-128">This method utilizes the <xref:System.Reflection.ParameterInfo.DefaultValueImpl> method.</span></span>  
  
 <span data-ttu-id="ea4c4-129">Para obtener la <xref:System.Reflection.ParameterInfo> de matriz, primero hay que obtener el método o el constructor y, a continuación, llame a <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-129">To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultValueImpl">
      <MemberSignature Language="C#" Value="protected object DefaultValueImpl;" />
      <MemberSignature Language="ILAsm" Value=".field family object DefaultValueImpl" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.ParameterInfo.DefaultValueImpl" />
      <MemberSignature Language="VB.NET" Value="Protected DefaultValueImpl As Object " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Object ^ DefaultValueImpl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea4c4-130">Valor predeterminado del parámetro.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-130">The default value of the parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea4c4-131">Este campo sólo está diseñado para los usuarios que se va a derivar clases desde `ParameterInfo`.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-131">This field is intended only for users who are deriving classes from `ParameterInfo`.</span></span>  
  
 <span data-ttu-id="ea4c4-132">Acceso típico en el valor predeterminado del parámetro es a través de <xref:System.Reflection.ParameterInfo.DefaultValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-132">Typical access to the default value of the parameter is through <xref:System.Reflection.ParameterInfo.DefaultValue%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ea4c4-133">Obtiene los atributos personalizados que se han aplicado a este parámetro.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-133">Gets the custom attributes applied to this parameter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public virtual object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit"><span data-ttu-id="ea4c4-134">Se omite este argumento para los objetos de este tipo.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-134">This argument is ignored for objects of this type.</span></span></param>
        <summary><span data-ttu-id="ea4c4-135">Obtiene todos los atributos personalizados definidos acerca de este parámetro.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-135">Gets all the custom attributes defined on this parameter.</span></span></summary>
        <returns><span data-ttu-id="ea4c4-136">Matriz que contiene todos los atributos personalizados aplicados a este parámetro.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-136">An array that contains all the custom attributes applied to this parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea4c4-137">Este método omite la `inherit` parámetro.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-137">This method ignores the `inherit` parameter.</span></span> <span data-ttu-id="ea4c4-138">Para buscar la cadena de herencia para los atributos en parámetros, use las sobrecargas adecuadas de la <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-138">To search the inheritance chain for attributes on parameters, use the appropriate overloads of the <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ea4c4-139">En el ejemplo siguiente se muestra cómo los atributos personalizados que se han aplicado a los parámetros de métodos se pueden recuperar en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-139">The following example shows how custom attributes that have been applied to the parameters of methods can be retrieved at run time.</span></span> <span data-ttu-id="ea4c4-140">En el ejemplo se define un atributo personalizado denominado `MyAttribute` que pueden aplicarse a los parámetros.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-140">The example defines a custom attribute named `MyAttribute` that can be applied to parameters.</span></span> <span data-ttu-id="ea4c4-141">En el ejemplo, a continuación, define una clase denominada `MyClass` con un método denominado `MyMethod`y se aplica `MyAttribute` a un parámetro del método.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-141">The example then defines a class named `MyClass` with a method named `MyMethod`, and applies `MyAttribute` to a parameter of the method.</span></span>  
  
 <span data-ttu-id="ea4c4-142">Cuando se ejecuta el ejemplo, usa el <xref:System.Reflection.ParameterInfo.GetCustomAttributes%28System.Boolean%29> método para recuperar los atributos personalizados que se han aplicado a todos los parámetros de todos los métodos de `MyClass`y los muestra en la consola.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-142">When the example is run, it uses the <xref:System.Reflection.ParameterInfo.GetCustomAttributes%28System.Boolean%29> method to retrieve the custom attributes that have been applied to all parameters of all methods in `MyClass`, and displays them at the console.</span></span>  
  
 [!code-cpp[ParameterInfo_GetCustomAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/ParameterInfo_GetCustomAttributes/CPP/source.cpp#1)]
 [!code-csharp[ParameterInfo_GetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/ParameterInfo_GetCustomAttributes/CS/source.cs#1)]
 [!code-vb[ParameterInfo_GetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParameterInfo_GetCustomAttributes/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="ea4c4-143">No ha podido cargarse un tipo de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-143">A custom attribute type could not be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public virtual object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="ea4c4-144">Atributos personalizados identificados por el tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-144">The custom attributes identified by type.</span></span></param>
        <param name="inherit"><span data-ttu-id="ea4c4-145">Se omite este argumento para los objetos de este tipo.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-145">This argument is ignored for objects of this type.</span></span></param>
        <summary><span data-ttu-id="ea4c4-146">Obtiene los atributos personalizados del tipo especificado o sus tipos derivados que se aplican a este parámetro.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-146">Gets the custom attributes of the specified type or its derived types that are applied to this parameter.</span></span></summary>
        <returns><span data-ttu-id="ea4c4-147">Matriz que contiene los atributos personalizados del tipo especificado o sus tipos derivados.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-147">An array that contains the custom attributes of the specified type or its derived types.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea4c4-148">Este método omite la `inherit` parámetro.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-148">This method ignores the `inherit` parameter.</span></span> <span data-ttu-id="ea4c4-149">Para buscar la cadena de herencia para los atributos en parámetros, use las sobrecargas adecuadas de la <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-149">To search the inheritance chain for attributes on parameters, use the appropriate overloads of the <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ea4c4-150">El tipo debe ser un tipo proporcionado por el sistema en tiempo de ejecución subyacente.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-150">The type must be a type provided by the underlying runtime system.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ea4c4-151"><paramref name="attributeType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-151"><paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="ea4c4-152">No ha podido cargarse un tipo de atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-152">A custom attribute type could not be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributesData">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributesData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributesData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.GetCustomAttributesData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomAttributesData () As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributesData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ea4c4-153">Devuelve una lista de objetos <see cref="T:System.Reflection.CustomAttributeData" /> del parámetro actual, que puede utilizarse en el contexto de solo reflexión.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-153">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects for the current parameter, which can be used in the reflection-only context.</span></span></summary>
        <returns><span data-ttu-id="ea4c4-154">Lista genérica de objetos <see cref="T:System.Reflection.CustomAttributeData" /> que representan datos acerca de los atributos que se han aplicado al parámetro actual.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-154">A generic list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the current parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea4c4-155">Utilice este método para examinar los atributos personalizados del código en el contexto de solo reflexión, en casos donde se definen los atributos personalizados propios en el código que se carga en el contexto de solo reflexión.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-155">Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context.</span></span> <span data-ttu-id="ea4c4-156">Métodos como <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> y <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A?displayProperty=nameWithType> no se puede usar en casos como éste, porque crean instancias de los atributos.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-156">Methods such as <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> and <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A?displayProperty=nameWithType> cannot be used in such cases, because they create instances of the attributes.</span></span> <span data-ttu-id="ea4c4-157">No se puede ejecutar código en el contexto de solo reflexión.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-157">Code in the reflection-only context cannot be executed.</span></span> <span data-ttu-id="ea4c4-158">Para obtener más información y código de ejemplo, vea la <xref:System.Reflection.CustomAttributeData> clase.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-158">For more information and example code, see the <xref:System.Reflection.CustomAttributeData> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOptionalCustomModifiers">
      <MemberSignature Language="C#" Value="public virtual Type[] GetOptionalCustomModifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetOptionalCustomModifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.GetOptionalCustomModifiers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOptionalCustomModifiers () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetOptionalCustomModifiers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ea4c4-159">Obtiene los modificadores personalizados opcionales del parámetro.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-159">Gets the optional custom modifiers of the parameter.</span></span></summary>
        <returns><span data-ttu-id="ea4c4-160">Una matriz de objetos <see cref="T:System.Type" /> que identifican los modificadores personalizados opcionales del parámetro actual, como <see cref="T:System.Runtime.CompilerServices.IsConst" /> o <see cref="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" />.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-160">An array of <see cref="T:System.Type" /> objects that identify the optional custom modifiers of the current parameter, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea4c4-161">El <xref:System.Reflection.ParameterInfo.GetOptionalCustomModifiers%2A> y <xref:System.Reflection.ParameterInfo.GetRequiredCustomModifiers%2A> se proporcionan métodos para los diseñadores de compiladores administrados.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-161">The <xref:System.Reflection.ParameterInfo.GetOptionalCustomModifiers%2A> and <xref:System.Reflection.ParameterInfo.GetRequiredCustomModifiers%2A> methods are provided for designers of managed compilers.</span></span> <span data-ttu-id="ea4c4-162">Para obtener más información sobre los modificadores personalizados, vea <xref:System.Runtime.CompilerServices.IsBoxed> y relacionados con las clases en el <xref:System.Runtime.CompilerServices> espacio de nombres y la especificación de metadatos en la documentación de ECMA Partition II.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-162">For more information on custom modifiers, see <xref:System.Runtime.CompilerServices.IsBoxed> and related classes in the <xref:System.Runtime.CompilerServices> namespace, and the metadata specification in the ECMA Partition II documentation.</span></span> <span data-ttu-id="ea4c4-163">La documentación está disponible en línea; vea [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) (Estándares de ECMA C# y Common Language Infrastructure) en MSDN y [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) (Estándar ECMA-335: Common Language Infrastructure [CLI]) en el sitio web de Ecma International.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-163">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRealObject">
      <MemberSignature Language="C#" Value="public object GetRealObject (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetRealObject(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.GetRealObject(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRealObject (context As StreamingContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetRealObject(System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IObjectReference.GetRealObject(System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="ea4c4-164">Secuencia serializada desde la que se deserializa el objeto actual.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-164">The serialized stream from which the current object is deserialized.</span></span></param>
        <summary><span data-ttu-id="ea4c4-165">Devuelve el objeto real que se debe deserializar en lugar del objeto especificado por la secuencia serializada.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-165">Returns the real object that should be deserialized instead of the object that the serialized stream specifies.</span></span></summary>
        <returns><span data-ttu-id="ea4c4-166">Objeto real que se coloca en el gráfico.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-166">The actual object that is put into the graph.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea4c4-167">Este método implementa el método <xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-167">This method implements the <xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="ea4c4-168">La posición del parámetro en la lista de parámetros de su miembro asociado es no válida para ese tipo de miembro.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-168">The parameter's position in the parameter list of its associated member is not valid for that member's type.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ea4c4-169">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-169">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="ea4c4-170">Este miembro no puede usarse por código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-170">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredCustomModifiers">
      <MemberSignature Language="C#" Value="public virtual Type[] GetRequiredCustomModifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetRequiredCustomModifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.GetRequiredCustomModifiers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRequiredCustomModifiers () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetRequiredCustomModifiers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ea4c4-171">Obtiene los modificadores personalizados necesarios del parámetro.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-171">Gets the required custom modifiers of the parameter.</span></span></summary>
        <returns><span data-ttu-id="ea4c4-172">Una matriz de objetos <see cref="T:System.Type" /> que identifican los modificadores personalizados necesarios del parámetro actual, como <see cref="T:System.Runtime.CompilerServices.IsConst" /> o <see cref="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" />.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-172">An array of <see cref="T:System.Type" /> objects that identify the required custom modifiers of the current parameter, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea4c4-173">El <xref:System.Reflection.ParameterInfo.GetOptionalCustomModifiers%2A> y <xref:System.Reflection.ParameterInfo.GetRequiredCustomModifiers%2A> se proporcionan métodos para los diseñadores de compiladores administrados.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-173">The <xref:System.Reflection.ParameterInfo.GetOptionalCustomModifiers%2A> and <xref:System.Reflection.ParameterInfo.GetRequiredCustomModifiers%2A> methods are provided for designers of managed compilers.</span></span> <span data-ttu-id="ea4c4-174">Para obtener más información sobre los modificadores personalizados, vea <xref:System.Runtime.CompilerServices.IsBoxed> y relacionados con las clases en el <xref:System.Runtime.CompilerServices> espacio de nombres y la especificación de metadatos en la documentación de ECMA Partition II.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-174">For more information on custom modifiers, see <xref:System.Runtime.CompilerServices.IsBoxed> and related classes in the <xref:System.Runtime.CompilerServices> namespace, and the metadata specification in the ECMA Partition II documentation.</span></span> <span data-ttu-id="ea4c4-175">La documentación está disponible en línea; vea [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) (Estándares de ECMA C# y Common Language Infrastructure) en MSDN y [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) (Estándar ECMA-335: Common Language Infrastructure [CLI]) en el sitio web de Ecma International.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-175">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDefaultValue">
      <MemberSignature Language="C#" Value="public virtual bool HasDefaultValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasDefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.HasDefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasDefaultValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasDefaultValue { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea4c4-176">Obtiene un valor que indica si este parámetro tiene un valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-176">Gets a value that indicates whether this parameter has a default value.</span></span></summary>
        <value>
          <span data-ttu-id="ea4c4-177"><see langword="true" /> si este parámetro tienen un valor predeterminado; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-177"><see langword="true" /> if this parameter has a default value; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public virtual bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.IsDefined(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="ea4c4-178">Objeto <see langword="Type" /> que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-178">The <see langword="Type" /> object to search for.</span></span></param>
        <param name="inherit"><span data-ttu-id="ea4c4-179">Se omite este argumento para los objetos de este tipo.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-179">This argument is ignored for objects of this type.</span></span></param>
        <summary><span data-ttu-id="ea4c4-180">Determina si el atributo personalizado del tipo especificado o sus tipos derivados se aplica a este parámetro.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-180">Determines whether the custom attribute of the specified type or its derived types is applied to this parameter.</span></span></summary>
        <returns>
          <span data-ttu-id="ea4c4-181">Es <see langword="true" /> si se aplican a este parámetro una o más instancias de <paramref name="attributeType" /> o sus tipos derivados; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-181"><see langword="true" /> if one or more instances of <paramref name="attributeType" /> or its derived types are applied to this parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea4c4-182">Este método omite la `inherit` parámetro.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-182">This method ignores the `inherit` parameter.</span></span> <span data-ttu-id="ea4c4-183">Para buscar la cadena de herencia para los atributos en parámetros, use las sobrecargas adecuadas de la <xref:System.Attribute.IsDefined%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-183">To search the inheritance chain for attributes on parameters, use the appropriate overloads of the <xref:System.Attribute.IsDefined%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ea4c4-184">El siguiente ejemplo define dos atributos personalizados, `MyAttribute` y `MyDerivedAttribute`.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-184">The following example defines two custom attributes, `MyAttribute` and `MyDerivedAttribute`.</span></span> <span data-ttu-id="ea4c4-185">La clase `MyDerivedAttribute` se deriva de la clase `MyAttribute`.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-185">`MyDerivedAttribute` is derived from `MyAttribute`.</span></span> <span data-ttu-id="ea4c4-186">El ejemplo, a continuación, aplica estos atributos a los parámetros de un método de una clase de ejemplo.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-186">The example then applies these attributes to the parameters of a method of an example class.</span></span>  
  
 <span data-ttu-id="ea4c4-187">Cuando se ejecuta el ejemplo, usa el <xref:System.Reflection.ParameterInfo.IsDefined%2A> método para probar todos los parámetros de todos los métodos de la clase de ejemplo.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-187">When the example is run, it uses the <xref:System.Reflection.ParameterInfo.IsDefined%2A> method to test all parameters of all methods in the example class.</span></span> <span data-ttu-id="ea4c4-188">A continuación, muestra los parámetros que tienen `MyAttribute` o `MyDerivedAttribute`.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-188">It then displays the parameters that have `MyAttribute` or `MyDerivedAttribute`.</span></span>  
  
 [!code-cpp[ParameterInfo_GetCustomAttribute_IsDefined#1](~/samples/snippets/cpp/VS_Snippets_CLR/ParameterInfo_GetCustomAttribute_IsDefined/CPP/ParameterInfo_GetCustomAttribute_IsDefined.cpp#1)]
 [!code-csharp[ParameterInfo_GetCustomAttribute_IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR/ParameterInfo_GetCustomAttribute_IsDefined/CS/parameterinfo_getcustomattribute_isdefined.cs#1)]
 [!code-vb[ParameterInfo_GetCustomAttribute_IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParameterInfo_GetCustomAttribute_IsDefined/VB/parameterinfo_getcustomattribute_isdefined.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ea4c4-189"><paramref name="attributeType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-189"><paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ea4c4-190"><paramref name="attributeType" /> no es un objeto <see cref="T:System.Type" /> que proporcione Common Language Runtime.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-190"><paramref name="attributeType" /> is not a <see cref="T:System.Type" /> object supplied by the common language runtime.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsIn">
      <MemberSignature Language="C#" Value="public bool IsIn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIn" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.IsIn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsIn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsIn { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea4c4-191">Obtiene un valor que indica si este es un parámetro de entrada.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-191">Gets a value indicating whether this is an input parameter.</span></span></summary>
        <value>
          <span data-ttu-id="ea4c4-192"><see langword="true" />, si el parámetro es un parámetro de entrada; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-192"><see langword="true" /> if the parameter is an input parameter; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea4c4-193">Este método depende de un indicador de metadatos opcional.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-193">This method depends on an optional metadata flag.</span></span> <span data-ttu-id="ea4c4-194">Esta marca se pueden insertar compiladores, pero los compiladores no están obligados a hacerlo.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-194">This flag can be inserted by compilers, but the compilers are not obligated to do so.</span></span>  
  
 <span data-ttu-id="ea4c4-195">Este método utiliza el `In` marca de la `ParameterAttributes` enumerador.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-195">This method utilizes the `In` flag of the `ParameterAttributes` enumerator.</span></span>  
  
 <span data-ttu-id="ea4c4-196">Para obtener la <xref:System.Reflection.ParameterInfo> de matriz, primero hay que obtener el método o el constructor y, a continuación, llame a <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-196">To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ea4c4-197">En el ejemplo siguiente se muestra cómo probar los parámetros del método para el <xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>, <xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>, y <xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType> atributos.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-197">The following example shows how to test method parameters for the <xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>, <xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>, and <xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType> attributes.</span></span>  
  
 <span data-ttu-id="ea4c4-198">El ejemplo contiene un `DefineMethod` método que realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="ea4c4-198">The example contains a `DefineMethod` method that does the following:</span></span>  
  
-   <span data-ttu-id="ea4c4-199">Crea un ensamblado dinámico que contiene un `MyType` tipo.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-199">Creates a dynamic assembly containing a `MyType` type.</span></span>  
  
-   <span data-ttu-id="ea4c4-200">Agrega un `MyMethod` método `MyType`.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-200">Adds a `MyMethod` method to `MyType`.</span></span> <span data-ttu-id="ea4c4-201">`MyMethod` tiene tres parámetros.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-201">`MyMethod` has three parameters.</span></span> <span data-ttu-id="ea4c4-202">El primer parámetro se define con <xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>, el segundo con <xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>y el tercero con <xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-202">The first parameter is defined with <xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>, the second with <xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>, and the third with <xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="ea4c4-203">Llamadas <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=nameWithType> para completar el tipo.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-203">Calls <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=nameWithType> to complete the type.</span></span>  
  
 <span data-ttu-id="ea4c4-204">Después de ejecutar `DefineMethod`, en el ejemplo se busca en los ensamblados que están cargados actualmente hasta que encuentra el ensamblado dinámico.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-204">After executing `DefineMethod`, the example searches the assemblies that are currently loaded until it finds the dynamic assembly.</span></span> <span data-ttu-id="ea4c4-205">Carga `MyType` desde el ensamblado, obtiene un <xref:System.Reflection.MethodInfo> de objeto para el `MyMethod` método y examina los parámetros.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-205">It loads `MyType` from the assembly, gets a <xref:System.Reflection.MethodInfo> object for the `MyMethod` method, and examines the parameters.</span></span> <span data-ttu-id="ea4c4-206">El ejemplo se utiliza la <xref:System.Reflection.ParameterInfo.IsIn%2A>, <xref:System.Reflection.ParameterInfo.IsOut%2A>, y <xref:System.Reflection.ParameterInfo.IsOptional%2A> propiedades para mostrar información acerca de los parámetros.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-206">The example uses the <xref:System.Reflection.ParameterInfo.IsIn%2A>, <xref:System.Reflection.ParameterInfo.IsOut%2A>, and <xref:System.Reflection.ParameterInfo.IsOptional%2A> properties to display information about the parameters.</span></span>  
  
 [!code-cpp[ParameterInfo_IsIn_IsOut_IsOptional#1](~/samples/snippets/cpp/VS_Snippets_CLR/ParameterInfo_IsIn_IsOut_IsOptional/CPP/ParameterInfo_IsIn_IsOut_IsOptional.cpp#1)]
 [!code-csharp[ParameterInfo_IsIn_IsOut_IsOptional#1](~/samples/snippets/csharp/VS_Snippets_CLR/ParameterInfo_IsIn_IsOut_IsOptional/CS/parameterinfo_isin_isout_isoptional.cs#1)]
 [!code-vb[ParameterInfo_IsIn_IsOut_IsOptional#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParameterInfo_IsIn_IsOut_IsOptional/VB/parameterinfo_isin_isout_isoptional.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLcid">
      <MemberSignature Language="C#" Value="public bool IsLcid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLcid" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.IsLcid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLcid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLcid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea4c4-207">Obtiene un valor que indica si este parámetro es un identificador regional (lcid).</span><span class="sxs-lookup"><span data-stu-id="ea4c4-207">Gets a value indicating whether this parameter is a locale identifier (lcid).</span></span></summary>
        <value>
          <span data-ttu-id="ea4c4-208"><see langword="true" /> si el parámetro es un identificador regional; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-208"><see langword="true" /> if the parameter is a locale identifier; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea4c4-209">Este método depende de un indicador de metadatos opcional.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-209">This method depends on an optional metadata flag.</span></span> <span data-ttu-id="ea4c4-210">Esta marca se pueden insertar compiladores, pero los compiladores no están obligados a hacerlo.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-210">This flag can be inserted by compilers, but the compilers are not obligated to do so.</span></span>  
  
 <span data-ttu-id="ea4c4-211">Este método utiliza el `Lcid` marca de la `ParameterAttributes` enumerador.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-211">This method utilizes the `Lcid` flag of the `ParameterAttributes` enumerator.</span></span>  
  
 <span data-ttu-id="ea4c4-212">Para obtener la <xref:System.Reflection.ParameterInfo> de matriz, primero hay que obtener el método o el constructor y, a continuación, llame a <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-212">To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOptional">
      <MemberSignature Language="C#" Value="public bool IsOptional { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOptional" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.IsOptional" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOptional As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOptional { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea4c4-213">Obtiene un valor que indica si este parámetro es opcional.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-213">Gets a value indicating whether this parameter is optional.</span></span></summary>
        <value>
          <span data-ttu-id="ea4c4-214"><see langword="true" /> si el parámetro es opcional; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-214"><see langword="true" /> if the parameter is optional; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea4c4-215">Este método depende de un indicador de metadatos opcional.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-215">This method depends on an optional metadata flag.</span></span> <span data-ttu-id="ea4c4-216">Esta marca se pueden insertar compiladores, pero los compiladores no están obligados a hacerlo.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-216">This flag can be inserted by compilers, but the compilers are not obligated to do so.</span></span>  
  
 <span data-ttu-id="ea4c4-217">Este método utiliza el `Optional` marca de la `ParameterAttributes` enumerador.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-217">This method utilizes the `Optional` flag of the `ParameterAttributes` enumerator.</span></span>  
  
 <span data-ttu-id="ea4c4-218">Para obtener la <xref:System.Reflection.ParameterInfo> de matriz, primero hay que obtener el método y, a continuación, llame a <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-218">To get the <xref:System.Reflection.ParameterInfo> array, first get the method and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ea4c4-219">En el ejemplo siguiente se muestra cómo probar los parámetros del método para el <xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>, <xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>, y <xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType> atributos.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-219">The following example shows how to test method parameters for the <xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>, <xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>, and <xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType> attributes.</span></span>  
  
 <span data-ttu-id="ea4c4-220">El ejemplo contiene un `DefineMethod` método que realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="ea4c4-220">The example contains a `DefineMethod` method that does the following:</span></span>  
  
-   <span data-ttu-id="ea4c4-221">Crea un ensamblado dinámico que contiene un `MyType` tipo.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-221">Creates a dynamic assembly containing a `MyType` type.</span></span>  
  
-   <span data-ttu-id="ea4c4-222">Agrega un `MyMethod` método `MyType`.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-222">Adds a `MyMethod` method to `MyType`.</span></span> <span data-ttu-id="ea4c4-223">`MyMethod` tiene tres parámetros.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-223">`MyMethod` has three parameters.</span></span> <span data-ttu-id="ea4c4-224">El primer parámetro se define con <xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>, el segundo con <xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>y el tercero con <xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-224">The first parameter is defined with <xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>, the second with <xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>, and the third with <xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="ea4c4-225">Llamadas <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=nameWithType> para completar el tipo.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-225">Calls <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=nameWithType> to complete the type.</span></span>  
  
 <span data-ttu-id="ea4c4-226">Después de ejecutar `DefineMethod`, en el ejemplo se busca en los ensamblados que están cargados actualmente hasta que encuentra el ensamblado dinámico.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-226">After executing `DefineMethod`, the example searches the assemblies that are currently loaded until it finds the dynamic assembly.</span></span> <span data-ttu-id="ea4c4-227">Carga `MyType` desde el ensamblado, obtiene un <xref:System.Reflection.MethodInfo> de objeto para el `MyMethod` método y examina los parámetros.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-227">It loads `MyType` from the assembly, gets a <xref:System.Reflection.MethodInfo> object for the `MyMethod` method, and examines the parameters.</span></span> <span data-ttu-id="ea4c4-228">El ejemplo se utiliza la <xref:System.Reflection.ParameterInfo.IsIn%2A>, <xref:System.Reflection.ParameterInfo.IsOut%2A>, y <xref:System.Reflection.ParameterInfo.IsOptional%2A> propiedades para mostrar información acerca de los parámetros.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-228">The example uses the <xref:System.Reflection.ParameterInfo.IsIn%2A>, <xref:System.Reflection.ParameterInfo.IsOut%2A>, and <xref:System.Reflection.ParameterInfo.IsOptional%2A> properties to display information about the parameters.</span></span>  
  
 [!code-cpp[ParameterInfo_IsIn_IsOut_IsOptional#1](~/samples/snippets/cpp/VS_Snippets_CLR/ParameterInfo_IsIn_IsOut_IsOptional/CPP/ParameterInfo_IsIn_IsOut_IsOptional.cpp#1)]
 [!code-csharp[ParameterInfo_IsIn_IsOut_IsOptional#1](~/samples/snippets/csharp/VS_Snippets_CLR/ParameterInfo_IsIn_IsOut_IsOptional/CS/parameterinfo_isin_isout_isoptional.cs#1)]
 [!code-vb[ParameterInfo_IsIn_IsOut_IsOptional#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParameterInfo_IsIn_IsOut_IsOptional/VB/parameterinfo_isin_isout_isoptional.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOut">
      <MemberSignature Language="C#" Value="public bool IsOut { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOut" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.IsOut" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOut As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOut { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea4c4-229">Obtiene un valor que indica si este es un parámetro de salida.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-229">Gets a value indicating whether this is an output parameter.</span></span></summary>
        <value>
          <span data-ttu-id="ea4c4-230"><see langword="true" /> si el parámetro es un parámetro de salida; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-230"><see langword="true" /> if the parameter is an output parameter; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea4c4-231">Este método depende de un indicador de metadatos opcional.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-231">This method depends on an optional metadata flag.</span></span> <span data-ttu-id="ea4c4-232">Esta marca se pueden insertar compiladores, pero los compiladores no están obligados a hacerlo.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-232">This flag can be inserted by compilers, but the compilers are not obligated to do so.</span></span>  
  
 <span data-ttu-id="ea4c4-233">Este método utiliza el `Out` marca de la `ParameterAttributes` enumerador.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-233">This method utilizes the `Out` flag of the `ParameterAttributes` enumerator.</span></span>  
  
 <span data-ttu-id="ea4c4-234">Para obtener la <xref:System.Reflection.ParameterInfo> de matriz, primero hay que obtener el método o el constructor y, a continuación, llame a <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-234">To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ea4c4-235">En el ejemplo siguiente se muestra cómo probar los parámetros del método para el <xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>, <xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>, y <xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType> atributos.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-235">The following example shows how to test method parameters for the <xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>, <xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>, and <xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType> attributes.</span></span>  
  
 <span data-ttu-id="ea4c4-236">El ejemplo contiene un `DefineMethod` método que realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="ea4c4-236">The example contains a `DefineMethod` method that does the following:</span></span>  
  
-   <span data-ttu-id="ea4c4-237">Crea un ensamblado dinámico que contiene un `MyType` tipo.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-237">Creates a dynamic assembly containing a `MyType` type.</span></span>  
  
-   <span data-ttu-id="ea4c4-238">Agrega un `MyMethod` método `MyType`.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-238">Adds a `MyMethod` method to `MyType`.</span></span> <span data-ttu-id="ea4c4-239">`MyMethod` tiene tres parámetros.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-239">`MyMethod` has three parameters.</span></span> <span data-ttu-id="ea4c4-240">El primer parámetro se define con <xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>, el segundo con <xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>y el tercero con <xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-240">The first parameter is defined with <xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>, the second with <xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>, and the third with <xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="ea4c4-241">Llamadas <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=nameWithType> para completar el tipo.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-241">Calls <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=nameWithType> to complete the type.</span></span>  
  
 <span data-ttu-id="ea4c4-242">Después de ejecutar `DefineMethod`, en el ejemplo se busca en los ensamblados que están cargados actualmente hasta que encuentra el ensamblado dinámico.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-242">After executing `DefineMethod`, the example searches the assemblies that are currently loaded until it finds the dynamic assembly.</span></span> <span data-ttu-id="ea4c4-243">Carga `MyType` desde el ensamblado, obtiene un <xref:System.Reflection.MethodInfo> de objeto para el `MyMethod` método y examina los parámetros.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-243">It loads `MyType` from the assembly, gets a <xref:System.Reflection.MethodInfo> object for the `MyMethod` method, and examines the parameters.</span></span> <span data-ttu-id="ea4c4-244">El ejemplo se utiliza la <xref:System.Reflection.ParameterInfo.IsIn%2A>, <xref:System.Reflection.ParameterInfo.IsOut%2A>, y <xref:System.Reflection.ParameterInfo.IsOptional%2A> propiedades para mostrar información acerca de los parámetros.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-244">The example uses the <xref:System.Reflection.ParameterInfo.IsIn%2A>, <xref:System.Reflection.ParameterInfo.IsOut%2A>, and <xref:System.Reflection.ParameterInfo.IsOptional%2A> properties to display information about the parameters.</span></span>  
  
 [!code-cpp[Classic ParameterInfo.IsOut Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ParameterInfo.IsOut Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ParameterInfo.IsOut Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ParameterInfo.IsOut Example/CS/source.cs#1)]
 [!code-vb[Classic ParameterInfo.IsOut Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ParameterInfo.IsOut Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRetval">
      <MemberSignature Language="C#" Value="public bool IsRetval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRetval" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.IsRetval" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRetval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRetval { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea4c4-245">Obtiene un valor que indica si éste es un parámetro <see langword="Retval" />.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-245">Gets a value indicating whether this is a <see langword="Retval" /> parameter.</span></span></summary>
        <value>
          <span data-ttu-id="ea4c4-246"><see langword="true" /> si el parámetro es del tipo <see langword="Retval" />; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-246"><see langword="true" /> if the parameter is a <see langword="Retval" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea4c4-247">Este método depende de un indicador de metadatos opcional.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-247">This method depends on an optional metadata flag.</span></span> <span data-ttu-id="ea4c4-248">Esta marca se pueden insertar compiladores, pero los compiladores no están obligados a hacerlo.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-248">This flag can be inserted by compilers, but the compilers are not obligated to do so.</span></span>  
  
 <span data-ttu-id="ea4c4-249">Este método utiliza el `Retval` marca de la `ParameterAttributes` enumerador.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-249">This method utilizes the `Retval` flag of the `ParameterAttributes` enumerator.</span></span>  
  
 <span data-ttu-id="ea4c4-250">Para obtener la <xref:System.Reflection.ParameterInfo> de matriz, primero hay que obtener el método o el constructor y, a continuación, llame a <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-250">To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MemberInfo Member { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo Member" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.Member" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Member As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MemberInfo ^ Member { System::Reflection::MemberInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea4c4-251">Obtiene un valor que indica el miembro en el que se implementa el parámetro.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-251">Gets a value indicating the member in which the parameter is implemented.</span></span></summary>
        <value><span data-ttu-id="ea4c4-252">El miembro que implantó el parámetro representado por <see cref="T:System.Reflection.ParameterInfo" />.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-252">The member which implanted the parameter represented by this <see cref="T:System.Reflection.ParameterInfo" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberImpl">
      <MemberSignature Language="C#" Value="protected System.Reflection.MemberInfo MemberImpl;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Reflection.MemberInfo MemberImpl" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.ParameterInfo.MemberImpl" />
      <MemberSignature Language="VB.NET" Value="Protected MemberImpl As MemberInfo " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Reflection::MemberInfo ^ MemberImpl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea4c4-253">Miembro en que está implementado el campo.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-253">The member in which the field is implemented.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea4c4-254">Este campo sólo está diseñado para los usuarios que se va a derivar clases desde `ParameterInfo`.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-254">This field is intended only for users who are deriving classes from `ParameterInfo`.</span></span>  
  
 <span data-ttu-id="ea4c4-255">El acceso al nombre del parámetro suele a través de la <xref:System.Reflection.ParameterInfo.Member%2A>.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-255">Typical access to the parameter name is through the <xref:System.Reflection.ParameterInfo.Member%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataToken">
      <MemberSignature Language="C#" Value="public virtual int MetadataToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MetadataToken" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.MetadataToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MetadataToken As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MetadataToken { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea4c4-256">Obtiene un valor que identifica este parámetro en metadatos.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-256">Gets a value that identifies this parameter in metadata.</span></span></summary>
        <value><span data-ttu-id="ea4c4-257">Un valor que, en combinación con el módulo, identifica de forma única este parámetro en metadatos.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-257">A value which, in combination with the module, uniquely identifies this parameter in metadata.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea4c4-258">Para obtener el módulo, use el <xref:System.Reflection.MemberInfo.Module%2A> propiedad del miembro que define este parámetro.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-258">To get the module, use the <xref:System.Reflection.MemberInfo.Module%2A> property of the member that defines this parameter.</span></span>  
  
 <span data-ttu-id="ea4c4-259">Los tokens obtenidos mediante esta propiedad se pueden pasar a la API de reflexión no administrada.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-259">The tokens obtained using this property can be passed to the unmanaged Reflection API.</span></span> <span data-ttu-id="ea4c4-260">Para obtener más información, vea [API de reflexión no administrada](http://msdn.microsoft.com/library/0c5bb9de-0cf6-438d-ba47-134e6c775fb8).</span><span class="sxs-lookup"><span data-stu-id="ea4c4-260">For more information, please see [Unmanaged Reflection API](http://msdn.microsoft.com/library/0c5bb9de-0cf6-438d-ba47-134e6c775fb8).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea4c4-261">Obtiene el nombre del parámetro.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-261">Gets the name of the parameter.</span></span></summary>
        <value><span data-ttu-id="ea4c4-262">Nombre sencillo de este parámetro.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-262">The simple name of this parameter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea4c4-263">Esta propiedad utiliza la protegido <xref:System.Reflection.ParameterInfo.NameImpl> campo y depende de una marca de metadatos opcionales que no estén disponible en todos los compiladores.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-263">This property utilizes the protected <xref:System.Reflection.ParameterInfo.NameImpl> field, and depends on an optional metadata flag that might not be available in all compilers.</span></span>  
  
 <span data-ttu-id="ea4c4-264">Para obtener la <xref:System.Reflection.ParameterInfo> de matriz, primero hay que obtener el método o el constructor y, a continuación, llame a la <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-264">To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call the <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="ea4c4-265">Si este <xref:System.Reflection.ParameterInfo> representa un valor devuelto (es decir, si se obtuvo mediante el uso de la <xref:System.Reflection.MethodInfo.ReturnParameter%2A?displayProperty=nameWithType> propiedad), esta propiedad será `null`.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-265">If this <xref:System.Reflection.ParameterInfo> represents a return value (that is, if it was obtained by using the <xref:System.Reflection.MethodInfo.ReturnParameter%2A?displayProperty=nameWithType> property), this property will be `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ea4c4-266">En el ejemplo siguiente se muestra cómo obtener <xref:System.Reflection.ParameterInfo> objetos para los parámetros de un método y, a continuación, utilice el <xref:System.Reflection.ParameterInfo.Name%2A> propiedad para obtener los nombres de parámetro.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-266">The following example shows how to get <xref:System.Reflection.ParameterInfo> objects for the parameters of a method, and then use the <xref:System.Reflection.ParameterInfo.Name%2A> property to obtain the parameter names.</span></span>  
  
 [!code-cpp[Classic ParameterInfo.Name Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ParameterInfo.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ParameterInfo.Name Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ParameterInfo.Name Example/CS/source.cs#1)]
 [!code-vb[Classic ParameterInfo.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ParameterInfo.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameImpl">
      <MemberSignature Language="C#" Value="protected string NameImpl;" />
      <MemberSignature Language="ILAsm" Value=".field family string NameImpl" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.ParameterInfo.NameImpl" />
      <MemberSignature Language="VB.NET" Value="Protected NameImpl As String " />
      <MemberSignature Language="C++ CLI" Value="protected: System::String ^ NameImpl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea4c4-267">Nombre del parámetro.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-267">The name of the parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea4c4-268">Este campo sólo está diseñado para los usuarios que se va a derivar clases desde `ParameterInfo`.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-268">This field is intended only for users who are deriving classes from `ParameterInfo`.</span></span>  
  
 <span data-ttu-id="ea4c4-269">El acceso al nombre del parámetro suele a través de la <xref:System.Reflection.ParameterInfo.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-269">Typical access to the parameter name is through the <xref:System.Reflection.ParameterInfo.Name%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterType">
      <MemberSignature Language="C#" Value="public virtual Type ParameterType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ParameterType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.ParameterType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ParameterType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ParameterType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea4c4-270">Obtiene el tipo (<see langword="Type" />) de este parámetro.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-270">Gets the <see langword="Type" /> of this parameter.</span></span></summary>
        <value><span data-ttu-id="ea4c4-271">Objeto <see langword="Type" /> que representa el tipo (<see langword="Type" />) de este parámetro.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-271">The <see langword="Type" /> object that represents the <see langword="Type" /> of this parameter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea4c4-272">Este método depende de un metadatos opcionales y podría no estar disponible en todos los compiladores.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-272">This method depends on an optional metadata and might not be available in all compilers.</span></span>  
  
 <span data-ttu-id="ea4c4-273">Para obtener la <xref:System.Reflection.ParameterInfo> de matriz, primero hay que obtener el método o el constructor y, a continuación, llame a <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-273">To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ea4c4-274">En el ejemplo siguiente se muestra cómo obtener <xref:System.Reflection.ParameterInfo> objetos para los parámetros de un método y, a continuación, utilice el <xref:System.Reflection.ParameterInfo.ParameterType%2A> propiedad para mostrar el tipo de cada parámetro.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-274">The following example shows how to get <xref:System.Reflection.ParameterInfo> objects for the parameters of a method, and then use the <xref:System.Reflection.ParameterInfo.ParameterType%2A> property to display the type of each parameter.</span></span>  
  
 [!code-cpp[Classic ParameterInfo.ParameterType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ParameterInfo.ParameterType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ParameterInfo.ParameterType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ParameterInfo.ParameterType Example/CS/source.cs#1)]
 [!code-vb[Classic ParameterInfo.ParameterType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ParameterInfo.ParameterType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public virtual int Position { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Position" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Position As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Position { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea4c4-275">Obtiene la posición de base cero del parámetro en la lista de parámetros formales.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-275">Gets the zero-based position of the parameter in the formal parameter list.</span></span></summary>
        <value><span data-ttu-id="ea4c4-276">Entero que representa la posición que ocupa este parámetro en la lista de parámetros.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-276">An integer representing the position this parameter occupies in the parameter list.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea4c4-277">Solo los parámetros en la firma del método (es decir, en la lista de parámetros formales) se consideran al calcular la posición.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-277">Only parameters in the method signature (that is, in the formal parameter list) are considered when calculating the position.</span></span> <span data-ttu-id="ea4c4-278">Por ejemplo, métodos, el parámetro oculto que representa `this` (`Me` en Visual Basic) no se cuenta.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-278">For instance methods, the hidden parameter that represents `this` (`Me` in Visual Basic) is not counted.</span></span>  
  
 <span data-ttu-id="ea4c4-279">Este método utiliza el <xref:System.Reflection.ParameterInfo.PositionImpl> método.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-279">This method utilizes the <xref:System.Reflection.ParameterInfo.PositionImpl> method.</span></span>  
  
 <span data-ttu-id="ea4c4-280">Para obtener la <xref:System.Reflection.ParameterInfo> de matriz, primero hay que obtener el método o el constructor y, a continuación, llame a <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-280">To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.ParameterInfo.Name" />
      </Docs>
    </Member>
    <Member MemberName="PositionImpl">
      <MemberSignature Language="C#" Value="protected int PositionImpl;" />
      <MemberSignature Language="ILAsm" Value=".field family int32 PositionImpl" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.ParameterInfo.PositionImpl" />
      <MemberSignature Language="VB.NET" Value="Protected PositionImpl As Integer " />
      <MemberSignature Language="C++ CLI" Value="protected: int PositionImpl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea4c4-281">Posición de base cero del parámetro en la lista de parámetros.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-281">The zero-based position of the parameter in the parameter list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea4c4-282">Este campo sólo está diseñado para los usuarios que se va a derivar clases desde `ParameterInfo`.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-282">This field is intended only for users who are deriving classes from `ParameterInfo`.</span></span>  
  
 <span data-ttu-id="ea4c4-283">El acceso al nombre del parámetro suele a través de <xref:System.Reflection.ParameterInfo.Position%2A>.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-283">Typical access to the name of the parameter is through <xref:System.Reflection.ParameterInfo.Position%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RawDefaultValue">
      <MemberSignature Language="C#" Value="public virtual object RawDefaultValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RawDefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.RawDefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RawDefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ RawDefaultValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea4c4-284">Obtiene un valor que indica el valor predeterminado del parámetro si este tiene un valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-284">Gets a value indicating the default value if the parameter has a default value.</span></span></summary>
        <value><span data-ttu-id="ea4c4-285">Valor predeterminado del parámetro o <see cref="F:System.DBNull.Value" /> si no tiene ningún valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-285">The default value of the parameter, or <see cref="F:System.DBNull.Value" /> if the parameter has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea4c4-286">Esta propiedad se puede utilizar en el contexto de ejecución y el contexto de solo reflexión.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-286">This property can be used in both the execution context and the reflection-only context.</span></span>  
  
 <span data-ttu-id="ea4c4-287">El valor predeterminado se utiliza cuando no se especifica un valor real en la llamada al método.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-287">The default value is used when an actual value is not specified in the method call.</span></span> <span data-ttu-id="ea4c4-288">Un parámetro puede tener un valor predeterminado que es `null`.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-288">A parameter can have a default value that is `null`.</span></span> <span data-ttu-id="ea4c4-289">Esto es diferente de los casos donde no se define un valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-289">This is distinct from the case where a default value is not defined.</span></span>  
  
 <span data-ttu-id="ea4c4-290">Para obtener la <xref:System.Reflection.ParameterInfo> de matriz, primero hay que obtener el método o el constructor y, a continuación, llame a la <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-290">To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call the <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.ICustomAttributeProvider.GetCustomAttributes">
      <MemberSignature Language="C#" Value="object[] ICustomAttributeProvider.GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object[] System.Reflection.ICustomAttributeProvider.GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function GetCustomAttributes (inherit As Boolean) As Object() Implements ICustomAttributeProvider.GetCustomAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Object ^&gt; ^ System.Reflection.ICustomAttributeProvider.GetCustomAttributes(bool inherit) = System::Reflection::ICustomAttributeProvider::GetCustomAttributes;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.ICustomAttributeProvider.GetCustomAttributes">
      <MemberSignature Language="C#" Value="object[] ICustomAttributeProvider.GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object[] System.Reflection.ICustomAttributeProvider.GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object() Implements ICustomAttributeProvider.GetCustomAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Object ^&gt; ^ System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Type ^ attributeType, bool inherit) = System::Reflection::ICustomAttributeProvider::GetCustomAttributes;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">To be added.</param>
        <param name="inherit">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.ICustomAttributeProvider.IsDefined">
      <MemberSignature Language="C#" Value="bool ICustomAttributeProvider.IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Reflection.ICustomAttributeProvider.IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean Implements ICustomAttributeProvider.IsDefined" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Reflection.ICustomAttributeProvider.IsDefined(Type ^ attributeType, bool inherit) = System::Reflection::ICustomAttributeProvider::IsDefined;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.IsDefined(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">To be added.</param>
        <param name="inherit">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ParameterInfo.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _ParameterInfo.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ParameterInfo.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _ParameterInfo.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ParameterInfo.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_ParameterInfo::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ParameterInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="ea4c4-291">Reservado para un uso futuro.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-291">Reserved for future use.</span></span> <span data-ttu-id="ea4c4-292">Debe ser IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-292">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="ea4c4-293">Matriz que se pasa con los nombres que se van a asignar.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-293">Passed-in array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="ea4c4-294">Número de nombres que se van a asignar.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-294">Count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="ea4c4-295">Contexto de configuración regional en el que se van a interpretar los nombres.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-295">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="ea4c4-296">Matriz asignada por quien realiza la llamada que recibe los id. que corresponden a los nombres.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-296">Caller-allocated array which receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="ea4c4-297">Asigna un conjunto de nombres a un conjunto correspondiente de identificadores de envío.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-297">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea4c4-298">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-298">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="ea4c4-299">Para obtener más información sobre `IDispatch::GetIDsOfNames`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-299">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="ea4c4-300">No se admite el acceso enlazado en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-300">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ParameterInfo.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _ParameterInfo.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ParameterInfo.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _ParameterInfo.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ParameterInfo.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_ParameterInfo::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ParameterInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="ea4c4-301">Información de tipos que se va a devolver.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-301">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="ea4c4-302">Identificador de la configuración regional de la información de tipo.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-302">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="ea4c4-303">Recibe un puntero al objeto de información de tipo solicitado.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-303">Receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="ea4c4-304">Recupera la información de tipo de un objeto, que se puede utilizar después para obtener la información de tipo de una interfaz.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-304">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea4c4-305">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-305">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="ea4c4-306">Para obtener más información sobre `IDispatch::GetTypeInfo`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-306">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="ea4c4-307">No se admite el acceso enlazado en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-307">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ParameterInfo.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _ParameterInfo.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ParameterInfo.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _ParameterInfo.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ParameterInfo.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_ParameterInfo::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ParameterInfo.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="ea4c4-308">Señala a una ubicación que recibe el número de interfaces de información de tipo proporcionado por el objeto.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-308">Points to a location that receives the number of type information interfaces provided by the object.</span></span></param>
        <summary><span data-ttu-id="ea4c4-309">Recupera el número de interfaces de información de tipo que proporciona un objeto (0 ó 1).</span><span class="sxs-lookup"><span data-stu-id="ea4c4-309">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea4c4-310">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-310">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="ea4c4-311">Para obtener más información sobre `IDispatch::GetTypeInfoCount`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-311">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="ea4c4-312">No se admite el acceso enlazado en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-312">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ParameterInfo.Invoke">
      <MemberSignature Language="C#" Value="void _ParameterInfo.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ParameterInfo.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _ParameterInfo.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ParameterInfo.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_ParameterInfo::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ParameterInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="ea4c4-313">Identifica el miembro.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-313">Identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="ea4c4-314">Reservado para un uso futuro.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-314">Reserved for future use.</span></span> <span data-ttu-id="ea4c4-315">Debe ser IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-315">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="ea4c4-316">Contexto de la configuración regional en que se interpretan los argumentos.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-316">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="ea4c4-317">Marcas que describen el contexto de la llamada.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-317">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="ea4c4-318">Puntero a una estructura que contiene una matriz de argumentos, una matriz de valores DISPID de argumento para argumentos con nombre y recuentos del número de elementos de cada matriz.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-318">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="ea4c4-319">Puntero a la ubicación donde se va a almacenar el resultado.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-319">Pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="ea4c4-320">Puntero a una estructura que contiene información de excepciones.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-320">Pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="ea4c4-321">Índice del primer argumento que tiene un error.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-321">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="ea4c4-322">Proporciona acceso a las propiedades y los métodos expuestos por un objeto.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-322">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ea4c4-323">Este método es para el acceso a las clases administradas desde código no administrado y no se debe llamar desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-323">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="ea4c4-324">Para obtener más información sobre `IDispatch::Invoke`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-324">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="ea4c4-325">No se admite el acceso enlazado en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-325">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ea4c4-326">Obtiene el tipo y el nombre del parámetro representados como una cadena.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-326">Gets the parameter type and name represented as a string.</span></span></summary>
        <returns><span data-ttu-id="ea4c4-327">Una cadena que contiene el tipo y el nombre del parámetro.</span><span class="sxs-lookup"><span data-stu-id="ea4c4-327">A string containing the type and the name of the parameter.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>