<Type Name="ResourceWriter" FullName="System.Resources.ResourceWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ab5f7699d04aa79f2db008b8999c6deb3a3b45e8" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48729376" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ResourceWriter : System.Resources.IResourceWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ResourceWriter extends System.Object implements class System.IDisposable, class System.Resources.IResourceWriter" />
  <TypeSignature Language="DocId" Value="T:System.Resources.ResourceWriter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ResourceWriter&#xA;Implements IResourceWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceWriter sealed : System::Resources::IResourceWriter" />
  <TypeSignature Language="F#" Value="type ResourceWriter = class&#xA;    interface IResourceWriter&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Resources.Writer</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Resources.IResourceWriter</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Escribe recursos en el formato predeterminado del sistema para un archivo de resultados o un flujo de salida. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Resources.ResourceWriter> Proporciona una implementación predeterminada de la <xref:System.Resources.IResourceWriter> interfaz. Permite crear mediante programación un archivo de recursos binario (.resources).  
  
 Los recursos se especifican como pares nombre / valor utilizando el <xref:System.Resources.ResourceWriter.AddResource%2A> método. Los nombres de recursos distinguen mayúsculas de minúsculas cuando se utiliza para las búsquedas, pero más fácilmente compatibilidad con herramientas de creación y ayudar a eliminar los errores, <xref:System.Resources.ResourceWriter> no permitirá que un archivo .resources tengan nombres que solo varían por caso. La <xref:System.Resources.ResourceWriter> clase le permite crear la cadena, objeto y los recursos binarios. Los recursos binarios pueden escribirse en el archivo de recursos como una matriz de bytes o una secuencia.  
  
> [!IMPORTANT]
>  Este tipo implementa la <xref:System.IDisposable> interfaz. Cuando haya terminado de utilizar el tipo, debe deshacerse de él directa o indirectamente. Para deshacerse del tipo directamente, llame a su <xref:System.IDisposable.Dispose%2A> método en un `try` / `catch` bloque. Para deshacerse de él, indirectamente, usar una construcción de lenguaje, como `using` (en C#) o `Using` (en Visual Basic). Para obtener más información, vea la sección "Uso de un objeto que implementa IDisposable" en el <xref:System.IDisposable> tema de la interfaz.  
  
 Para crear un archivo de recursos, cree un <xref:System.Resources.ResourceWriter> con un nombre de archivo único, llame a <xref:System.Resources.ResourceWriter.AddResource%2A> al menos una vez, llamar a <xref:System.Resources.ResourceWriter.Generate%2A> escribir el archivo de recursos en el disco y, a continuación, llamar a <xref:System.Resources.ResourceWriter.Close%2A> para cerrar el archivo. Una llamada a <xref:System.Resources.ResourceWriter.Close%2A> llamará implícitamente <xref:System.Resources.ResourceWriter.Generate%2A> si no se llama explícitamente <xref:System.Resources.ResourceWriter.Generate%2A>.  
  
 Los recursos no se escribirán necesariamente en el mismo orden que se agregaron.  
  
 Para recuperar recursos desde un archivo .resources binario creado por el <xref:System.Resources.ResourceWriter> (clase), puede usar el <xref:System.Resources.ResourceManager> (clase), que le permite recuperar los recursos con nombre, o el <xref:System.Resources.ResourceReader> (clase), lo que le permite enumerar todos los recursos en el archivo.  
  
   
  
## Examples  
 El ejemplo siguiente escribe varias cadenas en el archivo myResources.resources.  
  
 [!code-cpp[Classic ResourceWriter Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ResourceWriter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ResourceWriter Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ResourceWriter Example/CS/source.cs#1)]
 [!code-vb[Classic ResourceWriter Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ResourceWriter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Resources.IResourceWriter" />
    <altmember cref="T:System.IDisposable" />
    <related type="Article" href="http://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890">Recursos de aplicaciones de escritorio</related>
    <related type="Article" href="http://msdn.microsoft.com/library/6c5ad891-66a0-4e7a-adcf-f41863ba6d8d">Crear archivos de recursos para aplicaciones de escritorio</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Resources.ResourceWriter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceWriter (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceWriter.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceWriter(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceWriter : System.IO.Stream -&gt; System.Resources.ResourceWriter" Usage="new System.Resources.ResourceWriter stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Secuencia de salida.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Resources.ResourceWriter" /> que escribe los recursos en el flujo proporcionado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se define una nueva instancia de la <xref:System.Resources.ResourceWriter> clase que escribe en una secuencia especificada. El código agrega los recursos en el sistema de escritura y escribe los recursos en la secuencia.  
  
 [!code-cpp[System.Resources.ResourceWriter Cstr1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceWriter Cstr1 Example/CPP/resourcewritercstr1.cpp#1)]
 [!code-csharp[System.Resources.ResourceWriter Cstr1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceWriter Cstr1 Example/CS/resourcewritercstr1.cs#1)]
 [!code-vb[System.Resources.ResourceWriter Cstr1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceWriter Cstr1 Example/VB/resourcewritercstr1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El parámetro <paramref name="stream" /> no se puede escribir.</exception>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="stream" /> es <see langword="null" />.</exception>
        <related type="Article" href="~/docs/standard/globalization-localization/index.md">Globalización y localización de aplicaciones .NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceWriter (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceWriter.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceWriter(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceWriter : string -&gt; System.Resources.ResourceWriter" Usage="new System.Resources.ResourceWriter fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Nombre del archivo de salida.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Resources.ResourceWriter" /> que escribe los recursos en el archivo especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se define una nueva instancia de la <xref:System.Resources.ResourceWriter> clase que se escribirá en un archivo especificado. El código agrega los recursos en el sistema de escritura y escribe los recursos en el archivo.  
  
 [!code-cpp[Classic ResourceWriter Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ResourceWriter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ResourceWriter Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ResourceWriter Example/CS/source.cs#1)]
 [!code-vb[Classic ResourceWriter Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ResourceWriter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="fileName" /> es <see langword="null" />.</exception>
        <related type="Article" href="~/docs/standard/globalization-localization/index.md">Globalización y localización de aplicaciones .NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddResource">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Agrega un recurso a la lista de recursos que se va a escribir.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (string name, byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddResource(string name, unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResource (name As String, value As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddResource(System::String ^ name, cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddResource : string * byte[] -&gt; unit&#xA;override this.AddResource : string * byte[] -&gt; unit" Usage="resourceWriter.AddResource (name, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceWriter.AddResource(System.String,System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del recurso.</param>
        <param name="value">Valor del recurso como matriz de enteros de 8 bits sin signo.</param>
        <summary>Agrega un recurso con nombre, especificado como una matriz de bytes, a la lista de recursos que se va a escribir.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El recurso no se escribirá hasta <xref:System.Resources.ResourceWriter.Generate%2A> se llama.  
  
 Puede recuperar los recursos escritos por el <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29> método mediante una llamada a la <xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=nameWithType> método.  
  
   
  
## Examples  
 En el ejemplo siguiente se usa el <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29> método para agregar una imagen de gráficos que se ha leído como una matriz de bytes a un <xref:System.Resources.ResourceWriter> objeto.  
  
 [!code-csharp[System.Resources.ResourceWriter.AddResource#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcewriter.addresource/cs/addresource_byt1.cs#4)]
 [!code-vb[System.Resources.ResourceWriter.AddResource#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcewriter.addresource/vb/addresource_byt1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> (o un nombre que varía sólo en mayúsculas y minúsculas) ya se ha agregado a este <see cref="T:System.Resources.ResourceWriter" />.</exception>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="name" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Se ha cerrado este <see cref="T:System.Resources.ResourceWriter" /> y su tabla no está disponible.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/6c5ad891-66a0-4e7a-adcf-f41863ba6d8d">Crear archivos de recursos para aplicaciones de escritorio</related>
      </Docs>
    </Member>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (string name, System.IO.Stream value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddResource(string name, class System.IO.Stream value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResource (name As String, value As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddResource(System::String ^ name, System::IO::Stream ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddResource : string * System.IO.Stream -&gt; unit" Usage="resourceWriter.AddResource (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del recurso que se va a agregar.</param>
        <param name="value">Valor del recurso que se va a agregar. El recurso debe admitir la propiedad <see cref="P:System.IO.Stream.Length" />.</param>
        <summary>Agrega un recurso con nombre, especificado como una secuencia, a la lista de recursos que se va a escribir.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede especificar cualquier secuencia que admita la <xref:System.IO.Stream.Length%2A?displayProperty=nameWithType> propiedad `value`.  
  
 Puede recuperar los recursos escritos por el <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29> método mediante una llamada a la <xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=nameWithType> método.  
  
   
  
## Examples  
 En el ejemplo siguiente se usa el <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29> método para agregar una imagen de gráficos que se ha guardado en un <xref:System.IO.MemoryStream> objeto a un <xref:System.Resources.ResourceWriter> objeto.  
  
 [!code-csharp[System.Resources.ResourceWriter.AddResource#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcewriter.addresource/cs/addresource_str1.cs#2)]
 [!code-vb[System.Resources.ResourceWriter.AddResource#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcewriter.addresource/vb/addresource_str1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> (o un nombre que varía sólo en mayúsculas y minúsculas) ya se ha agregado a este <see cref="T:System.Resources.ResourceWriter" />.  
  
O bien 
La secuencia no admite la propiedad <see cref="P:System.IO.Stream.Length" />.</exception>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="name" /> o <paramref name="value" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">La clase <see cref="T:System.Resources.ResourceWriter" /> se ha cerrado.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/6c5ad891-66a0-4e7a-adcf-f41863ba6d8d">Crear archivos de recursos para aplicaciones de escritorio</related>
      </Docs>
    </Member>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddResource(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResource (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddResource(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddResource : string * obj -&gt; unit&#xA;override this.AddResource : string * obj -&gt; unit" Usage="resourceWriter.AddResource (name, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceWriter.AddResource(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del recurso.</param>
        <param name="value">Valor del recurso.</param>
        <summary>Agrega un recurso con nombre, especificado como una matriz de bytes, a la lista de recursos que se va a escribir.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `value` debe ser serializable.  
  
 No se escribe el recurso hasta que el <xref:System.Resources.ResourceWriter.Generate%2A> se llama al método.  
  
 Puede recuperar los recursos escritos por el <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29> método mediante una llamada a la <xref:System.Resources.ResourceManager.GetObject%2A?displayProperty=nameWithType> método.  
  
   
  
## Examples  
 En el ejemplo siguiente se usa el <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29> para agregar datos de objeto a un archivo de recursos binario.  
  
 [!code-csharp[System.Resources.ResourceWriter.AddResource#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcewriter.addresource/cs/addresource_obj1.cs#1)]  
  
 `DonorColumns` es una clase personalizada cuyos campos contienen los nombres de columnas que se mostrará en la interfaz de usuario. Tenga en cuenta que la clase está marcada con el <xref:System.SerializableAttribute> atributo. Normalmente, la clase se definiría en un ensamblado independiente y se les ofrecerá al compilador una referencia a él en tiempo de compilación.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> (o un nombre que varía sólo en mayúsculas y minúsculas) ya se ha agregado a este <see cref="T:System.Resources.ResourceWriter" />.</exception>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="name" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Se ha cerrado este <see cref="T:System.Resources.ResourceWriter" /> y su tabla no está disponible.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/6c5ad891-66a0-4e7a-adcf-f41863ba6d8d">Crear archivos de recursos para aplicaciones de escritorio</related>
      </Docs>
    </Member>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddResource(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResource (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddResource(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddResource : string * string -&gt; unit&#xA;override this.AddResource : string * string -&gt; unit" Usage="resourceWriter.AddResource (name, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceWriter.AddResource(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del recurso.</param>
        <param name="value">Valor del recurso.</param>
        <summary>Agrega un recurso de cadena a la lista de recursos que se va a escribir.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El recurso no se escribirá hasta <xref:System.Resources.ResourceWriter.Generate%2A> se llama.  
  
 Puede recuperar los recursos escritos por el <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.String%29> método mediante una llamada a la <xref:System.Resources.ResourceManager.GetString%2A?displayProperty=nameWithType> método.  
  
   
  
## Examples  
 En el ejemplo siguiente se usa el <xref:System.Resources.ResourceWriter.AddResource%2A> método para agregar recursos de cadena a un <xref:System.Resources.ResourceWriter> objeto.  
  
 [!code-cpp[System.Resources.ResourceWriter Cstr1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceWriter Cstr1 Example/CPP/resourcewritercstr1.cpp#1)]
 [!code-csharp[System.Resources.ResourceWriter Cstr1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceWriter Cstr1 Example/CS/resourcewritercstr1.cs#1)]
 [!code-vb[System.Resources.ResourceWriter Cstr1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceWriter Cstr1 Example/VB/resourcewritercstr1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> (o un nombre que varía sólo en mayúsculas y minúsculas) ya se ha agregado a este ResourceWriter.</exception>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="name" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Se ha cerrado este <see cref="T:System.Resources.ResourceWriter" /> y su tabla no está disponible.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/6c5ad891-66a0-4e7a-adcf-f41863ba6d8d">Crear archivos de recursos para aplicaciones de escritorio</related>
      </Docs>
    </Member>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (string name, System.IO.Stream value, bool closeAfterWrite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddResource(string name, class System.IO.Stream value, bool closeAfterWrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResource (name As String, value As Stream, closeAfterWrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddResource(System::String ^ name, System::IO::Stream ^ value, bool closeAfterWrite);" />
      <MemberSignature Language="F#" Value="member this.AddResource : string * System.IO.Stream * bool -&gt; unit" Usage="resourceWriter.AddResource (name, value, closeAfterWrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.IO.Stream" />
        <Parameter Name="closeAfterWrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del recurso que se va a agregar.</param>
        <param name="value">Valor del recurso que se va a agregar. El recurso debe admitir la propiedad <see cref="P:System.IO.Stream.Length" />.</param>
        <param name="closeAfterWrite">
          <see langword="true" /> para cerrar la secuencia después de llamar al método <see cref="M:System.Resources.ResourceWriter.Generate" />; <see langword="false" /> en otro caso.</param>
        <summary>Agrega un recurso con nombre especificado como una secuencia a la lista de recursos que se va a escribir y especifica si se debe cerrar la secuencia después de llamar al método <see cref="M:System.Resources.ResourceWriter.Generate" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede especificar cualquier secuencia que admita la <xref:System.IO.Stream.Length%2A?displayProperty=nameWithType> propiedad `value`.  
  
 Puede recuperar los recursos escritos por el <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29> método mediante una llamada a la <xref:System.Resources.ResourceManager.GetStream%2A?displayProperty=nameWithType> método.  
  
   
  
## Examples  
 En el ejemplo siguiente se usa el <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29> método para agregar una imagen de gráficos que se ha guardado en un <xref:System.IO.MemoryStream> objeto a un <xref:System.Resources.ResourceWriter> objeto.  
  
 [!code-csharp[System.Resources.ResourceWriter.AddResource#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcewriter.addresource/cs/addresource_str2.cs#3)]
 [!code-vb[System.Resources.ResourceWriter.AddResource#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcewriter.addresource/vb/addresource_str2.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> (o un nombre que varía sólo en mayúsculas y minúsculas) ya se ha agregado a este <see cref="T:System.Resources.ResourceWriter" />.  
  
O bien 
La secuencia no admite la propiedad <see cref="P:System.IO.Stream.Length" />.</exception>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="name" /> o <paramref name="value" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">La clase <see cref="T:System.Resources.ResourceWriter" /> se ha cerrado.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/6c5ad891-66a0-4e7a-adcf-f41863ba6d8d">Crear archivos de recursos para aplicaciones de escritorio</related>
      </Docs>
    </Member>
    <Member MemberName="AddResourceData">
      <MemberSignature Language="C#" Value="public void AddResourceData (string name, string typeName, byte[] serializedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddResourceData(string name, string typeName, unsigned int8[] serializedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResourceData (name As String, typeName As String, serializedData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddResourceData(System::String ^ name, System::String ^ typeName, cli::array &lt;System::Byte&gt; ^ serializedData);" />
      <MemberSignature Language="F#" Value="member this.AddResourceData : string * string * byte[] -&gt; unit" Usage="resourceWriter.AddResourceData (name, typeName, serializedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="serializedData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="name">Nombre que identifica el recurso que contiene los datos agregados.</param>
        <param name="typeName">Nombre de tipo de los datos agregados.</param>
        <param name="serializedData">Matriz de bytes que contiene la representación binaria de los datos agregados.</param>
        <summary>Agrega una unidad de datos como recurso a la lista de recursos que se va a escribir.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Resources.ResourceWriter.AddResourceData%2A> método para agregar un recurso en formato binario (es decir, como una matriz de bytes) a la lista de recursos que se va a escribir. Debe especificar el nombre del recurso, el nombre de tipo de los datos contenidos en el recurso y la representación binaria de los propios datos. Después de agregar cada recurso que necesite, use el <xref:System.Resources.ResourceWriter.Generate%2A> método para escribir la lista de recursos en el archivo de recursos o la secuencia que se especificó en el <xref:System.Resources.ResourceWriter.%23ctor%2A> constructor.  
  
 `typeName` es una cadena que representa el tipo de datos del recurso. Puede ser cualquiera de los siguientes valores:  
  
-   La representación de cadena de un `ResourceTypeCode` miembro de enumeración que indica el tipo de datos del recurso. `ResourceTypeCode` es una enumeración privada que se usa para indicar que se utiliza un formato binario especial para almacenar uno de los 19 tipos de datos comunes. Se incluyen los tipos de datos primitivos de .NET Framework (<xref:System.Boolean>, <xref:System.Byte>, <xref:System.Char>, <xref:System.Decimal>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Single>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>), así como <xref:System.String>, <xref:System.DateTime>, y <xref:System.TimeSpan>. Además, el `ResourceTypeCode` enumeración incluye los valores mostrados en la tabla siguiente.  
  
    |Valor de `ResourceTypeCode`|Descripción|  
    |------------------------------|-----------------|  
    |`ResourceTypeCode.ByteArray`|Los datos están una matriz de bytes.|  
    |`ResourceTypeCode.Null`|Los datos están una referencia nula.|  
    |`ResourceTypeCode.Stream`|Los datos se almacenan en una secuencia.|  
  
-   Una cadena que contiene el nombre completo del tipo cuyos datos binarios se asignan a la `serializedData` argumento (por ejemplo, `System.String`). Además, para los tipos que no forman parte de la biblioteca de clases de .NET Framework, la cadena incluye el nombre, versión, referencia cultural y clave pública del ensamblado que contiene el tipo. Por ejemplo, la siguiente cadena indica que los datos serializados representan una instancia de la `Person` escriba en el `Extensions` espacio de nombres, que se encuentra en la versión 1.0 de un ensamblado denominado utilidad que tiene ninguna clave pública y ninguna referencia cultural designada.  
  
     `Extensions.Person, Utility, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null`  
  
 Un método paralelo para leer los datos de recursos escritos con la <xref:System.Resources.ResourceWriter.AddResourceData%2A> método es <xref:System.Resources.ResourceReader.GetResourceData%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 En el ejemplo siguiente se usa el <xref:System.Resources.ResourceWriter.AddResourceData%2A> método escribir integer dos valores en un archivo .resources y, a continuación, utiliza un <xref:System.Resources.ResourceReader> objeto recuperarlos.  
  
 [!code-csharp[System.Resources.ResourceWriter.AddResourceData#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcewriter.addresourcedata/cs/addresourcedata.cs#1)]
 [!code-vb[System.Resources.ResourceWriter.AddResourceData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcewriter.addresourcedata/vb/addresourcedata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" />, <paramref name="typeName" /> o <paramref name="serializedData" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> (o un nombre que se diferencia sólo en las mayúsculas y minúsculas) ya se ha agregado a este objeto <see cref="T:System.Resources.ResourceWriter" />.</exception>
        <exception cref="T:System.InvalidOperationException">No se ha inicializado el objeto <see cref="T:System.Resources.ResourceWriter" /> actual. La causa probable es que el objeto <see cref="T:System.Resources.ResourceWriter" /> esté cerrado.</exception>
        <altmember cref="Overload:System.Resources.ResourceWriter.#ctor" />
        <altmember cref="M:System.Resources.ResourceWriter.Close" />
        <altmember cref="M:System.Resources.ResourceWriter.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="resourceWriter.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceWriter.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Guarda los recursos en el flujo de salida y, a continuación, lo cierra.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Resources.ResourceWriter.Generate%2A> se llama implícitamente en <xref:System.Resources.ResourceWriter.Close%2A>, si es necesario.  
  
   
  
## Examples  
 En el ejemplo siguiente se usa el <xref:System.Resources.ResourceWriter.Close%2A> método para escribir los recursos de todos los objetos en un <xref:System.Resources.ResourceWriter> clase en el flujo de salida. El código, a continuación, se cierra el sistema de escritura.  
  
 [!code-cpp[System.Resources.ResourceWriter Cstr1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceWriter Cstr1 Example/CPP/resourcewritercstr1.cpp#1)]
 [!code-csharp[System.Resources.ResourceWriter Cstr1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceWriter Cstr1 Example/CS/resourcewritercstr1.cs#1)]
 [!code-vb[System.Resources.ResourceWriter Cstr1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceWriter Cstr1 Example/VB/resourcewritercstr1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Se produjo un error de E/S.</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">Se ha producido un error durante la serialización del objeto.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceWriter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="resourceWriter.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Permite a los usuarios cerrar el flujo o el archivo de recursos y liberar los recursos de forma explícita.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La implementación de este método es igual a <xref:System.Resources.ResourceWriter.Close%2A>.  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Resources.ResourceWriter.Dispose%2A> método para escribir los recursos de todos los objetos en un <xref:System.Resources.ResourceWriter> clase en el flujo de salida. El código, a continuación, apaga el sistema de escritura y que los recursos del sistema de escritura esté disponible para otros procesos.  
  
 [!code-cpp[System.Resources.ResourceWriter.Dispose Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceWriter.Dispose Example/CPP/resourcewriterdispose.cpp#1)]
 [!code-csharp[System.Resources.ResourceWriter.Dispose Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceWriter.Dispose Example/CS/resourcewriterdispose.cs#1)]
 [!code-vb[System.Resources.ResourceWriter.Dispose Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceWriter.Dispose Example/VB/resourcewriterdispose.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Se produjo un error de E/S.</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">Se ha producido un error durante la serialización del objeto.</exception>
        <altmember cref="T:System.IDisposable" />
      </Docs>
    </Member>
    <Member MemberName="Generate">
      <MemberSignature Language="C#" Value="public void Generate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Generate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceWriter.Generate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Generate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Generate();" />
      <MemberSignature Language="F#" Value="abstract member Generate : unit -&gt; unit&#xA;override this.Generate : unit -&gt; unit" Usage="resourceWriter.Generate " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceWriter.Generate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Guarda todos los recursos en el flujo de salida con el formato predeterminado del sistema.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Resources.ResourceWriter.Generate%2A> se llama al método implícitamente por el <xref:System.Resources.ResourceWriter.Close%2A> método si no se llama por el código de aplicación.  
  
 <xref:System.Resources.ResourceWriter.Generate%2A> solo se puede llamar una vez, después de todas las llamadas a <xref:System.Resources.ResourceWriter.AddResource%2A> y <xref:System.Resources.ResourceWriter.AddResourceData%2A> se han realizado. Si se produce una excepción al escribir los recursos, se cerrará el flujo de salida para evitar la escritura de información no válida.  
  
 <xref:System.Resources.ResourceWriter.Generate%2A> no se cierra el flujo de salida en los casos normales. A menos que combinen datos adicionales con el archivo .resources o necesita tener acceso a la secuencia posteriormente, debe llamar a <xref:System.Resources.ResourceWriter.Close%2A> después de llamar a <xref:System.Resources.ResourceWriter.Generate%2A>, o simplemente llamar a <xref:System.Resources.ResourceWriter.Close%2A>.  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Resources.ResourceWriter.Generate%2A> método para escribir los recursos de todos los objetos en un <xref:System.Resources.ResourceWriter> clase en el flujo de salida  
  
 [!code-cpp[System.Resources.ResourceWriter.Generate Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceWriter.Generate Example/CPP/resourcewritergenerate.cpp#1)]
 [!code-csharp[System.Resources.ResourceWriter.Generate Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceWriter.Generate Example/CS/resourcewritergenerate.cs#1)]
 [!code-vb[System.Resources.ResourceWriter.Generate Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceWriter.Generate Example/VB/resourcewritergenerate.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Error de E/S.</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">Se ha producido un error durante la serialización del objeto.</exception>
        <exception cref="T:System.InvalidOperationException">Se ha cerrado este <see cref="T:System.Resources.ResourceWriter" /> y su tabla no está disponible.</exception>
      </Docs>
    </Member>
    <Member MemberName="TypeNameConverter">
      <MemberSignature Language="C#" Value="public Func&lt;Type,string&gt; TypeNameConverter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Type, string&gt; TypeNameConverter" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResourceWriter.TypeNameConverter" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeNameConverter As Func(Of Type, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;Type ^, System::String ^&gt; ^ TypeNameConverter { Func&lt;Type ^, System::String ^&gt; ^ get(); void set(Func&lt;Type ^, System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeNameConverter : Func&lt;Type, string&gt; with get, set" Usage="System.Resources.ResourceWriter.TypeNameConverter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Writer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Type,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un delegado que permite escribir ensamblados de recursos en versiones de destino de .NET Framework anteriores a [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] usando nombres de ensamblado calificados.</summary>
        <value>Tipo encapsulado por el delegado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[vs_dev10_long](~/includes/vs-dev10-long-md.md)] y MSBuild establece esta propiedad si el destino es una versión anterior de .NET Framework.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>