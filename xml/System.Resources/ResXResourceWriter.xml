<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ResXResourceWriter.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a84107e4c6430c9ab492ef5abd191f9b1a9719aa.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a84107e4c6430c9ab492ef5abd191f9b1a9719aa</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Resources.ResXResourceWriter">
          <source>Writes resources in an XML resource (.resx) file or an output stream.</source>
          <target state="translated">Escribe recursos en un archivo de recursos XML (.resx) o en un flujo de salida.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceWriter">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter&gt;</ph> writes resources in XML format.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter&gt;</ph> escribe recursos en formato XML.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceWriter">
          <source>To write a binary resource file, use <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph>.</source>
          <target state="translated">Para escribir un archivo de recursos binarios, utilice <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceWriter">
          <source>Resources are specified as name/value pairs using the <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.AddResource%2A&gt;</ph> method.</source>
          <target state="translated">Los recursos se especifican como pares nombre/valor mediante el <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.AddResource%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceWriter">
          <source>Resource names are case-sensitive when used for lookups; but to more easily support authoring tools and help eliminate bugs, <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter&gt;</ph> does not allow a.resx file to have names that vary only by case.</source>
          <target state="translated">Nombres de recursos distinguen entre mayúsculas y minúsculas cuando se utiliza para las búsquedas; pero, para admitir herramientas de creación de forma más sencilla y contribuir a eliminar los errores, <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter&gt;</ph> no permite un archivo.resx tengan nombres que varían sólo por mayúsculas o minúsculas.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceWriter">
          <source>To create a.resx file, create a <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter&gt;</ph> with a unique file name, call <ph id="ph2">&lt;xref:System.Resources.ResXResourceWriter.AddResource%2A&gt;</ph> at least once, call <ph id="ph3">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> to write the resources file to disk, and then call <ph id="ph4">&lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt;</ph> to close the file.</source>
          <target state="translated">Para crear un archivo.resx, cree un <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter&gt;</ph> con un nombre de archivo único, llame a <ph id="ph2">&lt;xref:System.Resources.ResXResourceWriter.AddResource%2A&gt;</ph> al menos una vez, llame a <ph id="ph3">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> para escribir el archivo de recursos en el disco y, a continuación, llame a <ph id="ph4">&lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt;</ph> para cerrar el archivo.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceWriter">
          <source>Calling <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt;</ph> will implicitly <ph id="ph2">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> the file if required.</source>
          <target state="translated">Al llamar a <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt;</ph> implícitamente <ph id="ph2">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> el archivo si es necesario.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceWriter">
          <source>The resources are not necessarily written in the same order they were added.</source>
          <target state="translated">Los recursos no se escribirán necesariamente en el mismo orden que se agregaron.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceWriter">
          <source>For more information on the format of a.resx file, see <bpt id="p1">[</bpt>Working with .resx Files Programmatically<ept id="p1">](~/docs/framework/resources/working-with-resx-files-programmatically.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre el formato de un archivo.resx, vea <bpt id="p1">[</bpt>trabajar con mediante programación archivos .resx<ept id="p1">](~/docs/framework/resources/working-with-resx-files-programmatically.md)</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceWriter">
          <source>This class contains a link demand and an inheritance demand at the class level that applies to all members.</source>
          <target state="translated">Esta clase contiene una petición de vínculo y una petición de herencia en el nivel de clase que se aplica a todos los miembros.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceWriter">
          <source>A <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown when either the immediate caller or the derived class does not have full-trust permission.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> se produce cuando el llamador inmediato o la clase derivada no tiene permiso de plena confianza.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceWriter">
          <source>The following example creates a .resx file named <ph id="ph1">`CarResources.resx`</ph> that stores six strings, an icon, and two application-defined objects (two <ph id="ph2">`Automobile`</ph> objects).</source>
          <target state="translated">En el ejemplo siguiente se crea un archivo .resx denominado <ph id="ph1">`CarResources.resx`</ph> que almacena seis cadenas, un icono y dos objetos definidos por la aplicación (dos <ph id="ph2">`Automobile`</ph> objetos).</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceWriter">
          <source>Note that the <ph id="ph1">`Automobile`</ph> class, which is defined and instantiated in the example, is tagged with the <ph id="ph2">&lt;xref:System.SerializableAttribute&gt;</ph> attribute.</source>
          <target state="translated">Tenga en cuenta que la clase <ph id="ph1">`Automobile`</ph>, que se define y de la que se crea una instancia en el ejemplo, se etiqueta con el atributo <ph id="ph2">&lt;xref:System.SerializableAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceWriter">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">De plena confianza para el llamador inmediato.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceWriter">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Un código de confianza parcial no puede utilizar este miembro.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceWriter">
          <source>for full trust for inheritors.</source>
          <target state="translated">de plena confianza para los herederos.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceWriter">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">Este miembro no puede heredar código de confianza parcial.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="T:System.Resources.ResXResourceWriter">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceWriter" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.Stream)">
          <source>The output stream.</source>
          <target state="translated">Secuencia de salida.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.Stream)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceWriter" /&gt;</ph> class that writes the resources to the specified stream object.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceWriter" /&gt;</ph> que escribe los recursos en el objeto de secuencia especificado.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt;</ph> method closes the stream you specify as a parameter.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt;</ph> método cierra la secuencia que especifique como parámetro.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.Stream)">
          <source>To write the resource to the stream without closing the stream, you must use the <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> method.</source>
          <target state="translated">Para escribir el recurso en la secuencia sin cerrar la secuencia, debe utilizar el <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.Stream)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">De plena confianza para el llamador inmediato.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.Stream)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Un código de confianza parcial no puede utilizar este miembro.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.Stream)">
          <source>for full trust for inheritors.</source>
          <target state="translated">de plena confianza para los herederos.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.Stream)">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">Este miembro no puede heredar código de confianza parcial.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> object to send the output to.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> al que se va a enviar la salida.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.TextWriter)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceWriter" /&gt;</ph> class that writes to the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> object.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceWriter" /&gt;</ph> que escribe en el objeto <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.TextWriter)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">De plena confianza para el llamador inmediato.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.TextWriter)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Un código de confianza parcial no puede utilizar este miembro.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.TextWriter)">
          <source>for full trust for inheritors.</source>
          <target state="translated">de plena confianza para los herederos.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.TextWriter)">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">Este miembro no puede heredar código de confianza parcial.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.String)">
          <source>The output file name.</source>
          <target state="translated">Nombre del archivo de salida.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceWriter" /&gt;</ph> class that writes the resources to the specified file.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceWriter" /&gt;</ph> que escribe los recursos en el archivo especificado.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.String)">
          <source>This constructor creates <ph id="ph1">`filename`</ph> if it does not exist and overwrites it if it does.</source>
          <target state="translated">Este constructor crea <ph id="ph1">`filename`</ph> si no existe y lo sobrescribe si lo hace.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.String)">
          <source>If <ph id="ph1">`filename`</ph> includes a directory path, the full path must exist or the constructor throws a <ph id="ph2">&lt;xref:System.IO.DirectoryNotFoundException&gt;</ph> exception.</source>
          <target state="translated">Si <ph id="ph1">`filename`</ph> incluye una ruta de acceso de directorio, debe existir la ruta de acceso completa o el constructor produce una <ph id="ph2">&lt;xref:System.IO.DirectoryNotFoundException&gt;</ph> excepción.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.String)">
          <source>The directory specified in <ph id="ph1">&lt;paramref name="filename" /&gt;</ph> does not exist.</source>
          <target state="translated">El directorio especificado en <ph id="ph1">&lt;paramref name="filename" /&gt;</ph> no existe.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">De plena confianza para el llamador inmediato.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">Un código de confianza parcial no puede utilizar este miembro.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.String)">
          <source>for full trust for inheritors.</source>
          <target state="translated">de plena confianza para los herederos.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.String)">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">Este miembro no puede heredar código de confianza parcial.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.Stream,System.Func{System.Type,System.String})">
          <source>The stream to send the output to.</source>
          <target state="translated">Secuencia a la que se va a enviar el resultado.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.Stream,System.Func{System.Type,System.String})">
          <source>The delegate that is used to target earlier versions of the .NET Framework.</source>
          <target state="translated">Delegado que se usa como destino para versiones anteriores de .NET Framework.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.Stream,System.Func{System.Type,System.String})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceWriter" /&gt;</ph> class that writes the resources to a specified stream object and sets a converter delegate.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceWriter" /&gt;</ph> que escribe los recursos en un objeto de secuencia especificado y establece un delegado de convertidor.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.Stream,System.Func{System.Type,System.String})">
          <source>This delegate enables resource assemblies to be written that target versions of the .NET Framework before the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> by using qualified assembly names.</source>
          <target state="translated">Este delegado permite escribir ensamblados de recursos en las versiones de destino de .NET Framework anteriores a <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> utilizando nombres de ensamblado calificados.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.Stream,System.Func{System.Type,System.String})">
          <source>Visual Studio and MSBuild use this constructor when you create resources for an application that target versions of the .NET Framework before the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.</source>
          <target state="translated">Visual Studio y MSBuild utilizan este constructor al crear recursos para una aplicación que tienen como destino versiones de .NET Framework anteriores a la <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.TextWriter,System.Func{System.Type,System.String})">
          <source>The object to send output to.</source>
          <target state="translated">Objeto al que se va a enviar el resultado.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.TextWriter,System.Func{System.Type,System.String})">
          <source>The delegate that is used to target earlier versions of the .NET Framework.</source>
          <target state="translated">Delegado que se usa como destino para versiones anteriores de .NET Framework.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.TextWriter,System.Func{System.Type,System.String})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceWriter" /&gt;</ph> class that writes the resources to a specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> object and sets a delegate that enables resource assemblies to be written that target versions of the .NET Framework before the <ph id="ph3">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> by using qualified assembly names.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceWriter" /&gt;</ph> que escribe los recursos en un objeto <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> especificado y establece un delegado que permite escribir ensamblados de recursos en versiones de destino de .NET Framework anteriores a <ph id="ph3">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> utilizando nombres de ensamblado calificados.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.IO.TextWriter,System.Func{System.Type,System.String})">
          <source>Visual Studio and MSBuild use this constructor when you create resources for an application that target versions of the .NET Framework before the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.</source>
          <target state="translated">Visual Studio y MSBuild utilizan este constructor al crear recursos para una aplicación que tienen como destino versiones de .NET Framework anteriores a la <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.String,System.Func{System.Type,System.String})">
          <source>The file to send output to.</source>
          <target state="translated">Archivo al que se va a enviar el resultado.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.String,System.Func{System.Type,System.String})">
          <source>The delegate that is used to target earlier versions of the .NET Framework.</source>
          <target state="translated">Delegado que se usa como destino para versiones anteriores de .NET Framework.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.String,System.Func{System.Type,System.String})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceWriter" /&gt;</ph> class that writes the resources to a specified file and sets a delegate that enables resource assemblies to be written that target versions of the .NET Framework before the <ph id="ph2">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> by using qualified assembly names.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceWriter" /&gt;</ph> que escribe los recursos en un archivo especificado y establece un delegado que permite escribir ensamblados de recursos en versiones de destino de .NET Framework anteriores a <ph id="ph2">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> usando nombres de ensamblado calificados.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.#ctor(System.String,System.Func{System.Type,System.String})">
          <source>Visual Studio and MSBuild use this constructor when you create resources for an application that target versions of the .NET Framework before the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.</source>
          <target state="translated">Visual Studio y MSBuild utilizan este constructor al crear recursos para una aplicación que tienen como destino versiones de .NET Framework anteriores a la <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.#ctor(System.String,System.Func{System.Type,System.String})">
          <source>The directory specified in <ph id="ph1">&lt;paramref name="filename" /&gt;</ph> does not exist.</source>
          <target state="translated">El directorio especificado en <ph id="ph1">&lt;paramref name="filename" /&gt;</ph> no existe.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddAlias(System.String,System.Reflection.AssemblyName)">
          <source>The name of the alias.</source>
          <target state="translated">Nombre del alias.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddAlias(System.String,System.Reflection.AssemblyName)">
          <source>The name of the assembly represented by <bpt id="p1">&lt;c&gt;</bpt>aliasName<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Nombre del ensamblado representado por <bpt id="p1">&lt;c&gt;</bpt>aliasName<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddAlias(System.String,System.Reflection.AssemblyName)">
          <source>Adds the specified alias to a list of aliases.</source>
          <target state="translated">Agrega el alias especificado a una lista de alias.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.AddAlias(System.String,System.Reflection.AssemblyName)">
          <source>Resources whose values are from an aliased assembly are automatically added to the list of aliases.</source>
          <target state="translated">Recursos cuyos valores proceden de un ensamblado con alias se agregan automáticamente a la lista de alias.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.AddAlias(System.String,System.Reflection.AssemblyName)">
          <source>The resource is not written until <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> is called.</source>
          <target state="translated">El recurso no se escribirá hasta <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> se llama.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddAlias(System.String,System.Reflection.AssemblyName)">
          <source><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="T:System.Resources.ResXResourceWriter">
          <source>Adds design-time properties to the list of resources to write.</source>
          <target state="translated">Agrega propiedades en tiempo de diseño a la lista de recursos que se va a escribir.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddMetadata(System.String,System.Byte[])">
          <source>The name of a property.</source>
          <target state="translated">Nombre de una propiedad.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddMetadata(System.String,System.Byte[])">
          <source>A byte array containing the value of the property to add.</source>
          <target state="translated">Matriz de bytes que contiene el valor de la propiedad que se va a agregar.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddMetadata(System.String,System.Byte[])">
          <source>Adds a design-time property whose value is specifed as a byte array to the list of resources to write.</source>
          <target state="translated">Agrega una propiedad en tiempo de diseño cuyo valor se especifica como una matriz de bytes a la lista de recursos que se va a escribir.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddMetadata(System.String,System.Byte[])">
          <source>The resource specified by the <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter has already been added.</source>
          <target state="translated">Ya se ha agregado el recurso especificado por el parámetro <ph id="ph1">&lt;paramref name="name" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddMetadata(System.String,System.Object)">
          <source>The name of a property.</source>
          <target state="translated">Nombre de una propiedad.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddMetadata(System.String,System.Object)">
          <source>An object that is the value of the property to add.</source>
          <target state="translated">Objeto que es el valor de la propiedad que se va a agregar.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddMetadata(System.String,System.Object)">
          <source>Adds a design-time property whose value is specified as an object to the list of resources to write.</source>
          <target state="translated">Agrega una propiedad en tiempo de diseño cuyo valor se especifica como un objeto a la lista de recursos que se va a escribir.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddMetadata(System.String,System.Object)">
          <source>The resource specified by the <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter has already been added.</source>
          <target state="translated">Ya se ha agregado el recurso especificado por el parámetro <ph id="ph1">&lt;paramref name="name" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddMetadata(System.String,System.String)">
          <source>The name of a property.</source>
          <target state="translated">Nombre de una propiedad.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddMetadata(System.String,System.String)">
          <source>A string that is the value of the property to add.</source>
          <target state="translated">Cadena que es el valor de la propiedad que se va a agregar.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddMetadata(System.String,System.String)">
          <source>Adds a design-time property whose value is specified as a string to the list of resources to write.</source>
          <target state="translated">Agrega una propiedad en tiempo de diseño cuyo valor se especifica como una cadena a la lista de recursos que se va a escribir.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddMetadata(System.String,System.String)">
          <source>The resource specified by the <ph id="ph1">&lt;paramref name="name" /&gt;</ph> property has already been added.</source>
          <target state="translated">Ya se ha agregado el recurso especificado por la propiedad <ph id="ph1">&lt;paramref name="name" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="T:System.Resources.ResXResourceWriter">
          <source>Adds a resource to the list of resources to write.</source>
          <target state="translated">Agrega un recurso a la lista de recursos que se va a escribir.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddResource(System.Resources.ResXDataNode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Resources.ResXDataNode" /&gt;</ph> object that contains a resource name/value pair.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Resources.ResXDataNode" /&gt;</ph> que contiene un par de nombre y valor del recurso.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddResource(System.Resources.ResXDataNode)">
          <source>Adds a named resource specified in a <ph id="ph1">&lt;see cref="T:System.Resources.ResXDataNode" /&gt;</ph> object to the list of resources to write.</source>
          <target state="translated">Agrega un recurso con nombre, especificado en un objeto <ph id="ph1">&lt;see cref="T:System.Resources.ResXDataNode" /&gt;</ph>, a la lista de recursos que se va a escribir.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Byte[])">
          <source>The name of the resource.</source>
          <target state="translated">Nombre del recurso.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Byte[])">
          <source>The value of the resource to add as an 8-bit unsigned integer array.</source>
          <target state="translated">Valor del recurso que se va a agregar como matriz de enteros de 8 bits sin signo.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Byte[])">
          <source>Adds a named resource specified as a byte array to the list of resources to write.</source>
          <target state="translated">Agrega un recurso con nombre, especificado como una matriz de bytes, a la lista de recursos que se va a escribir.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Byte[])">
          <source>The resource is not written until <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> is called.</source>
          <target state="translated">El recurso no se escribirá hasta <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> se llama.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Byte[])">
          <source>The resource is serialized and stored in a binary format.</source>
          <target state="translated">El recurso se serializa y se almacena en un formato binario.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Object)">
          <source>The name of the resource.</source>
          <target state="translated">Nombre del recurso.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Object)">
          <source>The value of the resource.</source>
          <target state="translated">Valor del recurso.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Object)">
          <source>Adds a named resource specified as an object to the list of resources to write.</source>
          <target state="translated">Agrega un recurso con nombre, especificado como un objeto, a la lista de recursos que se va a escribir.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Object)">
          <source>The resource is not written until <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> is called.</source>
          <target state="translated">El recurso no se escribirá hasta <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> se llama.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Object)">
          <source>The resource that was added must be serializable.</source>
          <target state="translated">El recurso que se ha agregado debe ser serializable.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Object)">
          <source>If the resource being added is a string, it is written as a string; otherwise, the resource is serialized and stored in a binary format.</source>
          <target state="translated">Si el recurso que se va a agregar es una cadena, se escribe como una cadena; en caso contrario, el recurso se serializa y se almacena en un formato binario.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Object)">
          <source>The following example creates a .resx file named <ph id="ph1">`CarResources.resx`</ph> that stores six strings, an icon, and two application-defined objects (two <ph id="ph2">`Automobile`</ph> objects).</source>
          <target state="translated">En el ejemplo siguiente se crea un archivo .resx denominado <ph id="ph1">`CarResources.resx`</ph> que almacena seis cadenas, un icono y dos objetos definidos por la aplicación (dos <ph id="ph2">`Automobile`</ph> objetos).</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Object)">
          <source>To store the icon and the <ph id="ph1">`Automobile`</ph> objects, it calls the <ph id="ph2">&lt;xref:System.Resources.ResXResourceWriter.AddResource%28System.String%2CSystem.Object%29&gt;</ph> method.</source>
          <target state="translated">Para almacenar el icono y el <ph id="ph1">`Automobile`</ph> objetos, llama a la <ph id="ph2">&lt;xref:System.Resources.ResXResourceWriter.AddResource%28System.String%2CSystem.Object%29&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Object)">
          <source>Note that the <ph id="ph1">`Automobile`</ph> class, which is defined and instantiated in the example, is tagged with the <ph id="ph2">&lt;xref:System.SerializableAttribute&gt;</ph> attribute.</source>
          <target state="translated">Tenga en cuenta que la clase <ph id="ph1">`Automobile`</ph>, que se define y de la que se crea una instancia en el ejemplo, se etiqueta con el atributo <ph id="ph2">&lt;xref:System.SerializableAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.String)">
          <source>The name of the resource.</source>
          <target state="translated">Nombre del recurso.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.String)">
          <source>The value of the resource.</source>
          <target state="translated">Valor del recurso.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.String)">
          <source>Adds a string resource to the resources.</source>
          <target state="translated">Agrega un recurso de cadena a los recursos.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.String)">
          <source>The resource is not written until <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> is called.</source>
          <target state="translated">El recurso no se escribirá hasta <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> se llama.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.String)">
          <source>The following example creates a .resx file named <ph id="ph1">`CarResources.resx`</ph> that stores six strings, an icon, and two application-defined objects (two <ph id="ph2">`Automobile`</ph> objects).</source>
          <target state="translated">En el ejemplo siguiente se crea un archivo .resx denominado <ph id="ph1">`CarResources.resx`</ph> que almacena seis cadenas, un icono y dos objetos definidos por la aplicación (dos <ph id="ph2">`Automobile`</ph> objetos).</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.String)">
          <source>To store the strings, it calls the <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.AddResource%28System.String%2CSystem.String%29&gt;</ph> method.</source>
          <target state="translated">Para almacenar las cadenas, llama a la <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.AddResource%28System.String%2CSystem.String%29&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.String)">
          <source>Note that the <ph id="ph1">`Automobile`</ph> class, which is defined and instantiated in the example, is tagged with the <ph id="ph2">&lt;xref:System.SerializableAttribute&gt;</ph> attribute.</source>
          <target state="translated">Tenga en cuenta que la clase <ph id="ph1">`Automobile`</ph>, que se define y de la que se crea una instancia en el ejemplo, se etiqueta con el atributo <ph id="ph2">&lt;xref:System.SerializableAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.Resources.ResXResourceWriter.BasePath">
          <source>Gets or sets the base path for the relative file path specified in a <ph id="ph1">&lt;see cref="T:System.Resources.ResXFileRef" /&gt;</ph> object.</source>
          <target state="translated">Obtiene o establece la ruta de acceso base para la ruta de acceso relativa al archivo especificada en un objeto <ph id="ph1">&lt;see cref="T:System.Resources.ResXFileRef" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceWriter.BasePath">
          <source>A path that, if prepended to the relative file path specified in a <ph id="ph1">&lt;see cref="T:System.Resources.ResXFileRef" /&gt;</ph> object, yields an absolute path to an XML resource file.</source>
          <target state="translated">Una ruta de acceso que, si se antepone a la ruta de acceso relativa al archivo especificada en un objeto <ph id="ph1">&lt;see cref="T:System.Resources.ResXFileRef" /&gt;</ph>, produce una ruta de acceso absoluta a un archivo de recursos XML.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="F:System.Resources.ResXResourceWriter.BinSerializedObjectMimeType">
          <source>Specifies the default content type for a binary object.</source>
          <target state="translated">Especifica el tipo de contenido predeterminado para un objeto binario.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="F:System.Resources.ResXResourceWriter.BinSerializedObjectMimeType">
          <source>This field is read-only.</source>
          <target state="translated">Este campo es de solo lectura.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="F:System.Resources.ResXResourceWriter.ByteArraySerializedObjectMimeType">
          <source>Specifies the default content type for a byte array object.</source>
          <target state="translated">Especifica el tipo de contenido predeterminado para un objeto de matriz de bytes.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="F:System.Resources.ResXResourceWriter.ByteArraySerializedObjectMimeType">
          <source>This field is read-only.</source>
          <target state="translated">Este campo es de solo lectura.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.Close">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceWriter" /&gt;</ph>.</source>
          <target state="translated">Libera todos los recursos que usa <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Close">
          <source>Calling this method is the equivalent of calling <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Dispose%2A&gt;</ph>.</source>
          <target state="translated">Llamar a este método es el equivalente de llamar al método <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Dispose%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="F:System.Resources.ResXResourceWriter.DefaultSerializedObjectMimeType">
          <source>Specifies the default content type for an object.</source>
          <target state="translated">Especifica el tipo de contenido predeterminado para un objeto.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="F:System.Resources.ResXResourceWriter.DefaultSerializedObjectMimeType">
          <source>This field is read-only.</source>
          <target state="translated">Este campo es de solo lectura.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="T:System.Resources.ResXResourceWriter">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceWriter" /&gt;</ph>.</source>
          <target state="translated">Libera los recursos que usa <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceWriter" /&gt;</ph>.</source>
          <target state="translated">Libera todos los recursos que usa <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Dispose%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> method, if necessary, before releasing managed and unmanaged system resources.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Dispose%2A&gt;</ph> llamadas al método el <ph id="ph2">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> método, si es necesario, antes de liberar recursos administrados y sistema.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Dispose">
          <source>Calling <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Dispose%2A&gt;</ph> allows the system resources used by the <ph id="ph2">&lt;xref:System.Resources.ResXResourceWriter&gt;</ph> to be reallocated for other purposes.</source>
          <target state="translated">Al llamar a <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Dispose%2A&gt;</ph> permite a los recursos del sistema utilizados por el <ph id="ph2">&lt;xref:System.Resources.ResXResourceWriter&gt;</ph> se reasignen para otros fines.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Dispose">
          <source>For more information about <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Dispose%2A&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Para obtener más información acerca de <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Dispose%2A&gt;</ph>, consulte <bpt id="p1">[</bpt>limpiar recursos no administrados<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para liberar tanto recursos administrados como no administrados; es <ph id="ph2">&lt;see langword="false" /&gt;</ph> para liberar únicamente recursos no administrados.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceWriter" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Libera los recursos no administrados que usa <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceWriter" /&gt;</ph> y, de forma opcional, libera los recursos administrados.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Dispose(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Dispose%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> method, if necessary, before releasing managed and unmanaged system resources.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Dispose%2A&gt;</ph> llamadas al método el <ph id="ph2">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> método, si es necesario, antes de liberar recursos administrados y sistema.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Dispose%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Se llama a este método público <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Dispose%2A&gt;</ph> método y <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> se invoca el protegido <ph id="ph2">`Dispose(Boolean)`</ph> método con el <ph id="ph3">`disposing`</ph> parámetro establecido en <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invoca <ph id="ph2">`Dispose`</ph> con <ph id="ph3">`disposing`</ph> establecido en <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Resources.ResXResourceWriter&gt;</ph> references.</source>
          <target state="translated">Cuando el parámetro <ph id="ph1">`disposing`</ph> es <ph id="ph2">`true`</ph>, este método libera todos los recursos retenidos por los objetos administrados a los que el control <ph id="ph3">&lt;xref:System.Resources.ResXResourceWriter&gt;</ph> hace referencia.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Este método invoca al método <ph id="ph1">`Dispose()`</ph> de cada uno de los objetos a los que se hace referencia.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> puede recibir varias llamadas de otros objetos.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Al invalidar <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo implementar <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, consulte <bpt id="p1">[</bpt>implementa un método Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see  and .</source>
          <target state="translated">Para obtener más información acerca de <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> y <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, consulte y.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.Finalize">
          <source>This member overrides the <ph id="ph1">&lt;see cref="M:System.Object.Finalize" /&gt;</ph> method.</source>
          <target state="translated">Este miembro reemplaza el método <ph id="ph1">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.Generate">
          <source>Writes all resources added by the <ph id="ph1">&lt;see cref="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Byte[])" /&gt;</ph> method to the output file or stream.</source>
          <target state="translated">Escribe en la secuencia o el archivo de salida todos los recursos agregados por el método <ph id="ph1">&lt;see cref="M:System.Resources.ResXResourceWriter.AddResource(System.String,System.Byte[])" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Generate">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> method writes the resources to the output file or stream.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> método escribe los recursos en la secuencia o archivo de salida.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Generate">
          <source>If you want to write the resources as well as close the output file or stream, call the <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt;</ph> method.</source>
          <target state="translated">Si desea escribir los recursos así como cerrar la secuencia o archivo de salida, llame a la <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Generate">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> method can be called only once.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> método puede llamarse en una sola vez.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceWriter.Generate">
          <source>After calling the <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> method, all <ph id="ph2">&lt;xref:System.Resources.IResourceWriter&gt;</ph> methods other than <ph id="ph3">&lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt;</ph> will throw an exception.</source>
          <target state="translated">Después de llamar a la <ph id="ph1">&lt;xref:System.Resources.ResXResourceWriter.Generate%2A&gt;</ph> método, todos los <ph id="ph2">&lt;xref:System.Resources.IResourceWriter&gt;</ph> métodos distintos de <ph id="ph3">&lt;xref:System.Resources.ResXResourceWriter.Close%2A&gt;</ph> se iniciará una excepción.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceWriter.Generate">
          <source>The resource has already been saved.</source>
          <target state="translated">Ya se ha guardado el recurso.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="F:System.Resources.ResXResourceWriter.ResMimeType">
          <source>Specifies the content type of an XML resource.</source>
          <target state="translated">Especifica el tipo de contenido de un recurso XML.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="F:System.Resources.ResXResourceWriter.ResMimeType">
          <source>This field is read-only.</source>
          <target state="translated">Este campo es de solo lectura.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="F:System.Resources.ResXResourceWriter.ResourceSchema">
          <source>Specifies the schema to use in writing the XML file.</source>
          <target state="translated">Especifica el esquema que se debe utilizar para escribir el archivo XML.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="F:System.Resources.ResXResourceWriter.ResourceSchema">
          <source>This field is read-only.</source>
          <target state="translated">Este campo es de solo lectura.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Resources.ResXResourceWriter.ResourceSchema">
          <source>The schema provides details on how to encode the resources based on the type of resource being written.</source>
          <target state="translated">El esquema proporciona detalles sobre cómo codificar los recursos según el tipo de recurso que se va a escribir.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="F:System.Resources.ResXResourceWriter.SoapSerializedObjectMimeType">
          <source>Specifies the content type for a SOAP object.</source>
          <target state="translated">Especifica el tipo de contenido para un objeto SOAP.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="F:System.Resources.ResXResourceWriter.SoapSerializedObjectMimeType">
          <source>This field is read-only.</source>
          <target state="translated">Este campo es de solo lectura.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="F:System.Resources.ResXResourceWriter.Version">
          <source>Specifies the version of the schema that the XML output conforms to.</source>
          <target state="translated">Especifica la versión del esquema a la que se ajusta la salida XML.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="F:System.Resources.ResXResourceWriter.Version">
          <source>This field is read-only.</source>
          <target state="translated">Este campo es de solo lectura.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>