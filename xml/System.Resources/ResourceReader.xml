<Type Name="ResourceReader" FullName="System.Resources.ResourceReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="727b634b4d737d3d69635f31367da77af41950e9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36637966" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ResourceReader : System.Resources.IResourceReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ResourceReader extends System.Object implements class System.Collections.IEnumerable, class System.IDisposable, class System.Resources.IResourceReader" />
  <TypeSignature Language="DocId" Value="T:System.Resources.ResourceReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ResourceReader&#xA;Implements IResourceReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceReader sealed : System::Resources::IResourceReader" />
  <TypeSignature Language="F#" Value="type ResourceReader = class&#xA;    interface IResourceReader&#xA;    interface IEnumerable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Resources.Reader</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Resources.ResourceManager</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Resources.IResourceReader</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1f230-101">Enumerates the resources in a binary resources (.resources) file by reading sequential resource name/value pairs.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1f230-101">Enumerates the resources in a binary resources (.resources) file by reading sequential resource name/value pairs.</span>
      </span>
      <span data-ttu-id="1f230-102">**Security Note**: Calling methods in this class with untrusted data is a security risk.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1f230-102">**Security Note**: Calling methods in this class with untrusted data is a security risk.</span>
      </span>
      <span data-ttu-id="1f230-103">Call the methods in the class only with trusted data.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1f230-103">Call the methods in the class only with trusted data.</span>
      </span>
      <span data-ttu-id="1f230-104">For more information, see [Untrusted Data Security Risks](https://docs.com/rick-anderson-1/8710/untrusted-data-security-risks).</span>
      <span class="sxs-lookup">
        <span data-stu-id="1f230-104">For more information, see [Untrusted Data Security Risks](https://docs.com/rick-anderson-1/8710/untrusted-data-security-risks).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f230-105">El <xref:System.Resources.ResourceReader> clase proporciona una implementación estándar de la <xref:System.Resources.IResourceReader> interfaz.</span><span class="sxs-lookup"><span data-stu-id="1f230-105">The <xref:System.Resources.ResourceReader> class provides a standard implementation of the <xref:System.Resources.IResourceReader> interface.</span></span> <span data-ttu-id="1f230-106">Un <xref:System.Resources.ResourceReader> instancia representa un archivo .resources independiente o un archivo .resources que se incrusta en un ensamblado.</span><span class="sxs-lookup"><span data-stu-id="1f230-106">A <xref:System.Resources.ResourceReader> instance represents either a standalone .resources file or a .resources file that is embedded in an assembly.</span></span> <span data-ttu-id="1f230-107">Sirve para enumerar los recursos en un archivo .resources y recuperar sus pares de nombre/valor.</span><span class="sxs-lookup"><span data-stu-id="1f230-107">It is used to enumerate the resources in a .resources file and retrieve its name/value pairs.</span></span> <span data-ttu-id="1f230-108">Difiere de la <xref:System.Resources.ResourceManager> (clase), que se usa para recuperar recursos con nombre especificados de un archivo .resources que se incrusta en un ensamblado.</span><span class="sxs-lookup"><span data-stu-id="1f230-108">It differs from the <xref:System.Resources.ResourceManager> class, which is used to retrieve specified named resources from a .resources file that is embedded in an assembly.</span></span> <span data-ttu-id="1f230-109">El <xref:System.Resources.ResourceManager> clase se utiliza para recuperar recursos cuyos nombres se conocen de antemano, mientras que la <xref:System.Resources.ResourceReader> clase es útil para recuperar los recursos cuyo número o los nombres exactos no se conocen en tiempo de compilación.</span><span class="sxs-lookup"><span data-stu-id="1f230-109">The <xref:System.Resources.ResourceManager> class is used to retrieve resources whose names are known in advance, whereas the <xref:System.Resources.ResourceReader> class is useful for retrieving resources whose number or precise names are not known at compile time.</span></span> <span data-ttu-id="1f230-110">Por ejemplo, una aplicación puede utilizar un archivo de recursos para almacenar información de configuración que se organiza en las secciones y los elementos de una sección, donde el número de secciones o elementos en una sección no se conoce de antemano.</span><span class="sxs-lookup"><span data-stu-id="1f230-110">For example, an application may use a resources file to store configuration information that is organized into sections and items in a section, where the number of sections or items in a section is not known in advance.</span></span> <span data-ttu-id="1f230-111">Recursos, a continuación, pueden llamarse genéricamente (como `Section1`, `Section1Item1`, `Section1Item2`, etc.) y recuperar usando una <xref:System.Resources.ResourceReader> objeto.</span><span class="sxs-lookup"><span data-stu-id="1f230-111">Resources can then be named generically (such as `Section1`, `Section1Item1`, `Section1Item2`, and so on) and retrieved by using a <xref:System.Resources.ResourceReader> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1f230-112">Este tipo implementa la <xref:System.IDisposable> interfaz.</span><span class="sxs-lookup"><span data-stu-id="1f230-112">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="1f230-113">Cuando haya terminado de utilizar el tipo, debe eliminar del mismo directa o indirectamente.</span><span class="sxs-lookup"><span data-stu-id="1f230-113">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="1f230-114">Para deshacerse del tipo directamente, llame a su <xref:System.IDisposable.Dispose%2A> método en un `try` / `catch` bloque.</span><span class="sxs-lookup"><span data-stu-id="1f230-114">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="1f230-115">Para deshacerse de él indirectamente, use una construcción de lenguaje como `using` (en C#) o `Using` (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="1f230-115">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="1f230-116">Para obtener más información, vea la sección "Uso de un objeto que implementa IDisposable" en el <xref:System.IDisposable> tema de la interfaz.</span><span class="sxs-lookup"><span data-stu-id="1f230-116">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="1f230-117">Para obtener más información sobre el uso de la <xref:System.Resources.ResourceReader> de clases, consulte las secciones siguientes:</span><span class="sxs-lookup"><span data-stu-id="1f230-117">For more information about using the <xref:System.Resources.ResourceReader> class, see the following sections:</span></span>  
  
-   [<span data-ttu-id="1f230-118">Instancias de un objeto ResourceReader</span><span class="sxs-lookup"><span data-stu-id="1f230-118">Instantiating a ResourceReader object</span></span>](#instantiate)  
  
-   [<span data-ttu-id="1f230-119">Enumerar los recursos de un objeto ResourceReader</span><span class="sxs-lookup"><span data-stu-id="1f230-119">Enumerating a ResourceReader object's resources</span></span>](#enumerate)  
  
    -   [<span data-ttu-id="1f230-120">Recuperar recursos mediante propiedades IDictionaryEnumerator</span><span class="sxs-lookup"><span data-stu-id="1f230-120">Retrieving resources by using IDictionaryEnumerator properties</span></span>](#idictionaryenumerator)  
  
    -   [<span data-ttu-id="1f230-121">Recuperar recursos por el nombre con GetResourceData</span><span class="sxs-lookup"><span data-stu-id="1f230-121">Retrieving resources by name with GetResourceData</span></span>](#getresourcedata)  
  
<a name="instantiate"></a>   
## <a name="instantiating-a-resourcereader-object"></a><span data-ttu-id="1f230-122">Instancias de un objeto ResourceReader</span><span class="sxs-lookup"><span data-stu-id="1f230-122">Instantiating a ResourceReader Object</span></span>  
 <span data-ttu-id="1f230-123">Un archivo .resources es un archivo binario que se ha compilado en un archivo de texto o un archivo .resx XML [Resgen.exe (generador de archivos de recursos)](~/docs/framework/tools/resgen-exe-resource-file-generator.md).</span><span class="sxs-lookup"><span data-stu-id="1f230-123">A .resources file is a binary file that has been compiled from either a text file or an XML .resx file by [Resgen.exe (Resource File Generator)](~/docs/framework/tools/resgen-exe-resource-file-generator.md).</span></span> <span data-ttu-id="1f230-124">Un <xref:System.Resources.ResourceReader> objeto puede representar un archivo .resources independiente o un archivo .resources que se han incrustado en un ensamblado.</span><span class="sxs-lookup"><span data-stu-id="1f230-124">A <xref:System.Resources.ResourceReader> object can represent either a standalone .resources file or a .resources file that has been embedded in an assembly.</span></span>  
  
 <span data-ttu-id="1f230-125">Para crear instancias de un <xref:System.Resources.ResourceReader> objeto que lee desde un archivo .resources independiente, utilice la <xref:System.Resources.ResourceReader> constructor de clase con un flujo de entrada o una cadena que contiene el nombre del archivo .resources.</span><span class="sxs-lookup"><span data-stu-id="1f230-125">To instantiate a <xref:System.Resources.ResourceReader> object that reads from a standalone .resources file, use the <xref:System.Resources.ResourceReader> class constructor with either an input stream or a string that contains the .resources file name.</span></span> <span data-ttu-id="1f230-126">En el ejemplo siguiente se muestra ambos enfoques.</span><span class="sxs-lookup"><span data-stu-id="1f230-126">The following example illustrates both approaches.</span></span> <span data-ttu-id="1f230-127">Crea una instancia de la primera un <xref:System.Resources.ResourceReader> objeto que representa un archivo .resources denominado `Resources1.resources` mediante su nombre de archivo.</span><span class="sxs-lookup"><span data-stu-id="1f230-127">The first instantiates a <xref:System.Resources.ResourceReader> object that represents a .resources file named `Resources1.resources` by using its file name.</span></span> <span data-ttu-id="1f230-128">Crea una instancia de la segunda un <xref:System.Resources.ResourceReader> objeto que representa un archivo .resources denominado `Resources2.resources` mediante el uso de una secuencia que se crea a partir del archivo.</span><span class="sxs-lookup"><span data-stu-id="1f230-128">The second instantiates a <xref:System.Resources.ResourceReader> object that represents a .resources file named `Resources2.resources` by using a stream created from the file.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/ctor1.cs#2)]
 [!code-vb[System.Resources.ResourceReader.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/ctor1.vb#2)]  
  
 <span data-ttu-id="1f230-129">Para crear un <xref:System.Resources.ResourceReader> crear una instancia de objeto que representa un archivo .resources incrustado, un <xref:System.Reflection.Assembly> objeto desde el ensamblado en el que se incrusta el archivo .resources.</span><span class="sxs-lookup"><span data-stu-id="1f230-129">To create a <xref:System.Resources.ResourceReader> object that represents an embedded .resources file, instantiate an <xref:System.Reflection.Assembly> object from the assembly in which the .resources file is embedded.</span></span> <span data-ttu-id="1f230-130">Su <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> método devuelve un <xref:System.IO.Stream> objeto que puede pasarse a la <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span><span class="sxs-lookup"><span data-stu-id="1f230-130">Its <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> method returns a <xref:System.IO.Stream> object that can be passed to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span> <span data-ttu-id="1f230-131">El ejemplo siguiente crea un <xref:System.Resources.ResourceReader> objeto que representa un archivo .resources incrustado.</span><span class="sxs-lookup"><span data-stu-id="1f230-131">The following example instantiates a <xref:System.Resources.ResourceReader> object that represents an embedded .resources file.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/ctor1.cs#3)]
 [!code-vb[System.Resources.ResourceReader.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/ctor1.vb#3)]  
  
<a name="enumerate"></a>   
## <a name="enumerating-a-resourcereader-objects-resources"></a><span data-ttu-id="1f230-132">Enumerar los recursos de un objeto ResourceReader</span><span class="sxs-lookup"><span data-stu-id="1f230-132">Enumerating a ResourceReader Object's Resources</span></span>  
 <span data-ttu-id="1f230-133">Para enumerar los recursos en un archivo .resources, se llama a la <xref:System.Resources.ResourceReader.GetEnumerator%2A> método, que devuelve un <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> objeto.</span><span class="sxs-lookup"><span data-stu-id="1f230-133">To enumerate the resources in a .resources file, you call the <xref:System.Resources.ResourceReader.GetEnumerator%2A> method, which returns an <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> object.</span></span> <span data-ttu-id="1f230-134">Se llama a la `IDictionaryEnumerator.MoveNext` método para mover de un recurso a la siguiente.</span><span class="sxs-lookup"><span data-stu-id="1f230-134">You call the `IDictionaryEnumerator.MoveNext` method to move from one resource to the next.</span></span> <span data-ttu-id="1f230-135">El método devuelve `false` cuando se han enumerado todos los recursos en el archivo .resources.</span><span class="sxs-lookup"><span data-stu-id="1f230-135">The method returns `false` when all the resources in the .resources file have been enumerated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1f230-136">Aunque la <xref:System.Resources.ResourceReader> la clase implementa la <xref:System.Collections.IEnumerable> interfaz y la <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> método, el <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> método no proporciona el <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> implementación.</span><span class="sxs-lookup"><span data-stu-id="1f230-136">Although the <xref:System.Resources.ResourceReader> class implements the <xref:System.Collections.IEnumerable> interface and the <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> method, the <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> method does not provide the <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="1f230-137">En su lugar, el <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> método devuelve un <xref:System.Collections.IDictionaryEnumerator> objeto de interfaz que proporciona acceso al par de nombre/valor de cada recurso.</span><span class="sxs-lookup"><span data-stu-id="1f230-137">Instead, the <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> method  returns an <xref:System.Collections.IDictionaryEnumerator> interface object that provides access to each resource's name/value pair.</span></span>  
  
 <span data-ttu-id="1f230-138">Puede recuperar los recursos individuales de la colección de dos maneras:</span><span class="sxs-lookup"><span data-stu-id="1f230-138">You can retrieve the individual resources in the collection in two ways:</span></span>  
  
-   <span data-ttu-id="1f230-139">Puede recorrer en iteración cada recurso en el <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> recopilación y uso <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> propiedades para recuperar el nombre del recurso y el valor.</span><span class="sxs-lookup"><span data-stu-id="1f230-139">You can iterate each resource in the <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> collection and use <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> properties to retrieve the resource name and value.</span></span> <span data-ttu-id="1f230-140">Se recomienda esta técnica cuando todos los recursos son del mismo tipo, o sabe el tipo de datos de cada recurso.</span><span class="sxs-lookup"><span data-stu-id="1f230-140">We recommend this technique when all the resources are of the same type, or you know the data type of each resource.</span></span>  
  
-   <span data-ttu-id="1f230-141">Puede recuperar el nombre de cada recurso cuando se recorra en el <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> colección y llame al método el <xref:System.Resources.ResourceReader.GetResourceData%2A> método para recuperar los datos del recurso.</span><span class="sxs-lookup"><span data-stu-id="1f230-141">You can retrieve the name of each resource when you iterate the <xref:System.Collections.IDictionaryEnumerator?displayProperty=nameWithType> collection and call the <xref:System.Resources.ResourceReader.GetResourceData%2A> method to retrieve the resource's data.</span></span> <span data-ttu-id="1f230-142">Se recomienda este enfoque cuando no se conoce el tipo de datos de cada recurso o si el enfoque anterior genera una excepción.</span><span class="sxs-lookup"><span data-stu-id="1f230-142">We recommend this approach when you do not know the data type of each resource or if the previous approach throws exceptions.</span></span>  
  
<a name="idictionaryenumerator"></a>   
### <a name="retrieving-resources-by-using-idictionaryenumerator-properties"></a><span data-ttu-id="1f230-143">Recuperar recursos mediante propiedades IDictionaryEnumerator</span><span class="sxs-lookup"><span data-stu-id="1f230-143">Retrieving Resources by Using IDictionaryEnumerator Properties</span></span>  
 <span data-ttu-id="1f230-144">El primer método de enumerar los recursos en un archivo .resources implica recuperar directamente el par de nombre/valor de cada recurso.</span><span class="sxs-lookup"><span data-stu-id="1f230-144">The first method of enumerating the resources in a .resources file involves directly retrieving each resource's name/value pair.</span></span> <span data-ttu-id="1f230-145">Después de llamar a la `IDictionaryEnumerator.MoveNext` nombre de método para desplazarse a cada recurso de la colección, se puede recuperar el recurso de la <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> propiedad y los datos de recursos de la <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="1f230-145">After you call the `IDictionaryEnumerator.MoveNext` method to move to each resource in the collection, you can retrieve the resource name from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property and the resource data from the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="1f230-146">En el ejemplo siguiente se muestra cómo recuperar el nombre y valor de cada recurso en un archivo .resources mediante el uso de la <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> y <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> propiedades.</span><span class="sxs-lookup"><span data-stu-id="1f230-146">The following example shows how to retrieve the name and value of each resource in a .resources file by using the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> and <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="1f230-147">Para ejecutar el ejemplo, cree el siguiente archivo de texto denominado ApplicationResources.txt para definir recursos de cadena.</span><span class="sxs-lookup"><span data-stu-id="1f230-147">To run the example, create the following text file named ApplicationResources.txt to define string resources.</span></span>  
  
```  
Title="Contact Information"  
Label1="First Name:"  
Label2="Middle Name:"  
Label3="Last Name:"  
Label4="SSN:"  
Label5="Street Address:"  
Label6="City:"  
Label7="State:"  
Label8="Zip Code:"  
Label9="Home Phone:"  
Label10="Business Phone:"  
Label11="Mobile Phone:"  
Label12="Other Phone:"  
Label13="Fax:"  
Label14="Email Address:"  
Label15="Alternate Email Address:"  
```  
  
 <span data-ttu-id="1f230-148">A continuación, puede convertir el archivo de recursos de texto a un archivo binario denominado ApplicationResources.resources mediante el comando siguiente:</span><span class="sxs-lookup"><span data-stu-id="1f230-148">You can then convert the text resource file to a binary file named ApplicationResources.resources by using the following command:</span></span>  
  
 <span data-ttu-id="1f230-149">**Resgen ApplicationResources.txt**</span><span class="sxs-lookup"><span data-stu-id="1f230-149">**resgen ApplicationResources.txt**</span></span>  
  
 <span data-ttu-id="1f230-150">El ejemplo siguiente, a continuación, utiliza el <xref:System.Resources.ResourceReader> clase para enumerar cada recurso en el archivo binario .resources independiente y mostrar el nombre de la clave y el valor correspondiente.</span><span class="sxs-lookup"><span data-stu-id="1f230-150">The following example then uses the <xref:System.Resources.ResourceReader> class to enumerate each resource in the standalone binary .resources file and to display its key name and corresponding value.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/class1.cs#1)]
 [!code-vb[System.Resources.ResourceReader.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/class1.vb#1)]  
  
 <span data-ttu-id="1f230-151">Al intentar recuperar datos de recursos de la <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> propiedad puede producir las excepciones siguientes:</span><span class="sxs-lookup"><span data-stu-id="1f230-151">The attempt to retrieve resource data from the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property can throw the following exceptions:</span></span>  
  
-   <span data-ttu-id="1f230-152">A <xref:System.FormatException> si los datos no están en el formato esperado.</span><span class="sxs-lookup"><span data-stu-id="1f230-152">A <xref:System.FormatException> if the data is not in the expected format.</span></span>  
  
-   <span data-ttu-id="1f230-153">A <xref:System.IO.FileNotFoundException> si no se encuentra el ensamblado que contiene el tipo al que pertenecen los datos.</span><span class="sxs-lookup"><span data-stu-id="1f230-153">A <xref:System.IO.FileNotFoundException> if the assembly that contains the type to which the data belongs cannot be found.</span></span>  
  
-   <span data-ttu-id="1f230-154">A <xref:System.TypeLoadException> si no puede ser el tipo al que pertenecen los datos no se encuentra.</span><span class="sxs-lookup"><span data-stu-id="1f230-154">A <xref:System.TypeLoadException> if the type to which the data belongs cannot be cannot be found.</span></span>  
  
 <span data-ttu-id="1f230-155">Normalmente, estas excepciones se producen si el archivo .resources se ha modificado manualmente, si el ensamblado en el que se define un tipo ha no se han incluido con una aplicación o se ha eliminado accidentalmente, o si el ensamblado es una versión anterior anterior un tipo.</span><span class="sxs-lookup"><span data-stu-id="1f230-155">Typically, these exceptions are thrown if the .resources file has been modified manually, if the assembly in which a type is defined has either not been included with an application or has been inadvertently deleted, or if the assembly is an older version that predates a type.</span></span> <span data-ttu-id="1f230-156">Si se produce una de estas excepciones, puede recuperar recursos enumerar cada recurso y llamando a la <xref:System.Resources.ResourceReader.GetResourceData%2A> método, tal como se muestra en la siguiente sección.</span><span class="sxs-lookup"><span data-stu-id="1f230-156">If one of these exceptions is thrown, you can retrieve resources by enumerating each resource and calling the <xref:System.Resources.ResourceReader.GetResourceData%2A> method, as the following section shows.</span></span> <span data-ttu-id="1f230-157">Este enfoque proporciona escribe información acerca de los datos del <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> propiedad intenta devolver.</span><span class="sxs-lookup"><span data-stu-id="1f230-157">This approach provides you with some information about the data type that the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property attempted to return.</span></span>  
  
<a name="getresourcedata"></a>   
### <a name="retrieving-resources-by-name-with-getresourcedata"></a><span data-ttu-id="1f230-158">Recuperar recursos por el nombre con GetResourceData</span><span class="sxs-lookup"><span data-stu-id="1f230-158">Retrieving Resources by Name with GetResourceData</span></span>  
 <span data-ttu-id="1f230-159">El segundo enfoque para enumerar los recursos en un archivo .resources también implica desplazarse por los recursos en el archivo mediante una llamada a la `IDictionaryEnumerator.MoveNext` método.</span><span class="sxs-lookup"><span data-stu-id="1f230-159">The second approach to enumerating resources in a .resources file also involves navigating through the resources in the file by calling the `IDictionaryEnumerator.MoveNext` method.</span></span> <span data-ttu-id="1f230-160">Para cada recurso, recuperar el nombre del recurso de la <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> propiedad, que se pasa a continuación el <xref:System.Resources.ResourceReader.GetResourceData%28System.String%2CSystem.String%40%2CSystem.Byte%5B%5D%40%29> método para recuperar los datos del recurso.</span><span class="sxs-lookup"><span data-stu-id="1f230-160">For each resource, you retrieve the resource's name from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property, which is then passed to the <xref:System.Resources.ResourceReader.GetResourceData%28System.String%2CSystem.String%40%2CSystem.Byte%5B%5D%40%29> method to retrieve the resource's data.</span></span> <span data-ttu-id="1f230-161">Esto se devuelve como una matriz de bytes en el `resourceData` argumento.</span><span class="sxs-lookup"><span data-stu-id="1f230-161">This is returned as a byte array in the `resourceData` argument.</span></span>  
  
 <span data-ttu-id="1f230-162">Este enfoque es más difícil que recuperar el nombre del recurso y el valor de la <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> y <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> propiedades, porque devuelve la cantidad real de bytes que forman el valor del recurso.</span><span class="sxs-lookup"><span data-stu-id="1f230-162">This approach is more awkward than retrieving the resource name and value from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> and <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> properties, because it returns the actual bytes that form the resource value.</span></span> <span data-ttu-id="1f230-163">Sin embargo, si el intento de recuperar el recurso produce una excepción, el <xref:System.Resources.ResourceReader.GetResourceData%2A> método puede ayudar a identificar el origen de la excepción proporcionando información sobre el tipo de datos del recurso.</span><span class="sxs-lookup"><span data-stu-id="1f230-163">However, if the attempt to retrieve the resource throws an exception, the <xref:System.Resources.ResourceReader.GetResourceData%2A> method can help identify the source of the exception by supplying information about the resource's data type.</span></span> <span data-ttu-id="1f230-164">Para obtener más información acerca de la cadena que indica el tipo de datos del recurso, vea <xref:System.Resources.ResourceReader.GetResourceData%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f230-164">For more information about the string that indicates the resource's data type, see <xref:System.Resources.ResourceReader.GetResourceData%2A>.</span></span>  
  
 <span data-ttu-id="1f230-165">En el ejemplo siguiente se muestra cómo utilizar este enfoque para recuperar los recursos y para controlar las excepciones que se producen.</span><span class="sxs-lookup"><span data-stu-id="1f230-165">The following example illustrates how to use this approach to retrieve resources and to handle any exceptions that are thrown.</span></span> <span data-ttu-id="1f230-166">Crea mediante programación un archivo .resources binario que contiene cuatro cadenas, un valor booleano, un número entero, un mapa de bits y uno personalizado `DateTimeTZI` objeto.</span><span class="sxs-lookup"><span data-stu-id="1f230-166">It programmatically creates a binary .resources file that contains four strings, one Boolean, one integer, one bitmap, and one custom `DateTimeTZI` object.</span></span> <span data-ttu-id="1f230-167">Para ejecutar el ejemplo, haga lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="1f230-167">To run the example, do the following:</span></span>  
  
1.  <span data-ttu-id="1f230-168">Crear un ensamblado denominado Library.dll que contiene el `DateTimeTZI` estructura.</span><span class="sxs-lookup"><span data-stu-id="1f230-168">Create an assembly named Library.dll that contains the `DateTimeTZI` structure.</span></span> <span data-ttu-id="1f230-169">Éste es el código fuente para el ensamblado.</span><span class="sxs-lookup"><span data-stu-id="1f230-169">The following is the source code for the assembly.</span></span>  
  
     [!code-csharp[System.Resources.ResourceReader.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/library.cs#4)]
     [!code-vb[System.Resources.ResourceReader.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/library.vb#4)]  
  
     <span data-ttu-id="1f230-170">Compile el código fuente de C# mediante el comando siguiente:</span><span class="sxs-lookup"><span data-stu-id="1f230-170">Compile the source code in C# by using the following command:</span></span>  
  
    ```  
    csc /t:library library.cs  
    ```  
  
     <span data-ttu-id="1f230-171">O bien, puede compilar en Visual Basic mediante el comando siguiente:</span><span class="sxs-lookup"><span data-stu-id="1f230-171">Or, you can compile it in Visual Basic by using the following command:</span></span>  
  
    ```  
    vbc library.vb /t:library  
    ```  
  
2.  <span data-ttu-id="1f230-172">Compile y ejecute el siguiente código fuente, lo que crea un archivo .resources denominado ContactResources.resources.</span><span class="sxs-lookup"><span data-stu-id="1f230-172">Compile and execute the following source code, which creates a .resources file named ContactResources.resources.</span></span>  
  
     [!code-csharp[System.Resources.ResourceReader.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/createresourceex1.cs#5)]
     [!code-vb[System.Resources.ResourceReader.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/createresourceex1.vb#5)]  
  
     <span data-ttu-id="1f230-173">El archivo de código fuente se denomina CreateResources.cs.</span><span class="sxs-lookup"><span data-stu-id="1f230-173">The source code file is named CreateResources.cs.</span></span> <span data-ttu-id="1f230-174">Puede compilar en C# mediante el comando siguiente:</span><span class="sxs-lookup"><span data-stu-id="1f230-174">You can compile it in C# by using the following command:</span></span>  
  
    ```  
    csc CreateResources.cs /r:library.dll  
    ```  
  
     <span data-ttu-id="1f230-175">O bien, puede compilar en Visual Basic mediante el comando siguiente:</span><span class="sxs-lookup"><span data-stu-id="1f230-175">Or, you can compile it in Visual Basic by using the following command:</span></span>  
  
    ```  
    vbc CreateResources.vb /r:library.dll  
    ```  
  
3.  <span data-ttu-id="1f230-176">Compile y ejecute el código siguiente para enumerar los recursos en el archivo ContactResources.resources.</span><span class="sxs-lookup"><span data-stu-id="1f230-176">Compile and run the following code to enumerate the resources in the ContactResources.resources file.</span></span>  
  
     [!code-csharp[System.Resources.ResourceReader.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.class/cs/readresourceex1.cs#6)]
     [!code-vb[System.Resources.ResourceReader.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.class/vb/readresourceex1.vb#6)]  
  
     <span data-ttu-id="1f230-177">Después de modificar el código fuente (por ejemplo, al lanzar deliberadamente una <xref:System.FormatException> al final de la `try` bloque) o cambiar el nombre del ensamblado Library.dll para que esté disponible en tiempo de ejecución, puede ejecutar el ejemplo para ver cómo las llamadas a <xref:System.Resources.ResourceReader.GetResourceData%2A> permiten recuperar o volver a crear información de recursos.</span><span class="sxs-lookup"><span data-stu-id="1f230-177">After modifying the source code (for example, by deliberately throwing a <xref:System.FormatException> at the end of the `try` block) or renaming the Library.dll assembly so that it is unavailable at runtime, you can run the example to see how calls to <xref:System.Resources.ResourceReader.GetResourceData%2A> enable you to retrieve or recreate some resource information.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f230-178">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-178">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="1f230-179">Usar una instancia de este objeto con datos no es de confianza es un riesgo de seguridad.</span><span class="sxs-lookup"><span data-stu-id="1f230-179">Using an instance of this object with untrusted data is a security risk.</span></span> <span data-ttu-id="1f230-180">Use este objeto solo con datos de confianza.</span><span class="sxs-lookup"><span data-stu-id="1f230-180">Use this object only with trusted data.</span></span> <span data-ttu-id="1f230-181">Para obtener más información, consulte [validación de datos](https://www.owasp.org/index.php/Data_Validation).</span><span class="sxs-lookup"><span data-stu-id="1f230-181">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceReader (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceReader(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceReader : System.IO.Stream -&gt; System.Resources.ResourceReader" Usage="new System.Resources.ResourceReader stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="1f230-182">The input stream for reading resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-182">The input stream for reading resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f230-183">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class for the specified stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-183">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class for the specified stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f230-184">El <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor crea un <xref:System.Resources.ResourceReader> objeto que recupera los recursos desde un archivo .resources independiente o desde un archivo .resources archivo que está incrustado en un ensamblado.</span><span class="sxs-lookup"><span data-stu-id="1f230-184">The <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor instantiates a <xref:System.Resources.ResourceReader> object that retrieves resources either from a standalone .resources file or from a .resources file that is embedded in an assembly.</span></span> <span data-ttu-id="1f230-185">Para leer de un archivo .resources independiente, crear una instancia de un <xref:System.IO.Stream> objeto y lo pasa a la <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span><span class="sxs-lookup"><span data-stu-id="1f230-185">To read from a standalone .resources file, instantiate a <xref:System.IO.Stream> object and pass it to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span> <span data-ttu-id="1f230-186">Para leer desde un archivo .resources incrustado, llame a la <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> método con el nombre del archivo .resources y pase el valor devuelto entre mayúsculas y minúsculas <xref:System.IO.Stream> el objeto a la <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span><span class="sxs-lookup"><span data-stu-id="1f230-186">To read from an embedded .resources file, call the <xref:System.Reflection.Assembly.GetManifestResourceStream%2A?displayProperty=nameWithType> method with the case-sensitive name of the .resources file, and pass the returned <xref:System.IO.Stream> object to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1f230-187">Usar una instancia de este objeto con datos no es de confianza es un riesgo de seguridad.</span><span class="sxs-lookup"><span data-stu-id="1f230-187">Using an instance of this object with untrusted data is a security risk.</span></span> <span data-ttu-id="1f230-188">Use este objeto solo con datos de confianza.</span><span class="sxs-lookup"><span data-stu-id="1f230-188">Use this object only with trusted data.</span></span> <span data-ttu-id="1f230-189">Para obtener más información, consulte [validación de datos](https://www.owasp.org/index.php/Data_Validation).</span><span class="sxs-lookup"><span data-stu-id="1f230-189">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f230-190">El ejemplo de esta sección usa el siguiente archivo .txt denominado `PatientForm.txt` para definir los recursos utilizados por una aplicación.</span><span class="sxs-lookup"><span data-stu-id="1f230-190">The example in this section uses the following .txt file named `PatientForm.txt` to define the resources used by an application.</span></span>  
  
```  
  
Title="Top Pet Animal Clinic"  
Label1="Patient Number:"  
Label2="Pet Name:"  
Label3="Species:"  
Label4="Breed:"  
Label5="Date of Birth:"  
Label6="Age:"  
Label7="Owner:"  
Label8="Address:"  
Label9="Home Phone:"  
Label10="Work Phone:"  
Label11="Mobile Phone:"  
  
```  
  
 <span data-ttu-id="1f230-191">Puede compilar el archivo .txt en un archivo .resources emitiendo el comando siguiente:</span><span class="sxs-lookup"><span data-stu-id="1f230-191">You can compile the .txt file into a .resources file by issuing the following command:</span></span>  
  
 <span data-ttu-id="1f230-192">**Resgen PatientForm.txt**</span><span class="sxs-lookup"><span data-stu-id="1f230-192">**resgen PatientForm.txt**</span></span>  
  
 <span data-ttu-id="1f230-193">En el siguiente ejemplo se da por supuesto que el archivo de recursos está incrustado en el ensamblado que contiene código ejecutable de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="1f230-193">The following example assumes that the resource file is embedded in the assembly that contains the application's executable code.</span></span> <span data-ttu-id="1f230-194">Recupera un archivo de recursos denominado `PatientForm.resources` desde los ensamblados que se está ejecutando actualmente y muestra el nombre y valor de cada uno de sus recursos.</span><span class="sxs-lookup"><span data-stu-id="1f230-194">It retrieves a resource file named `PatientForm.resources` from the currently executing assemblies and displays the name and value of each of its resources.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/cs/stream1.cs#1)]
 [!code-vb[System.Resources.ResourceReader.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/vb/stream1.vb#1)]  
  
 <span data-ttu-id="1f230-195">Si el ejemplo de C# se denomina `Example.cs`, puede compilar mediante el comando siguiente:</span><span class="sxs-lookup"><span data-stu-id="1f230-195">If the C# example is named `Example.cs`, you can compile it by using the following command:</span></span>  
  
 <span data-ttu-id="1f230-196">**csc Example.cs /res:PatientForm.resources**</span><span class="sxs-lookup"><span data-stu-id="1f230-196">**csc Example.cs /res:PatientForm.resources**</span></span>  
  
 <span data-ttu-id="1f230-197">Si el ejemplo de Visual Basic se denomina `Example.vb`, puede compilar mediante el comando siguiente:</span><span class="sxs-lookup"><span data-stu-id="1f230-197">If the Visual Basic example is named `Example.vb`, you can compile it by using the following command:</span></span>  
  
 <span data-ttu-id="1f230-198">**vbc Example.vb /res:PatientForm.resources**</span><span class="sxs-lookup"><span data-stu-id="1f230-198">**vbc Example.vb /res:PatientForm.resources**</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1f230-199">The <paramref name="stream" /> parameter is not readable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-199">The <paramref name="stream" /> parameter is not readable.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1f230-200">The <paramref name="stream" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-200">The <paramref name="stream" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1f230-201">An I/O error has occurred while accessing <paramref name="stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-201">An I/O error has occurred while accessing <paramref name="stream" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="1f230-202">para proporcionar servicios de serialización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-202">for providing serialization services.</span>
          </span>
          <span data-ttu-id="1f230-203">Acción de seguridad: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-203">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="1f230-204">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-204">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /></span>
          </span>
        </permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="1f230-205">Requiere plena confianza para el llamador inmediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-205">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="1f230-206">Este miembro no puede usarse por código de confianza parcial o transparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-206">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceReader (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceReader(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceReader : string -&gt; System.Resources.ResourceReader" Usage="new System.Resources.ResourceReader fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="1f230-207">The path and name of the resource file to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-207">The path and name of the resource file to read.</span>
          </span>
          <span data-ttu-id="1f230-208">
            <c>filename</c> is not case-sensitive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-208">
              <c>filename</c> is not case-sensitive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f230-209">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class for the specified named resource file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-209">Initializes a new instance of the <see cref="T:System.Resources.ResourceReader" /> class for the specified named resource file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f230-210">El <xref:System.Resources.ResourceReader.%23ctor%28System.String%29> constructor crea un <xref:System.Resources.ResourceReader> objeto que recupera los recursos de un archivo .resources independiente.</span><span class="sxs-lookup"><span data-stu-id="1f230-210">The <xref:System.Resources.ResourceReader.%23ctor%28System.String%29> constructor instantiates a <xref:System.Resources.ResourceReader> object that retrieves resources from a standalone .resources file.</span></span> <span data-ttu-id="1f230-211">Para recuperar recursos de un archivo .resources incrustado, utilice la <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span><span class="sxs-lookup"><span data-stu-id="1f230-211">To retrieve resources from an embedded .resources file, use the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29> constructor.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1f230-212">Usar una instancia de este objeto con datos no es de confianza es un riesgo de seguridad.</span><span class="sxs-lookup"><span data-stu-id="1f230-212">Using an instance of this object with untrusted data is a security risk.</span></span> <span data-ttu-id="1f230-213">Use este objeto solo con datos de confianza.</span><span class="sxs-lookup"><span data-stu-id="1f230-213">Use this object only with trusted data.</span></span> <span data-ttu-id="1f230-214">Para obtener más información, consulte [validación de datos](https://www.owasp.org/index.php/Data_Validation).</span><span class="sxs-lookup"><span data-stu-id="1f230-214">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f230-215">El ejemplo de esta sección usa el siguiente archivo .txt denominado `PatientForm.txt` para definir los recursos utilizados por una aplicación.</span><span class="sxs-lookup"><span data-stu-id="1f230-215">The example in this section uses the following .txt file named `PatientForm.txt` to define the resources used by an application.</span></span>  
  
```  
  
Title="Top Pet Animal Clinic"  
Label1="Patient Number:"  
Label2="Pet Name:"  
Label3="Species:"  
Label4="Breed:"  
Label5="Date of Birth:"  
Label6="Age:"  
Label7="Owner:"  
Label8="Address:"  
Label9="Home Phone:"  
Label10="Work Phone:"  
Label11="Mobile Phone:"  
  
```  
  
 <span data-ttu-id="1f230-216">Puede compilar este archivo .txt en un archivo .resources emitiendo el comando siguiente:</span><span class="sxs-lookup"><span data-stu-id="1f230-216">You can compile this .txt file into a .resources file by issuing the following command:</span></span>  
  
 <span data-ttu-id="1f230-217">**Resgen PatientForm.txt**</span><span class="sxs-lookup"><span data-stu-id="1f230-217">**resgen PatientForm.txt**</span></span>  
  
 <span data-ttu-id="1f230-218">En el ejemplo siguiente se enumeran los recursos de `PatientForm.resources` y muestra el nombre y valor de cada uno.</span><span class="sxs-lookup"><span data-stu-id="1f230-218">The following example enumerates the resources in `PatientForm.resources` and displays the name and value of each.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/cs/stream2.cs#2)]
 [!code-vb[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/vb/stream2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1f230-219">The <paramref name="fileName" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-219">The <paramref name="fileName" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="1f230-220">The file cannot be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-220">The file cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="1f230-221">An I/O error has occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-221">An I/O error has occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1f230-222">The resource file has an invalid format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-222">The resource file has an invalid format.</span>
          </span>
          <span data-ttu-id="1f230-223">For example, the length of the file may be zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-223">For example, the length of the file may be zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="resourceReader.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceReader.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1f230-224">Releases all operating system resources associated with this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-224">Releases all operating system resources associated with this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f230-225"><xref:System.Resources.ResourceReader.Close%2A> puede llamarse de forma segura varias veces.</span><span class="sxs-lookup"><span data-stu-id="1f230-225"><xref:System.Resources.ResourceReader.Close%2A> can be safely called multiple times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f230-226">En el ejemplo siguiente se mueve a través de recursos de un archivo y muestra todos los pares de clave/valor que busca.</span><span class="sxs-lookup"><span data-stu-id="1f230-226">The following example moves through a file's resources and displays all the key/value pairs it finds.</span></span> <span data-ttu-id="1f230-227">El código utiliza el <xref:System.Resources.ResourceReader.Close%2A> método para cerrar la <xref:System.Resources.ResourceReader> y liberar todos los recursos usados por el mismo.</span><span class="sxs-lookup"><span data-stu-id="1f230-227">The code then uses the <xref:System.Resources.ResourceReader.Close%2A> method to shut down the <xref:System.Resources.ResourceReader> and to release all resources used by it.</span></span>  
  
 [!code-cpp[System.Resources.ResourceReader.GetEnumerator Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceReader.GetEnumerator Example/CPP/getenumerator.cpp#1)]
 [!code-csharp[System.Resources.ResourceReader.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceReader.GetEnumerator Example/CS/getenumerator.cs#1)]
 [!code-vb[System.Resources.ResourceReader.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceReader.GetEnumerator Example/VB/getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="resourceReader.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1f230-228">Releases all resources used by the current instance of the <see cref="T:System.Resources.ResourceReader" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-228">Releases all resources used by the current instance of the <see cref="T:System.Resources.ResourceReader" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f230-229">Cuando haya terminado de usar esta instancia de <xref:System.Resources.ResourceReader>, llame a <xref:System.Resources.ResourceReader.Dispose%2A> para liberar todos los recursos usados por esta instancia.</span><span class="sxs-lookup"><span data-stu-id="1f230-229">When you are finished using this instance of <xref:System.Resources.ResourceReader>, call <xref:System.Resources.ResourceReader.Dispose%2A> to release all resources used by this instance.</span></span> <span data-ttu-id="1f230-230">Debe eliminar las demás referencias a este <xref:System.Resources.ResourceReader> para que el recolector de elementos no utilizados pueda reclamar la memoria de la instancia en lugar de mantener activo para la finalización de la instancia.</span><span class="sxs-lookup"><span data-stu-id="1f230-230">You should eliminate further references to this <xref:System.Resources.ResourceReader> instance so that the garbage collector can reclaim the memory of the instance instead of keeping it alive for finalization.</span></span>  
  
 <span data-ttu-id="1f230-231"><xref:System.Resources.ResourceReader.Dispose%2A> llama al método Dispose (Boolean) privado, que contiene el código para liberar recursos no administrados y no administrados.</span><span class="sxs-lookup"><span data-stu-id="1f230-231"><xref:System.Resources.ResourceReader.Dispose%2A> calls the private Dispose(Boolean) method, which contains the code to release managed and unmanaged resources.</span></span> <span data-ttu-id="1f230-232">Para obtener más información, consulte [implementa un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="1f230-232">For more information, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="resourceReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Resources.IResourceReader.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Resources.Reader</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1f230-233">Returns an enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-233">Returns an enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f230-234">An enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-234">An enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f230-235">Por lo general, enumerar los recursos mediante una llamada a la <xref:System.Resources.ResourceReader.GetEnumerator%2A> método y, a continuación, al llamar repetidamente la <xref:System.Collections.IEnumerator.MoveNext%2A> método en el valor devuelto <xref:System.Collections.IDictionaryEnumerator> objeto hasta que el método devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="1f230-235">Typically, you enumerate resources by calling the <xref:System.Resources.ResourceReader.GetEnumerator%2A> method and then repeatedly calling the <xref:System.Collections.IEnumerator.MoveNext%2A> method on the returned <xref:System.Collections.IDictionaryEnumerator> object until the method returns `false`.</span></span> <span data-ttu-id="1f230-236">El nombre de recurso está disponible desde el <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> propiedad; su valor desde el <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="1f230-236">The resource name is available from the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property; its value from the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="1f230-237">En el ejemplo se muestra cómo enumerar los recursos de esta manera.</span><span class="sxs-lookup"><span data-stu-id="1f230-237">The example illustrates how to enumerate resources in this way.</span></span>  
  
 <span data-ttu-id="1f230-238">La implementación de la <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> propiedad por la <xref:System.Resources.ResourceReader> puede producir las excepciones siguientes:</span><span class="sxs-lookup"><span data-stu-id="1f230-238">The implementation of the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property by the <xref:System.Resources.ResourceReader> class can throw the following exceptions:</span></span>  
  
-   <xref:System.IO.FileNotFoundException>  
  
     <span data-ttu-id="1f230-239">No se encuentra el ensamblado que contiene el tipo al que pertenecen los datos.</span><span class="sxs-lookup"><span data-stu-id="1f230-239">The assembly that contains the type to which the data belongs cannot be found.</span></span>  
  
-   <xref:System.FormatException>  
  
     <span data-ttu-id="1f230-240">Los datos no están en el formato esperado.</span><span class="sxs-lookup"><span data-stu-id="1f230-240">The data is not in the expected format.</span></span>  
  
-   <xref:System.TypeLoadException>  
  
     <span data-ttu-id="1f230-241">No se puede encontrar el tipo al que pertenecen los datos.</span><span class="sxs-lookup"><span data-stu-id="1f230-241">The type to which the data belongs cannot be found.</span></span>  
  
 <span data-ttu-id="1f230-242">Puede controlar la excepción mediante una llamada a la <xref:System.Resources.ResourceReader.GetResourceData%2A> método para recuperar información sobre el tipo de datos y la matriz de bytes que se asignan al recurso con nombre.</span><span class="sxs-lookup"><span data-stu-id="1f230-242">You can handle the exception by calling the <xref:System.Resources.ResourceReader.GetResourceData%2A> method to retrieve information about the data type and the byte array assigned to the named resource.</span></span> <span data-ttu-id="1f230-243">Para obtener más información, vea la sección "Recuperar recursos por nombre con GetResourceData" en el <xref:System.Resources.ResourceReader> tema de la clase.</span><span class="sxs-lookup"><span data-stu-id="1f230-243">For more information, see the "Retrieving Resources by Name with GetResourceData" section in the <xref:System.Resources.ResourceReader> class topic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1f230-244">La <xref:System.Resources.ResourceReader> clase incluye dos métodos que devuelven los enumeradores.</span><span class="sxs-lookup"><span data-stu-id="1f230-244">The <xref:System.Resources.ResourceReader> class includes two methods that return enumerators.</span></span> <span data-ttu-id="1f230-245">El <xref:System.Resources.ResourceReader.GetEnumerator%2A> método devuelve un <xref:System.Collections.IDictionaryEnumerator> objeto de la interfaz y es el método recomendado para llamar al enumerar los recursos.</span><span class="sxs-lookup"><span data-stu-id="1f230-245">The <xref:System.Resources.ResourceReader.GetEnumerator%2A> method returns an <xref:System.Collections.IDictionaryEnumerator> interface object and is the recommended method to call when enumerating resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f230-246">El ejemplo de esta sección usa el siguiente archivo .txt denominado `PatientForm.txt` para definir los recursos utilizados por una aplicación.</span><span class="sxs-lookup"><span data-stu-id="1f230-246">The example in this section uses the following .txt file named `PatientForm.txt` to define the resources used by an application.</span></span>  
  
```  
  
Title="Top Pet Animal Clinic"  
Label1="Patient Number:"  
Label2="Pet Name:"  
Label3="Species:"  
Label4="Breed:"  
Label5="Date of Birth:"  
Label6="Age:"  
Label7="Owner:"  
Label8="Address:"  
Label9="Home Phone:"  
Label10="Work Phone:"  
Label11="Mobile Phone:"  
  
```  
  
 <span data-ttu-id="1f230-247">Puede compilar el archivo .txt en un archivo .resources emitiendo el comando siguiente:</span><span class="sxs-lookup"><span data-stu-id="1f230-247">You can compile the .txt file into a .resources file by issuing the following command:</span></span>  
  
 <span data-ttu-id="1f230-248">**Resgen PatientForm.txt**</span><span class="sxs-lookup"><span data-stu-id="1f230-248">**resgen PatientForm.txt**</span></span>  
  
 <span data-ttu-id="1f230-249">En el ejemplo siguiente se enumeran los recursos de `PatientForm.resources` y muestra el nombre y valor de cada uno.</span><span class="sxs-lookup"><span data-stu-id="1f230-249">The following example enumerates the resources in `PatientForm.resources` and displays the name and value of each.</span></span>  
  
 [!code-csharp[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/cs/stream2.cs#2)]
 [!code-vb[System.Resources.ResourceReader.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resourcereader.ctor/vb/stream2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1f230-250">The reader has been closed or disposed, and cannot be accessed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-250">The reader has been closed or disposed, and cannot be accessed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetResourceData">
      <MemberSignature Language="C#" Value="public void GetResourceData (string resourceName, out string resourceType, out byte[] resourceData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetResourceData(string resourceName, [out] string&amp; resourceType, [out] unsigned int8[]&amp; resourceData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetResourceData (resourceName As String, ByRef resourceType As String, ByRef resourceData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetResourceData(System::String ^ resourceName, [Runtime::InteropServices::Out] System::String ^ % resourceType, [Runtime::InteropServices::Out] cli::array &lt;System::Byte&gt; ^ % resourceData);" />
      <MemberSignature Language="F#" Value="member this.GetResourceData : string *  *  -&gt; unit" Usage="resourceReader.GetResourceData (resourceName, resourceType, resourceData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="resourceType" Type="System.String&amp;" RefType="out" />
        <Parameter Name="resourceData" Type="System.Byte[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="resourceName">
          <span data-ttu-id="1f230-251">The name of a resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-251">The name of a resource.</span>
          </span>
        </param>
        <param name="resourceType">
          <span data-ttu-id="1f230-252">When this method returns, contains a string that represents the type name of the retrieved resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-252">When this method returns, contains a string that represents the type name of the retrieved resource.</span>
          </span>
          <span data-ttu-id="1f230-253">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-253">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="resourceData">
          <span data-ttu-id="1f230-254">When this method returns, contains a byte array that is the binary representation of the retrieved type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-254">When this method returns, contains a byte array that is the binary representation of the retrieved type.</span>
          </span>
          <span data-ttu-id="1f230-255">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-255">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f230-256">Retrieves the type name and data of a named resource from an open resource file or stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-256">Retrieves the type name and data of a named resource from an open resource file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f230-257">El <xref:System.Resources.ResourceReader.GetResourceData%2A> método recupera el valor de un recurso con nombre como una matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="1f230-257">The <xref:System.Resources.ResourceReader.GetResourceData%2A> method retrieves the value of a named resource as a byte array.</span></span> <span data-ttu-id="1f230-258">Suele utilizar cuando la <xref:System.Collections.IDictionaryEnumerator.Value%2A> propiedad produce una excepción cuando intenta recuperar el valor de un recurso.</span><span class="sxs-lookup"><span data-stu-id="1f230-258">It is typically used when the <xref:System.Collections.IDictionaryEnumerator.Value%2A> property throws an exception when it tries to retrieve the value of a resource.</span></span>  
  
 <span data-ttu-id="1f230-259">`resourceType` es una cadena que representa el tipo de datos del recurso.</span><span class="sxs-lookup"><span data-stu-id="1f230-259">`resourceType` is a string that represents the data type of the resource.</span></span> <span data-ttu-id="1f230-260">Puede ser cualquiera de los siguientes valores:</span><span class="sxs-lookup"><span data-stu-id="1f230-260">It can be any of the following values:</span></span>  
  
-   <span data-ttu-id="1f230-261">La representación de cadena de un `ResourceTypeCode` miembro de enumeración que indica el tipo de datos del recurso.</span><span class="sxs-lookup"><span data-stu-id="1f230-261">The string representation of a `ResourceTypeCode` enumeration member that indicates the data type of the resource.</span></span> <span data-ttu-id="1f230-262">`ResourceTypeCode` es una enumeración privada que se utiliza por .para indican que se usa un formato binario especial para almacenar uno de 19 tipos de datos comunes.</span><span class="sxs-lookup"><span data-stu-id="1f230-262">`ResourceTypeCode` is a private enumeration that is used by .to indicate that a special binary format is used to store one of 19 common data types.</span></span> <span data-ttu-id="1f230-263">Se incluyen los tipos de datos primitivos de .NET Framework (<xref:System.Boolean>, <xref:System.Byte>, <xref:System.Char>, <xref:System.Decimal>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Single>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>), así como <xref:System.String>, <xref:System.DateTime>, y <xref:System.TimeSpan>, además, la `ResourceTypeCode` enumeración incluye los valores mostrados en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="1f230-263">These include the .NET Framework primitive data types (<xref:System.Boolean>, <xref:System.Byte>, <xref:System.Char>, <xref:System.Decimal>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Single>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>), as well as <xref:System.String>, <xref:System.DateTime>, and <xref:System.TimeSpan>, In addition, the `ResourceTypeCode` enumeration includes the values shown in the following table.</span></span>  
  
    |<span data-ttu-id="1f230-264">Valor de ResourceTypeCode</span><span class="sxs-lookup"><span data-stu-id="1f230-264">ResourceTypeCode value</span></span>|<span data-ttu-id="1f230-265">Descripción</span><span class="sxs-lookup"><span data-stu-id="1f230-265">Description</span></span>|  
    |----------------------------|-----------------|  
    |`ResourceTypeCode.ByteArray`|<span data-ttu-id="1f230-266">Los datos son una matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="1f230-266">The data is a byte array.</span></span> <span data-ttu-id="1f230-267">Estos datos normalmente escribe los resultados de la llamada a la <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="1f230-267">This data type commonly results from the call to the <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Byte%5B%5D%29?displayProperty=nameWithType> method.</span></span>|  
    |`ResourceTypeCode.Null`|<span data-ttu-id="1f230-268">Los datos son una referencia nula.</span><span class="sxs-lookup"><span data-stu-id="1f230-268">The data is a null reference.</span></span> <span data-ttu-id="1f230-269">Estos datos normalmente escribe los resultados de la llamada a la <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29?displayProperty=nameWithType> método con un objeto cuyo valor es `null`.</span><span class="sxs-lookup"><span data-stu-id="1f230-269">This data type commonly results from the call to the <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.Object%29?displayProperty=nameWithType> method with an object whose value is `null`.</span></span>|  
    |`ResourceTypeCode.Stream`|<span data-ttu-id="1f230-270">Los datos se almacenan en una secuencia.</span><span class="sxs-lookup"><span data-stu-id="1f230-270">The data is stored in a stream.</span></span> <span data-ttu-id="1f230-271">Estos datos normalmente escribe los resultados de la llamada a la <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29?displayProperty=nameWithType> o <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="1f230-271">This data type commonly results from the call to the <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%29?displayProperty=nameWithType> or <xref:System.Resources.ResourceWriter.AddResource%28System.String%2CSystem.IO.Stream%2CSystem.Boolean%29?displayProperty=nameWithType> method.</span></span>|  
  
     <span data-ttu-id="1f230-272">Suponiendo que `resourceData` no ha sido dañado, normalmente se puede convertir de una matriz de bytes a su valor original mediante una llamada a un <xref:System.BitConverter> o <xref:System.IO.BinaryReader> método.</span><span class="sxs-lookup"><span data-stu-id="1f230-272">Assuming that `resourceData` has not been corrupted, it can usually be converted from a byte array back to its original value by calling a <xref:System.BitConverter> or <xref:System.IO.BinaryReader> method.</span></span>  
  
-   <span data-ttu-id="1f230-273">Una cadena que contiene el nombre completo del tipo cuyos datos serializados se asignan a la `resourceData` argumento (por ejemplo, `System.String`).</span><span class="sxs-lookup"><span data-stu-id="1f230-273">A string that contains the fully qualified name of the type whose serialized data is assigned to the `resourceData` argument (for example, `System.String`).</span></span> <span data-ttu-id="1f230-274">Además, para los tipos que no forman parte de la biblioteca de clases de .NET Framework, la cadena incluye el nombre, la versión, la referencia cultural y la clave pública del ensamblado que contiene el tipo.</span><span class="sxs-lookup"><span data-stu-id="1f230-274">In addition, for types that are not part of the .NET Framework class library, the string includes the name, version, culture, and public key of the assembly that contains the type.</span></span> <span data-ttu-id="1f230-275">Por ejemplo, la siguiente cadena indica que los datos serializados representan una instancia de la `Person` escriba en el `Extensions` espacio de nombres, que se encuentra en la versión 1.0 de un ensamblado denominado utilidad con ninguna clave pública y ninguna referencia cultural designada.</span><span class="sxs-lookup"><span data-stu-id="1f230-275">For example, the following string indicates that the serialized data represents an instance of the `Person` type in the `Extensions` namespace, which is found in version 1.0 of an assembly named Utility that has no public key and no designated culture.</span></span>  
  
     `Extensions.Person, Utility, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null`  
  
     <span data-ttu-id="1f230-276">Suponiendo que `resourceData` no se ha dañado y que el tipo de origen está disponible, `resourceData` se pueden convertir de una matriz de bytes a su valor original mediante la conversión de la matriz de bytes a una <xref:System.IO.Stream> objeto y se pasa a la secuencia a la <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=nameWithType>(método).</span><span class="sxs-lookup"><span data-stu-id="1f230-276">Assuming that `resourceData` has not been corrupted and that the source type is available, `resourceData` can be converted from a byte array back to its original value by converting the byte array to a <xref:System.IO.Stream> object and passing the stream to the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="1f230-277">La cadena que se usa para describir el tipo de datos en el <xref:System.Resources.ResourceWriter.AddResourceData%2A?displayProperty=nameWithType> llamada al método.</span><span class="sxs-lookup"><span data-stu-id="1f230-277">The string used to describe the data type in the <xref:System.Resources.ResourceWriter.AddResourceData%2A?displayProperty=nameWithType> method call.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1f230-278">
            <paramref name="resourceName" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-278">
              <paramref name="resourceName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1f230-279">
            <paramref name="resourceName" /> does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-279">
              <paramref name="resourceName" /> does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="1f230-280">
            <paramref name="resourceName" /> has an invalid type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-280">
              <paramref name="resourceName" /> has an invalid type.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1f230-281">The retrieved resource data is corrupt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-281">The retrieved resource data is corrupt.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1f230-282">The current <see cref="T:System.Resources.ResourceReader" /> object is not initialized, probably because it is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-282">The current <see cref="T:System.Resources.ResourceReader" /> object is not initialized, probably because it is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceReader.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1f230-283">Returns an enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-283">Returns an enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f230-284">An enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-284">An enumerator for this <see cref="T:System.Resources.ResourceReader" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f230-285"><xref:System.Resources.ResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=nameWithType> es una implementación de interfaz explícita.</span><span class="sxs-lookup"><span data-stu-id="1f230-285"><xref:System.Resources.ResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=nameWithType> is an explicit interface implementation.</span></span> <span data-ttu-id="1f230-286">Solo se puede utilizar cuando la instancia de <xref:System.Resources.ResourceReader> se convierte en una interfaz <xref:System.Collections.IEnumerable>.</span><span class="sxs-lookup"><span data-stu-id="1f230-286">It can be used only when the <xref:System.Resources.ResourceReader> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span> <span data-ttu-id="1f230-287">El método recomendado para enumerar los recursos en un archivo .resources es llamar a la <xref:System.Collections.IEnumerator.MoveNext%2A> método de la <xref:System.Collections.IDictionaryEnumerator> objeto devuelto por la <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="1f230-287">The recommended approach to enumerating the resources in a .resources file is to call the <xref:System.Collections.IEnumerator.MoveNext%2A> method of the <xref:System.Collections.IDictionaryEnumerator> object returned by the <xref:System.Resources.ResourceReader.GetEnumerator%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1f230-288">The reader has already been closed and cannot be accessed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f230-288">The reader has already been closed and cannot be accessed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
      </Docs>
    </Member>
  </Members>
</Type>