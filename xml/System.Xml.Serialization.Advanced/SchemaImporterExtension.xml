<Type Name="SchemaImporterExtension" FullName="System.Xml.Serialization.Advanced.SchemaImporterExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="37b5d4fa3551ef95c32afb509f1e03ae3525a360" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51876623" /></Metadata><TypeSignature Language="C#" Value="public abstract class SchemaImporterExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SchemaImporterExtension extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SchemaImporterExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class SchemaImporterExtension abstract" />
  <TypeSignature Language="F#" Value="type SchemaImporterExtension = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Le permite personalizar el código generado a partir de un documento del Lenguaje de descripción de servicios Web (WSDL) cuando se utilizan herramientas de consulta automatizadas.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Importación del esquema se produce cada vez que se genera un proxy de servicio Web a través de una herramienta como el cuadro de diálogo Agregar referencia Web se encuentra en Visual Studio o mediante el cuadro el [Web Services Description Language Tool (Wsdl.exe)](https://msdn.microsoft.com/library/b9210348-8bc2-4367-8c91-d1a04b403e88). Importación del esquema también se produce cuando se usa el [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) para generar código a partir de un documento XSD específico.  
  
 La <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension> clase le permite modificar el código generado cuando se utiliza cualquiera de estas herramientas. Por ejemplo, puede tener una clase existente que procese pedidos de libros en un sistema y que tiene un documento XSD existente que proporcione los pedidos. Mediante el <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension> (clase), puede habilitar una de las herramientas para generar el código que utiliza la clase.  
  
 Con el fin de controlar la generación del código, debe usar las clases se encuentran en el <xref:System.CodeDom> espacio de nombres. Para obtener más información, consulte [utilizando CodeDOM](~/docs/framework/reflection-and-codedom/using-the-codedom.md) y [referencia rápida de CodeDOM](https://msdn.microsoft.com/library/c77b8bfd-0a32-4e36-b59a-4f687f32c524(v=vs.100).aspx).  
  
 Los pasos para habilitar la herramienta WSDL.exe (que a su vez utiliza otras herramientas como el cuadro de diálogo Agregar referencia Web) para utilizar la extensión son:  
  
1.  Crear una implementación de la <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension> clase.  
  
2.  Use el <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType%2A> método para escribir código para el generador de código. El método contiene parámetros que permiten examinar el tipo XSD interceptado y crear objetos CodeDOM que se usan para generar el nuevo código CLR.  
  
3.  Si es necesario, utilice el <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportAnyElement%2A> método para controlar \<xsd: cualquier > encuentran los elementos en el documento XSD.  
  
4.  Si es necesario, utilice el <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportDefaultValue%2A> método para examinar los valores predeterminados se encuentra en el documento XSD y devolver un valor predeterminado diferente.  
  
5.  Compile su extensión en una biblioteca.  
  
6.  Firmar el ensamblado.  
  
7.  Instalar al ensamblado en la caché de ensamblados Global (GAC).  
  
8.  Modifique el archivo machine.config para incluir la extensión.  
  
   
  
## Examples  
 Consulte la [de tecnología SchemaImporterExtension](~/docs/standard/serialization/schemaimporterextension-technology-sample.md). Tenga en cuenta que este ejemplo no incluye un ensamblado firmado. En su lugar, muestra cómo usar la <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension> con una ventana de comandos.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SchemaImporterExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SchemaImporterExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportAnyElement">
      <MemberSignature Language="C#" Value="public virtual string ImportAnyElement (System.Xml.Schema.XmlSchemaAny any, bool mixed, System.Xml.Serialization.XmlSchemas schemas, System.Xml.Serialization.XmlSchemaImporter importer, System.CodeDom.CodeCompileUnit compileUnit, System.CodeDom.CodeNamespace mainNamespace, System.Xml.Serialization.CodeGenerationOptions options, System.CodeDom.Compiler.CodeDomProvider codeProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImportAnyElement(class System.Xml.Schema.XmlSchemaAny any, bool mixed, class System.Xml.Serialization.XmlSchemas schemas, class System.Xml.Serialization.XmlSchemaImporter importer, class System.CodeDom.CodeCompileUnit compileUnit, class System.CodeDom.CodeNamespace mainNamespace, valuetype System.Xml.Serialization.CodeGenerationOptions options, class System.CodeDom.Compiler.CodeDomProvider codeProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportAnyElement(System.Xml.Schema.XmlSchemaAny,System.Boolean,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportAnyElement (any As XmlSchemaAny, mixed As Boolean, schemas As XmlSchemas, importer As XmlSchemaImporter, compileUnit As CodeCompileUnit, mainNamespace As CodeNamespace, options As CodeGenerationOptions, codeProvider As CodeDomProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ImportAnyElement(System::Xml::Schema::XmlSchemaAny ^ any, bool mixed, System::Xml::Serialization::XmlSchemas ^ schemas, System::Xml::Serialization::XmlSchemaImporter ^ importer, System::CodeDom::CodeCompileUnit ^ compileUnit, System::CodeDom::CodeNamespace ^ mainNamespace, System::Xml::Serialization::CodeGenerationOptions options, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider);" />
      <MemberSignature Language="F#" Value="abstract member ImportAnyElement : System.Xml.Schema.XmlSchemaAny * bool * System.Xml.Serialization.XmlSchemas * System.Xml.Serialization.XmlSchemaImporter * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeNamespace * System.Xml.Serialization.CodeGenerationOptions * System.CodeDom.Compiler.CodeDomProvider -&gt; string&#xA;override this.ImportAnyElement : System.Xml.Schema.XmlSchemaAny * bool * System.Xml.Serialization.XmlSchemas * System.Xml.Serialization.XmlSchemaImporter * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeNamespace * System.Xml.Serialization.CodeGenerationOptions * System.CodeDom.Compiler.CodeDomProvider -&gt; string" Usage="schemaImporterExtension.ImportAnyElement (any, mixed, schemas, importer, compileUnit, mainNamespace, options, codeProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="any" Type="System.Xml.Schema.XmlSchemaAny" />
        <Parameter Name="mixed" Type="System.Boolean" />
        <Parameter Name="schemas" Type="System.Xml.Serialization.XmlSchemas" />
        <Parameter Name="importer" Type="System.Xml.Serialization.XmlSchemaImporter" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="mainNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="options" Type="System.Xml.Serialization.CodeGenerationOptions" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
      </Parameters>
      <Docs>
        <param name="any"><see cref="T:System.Xml.Schema.XmlSchemaAny" /> que representa el elemento <see langword="xsd:any" /> encontrado en el documento de esquema XML (XSD).</param>
        <param name="mixed">Estructura <see cref="T:System.Boolean" /> que indica si el atributo <see langword="complex" /> del documento XSD se ha establecido en "mixed." Es <see langword="true" />, si el atributo se ha establecido en "mixed"; de lo contrario, es <see langword="false" />.</param>
        <param name="schemas">Colección <see cref="T:System.Xml.Serialization.XmlSchemas" /> que contiene la colección de esquemas encontrados en el documento XSD.</param>
        <param name="importer">Clase <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> que es el importador que se está utilizando.</param>
        <param name="compileUnit">Clase <see cref="T:System.CodeDom.CodeCompileUnit" /> a la que se pueden agregar estructuras CodeDOM para generar código alternativo para el documento XSD.</param>
        <param name="mainNamespace">Clase <see cref="T:System.CodeDom.CodeNamespace" /> que representa el espacio de nombres actual para el elemento.</param>
        <param name="options">Enumeración <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> para las opciones de configuración del compilador de código.</param>
        <param name="codeProvider">Clase <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> que es el proveedor CodeDOM utilizado para generar el nuevo código.</param>
        <summary>Controla la importación de los elementos &lt;xsd: any&gt; del esquema.</summary>
        <returns>Nombre del tipo CLR que asigna el elemento.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Con el fin de controlar la generación del código, debe usar las clases se encuentran en el <xref:System.CodeDom> espacio de nombres. Para obtener más información, consulte [utilizando CodeDOM](~/docs/framework/reflection-and-codedom/using-the-codedom.md) y [referencia rápida de CodeDOM](https://msdn.microsoft.com/library/c77b8bfd-0a32-4e36-b59a-4f687f32c524(v=vs.100).aspx).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportDefaultValue">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.CodeExpression ImportDefaultValue (string value, string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeExpression ImportDefaultValue(string value, string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportDefaultValue(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportDefaultValue (value As String, type As String) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::CodeExpression ^ ImportDefaultValue(System::String ^ value, System::String ^ type);" />
      <MemberSignature Language="F#" Value="abstract member ImportDefaultValue : string * string -&gt; System.CodeDom.CodeExpression&#xA;override this.ImportDefaultValue : string * string -&gt; System.CodeDom.CodeExpression" Usage="schemaImporterExtension.ImportDefaultValue (value, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">Valor encontrado en el documento XSD original.</param>
        <param name="type">Nombre del tipo XSD.</param>
        <summary>Permite especificar el valor predeterminado para el tipo XSD que se está importando.</summary>
        <returns>Clase <see cref="T:System.CodeDom.CodeExpression" /> que establece el nuevo valor predeterminado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Con el fin de controlar la generación del código, debe usar las clases se encuentran en el <xref:System.CodeDom> espacio de nombres. Para obtener más información, consulte [utilizando CodeDOM](~/docs/framework/reflection-and-codedom/using-the-codedom.md) y [referencia rápida de CodeDOM](https://msdn.microsoft.com/library/c77b8bfd-0a32-4e36-b59a-4f687f32c524(v=vs.100).aspx).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ImportSchemaType">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Permite manipular el código que se ha generado examinando el esquema importado y especificando el tipo CLR que asigna.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El ejemplo siguiente muestra una implementación simple de la <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType%28System.String%2CSystem.String%2CSystem.Xml.Schema.XmlSchemaObject%2CSystem.Xml.Serialization.XmlSchemas%2CSystem.Xml.Serialization.XmlSchemaImporter%2CSystem.CodeDom.CodeCompileUnit%2CSystem.CodeDom.CodeNamespace%2CSystem.Xml.Serialization.CodeGenerationOptions%2CSystem.CodeDom.Compiler.CodeDomProvider%29> método. El código comprueba el espacio de nombres y el nombre. Cuando se encuentran los valores correctos, agrega el nombre de un ensamblado personalizado ("Order.dll") que debe hacer referencia en el código generado. A continuación, agrega un nuevo espacio de nombres ("Microsoft.Samples") que se genera en el código.  
  
 [!code-csharp[SchemaImporterExtensionExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SchemaImporterExtensionExample/CS/SchemaImporterExtensionExample.cs#1)]
 [!code-vb[SchemaImporterExtensionExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SchemaImporterExtensionExample/VB/SchemaImporterExtensionExample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ImportSchemaType">
      <MemberSignature Language="C#" Value="public virtual string ImportSchemaType (System.Xml.Schema.XmlSchemaType type, System.Xml.Schema.XmlSchemaObject context, System.Xml.Serialization.XmlSchemas schemas, System.Xml.Serialization.XmlSchemaImporter importer, System.CodeDom.CodeCompileUnit compileUnit, System.CodeDom.CodeNamespace mainNamespace, System.Xml.Serialization.CodeGenerationOptions options, System.CodeDom.Compiler.CodeDomProvider codeProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImportSchemaType(class System.Xml.Schema.XmlSchemaType type, class System.Xml.Schema.XmlSchemaObject context, class System.Xml.Serialization.XmlSchemas schemas, class System.Xml.Serialization.XmlSchemaImporter importer, class System.CodeDom.CodeCompileUnit compileUnit, class System.CodeDom.CodeNamespace mainNamespace, valuetype System.Xml.Serialization.CodeGenerationOptions options, class System.CodeDom.Compiler.CodeDomProvider codeProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportSchemaType (type As XmlSchemaType, context As XmlSchemaObject, schemas As XmlSchemas, importer As XmlSchemaImporter, compileUnit As CodeCompileUnit, mainNamespace As CodeNamespace, options As CodeGenerationOptions, codeProvider As CodeDomProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ImportSchemaType(System::Xml::Schema::XmlSchemaType ^ type, System::Xml::Schema::XmlSchemaObject ^ context, System::Xml::Serialization::XmlSchemas ^ schemas, System::Xml::Serialization::XmlSchemaImporter ^ importer, System::CodeDom::CodeCompileUnit ^ compileUnit, System::CodeDom::CodeNamespace ^ mainNamespace, System::Xml::Serialization::CodeGenerationOptions options, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider);" />
      <MemberSignature Language="F#" Value="abstract member ImportSchemaType : System.Xml.Schema.XmlSchemaType * System.Xml.Schema.XmlSchemaObject * System.Xml.Serialization.XmlSchemas * System.Xml.Serialization.XmlSchemaImporter * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeNamespace * System.Xml.Serialization.CodeGenerationOptions * System.CodeDom.Compiler.CodeDomProvider -&gt; string&#xA;override this.ImportSchemaType : System.Xml.Schema.XmlSchemaType * System.Xml.Schema.XmlSchemaObject * System.Xml.Serialization.XmlSchemas * System.Xml.Serialization.XmlSchemaImporter * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeNamespace * System.Xml.Serialization.CodeGenerationOptions * System.CodeDom.Compiler.CodeDomProvider -&gt; string" Usage="schemaImporterExtension.ImportSchemaType (type, context, schemas, importer, compileUnit, mainNamespace, options, codeProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.Schema.XmlSchemaType" />
        <Parameter Name="context" Type="System.Xml.Schema.XmlSchemaObject" />
        <Parameter Name="schemas" Type="System.Xml.Serialization.XmlSchemas" />
        <Parameter Name="importer" Type="System.Xml.Serialization.XmlSchemaImporter" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="mainNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="options" Type="System.Xml.Serialization.CodeGenerationOptions" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
      </Parameters>
      <Docs>
        <param name="type">Clase <see cref="T:System.Xml.Schema.XmlSchemaType" /> que representa el tipo XSD.</param>
        <param name="context">Clase <see cref="T:System.Xml.Schema.XmlSchemaObject" /> que representa información de esquema, como el número de líneas del elemento XML.</param>
        <param name="schemas">Colección <see cref="T:System.Xml.Serialization.XmlSchemas" /> que contiene la colección de esquemas del documento.</param>
        <param name="importer">Clase <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> que es el importador que se está utilizando.</param>
        <param name="compileUnit">Clase <see cref="T:System.CodeDom.CodeCompileUnit" /> a la que se pueden agregar estructuras CodeDOM para generar código alternativo para el documento XSD.</param>
        <param name="mainNamespace">Clase <see cref="T:System.CodeDom.CodeNamespace" /> que representa el espacio de nombres actual para el elemento.</param>
        <param name="options">Enumeración <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> para las opciones de configuración del compilador de código.</param>
        <param name="codeProvider">Clase <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> que se utiliza para generar el nuevo código.</param>
        <summary>Permite manipular el código que se ha generado examinando el esquema importado y especificando el tipo CLR que asigna.</summary>
        <returns>Nombre del tipo CLR que asigna.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El ejemplo siguiente muestra una implementación simple de la <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType%28System.String%2CSystem.String%2CSystem.Xml.Schema.XmlSchemaObject%2CSystem.Xml.Serialization.XmlSchemas%2CSystem.Xml.Serialization.XmlSchemaImporter%2CSystem.CodeDom.CodeCompileUnit%2CSystem.CodeDom.CodeNamespace%2CSystem.Xml.Serialization.CodeGenerationOptions%2CSystem.CodeDom.Compiler.CodeDomProvider%29> método. El código comprueba el espacio de nombres y el nombre. Cuando se encuentran los valores correctos, agrega el nombre de un ensamblado personalizado ("Order.dll") que debe hacer referencia en el código generado. A continuación, agrega un nuevo espacio de nombres ("Microsoft.Samples") que se genera en el código.  
  
 [!code-csharp[SchemaImporterExtensionExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SchemaImporterExtensionExample/CS/SchemaImporterExtensionExample.cs#1)]
 [!code-vb[SchemaImporterExtensionExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SchemaImporterExtensionExample/VB/SchemaImporterExtensionExample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportSchemaType">
      <MemberSignature Language="C#" Value="public virtual string ImportSchemaType (string name, string ns, System.Xml.Schema.XmlSchemaObject context, System.Xml.Serialization.XmlSchemas schemas, System.Xml.Serialization.XmlSchemaImporter importer, System.CodeDom.CodeCompileUnit compileUnit, System.CodeDom.CodeNamespace mainNamespace, System.Xml.Serialization.CodeGenerationOptions options, System.CodeDom.Compiler.CodeDomProvider codeProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ImportSchemaType(string name, string ns, class System.Xml.Schema.XmlSchemaObject context, class System.Xml.Serialization.XmlSchemas schemas, class System.Xml.Serialization.XmlSchemaImporter importer, class System.CodeDom.CodeCompileUnit compileUnit, class System.CodeDom.CodeNamespace mainNamespace, valuetype System.Xml.Serialization.CodeGenerationOptions options, class System.CodeDom.Compiler.CodeDomProvider codeProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType(System.String,System.String,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportSchemaType (name As String, ns As String, context As XmlSchemaObject, schemas As XmlSchemas, importer As XmlSchemaImporter, compileUnit As CodeCompileUnit, mainNamespace As CodeNamespace, options As CodeGenerationOptions, codeProvider As CodeDomProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ImportSchemaType(System::String ^ name, System::String ^ ns, System::Xml::Schema::XmlSchemaObject ^ context, System::Xml::Serialization::XmlSchemas ^ schemas, System::Xml::Serialization::XmlSchemaImporter ^ importer, System::CodeDom::CodeCompileUnit ^ compileUnit, System::CodeDom::CodeNamespace ^ mainNamespace, System::Xml::Serialization::CodeGenerationOptions options, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider);" />
      <MemberSignature Language="F#" Value="abstract member ImportSchemaType : string * string * System.Xml.Schema.XmlSchemaObject * System.Xml.Serialization.XmlSchemas * System.Xml.Serialization.XmlSchemaImporter * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeNamespace * System.Xml.Serialization.CodeGenerationOptions * System.CodeDom.Compiler.CodeDomProvider -&gt; string&#xA;override this.ImportSchemaType : string * string * System.Xml.Schema.XmlSchemaObject * System.Xml.Serialization.XmlSchemas * System.Xml.Serialization.XmlSchemaImporter * System.CodeDom.CodeCompileUnit * System.CodeDom.CodeNamespace * System.Xml.Serialization.CodeGenerationOptions * System.CodeDom.Compiler.CodeDomProvider -&gt; string" Usage="schemaImporterExtension.ImportSchemaType (name, ns, context, schemas, importer, compileUnit, mainNamespace, options, codeProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="context" Type="System.Xml.Schema.XmlSchemaObject" />
        <Parameter Name="schemas" Type="System.Xml.Serialization.XmlSchemas" />
        <Parameter Name="importer" Type="System.Xml.Serialization.XmlSchemaImporter" />
        <Parameter Name="compileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="mainNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="options" Type="System.Xml.Serialization.CodeGenerationOptions" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del elemento.</param>
        <param name="ns">Espacio de nombres del elemento.</param>
        <param name="context">Clase <see cref="T:System.Xml.Schema.XmlSchemaObject" /> que representa información de esquema, como el número de líneas del elemento XML.</param>
        <param name="schemas">Colección <see cref="T:System.Xml.Serialization.XmlSchemas" /> que contiene la colección de esquemas del documento.</param>
        <param name="importer">Clase <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> que es el importador que se está utilizando.</param>
        <param name="compileUnit">Clase <see cref="T:System.CodeDom.CodeCompileUnit" /> a la que se pueden agregar estructuras CodeDOM para generar código alternativo para el documento XSD.</param>
        <param name="mainNamespace">Clase <see cref="T:System.CodeDom.CodeNamespace" /> que representa el espacio de nombres actual para el elemento.</param>
        <param name="options">Enumeración <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> para las opciones de configuración del compilador de código.</param>
        <param name="codeProvider">Clase <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> que se utiliza para generar el nuevo código.</param>
        <summary>Permite manipular el código que se ha generado examinando el esquema importado y especificando el tipo CLR que asigna.</summary>
        <returns>Nombre del tipo CLR que asigna.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Con el fin de controlar la generación del código, debe usar las clases se encuentran en el <xref:System.CodeDom> espacio de nombres. Para obtener más información, consulte [utilizando CodeDOM](~/docs/framework/reflection-and-codedom/using-the-codedom.md) y [referencia rápida de CodeDOM](https://msdn.microsoft.com/library/c77b8bfd-0a32-4e36-b59a-4f687f32c524(v=vs.100).aspx).  
  
   
  
## Examples  
 El ejemplo siguiente muestra una implementación simple de la <xref:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType%28System.String%2CSystem.String%2CSystem.Xml.Schema.XmlSchemaObject%2CSystem.Xml.Serialization.XmlSchemas%2CSystem.Xml.Serialization.XmlSchemaImporter%2CSystem.CodeDom.CodeCompileUnit%2CSystem.CodeDom.CodeNamespace%2CSystem.Xml.Serialization.CodeGenerationOptions%2CSystem.CodeDom.Compiler.CodeDomProvider%29> método. El código comprueba el espacio de nombres y el nombre. Cuando se encuentran los valores correctos, agrega el nombre de un ensamblado personalizado ("Order.dll") que debe hacer referencia en el código generado. A continuación, agrega un nuevo espacio de nombres ("Microsoft.Samples") que se genera en el código.  
  
 [!code-csharp[SchemaImporterExtensionExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SchemaImporterExtensionExample/CS/SchemaImporterExtensionExample.cs#1)]
 [!code-vb[SchemaImporterExtensionExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SchemaImporterExtensionExample/VB/SchemaImporterExtensionExample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>