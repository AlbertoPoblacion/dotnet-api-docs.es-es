<Type Name="XamlTaskFactory" FullName="Microsoft.Build.Tasks.XamlTaskFactory">
  <TypeSignature Language="C#" Value="public class XamlTaskFactory : Microsoft.Build.Framework.ITaskFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlTaskFactory extends System.Object implements class Microsoft.Build.Framework.ITaskFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Tasks.XamlTaskFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlTaskFactory&#xA;Implements ITaskFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlTaskFactory : Microsoft::Build::Framework::ITaskFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ITaskFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="b581e-101">Representa el proveedor de generadores de tareas para las tareas XAML.</span><span class="sxs-lookup"><span data-stu-id="b581e-101">The task factory provider for XAML tasks.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTaskFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.XamlTaskFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTaskFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b581e-102">Crea un generador de tareas para las tareas de XAML.</span><span class="sxs-lookup"><span data-stu-id="b581e-102">Creates a task factory for XAML tasks.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanupTask">
      <MemberSignature Language="C#" Value="public void CleanupTask (Microsoft.Build.Framework.ITask task);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanupTask(class Microsoft.Build.Framework.ITask task) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.XamlTaskFactory.CleanupTask(Microsoft.Build.Framework.ITask)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CleanupTask (task As ITask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CleanupTask(Microsoft::Build::Framework::ITask ^ task);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ITaskFactory.CleanupTask(Microsoft.Build.Framework.ITask)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="task" Type="Microsoft.Build.Framework.ITask" />
      </Parameters>
      <Docs>
        <param name="task"><span data-ttu-id="b581e-103">Tarea que se va a limpiar.</span><span class="sxs-lookup"><span data-stu-id="b581e-103">The task to clean up.</span></span></param>
        <summary><span data-ttu-id="b581e-104">Limpia cualquier contexto o estado que se pueda haber creado para una tarea determinada.</span><span class="sxs-lookup"><span data-stu-id="b581e-104">Cleans up any context or state that may have been built up for a given task.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b581e-105">Algunos generadores pueden crear un dominio de aplicación como parte de una instancia de tarea individual.</span><span class="sxs-lookup"><span data-stu-id="b581e-105">Some factories may create an AppDomain as part of an individual task instance.</span></span> <span data-ttu-id="b581e-106">Tales generadores usan este método para cerrar el AppDomain.</span><span class="sxs-lookup"><span data-stu-id="b581e-106">Such factories use this method to shutdown the AppDomain.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTask">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITask CreateTask (Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Build.Framework.ITask CreateTask(class Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.XamlTaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTask (taskFactoryLoggingHost As IBuildEngine) As ITask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Build::Framework::ITask ^ CreateTask(Microsoft::Build::Framework::IBuildEngine ^ taskFactoryLoggingHost);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ITaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskFactoryLoggingHost" Type="Microsoft.Build.Framework.IBuildEngine" />
      </Parameters>
      <Docs>
        <param name="taskFactoryLoggingHost"><span data-ttu-id="b581e-107">Host de registro del generador de tareas que registra mensajes en el contexto de la tarea.</span><span class="sxs-lookup"><span data-stu-id="b581e-107">The task factory logging host that logs messages in the context of the task.</span></span></param>
        <summary><span data-ttu-id="b581e-108">Crea una instancia de la tarea que se va a usar.</span><span class="sxs-lookup"><span data-stu-id="b581e-108">Creates an instance of the task to be used.</span></span></summary>
        <returns><span data-ttu-id="b581e-109">Devuelve el nuevo fábrica de la tarea.</span><span class="sxs-lookup"><span data-stu-id="b581e-109">Returns the new task factory.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FactoryName">
      <MemberSignature Language="C#" Value="public string FactoryName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FactoryName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.XamlTaskFactory.FactoryName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FactoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FactoryName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ITaskFactory.FactoryName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b581e-110">Obtiene el nombre de este generador de tareas, que se va a usar en los mensajes de error.</span><span class="sxs-lookup"><span data-stu-id="b581e-110">Gets the name of this task factory, to be used in error messages.</span></span> <span data-ttu-id="b581e-111">Por ejemplo, La tarea "miTarea" no se cargó desde "nombreDeGenerador".</span><span class="sxs-lookup"><span data-stu-id="b581e-111">For example, Task "Mytask" failed to load from "FactoryName".</span></span></summary>
        <value><span data-ttu-id="b581e-112">Devuelve el nombre de este generador de tareas.</span><span class="sxs-lookup"><span data-stu-id="b581e-112">Returns the name of this task factory</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTaskParameters">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.TaskPropertyInfo[] GetTaskParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Build.Framework.TaskPropertyInfo[] GetTaskParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.XamlTaskFactory.GetTaskParameters" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTaskParameters () As TaskPropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Microsoft::Build::Framework::TaskPropertyInfo ^&gt; ^ GetTaskParameters();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ITaskFactory.GetTaskParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.TaskPropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b581e-113">Obtiene la información de tipo de los parámetros de la tarea.</span><span class="sxs-lookup"><span data-stu-id="b581e-113">Gets the type information for the parameters of the task.</span></span></summary>
        <returns><span data-ttu-id="b581e-114">Devuelve la información de tipo como una matriz de PropertyInfo.</span><span class="sxs-lookup"><span data-stu-id="b581e-114">Returns the type information as an array of PropertyInfo.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public bool Initialize (string taskName, System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Framework.TaskPropertyInfo&gt; taskParameters, string taskElementContents, Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Initialize(string taskName, class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Framework.TaskPropertyInfo&gt; taskParameters, string taskElementContents, class Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.XamlTaskFactory.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)" />
      <MemberSignature Language="VB.NET" Value="Public Function Initialize (taskName As String, taskParameters As IDictionary(Of String, TaskPropertyInfo), taskElementContents As String, taskFactoryLoggingHost As IBuildEngine) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Initialize(System::String ^ taskName, System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Framework::TaskPropertyInfo ^&gt; ^ taskParameters, System::String ^ taskElementContents, Microsoft::Build::Framework::IBuildEngine ^ taskFactoryLoggingHost);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ITaskFactory.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskName" Type="System.String" />
        <Parameter Name="taskParameters" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Framework.TaskPropertyInfo&gt;" />
        <Parameter Name="taskElementContents" Type="System.String" />
        <Parameter Name="taskFactoryLoggingHost" Type="Microsoft.Build.Framework.IBuildEngine" />
      </Parameters>
      <Docs>
        <param name="taskName"><span data-ttu-id="b581e-115">Nombre de la tarea.</span><span class="sxs-lookup"><span data-stu-id="b581e-115">The name of the task.</span></span></param>
        <param name="taskParameters"><span data-ttu-id="b581e-116">Parámetros que se van a pasar a la tarea.</span><span class="sxs-lookup"><span data-stu-id="b581e-116">The parameters to pass to the task.</span></span></param>
        <param name="taskElementContents"><span data-ttu-id="b581e-117">Contenido del elemento.</span><span class="sxs-lookup"><span data-stu-id="b581e-117">The element contents.</span></span></param>
        <param name="taskFactoryLoggingHost"><span data-ttu-id="b581e-118">Host de registro del generador de tareas que registra mensajes en el contexto de la tarea.</span><span class="sxs-lookup"><span data-stu-id="b581e-118">The task factory logging host that logs messages in the context of the task.</span></span></param>
        <summary><span data-ttu-id="b581e-119">Inicializa el generador.</span><span class="sxs-lookup"><span data-stu-id="b581e-119">Initializes the factory.</span></span></summary>
        <returns><span data-ttu-id="b581e-120">Devuelve <see cref="T:System.Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="b581e-120">Returns <see cref="T:System.Boolean" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskElementContents">
      <MemberSignature Language="C#" Value="public string TaskElementContents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TaskElementContents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.XamlTaskFactory.TaskElementContents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TaskElementContents As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TaskElementContents { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b581e-121">Obtiene o establece el contenido del cuerpo de UsingTask.</span><span class="sxs-lookup"><span data-stu-id="b581e-121">Gets or sets the contents of the UsingTask body.</span></span></summary>
        <value><span data-ttu-id="b581e-122">Devuelve el contenido del cuerpo de UsingTask.</span><span class="sxs-lookup"><span data-stu-id="b581e-122">Returns the contents of the UsingTask body.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskName">
      <MemberSignature Language="C#" Value="public string TaskName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TaskName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.XamlTaskFactory.TaskName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TaskName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TaskName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b581e-123">Obtiene o establece el nombre de la tarea, extraído del XAML.</span><span class="sxs-lookup"><span data-stu-id="b581e-123">Gets or sets the name of the task, pulled from the XAML.</span></span></summary>
        <value><span data-ttu-id="b581e-124">Devuelve el nombre de la tarea.</span><span class="sxs-lookup"><span data-stu-id="b581e-124">Returns the name of the task.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskNamespace">
      <MemberSignature Language="C#" Value="public string TaskNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TaskNamespace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.XamlTaskFactory.TaskNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TaskNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TaskNamespace { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b581e-125">Obtiene o establece el espacio de nombres de la tarea, extraído del XAML.</span><span class="sxs-lookup"><span data-stu-id="b581e-125">Gets or sets the namespace of the task, pulled from the XAML.</span></span></summary>
        <value><span data-ttu-id="b581e-126">Devuelve el espacio de nombres de la tarea.</span><span class="sxs-lookup"><span data-stu-id="b581e-126">Returns the namespace of the task.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskType">
      <MemberSignature Language="C#" Value="public Type TaskType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TaskType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.XamlTaskFactory.TaskType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TaskType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TaskType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ITaskFactory.TaskType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b581e-127">Obtiene o establece el tipo de la tarea, extraído del XAML.</span><span class="sxs-lookup"><span data-stu-id="b581e-127">Gets or sets the type of the task, pulled from the XAML.</span></span></summary>
        <value><span data-ttu-id="b581e-128">Devuelve el tipo de tarea.</span><span class="sxs-lookup"><span data-stu-id="b581e-128">Returns the task type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>