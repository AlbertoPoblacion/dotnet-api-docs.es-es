<Type Name="IInteractiveChannelInitializer" FullName="System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="caa788a603083e99a3bcf72be15ec882d1df7898" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56778373" /></Metadata><TypeSignature Language="C#" Value="public interface IInteractiveChannelInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInteractiveChannelInitializer" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInteractiveChannelInitializer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IInteractiveChannelInitializer" />
  <TypeSignature Language="F#" Value="type IInteractiveChannelInitializer = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Define los métodos que permiten a una aplicación cliente mostrar una interfaz de usuario para recopilar información de identidad antes de crear el canal.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implemente la interfaz <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> para permitir que una aplicación cliente muestre una interfaz de usuario que permita al usuario de la aplicación crear o seleccionar las credenciales antes de abrir un canal.  
  
 Para implementar <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, realice los pasos siguientes en <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=nameWithType>:  
  
1.  Dé una indicación al usuario y obtenga un objeto <xref:System.Net.NetworkCredential?displayProperty=nameWithType> adecuado.  
  
2.  Agregue un objeto de parámetro de canal personalizado a la colección devuelta por el método <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=nameWithType> en el objeto <xref:System.ServiceModel.IClientChannel> con un parámetro de tipo de <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=nameWithType>. El <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=nameWithType> personalizado utiliza este objeto de parámetro de canal para establecer los tokens de seguridad para el canal.  
  
3.  Return.  
  
 Para insertar <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>:  
  
1.  Invalide el método <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A?displayProperty=nameWithType> en la clase <xref:System.ServiceModel.Description.ClientCredentials?displayProperty=nameWithType>.  
  
2.  En ese método, determine si el punto de conexión requiere <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> y, si es así, agregue <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> a la colección <xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A?displayProperty=nameWithType>.  
  
 Los desarrolladores de aplicaciones pueden usar un <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>insertado de dos formas. La aplicación cliente puede llamar a <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=nameWithType> o <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=nameWithType> (o una versión asincrónica) antes de abrir el canal (la *explícita* enfoque) o simplemente llamar a la primera operación (el *implícita* enfoque).  
  
 Si se utiliza el enfoque implícito, la aplicación debe llamar a la primera operación en una extensión de <xref:System.ServiceModel.ClientBase%601> o <xref:System.ServiceModel.IClientChannel>. Si no llama a la primera operación, se inicia una excepción.  
  
 Si se utiliza el enfoque explícito, la aplicación debe realizar los pasos siguientes en orden:  
  
1.  Llamar a <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=nameWithType> o a <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=nameWithType> (o una versión asincrónica).  
  
2.  Cuando se hayan devuelto los inicializadores, llamar al método <xref:System.ServiceModel.ICommunicationObject.Open%2A> en el objeto <xref:System.ServiceModel.IClientChannel> o en el objeto <xref:System.ServiceModel.IClientChannel> devuelto de la propiedad <xref:System.ServiceModel.ClientBase%601.InnerChannel%2A?displayProperty=nameWithType>.  
  
3.  Llame a las operaciones.  
  
 Se recomienda que las aplicaciones de calidad de producción controlen el proceso de la interfaz de usuario mediante el enfoque explícito.  
  
 Las aplicaciones que utilizan el enfoque implícito invocan los inicializadores de la interfaz de usuario, pero si el usuario de la aplicación no responde dentro del plazo de tiempo de espera de envío del enlace, se inicia una excepción cuando se devuelve la interfaz de usuario.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginDisplayInitializationUI">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginDisplayInitializationUI (System.ServiceModel.IClientChannel channel, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginDisplayInitializationUI(class System.ServiceModel.IClientChannel channel, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginDisplayInitializationUI (channel As IClientChannel, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginDisplayInitializationUI(System::ServiceModel::IClientChannel ^ channel, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginDisplayInitializationUI : System.ServiceModel.IClientChannel * AsyncCallback * obj -&gt; IAsyncResult" Usage="iInteractiveChannelInitializer.BeginDisplayInitializationUI (channel, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channel" Type="System.ServiceModel.IClientChannel" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="channel">Canal de cliente.</param>
        <param name="callback">Objeto de devolución de llamada.</param>
        <param name="state">Cualquier dato de estado.</param>
        <summary>Llamada asincrónica para empezar a usar una interfaz de usuario con el fin de obtener información de las credenciales.</summary>
        <returns>La interfaz <see cref="T:System.IAsyncResult" /> que se va a usar para volver a llamar cuando el procesamiento haya terminado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para implementar <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, realice los pasos siguientes en <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=nameWithType>:  
  
1.  Indique al usuario de la manera que desee y obtenga un objeto <xref:System.Net.NetworkCredential?displayProperty=nameWithType> adecuado.  
  
2.  Agregue un objeto de parámetro de canal personalizado a la colección devuelta por el método <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=nameWithType> en el objeto <xref:System.ServiceModel.IClientChannel> con un parámetro de tipo de <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=nameWithType>. El <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=nameWithType> personalizado utiliza este objeto de parámetro de canal para establecer los tokens de seguridad para el canal.  
  
3.  Return.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDisplayInitializationUI">
      <MemberSignature Language="C#" Value="public void EndDisplayInitializationUI (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDisplayInitializationUI(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndDisplayInitializationUI (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndDisplayInitializationUI(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndDisplayInitializationUI : IAsyncResult -&gt; unit" Usage="iInteractiveChannelInitializer.EndDisplayInitializationUI result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" />.</param>
        <summary>Se le llama cuando <see cref="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" /> ha finalizado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>