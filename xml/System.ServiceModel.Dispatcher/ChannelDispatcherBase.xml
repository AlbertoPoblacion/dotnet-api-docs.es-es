<Type Name="ChannelDispatcherBase" FullName="System.ServiceModel.Dispatcher.ChannelDispatcherBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6ba8e27d5da87417e1566c1bc6af49bc5699abb2" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39758142" /></Metadata><TypeSignature Language="C#" Value="public abstract class ChannelDispatcherBase : System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ChannelDispatcherBase extends System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ChannelDispatcherBase&#xA;Inherits CommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChannelDispatcherBase abstract : System::ServiceModel::Channels::CommunicationObject" />
  <TypeSignature Language="F#" Value="type ChannelDispatcherBase = class&#xA;    inherit CommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.CommunicationObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Clase base abstracta para el distribuidor del canal que acepta canales y los asocia a un servicio.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esto sirve para los desarrolladores que desean mantener el modelo de programación de Windows Communication Foundation (WCF) pero reemplazar el tiempo de ejecución proporcionado por el sistema. Dichas aplicaciones incorporarán los cambios en los mensajes de los canales y los controlarán directamente con distribuidores definidos por el usuario. Para utilizar <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>, cree una clase derivada de él, extienda <xref:System.ServiceModel.ServiceHost> e invalide <xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A>, agregando instancias de la clase derivada de <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> a <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>.  
  
 <xref:System.ServiceModel.Channels.IChannelListener> y <xref:System.ServiceModel.ServiceHost>, asociados al objeto <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>, están disponibles para inspección o modificación a través de <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A> y <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A>, respectivamente.  
  
 <xref:System.ServiceModel.ServiceHost> llama al método <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29> o al método <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29> al agregar o quitar un elemento <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> de su colección <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>.  
  
 <xref:System.ServiceModel.ServiceHost> llama al método <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A>  durante el cierre antes de cerrar InstanceContexts. Windows Communication Foundation (WCF) utiliza esta llamada para cerrar los canales de datagrama y espere a que todos los mensajes lleguen a InstanceContext.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ChannelDispatcherBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ChannelDispatcherBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="protected virtual void Attach (System.ServiceModel.ServiceHostBase host);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Attach(class System.ServiceModel.ServiceHostBase host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Attach (host As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Attach(System::ServiceModel::ServiceHostBase ^ host);" />
      <MemberSignature Language="F#" Value="abstract member Attach : System.ServiceModel.ServiceHostBase -&gt; unit&#xA;override this.Attach : System.ServiceModel.ServiceHostBase -&gt; unit" Usage="channelDispatcherBase.Attach host" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="host"><see cref="T:System.ServiceModel.ServiceHostBase" /> del servicio.</param>
        <summary>Cuando se invalida en una clase derivada, asocia el distribuidor del canal a un host concreto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método sólo se puede establecer cuando la instancia del <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> está en el estado de <xref:System.ServiceModel.CommunicationState.Created>, puesto que éste es el único estado que es mutable y no eliminado.  
  
 <xref:System.ServiceModel.ServiceHost> llama a este método cuando <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> se agrega a su colección <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>.  Esto proporciona a <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> la oportunidad de enlazar los eventos e inspeccionar <xref:System.ServiceModel.ServiceHost>, y proporciona el valor que la propiedad <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> debe devolver.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="host" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Opening" /> o <see cref="F:System.ServiceModel.CommunicationState.Opened" />, o el host ya está establecido.</exception>
        <exception cref="T:System.ObjectDisposedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CloseInput">
      <MemberSignature Language="C#" Value="public virtual void CloseInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CloseInput ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CloseInput();" />
      <MemberSignature Language="F#" Value="abstract member CloseInput : unit -&gt; unit&#xA;override this.CloseInput : unit -&gt; unit" Usage="channelDispatcherBase.CloseInput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cuando se invalida en una clase derivada, elimina los distribuidores de extremos asociados al distribuidor del canal.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.ServiceHost> llama a este método durante el cierre para proporcionar al distribuidor la oportunidad de agotar los mensajes. <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> utiliza esta llamada para cerrar los canales de datagrama.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="protected virtual void Detach (System.ServiceModel.ServiceHostBase host);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Detach(class System.ServiceModel.ServiceHostBase host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Detach (host As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Detach(System::ServiceModel::ServiceHostBase ^ host);" />
      <MemberSignature Language="F#" Value="abstract member Detach : System.ServiceModel.ServiceHostBase -&gt; unit&#xA;override this.Detach : System.ServiceModel.ServiceHostBase -&gt; unit" Usage="channelDispatcherBase.Detach host" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="host"><see cref="T:System.ServiceModel.ServiceHostBase" />.</param>
        <summary>Cuando se invalida en una clase derivada, desasocia el distribuidor del canal de un host concreto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.ServiceHostBase> sólo se puede desasociar cuando la instancia del <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> está en el estado de <xref:System.ServiceModel.CommunicationState.Created>, puesto que éste es el único estado que es mutable y no eliminado.  
  
 Debe establecer la <xref:System.ServiceModel.ServiceHostBase> asociada al distribuidor del canal en `null`.  
  
 <xref:System.ServiceModel.ServiceHost> llama a este método cuando la <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> se quita de su colección <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>. Esto proporciona a la <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> la oportunidad de eliminar enlaces en eventos e inspeccionar el <xref:System.ServiceModel.ServiceHost>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="host" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Opening" /> o <see cref="F:System.ServiceModel.CommunicationState.Opened" />, o el host ya está establecido.</exception>
        <exception cref="T:System.ObjectDisposedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Closing" /> o <see cref="F:System.ServiceModel.CommunicationState.Closed" />.</exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">El objeto de comunicación está en un estado de <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.ServiceHostBase Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ServiceHostBase Host" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Host As ServiceHostBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::ServiceHostBase ^ Host { System::ServiceModel::ServiceHostBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Host : System.ServiceModel.ServiceHostBase" Usage="System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceHostBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cuando se invalida en una clase derivada, obtiene el host de servicio asociado al distribuidor del canal.</summary>
        <value><see cref="T:System.ServiceModel.ServiceHostBase" /> del servicio asociado al distribuidor.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cada objeto <xref:System.ServiceModel.ServiceHost> puede tener muchos objetos <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>, cada uno asociado a un <xref:System.ServiceModel.Channels.IChannelListener> distinto para ese servicio. El host mantiene una lista de estos objetos <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> en la colección <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Listener">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.IChannelListener Listener { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.IChannelListener Listener" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Listener As IChannelListener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::Channels::IChannelListener ^ Listener { System::ServiceModel::Channels::IChannelListener ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Listener : System.ServiceModel.Channels.IChannelListener" Usage="System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cuando se invalida en una clase derivada, obtiene el agente de escucha de canal asociado al distribuidor del canal.</summary>
        <value><see cref="T:System.ServiceModel.Channels.IChannelListener" /> asociado al distribuidor del canal.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> asocia un <xref:System.ServiceModel.Channels.IChannelListener> cuyos canales y mensajes está enviando este <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>