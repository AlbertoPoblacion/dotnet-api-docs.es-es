<Type Name="EndpointDispatcher" FullName="System.ServiceModel.Dispatcher.EndpointDispatcher">
  <Metadata><Meta Name="ms.openlocfilehash" Value="45667bba71e1d386ffafa302f24e478ad5be2b47" /><Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="10/12/2018" /><Meta Name="ms.locfileid" Value="49132777" /></Metadata><TypeSignature Language="C#" Value="public sealed class EndpointDispatcher" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EndpointDispatcher extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.EndpointDispatcher" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EndpointDispatcher" />
  <TypeSignature Language="C++ CLI" Value="public ref class EndpointDispatcher sealed" />
  <TypeSignature Language="F#" Value="type EndpointDispatcher = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa el objeto de tiempo de ejecución que expone propiedades que permiten insertar extensiones o modificaciones en tiempo de ejecución para los mensajes de aplicaciones de servicio.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las clases <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> y <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType> exponen los puntos de personalización en tiempo de ejecución para los puntos de conexión de un servicio. La clase <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> se puede utilizar para controlar qué mensajes puede procesar y cierta información relacionada con el extremo. La clase <xref:System.ServiceModel.Dispatcher.DispatchRuntime> tiene un gran número de propiedades que se usan para insertar las extensiones personalizadas en el tiempo de ejecución de todo el extremo.  
  
 El objeto <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> es responsable de procesar los mensajes de un objeto <xref:System.ServiceModel.Dispatcher.ChannelDispatcher?displayProperty=nameWithType> cuando la dirección de destino de un mensaje coincide con la propiedad <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> y la acción del mensaje coincide con la propiedad <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A>. Si dos objetos <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> pueden aceptar un mensaje, el valor de la propiedad <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority%2A> determina el punto de conexión de mayor prioridad.  
  
 Use el objeto <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> para configurar o extender el proceso de recepción de mensajes del objeto <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>asociado, convirtiendo los objetos de mensaje en objetos utilizados como parámetros, e invocando una operación de extremo así como el proceso inverso.  
  
 Normalmente, el objeto <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> para un punto de conexión se obtiene implementando la interfaz <xref:System.ServiceModel.Description.IEndpointBehavior>, pero se puede tener acceso al objeto <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> desde las otras interfaces de comportamiento.  
  
 Puede usar las siguientes propiedades de <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>:  
  
-   La propiedad <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> le permite obtener o establecer un objeto <xref:System.ServiceModel.Dispatcher.MessageFilter> que <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher%2A> utiliza para identificar si el extremo puede procesar un mensaje determinado.  
  
-   La propiedad <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher%2A> obtiene el objeto <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> asociado, que envía y recibe los mensajes de <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>, y que se puede utilizar para inspeccionar o modificar otros valores y comportamientos relacionados con los canales.  
  
-   La propiedad <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> obtiene el objeto <xref:System.ServiceModel.Dispatcher.MessageFilter> que se usa para identificar si un mensaje está destinado a este contrato.  
  
-   Las propiedades <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractName%2A> y <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractNamespace%2A> devuelven el nombre y el espacio de nombres del contrato del extremo.  
  
-   La propiedad <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.DispatchRuntime%2A> devuelve el objeto <xref:System.ServiceModel.Dispatcher.DispatchRuntime> que se puede usar para modificar valores en tiempo de ejecución o insertar extensiones en tiempo de ejecución personalizadas para todo el extremo.  
  
-   La propiedad <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.EndpointAddress%2A> obtiene la dirección del punto de conexión.  
  
-   La propiedad <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority%2A> devuelve la prioridad del filtro compuesto que <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher%2A> utiliza para establecer qué extremo va a controlar el mensaje.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> para buscar <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType> para el punto de conexión e inserta un inspector de mensajes personalizado utilizando un comportamiento de punto de conexión.  
  
 [!code-csharp[IEndpointBehavior#4](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/iendpointbehaviormessageinspector.cs#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointDispatcher (System.ServiceModel.EndpointAddress address, string contractName, string contractNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress address, string contractName, string contractNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointDispatcher.#ctor(System.ServiceModel.EndpointAddress,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As EndpointAddress, contractName As String, contractNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointDispatcher(System::ServiceModel::EndpointAddress ^ address, System::String ^ contractName, System::String ^ contractNamespace);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.EndpointDispatcher : System.ServiceModel.EndpointAddress * string * string -&gt; System.ServiceModel.Dispatcher.EndpointDispatcher" Usage="new System.ServiceModel.Dispatcher.EndpointDispatcher (address, contractName, contractNamespace)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="contractNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Dirección del punto de conexión.</param>
        <param name="contractName">El nombre del contrato del extremo.</param>
        <param name="contractNamespace">El espacio de nombres del contrato del extremo.</param>
        <summary>Inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /> con la dirección, nombre de contrato y espacio de nombres del contrato especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este constructor para crear un punto de conexión que no está en la descripción.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointDispatcher (System.ServiceModel.EndpointAddress address, string contractName, string contractNamespace, bool isSystemEndpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress address, string contractName, string contractNamespace, bool isSystemEndpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointDispatcher.#ctor(System.ServiceModel.EndpointAddress,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As EndpointAddress, contractName As String, contractNamespace As String, isSystemEndpoint As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointDispatcher(System::ServiceModel::EndpointAddress ^ address, System::String ^ contractName, System::String ^ contractNamespace, bool isSystemEndpoint);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.EndpointDispatcher : System.ServiceModel.EndpointAddress * string * string * bool -&gt; System.ServiceModel.Dispatcher.EndpointDispatcher" Usage="new System.ServiceModel.Dispatcher.EndpointDispatcher (address, contractName, contractNamespace, isSystemEndpoint)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="contractNamespace" Type="System.String" />
        <Parameter Name="isSystemEndpoint" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">Dirección del punto de conexión.</param>
        <param name="contractName">El nombre del contrato del extremo.</param>
        <param name="contractNamespace">El espacio de nombres del contrato del extremo.</param>
        <param name="isSystemEndpoint"><see langword="true" /> para indicar si el extremo lo creó internamente el servidor y no el usuario; en caso contrario, <see langword="false" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /> con la dirección especificada, el nombre del contrato, el espacio de nombres del contrato y si el punto de conexión es un punto de conexión del sistema público.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddressFilter">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.MessageFilter AddressFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.MessageFilter AddressFilter" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property AddressFilter As MessageFilter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::MessageFilter ^ AddressFilter { System::ServiceModel::Dispatcher::MessageFilter ^ get(); void set(System::ServiceModel::Dispatcher::MessageFilter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AddressFilter : System.ServiceModel.Dispatcher.MessageFilter with get, set" Usage="System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.MessageFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un objeto <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> que se utiliza para identificar si un mensaje determinado está destinado a la dirección del extremo.</summary>
        <value>Filtro de direcciones utilizado para enrutar el mensaje al extremo adecuado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher?displayProperty=nameWithType> tiene un objeto <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> para cada extremo que el canal puede admitir. La propiedad <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> es un objeto <xref:System.ServiceModel.Dispatcher.MessageFilter?displayProperty=nameWithType> que coincide con la dirección de extremo de destino del mensaje. <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> combina el valor de <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> con el valor de <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> para determinar si enrutar un mensaje a este extremo.  
  
 En el caso de que haya dos objetos <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> que coinciden que pueden procesar un mensaje, se usa la propiedad <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority%2A> para seleccionar un extremo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelDispatcher">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.ChannelDispatcher ChannelDispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.ChannelDispatcher ChannelDispatcher" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelDispatcher As ChannelDispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::ChannelDispatcher ^ ChannelDispatcher { System::ServiceModel::Dispatcher::ChannelDispatcher ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelDispatcher : System.ServiceModel.Dispatcher.ChannelDispatcher" Usage="System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.ChannelDispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> asociado, que se puede usar para inspeccionar o modificar otros valores y comportamientos relacionados con los canales.</summary>
        <value>El distribuidor de canales que se puede usar para inspeccionar o modificar otros valores y comportamientos relacionados con los canales.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El objeto <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> recibe un mensaje de un canal y utiliza las propiedades <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A>, <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A>y <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority%2A> para determinar por qué extremo se procesa el mensaje.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractFilter">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.MessageFilter ContractFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.MessageFilter ContractFilter" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property ContractFilter As MessageFilter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::MessageFilter ^ ContractFilter { System::ServiceModel::Dispatcher::MessageFilter ^ get(); void set(System::ServiceModel::Dispatcher::MessageFilter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContractFilter : System.ServiceModel.Dispatcher.MessageFilter with get, set" Usage="System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.MessageFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el objeto <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> que se usa para identificar si un mensaje está destinado a este contrato.</summary>
        <value>Filtro utilizado para enrutar los mensajes al contrato adecuado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La propiedad <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> es un objeto <xref:System.ServiceModel.Dispatcher.MessageFilter> que se compara con la acción de un mensaje. <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> combina el valor de <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> con el valor de <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> para determinar si enrutar un mensaje a este extremo.  
  
 En el caso de que haya dos objetos <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> que coinciden que pueden procesar un mensaje, se usa la propiedad <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority%2A> para seleccionar un punto de conexión.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public string ContractName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContractName : string" Usage="System.ServiceModel.Dispatcher.EndpointDispatcher.ContractName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre del contrato para el punto de conexión.</summary>
        <value>El nombre del contrato del extremo.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractNamespace">
      <MemberSignature Language="C#" Value="public string ContractNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractNamespace" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContractNamespace : string" Usage="System.ServiceModel.Dispatcher.EndpointDispatcher.ContractNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el espacio de nombres del contrato del extremo.</summary>
        <value>El espacio de nombres del contrato del extremo.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchRuntime">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.DispatchRuntime DispatchRuntime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.DispatchRuntime DispatchRuntime" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.DispatchRuntime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DispatchRuntime As DispatchRuntime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::DispatchRuntime ^ DispatchRuntime { System::ServiceModel::Dispatcher::DispatchRuntime ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DispatchRuntime : System.ServiceModel.Dispatcher.DispatchRuntime" Usage="System.ServiceModel.Dispatcher.EndpointDispatcher.DispatchRuntime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.DispatchRuntime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /> utilizado para inspeccionar, modificar o extender el comportamiento del tiempo de ejecución por un punto de conexión de servicio o un punto de conexión de devolución de llamada de cliente.</summary>
        <value>Objeto <see cref="P:System.ServiceModel.Dispatcher.EndpointDispatcher.DispatchRuntime" /> utilizado para inspeccionar, modificar o extender el comportamiento del tiempo de ejecución por un extremo de servicio o un extremo de devolución de llamada de cliente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la propiedad <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.DispatchRuntime%2A> para obtener el objeto <xref:System.ServiceModel.Dispatcher.DispatchRuntime> que se puede usar para modificar valores en tiempo de ejecución o insertar extensiones en tiempo de ejecución personalizadas para todo el extremo. Desde la propiedad <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.DispatchRuntime%2A>, también puede desplazarse a la colección <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> para el extremo.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> para buscar <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType> para el punto de conexión e inserta un inspector de mensajes personalizado utilizando un comportamiento de punto de conexión.  
  
 [!code-csharp[IEndpointBehavior#4](~/samples/snippets/csharp/VS_Snippets_CFX/iendpointbehavior/cs/iendpointbehaviormessageinspector.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndpointAddress">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress EndpointAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress EndpointAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.EndpointAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndpointAddress As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ EndpointAddress { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndpointAddress : System.ServiceModel.EndpointAddress" Usage="System.ServiceModel.Dispatcher.EndpointDispatcher.EndpointAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la dirección del punto de conexión.</summary>
        <value>Dirección del extremo.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterPriority">
      <MemberSignature Language="C#" Value="public int FilterPriority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FilterPriority" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterPriority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FilterPriority { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.FilterPriority : int with get, set" Usage="System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la prioridad de <see cref="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter" /> y la combinación de <see cref="P:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter" /> cuando <see cref="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher" /> está seleccionando extremos.</summary>
        <value>Prioridad del filtro.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> combina el valor de <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> con el valor de <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> para determinar si enrutar un mensaje a este extremo.  
  
 En el caso de que haya dos objetos <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> que coinciden que pueden procesar un mensaje, se usa la propiedad <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority%2A> para seleccionar un punto de conexión.  
  
 Si dos puntos de conexión pueden procesar un mensaje y tiene el mismo valor de su propiedad <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority%2A>, se inicia una excepción <xref:System.ServiceModel.Dispatcher.MultipleFilterMatchesException?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSystemEndpoint">
      <MemberSignature Language="C#" Value="public bool IsSystemEndpoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSystemEndpoint" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointDispatcher.IsSystemEndpoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSystemEndpoint As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSystemEndpoint { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSystemEndpoint : bool" Usage="System.ServiceModel.Dispatcher.EndpointDispatcher.IsSystemEndpoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el punto de conexión lo creó internamente el servidor y no el usuario.</summary>
        <value><see langword="true" /> si el extremo lo generó el sistema; en caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>