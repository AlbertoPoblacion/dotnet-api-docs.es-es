<Type Name="XPathMessageContext" FullName="System.ServiceModel.Dispatcher.XPathMessageContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c5eeca87fbd9ff65af2db3513f57e995c8bdd7a1" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53512584" /></Metadata><TypeSignature Language="C#" Value="public class XPathMessageContext : System.Xml.Xsl.XsltContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi XPathMessageContext extends System.Xml.Xsl.XsltContext" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.XPathMessageContext" />
  <TypeSignature Language="VB.NET" Value="Public Class XPathMessageContext&#xA;Inherits XsltContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class XPathMessageContext : System::Xml::Xsl::XsltContext" />
  <TypeSignature Language="F#" Value="type XPathMessageContext = class&#xA;    inherit XsltContext" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.Xsl.XsltContext</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Define varias funciones XPath y asignaciones de espacio de nombres utilizadas normalmente al evaluar expresiones XPath con documentos SOAP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El motor del XPath tiene compatibilidad contextual de XPath completa y utiliza la clase <xref:System.Xml.Xsl.XsltContext> de .NET Framework del mismo modo que <xref:System.Xml.XPath.XPathNavigator> hace para implementar esta compatibilidad. <xref:System.Xml.Xsl.XsltContext> es una clase abstracta que permite a los desarrolladores implementar bibliotecas de funciones XPath personalizadas y declarar variables XPath. <xref:System.Xml.Xsl.XsltContext> es un <xref:System.Xml.XmlNamespaceManager> y, por ello, contiene también las asignaciones de prefijos de espacio de nombres.  
  
 El motor de filtros implementa una clase <xref:System.Xml.Xsl.XsltContext> denominada <xref:System.ServiceModel.Dispatcher.XPathMessageContext>. <xref:System.ServiceModel.Dispatcher.XPathMessageContext> define funciones personalizadas que se pueden utilizar en expresiones XPath y declara varias asignaciones comunes de prefijos de espacio de nombres. En la tabla siguiente se enumera las funciones personalizadas definidas por <xref:System.ServiceModel.Dispatcher.XPathMessageContext> que se puede utilizar en expresiones XPath.  
  
|Función XPath|Descripción|  
|--------------------|-----------------|  
|body|Devuelve el nodo SOAP Body, independientemente de la versión SOAP (1.1. o 1.2).|  
|header|Devuelve el nodo de encabezado SOAP, independientemente de la versión SOAP (1.1 o 1.2).|  
|datos de correlación|Toma una cadena de entrada y devuelve el valor de la propiedad de mensaje de correlación asociado.  "wsc-instanceId" es una cadena reservada utilizada para la correlación basada en contexto.|  
|messageId|Devuelve el valor del encabezado MessageID de WS-Addressing.|  
|RelatesTo|Devuelve el valor del encabezado de WS-Addressing RelatesTo, independientemente de la versión (August2004 o WSA 1.0).|  
|ReplyTo|Devuelve el valor del encabezado de WS-Addressing ReplyTo, independientemente de la versión (August2004 o WSA 1.0).|  
|de|Devuelve el valor del encabezado WS-Addressing de, independientemente de la versión (August2004 o WSA 1.0).|  
|FaultTo|Devuelve el valor del encabezado FaultTo de WS-Addressing, independientemente de la versión (August2004 o WSA 1.0).|  
|por|Devuelve el valor del encabezado de WS-Addressing para si está presente, en caso contrario devuelve Anonymous.|  
|predeterminada|Devuelve el valor del encabezado Action de WS-Addressing.|  
|SOAP-uri|Devuelve el uri de espacio de nombres SOAP.|  
|encabezados con actor|Toma un uri de Actor de SOAP y devuelve todos los encabezados que contienen ese actor, independientemente de la versión SOAP (1.1 o 1.2).|  
|actor|Devuelve el uri del Actor de SOAP del primer nodo secundario, independientemente de la versión SOAP (1.1 o 1.2).|  
|es obligatoria|Devuelve si el primer nodo secundario es obligatorio, independientemente de la versión SOAP (1.1 o 1.2).|  
|siguiente es actor|Devuelve si el uri del Actor de SOAP del primer nodo secundario asume el rol siguiente, independientemente de la versión SOAP (1.1 o 1.2).|  
|es actor-ultimate-receptor|Devuelve si el uri del Actor de SOAP del primer nodo secundario asume la función UltimateReceiver, independientemente de la versión SOAP (1.1 o 1.2).|  
|fecha y hora|Toma una cadena de fecha de entrada y devuelve el valor convertido en un valor double.|  
|duration|Toma una cadena de valor timespan de entrada y devuelve el valor como un número total de días.|  
|UTC-ahora|Devuelve el valor de <xref:System.DateTime.UtcNow%2A>.|  
  
 La tabla siguiente enumera los prefijos de espacios de nombres y el espacio de nombres predeterminado que se declaran en <xref:System.ServiceModel.Dispatcher.XPathMessageContext>.  
  
|Prefijo|Espacio de nombres|  
|------------|---------------|  
|s11|http://schemas.xmlsoap.org/soap/envelope|  
|s12|http://www.w3.org/2003/05/soap-envelope|  
|wsaAugust2004|http://schemas.xmlsoap.org/ws/2004/08/addressing|  
|wsa10|http://www.w3.org/2005/08/addressing|  
|sm|http://schemas.microsoft.com/serviceModel/2004/05/xpathfunctions|  
|tempuri|http://tempuri.org|  
|ser|http://schemas.microsoft.com/2003/10/Serialization|  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea una instancia de <see cref="T:System.ServiceModel.Dispatcher.XPathMessageContext" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XPathMessageContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XPathMessageContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Crea una instancia de <see cref="T:System.ServiceModel.Dispatcher.XPathMessageContext" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XPathMessageContext (System.Xml.NameTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.NameTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageContext.#ctor(System.Xml.NameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (table As NameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XPathMessageContext(System::Xml::NameTable ^ table);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.XPathMessageContext : System.Xml.NameTable -&gt; System.ServiceModel.Dispatcher.XPathMessageContext" Usage="new System.ServiceModel.Dispatcher.XPathMessageContext table" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="table" Type="System.Xml.NameTable" />
      </Parameters>
      <Docs>
        <param name="table">Clase <see cref="T:System.Xml.NameTable" /> utilizada internamente para almacenar cadenas.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Dispatcher.XPathMessageContext" /> con el objeto <see cref="T:System.Xml.NameTable" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Varias clases, incluida ésta, <xref:System.Xml.XmlDocument> y <xref:System.Xml.XmlReader>, utilizan la clase <xref:System.Xml.NameTable> internamente para almacenar nombres de atributos y elementos. Cuando un nombre de atributo o elemento aparece varias veces en un documento XML, se almacena en <xref:System.Xml.NameTable> sólo una vez. Los nombres se almacenan como tipos de objetos de Common Language Runtime (CLR). Esto permite comparar objetos en estas cadenas en lugar de comparar cadenas, que consume más recursos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareDocument">
      <MemberSignature Language="C#" Value="public override int CompareDocument (string baseUri, string nextBaseUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 CompareDocument(string baseUri, string nextBaseUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageContext.CompareDocument(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CompareDocument (baseUri As String, nextBaseUri As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int CompareDocument(System::String ^ baseUri, System::String ^ nextBaseUri);" />
      <MemberSignature Language="F#" Value="override this.CompareDocument : string * string -&gt; int" Usage="xPathMessageContext.CompareDocument (baseUri, nextBaseUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.String" />
        <Parameter Name="nextBaseUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUri">Dirección URI base del primer documento que se va a comparar.</param>
        <param name="nextBaseUri">Dirección URI base del segundo documento que se va a comparar.</param>
        <summary>Compara los identificadores de recursos uniformes (URI) base de dos documentos en función del orden en que el procesador XSLT cargó los documentos.</summary>
        <returns>Siempre devuelve 0.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad se debe invalidar en una clase derivada para que se pueda utilizar.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveWhitespace">
      <MemberSignature Language="C#" Value="public override bool PreserveWhitespace (System.Xml.XPath.XPathNavigator node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool PreserveWhitespace(class System.Xml.XPath.XPathNavigator node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageContext.PreserveWhitespace(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function PreserveWhitespace (node As XPathNavigator) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool PreserveWhitespace(System::Xml::XPath::XPathNavigator ^ node);" />
      <MemberSignature Language="F#" Value="override this.PreserveWhitespace : System.Xml.XPath.XPathNavigator -&gt; bool" Usage="xPathMessageContext.PreserveWhitespace node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="node">Nodo de espacio en blanco que se va a conservar o quitar en el contexto actual.</param>
        <summary>Evalúa si conservar los nodos de espacio en blanco o quitarlos para el contexto determinado.</summary>
        <returns>Siempre devuelve <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad se debe invalidar en una clase derivada para que se pueda utilizar.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveFunction">
      <MemberSignature Language="C#" Value="public override System.Xml.Xsl.IXsltContextFunction ResolveFunction (string prefix, string name, System.Xml.XPath.XPathResultType[] argTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.Xsl.IXsltContextFunction ResolveFunction(string prefix, string name, valuetype System.Xml.XPath.XPathResultType[] argTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageContext.ResolveFunction(System.String,System.String,System.Xml.XPath.XPathResultType[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveFunction (prefix As String, name As String, argTypes As XPathResultType()) As IXsltContextFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::Xsl::IXsltContextFunction ^ ResolveFunction(System::String ^ prefix, System::String ^ name, cli::array &lt;System::Xml::XPath::XPathResultType&gt; ^ argTypes);" />
      <MemberSignature Language="F#" Value="override this.ResolveFunction : string * string * System.Xml.XPath.XPathResultType[] -&gt; System.Xml.Xsl.IXsltContextFunction" Usage="xPathMessageContext.ResolveFunction (prefix, name, argTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Xsl.IXsltContextFunction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="argTypes" Type="System.Xml.XPath.XPathResultType[]" />
      </Parameters>
      <Docs>
        <param name="prefix">Prefijo de la función tal y como aparece en la expresión XPath.</param>
        <param name="name">Nombre de la función.</param>
        <param name="argTypes">Matriz de tipos de argumento de la función que se va a resolver. Este método permite seleccionar varios métodos con el mismo nombre, por ejemplo, métodos sobrecargados.</param>
        <summary>Resuelve una referencia de función y devuelve un <see cref="T:System.Xml.Xsl.IXsltContextFunction" /> que representa la función.</summary>
        <returns>Un <see cref="T:System.Xml.Xsl.IXsltContextFunction" /> que representa la función.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El [IXsltContextFunction](ms-help://MS.MSSDK.1033/MS.WinFXSDK.1033/cpref37/html/T_System_Xml_Xsl_IXsltContextFunction.htm) se utiliza en tiempo de ejecución para evaluar la función.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="argTypes" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveVariable">
      <MemberSignature Language="C#" Value="public override System.Xml.Xsl.IXsltContextVariable ResolveVariable (string prefix, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.Xsl.IXsltContextVariable ResolveVariable(string prefix, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.XPathMessageContext.ResolveVariable(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveVariable (prefix As String, name As String) As IXsltContextVariable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::Xsl::IXsltContextVariable ^ ResolveVariable(System::String ^ prefix, System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.ResolveVariable : string * string -&gt; System.Xml.Xsl.IXsltContextVariable" Usage="xPathMessageContext.ResolveVariable (prefix, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Xsl.IXsltContextVariable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">Prefijo de la variable tal y como aparece en la expresión XPath.</param>
        <param name="name">Nombre de la variable.</param>
        <summary>Resuelve una referencia de variable y devuelve <see cref="T:System.Xml.Xsl.IXsltContextVariable" />, que representa la variable.</summary>
        <returns><see cref="T:System.Xml.Xsl.IXsltContextVariable" /> que representa la variable en tiempo de ejecución.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Xsl.IXsltContextVariable> se utiliza en tiempo de ejecución para obtener el valor de la variable.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Whitespace">
      <MemberSignature Language="C#" Value="public override bool Whitespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Whitespace" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.XPathMessageContext.Whitespace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Whitespace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Whitespace { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Whitespace : bool" Usage="System.ServiceModel.Dispatcher.XPathMessageContext.Whitespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si incluir nodos de espacio en blanco en el resultado.</summary>
        <value>Siempre devuelve <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad se debe invalidar en una clase derivada para que se pueda utilizar.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>