<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="JsonQueryStringConverter.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52dfd6fa362e4123db7eb2d6f47bcb1e0bc29ad98.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2dfd6fa362e4123db7eb2d6f47bcb1e0bc29ad98</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
          <source>This class converts a parameter value to and from a JavaScript Object Notation (JSON).</source>
          <target state="translated">Esta clase convierte un valor de parámetro en JavaScript Object Notation (JSON) y viceversa.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
          <source>Parameters can be specified in a JSON query string within a URL.</source>
          <target state="translated">Los parámetros se pueden especificar en una cadena de consulta JSON dentro de una dirección URL.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
          <source>This class controls how JSON query string parameters are mapped to and from a service operation's parameters when the <ph id="ph1">&lt;xref:System.ServiceModel.Description.WebScriptEnablingBehavior&gt;</ph> is used to process HTTP requests from browser-based ASP.NET AJAX clients.</source>
          <target state="translated">Esta clase controla cómo se asignan los parámetros de cadena de consulta JSON a los parámetros de una operación del servicio y viceversa cuando se utiliza <ph id="ph1">&lt;xref:System.ServiceModel.Description.WebScriptEnablingBehavior&gt;</ph> para procesar las solicitudes HTTP procedentes de clientes ASP.NET AJAX basados en explorador.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
          <source>This class is used internally by the <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph><ph id="ph2">&lt;xref:System.ServiceModel.Description.WebScriptEnablingBehavior&gt;</ph> class for endpoints configured to accept HTTP GET/POST requests with parameters encoded in the URI query string.</source>
          <target state="translated">La clase <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph><ph id="ph2">&lt;xref:System.ServiceModel.Description.WebScriptEnablingBehavior&gt;</ph> utiliza internamente esta clase para los extremos configurados para aceptar solicitudes HTTP GET/POST con parámetros codificados en la cadena de consulta URI.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
          <source>This class is used to convert between CLR objects and the individual operation request parameter values in the URI query string.</source>
          <target state="translated">Esta clase se utiliza para convertir entre objetos CLR y valores de parámetro de solicitud de operación individuales en la cadena de consulta del URI.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
          <source>Unlike its base type, this class supports values of both primitive and complex types.</source>
          <target state="translated">A diferencia de su tipo base, esta clase admite valores de los tipos primitivo y complejo.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.JsonQueryStringConverter&gt;</ph> derives from <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.QueryStringConverter&gt;</ph> and supports the following types:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.JsonQueryStringConverter&gt;</ph> deriva de <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.QueryStringConverter&gt;</ph> y admite los tipos siguientes:</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
          <source>An <ph id="ph1">&lt;xref:System.Array&gt;</ph> of type <ph id="ph2">&lt;xref:System.Byte&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Array&gt;</ph> de tipo <ph id="ph2">&lt;xref:System.Byte&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
          <source>Unlike its base type, this converter can handle any type adhering to the Data Contract model.</source>
          <target state="translated">A diferencia de su tipo base, este conversor puede administrar cualquier tipo que siga modelo de contrato de datos.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
          <source>The converter overrides <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29&gt;</ph> so that each parameter is serialized to JSON using the default <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer&gt;</ph> and a JSON XML Writer configured to use the UTF-8 encoding.</source>
          <target state="translated">El conversor invalida <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29&gt;</ph> de modo que cada parámetro se serializa en JSON utilizando el <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer&gt;</ph> predeterminado y un sistema de escritura de JSON XML configurado para utilizar la codificación UTF-8.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
          <source><ph id="ph1">`null`</ph> parameters are returned as <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph> parámetros que se devuelven como <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to verify.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que se va a comprobar.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)">
          <source>Gets a value that indicates whether a Common Language Runtime (CLR) type specified is a known type that can be serialized and deserialized.</source>
          <target state="translated">Obtiene un valor que indica si un tipo de Common Language Runtime (CLR) especificado es un tipo conocido que se puede serializar y deserializar.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the type can be serialized; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si se puede serializar el tipo; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)">
          <source>This checks whether a CLR type can be used in a JSON query string.</source>
          <target state="translated">Esto comprueba si un tipo CLR se puede utilizar en una cadena de consulta JSON.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)">
          <source>The CLR types that can be used in such a string are just those that are supported by <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>.</source>
          <target state="translated">Los tipos CLR que se pueden utilizar en este tipo de cadena son sólo los que <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> admite.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;paramref name="type" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(System.String,System.Type)">
          <source>The JSON form of the parameter value.</source>
          <target state="translated">El formulario JSON del valor de parámetro.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(System.String,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to deserialize the parameter to.</source>
          <target state="translated">El <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> donde deserializar el parámetro.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(System.String,System.Type)">
          <source>Deserializes a JavaScript Object Notation (JSON) query string parameter to a specified Common Language Runtime (CLR) type.</source>
          <target state="translated">Deserializa un parámetro de cadena de consulta JavaScript Object Notation (JSON) en un tipo Common Language Runtime (CLR) especificado.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(System.String,System.Type)">
          <source>An instance of the CLR type to which the parameter value was converted.</source>
          <target state="translated">Una instancia del tipo CLR en la que se convirtió el valor de parámetro.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)">
          <source>The parameter value to convert.</source>
          <target state="translated">El valor de parámetro a convertir.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the parameter to serialize.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del parámetro que se va a serializar.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)">
          <source>Serializes a Common Language Runtime (CLR) parameter type to a JavaScript Object Notation (JSON) representation.</source>
          <target state="translated">Serializa un tipo parámetro Common Language Runtime (CLR) en una representación JavaScript Object Notation (JSON).</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)">
          <source>The JSON query string parameter serialization of the CLR type.</source>
          <target state="translated">La serialización de parámetro de cadena de consulta JSON del tipo CLR.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> is returned if the parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Se devuelve <ph id="ph1">&lt;see langword="null" /&gt;</ph> si el parámetro es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)">
          <source>The converter overrides <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29&gt;</ph> so that each parameter is serialized to JSON using the default <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer&gt;</ph> and a JSON XML Writer configured to use the UTF-8 encoding.</source>
          <target state="translated">El conversor invalida <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29&gt;</ph> de modo que cada parámetro se serializa en JSON utilizando el <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer&gt;</ph> predeterminado y un sistema de escritura de JSON XML configurado para utilizar la codificación UTF-8.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)">
          <source>Unlike its base type, this converter can handle any type adhering to the Data Contract model.</source>
          <target state="translated">A diferencia de su tipo base, este conversor puede administrar cualquier tipo que siga modelo de contrato de datos.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)">
          <source>Consider the following operation.</source>
          <target state="translated">Considere la siguiente operación.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)">
          <source>This operation produces a URL that is a URL-encoded version of the following.</source>
          <target state="translated">Esta operación genera una dirección URL que es una versión con codificación URL de lo siguiente.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>