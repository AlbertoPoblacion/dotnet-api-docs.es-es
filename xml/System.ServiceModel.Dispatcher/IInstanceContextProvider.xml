<Type Name="IInstanceContextProvider" FullName="System.ServiceModel.Dispatcher.IInstanceContextProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d0aa99f55ad7d6609f503f36a43869a0e77c65cc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IInstanceContextProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInstanceContextProvider" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInstanceContextProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IInstanceContextProvider" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="3d849-101">Implemente esta interfaz para participar en la creación de un objeto <see cref="T:System.ServiceModel.InstanceContext" />, o elegir uno, sobre todo para habilitar sesiones compartidas.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3d849-101">Implement to participate in the creation or choosing of a <see cref="T:System.ServiceModel.InstanceContext" /> object, especially to enable shared sessions.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d849-102">Implemente la interfaz <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> para proporcionar al sistema el objeto <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> adecuado.</span><span class="sxs-lookup"><span data-stu-id="3d849-102">Implement the <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> interface to provide the appropriate <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> object to the system.</span></span> <span data-ttu-id="3d849-103">Normalmente, esta interfaz se implementa para admitir sesiones compartidas, habilitar la agrupación de instancias de servicio, controlar las duraciones de las instancias de servicio o agrupar contextos entre los clientes.</span><span class="sxs-lookup"><span data-stu-id="3d849-103">Typically, this interface is implemented to support shared sessions, enable service instance pooling, control lifetimes of service instances, or to group contexts among clients.</span></span>  
  
 <span data-ttu-id="3d849-104">Por ejemplo, para implementar el uso compartido, inserte un objeto <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> personalizado para decidir qué sesión o llamada de un cliente se asocia a qué objeto <xref:System.ServiceModel.InstanceContext>.</span><span class="sxs-lookup"><span data-stu-id="3d849-104">For example, to implement sharing, insert a custom <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> to decide which session or call from a client is associated with which <xref:System.ServiceModel.InstanceContext> object.</span></span> <span data-ttu-id="3d849-105">Para obtener un ejemplo que muestra el uso compartido de contextos de instancia, consulte [InstanceContextSharing](http://msdn.microsoft.com/library/4a6a46d7-b7d7-4bb5-a0dd-03ffa3cbc230).</span><span class="sxs-lookup"><span data-stu-id="3d849-105">For an example that demonstrates the sharing of instance contexts, see [InstanceContextSharing](http://msdn.microsoft.com/library/4a6a46d7-b7d7-4bb5-a0dd-03ffa3cbc230).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3d849-106">Cuando se inserta un objeto <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> en [!INCLUDE[indigo1](~/includes/indigo1-md.md)], la propiedad normal que controla la creación de objetos <xref:System.ServiceModel.InstanceContext> (la propiedad <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> ) no se comprueba y ya no tiene efecto alguno.</span><span class="sxs-lookup"><span data-stu-id="3d849-106">When an <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> is inserted into [!INCLUDE[indigo1](~/includes/indigo1-md.md)], the normal property that controls the creation of <xref:System.ServiceModel.InstanceContext> objects (the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> property) is no longer checked and has no effect.</span></span>  
  
 <span data-ttu-id="3d849-107">Un mecanismo más genérico por el que puede inicializar objetos <xref:System.ServiceModel.InstanceContext> cuando se crean (por ejemplo, para adjuntar extensiones personalizadas a cada <xref:System.ServiceModel.InstanceContext>) es <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3d849-107">A more generic mechanism by which you can initialize <xref:System.ServiceModel.InstanceContext> objects when created (for example, to attach custom extensions to each <xref:System.ServiceModel.InstanceContext>) is the <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetExistingInstanceContext">
      <MemberSignature Language="C#" Value="public System.ServiceModel.InstanceContext GetExistingInstanceContext (System.ServiceModel.Channels.Message message, System.ServiceModel.IContextChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.InstanceContext GetExistingInstanceContext(class System.ServiceModel.Channels.Message message, class System.ServiceModel.IContextChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::InstanceContext ^ GetExistingInstanceContext(System::ServiceModel::Channels::Message ^ message, System::ServiceModel::IContextChannel ^ channel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="channel" Type="System.ServiceModel.IContextChannel" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="3d849-108">Mensaje entrante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d849-108">The incoming message.</span>
          </span>
        </param>
        <param name="channel">
          <span data-ttu-id="3d849-109">Canal que recibió el mensaje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d849-109">The channel that received the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d849-110">Se le llama cuando se recibe un nuevo mensaje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d849-110">Called when a new message is received.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d849-111">Objeto <see cref="T:System.ServiceModel.InstanceContext" /> que se utiliza para procesar el mensaje. Devuelva <see langword="null" /> para indicar a [!INCLUDE[indigo2](~/includes/indigo2-md.md)] que cree un nuevo objeto <see cref="T:System.ServiceModel.InstanceContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d849-111">The <see cref="T:System.ServiceModel.InstanceContext" /> object that is used to process the message; return <see langword="null" /> to instruct [!INCLUDE[indigo2](~/includes/indigo2-md.md)] to create a new <see cref="T:System.ServiceModel.InstanceContext" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d849-112">Se llama al método <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext%2A> cuando se recibe un mensaje.</span><span class="sxs-lookup"><span data-stu-id="3d849-112">The <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext%2A> method is called when a message is received.</span></span> <span data-ttu-id="3d849-113">Devuelva el objeto <xref:System.ServiceModel.InstanceContext> que desea que procese el mensaje, o `null`.</span><span class="sxs-lookup"><span data-stu-id="3d849-113">Return the <xref:System.ServiceModel.InstanceContext> object that you want to process the message, or `null`.</span></span> <span data-ttu-id="3d849-114">En el caso de `null`, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] crea un nuevo objeto <xref:System.ServiceModel.InstanceContext> para el mensaje y, a continuación, llama al método <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext%2A>.</span><span class="sxs-lookup"><span data-stu-id="3d849-114">In the case of `null`, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] creates a new <xref:System.ServiceModel.InstanceContext> object for the message and then calls the <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext%2A> method.</span></span>  
  
 <span data-ttu-id="3d849-115">Si devuelve `null`, el nuevo objeto <xref:System.ServiceModel.InstanceContext> pasa por el sistema de limitación de peticiones e incrementa el número de <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3d849-115">If you return `null`, the new <xref:System.ServiceModel.InstanceContext> object goes through the throttling system and increments the count of <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeInstanceContext">
      <MemberSignature Language="C#" Value="public void InitializeInstanceContext (System.ServiceModel.InstanceContext instanceContext, System.ServiceModel.Channels.Message message, System.ServiceModel.IContextChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeInstanceContext(class System.ServiceModel.InstanceContext instanceContext, class System.ServiceModel.Channels.Message message, class System.ServiceModel.IContextChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitializeInstanceContext(System::ServiceModel::InstanceContext ^ instanceContext, System::ServiceModel::Channels::Message ^ message, System::ServiceModel::IContextChannel ^ channel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceContext" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="channel" Type="System.ServiceModel.IContextChannel" />
      </Parameters>
      <Docs>
        <param name="instanceContext">
          <span data-ttu-id="3d849-116">El nuevo objeto <see cref="T:System.ServiceModel.InstanceContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d849-116">The new <see cref="T:System.ServiceModel.InstanceContext" /> object.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="3d849-117">Mensaje entrante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d849-117">The incoming message.</span>
          </span>
        </param>
        <param name="channel">
          <span data-ttu-id="3d849-118">Canal que recibió el mensaje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d849-118">The channel that received the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d849-119">Se le llama cuando se devuelve <see langword="null" /> desde el método <see cref="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d849-119">Called when <see langword="null" /> is returned from the <see cref="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d849-120">Se llama a <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext%2A> cuando <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext%2A> devuelve `null` y se crea un nuevo objeto <xref:System.ServiceModel.InstanceContext>.</span><span class="sxs-lookup"><span data-stu-id="3d849-120"><xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext%2A> is called when <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext%2A> returns `null` and a new <xref:System.ServiceModel.InstanceContext> object is created.</span></span> <span data-ttu-id="3d849-121">Se llama a este método para notificar al usuario que se ha creado un nuevo <xref:System.ServiceModel.InstanceContext>.</span><span class="sxs-lookup"><span data-stu-id="3d849-121">This method is called to notify you that a new <xref:System.ServiceModel.InstanceContext> has been created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIdle">
      <MemberSignature Language="C#" Value="public bool IsIdle (System.ServiceModel.InstanceContext instanceContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsIdle(class System.ServiceModel.InstanceContext instanceContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsIdle(System::ServiceModel::InstanceContext ^ instanceContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceContext" Type="System.ServiceModel.InstanceContext" />
      </Parameters>
      <Docs>
        <param name="instanceContext">
          <span data-ttu-id="3d849-122">Objeto <see cref="T:System.ServiceModel.InstanceContext" /> que se considera inactivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d849-122">The <see cref="T:System.ServiceModel.InstanceContext" /> object that is considered idle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d849-123">Se le llama cuando todas las actividades de <see cref="T:System.ServiceModel.InstanceContext" /> han terminado, para permitir que los implementadores eviten que se recicle <see cref="T:System.ServiceModel.InstanceContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d849-123">Called when all <see cref="T:System.ServiceModel.InstanceContext" /> activities have completed to enable implementers to prevent the <see cref="T:System.ServiceModel.InstanceContext" /> from being recycled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3d849-124">
            <see langword="true" /> si [!INCLUDE[indigo1](~/includes/indigo1-md.md)] se debe cerrar y reciclar el objeto <see cref="T:System.ServiceModel.InstanceContext" />, y ajustar el valor de <see cref="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances" />; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d849-124">
              <see langword="true" /> if [!INCLUDE[indigo1](~/includes/indigo1-md.md)] is to close and recycle the <see cref="T:System.ServiceModel.InstanceContext" /> object and adjust the value of <see cref="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d849-125">Se llama a <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> cuando [!INCLUDE[indigo2](~/includes/indigo2-md.md)] está a punto de cerrarse y de reciclar un objeto <xref:System.ServiceModel.InstanceContext> inactivo, para que el usuario pueda informar al tiempo de ejecución si debe seguir haciéndolo.</span><span class="sxs-lookup"><span data-stu-id="3d849-125"><xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> is called when [!INCLUDE[indigo2](~/includes/indigo2-md.md)] is about to close and recycle an idle <xref:System.ServiceModel.InstanceContext> object so that you can inform the runtime whether to continue doing so.</span></span>  
  
 <span data-ttu-id="3d849-126">Para obtener un ejemplo que muestra el uso compartido de contextos de instancia, consulte [InstanceContextSharing](http://msdn.microsoft.com/library/4a6a46d7-b7d7-4bb5-a0dd-03ffa3cbc230).</span><span class="sxs-lookup"><span data-stu-id="3d849-126">For an example that demonstrates the sharing of instance contexts, see [InstanceContextSharing](http://msdn.microsoft.com/library/4a6a46d7-b7d7-4bb5-a0dd-03ffa3cbc230).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyIdle">
      <MemberSignature Language="C#" Value="public void NotifyIdle (System.ServiceModel.Dispatcher.InstanceContextIdleCallback callback, System.ServiceModel.InstanceContext instanceContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyIdle(class System.ServiceModel.Dispatcher.InstanceContextIdleCallback callback, class System.ServiceModel.InstanceContext instanceContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle(System.ServiceModel.Dispatcher.InstanceContextIdleCallback,System.ServiceModel.InstanceContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NotifyIdle(System::ServiceModel::Dispatcher::InstanceContextIdleCallback ^ callback, System::ServiceModel::InstanceContext ^ instanceContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.ServiceModel.Dispatcher.InstanceContextIdleCallback" />
        <Parameter Name="instanceContext" Type="System.ServiceModel.InstanceContext" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="3d849-127">Objeto <see cref="T:System.ServiceModel.Dispatcher.InstanceContextIdleCallback" /> que notifica a [!INCLUDE[indigo2](~/includes/indigo2-md.md)] cuando el objeto <see cref="T:System.ServiceModel.InstanceContext" /> se debe cerrar y reciclar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d849-127">The <see cref="T:System.ServiceModel.Dispatcher.InstanceContextIdleCallback" /> object that notifies [!INCLUDE[indigo2](~/includes/indigo2-md.md)] when the <see cref="T:System.ServiceModel.InstanceContext" /> object is to be closed and recycled.</span>
          </span>
        </param>
        <param name="instanceContext">
          <span data-ttu-id="3d849-128">Objeto <see cref="T:System.ServiceModel.InstanceContext" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d849-128">The current <see cref="T:System.ServiceModel.InstanceContext" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3d849-129">Se le llama cuando el método <see cref="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)" /> devuelve <see langword="false" /> para permitir que los implementadores proporcionen una devolución de llamada para notificar a [!INCLUDE[indigo2](~/includes/indigo2-md.md)] cuando ha finalizado el objeto <see cref="T:System.ServiceModel.InstanceContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3d849-129">Called when the <see cref="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)" /> method returns <see langword="false" /> to enable implementers to provide a callback to notify [!INCLUDE[indigo2](~/includes/indigo2-md.md)] when the <see cref="T:System.ServiceModel.InstanceContext" /> object is finished.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d849-130">Se llama al método <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle%2A> cuando el método <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> devuelve `false` para que el usuario pueda proporcionar a [!INCLUDE[indigo2](~/includes/indigo2-md.md)] un objeto <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=nameWithType> que se utiliza para notificar al tiempo de ejecución que <xref:System.ServiceModel.InstanceContext> ha terminado su trabajo.</span><span class="sxs-lookup"><span data-stu-id="3d849-130">The <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle%2A> method is called when the <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> method returns `false` to enable you to provide [!INCLUDE[indigo2](~/includes/indigo2-md.md)] with a <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=nameWithType> object that you use to inform the runtime that the <xref:System.ServiceModel.InstanceContext> has finished its work.</span></span> <span data-ttu-id="3d849-131">Cuando el objeto <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=nameWithType> notifica al tiempo de ejecución que <xref:System.ServiceModel.InstanceContext> ha finalizado su trabajo, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] vuelve a llamar a <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A>.</span><span class="sxs-lookup"><span data-stu-id="3d849-131">When the <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=nameWithType> object notifies the runtime that the <xref:System.ServiceModel.InstanceContext> has finished its work, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] calls <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> once again.</span></span> <span data-ttu-id="3d849-132">Este ciclo continúa hasta que <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> devuelve `true`, y el contexto se cierra y se recicla.</span><span class="sxs-lookup"><span data-stu-id="3d849-132">This cycle continues until <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> returns `true` and the context is closed and recycled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>