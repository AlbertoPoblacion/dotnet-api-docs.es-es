<Type Name="ExpressionContext" FullName="System.ComponentModel.Design.Serialization.ExpressionContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b43ece75e54589dff9cf246ce425cfe2775514ac" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ExpressionContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExpressionContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.ExpressionContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExpressionContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionContext sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="51b8c-101">Proporciona un medio para pasar el estado de contexto entre los serializadores.</span>
      <span class="sxs-lookup">
        <span data-stu-id="51b8c-101">Provides a means of passing context state among serializers.</span>
      </span>
      <span data-ttu-id="51b8c-102">Esta clase no puede heredarse.</span>
      <span class="sxs-lookup">
        <span data-stu-id="51b8c-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b8c-103">Un <xref:System.ComponentModel.Design.Serialization.ExpressionContext> se coloca en la pila de contexto y contiene la expresión más relevante durante la serialización.</span><span class="sxs-lookup"><span data-stu-id="51b8c-103">An <xref:System.ComponentModel.Design.Serialization.ExpressionContext> is placed on the context stack and contains the most relevant expression during serialization.</span></span> <span data-ttu-id="51b8c-104">El código de C# siguiente muestra una asignación.</span><span class="sxs-lookup"><span data-stu-id="51b8c-104">The following C# code demonstrates an assignment.</span></span>  
  
```csharp  
button1.Text = "Hello";  
```  
  
 <span data-ttu-id="51b8c-105">Durante la serialización, varios serializadores son responsables de crear esta instrucción única.</span><span class="sxs-lookup"><span data-stu-id="51b8c-105">During serialization, several serializers are responsible for creating this single statement.</span></span> <span data-ttu-id="51b8c-106">Uno de esos serializadores es responsable de crear "Hello".</span><span class="sxs-lookup"><span data-stu-id="51b8c-106">One of those serializers is responsible for creating "Hello".</span></span> <span data-ttu-id="51b8c-107">Hay ocasiones cuando dicho serializador necesite conocer el contexto en el que está creando su expresión.</span><span class="sxs-lookup"><span data-stu-id="51b8c-107">There are times when that serializer may need to know the context in which it is creating its expression.</span></span> <span data-ttu-id="51b8c-108">En el ejemplo anterior, este contexto no es necesaria.</span><span class="sxs-lookup"><span data-stu-id="51b8c-108">In the previous example, this context is not needed.</span></span> <span data-ttu-id="51b8c-109">El código de C# siguiente muestra una situación en la que es necesario conocer el contexto.</span><span class="sxs-lookup"><span data-stu-id="51b8c-109">The following C# code shows a situation in which knowledge of the context is necessary.</span></span>  
  
```csharp  
button1.Text = rm.GetString("button1_Text");  
```  
  
 <span data-ttu-id="51b8c-110">En este caso, el serializador responsable de crear la expresión de recurso debe ser informado de los nombres de los objetos de destino.</span><span class="sxs-lookup"><span data-stu-id="51b8c-110">In this case, the serializer responsible for creating the resource expression needs to be informed of the names of the target objects.</span></span> <span data-ttu-id="51b8c-111">La <xref:System.ComponentModel.Design.Serialization.ExpressionContext> clase puede usarse para este.</span><span class="sxs-lookup"><span data-stu-id="51b8c-111">The <xref:System.ComponentModel.Design.Serialization.ExpressionContext> class can be used for this.</span></span> <span data-ttu-id="51b8c-112">Como cada serializador crea una expresión e invoca un serializador para controlar una parte menor de la instrucción como un todo, el serializador inserta un contexto de expresión en la pila de contexto.</span><span class="sxs-lookup"><span data-stu-id="51b8c-112">As each serializer creates an expression and invokes a serializer to handle a smaller part of the statement as a whole, the serializer pushes an expression context on the context stack.</span></span> <span data-ttu-id="51b8c-113">Cada contexto de expresión tiene una propiedad primaria que busca el contexto de la expresión siguiente en la pila.</span><span class="sxs-lookup"><span data-stu-id="51b8c-113">Each expression context has a parent property that locates the next expression context on the stack.</span></span> <span data-ttu-id="51b8c-114">Esto proporciona una práctica función de recorrido.</span><span class="sxs-lookup"><span data-stu-id="51b8c-114">This provides a convenient traversal capability.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
    <altmember cref="T:System.CodeDom.CodeExpression" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="51b8c-115">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51b8c-115">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionContext (System.CodeDom.CodeExpression expression, Type expressionType, object owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeExpression expression, class System.Type expressionType, object owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expression As CodeExpression, expressionType As Type, owner As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpressionContext(System::CodeDom::CodeExpression ^ expression, Type ^ expressionType, System::Object ^ owner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="expressionType" Type="System.Type" />
        <Parameter Name="owner" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="51b8c-116">La expresión de código especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51b8c-116">The given code expression.</span>
          </span>
        </param>
        <param name="expressionType">
          <span data-ttu-id="51b8c-117">El tipo de expresión de código especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51b8c-117">The given code expression type.</span>
          </span>
        </param>
        <param name="owner">
          <span data-ttu-id="51b8c-118">El propietario de la expresión de código especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51b8c-118">The given code expression owner.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51b8c-119">Inicializa una instancia nueva de la clase <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> con la expresión y el propietario especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51b8c-119">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> class with the given expression and owner.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="51b8c-120">
            <paramref name="expression" />, <paramref name="expressionType" /> o <paramref name="owner" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51b8c-120">
              <paramref name="expression" />, <paramref name="expressionType" />, or <paramref name="owner" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionContext (System.CodeDom.CodeExpression expression, Type expressionType, object owner, object presetValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeExpression expression, class System.Type expressionType, object owner, object presetValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expression As CodeExpression, expressionType As Type, owner As Object, presetValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpressionContext(System::CodeDom::CodeExpression ^ expression, Type ^ expressionType, System::Object ^ owner, System::Object ^ presetValue);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="expressionType" Type="System.Type" />
        <Parameter Name="owner" Type="System.Object" />
        <Parameter Name="presetValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="51b8c-121">La expresión de código especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51b8c-121">The given code expression.</span>
          </span>
        </param>
        <param name="expressionType">
          <span data-ttu-id="51b8c-122">El tipo de expresión de código especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51b8c-122">The given code expression type.</span>
          </span>
        </param>
        <param name="owner">
          <span data-ttu-id="51b8c-123">El propietario de la expresión de código especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51b8c-123">The given code expression owner.</span>
          </span>
        </param>
        <param name="presetValue">
          <span data-ttu-id="51b8c-124">El valor preestablecido de la expresión de código especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51b8c-124">The given code expression preset value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51b8c-125">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> con un valor actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51b8c-125">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> class with a current value.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="51b8c-126">
            <paramref name="expression" />, <paramref name="expressionType" /> o <paramref name="owner" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51b8c-126">
              <paramref name="expression" />, <paramref name="expressionType" />, or <paramref name="owner" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeExpression Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeExpression Expression" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ExpressionContext.Expression" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expression As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeExpression ^ Expression { System::CodeDom::CodeExpression ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51b8c-127">Obtiene la expresión que representa este contexto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51b8c-127">Gets the expression this context represents.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51b8c-128">Expresión que representa este contexto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51b8c-128">The expression this context represents.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="ExpressionType">
      <MemberSignature Language="C#" Value="public Type ExpressionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ExpressionType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpressionType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ExpressionType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51b8c-129">Obtiene el objeto <see cref="T:System.Type" /> de la expresión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51b8c-129">Gets the <see cref="T:System.Type" /> of the expression.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51b8c-130">Objeto <see cref="T:System.Type" /> de la expresión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51b8c-130">The <see cref="T:System.Type" /> of the expression.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b8c-131">Puede usar <xref:System.ComponentModel.Design.Serialization.ExpressionContext> para determinar si se necesita una conversión de tipos cuando se asigna a la expresión.</span><span class="sxs-lookup"><span data-stu-id="51b8c-131">You can use <xref:System.ComponentModel.Design.Serialization.ExpressionContext> to determine if a cast is needed when assigning to the expression.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public object Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Owner" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ExpressionContext.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Owner { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51b8c-132">Obtiene el objeto propietario de esta expresión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51b8c-132">Gets the object owning this expression.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51b8c-133">Objeto propietario de esta expresión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51b8c-133">The object owning this expression.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b8c-134">Si la expresión es una referencia de propiedad a la <xref:System.Windows.Forms.Control.Text%2A> propiedad de una instancia de <xref:System.Windows.Forms.Button> llama `button1`, <xref:System.ComponentModel.Design.Serialization.ExpressionContext.Owner%2A> devuelve `button1`.</span><span class="sxs-lookup"><span data-stu-id="51b8c-134">If the expression is a property reference to the <xref:System.Windows.Forms.Control.Text%2A> property of an instance of <xref:System.Windows.Forms.Button> called `button1`, <xref:System.ComponentModel.Design.Serialization.ExpressionContext.Owner%2A> returns `button1`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="PresetValue">
      <MemberSignature Language="C#" Value="public object PresetValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PresetValue" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PresetValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PresetValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51b8c-135">Obtiene el valor preestablecido de una expresión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51b8c-135">Gets the preset value of an expression.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51b8c-136">Valor preestablecido de esta expresión o <see langword="null" /> si no hay ninguno asignado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51b8c-136">The preset value of this expression, or <see langword="null" /> if not assigned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b8c-137">Contiene el valor preestablecido de una expresión, si existe alguno.</span><span class="sxs-lookup"><span data-stu-id="51b8c-137">Contains the preset value of an expression, should one exist.</span></span> <span data-ttu-id="51b8c-138">Por ejemplo, si la expresión es una expresión de referencia de propiedad que hace referencia a la <xref:System.Windows.Forms.Control.Controls%2A> propiedad de un <xref:System.Windows.Forms.Button>, <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> propiedad contiene la instancia de la <xref:System.Windows.Forms.Control.Controls%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="51b8c-138">For example, if the expression is a property reference expression referring to the <xref:System.Windows.Forms.Control.Controls%2A> property of a <xref:System.Windows.Forms.Button>, the <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> property contains the instance of the <xref:System.Windows.Forms.Control.Controls%2A> property.</span></span> <span data-ttu-id="51b8c-139">Esto es porque la propiedad es de solo lectura y preestablecido por el objeto que contenga un valor.</span><span class="sxs-lookup"><span data-stu-id="51b8c-139">This is because the property is read-only and preset by the object to contain a value.</span></span> <span data-ttu-id="51b8c-140">Por otro lado, una propiedad como <xref:System.Windows.Forms.Control.Text%2A> o <xref:System.Windows.Forms.Control.Visible%2A> no tiene un valor preestablecido y, por tanto, la <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> propiedad devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="51b8c-140">On the other hand, a property such as <xref:System.Windows.Forms.Control.Text%2A> or <xref:System.Windows.Forms.Control.Visible%2A> does not have a preset value and therefore the <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> property returns `null`.</span></span>  
  
 <span data-ttu-id="51b8c-141">El código de C# siguiente muestra cómo los serializadores pueden utilizar esta información para guiar la serialización.</span><span class="sxs-lookup"><span data-stu-id="51b8c-141">The following C# code shows how serializers can use this information to guide serialization.</span></span>  
  
```csharp  
Padding p = new Padding();  
p.Left = 5;  
button1.Padding = p;  
  
button1.Padding.Left = 5;  
```  
  
 <span data-ttu-id="51b8c-142">El serializador de la <xref:System.Windows.Forms.Padding> estructura debe ser informado si debe generar el primer o el segundo formulario.</span><span class="sxs-lookup"><span data-stu-id="51b8c-142">The serializer of the <xref:System.Windows.Forms.Padding> structure needs to be informed if it should generate the first or second form.</span></span> <span data-ttu-id="51b8c-143">El primer formulario se genera de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="51b8c-143">The first form is generated by default.</span></span> <span data-ttu-id="51b8c-144">El segundo formulario solo se genera si se produce un <xref:System.ComponentModel.Design.Serialization.ExpressionContext> en la pila de contexto que contiene un <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> igual que el valor de la <xref:System.Windows.Forms.Padding> actualmente que se está serializando.</span><span class="sxs-lookup"><span data-stu-id="51b8c-144">The second form is only generated if there is an <xref:System.ComponentModel.Design.Serialization.ExpressionContext> on the context stack that contains a <xref:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue%2A> equal to the value of the <xref:System.Windows.Forms.Padding> currently being serialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
  </Members>
</Type>