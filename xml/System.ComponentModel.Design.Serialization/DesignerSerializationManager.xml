<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DesignerSerializationManager.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e4a005e0451f128854a14f9e2a11fbf960f7114e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e4a005e0451f128854a14f9e2a11fbf960f7114e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>Provides an implementation of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph> interface.</source>
          <target state="translated">Proporciona una implementación de la interfaz <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;</ph> interface is designed to be a format-independent interface to an object that controls serialization.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;</ph> interfaz está diseñada para ser una interfaz independiente del formato a un objeto que controla la serialización.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>It essentially provides context and services to serializers, which actually perform the deserialization.</source>
          <target state="translated">Básicamente proporciona contexto y los servicios a los serializadores, que realmente realizan la deserialización.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;</ph> assists in the deserialization process by keeping track of objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;</ph> Ayuda en el proceso de deserialización mediante el seguimiento de objetos.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>This is similar in technique to the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> interface: designers actually provide the user interface (UI), and <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> provides the glue that allows different designers to work together.</source>
          <target state="translated">Esto es similar en técnica para la <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> interfaz: diseñadores realmente proporcionan la interfaz de usuario (UI), y <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> proporciona el elemento aglutinante que permite que distintos diseñadores trabajen juntos.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager&gt;</ph> class implements <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager&gt;</ph> la clase implementa <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>It is designed to provide a generic form of deserialization that is similar to run-time serializers like the <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>.</source>
          <target state="translated">Está diseñado para proporcionar un formulario genérico de deserialización que es similar a los serializadores de tiempo de ejecución como el <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager&gt;</ph> class achieves three goals:</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager&gt;</ph> clase logra tres objetivos:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>It is a simple, turnkey object that can be used to deserialize a variety of formats.</source>
          <target state="translated">Es un objeto simple y llave en mano que puede utilizarse para deserializar una variedad de formatos.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>It is generic and not tied to any particular format.</source>
          <target state="translated">Es genérico y no está asociado a un formato concreto.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>It can be used equally for CodeDOM deserialization as well as markup deserialization.</source>
          <target state="translated">Se puede utilizar igualmente para la deserialización de CodeDOM, así como la deserialización de marcado.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>It is extensible and supports different serialization methods that are used in copy/paste and undo/redo scenarios.</source>
          <target state="translated">Es extensible y admite los métodos de serialización diferente que se usan en escenarios de copiar y pegar y deshacer/rehacer.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>Design-time serialization has the following differences from run-time object serialization:</source>
          <target state="translated">Serialización en tiempo de diseño tiene las siguientes diferencias de la serialización de objetos en tiempo de ejecución:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>The object performing the serialization is generally separate from the run-time object, so that design-time logic can be removed from a component.</source>
          <target state="translated">Objeto que realiza la serialización es generalmente independiente desde el objeto de tiempo de ejecución, por lo que se puede quitar la lógica en tiempo de diseño de un componente.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>The serialization scheme assumes the object will be created fully initialized, and then modified through property and method invocations during deserialization.</source>
          <target state="translated">El esquema de serialización se da por supuesto que el objeto se creará totalmente inicializado y, a continuación, modificar a través de invocaciones de propiedades y métodos durante la deserialización.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>Properties of an object that have values that were never set on the object (the properties contain the default values) are not serialized.</source>
          <target state="translated">No se serializan las propiedades de un objeto que tienen valores que nunca se establecieron en el objeto (las propiedades contienen los valores predeterminados).</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>Conversely, the deserialization stream may have holes.</source>
          <target state="translated">Por el contrario, la secuencia de deserialización puede tener lagunas.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>Emphasis is placed on the quality of the content within the serialization stream, rather than the full serialization of an object.</source>
          <target state="translated">Se pone énfasis en la calidad del contenido dentro de la secuencia de serialización, en lugar de la serialización completa de un objeto.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>This means that if there is no defined way to serialize an object, that object may be skipped rather than throwing an exception.</source>
          <target state="translated">Esto significa que si no hay ninguna manera definida para serializar un objeto, se puede omitir ese objeto en lugar de producir una excepción.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>The serialization engine may provide heuristics here to decide which failures can be ignored and which are unrecoverable.</source>
          <target state="translated">El motor de serialización puede proporcionar aquí la heurística para decidir qué errores se pueden omitir y cuáles son irrecuperables.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>The serialization stream may have more data than is needed for deserialization.</source>
          <target state="translated">La secuencia de serialización puede tener más datos de los necesarios para la deserialización.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>Source code serialization, for example, has user code mixed in with the code needed to deserialize an object graph.</source>
          <target state="translated">Serialización de código fuente, por ejemplo, tiene código de usuario combinado con el código necesario para deserializar un gráfico de objetos.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>This user code must be ignored on deserialization and preserved on serialization.</source>
          <target state="translated">Este código de usuario se debe omitir en la deserialización y conservar en la serialización.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>Because of these differences, a different serialization model applies to design-time serialization.</source>
          <target state="translated">Debido a estas diferencias, se aplica un modelo de serialización diferente para la serialización en tiempo de diseño.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>This model utilizes a separate serializer object for each data type being serialized.</source>
          <target state="translated">Este modelo utiliza un objeto de serializador independiente para cada tipo de datos que se está serializando.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>Each serializer provides its small contribution to the problem as a whole.</source>
          <target state="translated">Cada serializador realiza su pequeña contribución para el problema como un todo.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>These serializers are all coordinated through a common serialization manager.</source>
          <target state="translated">Estos serializadores son todas las coordinadas a través de un administrador de serialización común.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>The serialization manager is responsible for maintaining state between these different serializers.</source>
          <target state="translated">El Administrador de serialización es responsable de mantener el estado entre estos serializadores diferentes.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>As an example, consider the following class:</source>
          <target state="translated">Por ejemplo, considere la siguiente clase:</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>An instance of this class would utilize three different serializers: one for <ph id="ph1">`SampleObject`</ph>, one for strings, and another for integers.</source>
          <target state="translated">Una instancia de esta clase utilizaría tres serializadores diferentes: uno para <ph id="ph1">`SampleObject`</ph>, uno para las cadenas y otro para los enteros.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>The serializer for <ph id="ph1">`SampleObject`</ph> is called the root serializer because <ph id="ph2">`SampleObject`</ph> is the root of the serialization graph.</source>
          <target state="translated">El serializador para <ph id="ph1">`SampleObject`</ph> se denomina el serializador raíz porque <ph id="ph2">`SampleObject`</ph> es la raíz del gráfico de serialización.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>More complex object graphs can be created as well.</source>
          <target state="translated">Gráficos de objetos más complejos pueden crearse también.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>For example, consider what would happen if <ph id="ph1">`SampleObject`</ph> were changed as follows:</source>
          <target state="translated">Por ejemplo, tenga en cuenta lo que sucedería si <ph id="ph1">`SampleObject`</ph> se cambiaron como sigue:</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>This allows <ph id="ph1">`SampleObject`</ph> to have a child that is another instance of itself.</source>
          <target state="translated">Esto permite <ph id="ph1">`SampleObject`</ph> tener un elemento secundario que es otra instancia de sí mismo.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>The following code fills in the object graph:</source>
          <target state="translated">El código siguiente rellena el gráfico de objetos:</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>When <ph id="ph1">`root`</ph> is serialized, there will be four serializers used: one root serializer, one serializer for the child <ph id="ph2">`SampleObject`</ph>, one serializer for <ph id="ph3">`int`</ph>, and one serializer for <ph id="ph4">`string`</ph>.</source>
          <target state="translated">Cuando <ph id="ph1">`root`</ph> se serializa, habrá cuatro serializadores: serializador una raíz, un serializador para el elemento secundario <ph id="ph2">`SampleObject`</ph>, un serializador para <ph id="ph3">`int`</ph>y un serializador para <ph id="ph4">`string`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>Serializers are cached based on type, so there is no need to create a serializer for each instance of <ph id="ph1">`SampleObject`</ph>.</source>
          <target state="translated">Los serializadores se almacenan en caché según el tipo, por lo que no es necesario para crear un serializador para cada instancia de <ph id="ph1">`SampleObject`</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager&gt;</ph> class is based on the idea of a serialization session.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager&gt;</ph> clase se basa en la idea de una sesión de serialización.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>A session maintains state that can be accessed by the various serializers.</source>
          <target state="translated">Una sesión mantiene el estado que puede tener acceso a los distintos serializadores.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>When a session is disposed, this state is destroyed.</source>
          <target state="translated">Cuando se elimina una sesión, este estado se destruye.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>This helps to ensure that serializers remain largely stateless, and helps to clean up serializers that are have been corrupted.</source>
          <target state="translated">Esto ayuda a garantizar que los serializadores permanezcan en gran medida sin estado y ayuda a limpiar los serializadores que se esté dañado.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>The following tables describe how state is managed in and among sessions.</source>
          <target state="translated">Las tablas siguientes describen cómo se administra el estado en y entre las sesiones.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>Global State</source>
          <target state="translated">Estado global</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>This state is owned by the serialization manager object, but is independent of the current serialization session.</source>
          <target state="translated">Este estado es propiedad del objeto de administrador de serialización, pero es independiente de la sesión de serialización actual.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>Object</source>
          <target state="translated">Object</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>Usage</source>
          <target state="translated">Uso</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>Serialization providers</source>
          <target state="translated">Proveedores de serialización</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>Objects can add themselves as custom serialization providers.</source>
          <target state="translated">Objetos se pueden agregar a sí mismos como proveedores de serialización personalizada.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>Because these providers are used to locate serializers, they outlive a serialization session.</source>
          <target state="translated">Dado que estos proveedores se utilizan para buscar serializadores, sobreviven a una sesión de serialización.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>Session-Owned State</source>
          <target state="translated">Estado de sesión</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>This state is owned by a session and is destroyed when a session is destroyed.</source>
          <target state="translated">Este estado es propiedad de una sesión y se destruye cuando se destruye una sesión.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>Consequently, accessing any properties or methods that would manipulate this state will throw an exception if the serialization manager is not in an active session.</source>
          <target state="translated">Por lo tanto, el acceso a las propiedades o métodos que manipulan este estado se iniciará una excepción si el Administrador de serialización no está en una sesión activa.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>Object</source>
          <target state="translated">Object</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>Usage</source>
          <target state="translated">Uso</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&gt;</ph> event</source>
          <target state="translated">Evento <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&gt;</ph></target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&gt;</ph> event is attached by a serializer to provide additional resolution of names.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&gt;</ph> evento está conectado mediante un serializador para proporcionar resolución adicional de nombres.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>All handlers are detached from this event when a session terminates.</source>
          <target state="translated">Todos los controladores se desasocian de este evento cuando finaliza una sesión.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete&gt;</ph> event</source>
          <target state="translated">Evento <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete&gt;</ph></target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete&gt;</ph> event is raised just before a session is disposed.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete&gt;</ph> evento se produce justo antes de que se elimina una sesión.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>Then, all handlers are detached from this event.</source>
          <target state="translated">A continuación, todos los controladores se desasocian de este evento.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>Name table</source>
          <target state="translated">Tabla de nombres</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>The serialization manager maintains a table that maps between objects and their names.</source>
          <target state="translated">El Administrador de serialización mantiene una tabla que asigna entre los objetos y sus nombres.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>Serializers may give objects names for easy identification.</source>
          <target state="translated">Los serializadores pueden proporcionar nombres de objetos para facilitar su identificación.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>This name table is cleared when the session terminates.</source>
          <target state="translated">Esta tabla de nombres se borra cuando finaliza la sesión.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>Serializer cache</source>
          <target state="translated">Memoria caché del serializador</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>The serialization manager maintains a cache of serializers it has been asked to supply.</source>
          <target state="translated">El Administrador de serialización mantiene una caché de serializadores que se ha solicitado al proporcionar.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>This cache is cleared when the session terminates.</source>
          <target state="translated">Esta caché se borra cuando finaliza la sesión.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>The public <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A&gt;</ph> method can safely be called at any time, but its value is cached only if it is called from within a session.</source>
          <target state="translated">Público <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A&gt;</ph> método se puede llamar de forma segura en cualquier momento, pero su valor se almacena en caché solo si se llama desde dentro de una sesión.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>Context stack</source>
          <target state="translated">Pila de contexto</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>The serialization manager maintains an object called the context stack, which you can access with the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A&gt;</ph> property.</source>
          <target state="translated">El Administrador de serialización mantiene un objeto denominado la pila de contexto, que puede tener acceso con el <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>Serializers can use this stack to store additional information that is available to other serializers.</source>
          <target state="translated">Los serializadores pueden utilizar esta pila para almacenar información adicional que está disponible para otros serializadores.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>For example, a serializer that is serializing a property value can push the property name on the serialization stack before asking the value to serialize.</source>
          <target state="translated">Por ejemplo, un serializador que esté serializando un valor de propiedad puede insertar el nombre de propiedad en la pila de serialización antes de pedir que el valor se debe serializar.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>This stack is cleared when the session is terminated.</source>
          <target state="translated">Esta pila se borra cuando se finaliza la sesión.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>Error list</source>
          <target state="translated">Lista de errores</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>The serialization manager maintains a list of errors that occurred during serialization.</source>
          <target state="translated">El Administrador de serialización mantiene una lista de errores que se produjeron durante la serialización.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>This list, which is accessed through the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A&gt;</ph> property, is cleared when the session is terminated.</source>
          <target state="translated">Esta lista, que se obtiene acceso a través de la <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A&gt;</ph> propiedad, se borra cuando se finaliza la sesión.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>Accessing the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A&gt;</ph> property between sessions will result in an exception.</source>
          <target state="translated">Obtener acceso a la <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A&gt;</ph> propiedad entre las sesiones se producirá una excepción.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A&gt;</ph> properties to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Este constructor establece la <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A&gt;</ph> propiedades para <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IServiceProvider" /&gt;</ph>.</source>
          <target state="translated">Una clase <ph id="ph1">&lt;see cref="T:System.IServiceProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /&gt;</ph> class with the given service provider.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /&gt;</ph> con el proveedor de servicios especificado.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)">
          <source>If a serializer requests services that cannot be satisfied by the serialization manager, the default implementation will forward those requests to the <ph id="ph1">`provider`</ph> parameter.</source>
          <target state="translated">Si un serializador solicita servicios que no se puede satisfacer mediante el Administrador de serialización, la implementación predeterminada reenvía las solicitudes para el <ph id="ph1">`provider`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A&gt;</ph> properties to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Este constructor establece la <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A&gt;</ph> propiedades para <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)">
          <source><ph id="ph1">&lt;paramref name="provider" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="provider" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container">
          <source>Gets or sets to the container for this serialization manager.</source>
          <target state="translated">Obtiene o establece el contenedor para este administrador de serialización.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> to which the serialization manager will add components.</source>
          <target state="translated">Interfaz <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> a la que el administrador de serialización va a agregar componentes.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container">
          <source>If a container exists, all components that are created by the serialization manager will be added to the container.</source>
          <target state="translated">Si existe un contenedor, todos los componentes que se crean mediante el Administrador de serialización se agrega al contenedor.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container">
          <source>The default implementation of this property will search the service provider for an <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> and use the container provided by the designer host, should one exist.</source>
          <target state="translated">La implementación predeterminada de esta propiedad buscará en el proveedor de servicios para un <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> y utilice el contenedor proporcionado por el host del diseñador, si existe alguno.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container">
          <source>Otherwise, this property will return <ph id="ph1">`null`</ph> and no components will be added to a container.</source>
          <target state="translated">En caso contrario, esta propiedad devolverá <ph id="ph1">`null`</ph> y no existe ningún componente se agregarán a un contenedor.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container">
          <source>The serialization manager has an active serialization session.</source>
          <target state="translated">El administrador de serialización tiene una sesión de serialización activa.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>The type to create an instance of.</source>
          <target state="translated">Tipo del que se va a crear una instancia.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>The parameters of the type’s constructor.</source>
          <target state="translated">Parámetros del constructor del tipo.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>This can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> or an empty collection to invoke the default constructor.</source>
          <target state="translated">Puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph> o una colección vacía para invocar al constructor predeterminado.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>A name to give the object.</source>
          <target state="translated">Nombre que se va a dar al objeto.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the object will not be given a name, unless the object is added to a container and the container gives the object a name.</source>
          <target state="translated">Si es <ph id="ph1">&lt;see langword="null" /&gt;</ph>, no se dará nombre al objeto, salvo que el propio objeto se agregue a un contenedor y el contenedor le dé un nombre.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to add the object to the container if the object implements <ph id="ph2">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para agregar el objeto al contenedor si el objeto implementa <ph id="ph2">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph>; de lo contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>Creates an instance of a type.</source>
          <target state="translated">Crea una instancia de un tipo.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>A new instance of the type specified by <ph id="ph1">&lt;paramref name="type" /&gt;</ph>.</source>
          <target state="translated">Nueva instancia del tipo especificado por <ph id="ph1">&lt;paramref name="type" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>This method is called by serializers when they attempt to create an instance of a type.</source>
          <target state="translated">Los serializadores llama a este método cuando intenta crear una instancia de un tipo.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>The default implementation creates a new instance of the type, or it may return an existing instance depending on the values of the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A&gt;</ph> properties.</source>
          <target state="translated">La implementación predeterminada crea una nueva instancia del tipo, o puede devolver una instancia existente según los valores de la <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A&gt;</ph> propiedades.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;</ph> method uses reflection to create instances and will perform some generic <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> transformations on parameters to find a matching constructor.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A&gt;</ph> método usa la reflexión para crear instancias y realizará algunas genérico <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> transformaciones de parámetros para encontrar un constructor coincidente.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> does not have a constructor that takes parameters contained in <ph id="ph2">&lt;paramref name="arguments" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> no tiene un constructor que adopte los parámetros contenidos en <ph id="ph2">&lt;paramref name="arguments" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession">
          <source>Creates a new serialization session.</source>
          <target state="translated">Crea una nueva sesión de serialización.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession">
          <source>An <ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph> that represents a new serialization session.</source>
          <target state="translated">Interfaz <ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph> que representa una nueva sesión de serialización.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession">
          <source>Most data within the serialization manager is transient and only lives for the life of a serialization session.</source>
          <target state="translated">Mayoría de los datos en el Administrador de serialización es transitoria y solo está activo durante la vida de una sesión de serialización.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession">
          <source>When a session is disposed, serialization is considered to be complete and this transient state is cleared.</source>
          <target state="translated">Cuando se elimina una sesión, serialización se considera como completada y se borra este estado transitorio.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession">
          <source>This allows a single instance of a serialization manager to be used to serialize multiple object trees.</source>
          <target state="translated">Esto permite que una única instancia de un administrador de serialización que se usa para serializar varios árboles de objeto.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession">
          <source>Some state, including the service provider and any custom serialization providers that were added to the serialization manager, span sessions.</source>
          <target state="translated">Algunos Estados, incluyendo el proveedor de servicios y los proveedores de serialización personalizada que se han agregado al administrador de serialización, abarcan varias sesiones.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession">
          <source>The serialization manager is already within a session.</source>
          <target state="translated">El administrador de serialización ya está en una sesión.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession">
          <source>This version of <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /&gt;</ph> does not support simultaneous sessions.</source>
          <target state="translated">Esta versión de <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /&gt;</ph> no admite sesiones simultáneas.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors">
          <source>Gets the list of errors that occurred during serialization or deserialization.</source>
          <target state="translated">Obtiene la lista de los errores que se han producido durante la serialización o deserialización.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors">
          <source>The list of errors that occurred during serialization or deserialization.</source>
          <target state="translated">La lista de los errores que se han producido durante la serialización o deserialización.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors">
          <source>You can only read the error list while a serialization session is active.</source>
          <target state="translated">Sólo se puede leer la lista de errores mientras está activa una sesión de serialización.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors">
          <source>This property was accessed outside of a serialization session.</source>
          <target state="translated">El acceso a esta propiedad se realizó fuera de una sesión de serialización.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)">
          <source>The name of the type to get.</source>
          <target state="translated">Nombre del tipo que se va a obtener.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)">
          <source>Gets the type corresponding to the specified type name.</source>
          <target state="translated">Obtiene el tipo que se corresponde con el nombre de tipo especificado.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)">
          <source>The specified type.</source>
          <target state="translated">El tipo especificado.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)">
          <source>The type of object for which to retrieve the serializer.</source>
          <target state="translated">Tipo de objeto para el que se va a recuperar el serializador.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)">
          <source>The type of serializer to retrieve.</source>
          <target state="translated">Tipo de serializador que se va a recuperar.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)">
          <source>Gets the serializer for the given object type.</source>
          <target state="translated">Obtiene el serializador para el tipo de objeto especificado.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)">
          <source>The serializer for <ph id="ph1">&lt;paramref name="objectType" /&gt;</ph>, or <ph id="ph2">&lt;see langword="null" /&gt;</ph>, if not found.</source>
          <target state="translated">Serializador para <ph id="ph1">&lt;paramref name="objectType" /&gt;</ph> o <ph id="ph2">&lt;see langword="null" /&gt;</ph> si no se ha encontrado.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)">
          <source>You can request the type of serializer you would like.</source>
          <target state="translated">Puede solicitar el tipo de serializador que desee.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)">
          <source>This method returns <ph id="ph1">`null`</ph> if there is no serializer of the requested type for the specified object type.</source>
          <target state="translated">Este método devuelve <ph id="ph1">`null`</ph> si no hay ningún serializador del tipo solicitado para el tipo de objeto especificado.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)">
          <source><ph id="ph1">&lt;paramref name="objectType" /&gt;</ph> or <ph id="ph2">&lt;paramref name="serializerType" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;paramref name="objectType" /&gt;</ph> o <ph id="ph2">&lt;paramref name="serializerType" /&gt;</ph> es <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)">
          <source>The type of service to retrieve.</source>
          <target state="translated">Tipo de servicio que se va a recuperar.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)">
          <source>Gets the requested service.</source>
          <target state="translated">Obtiene el servicio solicitado.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)">
          <source>The requested service, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the service cannot be resolved.</source>
          <target state="translated">Servicio solicitado o <ph id="ph1">&lt;see langword="null" /&gt;</ph> si no se puede resolver el servicio.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService%2A&gt;</ph> method provides access to the underlying container or service provider that was set in the constructor.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService%2A&gt;</ph> método proporciona acceso al contenedor subyacente o proveedor de servicios que se estableció en el constructor.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)">
          <source>The name of the type to retrieve.</source>
          <target state="translated">Nombre del tipo que se va a recuperar.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)">
          <source>Gets the requested type.</source>
          <target state="translated">Obtiene el tipo solicitado.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)">
          <source>The requested type, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the type cannot be resolved.</source>
          <target state="translated">Tipo solicitado o <ph id="ph1">&lt;see langword="null" /&gt;</ph> si no se puede resolver el tipo.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A&gt;</ph> method will search the service provider for an <ph id="ph2">&lt;xref:System.ComponentModel.Design.ITypeResolutionService&gt;</ph> and, if available, it will delegate to that service to resolve the type.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A&gt;</ph> método buscará en el proveedor de servicios para un <ph id="ph2">&lt;xref:System.ComponentModel.Design.ITypeResolutionService&gt;</ph> y, si está disponible, delegará en ese servicio para resolver el tipo.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)">
          <source>If an <ph id="ph1">&lt;xref:System.ComponentModel.Design.ITypeResolutionService&gt;</ph> is not available, <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A&gt;</ph> will call the <ph id="ph3">&lt;xref:System.Object.GetType%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Si un <ph id="ph1">&lt;xref:System.ComponentModel.Design.ITypeResolutionService&gt;</ph> no está disponible, <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A&gt;</ph> llamará el <ph id="ph3">&lt;xref:System.Object.GetType%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" /&gt;</ph> que contiene los datos del evento.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" /&gt;</ph> event.</source>
          <target state="translated">Genera el evento <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>controlar y provocar eventos<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">El método <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName%2A&gt;</ph> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Ésta es la técnica preferida para controlar el evento en una clase derivada.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Al reemplazar <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /&gt;</ph> en una clase derivada, asegúrese de llamar a la clase base <ph id="ph2">&lt;see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)" /&gt;</ph> método para que los delegados registrados reciban el evento.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contiene los datos del evento.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" /&gt;</ph> event.</source>
          <target state="translated">Genera el evento <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>controlar y provocar eventos<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">El método <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated%2A&gt;</ph> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Ésta es la técnica preferida para controlar el evento en una clase derivada.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Al reemplazar <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /&gt;</ph> en una clase derivada, asegúrese de llamar a la clase base <ph id="ph2">&lt;see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)" /&gt;</ph> método para que los delegados registrados reciban el evento.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contiene los datos del evento.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" /&gt;</ph> event.</source>
          <target state="translated">Genera el evento <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>controlar y provocar eventos<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">El método <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed%2A&gt;</ph> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Ésta es la técnica preferida para controlar el evento en una clase derivada.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Al reemplazar <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /&gt;</ph> en una clase derivada, asegúrese de llamar a la clase base <ph id="ph2">&lt;see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)" /&gt;</ph> método para que los delegados registrados reciban el evento.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames">
          <source>Gets or sets a value indicating whether the <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /&gt;</ph> method should check for the presence of the given name in the container.</source>
          <target state="translated">Obtiene o establece un valor que indica si el método <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /&gt;</ph> debe comprobar la presencia del nombre especificado en el contenedor.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /&gt;</ph> will pass the given component name; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if <ph id="ph4">&lt;see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /&gt;</ph> will check for the presence of the given name in the container.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /&gt;</ph> va a pasar el nombre de componente determinado; <ph id="ph3">&lt;see langword="false" /&gt;</ph> si <ph id="ph4">&lt;see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /&gt;</ph> va a comprobar la presencia del nombre determinado en el contenedor.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A&gt;</ph> property determines the behavior of the <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</ph> method.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A&gt;</ph> propiedad determina el comportamiento de la <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames">
          <source>If <ph id="ph1">`true`</ph>, <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</ph> will pass the given component name.</source>
          <target state="translated">Si <ph id="ph1">`true`</ph>, <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</ph> pasará el nombre del componente especificado.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames">
          <source>If <ph id="ph1">`false`</ph>, <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</ph> will check for the presence of the given name in the container.</source>
          <target state="translated">Si <ph id="ph1">`false`</ph>, <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</ph> comprobará la presencia del nombre especificado en el contenedor.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames">
          <source>If the name does not exist in the container, <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</ph> will use the given name.</source>
          <target state="translated">Si el nombre no existe en el contenedor, <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</ph> utilizará el nombre especificado.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames">
          <source>If the name does exist in the container, <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</ph> will pass a null value as the name of a component when adding it to the container, thereby giving it a new name.</source>
          <target state="translated">Si el nombre existe en el contenedor, <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</ph> pasará un valor null como el nombre de un componente cuando éste se agrega al contenedor, dándole un nombre nuevo.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames">
          <source>This second variation is useful for implementing a serializer that always duplicates objects, rather than assuming those objects do not exist.</source>
          <target state="translated">Esta segunda variación resulta útil para implementar un serializador que siempre duplique objetos, en lugar de suponiendo que no existen esos objetos.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames">
          <source>Paste commands often use this type of serializer.</source>
          <target state="translated">Comandos de pegar a menudo usan este tipo de serializador.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames">
          <source>You can only change this property when you are not in a serialization session.</source>
          <target state="translated">Solo puede cambiar esta propiedad cuando no esté en una sesión de serialización.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames">
          <source>This property was changed from within a serialization session.</source>
          <target state="translated">El cambio de esta propiedad se realizó desde una sesión de serialización.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider">
          <source>Gets the object that should be used to provide properties to the serialization manager's <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /&gt;</ph> property.</source>
          <target state="translated">Obtiene el objeto que se debe utilizar para proporcionar propiedades a la propiedad <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /&gt;</ph> del administrador de serialización.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider">
          <source>The object that should be used to provide properties to the serialization manager's <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /&gt;</ph> property.</source>
          <target state="translated">Objeto que se debe utilizar para proporcionar propiedades a la propiedad <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /&gt;</ph> del administrador de serialización.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider%2A&gt;</ph> property provides a way to give the serialization manager a set of serialization properties that serializers can use to guide their behavior.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider%2A&gt;</ph> propiedad proporciona una manera de dar el Administrador de serialización de un conjunto de propiedades de serialización que se pueden utilizar los serializadores para guiar su comportamiento.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider">
          <source>This object's public properties will be inspected and wrapped in new property descriptors that have a target object of the serialization manager.</source>
          <target state="translated">Propiedades públicas de este objeto se puede inspeccionar y ajustadas en nuevos descriptores de propiedades que tienen un objeto de destino del Administrador de serialización.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances">
          <source>Gets or sets a flag indicating whether <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /&gt;</ph> will always create a new instance of a type.</source>
          <target state="translated">Obtiene o establece un marcador que especifica si <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /&gt;</ph> va a crear siempre una nueva instancia de un tipo.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /&gt;</ph> will return the existing instance; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if <ph id="ph4">&lt;see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /&gt;</ph> will create a new instance of a type.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /&gt;</ph> va a devolver la instancia existente; <ph id="ph3">&lt;see langword="false" /&gt;</ph> si <ph id="ph4">&lt;see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /&gt;</ph> va a crear una nueva instancia de un tipo.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances">
          <source>If the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</ph> method will always create a new instance of a type.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A&gt;</ph> propiedad es <ph id="ph2">`false`</ph>, el <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</ph> método siempre creará una nueva instancia de un tipo.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances">
          <source>If <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A&gt;</ph> is <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</ph> will first search the name table and container for an object of the same name.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A&gt;</ph> es <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</ph> buscará primero la tabla de nombres y el contenedor de un objeto del mismo nombre.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances">
          <source>If such an object exists and is of the same type, <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</ph> will return the existing instance.</source>
          <target state="translated">Si este tipo de objeto existe y es del mismo tipo, <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</ph> devolverá la instancia existente.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances">
          <source>This second variation is useful for implementing a serializer that applies serialization state to an existing set of objects, rather than always creating a new tree.</source>
          <target state="translated">Esta segunda variación resulta útil para implementar un serializador que se aplica el estado de serialización a un conjunto existente de objetos, en lugar de crear siempre un nuevo árbol.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances">
          <source>The <bpt id="p1">**</bpt>Undo<ept id="p1">**</ept> command often uses this type of serializer.</source>
          <target state="translated">El <bpt id="p1">**</bpt>deshacer<ept id="p1">**</ept> comando usa a menudo este tipo de serializador.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances">
          <source>In the case where the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A&gt;</ph> property will further modify the behavior of <ph id="ph4">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</ph> depending on the types of the two objects.</source>
          <target state="translated">En el caso donde el <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A&gt;</ph> propiedad es <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A&gt;</ph> propiedad modificará aún más el comportamiento de <ph id="ph4">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</ph> según los tipos de los dos objetos.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances">
          <source>The serialization manager has an active serialization session.</source>
          <target state="translated">El administrador de serialización tiene una sesión de serialización activa.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated">
          <source>Occurs when a session is created.</source>
          <target state="translated">Tiene lugar cuando se crea una sesión.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed">
          <source>Occurs when a session is disposed.</source>
          <target state="translated">Se produce cuando se desecha una sesión.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
          <source>The serialization provider to add.</source>
          <target state="translated">Proveedor de serialización que se va a agregar.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
          <source>Adds a custom serialization provider to the serialization manager.</source>
          <target state="translated">Agrega un proveedor de serialización personalizado al administrador de serialización.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
          <source>When the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A&gt;</ph> method is used to request a serialization provider, the serialization manager queries the custom serialization providers first before looking in the type's metadata for the appropriate serializer.</source>
          <target state="translated">Cuando el <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A&gt;</ph> método se usa para solicitar un proveedor de serialización, el Administrador de serialización las consultas a los proveedores de serialización personalizada en primer lugar antes busca en los metadatos del tipo para el serializador adecuado.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context">
          <source>Gets the context stack for this serialization session.</source>
          <target state="translated">Obtiene la pila de contexto para esta sesión de serialización.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /&gt;</ph> that stores data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /&gt;</ph> que almacena datos.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context">
          <source>A context stack provides a user-defined storage area, implemented as a stack.</source>
          <target state="translated">Una pila de contexto proporciona un área de almacenamiento definido por el usuario, que se implementa como una pila.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context">
          <source>This storage area is a useful way to provide communication across serializers, as serialization is a generally hierarchical process.</source>
          <target state="translated">Esta área de almacenamiento es una manera útil para proporcionar comunicación entre los serializadores, tal y como la serialización es un proceso jerárquico.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context">
          <source>This property was accessed outside of a serialization session.</source>
          <target state="translated">El acceso a esta propiedad se realizó fuera de una sesión de serialización.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>The data type to create.</source>
          <target state="translated">Tipo de datos que se va crear.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>The arguments to pass to the constructor for this type.</source>
          <target state="translated">Argumentos que se van a pasar al constructor para este tipo.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>The name of the object.</source>
          <target state="translated">El nombre del objeto.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>This name can be used to access the object later through <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" /&gt;</ph>.</source>
          <target state="translated">Se puede utilizar este nombre para tener acceso al objeto más adelante a través de <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="null" /&gt;</ph> is passed, the object is still created but cannot be accessed by name.</source>
          <target state="translated">Si se pasa <ph id="ph1">&lt;see langword="null" /&gt;</ph>, el objeto sigue creado pero no se puede tener acceso a él mediante el nombre.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to add this object to the design container.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para agregar este objeto al contenedor de diseño.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>The object must implement <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> for this to have any effect.</source>
          <target state="translated">El objeto debe implementar <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> para que esto surta efecto.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>Implements the <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /&gt;</ph> method.</source>
          <target state="translated">Implementa el método <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
          <source>The newly created object instance.</source>
          <target state="translated">Instancia del objeto recién creada.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)">
          <source>The name of the object to retrieve.</source>
          <target state="translated">El nombre del objeto que se va a recuperar.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)">
          <source>Retrieves an instance of a created object of the specified name.</source>
          <target state="translated">Recupera una instancia de un objeto creado con el nombre especificado.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)">
          <source>An instance of the object with the given name, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no object by that name can be found.</source>
          <target state="translated">Instancia del objeto con el nombre dado, o <ph id="ph1">&lt;see langword="null" /&gt;</ph> si no se encuentra ningún objeto por ese nombre.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)">
          <source>This property was accessed outside of a serialization session.</source>
          <target state="translated">El acceso a esta propiedad se realizó fuera de una sesión de serialización.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)">
          <source>The object for which to retrieve the name.</source>
          <target state="translated">Objeto para el que se va a recuperar el nombre.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)">
          <source>Retrieves a name for the specified object.</source>
          <target state="translated">Recupera un nombre para el objeto especificado.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)">
          <source>The name of the object, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the object is unnamed.</source>
          <target state="translated">Nombre del objeto, o <ph id="ph1">&lt;see langword="null" /&gt;</ph> si el objeto no tiene nombre.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetName%2A&gt;</ph> method cannot find a corresponding name for the <ph id="ph2">`value`</ph> parameter, it raises the <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&gt;</ph> event before it returns <ph id="ph4">`null`</ph>.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetName%2A&gt;</ph> método no puede encontrar un nombre correspondiente para el <ph id="ph2">`value`</ph> parámetro, genera el <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&gt;</ph> eventos antes de devolver <ph id="ph4">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)">
          <source>This property was accessed outside of a serialization session.</source>
          <target state="translated">El acceso a esta propiedad se realizó fuera de una sesión de serialización.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)">
          <source>The type of the object to get the serializer for.</source>
          <target state="translated">Tipo del objeto para el que se obtiene el serializador.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)">
          <source>The type of the serializer to retrieve.</source>
          <target state="translated">Tipo del serializador que se va a recuperar.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)">
          <source>Gets a serializer of the requested type for the specified object type.</source>
          <target state="translated">Obtiene un serializador del tipo solicitado para el tipo de objeto especificado.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)">
          <source>An instance of the requested serializer, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no appropriate serializer can be located.</source>
          <target state="translated">Instancia del serializador solicitado, o <ph id="ph1">&lt;see langword="null" /&gt;</ph> si no se encuentra ningún serializador adecuado.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)">
          <source>The fully qualified name of the type to load.</source>
          <target state="translated">Nombre completo del tipo que se va a cargar.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)">
          <source>Gets a type of the specified name.</source>
          <target state="translated">Obtiene un tipo del nombre especificado.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)">
          <source>An instance of the type, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the type cannot be loaded.</source>
          <target state="translated">Instancia del tipo, o <ph id="ph1">&lt;see langword="null" /&gt;</ph> si no se puede cargar el tipo.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)">
          <source>This property was accessed outside of a serialization session.</source>
          <target state="translated">El acceso a esta propiedad se realizó fuera de una sesión de serialización.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties">
          <source>Implements the <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /&gt;</ph> property.</source>
          <target state="translated">Implementa la propiedad <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> containing the properties to be serialized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> que contiene las propiedades que se van a serializar.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /&gt;</ph> to remove.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /&gt;</ph> que se va a quitar.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
          <source>Removes a previously added serialization provider.</source>
          <target state="translated">Quita un proveedor de serialización agregado anteriormente.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23RemoveSerializationProvider%2A&gt;</ph> method removes a custom serialization provider that was previously added by a call to the <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A&gt;</ph> method.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23RemoveSerializationProvider%2A&gt;</ph> método quita un proveedor de serialización personalizado agregado previamente mediante una llamada a la <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)">
          <source>An object containing the error information, usually of type <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Exception" /&gt;</ph>.</source>
          <target state="translated">Objeto que contiene la información de error, normalmente de tipo <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> o <ph id="ph2">&lt;see cref="T:System.Exception" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)">
          <source>Used to report a recoverable error in serialization.</source>
          <target state="translated">Se utiliza para crear un informe de error recuperable en la serialización.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)">
          <source>Serializers can be written to handle recoverable errors gracefully by calling the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A&gt;</ph> method with the error information.</source>
          <target state="translated">Se pueden escribir serializadores para administrar correctamente los errores recuperables mediante una llamada a la <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A&gt;</ph> método con la información de error.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)">
          <source>The serialization manager may support reporting a list of errors after it completes, or it may throw an exception from this method and abort the serialization process.</source>
          <target state="translated">El Administrador de serialización puede admitir una lista de errores de creación de informes después de que se complete o puede generar una excepción desde este método y anular el proceso de serialización.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)">
          <source>The serializer should continue after calling this function.</source>
          <target state="translated">El serializador debe continuar después de llamar a esta función.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A&gt;</ph> adds the <ph id="ph2">`errorInformation`</ph> parameter to the <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23ReportError%2A&gt;</ph> Agrega el <ph id="ph2">`errorInformation`</ph> parámetro para el <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A&gt;</ph> colección.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)">
          <source>If <ph id="ph1">`errorInformation`</ph> is <ph id="ph2">`null`</ph>, no action is taken.</source>
          <target state="translated">Si <ph id="ph1">`errorInformation`</ph> es <ph id="ph2">`null`</ph>, no se realiza ninguna acción.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)">
          <source>This property was accessed outside of a serialization session.</source>
          <target state="translated">El acceso a esta propiedad se realizó fuera de una sesión de serialización.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)">
          <source>The object to set the name.</source>
          <target state="translated">Objeto para el que se va a establecer el nombre.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> used as the name of the object.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que se ha utilizado como nombre del objeto.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)">
          <source>Sets the name for the specified object.</source>
          <target state="translated">Establece el nombre para el objeto especificado.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SetName%2A&gt;</ph> method provides a way to set the name of an existing object.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SetName%2A&gt;</ph> método proporciona una manera de establecer el nombre de un objeto existente.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)">
          <source>This enables creation of an instance of the object through a call to the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A&gt;</ph> method, avoiding the overhead of the <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</ph> method.</source>
          <target state="translated">Esto permite la creación de una instancia del objeto mediante una llamada a la <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A&gt;</ph> método, se evita la sobrecarga de la <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)">
          <source>One or both of the parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Uno o ambos parámetros son <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)">
          <source>The object specified by instance already has a name, or <ph id="ph1">&lt;paramref name="name" /&gt;</ph> is already used by another named object.</source>
          <target state="translated">El objeto especificado por la instancia ya tiene un nombre, o bien otro objeto con nombre ya utiliza <ph id="ph1">&lt;paramref name="name" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)">
          <source>This property was accessed outside of a serialization session.</source>
          <target state="translated">El acceso a esta propiedad se realizó fuera de una sesión de serialización.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)">
          <source>An object that specifies the type of service object to get.</source>
          <target state="translated">Objeto que especifica el tipo de objeto de servicio que se va a obtener.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)">
          <source>For a description of this member, see the <ph id="ph1">&lt;see cref="M:System.IServiceProvider.GetService(System.Type)" /&gt;</ph> method.</source>
          <target state="translated">Para obtener una descripción de este miembro, vea el método <ph id="ph1">&lt;see cref="M:System.IServiceProvider.GetService(System.Type)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)">
          <source>A service object of type <ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph>.</source>
          <target state="translated">Objeto de servicio del tipo <ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> if there is no service object of type <ph id="ph2">&lt;paramref name="serviceType" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> si no hay ningún objeto de servicio del tipo <ph id="ph2">&lt;paramref name="serviceType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IServiceProvider&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.IServiceProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes">
          <source>Gets or sets a flag indicating whether the <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /&gt;</ph> method will verify that matching names refer to the same type.</source>
          <target state="translated">Obtiene o establece un marcador que especifica si el método <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /&gt;</ph> comprobará que los nombres coincidentes hacen referencia al mismo tipo.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /&gt;</ph> verifies types; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph> if it does not.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /&gt;</ph> comprueba los tipos; en caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A&gt;</ph> property modifies the behavior of the <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</ph> method when the <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A&gt;</ph> property is <ph id="ph4">`true`</ph>, as detailed in the following table.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A&gt;</ph> propiedad modifica el comportamiento de la <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A&gt;</ph> método cuando el <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A&gt;</ph> propiedad es <ph id="ph4">`true`</ph>, tal como se detalla en la tabla siguiente.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes">
          <source>Behavior of <ph id="ph1">`CreateInstance`</ph></source>
          <target state="translated">Comportamiento de <ph id="ph1">`CreateInstance`</ph></target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes">
          <source><ph id="ph1">`true`</ph> or <ph id="ph2">`false`</ph></source>
          <target state="translated"><ph id="ph1">`true`</ph> o <ph id="ph2">`false`</ph></target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes">
          <source>Always create a new instance of the specified type</source>
          <target state="translated">Crear siempre una nueva instancia del tipo especificado</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes">
          <source>If a matching instance is found it is returned, regardless of its type.</source>
          <target state="translated">Si se encuentra una instancia coincidente se devuelve, independientemente de su tipo.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes">
          <source>If a matching instance is found, it is returned only if its type is the same as specified in the method call.</source>
          <target state="translated">Si se encuentra una instancia coincidente, se devuelve solo si su tipo es el mismo que el especificado en la llamada al método.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A&gt;</ph> is useful for morphing one type of object to another if they have similar properties but share no common parent or interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A&gt;</ph> es útil para transformar un tipo de objeto a otro si tienen propiedades similares pero no comparten ningún elemento primario común o interfaz.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes">
          <source>The serialization manager has an active serialization session.</source>
          <target state="translated">El administrador de serialización tiene una sesión de serialización activa.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>