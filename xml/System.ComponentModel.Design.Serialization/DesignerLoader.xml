<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DesignerLoader.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51ceac61034c2821d36ae8f0792cf3b40e2e98ee3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1ceac61034c2821d36ae8f0792cf3b40e2e98ee3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.DesignerLoader">
          <source>Provides a basic designer loader interface that can be used to implement a custom designer loader.</source>
          <target state="translated">Proporciona una interfaz básica de cargador de diseñadores que se puede utilizar para implementar un cargador de diseñadores personalizado.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerLoader">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph> can be implemented to support custom loading of a designer and designer components.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph> se puede implementar para admitir la carga personalizada de un diseñador y los componentes.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerLoader">
          <source>A designer loader is also responsible for writing changes to an open document back to the storage the loader used when loading the document after the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader.Flush%2A&gt;</ph> method is called.</source>
          <target state="translated">Un cargador de diseñadores también es responsable de escribir cambios en un documento abierto hacia el almacenamiento del cargador utilizado para cargar el documento cuando el <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader.Flush%2A&gt;</ph> se llama al método.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerLoader">
          <source>By default, the Visual Studio development environment creates its own variety of <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph> that can load basic designer projects.</source>
          <target state="translated">De forma predeterminada, el entorno de desarrollo de Visual Studio crea su propia variedad de <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph> que puede cargar proyectos de diseñadores básicos.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerLoader">
          <source>To create a custom designer loader, you must inherit from and implement the abstract <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph> class.</source>
          <target state="translated">Para crear un cargador de diseñadores personalizado, debe heredar de e implementar abstracto <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerLoader">
          <source>You cannot directly instantiate <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph>, as it has no public constructor.</source>
          <target state="translated">No se puede crear instancias directamente <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph>, ya que no tiene ningún constructor público.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerLoader">
          <source>When <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad%2A&gt;</ph> is invoked, the designer loader loads the design document, displays the designer surface using the <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> interface, and calls <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A&gt;</ph> on the <ph id="ph4">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&gt;</ph> interface when done.</source>
          <target state="translated">Cuando <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad%2A&gt;</ph> es invoca, el cargador de diseñadores carga el documento de diseño, muestra la superficie del diseñador en la <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> interfaz y las llamadas <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A&gt;</ph> en el <ph id="ph4">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&gt;</ph> interfaz cuando haya finalizado.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerLoader">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&gt;</ph> implementation is usually the same class that implements <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&gt;</ph> implementación suele ser la misma clase que implementa <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerLoader">
          <source>for full access to system resources.</source>
          <target state="translated">Para obtener acceso completo a los recursos del sistema.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerLoader">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>.</source>
          <target state="translated">Valor de la petición: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.DesignerLoader">
          <source>Associated state:</source>
          <target state="translated">Estado asociado:</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerLoader.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)">
          <source>The loader host through which this loader loads components.</source>
          <target state="translated">Host del cargador con el que este cargador carga los componentes.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)">
          <source>Begins loading a designer.</source>
          <target state="translated">Empieza a cargar un diseñador.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&gt;</ph> that is passed to the <ph id="ph2">`host`</ph> parameter is typically the same object as the designer host.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&gt;</ph> que se pasa a la <ph id="ph2">`host`</ph> parámetro suele ser el mismo objeto que el host del diseñador.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)">
          <source>Through this reference to the loader host, the designer loader can reload the design document and indicate that it has finished loading the design document.</source>
          <target state="translated">A través de esta referencia al host del cargador, el cargador de diseñadores puede volver a cargar el documento de diseño e indicar que ha terminado de cargar el documento de diseño.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /&gt;</ph>.</source>
          <target state="translated">Libera todos los recursos que usa <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph>.</source>
          <target state="translated">Llame a <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose%2A&gt;</ph> cuando haya terminado de usar <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph> in an unusable state.</source>
          <target state="translated">El método <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose%2A&gt;</ph> deja el <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph> en un estado no utilizable.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph> was occupying.</source>
          <target state="translated">Después de llamar a <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose%2A&gt;</ph>, debe liberar todas las referencias a la <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph> para que el recolector de elementos no utilizados pueda reclamar la memoria que el <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph> estaba ocupando.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>limpiar recursos no administrados<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> y <bpt id="p2">[</bpt>implementa un método Dispose<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph>.</source>
          <target state="translated">Realice siempre una llamada a <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose%2A&gt;</ph> antes de liberar la última referencia al objeto <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerLoader.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">En caso contrario, los recursos que está usando no se liberarán hasta que el recolector de elementos no utilizados llame al método <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.DesignerLoader&gt;</ph> del objeto <ph id="ph2">`Finalize`</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.DesignerLoader.Flush">
          <source>Writes cached changes to the location that the designer was loaded from.</source>
          <target state="translated">Escribe los cambios almacenados en caché que se hayan producido en la ubicación desde la que se cargó el diseñador.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerLoader.Flush">
          <source>The designer host calls this method periodically to ensure that changes made to the document were saved by the designer loader.</source>
          <target state="translated">El host del diseñador llama a este método periódicamente para asegurarse de que se guardaron los cambios realizados en el documento mediante el cargador de diseñadores.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerLoader.Flush">
          <source>This method allows designer loaders to implement an asynchronous write scheme to improve performance.</source>
          <target state="translated">Este método permite a los cargadores de diseñadores implementar un esquema de escritura asincrónica para mejorar el rendimiento.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.DesignerLoader.Flush">
          <source>The default implementation of this method does nothing.</source>
          <target state="translated">La implementación predeterminada de este método no hace nada.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.DesignerLoader.Loading">
          <source>Gets a value indicating whether the loader is currently loading a document.</source>
          <target state="translated">Obtiene un valor que indica si el cargador está cargando un documento actualmente.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.DesignerLoader.Loading">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the loader is currently loading a document; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el cargador está cargando un documento actualmente; en caso contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>