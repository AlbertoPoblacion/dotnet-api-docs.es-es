<Type Name="IDesignerLoaderService" FullName="System.ComponentModel.Design.Serialization.IDesignerLoaderService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="600283504e0b53bfdedb7e61f107502e37fe6f9d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30367269" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDesignerLoaderService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerLoaderService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerLoaderService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerLoaderService" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Proporciona una interfaz que puede ampliar un cargador de diseñadores para admitir cargas asincrónicas de componentes externos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.ComponentModel.Design.Serialization.DesignerLoader> puede implementar esta interfaz para administrar la carga del diseñador que afecta a los componentes externos. Esta interfaz también permite que los componentes externos iniciar una recarga de la superficie de diseño mediante una llamada a <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A>. Un cargador de diseñadores no es necesario implementar esta interfaz si no necesita compatibilidad con la carga asincrónica.  
  
 Carga del diseñador mediante una implementación personalizada de la <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> puede aparecer en una variedad de formas. Componentes externos a veces están implicados en el proceso de carga. Para facilitar la carga con dependencias externas, la interfaz de servicio de cargador de diseñadores proporciona un mecanismo que se determina cuando la carga está completa y permite que cada parte de la carga para indicar que se ha completado. El <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> normalmente determina cuándo carga completa mediante la comprobación de un contador que registra el número de dependencias de carga restante. Cuando se complete cada parte de la carga, <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> se llama y el servicio reduce el contador. Para establecer el número de procesos de carga dependientes, llame a <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> una vez por cada proceso de carga que llama <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> cuando su carga está completa. Cuando la carga final está completa, las llamadas al servicio <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A> en el host del cargador.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddLoadDependency">
      <MemberSignature Language="C#" Value="public void AddLoadDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddLoadDependency() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLoadDependency ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLoadDependency();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Registra un componente externo como parte del proceso de carga administrado por esta interfaz.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Llamar a <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> una vez para cada objeto externo que participa en el proceso de carga. <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> se llama cuando se realiza el trabajo del proceso de carga.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DependentLoadComplete">
      <MemberSignature Language="C#" Value="public void DependentLoadComplete (bool successful, System.Collections.ICollection errorCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DependentLoadComplete(bool successful, class System.Collections.ICollection errorCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DependentLoadComplete (successful As Boolean, errorCollection As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DependentLoadComplete(bool successful, System::Collections::ICollection ^ errorCollection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errorCollection" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful">
          Es <see langword="true" /> si la carga del diseñador se realizó correctamente; es <see langword="false" /> si los errores impidieron que se completara la carga.</param>
        <param name="errorCollection">Colección que contiene los errores que se produjeron durante la carga, en caso de haberlos. De no haberlos, se pasa una colección vacía o <see langword="null" />.</param>
        <summary>Indica que ha finalizado una carga dependiente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se llama a este método para indicar que se ha completado una operación de carga dependiente. Llame a <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> una vez para cada proceso que se registró mediante una llamada a <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>, que ya se ha completado.  
  
 Si la carga dependiente se realiza correctamente, el llamador establece el `successful` parámetro `true` y pasa una colección vacía o `null` a la `errorCollection` parámetro. Si producen errores en la carga dependiente, el llamador establece el `successful` parámetro `false` y pasa una colección de excepciones que indiquen la causa o causas del error para el `errorCollection` parámetro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="public bool Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload" />
      <MemberSignature Language="VB.NET" Value="Public Function Reload () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Reload();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recarga el documento de diseño.</summary>
        <returns>
          <see langword="true" /> si se acepta la petición de recarga, o <see langword="false" /> si el cargador no permite la recarga.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cualquier objeto puede llamar a este método para solicitar el cargador recargue el documento de diseño. Si el cargador admite recargas y acepta la recarga, puede devolver el cargador de diseñadores `true`. De lo contrario, devuelve `false`, que indica que no se efectuará la recarga. Los llamadores no pueden depender de la recarga tenga lugar inmediatamente; el cargador de diseñadores puede programar para más tarde, o puede intentar volver a cargar a la vez.  
  
 El llamador puede mostrar un mensaje al usuario si no se puede volver a cargar el diseñador.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>