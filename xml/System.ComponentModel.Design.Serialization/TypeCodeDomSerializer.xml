<Type Name="TypeCodeDomSerializer" FullName="System.ComponentModel.Design.Serialization.TypeCodeDomSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="03158091dea1e91d871fe438a3a204490ccae7dd" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37698008" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TypeCodeDomSerializer : System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeCodeDomSerializer extends System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeCodeDomSerializer&#xA;Inherits CodeDomSerializerBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeCodeDomSerializer : System::ComponentModel::Design::Serialization::CodeDomSerializerBase" />
  <TypeSignature Language="F#" Value="type TypeCodeDomSerializer = class&#xA;    inherit CodeDomSerializerBase" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.Serialization.CodeDomSerializerBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DefaultSerializationProvider(typeof(System.ComponentModel.Design.Serialization.CodeDomSerializationProvider))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4874d-101">Serializa un objeto en un nuevo tipo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4874d-101">Serializes an object to a new type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4874d-102">El <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer> clase realiza las mismas tareas que un <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>, pero se serializar un objeto a través de esta clase define un nuevo tipo.</span><span class="sxs-lookup"><span data-stu-id="4874d-102">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer> class performs the same tasks as a <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>, but serializing an object through this class defines a new type.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeCodeDomSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeCodeDomSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4874d-103">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4874d-103">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public virtual object Deserialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Deserialize (manager As IDesignerSerializationManager, declaration As CodeTypeDeclaration) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Deserialize(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeTypeDeclaration ^ declaration);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; obj&#xA;override this.Deserialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; obj" Usage="typeCodeDomSerializer.Deserialize (manager, declaration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="4874d-104">El administrador de serialización que se va a usar para la serialización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4874d-104">The serialization manager to use for serialization.</span>
          </span>
        </param>
        <param name="declaration">
          <span data-ttu-id="4874d-105">Declaración de tipos que se va a utilizar para la serialización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4874d-105">Type declaration to use for serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4874d-106">Deserializa la declaración de tipos determinada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4874d-106">Deserializes the given type declaration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4874d-107">Objeto raíz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4874d-107">The root object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4874d-108">El <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> método deserializa una declaración de tipos de código previamente serializado.</span><span class="sxs-lookup"><span data-stu-id="4874d-108">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> method deserializes a previously serialized code type declaration.</span></span> <span data-ttu-id="4874d-109">En la tabla siguiente se muestra la que lleva a cabo la implementación predeterminada de las tareas.</span><span class="sxs-lookup"><span data-stu-id="4874d-109">The following table shows the tasks default implementation performs.</span></span>  
  
|<span data-ttu-id="4874d-110">Tarea</span><span class="sxs-lookup"><span data-stu-id="4874d-110">Task</span></span>|<span data-ttu-id="4874d-111">Descripción</span><span class="sxs-lookup"><span data-stu-id="4874d-111">Description</span></span>|  
|----------|-----------------|  
|<span data-ttu-id="4874d-112">Comprobaciones de mayúsculas y minúsculas</span><span class="sxs-lookup"><span data-stu-id="4874d-112">Case Sensitivity Checks</span></span>|<span data-ttu-id="4874d-113">La implementación busca un <xref:System.CodeDom.Compiler.CodeDomProvider> servicio para decidir si se deben tratar los miembros que distingue mayúsculas de minúsculas o mayúsculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="4874d-113">The implementation searches for a <xref:System.CodeDom.Compiler.CodeDomProvider> service to decide if it should treat members as case sensitive or case insensitive.</span></span>|  
|<span data-ttu-id="4874d-114">Ordenación de instrucciones</span><span class="sxs-lookup"><span data-stu-id="4874d-114">Statement Sorting</span></span>|<span data-ttu-id="4874d-115">Todas las variables de miembro y variables locales de los métodos init se almacenan en una tabla.</span><span class="sxs-lookup"><span data-stu-id="4874d-115">All member variables and local variables from init methods are stored in a table.</span></span> <span data-ttu-id="4874d-116">A continuación, cada instrucción en un método init se agrega a una colección de instrucciones que se agrupan en función de su izquierda, por lo que todas las instrucciones de asignación o actuar sobre una variable concreta se agrupan bajo esa variable.</span><span class="sxs-lookup"><span data-stu-id="4874d-116">Then each statement in an init method is added to a statement collection grouped according to its left-hand side, so all statements assigning or operating on a particular variable are grouped under that variable.</span></span> <span data-ttu-id="4874d-117">Las variables que no tienen ninguna instrucción se descartan.</span><span class="sxs-lookup"><span data-stu-id="4874d-117">Variables that have no statements are discarded.</span></span>|  
|<span data-ttu-id="4874d-118">Deserialización</span><span class="sxs-lookup"><span data-stu-id="4874d-118">Deserialization</span></span>|<span data-ttu-id="4874d-119">Las colecciones de instrucción para cada variable se deserializan en función de la variable.</span><span class="sxs-lookup"><span data-stu-id="4874d-119">The statement collections for each variable are deserialized according to the variable.</span></span>|  
  
 <span data-ttu-id="4874d-120">La siguiente tabla muestra los servicios el <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> requiere el método.</span><span class="sxs-lookup"><span data-stu-id="4874d-120">The following table shows the services the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A> method requires.</span></span>  
  
|<span data-ttu-id="4874d-121">web de Office</span><span class="sxs-lookup"><span data-stu-id="4874d-121">Service</span></span>|<span data-ttu-id="4874d-122">Descripción</span><span class="sxs-lookup"><span data-stu-id="4874d-122">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.CodeDom.Compiler.CodeDomProvider>|<span data-ttu-id="4874d-123">Aunque no es estrictamente necesario, el servicio, si está disponible, se usa para determinar si la serialización debe estar entre mayúsculas y minúsculas o mayúsculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="4874d-123">While not strictly necessary, the service, if available, is used to determine if the serialization should be case sensitive or case insensitive.</span></span>|  
|<xref:System.ComponentModel.IContainer>|<span data-ttu-id="4874d-124">Si un objeto no existe en la tabla de nombres durante la deserialización, una consulta para <xref:System.ComponentModel.IContainer> se realiza.</span><span class="sxs-lookup"><span data-stu-id="4874d-124">If an object does not exist in the name table during deserialization, a query for <xref:System.ComponentModel.IContainer> is made.</span></span> <span data-ttu-id="4874d-125">Si esta consulta se realiza correctamente, el contenedor se comprueba para el objeto.</span><span class="sxs-lookup"><span data-stu-id="4874d-125">If this query succeeds, the container is checked for the object.</span></span> <span data-ttu-id="4874d-126">El contenedor también se usa como un sustituto para cualquier argumento de contenedor que se necesitan los componentes.</span><span class="sxs-lookup"><span data-stu-id="4874d-126">The container is also used as a stand-in for any container argument needed by components.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4874d-127">El valor de <paramref name="manager" /> o <paramref name="typeDecl" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4874d-127">
              <paramref name="manager" /> or <paramref name="typeDecl" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="GetInitializeMethod">
      <MemberSignature Language="C#" Value="protected virtual System.CodeDom.CodeMemberMethod GetInitializeMethod (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.CodeDom.CodeMemberMethod GetInitializeMethod(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetInitializeMethod (manager As IDesignerSerializationManager, declaration As CodeTypeDeclaration, value As Object) As CodeMemberMethod" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::CodeDom::CodeMemberMethod ^ GetInitializeMethod(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeTypeDeclaration ^ declaration, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializeMethod : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration * obj -&gt; System.CodeDom.CodeMemberMethod&#xA;override this.GetInitializeMethod : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration * obj -&gt; System.CodeDom.CodeMemberMethod" Usage="typeCodeDomSerializer.GetInitializeMethod (manager, declaration, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeMemberMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="4874d-128">El administrador de serialización que se va a usar para la serialización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4874d-128">The serialization manager to use for serialization.</span>
          </span>
        </param>
        <param name="declaration">
          <span data-ttu-id="4874d-129">Declaración de tipos que se va a usar para la serialización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4874d-129">The type declaration to use for serialization.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4874d-130">Valor que se va a usar para la serialización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4874d-130">The value to use for serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4874d-131">Devuelve el método en el que se almacenan las instrucciones usadas para serializar un miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4874d-131">Returns the method where statements used to serialize a member are stored.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4874d-132">Método usado para emitir todo el código de inicialización del miembro determinado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4874d-132">The method used to emit all of the initialization code for the given member.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4874d-133">El <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A> método devuelve el método para emitir todo el código de inicialización para el miembro determinado.</span><span class="sxs-lookup"><span data-stu-id="4874d-133">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A> method returns the method to emit all of the initialization code for the given member.</span></span> <span data-ttu-id="4874d-134">La implementación predeterminada devuelve un constructor vacío.</span><span class="sxs-lookup"><span data-stu-id="4874d-134">The default implementation returns an empty constructor.</span></span> <span data-ttu-id="4874d-135">Si es el mismo método que se devuelve para varios valores, se debe devolver la misma instancia del método.</span><span class="sxs-lookup"><span data-stu-id="4874d-135">If the same method is to be returned for multiple values, the same instance of the method should be returned.</span></span> <span data-ttu-id="4874d-136">Puede usar el <xref:System.CodeDom.CodeObject.UserData%2A?displayProperty=nameWithType> diccionario para recordar los métodos que ha creado.</span><span class="sxs-lookup"><span data-stu-id="4874d-136">You can use the <xref:System.CodeDom.CodeObject.UserData%2A?displayProperty=nameWithType> dictionary to remember methods you have created.</span></span> <span data-ttu-id="4874d-137">El `typeDecl` parámetro también puede usarse para agregar métodos de infraestructura.</span><span class="sxs-lookup"><span data-stu-id="4874d-137">The `typeDecl` parameter can also be used to add infrastructure methods.</span></span> <span data-ttu-id="4874d-138">Por ejemplo, si desea emitir un método independiente para cada objeto, necesita un único método que llama a su vez a todos estos métodos.</span><span class="sxs-lookup"><span data-stu-id="4874d-138">For example, if you want to emit a separate method for each object, you need a single method that calls all of these methods in turn.</span></span> <span data-ttu-id="4874d-139">Este método puede agregarse a la declaración de tipos de código según sea necesario.</span><span class="sxs-lookup"><span data-stu-id="4874d-139">This method can be added to the code type declaration as needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4874d-140">
            <paramref name="manager" />, <paramref name="typeDecl" /> o <paramref name="value" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4874d-140">
              <paramref name="manager" />, <paramref name="typeDecl" />, or <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="GetInitializeMethods">
      <MemberSignature Language="C#" Value="protected virtual System.CodeDom.CodeMemberMethod[] GetInitializeMethods (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.CodeDom.CodeMemberMethod[] GetInitializeMethods(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeTypeDeclaration declaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetInitializeMethods (manager As IDesignerSerializationManager, declaration As CodeTypeDeclaration) As CodeMemberMethod()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::CodeDom::CodeMemberMethod ^&gt; ^ GetInitializeMethods(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeTypeDeclaration ^ declaration);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializeMethods : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; System.CodeDom.CodeMemberMethod[]&#xA;override this.GetInitializeMethods : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeTypeDeclaration -&gt; System.CodeDom.CodeMemberMethod[]" Usage="typeCodeDomSerializer.GetInitializeMethods (manager, declaration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeMemberMethod[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="declaration" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="4874d-141">El administrador de serialización que se va a usar para la serialización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4874d-141">The serialization manager to use for serialization.</span>
          </span>
        </param>
        <param name="declaration">
          <span data-ttu-id="4874d-142">Declaración de tipos que se va a usar para la serialización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4874d-142">The type declaration to use for serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4874d-143">Devuelve una matriz de los métodos que se van a interpretar durante la deserialización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4874d-143">Returns an array of methods to be interpreted during deserialization.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4874d-144">Matriz de <see cref="T:System.CodeDom.CodeMemberMethod" /> de los métodos que se van a interpretar durante la deserialización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4874d-144">A <see cref="T:System.CodeDom.CodeMemberMethod" /> array of methods to be interpreted during deserialization.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4874d-145">La implementación predeterminada devuelve una matriz de solo elemento con el constructor en ella.</span><span class="sxs-lookup"><span data-stu-id="4874d-145">The default implementation returns a single-element array with the constructor in it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4874d-146">El valor de <paramref name="manager" /> o <paramref name="typeDecl" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4874d-146">
              <paramref name="manager" /> or <paramref name="typeDecl" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.CodeTypeDeclaration Serialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object root, System.Collections.ICollection members);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeTypeDeclaration Serialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object root, class System.Collections.ICollection members) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Serialize (manager As IDesignerSerializationManager, root As Object, members As ICollection) As CodeTypeDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::CodeTypeDeclaration ^ Serialize(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ root, System::Collections::ICollection ^ members);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * System.Collections.ICollection -&gt; System.CodeDom.CodeTypeDeclaration&#xA;override this.Serialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * System.Collections.ICollection -&gt; System.CodeDom.CodeTypeDeclaration" Usage="typeCodeDomSerializer.Serialize (manager, root, members)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeDeclaration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="root" Type="System.Object" />
        <Parameter Name="members" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="4874d-147">El administrador de serialización que se va a usar para la serialización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4874d-147">The serialization manager to use for serialization.</span>
          </span>
        </param>
        <param name="root">
          <span data-ttu-id="4874d-148">El objeto que se va a serializar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4874d-148">The object to serialize.</span>
          </span>
        </param>
        <param name="members">
          <span data-ttu-id="4874d-149">Colección opcional de miembros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4874d-149">Optional collection of members.</span>
          </span>
          <span data-ttu-id="4874d-150">Puede ser <see langword="null" /> o estar vacía.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4874d-150">Can be <see langword="null" /> or empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4874d-151">Serializa la raíz del objeto creando una nueva declaración de tipos que define la raíz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4874d-151">Serializes the object root by creating a new type declaration that defines root.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4874d-152">Objeto <see cref="T:System.CodeDom.CodeTypeDeclaration" /> que define el objeto raíz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4874d-152">A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> that defines the root object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4874d-153">El <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> método serializa el objeto de directorio raíz especificado y una colección opcional de miembros para crear una nueva definición de tipo.</span><span class="sxs-lookup"><span data-stu-id="4874d-153">The <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method serializes the given root object and optional collection of members to create a new type definition.</span></span> <span data-ttu-id="4874d-154">Si el `members` colección contiene valores, estos valores se serializan.</span><span class="sxs-lookup"><span data-stu-id="4874d-154">If the `members` collection contains values, these values are serialized.</span></span> <span data-ttu-id="4874d-155">Los valores propiamente dichos pueden serializar como variables de miembro o variables locales.</span><span class="sxs-lookup"><span data-stu-id="4874d-155">Values themselves may serialize as either member variables or local variables.</span></span> <span data-ttu-id="4874d-156">Esta determinación se realiza mediante la búsqueda de una propiedad extensora en el objeto llamado `GenerateMember`.</span><span class="sxs-lookup"><span data-stu-id="4874d-156">This determination is done by searching for an extender property on the object called `GenerateMember`.</span></span> <span data-ttu-id="4874d-157">Si `true`, se genera un miembro.</span><span class="sxs-lookup"><span data-stu-id="4874d-157">If `true`, a member is generated.</span></span> <span data-ttu-id="4874d-158">En caso contrario, se genera una variable local.</span><span class="sxs-lookup"><span data-stu-id="4874d-158">Otherwise, a local variable is generated.</span></span> <span data-ttu-id="4874d-159">Para mayor comodidad, el `members` colección puede contener el objeto raíz.</span><span class="sxs-lookup"><span data-stu-id="4874d-159">For convenience, the `members` collection can contain the root object.</span></span> <span data-ttu-id="4874d-160">En este caso, el objeto raíz no también se agrega como un miembro o una variable local.</span><span class="sxs-lookup"><span data-stu-id="4874d-160">In this case, the root object is not also added as a member or local variable.</span></span>  
  
 <span data-ttu-id="4874d-161">El nombre del tipo devuelto se toma del nombre del objeto raíz, si fuese un objeto con nombre.</span><span class="sxs-lookup"><span data-stu-id="4874d-161">The name of the returned type is taken from the root object’s name, if it was a named object.</span></span> <span data-ttu-id="4874d-162">Si no es así, se crea un nombre a partir del nombre de tipo simple de la clase raíz.</span><span class="sxs-lookup"><span data-stu-id="4874d-162">If not, a name is fabricated from the simple type name of the root class.</span></span>  
  
 <span data-ttu-id="4874d-163">La siguiente tabla muestra las tareas realizadas por la implementación predeterminada de la <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4874d-163">The following table shows the tasks performed by the default implementation of the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method.</span></span>  
  
|<span data-ttu-id="4874d-164">Tarea</span><span class="sxs-lookup"><span data-stu-id="4874d-164">Task</span></span>|<span data-ttu-id="4874d-165">Descripción</span><span class="sxs-lookup"><span data-stu-id="4874d-165">Description</span></span>|  
|----------|-----------------|  
|<span data-ttu-id="4874d-166">Inicialización del contexto</span><span class="sxs-lookup"><span data-stu-id="4874d-166">Context Seeding</span></span>|<span data-ttu-id="4874d-167">El contexto de serialización se inicializa con datos, incluso el <xref:System.ComponentModel.Design.Serialization.RootContext> y <xref:System.CodeDom.CodeTypeDeclaration></span><span class="sxs-lookup"><span data-stu-id="4874d-167">The serialization context is initialized with data including the <xref:System.ComponentModel.Design.Serialization.RootContext> and <xref:System.CodeDom.CodeTypeDeclaration></span></span>|  
|<span data-ttu-id="4874d-168">Serialización de miembro</span><span class="sxs-lookup"><span data-stu-id="4874d-168">Member Serialization</span></span>|<span data-ttu-id="4874d-169">A continuación, <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> recorre todos los miembros y las llamadas <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>.</span><span class="sxs-lookup"><span data-stu-id="4874d-169">Next, <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> walks all of the members and calls <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>.</span></span> <span data-ttu-id="4874d-170">Porque la serialización se realiza según la ocasión en <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>, esto garantiza que no se realiza dos veces la serialización.</span><span class="sxs-lookup"><span data-stu-id="4874d-170">Because serialization is done opportunistically in <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>, this ensures that serialization is not done twice.</span></span>|  
|<span data-ttu-id="4874d-171">Serialización de raíz</span><span class="sxs-lookup"><span data-stu-id="4874d-171">Root Serialization</span></span>|<span data-ttu-id="4874d-172">A continuación, se serializa el objeto raíz y sus instrucciones se agregan a la colección de instrucciones.</span><span class="sxs-lookup"><span data-stu-id="4874d-172">Next, the root object is serialized and its statements are added to the statement collection.</span></span>|  
|<span data-ttu-id="4874d-173">Integración de instrucción</span><span class="sxs-lookup"><span data-stu-id="4874d-173">Statement Integration</span></span>|<span data-ttu-id="4874d-174">Después de que todos los objetos se serializan, el <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> método ordena las instrucciones y los agrega a un método devuelto desde <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span><span class="sxs-lookup"><span data-stu-id="4874d-174">After all objects are serialized, the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method orders the statements and adds them to a method returned from <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span></span> <span data-ttu-id="4874d-175">Por último, se crea un constructor que llame a todos los métodos devueltos por <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span><span class="sxs-lookup"><span data-stu-id="4874d-175">Finally, a constructor is fabricated that calls all of the methods returned from <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</span></span>|  
  
-  
  
 <span data-ttu-id="4874d-176">La siguiente tabla muestra los objetos de la <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> método coloca en la pila de contexto.</span><span class="sxs-lookup"><span data-stu-id="4874d-176">The following table shows the objects the <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A> method places on the context stack.</span></span>  
  
|<span data-ttu-id="4874d-177">Instancia</span><span class="sxs-lookup"><span data-stu-id="4874d-177">Instance</span></span>|<span data-ttu-id="4874d-178">Descripción</span><span class="sxs-lookup"><span data-stu-id="4874d-178">Description</span></span>|  
|--------------|-----------------|  
|<xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer>|<span data-ttu-id="4874d-179">Este serializador.</span><span class="sxs-lookup"><span data-stu-id="4874d-179">This serializer.</span></span> <span data-ttu-id="4874d-180">Las clases derivadas resultará útil para agregar propiedades públicas a esta clase.</span><span class="sxs-lookup"><span data-stu-id="4874d-180">Deriving classes may find it useful to add public properties to this class.</span></span>|  
|<xref:System.CodeDom.CodeTypeDeclaration>|<span data-ttu-id="4874d-181">El tipo que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="4874d-181">The type being created.</span></span> <span data-ttu-id="4874d-182">Mayoría de los objetos no es necesario un acceso directo a este.</span><span class="sxs-lookup"><span data-stu-id="4874d-182">Most objects do not need direct access to this.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4874d-183">El valor de <paramref name="manager" /> o <paramref name="root" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4874d-183">
              <paramref name="manager" /> or <paramref name="root" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <altmember cref="T:System.CodeDom.CodeTypeDeclaration" />
      </Docs>
    </Member>
  </Members>
</Type>