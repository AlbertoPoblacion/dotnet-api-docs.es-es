<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SerializationStore.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac569001b4db1f5940b536a2723ad7fc3c23368aaf7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">69001b4db1f5940b536a2723ad7fc3c23368aaf7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.SerializationStore">
          <source>Provides the base class for storing serialization data for the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" /&gt;</ph>.</source>
          <target state="translated">Proporciona la clase base con el fin de almacenar los datos de serialización para el objeto <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.SerializationStore">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.SerializationStore&gt;</ph> class is an implementation-specific class that stores serialization data for the <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.SerializationStore&gt;</ph> clase es una clase específica de implementación que almacena los datos de serialización para el <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.ComponentSerializationService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.SerializationStore">
          <source>The service adds state to this serialization store.</source>
          <target state="translated">El servicio agrega el estado a este almacén de serialización.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.SerializationStore">
          <source>Once the store is closed, it can be saved to a stream.</source>
          <target state="translated">Una vez que se cierra el almacén, se puede guardar en una secuencia.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.SerializationStore">
          <source>A serialization store can be deserialized at a later time by the same type of serialization service.</source>
          <target state="translated">Un almacén de serialización se puede deserializar en un momento posterior mediante el mismo tipo de servicio de serialización.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.SerializationStore">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.SerializationStore&gt;</ph> class implements the <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> interface so that <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.SerializationStore.System%23IDisposable%23Dispose%2A&gt;</ph> simply calls the <ph id="ph4">&lt;xref:System.ComponentModel.Design.Serialization.SerializationStore.Close%2A&gt;</ph> method.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.SerializationStore&gt;</ph> la clase implementa la <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> interfaz para que <ph id="ph3">&lt;xref:System.ComponentModel.Design.Serialization.SerializationStore.System%23IDisposable%23Dispose%2A&gt;</ph> simplemente llama el <ph id="ph4">&lt;xref:System.ComponentModel.Design.Serialization.SerializationStore.Close%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.SerializationStore.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.SerializationStore.Close">
          <source>Closes the serialization store.</source>
          <target state="translated">Cierra el almacén de serialización.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.SerializationStore.Close">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.SerializationStore.Close%2A&gt;</ph> method closes this store and prevents any objects from being serialized into it.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.SerializationStore.Close%2A&gt;</ph> método cierra este almacén y evita que los objetos que se está serializando en él.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.SerializationStore.Close">
          <source>Once closed, the serialization store may be saved.</source>
          <target state="translated">Una vez cerrado, se puede guardar el almacén de serialización.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.SerializationStore.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para liberar tanto recursos administrados como no administrados; es <ph id="ph2">&lt;see langword="false" /&gt;</ph> para liberar únicamente recursos no administrados.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.SerializationStore.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Libera los recursos no administrados que usa <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /&gt;</ph> y, de forma opcional, libera los recursos administrados.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.SerializationStore.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Se llama a este método público <ph id="ph1">`Dispose()`</ph> método y <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.SerializationStore.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> se invoca el protegido <ph id="ph2">`Dispose(Boolean)`</ph> método con el <ph id="ph3">`disposing`</ph> parámetro establecido en <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.SerializationStore.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invoca <ph id="ph2">`Dispose`</ph> con <ph id="ph3">`disposing`</ph> establecido en <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.SerializationStore.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.SerializationStore&gt;</ph> references.</source>
          <target state="translated">Cuando el <ph id="ph1">`disposing`</ph> del parámetro es true, este método libera todos los recursos retenidos por los objetos administrados que este <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.SerializationStore&gt;</ph> referencias.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.SerializationStore.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Este método invoca al método <ph id="ph1">`Dispose()`</ph> de cada uno de los objetos a los que se hace referencia.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.SerializationStore.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> puede recibir varias llamadas de otros objetos.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.SerializationStore.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Al reemplazar <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.SerializationStore.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo implementar <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, consulte <bpt id="p1">[</bpt>implementa un método Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.SerializationStore.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Para obtener más información acerca de <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> y <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, consulte <bpt id="p1">[</bpt>limpiar recursos no administrados<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> y <bpt id="p2">[</bpt>reemplazar el método Finalize<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.Serialization.SerializationStore.Errors">
          <source>Gets a collection of errors that occurred during serialization or deserialization.</source>
          <target state="translated">Obtiene una colección de los errores que se han producido durante la serialización o deserialización.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.Serialization.SerializationStore.Errors">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> that contains errors that occurred during serialization or deserialization.</source>
          <target state="translated">Interfaz <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> que contiene los errores que se han producido durante la serialización o deserialización.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.SerializationStore.Save(System.IO.Stream)">
          <source>The stream to which the store will be serialized.</source>
          <target state="translated">Secuencia en la que se serializará el almacén.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.SerializationStore.Save(System.IO.Stream)">
          <source>Saves the store to the given stream.</source>
          <target state="translated">Guarda el almacén en la secuencia especificada.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.SerializationStore.Save(System.IO.Stream)">
          <source>If the store is open, the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.SerializationStore.Save%2A&gt;</ph> method will automatically close it for you.</source>
          <target state="translated">Si el almacén está abierto, la <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.SerializationStore.Save%2A&gt;</ph> método cerrará automáticamente para usted.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.SerializationStore.Save(System.IO.Stream)">
          <source>You can call <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.SerializationStore.Save%2A&gt;</ph> as many times as you wish to save the store to different streams.</source>
          <target state="translated">Puede llamar a <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.SerializationStore.Save%2A&gt;</ph> tantas veces como desee guardar el almacén en diferentes flujos.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.SerializationStore.System#IDisposable#Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /&gt;</ph>.</source>
          <target state="translated">Libera todos los recursos que usa <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>