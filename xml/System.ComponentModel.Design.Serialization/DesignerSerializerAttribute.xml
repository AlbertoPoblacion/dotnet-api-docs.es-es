<Type Name="DesignerSerializerAttribute" FullName="System.ComponentModel.Design.Serialization.DesignerSerializerAttribute">
  <TypeSignature Language="C#" Value="public sealed class DesignerSerializerAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DesignerSerializerAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DesignerSerializerAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerSerializerAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple=true, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d5281-101">Indica un serializador con el fin de que el administrador de serialización lo utilice para serializar los valores del tipo al que se aplica este atributo.</span><span class="sxs-lookup"><span data-stu-id="d5281-101">Indicates a serializer for the serialization manager to use to serialize the values of the type this attribute is applied to.</span></span> <span data-ttu-id="d5281-102">Esta clase no puede heredarse.</span><span class="sxs-lookup"><span data-stu-id="d5281-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5281-103"><xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute> Proporciona una manera de indicar al administrador de serialización de diseñador que se debe usar un tipo específico de serializador al serializar los valores de un objeto.</span><span class="sxs-lookup"><span data-stu-id="d5281-103"><xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute> provides a way to indicate to the designer serialization manager that a specific type of serializer should be used when serializing the values of an object.</span></span> <span data-ttu-id="d5281-104">Esto le permite especificar un serializador que es capaz de serializar un tipo personalizado, por ejemplo.</span><span class="sxs-lookup"><span data-stu-id="d5281-104">This allows you to specify a serializer that is capable of serializing a custom type, for instance.</span></span> <span data-ttu-id="d5281-105">Coloque este atributo en una clase para indicar el objeto de serialización que se va a utilizar al serializar la clase.</span><span class="sxs-lookup"><span data-stu-id="d5281-105">Place this attribute on a class to indicate the serialization object to use when serializing the class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5281-106">El siguiente código utiliza un <xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute> para asociar un serializador de ejemplo a un componente de ejemplo.</span><span class="sxs-lookup"><span data-stu-id="d5281-106">The following code uses a <xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute> to associate an example serializer with an example component.</span></span>  
  
 [!code-cpp[DesignerSerializerAttribute#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DesignerSerializerAttribute/CPP/source.cpp#1)]
 [!code-csharp[DesignerSerializerAttribute#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DesignerSerializerAttribute/CS/source.cs#1)]
 [!code-vb[DesignerSerializerAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DesignerSerializerAttribute/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d5281-107">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="d5281-107">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerSerializerAttribute (string serializerTypeName, string baseSerializerTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string serializerTypeName, string baseSerializerTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serializerTypeName As String, baseSerializerTypeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerSerializerAttribute(System::String ^ serializerTypeName, System::String ^ baseSerializerTypeName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializerTypeName" Type="System.String" />
        <Parameter Name="baseSerializerTypeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serializerTypeName"><span data-ttu-id="d5281-108">Nombre completo del tipo de datos del serializador.</span><span class="sxs-lookup"><span data-stu-id="d5281-108">The fully qualified name of the data type of the serializer.</span></span></param>
        <param name="baseSerializerTypeName"><span data-ttu-id="d5281-109">Nombre completo del tipo de datos base del serializador.</span><span class="sxs-lookup"><span data-stu-id="d5281-109">The fully qualified name of the base data type of the serializer.</span></span> <span data-ttu-id="d5281-110">Se pueden suministrar varios serializadores para una clase, siempre que estos tengan distintos tipos base.</span><span class="sxs-lookup"><span data-stu-id="d5281-110">Multiple serializers can be supplied for a class as long as the serializers have different base types.</span></span></param>
        <summary><span data-ttu-id="d5281-111">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="d5281-111">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerSerializerAttribute (string serializerTypeName, Type baseSerializerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string serializerTypeName, class System.Type baseSerializerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serializerTypeName As String, baseSerializerType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerSerializerAttribute(System::String ^ serializerTypeName, Type ^ baseSerializerType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializerTypeName" Type="System.String" />
        <Parameter Name="baseSerializerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serializerTypeName"><span data-ttu-id="d5281-112">Nombre completo del tipo de datos del serializador.</span><span class="sxs-lookup"><span data-stu-id="d5281-112">The fully qualified name of the data type of the serializer.</span></span></param>
        <param name="baseSerializerType"><span data-ttu-id="d5281-113">Tipo de datos base del serializador.</span><span class="sxs-lookup"><span data-stu-id="d5281-113">The base data type of the serializer.</span></span> <span data-ttu-id="d5281-114">Se pueden suministrar varios serializadores para una clase, siempre que estos tengan distintos tipos base.</span><span class="sxs-lookup"><span data-stu-id="d5281-114">Multiple serializers can be supplied for a class as long as the serializers have different base types.</span></span></param>
        <summary><span data-ttu-id="d5281-115">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="d5281-115">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerSerializerAttribute (Type serializerType, Type baseSerializerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type serializerType, class System.Type baseSerializerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serializerType As Type, baseSerializerType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerSerializerAttribute(Type ^ serializerType, Type ^ baseSerializerType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializerType" Type="System.Type" />
        <Parameter Name="baseSerializerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serializerType"><span data-ttu-id="d5281-116">Tipo de datos del serializador.</span><span class="sxs-lookup"><span data-stu-id="d5281-116">The data type of the serializer.</span></span></param>
        <param name="baseSerializerType"><span data-ttu-id="d5281-117">Tipo de datos base del serializador.</span><span class="sxs-lookup"><span data-stu-id="d5281-117">The base data type of the serializer.</span></span> <span data-ttu-id="d5281-118">Se pueden suministrar varios serializadores para una clase, siempre que estos tengan distintos tipos base.</span><span class="sxs-lookup"><span data-stu-id="d5281-118">Multiple serializers can be supplied for a class as long as the serializers have different base types.</span></span></param>
        <summary><span data-ttu-id="d5281-119">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="d5281-119">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializerBaseTypeName">
      <MemberSignature Language="C#" Value="public string SerializerBaseTypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerializerBaseTypeName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerBaseTypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializerBaseTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SerializerBaseTypeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5281-120">Obtiene el nombre de tipo completo del tipo base del serializador.</span><span class="sxs-lookup"><span data-stu-id="d5281-120">Gets the fully qualified type name of the serializer base type.</span></span></summary>
        <value><span data-ttu-id="d5281-121">Nombre de tipo completo del tipo base del serializador.</span><span class="sxs-lookup"><span data-stu-id="d5281-121">The fully qualified type name of the serializer base type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializerTypeName">
      <MemberSignature Language="C#" Value="public string SerializerTypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerializerTypeName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerTypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializerTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SerializerTypeName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5281-122">Obtiene el nombre de tipo completo del serializador.</span><span class="sxs-lookup"><span data-stu-id="d5281-122">Gets the fully qualified type name of the serializer.</span></span></summary>
        <value><span data-ttu-id="d5281-123">Nombre de tipo completo del serializador.</span><span class="sxs-lookup"><span data-stu-id="d5281-123">The fully qualified type name of the serializer.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeId">
      <MemberSignature Language="C#" Value="public override object TypeId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TypeId" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.TypeId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TypeId As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ TypeId { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5281-124">Indica un identificador único para este tipo de atributo.</span><span class="sxs-lookup"><span data-stu-id="d5281-124">Indicates a unique ID for this attribute type.</span></span></summary>
        <value><span data-ttu-id="d5281-125">Identificador único para este tipo de atributo.</span><span class="sxs-lookup"><span data-stu-id="d5281-125">A unique ID for this attribute type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5281-126">Este identificador se utiliza algoritmos de filtrado para identificar dos atributos que son del mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="d5281-126">This ID is used by filtering algorithms to identify two attributes that are the same type.</span></span> <span data-ttu-id="d5281-127">En la mayoría de los atributos, esto solo devuelve el <xref:System.Type> instancia para el atributo.</span><span class="sxs-lookup"><span data-stu-id="d5281-127">For most attributes, this just returns the <xref:System.Type> instance for the attribute.</span></span> <span data-ttu-id="d5281-128"><xref:System.ComponentModel.EditorAttribute> invalida esta opción para incluir el tipo del tipo base del editor.</span><span class="sxs-lookup"><span data-stu-id="d5281-128"><xref:System.ComponentModel.EditorAttribute> overrides this to include the type of the editor base type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>