<Type Name="BasicDesignerLoader" FullName="System.ComponentModel.Design.Serialization.BasicDesignerLoader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dabc565317d12f75d44d9bb505b7160be3cc0c0e" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48775598" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BasicDesignerLoader : System.ComponentModel.Design.Serialization.DesignerLoader, System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BasicDesignerLoader extends System.ComponentModel.Design.Serialization.DesignerLoader implements class System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BasicDesignerLoader&#xA;Inherits DesignerLoader&#xA;Implements IDesignerLoaderService" />
  <TypeSignature Language="C++ CLI" Value="public ref class BasicDesignerLoader abstract : System::ComponentModel::Design::Serialization::DesignerLoader, System::ComponentModel::Design::Serialization::IDesignerLoaderService" />
  <TypeSignature Language="F#" Value="type BasicDesignerLoader = class&#xA;    inherit DesignerLoader&#xA;    interface IDesignerLoaderService" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.Serialization.DesignerLoader</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.Serialization.IDesignerLoaderService</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Proporciona una implementación de la interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> es una implementación completa de un cargador de diseñadores no tiene ninguna relación con un formato de persistencia. Un <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> no dictan un texto o binario persistencia, pero admite las siguientes características:  
  
-   Varias dependencias de carga.  
  
-   Seguimiento de cambios en el diseñador.  
  
-   Aplaza la recarga de tiempo de inactividad.  
  
 Un <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> agrega dos tipos de servicios al contenedor de servicios del host del diseñador: servicios reemplazables e irreemplazables. Puede reemplazar un servicio reemplazable cambiando el valor del elemento protegido <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost%2A> propiedad. No se puede reemplazar servicios irreemplazables porque sus implementaciones dependen entre sí.  
  
 En la tabla siguiente se describe los servicios que se proporcionan de forma predeterminada.  
  
|Servicio predeterminado|Descripción|  
|---------------------|-----------------|  
|<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>|Permite que los objetos solicitar que el diseñador recargue por sí mismo cuando está inactivo. Se trata de un servicio reemplazable.|  
|<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>|Se utiliza para serializar y deserializar objetos. El Administrador de serialización se agrega como un servicio para que los objetos que necesitan para realizar la serialización pueden utilizar cualquier proveedor de serialización que se han agregado al administrador de serialización. Se trata de un servicio irreemplazable.|  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet">Para obtener acceso completo a los recursos del sistema. Valores de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />. Estado asociado:</permission>
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BasicDesignerLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BasicDesignerLoader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public override void BeginLoad (System.ComponentModel.Design.Serialization.IDesignerLoaderHost host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void BeginLoad(class System.ComponentModel.Design.Serialization.IDesignerLoaderHost host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub BeginLoad (host As IDesignerLoaderHost)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void BeginLoad(System::ComponentModel::Design::Serialization::IDesignerLoaderHost ^ host);" />
      <MemberSignature Language="F#" Value="abstract member BeginLoad : System.ComponentModel.Design.Serialization.IDesignerLoaderHost -&gt; unit&#xA;override this.BeginLoad : System.ComponentModel.Design.Serialization.IDesignerLoaderHost -&gt; unit" Usage="basicDesignerLoader.BeginLoad host" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />
      </Parameters>
      <Docs>
        <param name="host">Host del cargador de diseñadores que se va a cargar.</param>
        <summary>Inicia el proceso de carga.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se trata de una implementación de la abstracta <xref:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad%2A?displayProperty=nameWithType> método. No es necesario invalidar este método en su propia clase. El <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> método realiza las acciones siguientes:  
  
-   Comprueba que la superficie de diseño no se ha cargado.  
  
-   En la primera llamada, agrega los servicios relevantes y llama a la <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize%2A> método.  
  
-   Lo llama el <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A>, y <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> métodos.  
  
 Si el servicio de cargador de diseñadores no se ha quitado del contenedor de servicios, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> llamará el <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A> y <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> métodos en lugar de la <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> y <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> métodos. En esta situación, es responsabilidad del servicio de cargador de diseñadores para llamar a <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> y <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="host" /> es <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">El diseñador ya está cargado o se ha llamado a <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" /> con un host de cargador de diseñadores diferente.</exception>
        <exception cref="T:System.ObjectDisposedException">Se ha eliminado <paramref name="host" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="basicDesignerLoader.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libera los recursos utilizados por <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una llamada a la <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> método no vuelca los cambios en el cargador de diseñadores. Si desea guardar cambios, llame a <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> antes de llamar a <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>.  
  
 Llame a <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> cuando haya terminado de usar <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>. El método <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> deja el <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> en un estado no utilizable. Después de llamar a <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>, debe liberar todas las referencias a la <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> por lo que el recolector de elementos no utilizados pueda reclamar la memoria que el <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> estaba ocupando. Para obtener más información, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [implementar un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Realice siempre una llamada a <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> antes de liberar la última referencia al objeto <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>. En caso contrario, los recursos que está usando no se liberarán hasta que el recolector de elementos no utilizados llame al método <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> del objeto `Finalize`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableComponentNotification">
      <MemberSignature Language="C#" Value="protected virtual bool EnableComponentNotification (bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool EnableComponentNotification(bool enable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.EnableComponentNotification(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EnableComponentNotification (enable As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool EnableComponentNotification(bool enable);" />
      <MemberSignature Language="F#" Value="abstract member EnableComponentNotification : bool -&gt; bool&#xA;override this.EnableComponentNotification : bool -&gt; bool" Usage="basicDesignerLoader.EnableComponentNotification enable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enable">Es <see langword="true" /> para habilitar la notificación de componentes por parte del objeto <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />; es <see langword="false" /> para deshabilitar la notificación de componentes por parte del objeto <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />.</param>
        <summary>Habilita o deshabilita la notificación de componentes con el objeto <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />.</summary>
        <returns>
          <see langword="true" /> si la notificación de componentes se ha habilitado antes de esta llamada; de lo contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit&#xA;override this.Flush : unit -&gt; unit" Usage="basicDesignerLoader.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Vacía los cambios pendientes y los escribe en el cargador de diseñadores.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el cargador de diseñadores no ha cargado o no se ha marcado como modificado, la <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> método vuelve inmediatamente. En caso contrario, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> pide al administrador de serialización para crear una sesión de serialización y, a continuación, llama a <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="member this.GetService : Type -&gt; obj" Usage="basicDesignerLoader.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">Objeto <see cref="T:System.Type" /> del servicio.</param>
        <summary>Obtiene el servicio solicitado.</summary>
        <returns>Servicio solicitado o <see langword="null" /> si no se encuentra el servicio solicitado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService%2A> es un método auxiliar que permite que las clases derivadas de <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> acceder a los servicios ofrecidos por el host del cargador de diseñadores.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="basicDesignerLoader.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicializa los servicios.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize%2A> método se llama a la primera vez <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> se invoca. Puede agregar los servicios necesarios para el host del cargador de diseñadores en este momento. La implementación base agrega servicios que <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> proporciona, por lo que puede reemplazar los servicios existentes después de llamar a la implementación base. Debe quitar los servicios personalizados que agregue aquí reemplazando <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No se ha inicializado la interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Se ha eliminado el objeto <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsReloadNeeded">
      <MemberSignature Language="C#" Value="protected virtual bool IsReloadNeeded ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsReloadNeeded() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsReloadNeeded () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsReloadNeeded();" />
      <MemberSignature Language="F#" Value="abstract member IsReloadNeeded : unit -&gt; bool&#xA;override this.IsReloadNeeded : unit -&gt; bool" Usage="basicDesignerLoader.IsReloadNeeded " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indica si se debe volver a cargar el diseñador.</summary>
        <returns>
          <see langword="true" /> si se debe volver a cargar el diseñador; en caso contrario, <see langword="false" />. La implementación predeterminada siempre devuelve <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded%2A> método se usa por algunos cargadores de diseñadores para optimizar la recarga. Este método se puede invalidar si el cargador de diseñadores admite la recarga inteligente. Algunos cargadores de diseñadores pueden detectar los cambios realizados en su documento subyacente y determinar si una recarga del diseñador es realmente necesaria. Si no, debe devolver `false` desde este método. La implementación predeterminada siempre devuelve `true`, que indica que todas las llamadas a <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload%2A> se realizará correctamente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoaderHost">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.Serialization.IDesignerLoaderHost LoaderHost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.Serialization.IDesignerLoaderHost LoaderHost" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property LoaderHost As IDesignerLoaderHost" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::Design::Serialization::IDesignerLoaderHost ^ LoaderHost { System::ComponentModel::Design::Serialization::IDesignerLoaderHost ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LoaderHost : System.ComponentModel.Design.Serialization.IDesignerLoaderHost" Usage="System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.IDesignerLoaderHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el host del cargador.</summary>
        <value>Interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> que se ha pasado al método <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método devuelve el host del cargador que se asignó a este cargador de diseñadores. Esto puede ser `null` si <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> no se ha llamado todavía, o si se ha desechado este cargador de diseñadores.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No se ha inicializado la interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Se ha eliminado el objeto <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />
      </Docs>
    </Member>
    <Member MemberName="Loading">
      <MemberSignature Language="C#" Value="public override bool Loading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Loading" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Loading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Loading { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Loading : bool" Usage="System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el cargador de diseñadores está cargando la superficie de diseño.</summary>
        <value>
          <see langword="true" /> si el cargador de diseñadores está cargando actualmente la superficie de diseño; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> clase proporciona el <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>, que admite las dependencias de carga. Esta propiedad toma en cuenta y las dependencias de carga devuelto `true` si no hay ninguna dependencia de carga pendiente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Modified">
      <MemberSignature Language="C#" Value="protected virtual bool Modified { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Modified" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property Modified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool Modified { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Modified : bool with get, set" Usage="System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se ha modificado el diseñador.</summary>
        <value>
          <see langword="true" /> si el diseñador se ha modificado; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Determina si el cargador de diseñadores ha detectado que se ha modificado el diseñador. Si esta propiedad es `true` cuando el cargador de diseñadores <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> se llama al método, el cargador de diseñadores llamará el <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginLoad">
      <MemberSignature Language="C#" Value="protected virtual void OnBeginLoad ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeginLoad() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeginLoad ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeginLoad();" />
      <MemberSignature Language="F#" Value="abstract member OnBeginLoad : unit -&gt; unit&#xA;override this.OnBeginLoad : unit -&gt; unit" Usage="basicDesignerLoader.OnBeginLoad " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Notifica al cargador de diseñadores que la carga está a punto de comenzar.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> se invoca el método para iniciar el proceso de carga. Debe realizar cualquier inicialización necesaria para la carga en este momento. Este método no debe usarse para realizar la carga real. La implementación predeterminada deshabilita las notificaciones de cambio y configura el <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> para la carga.  
  
 Si implementa <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> para proporcionar compatibilidad de carga dependiente, debe llamar a <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> cuando se produce la primera carga dependiente. Llame a la <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> método después de la última llamada a la <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> método. De forma predeterminada, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> implementa <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> y lo hace. Si <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> no está disponible cuando <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> se llama, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> llamará directamente <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>.  
  
 Si proporciona su propio servicio de cargador, o si decide no proporcionan un servicio de cargador, usted es responsable de llamar a este método. El <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> método llamará automáticamente a esto, indirectamente, mediante una llamada a <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A> si <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> está disponible, o directamente si no lo está.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginUnload">
      <MemberSignature Language="C#" Value="protected virtual void OnBeginUnload ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeginUnload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeginUnload ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeginUnload();" />
      <MemberSignature Language="F#" Value="abstract member OnBeginUnload : unit -&gt; unit&#xA;override this.OnBeginUnload : unit -&gt; unit" Usage="basicDesignerLoader.OnBeginUnload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Notifica al cargador de diseñadores que la descarga está a punto de comenzar.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload%2A> método se invoca cuando el cargador de diseñadores está a punto de descargarse el documento.  
  
 Se puede descargar el documento como preparación para la recarga, o si no se pudo cargar el documento. Si agrega servicios específicos del documento en <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> o <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>, quitarlos aquí.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndLoad">
      <MemberSignature Language="C#" Value="protected virtual void OnEndLoad (bool successful, System.Collections.ICollection errors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndLoad(bool successful, class System.Collections.ICollection errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndLoad (successful As Boolean, errors As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndLoad(bool successful, System::Collections::ICollection ^ errors);" />
      <MemberSignature Language="F#" Value="abstract member OnEndLoad : bool * System.Collections.ICollection -&gt; unit&#xA;override this.OnEndLoad : bool * System.Collections.ICollection -&gt; unit" Usage="basicDesignerLoader.OnEndLoad (successful, errors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errors" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful">Es <see langword="true" /> si la carga se ha realizado correctamente; en caso contrario, es <see langword="false" />.</param>
        <param name="errors">Interfaz <see cref="T:System.Collections.ICollection" /> que contiene objetos (normalmente excepciones) respecto a lo cuales se han creado informes de error.</param>
        <summary>Notifica al cargador de diseñadores que se ha completado la carga.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> método se invoca cuando finaliza la carga. Se llama siempre, incluso si se produce una excepción durante la carga. El valor de `successful` se establecerá en `true` si la carga se realizó correctamente, o `false` si se ha producido un error irrecuperable. El `errors` recopilación contendrá los objetos que se notifican como errores. Normalmente, estos objetos son las excepciones.  
  
 Si implementa <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> para proporcionar compatibilidad de carga dependiente, debe llamar a la <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> método después de la última llamada a la <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> método. De forma predeterminada, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> implementa <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> y lo hace. Si <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> no está disponible cuando <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> se llama, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> llamará directamente <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> después de llamar a <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A>.  
  
 Este método debe llamarse por el servicio de cargador de diseñadores cuando se hayan completado todas las cargas dependientes.  Esto detiene el proceso de carga que fue iniciado por el <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> método. Si proporciona su propio servicio de cargador, o si decide no proporcionan un servicio de cargador, usted es responsable de llamar a este método. El <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> método llamará automáticamente a esto, indirectamente, mediante una llamada a la <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> método si <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> está disponible, o directamente si no lo está.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No se ha inicializado la interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Se ha eliminado el objeto <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnModifying">
      <MemberSignature Language="C#" Value="protected virtual void OnModifying ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModifying() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModifying ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModifying();" />
      <MemberSignature Language="F#" Value="abstract member OnModifying : unit -&gt; unit&#xA;override this.OnModifying : unit -&gt; unit" Usage="basicDesignerLoader.OnModifying " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Notifica al cargador de diseñadores que está a punto de modificarse el estado del documento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying%2A> se llama al método en respuesta a un cambio de componente, agregar, o quitar el evento que indica que el diseñador está a punto de modificarse. Puede implementar el control de código fuente invalidando este método. Una llamada a <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying%2A> no significa que el <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified%2A> propiedad más adelante se establecerá en `true`; simplemente indica una intención para hacerlo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformFlush">
      <MemberSignature Language="C#" Value="protected abstract void PerformFlush (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PerformFlush(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub PerformFlush (serializationManager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void PerformFlush(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ serializationManager);" />
      <MemberSignature Language="F#" Value="abstract member PerformFlush : System.ComponentModel.Design.Serialization.IDesignerSerializationManager -&gt; unit" Usage="basicDesignerLoader.PerformFlush serializationManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="serializationManager">Interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a utilizar para conservar el estado de los diseñadores cargados.</param>
        <summary>Vacía todos los cambios realizados en el diseñador.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A> método se invoca cuando el cargador de diseñadores debe vaciar en la persistencia de los cambios realizados en los diseñadores. Se invoca en respuesta a una llamada a la <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="PerformLoad">
      <MemberSignature Language="C#" Value="protected abstract void PerformLoad (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PerformLoad(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub PerformLoad (serializationManager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void PerformLoad(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ serializationManager);" />
      <MemberSignature Language="F#" Value="abstract member PerformLoad : System.ComponentModel.Design.Serialization.IDesignerSerializationManager -&gt; unit" Usage="basicDesignerLoader.PerformLoad serializationManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="serializationManager">Interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> que se va a utilizar para cargar el estado de los diseñadores.</param>
        <summary>Carga un diseñador desde la persistencia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A> método se invoca cuando el cargador de diseñadores necesita cargar su estado. <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A> se llama antes de la <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> método. Debe implementar este método para cargar el contenido del diseñador.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="PropertyProvider">
      <MemberSignature Language="C#" Value="protected object PropertyProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PropertyProvider" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Property PropertyProvider As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Object ^ PropertyProvider { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PropertyProvider : obj with get, set" Usage="System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el proveedor de propiedades para el administrador de serialización que utiliza el cargador.</summary>
        <value>Objeto cuyas propiedades se van a proporcionar al administrador de serialización.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El Administrador de serialización proporciona una `Properties` propiedad en la interfaz principal que se puede leer por los serializadores para personalizar su serialización a necesidades específicas. Las propiedades que se examinan los serializadores varían según el tipo de serializador que usa.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No se ha inicializado la interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="protected void Reload (System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions flags);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Reload(valuetype System.ComponentModel.Design.Serialization.BasicDesignerLoader/ReloadOptions flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Reload (flags As BasicDesignerLoader.ReloadOptions)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Reload(System::ComponentModel::Design::Serialization::BasicDesignerLoader::ReloadOptions flags);" />
      <MemberSignature Language="F#" Value="member this.Reload : System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions -&gt; unit" Usage="basicDesignerLoader.Reload flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.ComponentModel.Design.Serialization.BasicDesignerLoader+ReloadOptions" />
      </Parameters>
      <Docs>
        <param name="flags">Combinación bit a bit de los valores de <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions" />.</param>
        <summary>Pone en la cola una recarga del diseñador.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload%2A> se puede invocar el método por el cargador de diseñadores para solicitar una recarga del diseñador. Dado que las recargas se realizan en tiempo de inactividad, este método realmente no recargar el diseñador; simplemente pone en cola la recarga.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions" />
      </Docs>
    </Member>
    <Member MemberName="ReloadPending">
      <MemberSignature Language="C#" Value="protected bool ReloadPending { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReloadPending" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ReloadPending As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool ReloadPending { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ReloadPending : bool" Usage="System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si se ha puesto en la cola una recarga.</summary>
        <value>
          <see langword="true" />, si una llamada a <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" /> ha puesto en la cola una solicitud de recarga; de lo contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" />
      </Docs>
    </Member>
    <Member MemberName="ReportFlushErrors">
      <MemberSignature Language="C#" Value="protected virtual void ReportFlushErrors (System.Collections.ICollection errors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ReportFlushErrors(class System.Collections.ICollection errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ReportFlushErrors (errors As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ReportFlushErrors(System::Collections::ICollection ^ errors);" />
      <MemberSignature Language="F#" Value="abstract member ReportFlushErrors : System.Collections.ICollection -&gt; unit&#xA;override this.ReportFlushErrors : System.Collections.ICollection -&gt; unit" Usage="basicDesignerLoader.ReportFlushErrors errors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errors" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="errors">Interfaz <see cref="T:System.Collections.ICollection" /> que contiene objetos de error, normalmente excepciones.</param>
        <summary>Crea informes sobre los errores que se han producido al vaciar los cambios.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors%2A> se llama al método durante <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> si se ha producido uno o varios errores al vaciar los cambios. Los valores de la `errors` colección puede ser excepciones u objetos con <xref:System.Object.ToString%2A> valores que describen el error. La implementación predeterminada de <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors%2A> provoca la última excepción de la colección.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Se produjeron uno o varios errores al vaciar los cambios.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetBaseComponentClassName">
      <MemberSignature Language="C#" Value="protected void SetBaseComponentClassName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetBaseComponentClassName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetBaseComponentClassName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetBaseComponentClassName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.SetBaseComponentClassName : string -&gt; unit" Usage="basicDesignerLoader.SetBaseComponentClassName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Cadena que representa el nombre completo del componente que se va a diseñar.</param>
        <summary>Establece el nombre completo de clase del componente base.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName%2A> método debe llamarse durante la carga para establecer el nombre completo del componente está diseñando un diseñador.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency">
      <MemberSignature Language="C#" Value="void IDesignerLoaderService.AddLoadDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency" />
      <MemberSignature Language="VB.NET" Value="Sub AddLoadDependency () Implements IDesignerLoaderService.AddLoadDependency" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency() = System::ComponentModel::Design::Serialization::IDesignerLoaderService::AddLoadDependency;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Registra un componente externo como parte del proceso de carga administrado por <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Llame a la <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> método una vez para cada objeto externo que participa en el proceso de carga. El <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> se llama al método cuando se realiza el trabajo del proceso de carga.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No se ha inicializado la interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete">
      <MemberSignature Language="C#" Value="void IDesignerLoaderService.DependentLoadComplete (bool successful, System.Collections.ICollection errorCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(bool successful, class System.Collections.ICollection errorCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#DependentLoadComplete(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Sub DependentLoadComplete (successful As Boolean, errorCollection As ICollection) Implements IDesignerLoaderService.DependentLoadComplete" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(bool successful, System::Collections::ICollection ^ errorCollection) = System::ComponentModel::Design::Serialization::IDesignerLoaderService::DependentLoadComplete;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errorCollection" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful">Es <see langword="true" /> si la carga se ha realizado correctamente; de lo contrario, es <see langword="false" />.</param>
        <param name="errorCollection">Interfaz <see cref="T:System.Collections.ICollection" /> que contiene los errores que se han producido durante la carga.</param>
        <summary>Indica que ha finalizado una carga dependiente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> método se llama para indicar que se ha completado una operación de carga dependiente. Llame a la <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> método una vez para cada proceso que se registró mediante una llamada a la <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> método, que ya se ha completado.  
  
 Si la carga dependiente se realiza correctamente, el llamador establece el `successful` parámetro `true` y pasa una colección vacía o `null` a la `errorCollection` parámetro. Si producen errores en la carga dependiente, el llamador establece el `successful` parámetro `false` y pasa una colección de excepciones que indican la causa o causas de error para el `errorCollection` parámetro.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency" /> no ha agregado ninguna dependencia de carga o no se ha inicializado la interfaz <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Se ha eliminado el objeto <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload">
      <MemberSignature Language="C#" Value="bool IDesignerLoaderService.Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#Reload" />
      <MemberSignature Language="VB.NET" Value="Function Reload () As Boolean Implements IDesignerLoaderService.Reload" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload() = System::ComponentModel::Design::Serialization::IDesignerLoaderService::Reload;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recarga el documento de diseño.</summary>
        <returns>
          <see langword="true" /> si se acepta la petición de recarga; <see langword="false" /> si el cargador no permite la recarga.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede llamar cualquier objeto el <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23Reload%2A> método para solicitar que el cargador de recargar el documento de diseño. Si el cargador admite la recarga y cumple con la recarga, puede devolver el cargador de diseñadores `true`. De lo contrario, devuelve `false`, que indica que no se produzca la recarga. Los llamadores no pueden depender de la recarga sucede inmediatamente; el cargador de diseñadores puede programar para más tarde, o puede intentar volver a recargar el diseñador a la vez.  
  
 El llamador puede mostrar un mensaje al usuario si no se puede recargar el diseñador.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>