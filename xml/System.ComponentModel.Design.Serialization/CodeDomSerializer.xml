<Type Name="CodeDomSerializer" FullName="System.ComponentModel.Design.Serialization.CodeDomSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c5ff6374b5118d26b59b9bf3520225922680641d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36709531" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CodeDomSerializer : System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CodeDomSerializer extends System.ComponentModel.Design.Serialization.CodeDomSerializerBase" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeDomSerializer&#xA;Inherits CodeDomSerializerBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeDomSerializer : System::ComponentModel::Design::Serialization::CodeDomSerializerBase" />
  <TypeSignature Language="F#" Value="type CodeDomSerializer = class&#xA;    inherit CodeDomSerializerBase" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.Serialization.CodeDomSerializerBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DefaultSerializationProvider(typeof(System.ComponentModel.Design.Serialization.CodeDomSerializationProvider))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Serializa un gráfico de objetos en una serie de instrucciones CodeDOM. Esta clase proporciona una clase base abstracta para un serializador.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede implementar un personalizado <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> para controlar la generación de código de inicialización de componente para un tipo de componente en tiempo de diseño.  
  
 Para implementar un personalizado <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> para un tipo, debe:  
  
1.  Defina una clase que se derive de <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>.  
  
2.  Implemente los reemplazos de método para los métodos de serialización o deserialización. (Vea la siguiente información para obtener más información).  
  
3.  Asociar personalizado <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> implementación con un tipo de componente mediante un <xref:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute>.  
  
 Para implementar un método de serialización para generar el código de configuración de un componente:  
  
1.  Dentro de una clase que deriva de <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>, invalidar una serialización adecuada o la deserialización de método de la clase base.  
  
2.  Si desea que el serializador predeterminado para generar instrucciones de código que realizan la configuración predeterminada del componente, debe obtener y llamar al serializador base para el componente. Para obtener el serializador base del componente, llame a la <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A> método de la <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> pasa a la invalidación del método. Pasar el <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A> el tipo de componente para serializar la configuración de, junto con el tipo base del serializador que está solicitando, que es el método <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>. Llame al método del mismo nombre que se va a reemplazar en el serializador base, utilizando el <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> y el objeto que se pasa al método de invalidación. Si está implementando el <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer.Serialize%2A> método, el <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer.Serialize%2A> método del serializador base devolverá un objeto. El tipo de este objeto depende del tipo de serializador base que depende del tipo de componente de que serializa los valores. Si está implementando el <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents%2A>, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties%2A>, o <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources%2A> método, debe crear un nuevo <xref:System.CodeDom.CodeStatementCollection> para contener las instrucciones de código generado y pasarla al método.  
  
3.  Si ha llamado a un método del serializador base, tendrá una <xref:System.CodeDom.CodeStatementCollection> que contiene las instrucciones que se va a generar para inicializar el componente. En caso contrario, debe crear un <xref:System.CodeDom.CodeStatementCollection>. Puede agregar <xref:System.CodeDom.CodeStatement> objetos que representan las instrucciones para generar en el código de configuración de componente a esta colección.  
  
4.  Devolver el <xref:System.CodeDom.CodeStatementCollection> que representa el código fuente para generar para configurar el componente.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear un serializador de CodeDOM personalizado que se deriva de <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>.  
  
 [!code-cpp[IDesignerSerializationManagerSample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IDesignerSerializationManagerSample/CPP/idesignerserializationmanagersample.cpp#1)]
 [!code-csharp[IDesignerSerializationManagerSample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IDesignerSerializationManagerSample/CS/idesignerserializationmanagersample.cs#1)]
 [!code-vb[IDesignerSerializationManagerSample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IDesignerSerializationManagerSample/VB/idesignerserializationmanagersample.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Al heredar de <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />, debe reemplazar los miembros siguientes: <see cref="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" /> y <see cref="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />.</para>
    </block>
    <altmember cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeDomSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeDomSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public virtual object Deserialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object codeObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object codeObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Deserialize (manager As IDesignerSerializationManager, codeObject As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Deserialize(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ codeObject);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; obj&#xA;override this.Deserialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; obj" Usage="codeDomSerializer.Deserialize (manager, codeObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="codeObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">Interfaz del administrador de serialización que se utiliza durante el proceso de deserialización.</param>
        <param name="codeObject">Objeto CodeDOM serializado que se va a deserializar.</param>
        <summary>Deserializa el objeto CodeDOM serializado especificado en un objeto.</summary>
        <returns>Objeto CodeDOM deserializado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método usa el Administrador de serialización para crear objetos y resolver los tipos de datos. Se devuelve la raíz del gráfico de objetos.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="manager" /> o <paramref name="codeObject" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="codeObject" /> es un elemento de código no compatible.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeserializeStatementToInstance">
      <MemberSignature Language="C#" Value="protected object DeserializeStatementToInstance (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatement statement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object DeserializeStatementToInstance(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, class System.CodeDom.CodeStatement statement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.DeserializeStatementToInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)" />
      <MemberSignature Language="VB.NET" Value="Protected Function DeserializeStatementToInstance (manager As IDesignerSerializationManager, statement As CodeStatement) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ DeserializeStatementToInstance(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::CodeDom::CodeStatement ^ statement);" />
      <MemberSignature Language="F#" Value="member this.DeserializeStatementToInstance : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.CodeDom.CodeStatement -&gt; obj" Usage="codeDomSerializer.DeserializeStatementToInstance (manager, statement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="statement" Type="System.CodeDom.CodeStatement" />
      </Parameters>
      <Docs>
        <param name="manager">El administrador de serialización que se va a usar para la serialización.</param>
        <param name="statement">Instrucción que se va a deserializar.</param>
        <summary>Deserializa una instrucción sencilla.</summary>
        <returns>Instancia de un objeto que es el resultado de la deserialización de <paramref name="statement" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer.DeserializeStatementToInstance%2A> equivalente de llamar al método <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement%2A>, excepto en que devuelve una instancia de objeto si la instrucción resultante es una instrucción de asignación variable, una declaración de variable con una expresión init o una instrucción de asignación de campo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTargetComponentName">
      <MemberSignature Language="C#" Value="public virtual string GetTargetComponentName (System.CodeDom.CodeStatement statement, System.CodeDom.CodeExpression expression, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetTargetComponentName(class System.CodeDom.CodeStatement statement, class System.CodeDom.CodeExpression expression, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.GetTargetComponentName(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTargetComponentName (statement As CodeStatement, expression As CodeExpression, targetType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetTargetComponentName(System::CodeDom::CodeStatement ^ statement, System::CodeDom::CodeExpression ^ expression, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="abstract member GetTargetComponentName : System.CodeDom.CodeStatement * System.CodeDom.CodeExpression * Type -&gt; string&#xA;override this.GetTargetComponentName : System.CodeDom.CodeStatement * System.CodeDom.CodeExpression * Type -&gt; string" Usage="codeDomSerializer.GetTargetComponentName (statement, expression, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="statement" Type="System.CodeDom.CodeStatement" />
        <Parameter Name="expression" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="statement">Clase <see cref="T:System.CodeDom.CodeStatement" /> cuyo grupo se va a determinar.</param>
        <param name="expression">Objeto <see cref="T:System.CodeDom.CodeExpression" /> al que se ha reducido <c>statement</c>.</param>
        <param name="targetType">
          <see cref="T:System.Type" /> de <c>statement</c>.</param>
        <summary>Determina a qué grupo de instrucciones debería pertenecer la instrucción dada.</summary>
        <returns>Nombre del componente con el que debería agruparse <paramref name="statement" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public virtual object Serialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Serialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Serialize (manager As IDesignerSerializationManager, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Serialize(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; obj&#xA;override this.Serialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; obj" Usage="codeDomSerializer.Serialize (manager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">Administrador de serialización que se va a utilizar durante la serialización.</param>
        <param name="value">El objeto que se va a serializar.</param>
        <summary>Serializa el objeto especificado en un objeto CodeDOM.</summary>
        <returns>Objeto CodeDOM que representa el objeto que se ha serializado.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="manager" /> o <paramref name="value" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SerializeAbsolute">
      <MemberSignature Language="C#" Value="public virtual object SerializeAbsolute (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object SerializeAbsolute(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SerializeAbsolute (manager As IDesignerSerializationManager, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ SerializeAbsolute(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SerializeAbsolute : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; obj&#xA;override this.SerializeAbsolute : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; obj" Usage="codeDomSerializer.SerializeAbsolute (manager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">El administrador de serialización que se va a usar para la serialización.</param>
        <param name="value">El objeto que se va a serializar.</param>
        <summary>Serializa el objeto dado, teniendo en cuenta los valores predeterminados.</summary>
        <returns>Objeto CodeDom que representa <paramref name="value" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="manager" /> o <paramref name="value" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SerializeMember">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.CodeStatementCollection SerializeMember (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object owningObject, System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeStatementCollection SerializeMember(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object owningObject, class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMember(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SerializeMember (manager As IDesignerSerializationManager, owningObject As Object, member As MemberDescriptor) As CodeStatementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::CodeStatementCollection ^ SerializeMember(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ owningObject, System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberSignature Language="F#" Value="abstract member SerializeMember : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * System.ComponentModel.MemberDescriptor -&gt; System.CodeDom.CodeStatementCollection&#xA;override this.SerializeMember : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * System.ComponentModel.MemberDescriptor -&gt; System.CodeDom.CodeStatementCollection" Usage="codeDomSerializer.SerializeMember (manager, owningObject, member)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeStatementCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="owningObject" Type="System.Object" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="manager">El administrador de serialización que se va a usar para la serialización.</param>
        <param name="owningObject">Objeto al que se adjunta <c>member</c>.</param>
        <param name="member">Miembro que se va a serializar.</param>
        <summary>Serializa al miembro especificado en el objeto especificado.</summary>
        <returns>Objeto <see cref="T:System.CodeDom.CodeStatementCollection" /> que representa el estado serializado de <paramref name="member" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="manager" />, <paramref name="owningObject" /> o <paramref name="member" /> es <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="member" /> no es un tipo serializable.</exception>
      </Docs>
    </Member>
    <Member MemberName="SerializeMemberAbsolute">
      <MemberSignature Language="C#" Value="public virtual System.CodeDom.CodeStatementCollection SerializeMemberAbsolute (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object owningObject, System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeStatementCollection SerializeMemberAbsolute(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object owningObject, class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SerializeMemberAbsolute (manager As IDesignerSerializationManager, owningObject As Object, member As MemberDescriptor) As CodeStatementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::CodeDom::CodeStatementCollection ^ SerializeMemberAbsolute(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ owningObject, System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberSignature Language="F#" Value="abstract member SerializeMemberAbsolute : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * System.ComponentModel.MemberDescriptor -&gt; System.CodeDom.CodeStatementCollection&#xA;override this.SerializeMemberAbsolute : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj * System.ComponentModel.MemberDescriptor -&gt; System.CodeDom.CodeStatementCollection" Usage="codeDomSerializer.SerializeMemberAbsolute (manager, owningObject, member)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeStatementCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="owningObject" Type="System.Object" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="manager">El administrador de serialización que se va a usar para la serialización.</param>
        <param name="owningObject">Objeto al que se adjunta <c>member</c>.</param>
        <param name="member">Miembro que se va a serializar.</param>
        <summary>Serializa el miembro especificado, teniendo en cuenta los valores predeterminados.</summary>
        <returns>Objeto CodeDom que representa <paramref name="member" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="manager" />, <paramref name="owningObject" /> o <paramref name="member" /> es <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="member" /> no es un tipo serializable.</exception>
      </Docs>
    </Member>
    <Member MemberName="SerializeToReferenceExpression">
      <MemberSignature Language="C#" Value="protected System.CodeDom.CodeExpression SerializeToReferenceExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.CodeDom.CodeExpression SerializeToReferenceExpression(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeToReferenceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function SerializeToReferenceExpression (manager As IDesignerSerializationManager, value As Object) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::CodeDom::CodeExpression ^ SerializeToReferenceExpression(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SerializeToReferenceExpression : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * obj -&gt; System.CodeDom.CodeExpression" Usage="codeDomSerializer.SerializeToReferenceExpression (manager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated. Use SerializeToExpression or GetExpression instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="manager">Administrador de serialización que se va a utilizar durante la serialización.</param>
        <param name="value">El objeto que se va a serializar.</param>
        <summary>Serializa el valor especificado en una expresión CodeDOM.</summary>
        <returns>Valor serializado. Devuelve <see langword="null" /> si no se puede obtener ninguna expresión de referencia para el valor especificado o si el valor no se puede serializar.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método es similar a <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>, excepto en que se detiene si no se puede obtener una expresión de referencia para el valor. Llamar a este método cuando se espera que la expresión resultante que se usará como un parámetro o el destino de una instrucción.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>