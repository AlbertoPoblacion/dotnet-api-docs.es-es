<Type Name="IStateRuntime" FullName="System.Web.SessionState.IStateRuntime">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7aca6f4ae18338e18662e5909215ce67ebdbdae3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36593720" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IStateRuntime" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStateRuntime" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.IStateRuntime" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStateRuntime" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStateRuntime" />
  <TypeSignature Language="F#" Value="type IStateRuntime = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("7297744b-e188-40bf-b7e9-56698d25cf44")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Define la interfaz utilizada por el servicio de estado de ASP.NET para administrar los datos de la sesión.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET puede administrar el estado de sesión fuera de proceso mediante el uso de un servicio de Windows denominado el servicio de estado ASP.NET. La <xref:System.Web.SessionState.StateRuntime> clase se utiliza código no administrado en este servicio para administrar datos de la sesión. Esta clase admite la implementación de la infraestructura de .NET Framework del servicio de estado ASP.NET y no debe usarse directamente desde su código.  
  
 Usar el servicio de estado ASP.NET no es el método predeterminado para administrar sessionstate en ASP.NET; ASP.NET es compatible con la administración de Estados de sesión en proceso de forma predeterminada. También admite una segunda opción fuera de proceso que administra el estado de sesión en una base de datos de Microsoft SQL Server y permite a las soluciones de administración de Estados de sesión personalizado. Para obtener más información acerca de las opciones de almacenamiento de información de estado de sesión, vea [Session-State Modes](http://msdn.microsoft.com/library/0bb0a3a3-650f-4c47-a0c5-b08b9b591bb4).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="ProcessRequest">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Utilizado por el servidor de estado de ASP.NET para procesar los datos de la sesión.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ProcessRequest">
      <MemberSignature Language="C#" Value="public void ProcessRequest (IntPtr tracker, int verb, string uri, int exclusive, int timeout, int lockCookieExists, int lockCookie, int contentLength, IntPtr content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessRequest([in]native int tracker, [in]int32 verb, [in]string uri, [in]int32 exclusive, [in]int32 timeout, [in]int32 lockCookieExists, [in]int32 lockCookie, [in]int32 contentLength, [in]native int content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.IStateRuntime.ProcessRequest(System.IntPtr,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessRequest (tracker As IntPtr, verb As Integer, uri As String, exclusive As Integer, timeout As Integer, lockCookieExists As Integer, lockCookie As Integer, contentLength As Integer, content As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProcessRequest(IntPtr tracker, int verb, System::String ^ uri, int exclusive, int timeout, int lockCookieExists, int lockCookie, int contentLength, IntPtr content);" />
      <MemberSignature Language="F#" Value="abstract member ProcessRequest : nativeint * int * string * int * int * int * int * int * nativeint -&gt; unit" Usage="iStateRuntime.ProcessRequest (tracker, verb, uri, exclusive, timeout, lockCookieExists, lockCookie, contentLength, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tracker" Type="System.IntPtr" />
        <Parameter Name="verb" Type="System.Int32" />
        <Parameter Name="uri" Type="System.String" />
        <Parameter Name="exclusive" Type="System.Int32" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="lockCookieExists" Type="System.Int32" />
        <Parameter Name="lockCookie" Type="System.Int32" />
        <Parameter Name="contentLength" Type="System.Int32" />
        <Parameter Name="content" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="tracker">Puntero <see cref="T:System.IntPtr" /> a un objeto almacenado en el servidor de estado de ASP.NET no administrado.</param>
        <param name="verb">Acción que debe llevarse a cabo sobre el objeto.</param>
        <param name="uri">Identificador de la sesión.</param>
        <param name="exclusive">Tipo de acceso a los objetos ubicados en el almacén.</param>
        <param name="timeout">Número de minutos que llevan almacenados los datos de la sesión.</param>
        <param name="lockCookieExists">Valor que indica si la cookie de bloqueo existe en la solicitud original del servidor Web de ASP.NET al servidor de estado de ASP.NET.</param>
        <param name="lockCookie">Propietario del bloqueo sobre el estado de sesión.</param>
        <param name="contentLength">Longitud, expresada en bytes, de los datos de sesión almacenados.</param>
        <param name="content">Puntero <see cref="T:System.IntPtr" /> al contenido de la sesión almacenado en el servidor de estado de ASP.NET no administrado.</param>
        <summary>Utilizado por el servidor de estado de ASP.NET para procesar los datos de la sesión.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET puede administrar el estado de sesión fuera de proceso mediante el uso de un servicio de Windows denominado el servicio de estado ASP.NET. El <xref:System.Web.SessionState.IStateRuntime.ProcessRequest%2A> método se utiliza código no administrado en este servicio para administrar los datos de sesión.  
  
 Este miembro admite la implementación de la infraestructura de .NET Framework del servicio de estado ASP.NET y no debe usarse directamente desde su código. Para obtener más información acerca de las opciones de almacenamiento de información de estado de sesión, vea [Session-State Modes](http://msdn.microsoft.com/library/0bb0a3a3-650f-4c47-a0c5-b08b9b591bb4).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRequest">
      <MemberSignature Language="C#" Value="public void ProcessRequest (IntPtr tracker, int verb, string uri, int exclusive, int extraFlags, int timeout, int lockCookieExists, int lockCookie, int contentLength, IntPtr content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessRequest([in]native int tracker, [in]int32 verb, [in]string uri, [in]int32 exclusive, [in]int32 extraFlags, [in]int32 timeout, [in]int32 lockCookieExists, [in]int32 lockCookie, [in]int32 contentLength, [in]native int content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.IStateRuntime.ProcessRequest(System.IntPtr,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessRequest (tracker As IntPtr, verb As Integer, uri As String, exclusive As Integer, extraFlags As Integer, timeout As Integer, lockCookieExists As Integer, lockCookie As Integer, contentLength As Integer, content As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProcessRequest(IntPtr tracker, int verb, System::String ^ uri, int exclusive, int extraFlags, int timeout, int lockCookieExists, int lockCookie, int contentLength, IntPtr content);" />
      <MemberSignature Language="F#" Value="abstract member ProcessRequest : nativeint * int * string * int * int * int * int * int * int * nativeint -&gt; unit" Usage="iStateRuntime.ProcessRequest (tracker, verb, uri, exclusive, extraFlags, timeout, lockCookieExists, lockCookie, contentLength, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tracker" Type="System.IntPtr" />
        <Parameter Name="verb" Type="System.Int32" />
        <Parameter Name="uri" Type="System.String" />
        <Parameter Name="exclusive" Type="System.Int32" />
        <Parameter Name="extraFlags" Type="System.Int32" />
        <Parameter Name="timeout" Type="System.Int32" />
        <Parameter Name="lockCookieExists" Type="System.Int32" />
        <Parameter Name="lockCookie" Type="System.Int32" />
        <Parameter Name="contentLength" Type="System.Int32" />
        <Parameter Name="content" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="tracker">Puntero <see cref="T:System.IntPtr" /> a un objeto almacenado en el servidor de estado de ASP.NET no administrado.</param>
        <param name="verb">Acción que debe llevarse a cabo sobre el objeto.</param>
        <param name="uri">Identificador de la sesión.</param>
        <param name="exclusive">Tipo de acceso a los objetos ubicados en el almacén.</param>
        <param name="extraFlags">Valor que indica si la sesión actual es una sesión no inicializada y sin cookies.</param>
        <param name="timeout">Número de minutos que llevan almacenados los datos de la sesión.</param>
        <param name="lockCookieExists">Valor que indica si la cookie de bloqueo existe en la solicitud original del servidor Web de ASP.NET al servidor de estado de ASP.NET.</param>
        <param name="lockCookie">Propietario del bloqueo sobre el estado de sesión.</param>
        <param name="contentLength">Longitud, expresada en bytes, de los datos de sesión almacenados.</param>
        <param name="content">Puntero <see cref="T:System.IntPtr" /> al contenido de la sesión almacenado en el servidor de estado de ASP.NET no administrado.</param>
        <summary>Utilizado por el servidor de estado de ASP.NET para procesar los datos de la sesión.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET puede administrar el estado de sesión fuera de proceso mediante el uso de un servicio de Windows denominado el servicio de estado ASP.NET. El <xref:System.Web.SessionState.IStateRuntime.ProcessRequest%2A> método se utiliza código no administrado en este servicio para administrar los datos de sesión.  
  
 Este miembro admite la implementación de la infraestructura de .NET Framework del servicio de estado ASP.NET y no debe usarse directamente desde su código. Para obtener más información acerca de las opciones de almacenamiento de información de estado de sesión, vea [Session-State Modes](http://msdn.microsoft.com/library/0bb0a3a3-650f-4c47-a0c5-b08b9b591bb4).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopProcessing">
      <MemberSignature Language="C#" Value="public void StopProcessing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopProcessing() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.IStateRuntime.StopProcessing" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopProcessing ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopProcessing();" />
      <MemberSignature Language="F#" Value="abstract member StopProcessing : unit -&gt; unit" Usage="iStateRuntime.StopProcessing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Detiene el procesamiento de los datos de sesión almacenados en el servidor de estado de ASP.NET.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET puede administrar el estado de sesión fuera de proceso mediante el uso de un servicio de Windows denominado el servicio de estado ASP.NET. El <xref:System.Web.SessionState.StateRuntime.StopProcessing%2A> método se utiliza código no administrado en este servicio para detener el procesamiento de los datos de sesión. Este miembro se proporciona para admitir la implementación de la infraestructura de .NET Framework del servicio de estado ASP.NET y no debe usarse directamente desde su código. Para obtener más información acerca de las opciones de almacenamiento de información de estado de sesión, vea [Session-State Modes](http://msdn.microsoft.com/library/0bb0a3a3-650f-4c47-a0c5-b08b9b591bb4).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>