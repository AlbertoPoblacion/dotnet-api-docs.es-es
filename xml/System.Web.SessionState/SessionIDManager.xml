<Type Name="SessionIDManager" FullName="System.Web.SessionState.SessionIDManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f44fcb543de372f9c775b6dddadc369092144773" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36394742" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SessionIDManager : System.Web.SessionState.ISessionIDManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SessionIDManager extends System.Object implements class System.Web.SessionState.ISessionIDManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.SessionIDManager" />
  <TypeSignature Language="VB.NET" Value="Public Class SessionIDManager&#xA;Implements ISessionIDManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionIDManager : System::Web::SessionState::ISessionIDManager" />
  <TypeSignature Language="F#" Value="type SessionIDManager = class&#xA;    interface ISessionIDManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.SessionState.ISessionIDManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Manages unique identifiers for ASP.NET session state.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Web.SessionState.SessionIDManager> clase es un módulo HTTP que administra identificadores de sesión único para su uso con el estado de sesión ASP.NET. El identificador único para una sesión ASP.NET es el <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> propiedad, que puede tener acceso desde el <xref:System.Web.HttpContext.Session%2A> propiedad del elemento actual <xref:System.Web.HttpContext> o <xref:System.Web.UI.Page>. El identificador de sesión ASP.NET es un número generado aleatoriamente que se codifica como una cadena de 24 caracteres que consta de caracteres en minúsculas de una a la z y números del 0 al 5.  
  
 De forma predeterminada, la <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valor se envía en una cookie con cada solicitud a la aplicación ASP.NET. El nombre de la cookie que contiene el <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valor es ASP.NET_SessionId de forma predeterminada. Puede configurar un nombre de cookie diferente estableciendo la `cookieName` atributo de la [sessionState Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) para el nombre de la cookie deseado.  
  
 Si desea deshabilitar el uso de cookies en una aplicación de ASP.NET y permitir que el uso de estado de sesión, puede configurar la aplicación para almacenar el identificador de sesión en la dirección URL en lugar de una cookie estableciendo la `cookieless` atributo de la `sessionState` elemento `true` en el archivo Web.config de la aplicación. Para obtener más información, vea la propiedad <xref:System.Web.SessionState.HttpSessionStateContainer.IsCookieless%2A>.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Puede reemplazar el identificador de sesión ASP.NET con su propio identificador de sesión personalizado creando una clase que hereda la <see cref="T:System.Web.SessionState.SessionIDManager" /> clase e invalidar el <see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" /> y <see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" /> métodos con sus propias implementaciones personalizadas. Para obtener un ejemplo de cómo reemplazar el <see cref="T:System.Web.SessionState.SessionIDManager" /> clase y la implementación de estos métodos, vea el ejemplo proporcionado para el <see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" /> método.  Puede reemplazar toda la <see cref="T:System.Web.SessionState.SessionIDManager" /> con un administrador de identificador de sesión personalizado creando una clase que implementa el <see cref="T:System.Web.SessionState.ISessionIDManager" /> interfaz. Si el Administrador de Id. de sesión personalizada admite identificadores de sesión sin cookies, debe implementar una solución para enviar y recuperar identificadores de sesión en la dirección URL, por ejemplo, un filtro ISAPI. Para obtener más información acerca de cómo crear un identificador de sesión personalizado manager, consulte <see cref="T:System.Web.SessionState.ISessionIDManager" />.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionIDManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionIDManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates an instance of the <see cref="T:System.Web.SessionState.SessionIDManager" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor no está pensado para ser llamado desde código de aplicación.  
  
 ASP.NET llama a este constructor para crear una instancia de la <xref:System.Web.SessionState.SessionIDManager> clase. Después de llamar al constructor, ASP.NET llama a la <xref:System.Web.SessionState.SessionIDManager.Initialize%2A> método para inicializar la nueva <xref:System.Web.SessionState.SessionIDManager> objeto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSessionID">
      <MemberSignature Language="C#" Value="public virtual string CreateSessionID (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateSessionID(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSessionID (context As HttpContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ CreateSessionID(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CreateSessionID : System.Web.HttpContext -&gt; string&#xA;override this.CreateSessionID : System.Web.HttpContext -&gt; string" Usage="sessionIDManager.CreateSessionID context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.CreateSessionID(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">The current <see cref="T:System.Web.HttpContext" /> object that references server objects used to process HTTP requests (for example, the <see cref="P:System.Web.HttpContext.Request" /> and <see cref="P:System.Web.HttpContext.Response" /> properties).</param>
        <summary>Creates a unique session identifier for the session.</summary>
        <returns>A unique session identifier.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método no está pensado para ser llamado desde código de aplicación.  
  
 El <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> método devuelve un identificador de sesión único que es un número generado aleatoriamente que se codifica como una cadena de 24 caracteres que consta de caracteres en minúsculas de una a la z y números del 0 al 5.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una clase que hereda la <xref:System.Web.SessionState.SessionIDManager> clase e invalida el <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> y <xref:System.Web.SessionState.SessionIDManager.Validate%2A> métodos con los métodos que proporcionan y validar una <xref:System.Guid> como el <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>.  
  
 [!code-csharp[System.Web.SessionState.ISessionIDModule#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/CS/GuidSessionIDModule.cs#7)]
 [!code-vb[System.Web.SessionState.ISessionIDModule#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/VB/GuidSessionIDModule.vb#7)]  
  
 Para usar la clase personalizada que se muestra en este ejemplo, configure el atributo sessionIDManagerType de la [sessionState Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) elemento, tal como se muestra en el ejemplo siguiente.  
  
```  
<sessionState  
  Mode="InProc"  
  stateConnectionString="tcp=127.0.0.1:42424"  
  stateNetworkTimeout="10"  
  sqlConnectionString="data source=127.0.0.1;Integrated Security=SSPI"  
  sqlCommandTimeout="30"  
  customProvider=""  
  cookieless="false"  
  regenerateExpiredSessionId="false"  
  timeout="20"  
  sessionIDManagerType="Your.ID.Manager.Type,  
    CustomAssemblyNameInBinFolder"  
/>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Puede proporcionar un identificador de sesión personalizado que va a usar el estado de sesión de ASP.NET mediante la creación de una clase que hereda la <see cref="T:System.Web.SessionState.SessionIDManager" /> clase e invalidar el <see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" /> y <see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" /> métodos con sus propias implementaciones personalizadas. Si el identificador de sesión personalizado no cumple las restricciones de caracteres que se exige la implementación predeterminada de la <see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" /> método, debe invalidar el <see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" /> método para proporcionar la validación de su identificador de sesión personalizado. En este caso, el <see cref="T:System.Web.SessionState.SessionIDManager" /> clase garantizará que su identificador de sesión personalizado es la dirección URL codificada en la respuesta HTTP y la dirección URL descodificados de la solicitud HTTP mediante el <see cref="M:System.Web.SessionState.SessionIDManager.Encode(System.String)" /> y <see cref="M:System.Web.SessionState.SessionIDManager.Decode(System.String)" /> métodos, respectivamente.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public virtual string Decode (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Decode(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.Decode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Decode (id As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Decode(System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member Decode : string -&gt; string&#xA;override this.Decode : string -&gt; string" Usage="sessionIDManager.Decode id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">The session identifier to decode.</param>
        <summary>Decodes a URL-encoded session identifier obtained from a cookie or the URL.</summary>
        <returns>The decoded session identifier.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método no está pensado para ser llamado desde código de aplicación.  
  
 Este método se usa internamente el <xref:System.Web.SessionState.SessionIDManager> clase descodificar personalizado <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valores creados por las clases que heredan la <xref:System.Web.SessionState.SessionIDManager> clase e invalidar el <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> y <xref:System.Web.SessionState.SessionIDManager.Validate%2A> métodos. Para garantizar la fidelidad de un valor de identificador de sesión personalizado recuperadas de la solicitud HTTP mediante el <xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A> método, el <xref:System.Web.SessionState.SessionIDManager> descodifica el valor personalizado mediante el <xref:System.Web.HttpUtility.UrlDecode%2A> método.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Para obtener un ejemplo de una clase que hereda la <see cref="T:System.Web.SessionState.SessionIDManager" /> clase e invalida el <see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" /> y <see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" /> métodos, vea el ejemplo proporcionado para el <see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" /> método.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public virtual string Encode (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Encode(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.Encode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Encode (id As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Encode(System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member Encode : string -&gt; string&#xA;override this.Encode : string -&gt; string" Usage="sessionIDManager.Encode id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">The session identifier to encode.</param>
        <summary>Encodes the session identifier for saving to either a cookie or the URL.</summary>
        <returns>The encoded session identifier.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método no está pensado para ser llamado desde código de aplicación.  
  
 Este método se usa internamente el <xref:System.Web.SessionState.SessionIDManager> clase para codificar personalizado <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valores creados por las clases que heredan la <xref:System.Web.SessionState.SessionIDManager> clase e invalidar el <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> y <xref:System.Web.SessionState.SessionIDManager.Validate%2A> métodos. Para garantizar la fidelidad de un valor de identificador de sesión personalizado almacenado en la respuesta HTTP mediante el <xref:System.Web.SessionState.SessionIDManager.SaveSessionID%2A> método, el <xref:System.Web.SessionState.SessionIDManager> codifica el valor personalizado mediante el <xref:System.Web.HttpUtility.UrlEncode%2A> método.  
  
 Para obtener un ejemplo de una clase que hereda la <xref:System.Web.SessionState.SessionIDManager> clase e invalida el <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> y <xref:System.Web.SessionState.SessionIDManager.Validate%2A> métodos, vea el <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSessionID">
      <MemberSignature Language="C#" Value="public string GetSessionID (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetSessionID(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.GetSessionID(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSessionID (context As HttpContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetSessionID(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetSessionID : System.Web.HttpContext -&gt; string&#xA;override this.GetSessionID : System.Web.HttpContext -&gt; string" Usage="sessionIDManager.GetSessionID context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.GetSessionID(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">The current <see cref="T:System.Web.HttpContext" /> object that references server objects used to process HTTP requests (for example, the <see cref="P:System.Web.HttpContext.Request" /> and <see cref="P:System.Web.HttpContext.Response" /> properties).</param>
        <summary>Gets the session-identifier value from the current Web request.</summary>
        <returns>The current <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método no está pensado para ser llamado desde código de aplicación.  
  
 El <xref:System.Web.SessionState.SessionStateModule> llamadas el <xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A> método durante la <xref:System.Web.HttpApplication.AcquireRequestState> eventos para recuperar el <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> actual <xref:System.Web.HttpRequest>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">The length of the session-identifier value retrieved from the HTTP request exceeds the <see cref="P:System.Web.SessionState.SessionIDManager.SessionIDMaxLength" /> value.</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="sessionIDManager.Initialize " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.Initialize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initializes the <see cref="T:System.Web.SessionState.SessionIDManager" /> object with information from configuration files.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.SessionState.SessionIDManager.Initialize%2A> método lee los datos de configuración de sesión desde el [sessionState Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) elemento de configuración de los archivos de configuración.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeRequest">
      <MemberSignature Language="C#" Value="public bool InitializeRequest (System.Web.HttpContext context, bool suppressAutoDetectRedirect, out bool supportSessionIDReissue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InitializeRequest(class System.Web.HttpContext context, bool suppressAutoDetectRedirect, [out] bool&amp; supportSessionIDReissue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function InitializeRequest (context As HttpContext, suppressAutoDetectRedirect As Boolean, ByRef supportSessionIDReissue As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool InitializeRequest(System::Web::HttpContext ^ context, bool suppressAutoDetectRedirect, [Runtime::InteropServices::Out] bool % supportSessionIDReissue);" />
      <MemberSignature Language="F#" Value="abstract member InitializeRequest : System.Web.HttpContext * bool *  -&gt; bool&#xA;override this.InitializeRequest : System.Web.HttpContext * bool *  -&gt; bool" Usage="sessionIDManager.InitializeRequest (context, suppressAutoDetectRedirect, supportSessionIDReissue)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="suppressAutoDetectRedirect" Type="System.Boolean" />
        <Parameter Name="supportSessionIDReissue" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">The <see cref="T:System.Web.HttpContext" /> object that contains information about the current request.</param>
        <param name="suppressAutoDetectRedirect">
          <see langword="true" /> to redirect to determine cookie support; otherwise, <see langword="false" /> to suppress automatic redirection to determine cookie support.</param>
        <param name="supportSessionIDReissue">When this method returns, contains a Boolean that indicates whether the <see cref="T:System.Web.SessionState.SessionIDManager" /> object supports issuing new session IDs when the original ID is out of date. This parameter is passed uninitialized.</param>
        <summary>Performs per-request initialization of the <see cref="T:System.Web.SessionState.SessionIDManager" /> object.</summary>
        <returns>
          <see langword="true" /> to indicate the <see cref="T:System.Web.SessionState.SessionIDManager" /> object has done a redirect to determine cookie support; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando el `cookieless` atributo de la `sessionState` elemento está establecido en `AutoDetect`, la <xref:System.Web.SessionState.SessionIDManager> objeto le redirigirá a la misma ruta de acceso para determinar si el explorador conectado admite las cookies. Si el `suppressAutoDetectRedirect` parámetro es `false`, el servidor no llevará a cabo esta redirección.  
  
 El `supportSessionIDReissue` se devolverá el parámetro `false` si la solicitud está utilizando cookies para la identificación de sesión.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSessionID">
      <MemberSignature Language="C#" Value="public void RemoveSessionID (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveSessionID(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.RemoveSessionID(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveSessionID (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveSessionID(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member RemoveSessionID : System.Web.HttpContext -&gt; unit&#xA;override this.RemoveSessionID : System.Web.HttpContext -&gt; unit" Usage="sessionIDManager.RemoveSessionID context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.RemoveSessionID(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">The current <see cref="T:System.Web.HttpContext" /> object that references server objects used to process HTTP requests (for example, the <see cref="P:System.Web.HttpContext.Request" /> and <see cref="P:System.Web.HttpContext.Response" /> properties).</param>
        <summary>Deletes the session-identifier cookie from the HTTP response.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método no está pensado para ser llamado desde código de aplicación.  
  
 El <xref:System.Web.SessionState.SessionStateModule> llamadas el <xref:System.Web.SessionState.SessionIDManager.RemoveSessionID%2A> método durante la <xref:System.Web.HttpApplication.ReleaseRequestState> evento quite el identificador de sesión de la <xref:System.Web.HttpResponse.Cookies%2A> colección de la <xref:System.Web.HttpResponse> si una nueva sesión se creó pero no se ha utilizado.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveSessionID">
      <MemberSignature Language="C#" Value="public void SaveSessionID (System.Web.HttpContext context, string id, out bool redirected, out bool cookieAdded);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveSessionID(class System.Web.HttpContext context, string id, [out] bool&amp; redirected, [out] bool&amp; cookieAdded) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveSessionID (context As HttpContext, id As String, ByRef redirected As Boolean, ByRef cookieAdded As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SaveSessionID(System::Web::HttpContext ^ context, System::String ^ id, [Runtime::InteropServices::Out] bool % redirected, [Runtime::InteropServices::Out] bool % cookieAdded);" />
      <MemberSignature Language="F#" Value="abstract member SaveSessionID : System.Web.HttpContext * string *  *  -&gt; unit&#xA;override this.SaveSessionID : System.Web.HttpContext * string *  *  -&gt; unit" Usage="sessionIDManager.SaveSessionID (context, id, redirected, cookieAdded)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="redirected" Type="System.Boolean&amp;" RefType="out" />
        <Parameter Name="cookieAdded" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">The current <see cref="T:System.Web.HttpContext" /> object that references server objects used to process HTTP requests (for example, the <see cref="P:System.Web.HttpContext.Request" /> and <see cref="P:System.Web.HttpContext.Response" /> properties).</param>
        <param name="id">The session identifier.</param>
        <param name="redirected">When this method returns, contains a Boolean value that is <see langword="true" /> if the response is redirected to the current URL with the session identifier added to the URL; otherwise, <see langword="false" />.</param>
        <param name="cookieAdded">When this method returns, contains a Boolean value that is <see langword="true" /> if a cookie has been added to the HTTP response; otherwise, <see langword="false" />.</param>
        <summary>Saves a newly created session identifier to the HTTP response.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método no está pensado para ser llamado desde código de aplicación.  
  
 El <xref:System.Web.SessionState.SessionIDManager.SaveSessionID%2A> llama al método el <xref:System.Web.SessionState.SessionStateModule> objeto durante la <xref:System.Web.HttpApplication.AcquireRequestState> eventos. El <xref:System.Web.SessionState.SessionIDManager.SaveSessionID%2A> método almacena el identificador de sesión en la dirección URL (cuando se utiliza el estado de sesión sin cookies) o en una cookie de sesión expiran.  
  
 De forma predeterminada, el <xref:System.Web.SessionState.SessionIDManager> pone un identificador de sesión único en una cookie de sesión expiran y establece el `cookieAdded` parámetro `true`.  
  
 Para un estado de sesión sin cookies, el <xref:System.Web.SessionState.SessionIDManager> objeto inserta un identificador de sesión único en la dirección URL actual, redirige el explorador a la nueva dirección URL que incluye el identificador de sesión y, a continuación, Establece la `redirected` parámetro `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">The response has already been sent.  -or-  The session ID passed to this method failed validation.</exception>
      </Docs>
    </Member>
    <Member MemberName="SessionIDMaxLength">
      <MemberSignature Language="C#" Value="public static int SessionIDMaxLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 SessionIDMaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.SessionIDManager.SessionIDMaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SessionIDMaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int SessionIDMaxLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.SessionIDMaxLength : int" Usage="System.Web.SessionState.SessionIDManager.SessionIDMaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the maximum length of a valid session identifier.</summary>
        <value>La longitud máxima de un identificador de sesión válido.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La longitud máxima de un identificador de sesión es 80 caracteres.  
  
 Mientras que los identificadores de sesión creados por el <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> método son 24 caracteres, la longitud máxima de un identificador de sesión permitido por la <xref:System.Web.SessionState.SessionIDManager> clase es de 80 caracteres. Esto es especialmente importante si implementa un personalizado <xref:System.Web.SessionState.SessionIDManager>. El <xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A> método, que recupera los valores de identificador de la sesión actual <xref:System.Web.HttpRequest>, garantiza que los valores no supere los <xref:System.Web.SessionState.SessionIDManager.SessionIDMaxLength%2A> valor y que el identificador de sesión es una cadena de 24 caracteres que contiene solo los caracteres en minúsculas una a la z y los números de 0 a 5, mediante una llamada a la <xref:System.Web.SessionState.SessionIDManager.Validate%2A> método. Si implementa un personalizado <xref:System.Web.SessionState.SessionIDManager> clase que hereda la <xref:System.Web.SessionState.SessionIDManager> clase e invalida el <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> método pero no el <xref:System.Web.SessionState.SessionIDManager.Validate%2A> método, los valores de identificador de sesión personalizado deben cumplir las restricciones anteriores. Para obtener un ejemplo de cómo reemplazar el <xref:System.Web.SessionState.SessionIDManager> clase y la implementación de estos métodos, vea el ejemplo proporcionado para el <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual bool Validate (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Validate(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Validate (id As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Validate(System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member Validate : string -&gt; bool&#xA;override this.Validate : string -&gt; bool" Usage="sessionIDManager.Validate id" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.SessionState.ISessionIDManager.Validate(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">The session identifier to validate.</param>
        <summary>Gets a value indicating whether a session identifier is valid.</summary>
        <returns>
          <see langword="true" /> if the session identifier is valid; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método no está pensado para ser llamado desde código de aplicación.  
  
 El <xref:System.Web.SessionState.SessionIDManager.Validate%2A> método verifica que el proporcionado `id` es una cadena de 24 caracteres que consta de caracteres en minúsculas de una a la z y números de 0 a 5 y que la longitud máxima de la sesión de Id. de no supere los 80 caracteres.  
  
 El <xref:System.Web.SessionState.SessionIDManager.GetSessionID%2A> llamadas al método el <xref:System.Web.SessionState.SessionIDManager.Validate%2A> método al recuperar un identificador de sesión de una solicitud HTTP, para asegurarse de que el identificador de sesión proporcionado es el formato correcto.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una clase que hereda la <xref:System.Web.SessionState.SessionIDManager> clase e invalida el <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> y <xref:System.Web.SessionState.SessionIDManager.Validate%2A> métodos con los métodos que proporcionan y validar una <xref:System.Guid> como el <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>.  
  
 [!code-csharp[System.Web.SessionState.ISessionIDModule#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/CS/GuidSessionIDModule.cs#7)]
 [!code-vb[System.Web.SessionState.ISessionIDModule#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/VB/GuidSessionIDModule.vb#7)]  
  
 Para usar la clase personalizada que se muestra en este ejemplo, reemplace el `SessionID` módulo HTTP en el archivo Web.config con la clase personalizada, tal como se muestra en el ejemplo siguiente.  
  
```  
<httpModules>  
  <remove name="SessionID" />  
  <add name="SessionID"  
       type="Samples.AspNet.Session.GuidSessionIDManager" />  
</httpModules>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Puede proporcionar un identificador de sesión personalizado que va a usar el estado de sesión de ASP.NET mediante la creación de una clase que hereda la <see cref="T:System.Web.SessionState.SessionIDManager" /> clase e invalidar el <see cref="M:System.Web.SessionState.SessionIDManager.CreateSessionID(System.Web.HttpContext)" /> y <see cref="M:System.Web.SessionState.SessionIDManager.Validate(System.String)" /> métodos con su propia implementación personalizada. Incluso cuando se crea un identificador de sesión personalizado, el identificador de sesión está limitado a 80 caracteres por la <see cref="T:System.Web.SessionState.SessionIDManager" /> clase.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>