<Type Name="ISessionIDManager" FullName="System.Web.SessionState.ISessionIDManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="47778a68d7903b749e6edf6f445f7c2f1c055d80" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37602883" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ISessionIDManager" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISessionIDManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.ISessionIDManager" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISessionIDManager" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISessionIDManager" />
  <TypeSignature Language="F#" Value="type ISessionIDManager = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Define el contrato que debe implementar un administrador de identificador de estado de sesión personalizado.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.SessionState.ISessionIDManager> interfaz identifica los métodos que debe implementar para crear un administrador personalizado para los valores de identificador de sesión. Un <xref:System.Web.SessionState.ISessionIDManager> implementación de la interfaz crea y valida valores de identificador de sesión y administra el almacenamiento de un identificador de sesión en la respuesta HTTP, así como la recuperación de un valor de identificador de sesión de la solicitud HTTP. Habilitar el Administrador de Id. de sesión personalizado mediante la `sessionIDManagerType` atributo de la [sessionState Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) elemento de configuración.  
  
 Si su <xref:System.Web.SessionState.ISessionIDManager> implementación de la interfaz será compatible con los identificadores de sesión sin cookies, debe implementar una solución para enviar y recuperar los identificadores de sesión en la dirección URL, por ejemplo, un filtro ISAPI.  
  
 Si sólo desea proporcionar valores de identificador de sesión personalizado que va a utilizar el estado de sesión de ASP.NET, puede crear una clase que hereda la <xref:System.Web.SessionState.SessionIDManager> clase y reemplazar solo la <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> y <xref:System.Web.SessionState.SessionIDManager.Validate%2A> métodos con su propia implementación personalizada. Esto le permite proporcionar sus propios valores de identificador de sesión, al depender de la base de <xref:System.Web.SessionState.SessionIDManager> clase para almacenar los valores en la respuesta HTTP y recuperar los valores de la solicitud HTTP. Para obtener un ejemplo de cómo reemplazar el <xref:System.Web.SessionState.SessionIDManager> clase y la implementación de estos métodos, vea el ejemplo proporcionado para el <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> método de la <xref:System.Web.SessionState.SessionIDManager> clase.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra una clase que implementa un identificador de sesión basada en cookies manager.  
  
 [!code-csharp[System.Web.SessionState.ISessionIDModule#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/CS/isessionidmodulesnippets.cs#1)]
 [!code-vb[System.Web.SessionState.ISessionIDModule#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/VB/isessionidmodulesnippets.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateSessionID">
      <MemberSignature Language="C#" Value="public string CreateSessionID (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateSessionID(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.ISessionIDManager.CreateSessionID(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSessionID (context As HttpContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ CreateSessionID(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CreateSessionID : System.Web.HttpContext -&gt; string" Usage="iSessionIDManager.CreateSessionID context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">Objeto <see cref="T:System.Web.HttpContext" /> actual que hace referencia a los objetos de servidor utilizados para procesar solicitudes HTTP (por ejemplo, las propiedades <see cref="P:System.Web.HttpContext.Request" /> y <see cref="P:System.Web.HttpContext.Response" />).</param>
        <summary>Crea un identificador de sesión único.</summary>
        <returns>Identificador de sesión único.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A> método se usa para generar un identificador de sesión único que la <xref:System.Web.SessionState.SessionStateModule> objeto usará para identificar una sesión nueva. El valor devuelto por <xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A> debe ser único y debe contener caracteres válidos que pueden almacenarse en una solicitud y respuesta HTTP. Si es posible que el valor devuelto por la <xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A> implementación contiene caracteres que no son válidos en una solicitud o respuesta HTTP, debe usar el <xref:System.Web.HttpUtility.UrlEncode%2A> método para codificar el valor de identificador de sesión en su <xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A> (método) implementación y la <xref:System.Web.HttpUtility.UrlDecode%2A> método para descodificar el valor de identificador de sesión en su <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> implementación del método.  
  
   
  
## Examples  
 El siguiente ejemplo de código implementa la <xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A> método. El método crea un nuevo <xref:System.Guid> para usarse como un identificador de sesión.  
  
 [!code-csharp[System.Web.SessionState.ISessionIDModule#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/CS/isessionidmodulesnippets.cs#3)]
 [!code-vb[System.Web.SessionState.ISessionIDModule#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/VB/isessionidmodulesnippets.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSessionID">
      <MemberSignature Language="C#" Value="public string GetSessionID (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetSessionID(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.ISessionIDManager.GetSessionID(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSessionID (context As HttpContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetSessionID(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetSessionID : System.Web.HttpContext -&gt; string" Usage="iSessionIDManager.GetSessionID context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">Objeto <see cref="T:System.Web.HttpContext" /> actual que hace referencia a los objetos de servidor utilizados para procesar solicitudes HTTP (por ejemplo, las propiedades <see cref="P:System.Web.HttpContext.Request" /> y <see cref="P:System.Web.HttpContext.Response" />).</param>
        <summary>Obtiene el identificador de sesión a partir del contexto de la solicitud HTTP actual.</summary>
        <returns>El identificador de la sesión actual enviado con la solicitud HTTP.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> llama al método el <xref:System.Web.SessionState.SessionStateModule> durante el <xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=nameWithType> y <xref:System.Web.HttpApplication.EndRequest?displayProperty=nameWithType> eventos. Si no se puede recuperar un identificador de sesión válido de la solicitud HTTP, devolver `null`. Si el <xref:System.Web.SessionState.SessionStateModule> recibe `null` desde el <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> método, llamará el <xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A> método para obtener un identificador de sesión nuevo para una nueva sesión.  
  
 Si es posible que el valor devuelto por la <xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A> implementación contiene caracteres que no son válidos en una solicitud o respuesta HTTP, debe usar el <xref:System.Web.HttpUtility.UrlEncode%2A> método para codificar el valor de identificador de sesión en su <xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A> (método) implementación y la <xref:System.Web.HttpUtility.UrlDecode%2A> método para descodificar el valor de identificador de sesión en su <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> implementación del método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra parcialmente implementado <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> método. Si su administrador de Id. de sesión personalizada admite identificadores de sesión sin cookies, deberá implementar una solución para enviar y recuperar los identificadores de sesión en la dirección URL, por ejemplo, un filtro ISAPI.  
  
 [!code-csharp[System.Web.SessionState.ISessionIDModule#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/CS/isessionidmodulesnippets.cs#2)]
 [!code-vb[System.Web.SessionState.ISessionIDModule#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/VB/isessionidmodulesnippets.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.ISessionIDManager.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit" Usage="iSessionIDManager.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicializa el objeto <see cref="T:System.Web.SessionState.SessionIDManager" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Web.SessionState.ISessionIDManager.Initialize%2A> método para inicializar el <xref:System.Web.SessionState.ISessionIDManager> objeto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeRequest">
      <MemberSignature Language="C#" Value="public bool InitializeRequest (System.Web.HttpContext context, bool suppressAutoDetectRedirect, out bool supportSessionIDReissue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InitializeRequest(class System.Web.HttpContext context, bool suppressAutoDetectRedirect, [out] bool&amp; supportSessionIDReissue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.ISessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function InitializeRequest (context As HttpContext, suppressAutoDetectRedirect As Boolean, ByRef supportSessionIDReissue As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InitializeRequest(System::Web::HttpContext ^ context, bool suppressAutoDetectRedirect, [Runtime::InteropServices::Out] bool % supportSessionIDReissue);" />
      <MemberSignature Language="F#" Value="abstract member InitializeRequest : System.Web.HttpContext * bool *  -&gt; bool" Usage="iSessionIDManager.InitializeRequest (context, suppressAutoDetectRedirect, supportSessionIDReissue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="suppressAutoDetectRedirect" Type="System.Boolean" />
        <Parameter Name="supportSessionIDReissue" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">Objeto <see cref="T:System.Web.HttpContext" /> que contiene información sobre la solicitud actual.</param>
        <param name="suppressAutoDetectRedirect">Es <see langword="true" /> si el administrador de Id. de sesión necesita redirección para determinar si se admiten cookies; o bien, es <see langword="false" /> para suprimir el redireccionamiento automático para averiguar si se admiten cookies.</param>
        <param name="supportSessionIDReissue">Cuando este método finaliza, contiene un valor booleano que indica si el objeto <see cref="T:System.Web.SessionState.ISessionIDManager" /> admite la emisión de Id. de sesión nuevos cuando el Id. original caduca. Este parámetro se pasa sin inicializar.  La reutilización de Id. de sesión es adecuada cuando el Id. del estado de sesión está codificado en una dirección URL y existe la posibilidad de compartir o enviar por correo electrónico la dirección URL.  Si una implementación personalizada del estado de sesión organiza las cookies por ruta de acceso virtual, también se debe admitir el estado de sesión.</param>
        <summary>Realiza una inicialización a petición del objeto <see cref="T:System.Web.SessionState.SessionIDManager" />.</summary>
        <returns>Es <see langword="true" /> para indicar que la inicialización realizó un redirección; de lo contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.SessionState.ISessionIDManager.InitializeRequest%2A> se llama al método para cada solicitud que controla la <xref:System.Web.SessionState.ISessionIDManager> objeto. Use la <xref:System.Web.SessionState.ISessionIDManager.InitializeRequest%2A> método para inicializar los datos de cada solicitud para el <xref:System.Web.SessionState.SessionIDManager> objeto.  
  
 Cuando el `suppressAutoDetectRedirect` parámetro es `true`, el <xref:System.Web.SessionState.ISessionIDManager> objeto no debe usar el redireccionamiento para determinar si el explorador admite cookies.  
  
 El `supportSessionIDReissue` parámetro debe devolverse `false` si se usan cookies para la identificación de sesión; en caso contrario, devuelve `true` si su <xref:System.Web.SessionState.ISessionIDManager> implementación admite identificadores de sesión vuelve a emisora.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSessionID">
      <MemberSignature Language="C#" Value="public void RemoveSessionID (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveSessionID(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.ISessionIDManager.RemoveSessionID(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveSessionID (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveSessionID(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member RemoveSessionID : System.Web.HttpContext -&gt; unit" Usage="iSessionIDManager.RemoveSessionID context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">Objeto <see cref="T:System.Web.HttpContext" /> actual que hace referencia a los objetos de servidor utilizados para procesar solicitudes HTTP (por ejemplo, las propiedades <see cref="P:System.Web.HttpContext.Request" /> y <see cref="P:System.Web.HttpContext.Response" />).</param>
        <summary>Elimina el identificador de sesión de la cookie o de la dirección URL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.SessionState.SessionStateModule> llamadas la <xref:System.Web.SessionState.SessionIDManager.RemoveSessionID%2A> método durante la <xref:System.Web.HttpApplication.ReleaseRequestState?displayProperty=nameWithType> evento quite el identificador de sesión desde el <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType> colección si se creó una nueva sesión, pero no se ha usado.  
  
   
  
## Examples  
 El siguiente ejemplo de código implementa la <xref:System.Web.SessionState.ISessionIDManager.RemoveSessionID%2A> método.  
  
 [!code-csharp[System.Web.SessionState.ISessionIDModule#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/CS/isessionidmodulesnippets.cs#4)]
 [!code-vb[System.Web.SessionState.ISessionIDModule#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/VB/isessionidmodulesnippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveSessionID">
      <MemberSignature Language="C#" Value="public void SaveSessionID (System.Web.HttpContext context, string id, out bool redirected, out bool cookieAdded);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveSessionID(class System.Web.HttpContext context, string id, [out] bool&amp; redirected, [out] bool&amp; cookieAdded) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.ISessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveSessionID (context As HttpContext, id As String, ByRef redirected As Boolean, ByRef cookieAdded As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveSessionID(System::Web::HttpContext ^ context, System::String ^ id, [Runtime::InteropServices::Out] bool % redirected, [Runtime::InteropServices::Out] bool % cookieAdded);" />
      <MemberSignature Language="F#" Value="abstract member SaveSessionID : System.Web.HttpContext * string *  *  -&gt; unit" Usage="iSessionIDManager.SaveSessionID (context, id, redirected, cookieAdded)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="redirected" Type="System.Boolean&amp;" RefType="out" />
        <Parameter Name="cookieAdded" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">Objeto <see cref="T:System.Web.HttpContext" /> actual que hace referencia a los objetos de servidor utilizados para procesar solicitudes HTTP (por ejemplo, las propiedades <see cref="P:System.Web.HttpContext.Request" /> y <see cref="P:System.Web.HttpContext.Response" />).</param>
        <param name="id">El identificador de la sesión.</param>
        <param name="redirected">Cuando este método finaliza, contiene un valor booleano que es <see langword="true" /> si la respuesta se redirige a la dirección URL actual con el identificador de sesión agregado a la URL; de lo contrario, es <see langword="false" />.</param>
        <param name="cookieAdded">Cuando este método finaliza, contiene un valor booleano que es <see langword="true" /> si se ha agregado una cookie a la respuesta HTTP; de lo contrario, es <see langword="false" />.</param>
        <summary>Guarda un identificador de sesión recientemente creado en la respuesta HTTP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A> llama al método el <xref:System.Web.SessionState.SessionStateModule> objeto durante la <xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=nameWithType> eventos. El <xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A> método almacena el identificador de sesión en la dirección URL (cuando se utiliza el estado de sesión sin cookies) o en una cookie de sesión que no caduca.  
  
 Si es posible que el valor devuelto desde su <xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A> implementación contiene caracteres que no son válidos en una solicitud o respuesta HTTP, debe usar el <xref:System.Web.HttpUtility.UrlEncode%2A> método para codificar el valor de identificador de sesión en su <xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A> (método) implementación y la <xref:System.Web.HttpUtility.UrlDecode%2A> método para descodificar el valor de identificador de sesión en su <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> implementación del método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra parcialmente implementado <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> método. Si su administrador de Id. de sesión personalizada admite identificadores de sesión sin cookies, deberá implementar una solución para enviar y recuperar los identificadores de sesión en la dirección URL, por ejemplo, un filtro ISAPI.  
  
 [!code-csharp[System.Web.SessionState.ISessionIDModule#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/CS/isessionidmodulesnippets.cs#5)]
 [!code-vb[System.Web.SessionState.ISessionIDModule#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/VB/isessionidmodulesnippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public bool Validate (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Validate(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.ISessionIDManager.Validate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Validate (id As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Validate(System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member Validate : string -&gt; bool" Usage="iSessionIDManager.Validate id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">Identificador de sesión que se va a validar.</param>
        <summary>Confirma que el identificador de sesión proporcionado es válido.</summary>
        <returns>Es <see langword="true" /> si el identificador de sesión es válido; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.SessionState.ISessionIDManager.Validate%2A> método comprueba que el proporcionado `id` es un identificador de sesión válido.  
  
 Su <xref:System.Web.SessionState.ISessionIDManager> implementación debe llamar a la <xref:System.Web.SessionState.ISessionIDManager.Validate%2A> método desde el <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> método al recuperar un identificador de sesión de una solicitud HTTP para asegurarse de que el identificador de sesión proporcionado es el formato correcto.  
  
   
  
## Examples  
 El siguiente ejemplo de código implementa la <xref:System.Web.SessionState.ISessionIDManager.Validate%2A> método y se asegura de que el valor de identificador de sesión es válido <xref:System.Guid>.  
  
 [!code-csharp[System.Web.SessionState.ISessionIDModule#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/CS/isessionidmodulesnippets.cs#6)]
 [!code-vb[System.Web.SessionState.ISessionIDModule#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.ISessionIDModule/VB/isessionidmodulesnippets.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>