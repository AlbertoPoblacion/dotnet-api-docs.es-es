<Type Name="SessionStateUtility" FullName="System.Web.SessionState.SessionStateUtility">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8d5ac26451a467aba6ee120cd069181a2b2e19ab" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36394645" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class SessionStateUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SessionStateUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.SessionStateUtility" />
  <TypeSignature Language="VB.NET" Value="Public Class SessionStateUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionStateUtility abstract sealed" />
  <TypeSignature Language="F#" Value="type SessionStateUtility = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides helper methods used by session-state modules and session-state store providers to manage session information for an ASP.NET application. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Web.SessionState.SessionStateUtility> clase proporciona métodos auxiliares estáticos utilizados por un módulo de estado de sesión o un proveedor de almacén de estado de sesión. Los desarrolladores de aplicaciones no necesitará llamar a estos métodos desde el código.  
  
 La tabla siguiente describen las formas en que el módulo de estado de sesión y el proveedor de almacén de estado de sesión de utilizan los métodos.  
  
|Método|Usar|  
|------------|---------|  
|Método <xref:System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext%2A>|Puede utilizarse por los módulos de estado de sesión personalizados para recuperar la información de sesión de una sesión existente o para crear información de sesión de una sesión nueva.|  
|Método <xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A>|Llamado por el módulo de estado de sesión para agregar los datos de sesión a la corriente <xref:System.Web.HttpContext> y que esté disponible para código de la aplicación a través de la <xref:System.Web.HttpContext.Session%2A> propiedad.|  
|Método <xref:System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext%2A>|Llamado por el módulo de estado de sesión durante el <xref:System.Web.HttpApplication.ReleaseRequestState> o <xref:System.Web.HttpApplication.EndRequest> eventos al final de una solicitud para borrar los datos de la sesión actual <xref:System.Web.HttpContext>.|  
|Método <xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A>|Llamado por el módulo de estado de sesión para obtener una referencia a la <xref:System.Web.SessionState.HttpSessionState.StaticObjects%2A> colección basada en objetos definidos en el archivo Global.asax. El <xref:System.Web.HttpStaticObjectsCollection> colección devuelta se incluye con los datos de sesión agregados al actual <xref:System.Web.HttpContext>.|  
  
 Datos de la sesión se pasa a y recupera desde actual <xref:System.Web.HttpContext> como un <xref:System.Web.SessionState.HttpSessionStateContainer> objeto o cualquier implementación válida de la <xref:System.Web.SessionState.IHttpSessionState> interfaz.  
  
 Para obtener información acerca de cómo implementar un proveedor de almacén de estado de sesión, vea [implementar un proveedor de almacén de estado de sesión](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una implementación de módulo de estado de sesión personalizado que almacena la información de sesión en la memoria con un <xref:System.Collections.Hashtable>. El módulo utiliza el <xref:System.Web.SessionState.SessionStateUtility> clase para hacer referencia a la actual <xref:System.Web.HttpContext> y <xref:System.Web.SessionState.SessionIDManager>, recuperar actual <xref:System.Web.HttpStaticObjectsCollection>y generar el **Session_OnEnd** eventos definidos en el archivo Global.asax para ASP.NET aplicación. Esta aplicación no impide que las solicitudes simultáneas de Web utilizan el mismo identificador de sesión.  
  
 [!code-csharp[System.Web.SessionState.SessionStateUtility#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.SessionStateUtility/CS/mysessionstatemodule.cs#1)]
 [!code-vb[System.Web.SessionState.SessionStateUtility#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.SessionStateUtility/VB/mysessionstatemodule.vb#1)]  
  
 Para utilizar este módulo de estado de sesión personalizado en una aplicación ASP.NET, puede reemplazar el existente <xref:System.Web.SessionState.SessionStateModule> hacer referencia en el archivo Web.config, tal y como se muestra en el ejemplo siguiente.  
  
```  
<configuration>  
  <system.web>  
    <httpModules>  
      <remove name="Session" />  
      <add name="Session"  
      type="Samples.AspNet.SessionState.MySessionStateModule" />  
    </httpModules>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddHttpSessionStateToContext">
      <MemberSignature Language="C#" Value="public static void AddHttpSessionStateToContext (System.Web.HttpContext context, System.Web.SessionState.IHttpSessionState container);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddHttpSessionStateToContext(class System.Web.HttpContext context, class System.Web.SessionState.IHttpSessionState container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext(System.Web.HttpContext,System.Web.SessionState.IHttpSessionState)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddHttpSessionStateToContext (context As HttpContext, container As IHttpSessionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddHttpSessionStateToContext(System::Web::HttpContext ^ context, System::Web::SessionState::IHttpSessionState ^ container);" />
      <MemberSignature Language="F#" Value="static member AddHttpSessionStateToContext : System.Web.HttpContext * System.Web.SessionState.IHttpSessionState -&gt; unit" Usage="System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext (context, container)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="container" Type="System.Web.SessionState.IHttpSessionState" />
      </Parameters>
      <Docs>
        <param name="context">The <see cref="T:System.Web.HttpContext" /> object to which to add the <see cref="T:System.Web.SessionState.HttpSessionState" /> object.</param>
        <param name="container">The <see cref="T:System.Web.SessionState.IHttpSessionState" /> implementation instance to add to the specified HTTP context.</param>
        <summary>Applies the session data to the context for the current request.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A> método usa un módulo de estado de sesión para aplicar los datos de la sesión a la solicitud actual. Esto se produce durante la <xref:System.Web.HttpApplication.AcquireRequestState> evento al principio de una solicitud. Datos de la sesión de la solicitud actual se recuperan para una sesión existente o crea para una nueva sesión. Los datos de sesión, a continuación, se encapsulan en un <xref:System.Web.SessionState.IHttpSessionState> instancia de la implementación, que se pasa a la <xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A> método junto con el actual <xref:System.Web.HttpContext>. Los datos de sesión proporcionado, a continuación, estará disponibles para el código de la aplicación a través de la <xref:System.Web.HttpContext.Session%2A> propiedad del contexto actual.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el controlador de la <xref:System.Web.HttpApplication.AcquireRequestState> eventos en un módulo de estado de sesión personalizado. El módulo personalizado recupera información de sesión existente o crea información de sesión nueva y utiliza el <xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A> método para agregarlo a la <xref:System.Web.HttpContext> de la solicitud actual. Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Web.SessionState.SessionStateUtility> clase.  
  
 [!code-csharp[System.Web.SessionState.SessionStateUtility#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.SessionStateUtility/CS/mysessionstatemodule.cs#4)]
 [!code-vb[System.Web.SessionState.SessionStateUtility#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.SessionStateUtility/VB/mysessionstatemodule.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">An <see cref="T:System.Web.SessionState.HttpSessionState" /> object for the current session has already been added to the specified <paramref name="context" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHttpSessionStateFromContext">
      <MemberSignature Language="C#" Value="public static System.Web.SessionState.IHttpSessionState GetHttpSessionStateFromContext (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.SessionState.IHttpSessionState GetHttpSessionStateFromContext(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHttpSessionStateFromContext (context As HttpContext) As IHttpSessionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::SessionState::IHttpSessionState ^ GetHttpSessionStateFromContext(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="static member GetHttpSessionStateFromContext : System.Web.HttpContext -&gt; System.Web.SessionState.IHttpSessionState" Usage="System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.IHttpSessionState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">The <see cref="T:System.Web.HttpContext" /> from which to retrieve session data.</param>
        <summary>Retrieves session data from the context for the current request.</summary>
        <returns>An <see cref="T:System.Web.SessionState.IHttpSessionState" /> implementation instance populated with session data from the current request.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext%2A> método se puede utilizar un módulo de estado de sesión para recuperar datos de la sesión de la solicitud actual. Esto se produce durante la <xref:System.Web.HttpApplication.ReleaseRequestState> eventos al final de una solicitud. Los datos de sesión devuelto, a continuación, se pueden escribir en el almacén de datos de sesión. Si se ha abandonado la sesión, se pueden quitar los datos de sesión desde el almacén de datos y <xref:System.Web.HttpContext>y el **Session_OnEnd** se puede ejecutar el evento.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el controlador de la <xref:System.Web.HttpApplication.ReleaseRequestState> eventos en un módulo de estado de sesión personalizado. El módulo recupera los datos de sesión de la <xref:System.Web.HttpContext> para la solicitud actual mediante la <xref:System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext%2A> método. Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Web.SessionState.SessionStateUtility> clase.  
  
 [!code-csharp[System.Web.SessionState.SessionStateUtility#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.SessionStateUtility/CS/mysessionstatemodule.cs#5)]
 [!code-vb[System.Web.SessionState.SessionStateUtility#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.SessionStateUtility/VB/mysessionstatemodule.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Puede usar el <see cref="M:System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext(System.Web.HttpContext)" /> método para quitar datos de la sesión desde el almacén interno y el <see cref="M:System.Web.SessionState.SessionStateUtility.RaiseSessionEnd(System.Web.SessionState.IHttpSessionState,System.Object,System.EventArgs)" /> método para generar el <see langword="Session_OnEnd" /> eventos.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetSessionStaticObjects">
      <MemberSignature Language="C#" Value="public static System.Web.HttpStaticObjectsCollection GetSessionStaticObjects (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.HttpStaticObjectsCollection GetSessionStaticObjects(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSessionStaticObjects (context As HttpContext) As HttpStaticObjectsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::HttpStaticObjectsCollection ^ GetSessionStaticObjects(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="static member GetSessionStaticObjects : System.Web.HttpContext -&gt; System.Web.HttpStaticObjectsCollection" Usage="System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpStaticObjectsCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">The <see cref="T:System.Web.HttpContext" /> from which to get the static objects collection.</param>
        <summary>Gets a reference to the static objects collection for the specified context.</summary>
        <returns>An <see cref="T:System.Web.HttpStaticObjectsCollection" /> collection populated with the <see cref="P:System.Web.SessionState.HttpSessionState.StaticObjects" /> property value for the specified <see cref="T:System.Web.HttpContext" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A> método se utiliza para recuperar la colección de objetos estáticos definidos en el archivo Global.asax de la aplicación ASP.NET. Una implementación de un módulo de estado de sesión proporcionará el valor devuelto <xref:System.Web.HttpStaticObjectsCollection> colección a la <xref:System.Web.SessionState.IHttpSessionState> instancia de implementación que se agrega al contexto actual mediante el <xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A> método.  
  
 A <xref:System.Web.SessionState.SessionStateStoreProviderBase> también se puede usar el <xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A> método al crear un <xref:System.Web.SessionState.SessionStateStoreData> objeto.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el controlador de la <xref:System.Web.HttpApplication.AcquireRequestState> eventos en un módulo de estado de sesión personalizado. El módulo recupera información de sesión existente o crea información de sesión nueva, incluida la <xref:System.Web.HttpStaticObjectsCollection> colección devuelta desde el <xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A> método y lo agrega a la <xref:System.Web.HttpContext> de la solicitud actual. Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Web.SessionState.SessionStateUtility> clase.  
  
 [!code-csharp[System.Web.SessionState.SessionStateUtility#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.SessionStateUtility/CS/mysessionstatemodule.cs#4)]
 [!code-vb[System.Web.SessionState.SessionStateUtility#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.SessionStateUtility/VB/mysessionstatemodule.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSessionStateReadOnly">
      <MemberSignature Language="C#" Value="public static bool IsSessionStateReadOnly (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSessionStateReadOnly(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateUtility.IsSessionStateReadOnly(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSessionStateReadOnly (context As HttpContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSessionStateReadOnly(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="static member IsSessionStateReadOnly : System.Web.HttpContext -&gt; bool" Usage="System.Web.SessionState.SessionStateUtility.IsSessionStateReadOnly context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">Specifies the <see cref="T:System.Web.HttpContext" /> to check.</param>
        <summary>Gets a value which indicates whether the session state is read-only for the specified <see cref="T:System.Web.HttpContext" />.</summary>
        <returns>
          <see langword="true" /> if the session state is read-only; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSessionStateRequired">
      <MemberSignature Language="C#" Value="public static bool IsSessionStateRequired (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSessionStateRequired(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateUtility.IsSessionStateRequired(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSessionStateRequired (context As HttpContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSessionStateRequired(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="static member IsSessionStateRequired : System.Web.HttpContext -&gt; bool" Usage="System.Web.SessionState.SessionStateUtility.IsSessionStateRequired context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">Specifies the <see cref="T:System.Web.HttpContext" /> to check.</param>
        <summary>Gets a value which indicates whether the session state is required for the specified <see cref="T:System.Web.HttpContext" />.</summary>
        <returns>
          <see langword="true" /> if the session state is required; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseSessionEnd">
      <MemberSignature Language="C#" Value="public static void RaiseSessionEnd (System.Web.SessionState.IHttpSessionState session, object eventSource, EventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RaiseSessionEnd(class System.Web.SessionState.IHttpSessionState session, object eventSource, class System.EventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateUtility.RaiseSessionEnd(System.Web.SessionState.IHttpSessionState,System.Object,System.EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RaiseSessionEnd(System::Web::SessionState::IHttpSessionState ^ session, System::Object ^ eventSource, EventArgs ^ eventArgs);" />
      <MemberSignature Language="F#" Value="static member RaiseSessionEnd : System.Web.SessionState.IHttpSessionState * obj * EventArgs -&gt; unit" Usage="System.Web.SessionState.SessionStateUtility.RaiseSessionEnd (session, eventSource, eventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="System.Web.SessionState.IHttpSessionState" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventArgs" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="session">The <see cref="T:System.Web.SessionState.IHttpSessionState" /> implementation instance for the session that has ended.</param>
        <param name="eventSource">The event source object to supply to the <see langword="Session_OnEnd" /> event.</param>
        <param name="eventArgs">The <see cref="T:System.EventArgs" /> object to supply to the <see langword="Session_OnEnd" /> event.</param>
        <summary>Executes the **Session_OnEnd** event defined in the Global.asax file for the ASP.NET application.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.SessionState.SessionStateUtility.RaiseSessionEnd%2A> método se usa un módulo de estado de sesión para ejecutar la **Session_OnEnd** eventos definidos en el archivo Global.asax de una aplicación ASP.NET. Un módulo de estado de sesión llamará el <xref:System.Web.SessionState.SessionStateUtility.RaiseSessionEnd%2A> método cuando se ha abandonado una sesión, o si la sesión expira.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el controlador de la <xref:System.Web.HttpApplication.ReleaseRequestState> eventos en un módulo de estado de sesión personalizado. Si se ha abandonado la sesión, el módulo se ejecuta el **Session_OnEnd** eventos definidos en el archivo Global.asax de la aplicación mediante el <xref:System.Web.SessionState.SessionStateUtility.RaiseSessionEnd%2A> método. Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Web.SessionState.SessionStateUtility> clase.  
  
 [!code-csharp[System.Web.SessionState.SessionStateUtility#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.SessionStateUtility/CS/mysessionstatemodule.cs#5)]
 [!code-vb[System.Web.SessionState.SessionStateUtility#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.SessionStateUtility/VB/mysessionstatemodule.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveHttpSessionStateFromContext">
      <MemberSignature Language="C#" Value="public static void RemoveHttpSessionStateFromContext (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveHttpSessionStateFromContext(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveHttpSessionStateFromContext (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveHttpSessionStateFromContext(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="static member RemoveHttpSessionStateFromContext : System.Web.HttpContext -&gt; unit" Usage="System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">The <see cref="T:System.Web.HttpContext" /> from which to remove session data.</param>
        <summary>Removes session data from the specified context.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext%2A> método borra los datos de sesión de los especificados <xref:System.Web.HttpContext>. Un módulo de estado de sesión llamará el <xref:System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext%2A> método en el controlador para el <xref:System.Web.HttpApplication.ReleaseRequestState> eventos.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el controlador de la <xref:System.Web.HttpApplication.ReleaseRequestState> eventos en un módulo de estado de sesión personalizado. El controlador de eventos quita los datos de la sesión actual <xref:System.Web.HttpContext>. Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Web.SessionState.SessionStateUtility> clase.  
  
 [!code-csharp[System.Web.SessionState.SessionStateUtility#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.SessionState.SessionStateUtility/CS/mysessionstatemodule.cs#5)]
 [!code-vb[System.Web.SessionState.SessionStateUtility#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.SessionState.SessionStateUtility/VB/mysessionstatemodule.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializationSurrogateSelector">
      <MemberSignature Language="C#" Value="public static System.Runtime.Serialization.ISurrogateSelector SerializationSurrogateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Runtime.Serialization.ISurrogateSelector SerializationSurrogateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.SessionStateUtility.SerializationSurrogateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property SerializationSurrogateSelector As ISurrogateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Runtime::Serialization::ISurrogateSelector ^ SerializationSurrogateSelector { System::Runtime::Serialization::ISurrogateSelector ^ get(); void set(System::Runtime::Serialization::ISurrogateSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SerializationSurrogateSelector : System.Runtime.Serialization.ISurrogateSelector with get, set" Usage="System.Web.SessionState.SessionStateUtility.SerializationSurrogateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.ISurrogateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a serialization surrogate selector that is used for session serialization customization.</summary>
        <value>Un selector de suplentes de serialización.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>