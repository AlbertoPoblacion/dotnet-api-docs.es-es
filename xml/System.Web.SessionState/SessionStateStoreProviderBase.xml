<Type Name="SessionStateStoreProviderBase" FullName="System.Web.SessionState.SessionStateStoreProviderBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1841436a6479c0b1c33c26794c28ee86cb78e78f" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51936020" /></Metadata><TypeSignature Language="C#" Value="public abstract class SessionStateStoreProviderBase : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SessionStateStoreProviderBase extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.SessionStateStoreProviderBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SessionStateStoreProviderBase&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionStateStoreProviderBase abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type SessionStateStoreProviderBase = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Define los miembros necesarios de un proveedor de estado de sesión para un almacén de datos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Estado de sesión ASP.NET lee y escribe el proveedor de almacén de datos desde y hacia un almacén de datos con un estado de sesión de la sesión. Un proveedor de almacén de estado de sesión es una clase que hereda la <xref:System.Web.SessionState.SessionStateStoreProviderBase> clase abstracta e invalida sus miembros con implementaciones específicas de los datos de almacén. El proveedor del almacén de estado de sesión llama a la <xref:System.Web.SessionState.SessionStateModule> clase durante el procesamiento de una página ASP.NET para comunicarse con el almacén de datos para el almacenamiento y recuperación de las variables de sesión y la información de sesión relacionada, como el valor de tiempo de espera.  
  
 Datos de la sesión dentro de cada aplicación de ASP.NET se almacenan por separado para cada <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> propiedad. Las aplicaciones de ASP.NET no comparten datos de la sesión.  
  
 Puede especificar un personalizado <xref:System.Web.SessionState.SessionStateStoreProviderBase> implementación para una aplicación ASP.NET estableciendo el `mode` atributo de la `sessionState` elemento de configuración a <xref:System.Web.SessionState.SessionStateMode.Custom> y `customProvider` atributo por el nombre del proveedor personalizado, como se muestra en el ejemplo de este tema.  
  
## <a name="locking-session-store-data"></a>Bloqueo de datos de sesión Store  
 Dado que las aplicaciones ASP.NET son multiproceso para poder responder a solicitudes simultáneas, es posible que las solicitudes simultáneas intenten obtener acceso a la misma información de sesión. Considere un escenario donde varios fotogramas en un conjunto de marcos tener acceso a la misma aplicación. Las solicitudes independientes para cada fotograma en el conjunto de marcos se pueden ejecutar en el servidor Web simultáneamente en diferentes subprocesos. Si las páginas ASP.NET para cada origen del marco acceder a las variables de estado de sesión, a continuación, podría tener acceso al almacén de sesión de forma simultánea de varios subprocesos.  
  
 Para evitar conflictos de datos en el almacén de sesión y un comportamiento inesperado del estado de sesión, el <xref:System.Web.SessionState.SessionStateModule> y <xref:System.Web.SessionState.SessionStateStoreProviderBase> clases incluyen la funcionalidad de bloqueo que bloquea exclusivamente el elemento del almacén de sesión para una sesión determinada para la duración de la ejecución de una página ASP.NET. Tenga en cuenta que incluso si la <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> atributo está marcado como `ReadOnly`, otras páginas ASP.NET en la misma aplicación podrían ser capaces de escribir en el almacén de la sesión, de modo que una solicitud para la sesión de solo lectura de datos del almacén todavía podrían acabar esperando los datos para ser bloqueados liberado.  
  
 Se establece un bloqueo en los datos de almacén de sesiones al principio de la solicitud, en la llamada a la <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> método. Cuando se completa la solicitud, el bloqueo se libera durante la llamada a la <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> método.  
  
 Si el <xref:System.Web.SessionState.SessionStateModule> objeto encuentra datos de sesión bloqueado durante la llamada a la <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> o <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> método, volverá a solicitar la los datos de sesión a intervalos de medio segundo hasta que se libere el bloqueo o la cantidad de tiempo que el se ha bloqueado los datos de la sesión supera el valor de la <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> propiedad. Si se supera el tiempo de espera de ejecución, el <xref:System.Web.SessionState.SessionStateModule> objeto llamará el <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> método para liberar los datos de almacén de sesiones y solicitar los datos de almacén de la sesión en ese momento.  
  
 Porque bloqueados del almacén de la sesión de datos que se haya liberado mediante una llamada a la <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> método en un subproceso independiente antes de llamar a la <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> método para la respuesta actual, se realiza un intento para establecer y liberar los datos del almacén de estado de sesión que tienen ya se han liberado y modificado en otra sesión. Para evitar esta situación, el <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> y <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> métodos devuelven un identificador de bloqueo. Este identificador de bloqueo debe incluirse con cada solicitud para modificar los datos de almacén de sesiones bloqueadas. Almacén de la sesión se modifican los datos solo si el identificador de bloqueo en el almacén de datos coincide con el identificador de bloqueo proporcionado por el <xref:System.Web.SessionState.SessionStateModule>.  
  
## <a name="deleting-expired-session-store-data"></a>Eliminación de datos Store de sesión expirada  
 Cuando el <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> se llama al método en una sesión determinada, se eliminan los datos de esa sesión desde el almacén de datos mediante el <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> método; en caso contrario, los datos permanecerán en el almacén de datos de sesión para futuras solicitudes de servidor para la sesión. Es hasta el <xref:System.Web.SessionState.SessionStateStoreProviderBase> implementación para eliminar datos de sesión expirada.  
  
   
  
## Examples  
 Para obtener un ejemplo de una implementación de proveedor de almacén de estado de sesión, vea [implementar un proveedor de estado de sesión Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 El ejemplo de código siguiente muestra el archivo Web.config para una aplicación ASP.NET que está configurado para usar un proveedor de almacén de estado de sesión personalizada.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="OdbcSessionServices" connectionString="DSN=SessionState;" />  
  </connectionStrings>  
  
  <system.web>  
    <sessionState   
      mode="Custom"  
      customProvider="OdbcSessionProvider">  
      <providers>  
        <add name="OdbcSessionProvider"  
             type="Samples.AspNet.Session.OdbcSessionStateStore"  
             connectionStringName="OdbcSessionServices" />  
      </providers>  
    </sessionState>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Información general del estado de sesión de ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SessionStateStoreProviderBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SessionStateStoreProviderBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No es necesario implementar un constructor para una clase que hereda la <xref:System.Web.SessionState.SessionStateStoreProviderBase> clase abstracta. Los valores de inicialización para un <xref:System.Web.SessionState.SessionStateStoreProviderBase> implementación se pasan a la <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> implementación del método.  
  
   
  
## Examples  
 Para obtener un ejemplo de una implementación de proveedor de almacén de estado de sesión, vea [implementar un proveedor de estado de sesión Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Información general del estado de sesión de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateNewStoreData">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData CreateNewStoreData (System.Web.HttpContext context, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData CreateNewStoreData(class System.Web.HttpContext context, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateNewStoreData (context As HttpContext, timeout As Integer) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ CreateNewStoreData(System::Web::HttpContext ^ context, int timeout);" />
      <MemberSignature Language="F#" Value="abstract member CreateNewStoreData : System.Web.HttpContext * int -&gt; System.Web.SessionState.SessionStateStoreData" Usage="sessionStateStoreProviderBase.CreateNewStoreData (context, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">Objeto <see cref="T:System.Web.HttpContext" /> de la solicitud actual.</param>
        <param name="timeout">Valor de <see cref="P:System.Web.SessionState.HttpSessionState.Timeout" /> de estado de sesión del nuevo objeto <see cref="T:System.Web.SessionState.SessionStateStoreData" />.</param>
        <summary>Crea un nuevo objeto <see cref="T:System.Web.SessionState.SessionStateStoreData" /> que se va a utilizar para la solicitud actual.</summary>
        <returns>Nuevo objeto <see cref="T:System.Web.SessionState.SessionStateStoreData" /> de la solicitud actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.SessionState.SessionStateModule> de objeto llama el <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> método al principio de una solicitud para una página ASP.NET, durante la <xref:System.Web.HttpApplication.AcquireRequestState> eventos. El <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> se llama al método si:  
  
-   la solicitud entrante no tenga ningún identificador de sesión, o  
  
-   la solicitud entrante tenga un identificador de sesión, pero no se encuentra la sesión en el almacén de datos.  
  
 El <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> crea un nuevo método <xref:System.Web.SessionState.SessionStateStoreData> objeto con un valor vacío <xref:System.Web.SessionState.ISessionStateItemCollection> objeto, un <xref:System.Web.HttpStaticObjectsCollection> colección y especificado `timeout` valor. El <xref:System.Web.HttpStaticObjectsCollection> colección para la aplicación ASP.NET se puede recuperar mediante el <xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A> método.  
  
   
  
## Examples  
 Para obtener un ejemplo de una implementación de proveedor de almacén de estado de sesión, vea [implementar un proveedor de estado de sesión Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Información general del estado de sesión de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateUninitializedItem">
      <MemberSignature Language="C#" Value="public abstract void CreateUninitializedItem (System.Web.HttpContext context, string id, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateUninitializedItem(class System.Web.HttpContext context, string id, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CreateUninitializedItem (context As HttpContext, id As String, timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CreateUninitializedItem(System::Web::HttpContext ^ context, System::String ^ id, int timeout);" />
      <MemberSignature Language="F#" Value="abstract member CreateUninitializedItem : System.Web.HttpContext * string * int -&gt; unit" Usage="sessionStateStoreProviderBase.CreateUninitializedItem (context, id, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">Objeto <see cref="T:System.Web.HttpContext" /> de la solicitud actual.</param>
        <param name="id">Objeto <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" /> de la solicitud actual.</param>
        <param name="timeout">Propiedad <see cref="P:System.Web.SessionState.HttpSessionState.Timeout" /> de sesión de la solicitud actual.</param>
        <summary>Agrega un nuevo elemento de estado de sesión al almacén de datos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> método se utiliza con las sesiones cuando la `cookieless` y `regenerateExpiredSessionId` atributos son ambos `true`. Tener la `regenerateExpiredSessionId attribute` establecido en `true` hace que el <xref:System.Web.SessionState.SessionStateModule> objeto para generar un nuevo <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valor cuando expiradas <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> encontró un valor.  
  
 El proceso de generar un nuevo <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valor requiere que se redirige al explorador a una dirección URL que contiene el recién generado <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valor. El <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> se llama al método durante la solicitud inicial que contiene un expiradas <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valor. Después de la <xref:System.Web.SessionState.SessionStateModule> adquiere un nuevo objeto <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valor para reemplazar el valor caducado, llama a la <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> método para agregar una entrada sin inicializar en el almacén de datos de estado de sesión. A continuación, se redirige el explorador a la dirección URL que contiene el recién generado <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valor. La existencia de la entrada no inicializada en el almacén de datos de sesión asegura de que la solicitud redirigida que incluye recién generado <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> valor no se confunda con una solicitud de una sesión caducada y, en su lugar, trata como una nueva sesión.  
  
 La entrada no inicializada en el almacén de datos de sesión está asociada con el recién generado <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> de valor y contiene solo valores predeterminados, incluyendo una fecha de expiración y la hora y un valor que corresponde a la `actionFlags` parámetro de la <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>y <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> métodos. La entrada sin inicializar en el almacén de estado de sesión debe incluir un `actionFlags` valor igual a la <xref:System.Web.SessionState.SessionStateActions.InitializeItem> valor de enumeración. Este valor se pasa a la <xref:System.Web.SessionState.SessionStateModule> objeto por el <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> y <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> métodos e informa a la <xref:System.Web.SessionState.SessionStateModule> sesión sin inicializar el objeto de la sesión actual es un nuevo pero. El <xref:System.Web.SessionState.SessionStateModule> objeto, a continuación, inicializará la nueva sesión y generar el `Session_OnStart` eventos.  
  
 Para obtener más información acerca de las sesiones sin cookies, consulte el <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> propiedad.  
  
   
  
## Examples  
 Para obtener un ejemplo de una implementación de proveedor de almacén de estado de sesión, vea [implementar un proveedor de estado de sesión Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Información general del estado de sesión de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public abstract void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit" Usage="sessionStateStoreProviderBase.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libera todos los recursos utilizados por la implementación de <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.SessionState.SessionStateStoreProviderBase.Dispose%2A?displayProperty=nameWithType> método se llama cuando el <xref:System.Web.SessionState.SessionStateModule.Dispose%2A?displayProperty=nameWithType> método se ejecuta en el cierre del dominio de aplicación. Las clases que heredan la <xref:System.Web.SessionState.SessionStateStoreProviderBase> clase puede usar este método para liberar los recursos ya no está en uso.  
  
   
  
## Examples  
 Para obtener un ejemplo de una implementación de proveedor de almacén de estado de sesión, vea [implementar un proveedor de estado de sesión Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Información general del estado de sesión de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EndRequest">
      <MemberSignature Language="C#" Value="public abstract void EndRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndRequest(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member EndRequest : System.Web.HttpContext -&gt; unit" Usage="sessionStateStoreProviderBase.EndRequest context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">Objeto <see cref="T:System.Web.HttpContext" /> de la solicitud actual.</param>
        <summary>El objeto <see cref="T:System.Web.SessionState.SessionStateModule" /> llama a este método al final de una solicitud.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.SessionState.SessionStateModule> de objeto llama el <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> método al final de una solicitud para una página ASP.NET, durante la <xref:System.Web.HttpApplication.EndRequest> eventos. Puede usar el <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> método para realizar cualquier limpieza por solicitud requerido por el proveedor de almacén de estado de sesión.  
  
   
  
## Examples  
 Para obtener un ejemplo de una implementación de proveedor de almacén de estado de sesión, vea [implementar un proveedor de estado de sesión Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Información general del estado de sesión de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData GetItem (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData GetItem(class System.Web.HttpContext context, string id, [out] bool&amp; locked, [out] valuetype System.TimeSpan&amp; lockAge, [out] object&amp; lockId, [out] valuetype System.Web.SessionState.SessionStateActions&amp; actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetItem (context As HttpContext, id As String, ByRef locked As Boolean, ByRef lockAge As TimeSpan, ByRef lockId As Object, ByRef actions As SessionStateActions) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ GetItem(System::Web::HttpContext ^ context, System::String ^ id, [Runtime::InteropServices::Out] bool % locked, [Runtime::InteropServices::Out] TimeSpan % lockAge, [Runtime::InteropServices::Out] System::Object ^ % lockId, [Runtime::InteropServices::Out] System::Web::SessionState::SessionStateActions % actions);" />
      <MemberSignature Language="F#" Value="abstract member GetItem : System.Web.HttpContext * string *  *  *  *  -&gt; System.Web.SessionState.SessionStateStoreData" Usage="sessionStateStoreProviderBase.GetItem (context, id, locked, lockAge, lockId, actions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="locked" Type="System.Boolean" RefType="out" />
        <Parameter Name="lockAge" Type="System.TimeSpan" RefType="out" />
        <Parameter Name="lockId" Type="System.Object" RefType="out" />
        <Parameter Name="actions" Type="System.Web.SessionState.SessionStateActions" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">Objeto <see cref="T:System.Web.HttpContext" /> de la solicitud actual.</param>
        <param name="id">Objeto <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" /> de la solicitud actual.</param>
        <param name="locked">El resultado que devuelve este método contiene un valor booleano establecido en <see langword="true" /> si el elemento de sesión solicitado está bloqueado en el almacén de datos de sesión; en caso contrario, es <see langword="false" />.</param>
        <param name="lockAge">El resultado que devuelve este método contiene un objeto <see cref="T:System.TimeSpan" />, establecido en la cantidad de tiempo que un elemento del almacén de datos de sesión ha estado bloqueado.</param>
        <param name="lockId">El resultado que devuelve este método contiene un objeto establecido en el identificador de bloqueo de la solicitud actual. Para obtener información detallada acerca del identificador de bloqueo, vea "Bloqueo de datos de almacén de sesiones" en el resumen de la clase <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" />.</param>
        <param name="actions">El resultado que devuelve este método contiene uno de los valores de <see cref="T:System.Web.SessionState.SessionStateActions" />, que indica si la sesión actual es una sesión sin inicializar y carente de cookies.</param>
        <summary>Devuelve datos del estado de sesión de sólo lectura desde el almacén de datos de la sesión.</summary>
        <returns>Objeto <see cref="T:System.Web.SessionState.SessionStateStoreData" /> que se ha rellenado con los valores de sesión y la información del almacén de datos de sesión.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.SessionState.SessionStateModule> de objeto llama el <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> método al principio de una solicitud, durante el <xref:System.Web.HttpApplication.AcquireRequestState> evento, cuando el <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> atributo está establecido en `ReadOnly`. Si el <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> atributo está establecido en `true`, el <xref:System.Web.SessionState.SessionStateModule> en su lugar de objeto llama el <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> método.  
  
 El <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> método devuelve un <xref:System.Web.SessionState.SessionStateStoreData> objeto rellenado con información de sesión del almacén de datos y actualiza la fecha de expiración de los datos de sesión. Si no hay datos de elemento de sesión se encuentra en el almacén de datos, el <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> método establece el `locked` `out` parámetro `false` y devuelve `null`. Esto hace que el <xref:System.Web.SessionState.SessionStateModule> objeto para llamar a la <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> método para crear un nuevo elemento de sesión en el almacén de datos.  
  
 Si elemento de la sesión datos se encuentran en el almacén de datos pero se bloquean los datos, el <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> método establece el `locked` `out` parámetro `true`, Establece la `lockAge` `out` parámetro a la fecha y hora actuales menos la fecha y la hora cuando se ha bloqueado el elemento (que se recupera del almacén de datos), Establece la `lockId` `out` parámetro para el identificador de bloqueo se recupera desde el almacén de datos y devuelve `null`. Esto hace que el <xref:System.Web.SessionState.SessionStateModule> objeto para llamar a la <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> método nuevo después de un intervalo de medio segundo para intentar recuperar la información del elemento de sesión.  
  
 Si el valor que el `lockAge` `out` parámetro se establece en supera la <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> valor, el <xref:System.Web.SessionState.SessionStateModule> de objeto llama el <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> método para desactivar el bloqueo de los datos de elemento de sesión y, a continuación, llama a la <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> nuevo al método.  
  
 El `actionFlags` parámetro se utiliza cuando tanto el `cookieless` y `regenerateExpiredSessionId` atributos están establecidos en `true`. Un `actionFlags` valor establecido en <xref:System.Web.SessionState.SessionStateActions.InitializeItem> indica que la entrada en el almacén de datos de sesión es una nueva sesión que requiere inicialización. Se crean entradas sin inicializar en el almacén de datos de sesión mediante una llamada a la <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> método. Si el elemento del almacén de datos de sesión no es un elemento no inicializado, el `actionFlags` parámetro se establecerá en cero.  
  
 Los implementadores de almacén de estado de sesión personalizado que admiten sesiones sin cookies deben establecer el `actionFlags` `out` parámetro en el valor devuelto desde el almacén de datos de sesión para el elemento actual. Si el `actionFlags` es igual elementos de valor de parámetro para el almacén de sesión solicitado la <xref:System.Web.SessionState.SessionStateActions.InitializeItem> valor de enumeración, el <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> método debe establecer el valor en el almacén de datos en cero después de establecer el `actionFlags` `out` parámetro.  
  
   
  
## Examples  
 Para obtener un ejemplo de una implementación de proveedor de almacén de estado de sesión, vea [implementar un proveedor de estado de sesión Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Información general del estado de sesión de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetItemExclusive">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData GetItemExclusive (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData GetItemExclusive(class System.Web.HttpContext context, string id, [out] bool&amp; locked, [out] valuetype System.TimeSpan&amp; lockAge, [out] object&amp; lockId, [out] valuetype System.Web.SessionState.SessionStateActions&amp; actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetItemExclusive (context As HttpContext, id As String, ByRef locked As Boolean, ByRef lockAge As TimeSpan, ByRef lockId As Object, ByRef actions As SessionStateActions) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ GetItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, [Runtime::InteropServices::Out] bool % locked, [Runtime::InteropServices::Out] TimeSpan % lockAge, [Runtime::InteropServices::Out] System::Object ^ % lockId, [Runtime::InteropServices::Out] System::Web::SessionState::SessionStateActions % actions);" />
      <MemberSignature Language="F#" Value="abstract member GetItemExclusive : System.Web.HttpContext * string *  *  *  *  -&gt; System.Web.SessionState.SessionStateStoreData" Usage="sessionStateStoreProviderBase.GetItemExclusive (context, id, locked, lockAge, lockId, actions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="locked" Type="System.Boolean" RefType="out" />
        <Parameter Name="lockAge" Type="System.TimeSpan" RefType="out" />
        <Parameter Name="lockId" Type="System.Object" RefType="out" />
        <Parameter Name="actions" Type="System.Web.SessionState.SessionStateActions" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">Objeto <see cref="T:System.Web.HttpContext" /> de la solicitud actual.</param>
        <param name="id">Objeto <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" /> de la solicitud actual.</param>
        <param name="locked">El resultado que devuelve este método contiene un valor booleano establecido en <see langword="true" /> si el bloqueo se obtiene correctamente; en caso contrario, es <see langword="false" />.</param>
        <param name="lockAge">El resultado que devuelve este método contiene un objeto <see cref="T:System.TimeSpan" />, establecido en la cantidad de tiempo que un elemento del almacén de datos de sesión ha estado bloqueado.</param>
        <param name="lockId">El resultado que devuelve este método contiene un objeto establecido en el identificador de bloqueo de la solicitud actual. Para obtener información detallada acerca del identificador de bloqueo, vea "Bloqueo de datos de almacén de sesiones" en el resumen de la clase <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" />.</param>
        <param name="actions">El resultado que devuelve este método contiene uno de los valores de <see cref="T:System.Web.SessionState.SessionStateActions" />, que indica si la sesión actual es una sesión sin inicializar y carente de cookies.</param>
        <summary>Devuelve datos del estado de sesión de sólo lectura desde el almacén de datos de la sesión.</summary>
        <returns>Objeto <see cref="T:System.Web.SessionState.SessionStateStoreData" /> que se ha rellenado con los valores de sesión y la información del almacén de datos de sesión.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.SessionState.SessionStateModule> de objeto llama el <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> método al principio de una solicitud, durante el <xref:System.Web.HttpApplication.AcquireRequestState> evento, cuando el <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> atributo está establecido en `true`, que es el valor predeterminado. Si el <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> atributo está establecido en `ReadOnly`, el <xref:System.Web.SessionState.SessionStateModule> en su lugar de objeto llama el <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> método.  
  
 El <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> método devuelve un <xref:System.Web.SessionState.SessionStateStoreData> objeto rellenado con información de la sesión del almacén de datos, actualiza la fecha de expiración de los datos almacenados y bloquea los datos de elemento de sesión en el almacén de datos para la duración de la solicitud. Si no hay datos de elemento de sesión se encuentra en el almacén de datos, el <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> método establece el `locked` `out` parámetro `false` y devuelve `null`. Esto hace que el <xref:System.Web.SessionState.SessionStateModule> objeto para llamar a la <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> método para crear un nuevo elemento de sesión en el almacén de datos. Si elemento de la sesión datos se encuentran en el almacén de datos pero se bloquean los datos, el <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> método establece el `locked` `out` parámetro `true`, Establece la `lockAge` `out` parámetro a la fecha y hora actuales menos la fecha y la hora cuando se ha bloqueado el elemento (que se recupera del almacén de datos), Establece la `lockId` `out` parámetro para el identificador de bloqueo se recupera desde el almacén de datos y devuelve `null`. Esto hace que el <xref:System.Web.SessionState.SessionStateModule> objeto para llamar a la <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> método nuevo después de un intervalo de medio segundo para intentar recuperar la información del elemento de sesión y obtener un bloqueo en los datos. Si el valor que el `lockAge` `out` parámetro se establece en supera la <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> valor, el <xref:System.Web.SessionState.SessionStateModule> llamadas la <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> método para desactivar el bloqueo de los datos de elemento de sesión y, a continuación, llama a la <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> nuevo al método.  
  
 El `actionFlags` parámetro se usa cuando el `cookieless` y `regenerateExpiredSessionId` atributos están establecidos en `true`. Un `actionFlags` valor establecido en <xref:System.Web.SessionState.SessionStateActions.InitializeItem> indica que la entrada en el almacén de datos de sesión es una nueva sesión que requiere inicialización. Se crean entradas sin inicializar en el almacén de datos de sesión mediante una llamada a la <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> método. Si el elemento del almacén de datos de sesión no es un elemento no inicializado, el `actionFlags` parámetro se establecerá en cero.  
  
 Los implementadores de almacén de estado de sesión personalizado que admiten sesiones sin cookies deben establecer el `actionFlags` `out` parámetro en el valor devuelto desde el almacén de datos de sesión para el elemento actual. Si el `actionFlags` es igual elementos de valor de parámetro para el almacén de sesión solicitado la <xref:System.Web.SessionState.SessionStateActions.InitializeItem> valor de enumeración, el <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> método debe establecer el valor en el almacén de datos en cero después de establecer el `actionFlags` `out` parámetro.  
  
   
  
## Examples  
 Para obtener un ejemplo de una implementación de proveedor de almacén de estado de sesión, vea [implementar un proveedor de estado de sesión Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Información general del estado de sesión de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="InitializeRequest">
      <MemberSignature Language="C#" Value="public abstract void InitializeRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub InitializeRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void InitializeRequest(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member InitializeRequest : System.Web.HttpContext -&gt; unit" Usage="sessionStateStoreProviderBase.InitializeRequest context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">Objeto <see cref="T:System.Web.HttpContext" /> de la solicitud actual.</param>
        <summary>El objeto <see cref="T:System.Web.SessionState.SessionStateModule" /> llama a este método para llevar a cabo la inicialización por solicitud.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.SessionState.SessionStateModule> de objeto llama el <xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A> método antes de llamar a cualquier otro <xref:System.Web.SessionState.SessionStateStoreProviderBase> método. Puede usar el <xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A> método para realizar cualquier inicialización por solicitud requerido por el proveedor de almacén de estado de sesión.  
  
   
  
## Examples  
 Para obtener un ejemplo de una implementación de proveedor de almacén de estado de sesión, vea [implementar un proveedor de estado de sesión Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Información general del estado de sesión de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ReleaseItemExclusive">
      <MemberSignature Language="C#" Value="public abstract void ReleaseItemExclusive (System.Web.HttpContext context, string id, object lockId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseItemExclusive(class System.Web.HttpContext context, string id, object lockId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ReleaseItemExclusive (context As HttpContext, id As String, lockId As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ReleaseItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, System::Object ^ lockId);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseItemExclusive : System.Web.HttpContext * string * obj -&gt; unit" Usage="sessionStateStoreProviderBase.ReleaseItemExclusive (context, id, lockId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="lockId" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Objeto <see cref="T:System.Web.HttpContext" /> de la solicitud actual.</param>
        <param name="id">Identificador de sesión de la solicitud actual.</param>
        <param name="lockId">Identificador de bloqueo de la solicitud actual.</param>
        <summary>Libera el bloqueo de un elemento del almacén de datos de sesión.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.SessionState.SessionStateModule> de objeto llama el <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> para actualizar la fecha de expiración y liberar un bloqueo en un elemento en el almacén de datos de sesión. Se llama al final de una solicitud, durante el <xref:System.Web.HttpApplication.ReleaseRequestState> evento, si se modifican los valores de sesión. Si se han modificado los valores de sesión, el <xref:System.Web.SessionState.SessionStateModule> en su lugar de objeto llama el <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> método.  
  
 El <xref:System.Web.SessionState.SessionStateModule> objeto también llama a la <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> método cuando un bloqueo en un elemento en el almacén de datos de la sesión ha superado el <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> valor. Para obtener más información acerca de los bloqueos y los detalles sobre el identificador de bloqueo, vea "Bloqueo de datos de sesión-Store" en el <xref:System.Web.SessionState.SessionStateStoreProviderBase> información general de clases.  
  
 El <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> método sólo quita el bloqueo de un elemento en el almacén de datos de sesión para la aplicación actual que coincida con la sesión proporcionada `id` y `lockId` valores. Si el `lockId` no coincide con el que aparece en el almacén de datos, el <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> método no hace nada.  
  
   
  
## Examples  
 Para obtener un ejemplo de una implementación de proveedor de almacén de estado de sesión, vea [implementar un proveedor de estado de sesión Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Información general del estado de sesión de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public abstract void RemoveItem (System.Web.HttpContext context, string id, object lockId, System.Web.SessionState.SessionStateStoreData item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveItem(class System.Web.HttpContext context, string id, object lockId, class System.Web.SessionState.SessionStateStoreData item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveItem (context As HttpContext, id As String, lockId As Object, item As SessionStateStoreData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveItem(System::Web::HttpContext ^ context, System::String ^ id, System::Object ^ lockId, System::Web::SessionState::SessionStateStoreData ^ item);" />
      <MemberSignature Language="F#" Value="abstract member RemoveItem : System.Web.HttpContext * string * obj * System.Web.SessionState.SessionStateStoreData -&gt; unit" Usage="sessionStateStoreProviderBase.RemoveItem (context, id, lockId, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="lockId" Type="System.Object" />
        <Parameter Name="item" Type="System.Web.SessionState.SessionStateStoreData" />
      </Parameters>
      <Docs>
        <param name="context">Objeto <see cref="T:System.Web.HttpContext" /> de la solicitud actual.</param>
        <param name="id">Identificador de sesión de la solicitud actual.</param>
        <param name="lockId">Identificador de bloqueo de la solicitud actual.</param>
        <param name="item">Objeto <see cref="T:System.Web.SessionState.SessionStateStoreData" /> que representa el elemento que se va a eliminar del almacén de datos.</param>
        <summary>Elimina los datos del elemento del almacén de datos de sesión.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.SessionState.SessionStateModule> de objeto llama el <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> método al final de una solicitud, durante el <xref:System.Web.HttpApplication.ReleaseRequestState> evento, para eliminar los datos de un elemento de sesión del almacén de datos de sesión si el <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> ha llamado al método. Solo los datos de sesión de la aplicación actual que coincida con la sesión proporcionada `id` y `lockId` es eliminar los valores. Para obtener más información acerca de los bloqueos y los detalles sobre el identificador de bloqueo, vea "Bloqueo de datos de sesión-Store" en el <xref:System.Web.SessionState.SessionStateStoreProviderBase> información general de clases.  
  
   
  
## Examples  
 Para obtener un ejemplo de una implementación de proveedor de almacén de estado de sesión, vea [implementar un proveedor de estado de sesión Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Información general del estado de sesión de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ResetItemTimeout">
      <MemberSignature Language="C#" Value="public abstract void ResetItemTimeout (System.Web.HttpContext context, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetItemTimeout(class System.Web.HttpContext context, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ResetItemTimeout (context As HttpContext, id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ResetItemTimeout(System::Web::HttpContext ^ context, System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member ResetItemTimeout : System.Web.HttpContext * string -&gt; unit" Usage="sessionStateStoreProviderBase.ResetItemTimeout (context, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">Objeto <see cref="T:System.Web.HttpContext" /> de la solicitud actual.</param>
        <param name="id">Identificador de sesión de la solicitud actual.</param>
        <summary>Actualiza la fecha y hora de expiración de un elemento del almacén de datos de sesión.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.SessionState.SessionStateModule> de objeto llama el <xref:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout%2A> método para actualizar la fecha de expiración y la hora para una sesión a la fecha y hora actual más la sesión <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> valor cuando ambos:  
  
-   el <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> atributo es `true`, o  
  
-   la solicitud no emitía la <xref:System.Web.HttpApplication.AcquireRequestState> y <xref:System.Web.HttpApplication.ReleaseRequestState> eventos debido a un error.  
  
 Si se solicita una página ASP.NET y el <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> atributo está establecido en `false`, el <xref:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout%2A> todavía se llama el método para actualizar la fecha de expiración y la hora de los datos en el almacén de datos de sesión.  
  
   
  
## Examples  
 Para obtener un ejemplo de una implementación de proveedor de almacén de estado de sesión, vea [implementar un proveedor de estado de sesión Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Información general del estado de sesión de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="SetAndReleaseItemExclusive">
      <MemberSignature Language="C#" Value="public abstract void SetAndReleaseItemExclusive (System.Web.HttpContext context, string id, System.Web.SessionState.SessionStateStoreData item, object lockId, bool newItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAndReleaseItemExclusive(class System.Web.HttpContext context, string id, class System.Web.SessionState.SessionStateStoreData item, object lockId, bool newItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetAndReleaseItemExclusive (context As HttpContext, id As String, item As SessionStateStoreData, lockId As Object, newItem As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetAndReleaseItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, System::Web::SessionState::SessionStateStoreData ^ item, System::Object ^ lockId, bool newItem);" />
      <MemberSignature Language="F#" Value="abstract member SetAndReleaseItemExclusive : System.Web.HttpContext * string * System.Web.SessionState.SessionStateStoreData * obj * bool -&gt; unit" Usage="sessionStateStoreProviderBase.SetAndReleaseItemExclusive (context, id, item, lockId, newItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="item" Type="System.Web.SessionState.SessionStateStoreData" />
        <Parameter Name="lockId" Type="System.Object" />
        <Parameter Name="newItem" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="context">Objeto <see cref="T:System.Web.HttpContext" /> de la solicitud actual.</param>
        <param name="id">Identificador de sesión de la solicitud actual.</param>
        <param name="item">Objeto <see cref="T:System.Web.SessionState.SessionStateStoreData" /> que contiene los valores de sesión actuales que se van a almacenar.</param>
        <param name="lockId">Identificador de bloqueo de la solicitud actual.</param>
        <param name="newItem">Es <see langword="true" /> para identificar el elemento de sesión como un elemento nuevo; es <see langword="false" /> para identificar el elemento de sesión como un elemento existente.</param>
        <summary>Actualiza la información del elemento de sesión del almacén de datos de estado de sesión con los valores de la solicitud actual y libera el bloqueo de los datos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.SessionState.SessionStateModule> de objeto llama el <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> método al final de una solicitud, durante el <xref:System.Web.HttpApplication.ReleaseRequestState> eventos, para insertar información de elemento de sesión actual en el almacén de datos o actualizar la información de elemento de sesión existente en el almacén de datos con los valores actuales, Para actualizar la fecha de expiración en el elemento y para liberar el bloqueo en los datos. Solo los datos de sesión de la aplicación actual que coincida con la sesión proporcionada `id` y `lockId` se actualizan los valores. Para obtener más información acerca de los bloqueos, vea "Bloqueo de datos de sesión Store" en el <xref:System.Web.SessionState.SessionStateStoreProviderBase> información general de clases.  
  
 Si no se han modificado los valores de sesión para la solicitud actual, el <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> no se llama al método. En su lugar, el <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> se llama al método.  
  
 Si el <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> se ha llamado al método, el <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> no se llama al método. En su lugar, el <xref:System.Web.SessionState.SessionStateModule> de objeto llama el <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> método para eliminar datos de elemento de sesión del origen de datos.  
  
   
  
## Examples  
 Para obtener un ejemplo de una implementación de proveedor de almacén de estado de sesión, vea [implementar un proveedor de estado de sesión Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Información general del estado de sesión de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="SetItemExpireCallback">
      <MemberSignature Language="C#" Value="public abstract bool SetItemExpireCallback (System.Web.SessionState.SessionStateItemExpireCallback expireCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetItemExpireCallback(class System.Web.SessionState.SessionStateItemExpireCallback expireCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SetItemExpireCallback (expireCallback As SessionStateItemExpireCallback) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool SetItemExpireCallback(System::Web::SessionState::SessionStateItemExpireCallback ^ expireCallback);" />
      <MemberSignature Language="F#" Value="abstract member SetItemExpireCallback : System.Web.SessionState.SessionStateItemExpireCallback -&gt; bool" Usage="sessionStateStoreProviderBase.SetItemExpireCallback expireCallback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expireCallback" Type="System.Web.SessionState.SessionStateItemExpireCallback" />
      </Parameters>
      <Docs>
        <param name="expireCallback">Delegado <see cref="T:System.Web.SessionState.SessionStateItemExpireCallback" /> del evento <see langword="Session_OnEnd" /> definido en el archivo Global.asax.</param>
        <summary>Establece una referencia al delegado <see cref="T:System.Web.SessionState.SessionStateItemExpireCallback" /> para el evento <see langword="Session_OnEnd" /> definido en el archivo Global.asax.</summary>
        <returns>Es <see langword="true" /> si el proveedor de almacén de estados de sesión admite llamadas al evento <see langword="Session_OnEnd" />; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.SessionState.SessionStateModule> de objeto llama el <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback%2A> método cuando se inicializa el módulo para determinar si las llamadas a la `Session_OnEnd` eventos son compatibles con el <xref:System.Web.SessionState.SessionStateStoreProviderBase> implementación y para asociar el <xref:System.Web.SessionState.SessionStateItemExpireCallback> delegado con el `Session_OnEnd` eventos.  
  
 Los implementadores de proveedor de almacén de estado de sesión personalizado deben usar el <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback%2A> método para informar a la <xref:System.Web.SessionState.SessionStateModule> objeto si las llamadas a la `Session_OnEnd` se admite el evento y establecer una referencia local la <xref:System.Web.SessionState.SessionStateItemExpireCallback> delegado proporcionado por el `expireCallback` parámetro. La implementación personalizada debe decidir cuándo local <xref:System.Web.SessionState.SessionStateItemExpireCallback> se llama al delegado. Por ejemplo, podría ser llama al delegado durante la llamada a la <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> método, que se llama cuando se abandona una sesión.  
  
   
  
## Examples  
 Para obtener un ejemplo de una implementación de proveedor de almacén de estado de sesión, vea [implementar un proveedor de estado de sesión Store](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc">Información general del estado de sesión de ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>