<Type Name="RibbonQuickAccessToolBarCloneEventArgs" FullName="System.Windows.Controls.Ribbon.RibbonQuickAccessToolBarCloneEventArgs">
  <TypeSignature Language="C#" Value="public class RibbonQuickAccessToolBarCloneEventArgs : System.Windows.RoutedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RibbonQuickAccessToolBarCloneEventArgs extends System.Windows.RoutedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Ribbon.RibbonQuickAccessToolBarCloneEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class RibbonQuickAccessToolBarCloneEventArgs&#xA;Inherits RoutedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class RibbonQuickAccessToolBarCloneEventArgs : System::Windows::RoutedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.RoutedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e1a89-101">Proporciona datos para el evento <see cref="E:System.Windows.Controls.Ribbon.RibbonQuickAccessToolBar.Clone" />.</span><span class="sxs-lookup"><span data-stu-id="e1a89-101">Provides data for the <see cref="E:System.Windows.Controls.Ribbon.RibbonQuickAccessToolBar.Clone" /> event.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RibbonQuickAccessToolBarCloneEventArgs (System.Windows.UIElement targetElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.UIElement targetElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonQuickAccessToolBarCloneEventArgs.#ctor(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetElement As UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RibbonQuickAccessToolBarCloneEventArgs(System::Windows::UIElement ^ targetElement);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetElement" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="targetElement"><span data-ttu-id="e1a89-102">Elemento que se va a clonar.</span><span class="sxs-lookup"><span data-stu-id="e1a89-102">The element to be cloned.</span></span></param>
        <summary><span data-ttu-id="e1a89-103">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Controls.Ribbon.RibbonQuickAccessToolBarCloneEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="e1a89-103">Initializes a new instance of the <see cref="T:System.Windows.Controls.Ribbon.RibbonQuickAccessToolBarCloneEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneInstance">
      <MemberSignature Language="C#" Value="public System.Windows.UIElement CloneInstance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement CloneInstance" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.RibbonQuickAccessToolBarCloneEventArgs.CloneInstance" />
      <MemberSignature Language="VB.NET" Value="Public Property CloneInstance As UIElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::UIElement ^ CloneInstance { System::Windows::UIElement ^ get(); void set(System::Windows::UIElement ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1a89-104">Obtiene o establece la instancia clonada.</span><span class="sxs-lookup"><span data-stu-id="e1a89-104">Gets or sets the cloned instance.</span></span></summary>
        <value><span data-ttu-id="e1a89-105">Instancia clonada.</span><span class="sxs-lookup"><span data-stu-id="e1a89-105">The cloned instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceToBeCloned">
      <MemberSignature Language="C#" Value="public System.Windows.UIElement InstanceToBeCloned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement InstanceToBeCloned" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.RibbonQuickAccessToolBarCloneEventArgs.InstanceToBeCloned" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceToBeCloned As UIElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::UIElement ^ InstanceToBeCloned { System::Windows::UIElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1a89-106">Obtiene el elemento que se va a clonar.</span><span class="sxs-lookup"><span data-stu-id="e1a89-106">Gets the element to be cloned.</span></span></summary>
        <value><span data-ttu-id="e1a89-107">Elemento que se va a clonar.</span><span class="sxs-lookup"><span data-stu-id="e1a89-107">The element to be cloned.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonQuickAccessToolBarCloneEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler"><span data-ttu-id="e1a89-108">El controlador de eventos que se va a invocar.</span><span class="sxs-lookup"><span data-stu-id="e1a89-108">The event handler to invoke.</span></span></param>
        <param name="genericTarget"><span data-ttu-id="e1a89-109">Destino en el que se invoca el controlador.</span><span class="sxs-lookup"><span data-stu-id="e1a89-109">The target on which the handler is invoked.</span></span></param>
        <summary><span data-ttu-id="e1a89-110">Invoca al controlador de eventos especificado en el objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="e1a89-110">Invokes the specified event handler on the specified object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1a89-111">Esta implementación convierte el controlador genérico a un <xref:System.Windows.Controls.Ribbon.RibbonQuickAccessToolBarCloneEventHandler> instancia y lo invoca.</span><span class="sxs-lookup"><span data-stu-id="e1a89-111">This implementation casts the generic handler to a <xref:System.Windows.Controls.Ribbon.RibbonQuickAccessToolBarCloneEventHandler> instance and invokes it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>