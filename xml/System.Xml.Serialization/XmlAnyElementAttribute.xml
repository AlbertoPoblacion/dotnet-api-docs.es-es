<Type Name="XmlAnyElementAttribute" FullName="System.Xml.Serialization.XmlAnyElementAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a98aa130890eb05c5962405024a99b6cfcac833e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30720749" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlAnyElementAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlAnyElementAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAnyElementAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlAnyElementAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAnyElementAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Especifica que el miembro (un campo que devuelve una matriz de objetos <see cref="T:System.Xml.XmlElement" /> o <see cref="T:System.Xml.XmlNode" />) contiene objetos que representan los elementos XLM que no tienen un miembro correspondiente en el objeto que se está serializando o deserializando.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  Cuando se trabaja en una biblioteca de clases portables, como se muestra en Silverlight, Windows Phone o proyecto de aplicación de la tienda de Windows y se usa .NET Framework 4.0.3 y versiones posteriores, utilice <xref:System.Xml.Linq.XElement> o <xref:System.Xml.Linq.XNode> en lugar de <xref:System.Xml.XmlElement> y <xref:System.Xml.XmlNode>.  
  
 Use la <xref:System.Xml.Serialization.XmlAnyElementAttribute> para incluir datos arbitrarios (como elementos XML) que se pueden enviar como parte de un documento XML, por ejemplo, metadatos enviados como parte del documento.  
  
 Aplicar el <xref:System.Xml.Serialization.XmlAnyElementAttribute> a un campo que devuelve una matriz de <xref:System.Xml.XmlElement> o <xref:System.Xml.XmlNode> objetos. Este campo se puede utilizar de dos maneras, dependiendo de si un objeto es que se está serializando o deserializando. Cuando se serializa, el objeto se genera como elementos XML o nodos, aunque no tengan ningún miembro correspondiente (miembros) en el objeto que se está serializando. Si especifica un <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> valor de la propiedad al aplicar el atributo, todos los <xref:System.Xml.XmlElement> o <xref:System.Xml.XmlNode> objetos insertados en la matriz deben tener el mismo elemento predeterminada y el nombre de espacio de nombres, o se produce una excepción. Si establece la <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> valor de propiedad, debe establecer el <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> propiedad y el <xref:System.Xml.XmlElement> o <xref:System.Xml.XmlNode> objetos también deben tener los mismos valores de nombre y espacio de nombres. Si no hay ningún <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> se especifica el valor, el <xref:System.Xml.XmlElement> o <xref:System.Xml.XmlNode> objetos pueden tener cualquier nombre de elemento.  
  
 Cuando se llama a la <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> método de la <xref:System.Xml.Serialization.XmlSerializer> (clase), todos los elementos que no tienen un miembro correspondiente en el objeto que se está deserializando se recopilan en la matriz. Tras la deserialización, recorra en iteración la colección de <xref:System.Xml.XmlElement> elementos para procesar los datos. Si especifica un <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> valor, la matriz contiene solo los elementos XML con ese nombre. Si no especifica un <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> valor, la matriz contiene todos los elementos que no tengan ningún miembro correspondiente en la clase. Si una clase contiene más de un campo al que se aplica el atributo, utilice el <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>, o <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> y <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> propiedades para diferenciar entre el contenido de las matrices. Si dicha clase (con varios campos) también contiene un campo que no tiene ningún valor de propiedad diferenciador establecer (en otras palabras, <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> y <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>) durante la deserialización, esta matriz contiene todos los elementos XML desconocidos que ya no se encuentre en las demás matrices. Si una clase contiene más de un campo que no tenga un diferenciar <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>, o <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> y <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> valor establecido, el comportamiento durante la deserialización no está especificado.  
  
 También puede aplicar el <xref:System.Xml.Serialization.XmlAnyElementAttribute> a un campo que devuelve una sola <xref:System.Xml.XmlElement> objeto. Si lo hace, debe usar las propiedades y métodos de la <xref:System.Xml.XmlElement> clase a recursivamente recorrer en iteración los elementos desconocidos.  
  
 Puede aplicar varias instancias de la <xref:System.Xml.Serialization.XmlAnyElementAttribute> a una clase de miembro, pero cada instancia debe tener un distintos <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> valor de propiedad. O bien, si el mismo <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> propiedad se establece para cada instancia, diferenciado <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> se debe establecer el valor de propiedad para cada instancia.  
  
 El <xref:System.Xml.Serialization.XmlSerializer.UnknownNode> y <xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute> eventos de la <xref:System.Xml.Serialization.XmlSerializer> no se producen si se aplica el <xref:System.Xml.Serialization.XmlAnyElementAttribute> a un miembro de una clase.  
  
> [!NOTE]
>  Puede usar la palabra `XmlAnyElement` en el código en lugar de la forma más larga <xref:System.Xml.Serialization.XmlAnyElementAttribute>.  
  
 Para obtener más información sobre el uso de atributos, vea [atributos](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 El ejemplo siguiente aplica el <xref:System.Xml.Serialization.XmlAnyElementAttribute> a un campo denominado `AllElements` que devuelve una matriz de <xref:System.Xml.XmlElement> objetos.  
  
 [!code-cpp[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Xml.Serialization.XmlAnyElementAttribute> constructor cuando va a reemplazar la serialización de un campo. Para obtener más detalles sobre cómo reemplazar la serialización, vea el <xref:System.Xml.Serialization.XmlAttributeOverrides> clase.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del elemento XML que genera <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> y especifica el nombre del elemento XML generado en el documento XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Xml.Serialization.XmlAnyElementAttribute> constructor cuando va a reemplazar la serialización de un campo. Para obtener más detalles sobre cómo reemplazar la serialización, vea el <xref:System.Xml.Serialization.XmlAttributeOverrides> clase.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute (string name, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute(System::String ^ name, System::String ^ ns);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del elemento XML que genera <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
        <param name="ns">Espacio de nombres XML del elemento XML.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> y especifica el nombre del elemento XML generado en el documento XML y su espacio de nombres XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Xml.Serialization.XmlAnyElementAttribute> constructor cuando va a reemplazar la serialización de un campo. Para obtener más detalles sobre cómo reemplazar la serialización, vea el <xref:System.Xml.Serialization.XmlAttributeOverrides> clase.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre del elemento XML.</summary>
        <value>Nombre del elemento XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si especifica un <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> valor de la propiedad al aplicar el atributo, todos los <xref:System.Xml.XmlElement> o <xref:System.Xml.XmlNode> objetos insertados en la matriz deben tener el mismo elemento predeterminada y el nombre de espacio de nombres, o se produce una excepción. Si establece la <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> valor de propiedad, debe establecer el <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> propiedad y el <xref:System.Xml.XmlElement> o <xref:System.Xml.XmlNode> objetos también deben tener los mismos valores de nombre y espacio de nombres. Si no hay ningún <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> se especifica el valor, el <xref:System.Xml.XmlElement> o <xref:System.Xml.XmlNode> objetos pueden tener cualquier nombre de elemento.  
  
 Cuando se llama a la <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> método de la <xref:System.Xml.Serialization.XmlSerializer> (clase), todos los atributos que no tienen un miembro correspondiente en el objeto que se está deserializando se recopilan en la matriz. Si especifica un <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> valor, la matriz contiene solo los elementos XML con ese nombre. Si no especifica un <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> valor, la matriz contiene todos los elementos que no tengan ningún miembro correspondiente en la clase. Si una clase contiene más de un campo al que se aplica el atributo, utilice el <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> y <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> propiedades para diferenciar entre el contenido de las matrices. Si dicha clase (con varios campos) también contiene un campo que no tiene ningún valor de propiedad diferenciador establecido (es decir, <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> y <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>) durante la deserialización, la matriz contiene elementos XML que ya no se encuentre en las demás matrices. Si agrega más de un campo que no tenga un diferenciar <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> o <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> valor establecido, el último campo de la clase contiene todos los elementos desconocidos que ya no se encuentre en las demás matrices, y todos los demás campos se establecen en `null`.  
  
 Puede aplicar varias instancias de la <xref:System.Xml.Serialization.XmlAnyElementAttribute> a una clase de miembro, pero cada instancia debe tener un distintos <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> valor de propiedad. O bien, si el mismo <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> propiedad se establece para cada instancia, diferenciado <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> se debe establecer el valor de propiedad para cada instancia.  
  
   
  
## Examples  
 [!code-cpp[XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CPP/anyelement.cpp#1)]
 [!code-csharp[XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CS/anyelement.cs#1)]
 [!code-vb[XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAnyElementAttribute Example/VB/anyelement.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El nombre de elemento de un miembro de la matriz no coincide con el nombre de elemento especificado por la propiedad <see cref="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el espacio de nombres XML generado en el documento XML.</summary>
        <value>Espacio de nombres XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> propiedad le permite establecer un nombre único para el atributo XML. El <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> propiedad se ajusta a las reglas para crear un espacio de nombres XML que se encuentra en el documento del Consorcio WWC (www.w3.org), "Espacios de nombres XML."  
  
 Para establecer el <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> propiedad con un nombre con prefijo, cree un <xref:System.Xml.Serialization.XmlSerializerNamespaces> que contiene los espacios de nombres y prefijos utilizados en el documento XML. Establecer el <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> propiedad en uno de los espacios de nombres en el <xref:System.Xml.Serialization.XmlSerializerNamespaces>. Cuando se genera el código XML, el nombre del atributo es el prefijo correctamente con el prefijo asociado con el espacio de nombres especificado.  
  
   
  
## Examples  
 [!code-cpp[XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CPP/anyelement.cpp#1)]
 [!code-csharp[XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CS/anyelement.cs#1)]
 [!code-vb[XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAnyElementAttribute Example/VB/anyelement.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public int Order { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Order" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Order" />
      <MemberSignature Language="VB.NET" Value="Public Property Order As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Order { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el orden explícito en el que los elementos son serializados o deserializados.</summary>
        <value>Orden de la generación de código.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder> enumeración para indicar a la <xref:System.Web.Services.Description.ServiceDescriptionImporter> para generar el código que establece la <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> propiedad.  
  
> [!IMPORTANT]
>  Una vez el <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> propiedad se ha utilizado en una propiedad pública o campo en un tipo, se debe aplicar a todas las propiedades públicas y campos para ese tipo y todos los tipos heredados.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>