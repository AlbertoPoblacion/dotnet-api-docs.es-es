<Type Name="SoapTypeAttribute" FullName="System.Xml.Serialization.SoapTypeAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="609244cc767a6d0fbfd5e2bc00ed90d337568072" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30720759" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SoapTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapTypeAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Enum | System.AttributeTargets.Interface | System.AttributeTargets.Struct)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Controla el esquema generado por <see cref="T:System.Xml.Serialization.XmlSerializer" /> cuando se serializa una instancia de clase como XML SOAP codificado.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Xml.Serialization.SoapTypeAttribute> clase pertenece a una familia de atributos que controla cómo el <xref:System.Xml.Serialization.XmlSerializer> serializa o deserializa un objeto como XML SOAP codificado. El XML resultante se ajusta a la sección 5 del documento Consorcio WWC (www.w3.org), "Simple Object Access Protocol (SOAP) 1.1". Para obtener una lista completa de atributos similares, vea [atributos que controlan la serialización SOAP codificada](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md).  
  
 Para serializar un objeto como un mensaje SOAP codificado, construya el <xref:System.Xml.Serialization.XmlSerializer> con una <xref:System.Xml.Serialization.XmlTypeMapping> creado con la <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> método de la <xref:System.Xml.Serialization.SoapReflectionImporter> clase.  
  
 El <xref:System.Xml.Serialization.SoapTypeAttribute> sólo se puede aplicar a declaraciones de clase.  
  
 El <xref:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema%2A> propiedad determina si el tipo de elemento XML resultante se incluye en el documento de esquema XML (.xsd) para la secuencia XML generada. Para ver el esquema, compile la clase en un archivo DLL. Pase el archivo resultante como argumento a la [herramienta de definición de esquemas XML (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md). La herramienta genera el esquema XML para la secuencia XML generada cuando la clase se serializa una instancia de la <xref:System.Xml.Serialization.XmlSerializer> clase.  
  
 Establecer otro espacio de nombres, Xsd.exe escribirá un archivo de esquema (.xsd) diferente para la secuencia XML generada cuando se serializa la clase.  
  
   
  
## Examples  
 En el ejemplo siguiente se serializa una clase denominada `Group`. El <xref:System.Xml.Serialization.SoapTypeAttribute> se aplica a la clase, con la <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> establecida en "SoapGroupType". El <xref:System.Xml.Serialization.SoapTypeAttribute> también se invalida, cambiar el <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> "Equipo". Se serializan ambas versiones, lo que da lugar a dos archivos: SoapType.xml y SoapType2.xml.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapTypeAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Crear un <xref:System.Xml.Serialization.SoapTypeAttribute> al reemplazar la serialización de un tipo. Asigne el objeto a la <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> propiedad de un <xref:System.Xml.Serialization.SoapAttributes> y agregue el <xref:System.Xml.Serialization.SoapAttributes> a una <xref:System.Xml.Serialization.SoapAttributeOverrides>. Consulte la <xref:System.Xml.Serialization.SoapAttributeOverrides> general sobre la clase para obtener más información acerca de cómo reemplazar la serialización de SOAP.  
  
   
  
## Examples  
 En el ejemplo siguiente se serializa una clase denominada `Group`. El <xref:System.Xml.Serialization.SoapTypeAttribute> se aplica a la clase con la <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> establecida en "SoapGroupType". El <xref:System.Xml.Serialization.SoapTypeAttribute> también se invalida, cambiar el <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> "Equipo". Se serializan ambas versiones, lo que da lugar a dos archivos: SoapType.xml y SoapType2.xml.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapTypeAttribute(System::String ^ typeName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">Nombre del tipo XML que <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera cuando serializa la instancia de clase (y reconoce al deserializar la instancia de clase).</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> y especifica el nombre del tipo XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Crear un <xref:System.Xml.Serialization.SoapTypeAttribute> al reemplazar la serialización de un tipo. Asigne el objeto a la <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> propiedad de un <xref:System.Xml.Serialization.SoapAttributes> y agregue el <xref:System.Xml.Serialization.SoapAttributes> a una <xref:System.Xml.Serialization.SoapAttributeOverrides>. Consulte la <xref:System.Xml.Serialization.SoapAttributeOverrides> general sobre la clase para obtener más información acerca de cómo reemplazar la serialización de SOAP.  
  
   
  
## Examples  
 En el ejemplo siguiente se serializa una clase denominada `Group`. El <xref:System.Xml.Serialization.SoapTypeAttribute> se aplica a la clase con la <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> establecida en "SoapGroupType". El <xref:System.Xml.Serialization.SoapTypeAttribute> también se invalida, cambiar el <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> "Equipo". Se serializan ambas versiones, lo que da lugar a dos archivos: SoapType.xml y SoapType2.xml.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute (string typeName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapTypeAttribute(System::String ^ typeName, System::String ^ ns);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">Nombre del tipo XML que <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera cuando serializa la instancia de clase (y reconoce al deserializar la instancia de clase).</param>
        <param name="ns">Espacio de nombres XML del tipo.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> y especifica el nombre y el espacio de nombres XML del tipo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Crear un <xref:System.Xml.Serialization.SoapTypeAttribute> al reemplazar la serialización de un tipo. Asigne el objeto a la <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> propiedad de un <xref:System.Xml.Serialization.SoapAttributes> y agregue el <xref:System.Xml.Serialization.SoapAttributes> a una <xref:System.Xml.Serialization.SoapAttributeOverrides>. Consulte la <xref:System.Xml.Serialization.SoapAttributeOverrides> general sobre la clase para obtener más información sobre cómo reemplazar la serialización SOAP.  
  
 Si establece un <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> valor de más de un tipo (es decir, si se aplica el atributo a más de una clase con otro <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> valor para cada uno de ellos), el [herramienta de definición de esquemas XML (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) genera un archivo de esquema independiente (.xsd) para cada tipo. Esto es porque establecer un espacio de nombres diferente para cada tipo representa cada tipo distinto de los demás, lo que hace que sea necesario para cada tipo que se va a escribirse como una entidad independiente.  
  
   
  
## Examples  
 En el ejemplo siguiente se serializa una clase denominada `Group`. El <xref:System.Xml.Serialization.SoapTypeAttribute> se aplica a la clase con la <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> establecida en "SoapGroupType". El <xref:System.Xml.Serialization.SoapTypeAttribute> también se invalida, cambiar el <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> "Equipo". Se serializan ambas versiones, lo que da lugar a dos archivos: SoapType.xml y SoapType2.xml.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeInSchema">
      <MemberSignature Language="C#" Value="public bool IncludeInSchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeInSchema" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeInSchema As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeInSchema { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se debe incluir el tipo en los documentos de esquema XML codificados en SOAP.</summary>
        <value>
          <see langword="true" /> para incluir el tipo en los documentos de esquema XML codificados en SOAP; en caso contrario, <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplicar el <xref:System.Xml.Serialization.SoapTypeAttribute> a una declaración de clase para especificar si se debe incluir el tipo en el documento de esquema XML. Para ver los resultados de establecer las propiedades de la <xref:System.Xml.Serialization.SoapTypeAttribute> clase, compile la aplicación como un ejecutable o una DLL y pase el archivo resultante a la [herramienta de definición de esquemas XML (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md). La herramienta escribe el esquema, incluida la definición de tipo de la secuencia XML generada cuando se serializa la clase.  
  
   
  
## Examples  
 En el ejemplo siguiente se serializa una clase denominada `Group`. El <xref:System.Xml.Serialization.SoapTypeAttribute> se aplica a la clase con la <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> establecida en "SoapGroupType". El <xref:System.Xml.Serialization.SoapTypeAttribute> también se invalida, cambiar el <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> "Equipo". Se serializan ambas versiones, lo que da lugar a dos archivos: SoapType.xml y SoapType2.xml.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el espacio de nombres del tipo XML.</summary>
        <value>Espacio de nombres del tipo XML. El valor predeterminado es una cadena vacía ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si establece un <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> valor de más de un tipo (es decir, si se aplica el atributo a más de una clase con otro <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> valor para cada uno de ellos), el [herramienta de definición de esquemas XML (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) genera un archivo de esquema independiente (.xsd) para cada tipo. Esto es porque establecer un espacio de nombres diferente para cada tipo representa cada tipo distinto de los demás, lo que hace que sea necesario para cada tipo que se va a escribirse como una entidad independiente.  
  
   
  
## Examples  
 En el ejemplo siguiente se serializa una clase denominada `Group`. El <xref:System.Xml.Serialization.SoapTypeAttribute> se aplica a la clase con la <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> establecida en "SoapGroupType". El <xref:System.Xml.Serialization.SoapTypeAttribute> también se invalida, cambiar el <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> "Equipo". Se serializan ambas versiones, lo que da lugar a dos archivos: SoapType.xml y SoapType2.xml.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre del tipo XML.</summary>
        <value>Nombre del tipo XML. El valor predeterminado es el nombre de la clase.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplicar el <xref:System.Xml.Serialization.SoapTypeAttribute> a una clase para especificar el espacio de nombres del tipo XML, el nombre del tipo XML y si se debe incluir el tipo en el documento de esquema XML. Para ver los resultados de configuración de la <xref:System.Xml.Serialization.SoapTypeAttribute> propiedades del objeto, compile la aplicación como un ejecutable o una DLL y pase el archivo resultante a la [herramienta de definición de esquemas XML (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md). La herramienta escribe el esquema, incluida la definición de tipo.  
  
   
  
## Examples  
 En el ejemplo siguiente se serializa una clase denominada `Group`. El <xref:System.Xml.Serialization.SoapTypeAttribute> se aplica a la clase con la <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> establecida en "SoapGroupType". El <xref:System.Xml.Serialization.SoapTypeAttribute> también se invalida, cambiar el <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> "Equipo". Se serializan ambas versiones, lo que da lugar a dos archivos: SoapType.xml y SoapType2.xml.  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>