<Type Name="XmlReflectionImporter" FullName="System.Xml.Serialization.XmlReflectionImporter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0a081a43b028b0b4242d059c76d9aa004bce9cc3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30720449" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlReflectionImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlReflectionImporter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlReflectionImporter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlReflectionImporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlReflectionImporter" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Genera asignaciones a declaraciones de elementos de esquema XML, incluidas las partes de mensaje literales de definición de esquemas XML (XSD) de un documento escrito en lenguaje de descripción de servicios Web (WSDL), para los tipos de .NET Framework o la información del método de servicio Web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Xml.Serialization.XmlReflectionImporter> clase no se usa directamente. En su lugar, se usa como se indica a continuación:  
  
-   Por el <xref:System.Web.Services.Description.ServiceDescriptionReflector> mientras crea la clase <xref:System.Web.Services.Description.ServiceDescription> objetos desde las clases que se identifican como servicios Web.  
  
-   Un servicio Web o cliente, incluso durante la inicialización.  
  
-   Para inicializar un <xref:System.Xml.Serialization.XmlSerializer> objeto.  
  
-   Por la herramienta de definición de esquemas XML (Xsd.exe) mientras la herramienta genera esquemas XML de tipos de un archivo de ensamblado en tiempo de ejecución.  
  
-   Por la herramienta de lenguaje de descripción de servicios Web (Wsdl.exe) mientras la herramienta genera clases de proxy cliente o clases de servidor abstractas a partir de un documento WSDL.  
  
 La <xref:System.Xml.Serialization.XmlReflectionImporter> clase se utiliza para los servicios Web cuando un servicio o cliente especifica:  
  
-   Uso literal, lo que indica que el contenido de los parámetros de mensaje SOAP y los valores devueltos (o documentos de solicitud y respuesta) se especifica literalmente con las definiciones de esquema XML.  
  
-   Implementaciones de servicios Web mediante las operaciones HTTP-GET y HTTP-POST no SOAP.  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlReflectionImporter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReflectionImporter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReflectionImporter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlReflectionImporter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No es necesario crear una instancia de un <xref:System.Xml.Serialization.XmlReflectionImporter> objeto directamente.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReflectionImporter (string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (defaultNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReflectionImporter(System::String ^ defaultNamespace);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="defaultNamespace">Espacio de nombres XML predeterminado que se utilizará para las asignaciones de tipo importadas.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> mediante el espacio de nombres XML predeterminado especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No es necesario crear una instancia de la <xref:System.Xml.Serialization.XmlReflectionImporter> clase directamente.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReflectionImporter (System.Xml.Serialization.XmlAttributeOverrides attributeOverrides);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Serialization.XmlAttributeOverrides attributeOverrides) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attributeOverrides As XmlAttributeOverrides)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReflectionImporter(System::Xml::Serialization::XmlAttributeOverrides ^ attributeOverrides);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attributeOverrides" Type="System.Xml.Serialization.XmlAttributeOverrides" />
      </Parameters>
      <Docs>
        <param name="attributeOverrides">Un objeto que omite cómo la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa los tipos asignados.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> utilizando las omisiones de serialización XML especificadas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No es necesario crear una instancia de la <xref:System.Xml.Serialization.XmlReflectionImporter> clase directamente.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReflectionImporter (System.Xml.Serialization.XmlAttributeOverrides attributeOverrides, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Serialization.XmlAttributeOverrides attributeOverrides, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attributeOverrides As XmlAttributeOverrides, defaultNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReflectionImporter(System::Xml::Serialization::XmlAttributeOverrides ^ attributeOverrides, System::String ^ defaultNamespace);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attributeOverrides" Type="System.Xml.Serialization.XmlAttributeOverrides" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attributeOverrides">Un objeto que omite cómo la clase <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa los tipos asignados.</param>
        <param name="defaultNamespace">Espacio de nombres XML predeterminado que se utilizará para las asignaciones de tipo importadas.</param>
        <summary>Se inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> utilizando las omisiones de serialización XML especificadas y el espacio de nombres XML predeterminado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No es necesario crear una instancia de la <xref:System.Xml.Serialization.XmlReflectionImporter> clase directamente.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="ImportMembersMapping">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Devuelve asignaciones de tipo internas utilizando información de un método de servicio Web.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportMembersMapping (elementName As String, ns As String, members As XmlReflectionMember(), hasWrapperElement As Boolean) As XmlMembersMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlMembersMapping ^ ImportMembersMapping(System::String ^ elementName, System::String ^ ns, cli::array &lt;System::Xml::Serialization::XmlReflectionMember ^&gt; ^ members, bool hasWrapperElement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="elementName">Nombre de un elemento XML producido desde el método de servicio Web.</param>
        <param name="ns">Espacio de nombres del elemento XML producido desde el método de servicio Web.</param>
        <param name="members">Matriz de objetos <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> que contiene entidades de código de .NET Framework que pertenecen a un método de servicio Web.</param>
        <param name="hasWrapperElement">
          <see langword="true" /> si deberían incluirse los elementos que corresponden a partes del mensaje de lenguaje de descripción de servicios Web (WSDL) en un elemento contenedor adicional de mensajes SOAP; en caso contrario, <see langword="false" />.</param>
        <summary>Genera las asignaciones de tipo internas para obtener información de un método de servicio Web.</summary>
        <returns>
          <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> con asignaciones a las partes de elemento de una definición de mensaje WSDL.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping%2A> método se llama cuando se inicializa un servicio Web o cliente, o refleja un servicio Web. No es necesario para que se llame directamente.  
  
 El <xref:System.Xml.Serialization.XmlReflectionMember> un parámetro de matriz puede constar de cualquiera de las siguientes acciones:  
  
-   Servicio entradas parámetros de método Web.  
  
-   Parámetros de salida de método de servicio Web, más el tipo de valor devuelto, si no es void, en el índice 0.  
  
-   Encabezados SOAP de entrada.  
  
-   Encabezados SOAP de salida.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportMembersMapping (elementName As String, ns As String, members As XmlReflectionMember(), hasWrapperElement As Boolean, rpc As Boolean) As XmlMembersMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlMembersMapping ^ ImportMembersMapping(System::String ^ elementName, System::String ^ ns, cli::array &lt;System::Xml::Serialization::XmlReflectionMember ^&gt; ^ members, bool hasWrapperElement, bool rpc);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" />
        <Parameter Name="rpc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="elementName">Nombre de un elemento XML producido desde el método de servicio Web.</param>
        <param name="ns">Espacio de nombres del elemento XML producido desde el método de servicio Web.</param>
        <param name="members">Matriz de objetos <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> que contiene entidades de código de .NET Framework que pertenecen a un método de servicio Web.</param>
        <param name="hasWrapperElement">
          <see langword="true" /> si deberían incluirse los elementos que corresponden a partes del mensaje de lenguaje de descripción de servicios Web (WSDL) en un elemento contenedor adicional de mensajes SOAP; en caso contrario, <see langword="false" />.</param>
        <param name="rpc">
          <see langword="true" /> si el método es una llamada a procedimiento remoto; de lo contrario, <see langword="false" />.</param>
        <summary>Devuelve asignaciones de tipo internas que usan información de un método de servicio Web y permite especificar un nombre de elemento XML, un espacio de nombres XML y otras opciones.</summary>
        <returns>
          <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> que contiene las asignaciones.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc, bool openModel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc, bool openModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportMembersMapping (elementName As String, ns As String, members As XmlReflectionMember(), hasWrapperElement As Boolean, rpc As Boolean, openModel As Boolean) As XmlMembersMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlMembersMapping ^ ImportMembersMapping(System::String ^ elementName, System::String ^ ns, cli::array &lt;System::Xml::Serialization::XmlReflectionMember ^&gt; ^ members, bool hasWrapperElement, bool rpc, bool openModel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" />
        <Parameter Name="rpc" Type="System.Boolean" />
        <Parameter Name="openModel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="elementName">Nombre de un elemento XML producido desde el método de servicio Web.</param>
        <param name="ns">Espacio de nombres del elemento XML producido desde el método de servicio Web.</param>
        <param name="members">Matriz de objetos <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> que contiene entidades de código de .NET Framework que pertenecen a un método de servicio Web.</param>
        <param name="hasWrapperElement">
          <see langword="true" /> si deberían incluirse los elementos que corresponden a partes del mensaje de lenguaje de descripción de servicios Web (WSDL) en un elemento contenedor adicional de mensajes SOAP; en caso contrario, <see langword="false" />.</param>
        <param name="rpc">
          <see langword="true" /> si el método es una llamada a procedimiento remoto; de lo contrario, <see langword="false" />.</param>
        <param name="openModel">
          <see langword="true" /> para especificar que el tipo de esquema generado se marcará con el elemento <see langword="&lt;xs:anyAttribute&gt;" />; de lo contrario, <see langword="false" />.</param>
        <summary>Devuelve asignaciones de tipo internas que usan información de un método de servicio Web y permite especificar un nombre de elemento XML, un espacio de nombres XML y otras opciones.</summary>
        <returns>
          <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> que contiene las asignaciones.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc, bool openModel, System.Xml.Serialization.XmlMappingAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc, bool openModel, valuetype System.Xml.Serialization.XmlMappingAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportMembersMapping (elementName As String, ns As String, members As XmlReflectionMember(), hasWrapperElement As Boolean, rpc As Boolean, openModel As Boolean, access As XmlMappingAccess) As XmlMembersMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlMembersMapping ^ ImportMembersMapping(System::String ^ elementName, System::String ^ ns, cli::array &lt;System::Xml::Serialization::XmlReflectionMember ^&gt; ^ members, bool hasWrapperElement, bool rpc, bool openModel, System::Xml::Serialization::XmlMappingAccess access);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" />
        <Parameter Name="rpc" Type="System.Boolean" />
        <Parameter Name="openModel" Type="System.Boolean" />
        <Parameter Name="access" Type="System.Xml.Serialization.XmlMappingAccess" />
      </Parameters>
      <Docs>
        <param name="elementName">Nombre de un elemento XML producido desde el método de servicio Web.</param>
        <param name="ns">Espacio de nombres del elemento XML producido desde el método de servicio Web.</param>
        <param name="members">Matriz de objetos <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> que contiene entidades de código de .NET Framework que pertenecen a un método de servicio Web.</param>
        <param name="hasWrapperElement">
          <see langword="true" /> si deberían incluirse los elementos que corresponden a partes del mensaje de lenguaje de descripción de servicios Web (WSDL) en un elemento contenedor adicional de mensajes SOAP; en caso contrario, <see langword="false" />.</param>
        <param name="rpc">
          <see langword="true" /> si el método es una llamada a procedimiento remoto; de lo contrario, <see langword="false" />.</param>
        <param name="openModel">
          <see langword="true" /> para especificar que el tipo de esquema generado se marcará con el elemento <see langword="&lt;xs:anyAttribute&gt;" />; de lo contrario, <see langword="false" />.</param>
        <param name="access">Uno de los valores de <see cref="T:System.Xml.Serialization.XmlMappingAccess" />. El valor predeterminado es <see langword="None" />.</param>
        <summary>Genera las asignaciones de tipo internas para obtener información de un método de servicio Web.</summary>
        <returns>
          <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> que contiene las asignaciones.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="ImportTypeMapping">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Genera una asignación a un elemento del esquema XML para un tipo de .NET Framework especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ImportTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlTypeMapping ^ ImportTypeMapping(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">El tipo de .NET Framework para el que se genera una asignación de tipos.</param>
        <summary>Genera una asignación a un elemento del esquema XML para un tipo de .NET Framework especificado.</summary>
        <returns>Asignación .NET Framework interna de un tipo a un elemento de esquema XML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No es necesario llamar a la <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> método directamente.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping (Type type, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(class System.Type type, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlTypeMapping ^ ImportTypeMapping(Type ^ type, System::String ^ defaultNamespace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">El tipo de .NET Framework para el que se genera una asignación de tipos.</param>
        <param name="defaultNamespace">El espacio de nombres XML predeterminado que se va a utilizar.</param>
        <summary>Genera una asignación a un elemento de esquema XML para un tipo de .NET Framework, utilizando el tipo y el espacio de nombres especificados.</summary>
        <returns>Asignación .NET Framework interna de un tipo a un elemento de esquema XML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No es necesario llamar a la <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> método directamente.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping (Type type, System.Xml.Serialization.XmlRootAttribute root);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(class System.Type type, class System.Xml.Serialization.XmlRootAttribute root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlTypeMapping ^ ImportTypeMapping(Type ^ type, System::Xml::Serialization::XmlRootAttribute ^ root);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" />
      </Parameters>
      <Docs>
        <param name="type">El tipo de .NET Framework para el que se genera una asignación de tipos.</param>
        <param name="root">Un atributo <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que se aplica al tipo.</param>
        <summary>Genera una asignación a un elemento de esquema XML para un tipo de .NET Framework, utilizando el tipo y el atributo especificados.</summary>
        <returns>Un <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que representa una asignación de un tipo de .NET Framework a un elemento de esquema XML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No es necesario llamar a la <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> método directamente.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping (Type type, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(class System.Type type, class System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlTypeMapping ^ ImportTypeMapping(Type ^ type, System::Xml::Serialization::XmlRootAttribute ^ root, System::String ^ defaultNamespace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">El tipo de .NET Framework para el que se genera una asignación de tipos.</param>
        <param name="root">Un atributo <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que se aplica al tipo.</param>
        <param name="defaultNamespace">El espacio de nombres XML predeterminado que se va a utilizar.</param>
        <summary>Genera una asignación a un elemento de esquema XML para un tipo de .NET Framework, utilizando el tipo, el atributo y el espacio de nombres especificados.</summary>
        <returns>
          <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que contiene la asignación .NET Framework interna de un tipo a un elemento de esquema XML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No es necesario llamar a la <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> método directamente.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IncludeType">
      <MemberSignature Language="C#" Value="public void IncludeType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void IncludeType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncludeType(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">El tipo de .NET Framework para el que se guarda la información de asignación de tipos.</param>
        <summary>Incluye asignaciones para un tipo para su uso posterior cuando se invoquen los métodos de importación.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No es necesario llamar a la <xref:System.Xml.Serialization.XmlReflectionImporter.IncludeType%2A> método directamente.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IncludeTypes">
      <MemberSignature Language="C#" Value="public void IncludeTypes (System.Reflection.ICustomAttributeProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void IncludeTypes(class System.Reflection.ICustomAttributeProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IncludeTypes (provider As ICustomAttributeProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncludeTypes(System::Reflection::ICustomAttributeProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Reflection.ICustomAttributeProvider" />
      </Parameters>
      <Docs>
        <param name="provider">Una instancia de la clase <see cref="T:System.Reflection.ICustomAttributeProvider" /> que contiene los atributos personalizados derivados del atributo <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" />.</param>
        <summary>Incluye asignaciones para los tipos derivados para su uso posterior cuando se invoquen los métodos de importación.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>