<Type Name="SoapElementAttribute" FullName="System.Xml.Serialization.SoapElementAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="88427d5ecd10f5747eeafbe32e19a06777120f34" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56400436" /></Metadata><TypeSignature Language="C#" Value="public class SoapElementAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapElementAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapElementAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapElementAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapElementAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type SoapElementAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Especifica que <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar el valor del miembro público como un elemento XML SOAP codificado.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Xml.Serialization.SoapElementAttribute> clase pertenece a una familia de atributos que controla cómo el <xref:System.Xml.Serialization.XmlSerializer> serializa o deserializa un objeto como XML SOAP codificado. El XML resultante se ajusta a la sección 5 del documento de World Wide Web Consortium (www.w3.org), "Simple Object Access Protocol (SOAP) 1.1". Para obtener una lista completa de atributos similares, vea [atributos que controlan la serialización SOAP codificada](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md).  
  
 Para serializar un objeto como un mensaje SOAP codificado, se debe construir el <xref:System.Xml.Serialization.XmlSerializer> mediante un <xref:System.Xml.Serialization.XmlTypeMapping> creado con el <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> método de la <xref:System.Xml.Serialization.SoapReflectionImporter> clase.  
  
 Aplicar el <xref:System.Xml.Serialization.SoapElementAttribute> a un campo público para dirigir el <xref:System.Xml.Serialization.XmlSerializer> que serialice el campo como un elemento XML SOAP codificado.  
  
 Para obtener más información sobre el uso de atributos, vea [atributos](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 El siguiente ejemplo serializa una instancia de una clase denominada `Transportation` que contiene un campo denominado `Vehicle`. Un <xref:System.Xml.Serialization.SoapElementAttribute> se aplica al campo. Cuando se serializa el campo, el nombre del elemento XML es "Wheels" en lugar de "Vehículo". El `SerializeOverride` método crea un <xref:System.Xml.Serialization.SoapElementAttribute> y establece el <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> propiedad de un <xref:System.Xml.Serialization.SoapAttributes> a la <xref:System.Xml.Serialization.SoapElementAttribute>. El <xref:System.Xml.Serialization.SoapAttributes> se agrega a un <xref:System.Xml.Serialization.SoapAttributeOverrides> que se usa para crear un <xref:System.Xml.Serialization.XmlTypeMapping>. Un <xref:System.Xml.Serialization.XmlSerializer> se construye con la <xref:System.Xml.Serialization.XmlTypeMapping>y una instancia de la `Transportation` clase se serializa de nuevo. Dado que el <xref:System.Xml.Serialization.SoapElementAttribute> es usa para invalidar la serialización, el nombre del elemento XML generado es ahora "Truck" en lugar de "Wheels".  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapElementAttribute" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapElementAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapElementAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapElementAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapElementAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El siguiente ejemplo serializa una instancia de una clase denominada `Transportation` que contiene un campo denominado `Vehicle`. Un <xref:System.Xml.Serialization.SoapElementAttribute> se aplica al campo. Cuando se serializa el campo, el nombre del elemento XML es "Wheels" en lugar de "Vehículo". El `SerializeOverride` método crea un <xref:System.Xml.Serialization.SoapElementAttribute> y establece el <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> propiedad de un <xref:System.Xml.Serialization.SoapAttributes> a la <xref:System.Xml.Serialization.SoapElementAttribute>. El <xref:System.Xml.Serialization.SoapAttributes> se agrega a un <xref:System.Xml.Serialization.SoapAttributeOverrides> que se usa para crear un <xref:System.Xml.Serialization.XmlTypeMapping>. Un <xref:System.Xml.Serialization.XmlSerializer> se construye con la <xref:System.Xml.Serialization.XmlTypeMapping>y una instancia de la `Transportation` clase se serializa de nuevo. Dado que el <xref:System.Xml.Serialization.SoapElementAttribute> es usa para invalidar la serialización, el nombre del elemento XML generado es ahora "Truck" en lugar de "Wheels".  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapElementAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapElementAttribute(System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapElementAttribute : string -&gt; System.Xml.Serialization.SoapElementAttribute" Usage="new System.Xml.Serialization.SoapElementAttribute elementName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">Nombre de elemento XML del miembro serializado.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> y especifica el nombre del elemento XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El siguiente ejemplo serializa una instancia de una clase denominada `Transportation` que contiene un campo denominado `Vehicle`. Un <xref:System.Xml.Serialization.SoapElementAttribute> se aplica al campo. Cuando se serializa el campo, el nombre del elemento XML es "Wheels" en lugar de "Vehículo". El `SerializeOverride` método crea un <xref:System.Xml.Serialization.SoapElementAttribute> y establece el <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> propiedad de un <xref:System.Xml.Serialization.SoapAttributes> a la <xref:System.Xml.Serialization.SoapElementAttribute>. El <xref:System.Xml.Serialization.SoapAttributes> se agrega a un <xref:System.Xml.Serialization.SoapAttributeOverrides> que se usa para crear un <xref:System.Xml.Serialization.XmlTypeMapping>. Un <xref:System.Xml.Serialization.XmlSerializer> se construye con la <xref:System.Xml.Serialization.XmlTypeMapping>y una instancia de la `Transportation` clase se serializa de nuevo. Dado que el <xref:System.Xml.Serialization.SoapElementAttribute> es usa para invalidar la serialización, el nombre del elemento XML generado es ahora "Truck" en lugar de "Wheels".  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapElementAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.SoapElementAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el tipo de datos XSD (Lenguaje de definición de esquemas XML) del elemento XML generado.</summary>
        <value>Uno de los tipos de datos de esquemas XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En la tabla siguiente se enumera los tipos de datos simple de esquema XML con sus equivalentes. NET.  
  
 Para el esquema XML `base64Binary` y `hexBinary` tipos de datos, use una matriz de <xref:System.Byte> estructuras y aplicar un <xref:System.Xml.Serialization.SoapElementAttribute> con el <xref:System.Xml.Serialization.SoapAttributeAttribute.DataType%2A> establecida en "base64Binary" o "hexBinary", según corresponda. Para el esquema XML `time` y `date` tipos de datos, utilice el <xref:System.DateTime> escriba y aplicar el <xref:System.Xml.Serialization.SoapElementAttribute> con el <xref:System.Xml.Serialization.SoapElementAttribute.DataType%2A> establecida en "date" o "time".  
  
 Para cada tipo de datos de esquemas XML que se asigna a una cadena, se aplican los <xref:System.Xml.Serialization.SoapElementAttribute> con su <xref:System.Xml.Serialization.SoapElementAttribute.DataType%2A> propiedad establecida en el tipo de esquema XML. Tenga en cuenta que esto no cambia el formato de serialización, solo el esquema del miembro.  
  
> [!NOTE]
>  La propiedad distingue mayúsculas de minúsculas, por lo que debe establecer exactamente a uno de los tipos de datos de esquema XML.  
  
> [!NOTE]
>  Pasar los datos binarios como un archivo XML del elemento es más eficaz que pasarlo como un atributo XML.  
  
 Para obtener más información sobre los tipos de datos XML, vea el documento de World Wide Web Consortium (www.w3.org), "XML Schema Part 2: Tipos de datos".  
  
|Tipo de datos XSD|Tipo de datos de .NET|  
|-------------------|--------------------|  
|anyURI|<xref:System.String>|  
|base64Binary|Matriz de <xref:System.Byte> objetos|  
|booleano|<xref:System.Boolean>|  
|byte|<xref:System.SByte>|  
|date|<xref:System.DateTime>|  
|dateTime|<xref:System.DateTime>|  
|decimal|<xref:System.Decimal>|  
|double|<xref:System.Double>|  
|ENTITY|<xref:System.String>|  
|ENTIDADES|<xref:System.String>|  
|float|<xref:System.Single>|  
|gDay|<xref:System.String>|  
|gMonth|<xref:System.String>|  
|gMonthDay|<xref:System.String>|  
|gYear|<xref:System.String>|  
|gYearMonth|<xref:System.String>|  
|hexBinary|Matriz de <xref:System.Byte> objetos|  
|Id.|<xref:System.String>|  
|IDREF|<xref:System.String>|  
|IDREFS|<xref:System.String>|  
|int|<xref:System.Int32>|  
|enteros|<xref:System.String>|  
|lenguaje|<xref:System.String>|  
|long|<xref:System.Int64>|  
|nombre|<xref:System.String>|  
|NCName|<xref:System.String>|  
|negativeInteger|<xref:System.String>|  
|NMTOKEN|<xref:System.String>|  
|NMTOKENS|<xref:System.String>|  
|normalizedString|<xref:System.String>|  
|nonNegativeInteger|<xref:System.String>|  
|nonPositiveInteger|<xref:System.String>|  
|NOTATION|<xref:System.String>|  
|positiveInteger|<xref:System.String>|  
|QName|<xref:System.Xml.XmlQualifiedName>|  
|duration|<xref:System.String>|  
|cadena|<xref:System.String>|  
|short|<xref:System.Int16>|  
|hora|<xref:System.DateTime>|  
|token|<xref:System.String>|  
|unsignedByte|<xref:System.Byte>|  
|unsignedInt|<xref:System.UInt32>|  
|unsignedLong|<xref:System.UInt64>|  
|unsignedShort|<xref:System.UInt16>|  
  
   
  
## Examples  
 El siguiente ejemplo serializa una instancia de una clase denominada `Transportation` que contiene un campo denominado `Vehicle`. Un <xref:System.Xml.Serialization.SoapElementAttribute> se aplica al campo. Cuando se serializa el campo, el nombre del elemento XML es "Wheels" en lugar de "Vehículo". El `SerializeOverride` método crea un <xref:System.Xml.Serialization.SoapElementAttribute> y establece el <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> propiedad de un <xref:System.Xml.Serialization.SoapAttributes> a la <xref:System.Xml.Serialization.SoapElementAttribute>. El <xref:System.Xml.Serialization.SoapAttributes> se agrega a un <xref:System.Xml.Serialization.SoapAttributeOverrides> que se usa para crear un <xref:System.Xml.Serialization.XmlTypeMapping>. Un <xref:System.Xml.Serialization.XmlSerializer> se construye con la <xref:System.Xml.Serialization.XmlTypeMapping>y una instancia de la `Transportation` clase se serializa de nuevo. Dado que el <xref:System.Xml.Serialization.SoapElementAttribute> es usa para invalidar la serialización, el nombre del elemento XML generado es ahora "Truck" en lugar de "Wheels".  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapElementAttribute.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string with get, set" Usage="System.Xml.Serialization.SoapElementAttribute.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre del elemento XML generado.</summary>
        <value>Nombre del elemento XML generado. El valor predeterminado es el identificador de miembros.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El siguiente ejemplo serializa una instancia de una clase denominada `Transportation` que contiene un campo denominado `Vehicle`. Un <xref:System.Xml.Serialization.SoapElementAttribute> se aplica al campo. Cuando se serializa el campo, el nombre del elemento XML es "Wheels" en lugar de "Vehículo". El `SerializeOverride` método crea un <xref:System.Xml.Serialization.SoapElementAttribute> y establece el <xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A> propiedad de un <xref:System.Xml.Serialization.SoapAttributes> a la <xref:System.Xml.Serialization.SoapElementAttribute>. El <xref:System.Xml.Serialization.SoapAttributes> se agrega a un <xref:System.Xml.Serialization.SoapAttributeOverrides> que se usa para crear un <xref:System.Xml.Serialization.XmlTypeMapping>. Un <xref:System.Xml.Serialization.XmlSerializer> se construye con la <xref:System.Xml.Serialization.XmlTypeMapping>y una instancia de la `Transportation` clase se serializa de nuevo. Dado que el <xref:System.Xml.Serialization.SoapElementAttribute> es usa para invalidar la serialización, el nombre del elemento XML generado es ahora "Truck" en lugar de "Wheels".  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapElementAttribute.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="System.Xml.Serialization.SoapElementAttribute.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar un miembro con el atributo <see langword="xsi:null" /> establecido en "1".</summary>
        <value><see langword="true" /> si <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera el atributo <see langword="xsi:null" />; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Permite que la especificación del esquema XML para las estructuras de un documento XML indicar explícitamente que falta contenido de un elemento. Este tipo de elemento contiene el atributo `xsi:null` establecido en "1". Para obtener más información, vea la especificación de World Wide Web Consortium (www.w3.org) denominada "XML Schema Part 1: Estructuras".  
  
 Si el <xref:System.Xml.Serialization.SoapElementAttribute.IsNullable%2A> propiedad está establecida en `true`, `xsi:null` se genera el atributo para los miembros de clase que se han establecido para `null`. Por ejemplo, si se establece un campo denominado `MyStringArray` a `null`, el <xref:System.Xml.Serialization.XmlSerializer> genera el siguiente código XML.  
  
```  
<MyStringArray xsi:null = "1" />  
```  
  
 Si el <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> propiedad es `false`, se generará ningún elemento XML.  
  
> [!NOTE]
>  No se puede aplicar el <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> propiedad a un miembro de un tipo como un tipo de valor porque no puede contener un tipo de valor `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>