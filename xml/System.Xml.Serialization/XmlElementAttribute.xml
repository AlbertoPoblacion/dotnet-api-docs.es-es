<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlElementAttribute.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac543848081dc33d6961ce9a4aca16c8940293a9226.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">43848081dc33d6961ce9a4aca16c8940293a9226</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>Indicates that a public field or property represents an XML element when the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes or deserializes the object that contains it.</source>
          <target state="translated">Indica que un campo público o una propiedad pública representa un elemento XML, cuando <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializa o deserializa el objeto que lo contiene.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> belongs to a family of attributes that controls how the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> serializes or deserializes an object.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> pertenece a una familia de atributos que controla cómo el <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> serializa o deserializa un objeto.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>For a complete list of similar attributes, see <bpt id="p1">[</bpt>Attributes That Control XML Serialization<ept id="p1">](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)</ept>.</source>
          <target state="translated">Para obtener una lista completa de atributos similares, vea <bpt id="p1">[</bpt>atributos que controlan la serialización XML<ept id="p1">](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)</ept>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>An XML document usually contains XML elements, each of which consists of three parts: an opening tag with possible attributes, a closing tag, and the data between the tags.</source>
          <target state="translated">Normalmente, un documento XML contiene elementos XML, cada uno de los cuales consta de tres partes: una etiqueta de apertura con los atributos posibles, una etiqueta de cierre y los datos entre las etiquetas.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>XML tags can be nested--that is, the data between tags can also be XML elements.</source>
          <target state="translated">Etiquetas XML se pueden anidar, que es, los datos entre etiquetas también pueden ser elementos XML.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>This capacity of one element to enclose another allows the document to contain hierarchies of data.</source>
          <target state="translated">Esta capacidad de un elemento que se encierra otra permite que el documento contenga varias jerarquías de datos.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>An XML element can also include attributes.</source>
          <target state="translated">Un elemento XML también puede incluir atributos.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>Apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to public fields or public read/write properties to control characteristics of the XML elements such as the element name and namespace.</source>
          <target state="translated">Aplicar el <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> a campos públicos o propiedades públicas de lectura/escritura para controlar las características de los elementos XML como el nombre de elemento y espacio de nombres.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> can be applied multiple times to a field that returns an array of objects.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> puede aplicarse varias veces a un campo que devuelve una matriz de objetos.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>The purpose of this is to specify (through the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> property) different types that can be inserted into the array.</source>
          <target state="translated">La finalidad de esto consiste en especificar (a través de la <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> propiedad) tipos diferentes que se pueden insertar en la matriz.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>For example, the array in the following C# code accepts both strings and integers.</source>
          <target state="translated">Por ejemplo, la matriz en el siguiente código de C# acepta cadenas y números enteros.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>This results in XML that might resemble the following.</source>
          <target state="translated">Esto da lugar a XML que puede ser similar a lo siguiente.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>Note that when you apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> multiple times without specifying an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A&gt;</ph> property value, the elements are named after the type of the acceptable objects.</source>
          <target state="translated">Tenga en cuenta que, al aplicar el <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> varias veces sin especificar un <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A&gt;</ph> valor de propiedad, los elementos se denominan con el tipo de los objetos aceptables.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>If you apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to a field or property that returns an array, the items in the array are encoded as a sequence of XML elements.</source>
          <target state="translated">Si aplica el <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> a un campo o propiedad que devuelve una matriz, los elementos de la matriz se codifican como una secuencia de elementos XML.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>In contrast if an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> is not applied to such a field or property, the items in the array are encoded as a sequence of elements, nested under an element named after the field or property.</source>
          <target state="translated">En cambio si un <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> no se aplica a este campo o propiedad, los elementos de la matriz se codifican como una secuencia de elementos, anidados bajo un elemento con el nombre del campo o propiedad.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>(Use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute&gt;</ph> attributes to control how an array is serialized.)</source>
          <target state="translated">(Use el <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph> y <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute&gt;</ph> atributos para controlar cómo se serializa una matriz.)</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>You can set the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> property to specify a type that is derived from the type of the original field or property--that is, the field or property to which you have applied the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph>.</source>
          <target state="translated">Puede establecer la <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> propiedad para especificar un tipo que se deriva el tipo de campo o propiedad--original es decir, campo o propiedad a la que se haya aplicado el <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>If a field or property returns an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, you can apply multiple instances of the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to the member.</source>
          <target state="translated">Si un campo o una propiedad devuelve un <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, puede aplicar varias instancias de la <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> al miembro.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>For each instance, set the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> property to a type of object that can be inserted into the array.</source>
          <target state="translated">Para cada instancia, establezca el <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> propiedad a un tipo de objeto que se pueden insertar en la matriz.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>For more information about using attributes, see <bpt id="p1">[</bpt>Attributes<ept id="p1">](~/docs/standard/attributes/index.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre el uso de atributos, vea <bpt id="p1">[</bpt>atributos<ept id="p1">](~/docs/standard/attributes/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>You can use the word <ph id="ph1">`XmlElement`</ph> in your code instead of the longer <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph>.</source>
          <target state="translated">Puede usar la palabra <ph id="ph1">`XmlElement`</ph> en el código en lugar de la forma más larga <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>The following example serializes a class named <ph id="ph1">`Group`</ph> and applies the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to several of its members.</source>
          <target state="translated">En el ejemplo siguiente se serializa una clase denominada <ph id="ph1">`Group`</ph> y se aplica el <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> a varios de sus miembros.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>The field named <ph id="ph1">`Employees`</ph> returns an array of <ph id="ph2">`Employee`</ph> objects.</source>
          <target state="translated">El campo denominado <ph id="ph1">`Employees`</ph> devuelve una matriz de <ph id="ph2">`Employee`</ph> objetos.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> specifies that the resulting XML will not be nested (which is the default behavior of items in an array).</source>
          <target state="translated">En este caso, el <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> especifica que el XML resultante no se anidarán (que es el comportamiento predeterminado de los elementos de una matriz).</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor">
          <source>The following example applies the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to a class.</source>
          <target state="translated">El ejemplo siguiente aplica el <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> a una clase.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
          <source>The XML element name of the serialized member.</source>
          <target state="translated">Nombre de elemento XML del miembro serializado.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph> class and specifies the name of the XML element.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph> y especifica el nombre del elemento XML.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> uses the member name as the XML element name when serializing a class instance.</source>
          <target state="translated">De forma predeterminada, la <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> utiliza el nombre de miembro como el nombre del elemento XML al serializar una instancia de clase.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
          <source>For example, a field named <ph id="ph1">`Vehicle`</ph> generates an XML element named <ph id="ph2">`Vehicle`</ph>.</source>
          <target state="translated">Por ejemplo, un campo denominado <ph id="ph1">`Vehicle`</ph> genera un elemento XML denominado <ph id="ph2">`Vehicle`</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
          <source>However if you need a different element, such as <ph id="ph1">`Cars`</ph>, pass it in the <ph id="ph2">`elementName`</ph> parameter.</source>
          <target state="translated">Sin embargo si necesita un elemento diferente, como <ph id="ph1">`Cars`</ph>, páselo en la <ph id="ph2">`elementName`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
          <source>The following example shows a simple class that contains a single field named <ph id="ph1">`Vehicles`</ph>.</source>
          <target state="translated">En el ejemplo siguiente se muestra una clase simple que contiene un solo campo denominado <ph id="ph1">`Vehicles`</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
          <source>The example applies the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to the field and includes the <ph id="ph2">`elementName`</ph> parameter, thereby instructing the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to generate XML elements named "Cars" rather than "Vehicles".</source>
          <target state="translated">El ejemplo se aplica el <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> al campo e incluye el <ph id="ph2">`elementName`</ph> parámetro, con lo que se indica a la <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> para generar los elementos XML denominados "Cars" en lugar de "Vehículos".</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of an object derived from the member's type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> de un objeto derivado del tipo de miembro.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph> class and specifies a type for the member to which the <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph> is applied.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph> y especifica un tipo de miembro al que <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph> es aplicado.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
          <source>This type is used by the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> when serializing or deserializing object that contains it.</source>
          <target state="translated">Este tipo es utilizado por <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> al serializar o deserializar el objeto que lo contiene.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
          <source>Use the <ph id="ph1">`type`</ph> parameter to specify a type that is derived from a base class.</source>
          <target state="translated">Use la <ph id="ph1">`type`</ph> parámetro para especificar un tipo que se deriva de una clase base.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
          <source>For example, suppose a property named <ph id="ph1">`MyAnimal`</ph> returns an <ph id="ph2">`Animal`</ph> object.</source>
          <target state="translated">Por ejemplo, suponga que una propiedad denominada <ph id="ph1">`MyAnimal`</ph> devuelve un <ph id="ph2">`Animal`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
          <source>You want to enhance the object, so you create a new class named <ph id="ph1">`Mammal`</ph> that inherits from the <ph id="ph2">`Animal`</ph> class.</source>
          <target state="translated">Desea mejorar el objeto, es necesario crear una nueva clase denominada <ph id="ph1">`Mammal`</ph> que herede de la <ph id="ph2">`Animal`</ph> clase.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
          <source>To instruct the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to accept the <ph id="ph2">`Mammal`</ph> class when it serializes the <ph id="ph3">`MyAnimal`</ph> property, pass the <ph id="ph4">&lt;xref:System.Type&gt;</ph> of the <ph id="ph5">`Mammal`</ph> class to the constructor.</source>
          <target state="translated">Para indicar a la <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> para aceptar el <ph id="ph2">`Mammal`</ph> clase cuando serializa el <ph id="ph3">`MyAnimal`</ph> propiedad, pase el <ph id="ph4">&lt;xref:System.Type&gt;</ph> de la <ph id="ph5">`Mammal`</ph> clase al constructor.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
          <source>The following example serializes a class named <ph id="ph1">`Orchestra`</ph> that contains a single field named <ph id="ph2">`Instruments`</ph>, which returns an array of <ph id="ph3">`Instrument`</ph> objects.</source>
          <target state="translated">En el ejemplo siguiente se serializa una clase denominada <ph id="ph1">`Orchestra`</ph> que contiene un solo campo denominado <ph id="ph2">`Instruments`</ph>, que devuelve una matriz de <ph id="ph3">`Instrument`</ph> objetos.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
          <source>A second class named <ph id="ph1">`Brass`</ph> inherits from the <ph id="ph2">`Instrument`</ph> class.</source>
          <target state="translated">Una segunda clase denominada <ph id="ph1">`Brass`</ph> hereda de la <ph id="ph2">`Instrument`</ph> clase.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
          <source>The example applies the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to the <ph id="ph2">`Instruments`</ph> field, and specifies the <ph id="ph3">`Brass`</ph> type, allowing the <ph id="ph4">`Instruments`</ph> field to accept <ph id="ph5">`Brass`</ph> objects.</source>
          <target state="translated">El ejemplo se aplica el <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> a la <ph id="ph2">`Instruments`</ph> campo y especifica la <ph id="ph3">`Brass`</ph> escribe, lo que permite el <ph id="ph4">`Instruments`</ph> campo para aceptar <ph id="ph5">`Brass`</ph> objetos.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
          <source>The example also specifies the name of the XML element by setting the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A&gt;</ph> property.</source>
          <target state="translated">El ejemplo también especifica el nombre del elemento XML estableciendo la <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>The XML element name of the serialized member.</source>
          <target state="translated">Nombre de elemento XML del miembro serializado.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of an object derived from the member's type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> de un objeto derivado del tipo de miembro.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph> and specifies the name of the XML element and a derived type for the member to which the <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph> is applied.</source>
          <target state="translated">Inicializa una nueva instancia de <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph> y especifica el nombre del elemento XML así como un tipo derivado del miembro al que se ha aplicado <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>This member type is used when the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes the object that contains it.</source>
          <target state="translated">Este tipo de miembro se utiliza cuando <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializa el objeto que lo contiene.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> uses the member name as the XML element name when serializing a class instance.</source>
          <target state="translated">De forma predeterminada, la <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> utiliza el nombre de miembro como el nombre del elemento XML al serializar una instancia de clase.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>For example, a field named <ph id="ph1">`Vehicle`</ph> generates an XML element named <ph id="ph2">`Vehicle`</ph>.</source>
          <target state="translated">Por ejemplo, un campo denominado <ph id="ph1">`Vehicle`</ph> genera un elemento XML denominado <ph id="ph2">`Vehicle`</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>However, if you need a different element, such as <ph id="ph1">`Cars`</ph>, pass it in the <ph id="ph2">`elementName`</ph> parameter.</source>
          <target state="translated">Sin embargo, si tiene un elemento diferente, como <ph id="ph1">`Cars`</ph>, páselo en la <ph id="ph2">`elementName`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>Use the <ph id="ph1">`type`</ph> parameter to specify a type that is derived from a base class.</source>
          <target state="translated">Use la <ph id="ph1">`type`</ph> parámetro para especificar un tipo que se deriva de una clase base.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>For example, suppose a property named <ph id="ph1">`MyAnimal`</ph> returns an <ph id="ph2">`Animal`</ph> object.</source>
          <target state="translated">Por ejemplo, suponga que una propiedad denominada <ph id="ph1">`MyAnimal`</ph> devuelve un <ph id="ph2">`Animal`</ph> objeto.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>You want to enhance the object, so you create a new class named <ph id="ph1">`Mammal`</ph> that inherits from the <ph id="ph2">`Animal`</ph> class.</source>
          <target state="translated">Desea mejorar el objeto, es necesario crear una nueva clase denominada <ph id="ph1">`Mammal`</ph> que herede de la <ph id="ph2">`Animal`</ph> clase.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>To instruct the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to accept the <ph id="ph2">`Mammal`</ph> class when it serializes the <ph id="ph3">`MyAnimal`</ph> property, pass the <ph id="ph4">&lt;xref:System.Type&gt;</ph> of the <ph id="ph5">`Mammal`</ph> class to the constructor.</source>
          <target state="translated">Para indicar a la <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> para aceptar el <ph id="ph2">`Mammal`</ph> clase cuando serializa el <ph id="ph3">`MyAnimal`</ph> propiedad, pase el <ph id="ph4">&lt;xref:System.Type&gt;</ph> de la <ph id="ph5">`Mammal`</ph> clase al constructor.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>The following example serializes a class named <ph id="ph1">`Orchestra`</ph> that contains a single field named <ph id="ph2">`Instruments`</ph>, which returns an array of <ph id="ph3">`Instrument`</ph> objects.</source>
          <target state="translated">En el ejemplo siguiente se serializa una clase denominada <ph id="ph1">`Orchestra`</ph> que contiene un solo campo denominado <ph id="ph2">`Instruments`</ph>, que devuelve una matriz de <ph id="ph3">`Instrument`</ph> objetos.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>A second class named <ph id="ph1">`Brass`</ph> inherits from the <ph id="ph2">`Instrument`</ph> class.</source>
          <target state="translated">Una segunda clase denominada <ph id="ph1">`Brass`</ph> hereda de la <ph id="ph2">`Instrument`</ph> clase.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>The example applies the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to the <ph id="ph2">`Instruments`</ph> field, and specifies the <ph id="ph3">`Brass`</ph> type, allowing the <ph id="ph4">`Instruments`</ph> field to accept <ph id="ph5">`Brass`</ph> objects.</source>
          <target state="translated">El ejemplo se aplica el <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> a la <ph id="ph2">`Instruments`</ph> campo y especifica la <ph id="ph3">`Brass`</ph> escribe, lo que permite el <ph id="ph4">`Instruments`</ph> campo para aceptar <ph id="ph5">`Brass`</ph> objetos.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>The example also specifies the name of the XML element by setting the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A&gt;</ph> property.</source>
          <target state="translated">El ejemplo también especifica el nombre del elemento XML estableciendo la <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>Gets or sets the XML Schema definition (XSD) data type of the XML element generated by the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph>.</source>
          <target state="translated">Obtiene o establece el tipo de datos de la definición de esquemas XML (XSD) del elemento XM1 generado por <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>An XML Schema data type, as defined by the World Wide Web Consortium (www.w3.org) document named "XML Schema Part 2: Datatypes".</source>
          <target state="translated">Tipo de datos de esquemas XML, tal como se define en el documento del Consorcio WWC (www.w3.org) titulado "XML Schema Part 2: Datatypes".</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>The following table lists the XML Schema simple data types with their.NET equivalents.</source>
          <target state="translated">En la tabla siguiente se enumera los tipos de datos simple de esquema XML con y equivalentes.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>For the XML Schema <ph id="ph1">`base64Binary`</ph> and <ph id="ph2">`hexBinary`</ph> data types, use an array of <ph id="ph3">&lt;xref:System.Byte&gt;</ph> structures, and apply a <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> with the <ph id="ph5">&lt;xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A&gt;</ph> set to "base64Binary" or "hexBinary", as appropriate.</source>
          <target state="translated">Para el esquema XML <ph id="ph1">`base64Binary`</ph> y <ph id="ph2">`hexBinary`</ph> tipos de datos, use una matriz de <ph id="ph3">&lt;xref:System.Byte&gt;</ph> estructuras y aplicar un <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> con el <ph id="ph5">&lt;xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A&gt;</ph> establecida en "base64Binary" o "hexBinary", según corresponda.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>For the XML Schema <ph id="ph1">`time`</ph> and <ph id="ph2">`date`</ph> data types, use the <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> type and apply the <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> with the <ph id="ph5">&lt;xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A&gt;</ph> set to "date" or "time".</source>
          <target state="translated">Para el esquema XML <ph id="ph1">`time`</ph> y <ph id="ph2">`date`</ph> tipos de datos, use la <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> tipo y aplique el <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> con el <ph id="ph5">&lt;xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A&gt;</ph> establecida en "date" o "time".</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>For every XML Schema type that is mapped to a string, apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> with its <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A&gt;</ph> property set to the XML Schema type.</source>
          <target state="translated">Para cada tipo de esquema XML que se asigna a una cadena, aplique la <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> con su <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A&gt;</ph> propiedad establecida en el tipo de esquema XML.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>It is possible that this can change the serialization format, not only the schema for the member.</source>
          <target state="translated">Es posible que esto puede cambiar el formato de serialización, no solo el esquema correspondiente al miembro.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>The property is case-sensitive, so you must set it exactly to one of the XML Schema data types.</source>
          <target state="translated">La propiedad distingue mayúsculas de minúsculas, por lo que debe establecer exactamente a uno de los tipos de datos de esquema XML.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>Passing binary data as an XML element is more efficient than passing it as an XML Schema attribute.</source>
          <target state="translated">Pasar los datos binarios como un documento XML del elemento es más eficaz que pasarlo como un atributo de esquema XML.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>For more information about XML data types, see the World Wide Web Consortium (www.w3.org) document named "XML Schema Part 2: Datatypes".</source>
          <target state="translated">Para obtener más información sobre los tipos de datos XML, vea el documento del Consorcio WWC (www.w3.org) denominado "XML Schema Part 2: Datatypes".</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>XSD data type</source>
          <target state="translated">Tipo de datos XSD</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>.NET data type</source>
          <target state="translated">Tipo de datos de .NET</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>anyURI</source>
          <target state="translated">anyURI</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>base64Binary</source>
          <target state="translated">base64Binary</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>Array of <ph id="ph1">&lt;xref:System.Byte&gt;</ph> objects</source>
          <target state="translated">Matriz de <ph id="ph1">&lt;xref:System.Byte&gt;</ph> objetos</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>boolean</source>
          <target state="translated">booleano</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>byte</source>
          <target state="translated">byte</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>date</source>
          <target state="translated">date</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>dateTime</source>
          <target state="translated">dateTime</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>decimal</source>
          <target state="translated">decimal</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>double</source>
          <target state="translated">double</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>ENTITY</source>
          <target state="translated">ENTITY</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>ENTITIES</source>
          <target state="translated">ENTIDADES</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>float</source>
          <target state="translated">float</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>gDay</source>
          <target state="translated">gDay</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>gMonth</source>
          <target state="translated">gMonth</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>gMonthDay</source>
          <target state="translated">gMonthDay</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>gYear</source>
          <target state="translated">gYear</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>gYearMonth</source>
          <target state="translated">gYearMonth</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>hexBinary</source>
          <target state="translated">hexBinary</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>Array of <ph id="ph1">&lt;xref:System.Byte&gt;</ph> objects</source>
          <target state="translated">Matriz de <ph id="ph1">&lt;xref:System.Byte&gt;</ph> objetos</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>ID</source>
          <target state="translated">Id.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>IDREF</source>
          <target state="translated">IDREF</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>IDREFS</source>
          <target state="translated">IDREFS</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>int</source>
          <target state="translated">int</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>integer</source>
          <target state="translated">enteros</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>language</source>
          <target state="translated">lenguaje</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>long</source>
          <target state="translated">long</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>Name</source>
          <target state="translated">nombre</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>NCName</source>
          <target state="translated">NCName</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>negativeInteger</source>
          <target state="translated">negativeInteger</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>NMTOKEN</source>
          <target state="translated">NMTOKEN</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>NMTOKENS</source>
          <target state="translated">NMTOKENS</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>normalizedString</source>
          <target state="translated">normalizedString</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>nonNegativeInteger</source>
          <target state="translated">nonNegativeInteger</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>nonPositiveInteger</source>
          <target state="translated">nonPositiveInteger</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>NOTATION</source>
          <target state="translated">NOTATION</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>positiveInteger</source>
          <target state="translated">positiveInteger</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>QName</source>
          <target state="translated">QName</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>duration</source>
          <target state="translated">duration</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>string</source>
          <target state="translated">cadena</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>short</source>
          <target state="translated">short</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>time</source>
          <target state="translated">hora</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>token</source>
          <target state="translated">token</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>unsignedByte</source>
          <target state="translated">unsignedByte</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>unsignedInt</source>
          <target state="translated">unsignedInt</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>unsignedLong</source>
          <target state="translated">unsignedLong</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>unsignedShort</source>
          <target state="translated">unsignedShort</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>The following example serializes a class named <ph id="ph1">`Group`</ph> that contains a field named <ph id="ph2">`ExtraInfo`</ph>, which returns an <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">En el ejemplo siguiente se serializa una clase denominada <ph id="ph1">`Group`</ph> que contiene un campo denominado <ph id="ph2">`ExtraInfo`</ph>, que devuelve un <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>The example applies two instances of the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to the field and specifies different <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A&gt;</ph> values for each instance.</source>
          <target state="translated">En el ejemplo se aplica dos instancias de la <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> al campo y especifica diferentes <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A&gt;</ph> valores para cada instancia.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>Each instance enables the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to serialize the specified types inserted into the array.</source>
          <target state="translated">Cada instancia permite el <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> para serializar los tipos especificados insertados en la matriz.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>The XML Schema data type you have specified cannot be mapped to the.NET data type.</source>
          <target state="translated">El tipo de datos de esquemas XML especificado no se puede asignar al tipo de datos .NET.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
          <source>Gets or sets the name of the generated XML element.</source>
          <target state="translated">Obtiene o establece el nombre del elemento XML generado.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
          <source>The name of the generated XML element.</source>
          <target state="translated">Nombre del elemento XML generado.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
          <source>The default is the member identifier.</source>
          <target state="translated">El valor predeterminado es el identificador de miembros.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
          <source>Specify an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A&gt;</ph> if you want the name of the generated XML element to differ from the member's identifier.</source>
          <target state="translated">Especifique un <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A&gt;</ph> si desea que el nombre del elemento XML generado sea diferente del identificador del miembro.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
          <source>You can set the same <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A&gt;</ph> value to more than one class member if the generated XML document uses XML namespaces to distinguish between the identically named members.</source>
          <target state="translated">Puede establecer las mismas <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A&gt;</ph> valor a más de un miembro de clase si el documento XML generado utiliza espacios de nombres XML para distinguir entre los miembros con el mismo nombre.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
          <source>For details on how to use namespaces and prefixed names in the XML document, see the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph> class.</source>
          <target state="translated">Para obtener más información sobre cómo usar los espacios de nombres y nombres con prefijo en el documento XML, vea la <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A&gt;</ph> property of an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to a new value.</source>
          <target state="translated">El ejemplo siguiente se establece la <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A&gt;</ph> propiedad de un <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> a un nuevo valor.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlElementAttribute.Form">
          <source>Gets or sets a value that indicates whether the element is qualified.</source>
          <target state="translated">Obtiene o establece un valor que indica si el elemento está calificado.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Form">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaForm" /&gt;</ph> values.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaForm" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Form">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Xml.Schema.XmlSchemaForm.None" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see cref="F:System.Xml.Schema.XmlSchemaForm.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Form">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A&gt;</ph> property determines whether an XML element is qualified or unqualified.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A&gt;</ph> propiedad determina si un elemento XML está o no calificado.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Form">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A&gt;</ph> property conforms to the World Wide Web Consortium (www.w3.org) 1999 specification, "Namespaces in XML".</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A&gt;</ph> propiedad se ajusta a la especificación de 1999 del Consorcio WWC (www.w3.org), "Espacios de nombres en XML".</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Form">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A&gt;</ph> property is set to any value, attempting to set the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Form%2A&gt;</ph> property to <ph id="ph3">`XmlSchemaForm.Unqualified`</ph> throws an exception.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A&gt;</ph> propiedad se establece en cualquier valor, al intentar establecer el <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Form%2A&gt;</ph> propiedad <ph id="ph3">`XmlSchemaForm.Unqualified`</ph> produce una excepción.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Form">
          <source>The default setting, <ph id="ph1">`XmlSchemaForm.None`</ph>, instructs the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to check the schema for the XML document to determine whether the namespace is qualified.</source>
          <target state="translated">El valor predeterminado, <ph id="ph1">`XmlSchemaForm.None`</ph>, indica el <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> para comprobar el esquema del documento XML determinar si el espacio de nombres se han calificado.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Form">
          <source>If the schema does not specify a value for an individual element or attribute, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> uses the <ph id="ph2">`elementFormDefault`</ph> and <ph id="ph3">`attributeFormDefault`</ph> values to determine whether an element or attribute is qualified.</source>
          <target state="translated">Si el esquema no especifica un valor para un elemento o atributo individual, el <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> utiliza la <ph id="ph2">`elementFormDefault`</ph> y <ph id="ph3">`attributeFormDefault`</ph> valores para determinar si un elemento o atributo se han calificado.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Form">
          <source>The following XML code shows a schema:</source>
          <target state="translated">El siguiente código XML muestra un esquema:</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Form">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> reads the schema, the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A&gt;</ph> value for both the <ph id="ph3">`Name`</ph> and <ph id="ph4">`Number`</ph> is <ph id="ph5">`XmlSchemaForm.None`</ph>, but the <ph id="ph6">`Name`</ph> element is qualified, while the <ph id="ph7">`Number`</ph> element is unqualified.</source>
          <target state="translated">Cuando el <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> lee el esquema, el <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A&gt;</ph> valor tanto para la <ph id="ph3">`Name`</ph> y <ph id="ph4">`Number`</ph> es <ph id="ph5">`XmlSchemaForm.None`</ph>, pero la <ph id="ph6">`Name`</ph> elemento se califica, mientras el <ph id="ph7">`Number`</ph> elemento es unqualified.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Form">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Form%2A&gt;</ph> property to <ph id="ph2">`XmlSchemaForm.Unqualified`</ph>.</source>
          <target state="translated">El ejemplo siguiente se establece la <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Form%2A&gt;</ph> propiedad <ph id="ph2">`XmlSchemaForm.Unqualified`</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> must serialize a member that is set to <ph id="ph2">&lt;see langword="null" /&gt;</ph> as an empty tag with the <ph id="ph3">&lt;see langword="xsi:nil" /&gt;</ph> attribute set to <ph id="ph4">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Obtiene o establece un valor que indica si <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> debe serializar un miembro establecido en <ph id="ph2">&lt;see langword="null" /&gt;</ph> como una etiqueta vacía con el atributo <ph id="ph3">&lt;see langword="xsi:nil" /&gt;</ph> establecido en <ph id="ph4">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> generates the <ph id="ph3">&lt;see langword="xsi:nil" /&gt;</ph> attribute; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> genera el atributo <ph id="ph3">&lt;see langword="xsi:nil" /&gt;</ph>; en caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source>The XML schema specification for structures allows an XML document to explicitly signal that an element's content is missing.</source>
          <target state="translated">La especificación del esquema XML para estructuras permite a un documento XML indicar explícitamente que el contenido de un elemento no está presente.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source>Such an element contains the attribute <ph id="ph1">`xsi:nil`</ph> set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Este tipo de elementos contiene el atributo <ph id="ph1">`xsi:nil`</ph> establecido en <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source>For more information, see the World Wide Web Consortium (www.w3.org) specification, "XML Schema Part 1: Structures".</source>
          <target state="translated">Para obtener más información, vea la especificación del Consorcio WWC (www.w3.org), "XML Schema Part 1: Structures".</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the <ph id="ph3">`xsi:nil`</ph> attribute is generated for class members that have been set to <ph id="ph4">`null`</ph>.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A&gt;</ph> propiedad está establecida en <ph id="ph2">`true`</ph>, <ph id="ph3">`xsi:nil`</ph> se genera el atributo para los miembros de clase que se han establecido en <ph id="ph4">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source>For example if you set a field named <ph id="ph1">`MyStringArray`</ph> to <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> generates the following XML code.</source>
          <target state="translated">Por ejemplo, si se establece un campo denominado <ph id="ph1">`MyStringArray`</ph> a <ph id="ph2">`null`</ph>, el <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> genera el siguiente código XML.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, no XML element is generated for class members that have been set to <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A&gt;</ph> propiedad es <ph id="ph2">`false`</ph>, se generará ningún elemento XML para los miembros de clase que se han establecido en <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source>You cannot apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A&gt;</ph> property to a member typed as a value type because a value type cannot contain <ph id="ph2">`null`</ph>.</source>
          <target state="translated">No se puede aplicar el <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A&gt;</ph> propiedad a un miembro de un tipo como un tipo de valor que no puede contener un tipo de valor <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source>Additionally, you cannot set this property to <ph id="ph1">`false`</ph> for nullable value types.</source>
          <target state="translated">Además, no se puede establecer esta propiedad <ph id="ph1">`false`</ph> para tipos de valor que aceptan valores NULL.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source>When such types are <ph id="ph1">`null`</ph>, they will be serialized by setting <ph id="ph2">`xsi:nil`</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Cuando esos tipos son <ph id="ph1">`null`</ph>, se serializarán estableciendo <ph id="ph2">`xsi:nil`</ph> a <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source>The following example shows a field with the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> applied to it, and the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A&gt;</ph> property set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">En el ejemplo siguiente se muestra un campo con el <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> aplicado y la <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A&gt;</ph> propiedad establecida en <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlElementAttribute.Namespace">
          <source>Gets or sets the namespace assigned to the XML element that results when the class is serialized.</source>
          <target state="translated">Obtiene o establece el espacio de nombres asignado al elemento XML como resultado de la serialización de la clase.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Namespace">
          <source>The namespace of the XML element.</source>
          <target state="translated">Espacio de nombres del elemento XML.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Namespace">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A&gt;</ph> property conforms to the World Wide Web Consortium (www.w3.org) specification, "Namespaces in XML".</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A&gt;</ph> propiedad se ajusta a la especificación del Consorcio WWC (www.w3.org), "Espacios de nombres en XML".</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Namespace">
          <source>To create namespaces that are associated with a prefix, you must create an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph> that contains the namespaces and prefixes used in the XML document.</source>
          <target state="translated">Para crear espacios de nombres que están asociados con un prefijo, primero debe crear un <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph> que contiene los espacios de nombres y prefijos utilizados en el documento XML.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Namespace">
          <source>As you set the namespace for each <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph>, it must match one of the namespaces in the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph>.</source>
          <target state="translated">Como establezca el espacio de nombres para cada uno de ellos <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph>, debe coincidir con uno de los espacios de nombres en el <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Namespace">
          <source>When the XML is generated, each array is correctly prefixed with the prefix associated with the specified namespace.</source>
          <target state="translated">Cuando se genera el código XML, se asignará correctamente a cada matriz con el prefijo asociado con el espacio de nombres especificado.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlElementAttribute.Order">
          <source>Gets or sets the explicit order in which the elements are serialized or deserialized.</source>
          <target state="translated">Obtiene o establece el orden explícito en el que los elementos son serializados o deserializados.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Order">
          <source>The order of the code generation.</source>
          <target state="translated">Orden de la generación de código.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Order">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder&gt;</ph> enumeration to instruct the <ph id="ph2">&lt;xref:System.Web.Services.Description.ServiceDescriptionImporter&gt;</ph> to generate code that sets the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Order%2A&gt;</ph> property.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder&gt;</ph> enumeración para indicar a la <ph id="ph2">&lt;xref:System.Web.Services.Description.ServiceDescriptionImporter&gt;</ph> para generar el código que establece la <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Order%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Order">
          <source>Once the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Order%2A&gt;</ph> property has been used on one public property or field in a type, it must be applied to all public properties and fields for that type and all inherited types.</source>
          <target state="translated">Una vez el <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Order%2A&gt;</ph> propiedad se ha utilizado en una propiedad pública o campo en un tipo, se debe aplicar a todas las propiedades públicas y campos para ese tipo y todos los tipos heredados.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlElementAttribute.Type">
          <source>Gets or sets the object type used to represent the XML element.</source>
          <target state="translated">Obtiene o establece el tipo de objeto utilizado para representar el elemento XML.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Type">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the member.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del miembro.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Type">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> property to specify a derived type for a field or property.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> propiedad para especificar un tipo derivado de un campo o propiedad.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Type">
          <source>If a field or property returns an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, you can apply multiple instances of the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to the member.</source>
          <target state="translated">Si un campo o una propiedad devuelve un <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, puede aplicar varias instancias de la <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> al miembro.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Type">
          <source>For each instance, set the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> property to a type of object that can be inserted into the array.</source>
          <target state="translated">Para cada instancia, establezca el <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> propiedad a un tipo de objeto que se pueden insertar en la matriz.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Type">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> property to specify a derived object for an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph>.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> propiedad para especificar un objeto derivado de un <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Type">
          <source>The example also applies three instances of the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to a field that returns an <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">El ejemplo también aplica a tres instancias de la <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> a un campo que devuelve un <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Type">
          <source>Each instance specifies a type allowed in the field.</source>
          <target state="translated">Cada instancia especifica un tipo permitido en el campo.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>