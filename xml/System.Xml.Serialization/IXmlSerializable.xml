<Type Name="IXmlSerializable" FullName="System.Xml.Serialization.IXmlSerializable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4cf7afe0712d7f7f6b2a9c9fadcd8bd19a613637" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58708912" /></Metadata><TypeSignature Language="C#" Value="public interface IXmlSerializable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXmlSerializable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IXmlSerializable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IXmlSerializable" />
  <TypeSignature Language="F#" Value="type IXmlSerializable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Proporciona formato personalizado para la serialización y deserialización XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Hay dos razones para implementar esta interfaz. La primera consiste en controlar cómo se serializa o deserializa el objeto el <xref:System.Xml.Serialization.XmlSerializer>. Por ejemplo, puede fragmentar los datos en bytes en lugar de grandes conjuntos de datos de almacenamiento en búfer y evitar también la inflación que tiene lugar cuando se codifican los datos con codificación Base64. Para controlar la serialización, implemente el <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> y <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> métodos para controlar la <xref:System.Xml.XmlReader> y <xref:System.Xml.XmlWriter> clases usadas para leer y escribir el código XML. Para obtener un ejemplo de esto, vea [Cómo: Fragmentar datos serializados](~/docs/standard/serialization/how-to-chunk-serialized-data.md).  
  
 La segunda razón es ser capaz de controlar el esquema. Para habilitar esta opción, debe aplicar el <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> al elemento serializable escriba y especifique el nombre del miembro estático que devuelve el esquema. Vea <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> para obtener un ejemplo.  
  
 Una clase que implementa la interfaz debe tener un constructor sin parámetros. Este es un requisito de la <xref:System.Xml.Serialization.XmlSerializer> clase.  
  
   
  
## Examples  
 Ejemplo de código siguiente muestra una implementación de la <xref:System.Xml.Serialization.IXmlSerializable> interfaz que serializa un campo privado.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#0](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#0)]
 [!code-csharp[XmlSerialization_IXmlSerializable#0](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#0)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Introducir la serialización XML</related>
  </Docs>
  <Members>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.Schema.XmlSchema GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSchema () As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ GetSchema();" />
      <MemberSignature Language="F#" Value="abstract member GetSchema : unit -&gt; System.Xml.Schema.XmlSchema" Usage="iXmlSerializable.GetSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.3;netstandard-1.4;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Este método está reservado y no debe utilizarse. Al implementar la interfaz <see langword="IXmlSerializable" />, debe devolver <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) desde este método y, en su lugar, si se requiere especificar un esquema personalizado, aplique <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> a la clase.</summary>
        <returns><see cref="T:System.Xml.Schema.XmlSchema" /> que describe la representación XML del objeto producido por el método <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> y usado por el método <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al serializar o deserializar un objeto, el <xref:System.Xml.Serialization.XmlSerializer> clase no realiza la validación de XML. Por este motivo, a menudo es seguro omitir información de esquema, ya que proporciona una implementación trivial de este método, por ejemplo devolviendo `null` (`Nothing` en Visual Basic).  
  
 Si es necesario proporcionar información de esquema, debe usar el <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> atributo. El `GetSchema` método debería devolver `null` (o `Nothing`).  
  
 Algunos [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] tipos como tipos personalizados heredados que implementan la `IXmlSerializable` puede estar usando la interfaz `GetSchema` en lugar de `XmlSchemaProvider`. En este caso, el método devuelve un esquema XML preciso que describe la representación XML del objeto generado por el <xref:System.Data.DataSet.WriteXml%2A> método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public void ReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXml (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXml(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadXml : System.Xml.XmlReader -&gt; unit" Usage="iXmlSerializable.ReadXml reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">Secuencia de <see cref="T:System.Xml.XmlReader" /> desde la que se deserializa el objeto.</param>
        <summary>Genera un objeto a partir de su representación XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> método debe reconstituir el objeto con la información que escribió la <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> método.  
  
 Cuando se llama a este método, el lector está situado en la etiqueta de apertura que encapsula la información de su tipo. Es decir, directamente en la etiqueta de apertura indica el principio de un objeto serializado. Cuando este método finaliza, debe tener lectura todo el elemento de principio a fin, incluido todo su contenido. A diferencia de la <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> método, el marco de trabajo no controla automáticamente el elemento contenedor. Su implementación debe hacerlo. No se puede observar estas reglas de posicionamiento provocaría un código generar excepciones de tiempo de ejecución inesperado o datos dañados.  
  
 Al implementar este método, debe considerar la posibilidad de que un usuario malintencionado podría proporcionar una representación de XML con formato correcto pero no es válida con el fin de deshabilitar o modificar el comportamiento de la aplicación.  
  
   
  
## Examples  
 El ejemplo siguiente muestra una implementación de la <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> método.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#2](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#2)]
 [!code-csharp[XmlSerialization_IXmlSerializable#2](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#2)]  
  
 El ejemplo siguiente muestra el uso de la <xref:System.Xml.Serialization.XmlSerializer> clase para deserializar este objeto.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#20](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/reader.cpp#20)]
 [!code-csharp[XmlSerialization_IXmlSerializable#20](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/reader.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member WriteXml : System.Xml.XmlWriter -&gt; unit" Usage="iXmlSerializable.WriteXml writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Secuencia <see cref="T:System.Xml.XmlWriter" /> a la que se serializa el objeto.</param>
        <summary>Convierte un objeto en su representación XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> implementación que proporcione debe escribir la representación XML del objeto. El marco de trabajo escribe un elemento contenedor y coloca el escritor XML después de su inicio. Su implementación puede escribir su contenido, incluidos los elementos secundarios. El marco de trabajo, a continuación, cierra el elemento contenedor.  
  
 Escribir información suficiente para la <xref:System.Xml.XmlWriter> secuencia para permitir el <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> método para reconstituir el objeto.  
  
 Por ejemplo, si el estado del objeto incluye una variable de matriz, asegúrese de escribir la longitud de la matriz, o usar un elemento primario que contiene los elementos que describen los valores de la matriz, por lo que sabe cuántos valores leer cuando el objeto se reconstituye.  
  
   
  
## Examples  
 El ejemplo siguiente muestra una implementación de la <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> método.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#1)]
 [!code-csharp[XmlSerialization_IXmlSerializable#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#1)]  
  
 El ejemplo siguiente muestra el uso de la <xref:System.Xml.Serialization.XmlSerializer> clase para deserializar este objeto.  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#10](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/writer.cpp#10)]
 [!code-csharp[XmlSerialization_IXmlSerializable#10](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/writer.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>