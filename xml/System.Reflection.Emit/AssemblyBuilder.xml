<Type Name="AssemblyBuilder" FullName="System.Reflection.Emit.AssemblyBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="095c7ad81b5646f25ddb06e735a23591f9a8532e" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37641659" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AssemblyBuilder : System.Reflection.Assembly, System.Runtime.InteropServices._AssemblyBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit AssemblyBuilder extends System.Reflection.Assembly implements class System.Runtime.InteropServices._AssemblyBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.AssemblyBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AssemblyBuilder&#xA;Inherits Assembly&#xA;Implements _AssemblyBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyBuilder sealed : System::Reflection::Assembly, System::Runtime::InteropServices::_AssemblyBuilder" />
  <TypeSignature Language="F#" Value="type AssemblyBuilder = class&#xA;    inherit Assembly&#xA;    interface _AssemblyBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Emit</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.Assembly</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._AssemblyBuilder</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._AssemblyBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="7d59d-101">Define y representa un ensamblado dinámico.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7d59d-101">Defines and represents a dynamic assembly.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d59d-102">Un ensamblado dinámico es un ensamblado que se crea mediante las API de emisión de reflexión.</span><span class="sxs-lookup"><span data-stu-id="7d59d-102">A dynamic assembly is an assembly that is created using the Reflection Emit APIs.</span></span> <span data-ttu-id="7d59d-103">Los módulos dinámicos del ensamblado se guardan cuando se guarda el ensamblado dinámico mediante la <xref:System.Reflection.Emit.AssemblyBuilder.Save%2A> método.</span><span class="sxs-lookup"><span data-stu-id="7d59d-103">The dynamic modules in the assembly are saved when the dynamic assembly is saved using the <xref:System.Reflection.Emit.AssemblyBuilder.Save%2A> method.</span></span> <span data-ttu-id="7d59d-104">Para generar un archivo ejecutable, el <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A> método debe llamarse para identificar el método que es el punto de entrada para el ensamblado.</span><span class="sxs-lookup"><span data-stu-id="7d59d-104">To generate an executable, the <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A> method must be called to identify the method that is the entry point to the assembly.</span></span> <span data-ttu-id="7d59d-105">Los ensamblados se guardan como archivos DLL de forma predeterminada, a menos que el <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A> método solicita la generación de una aplicación de consola o una aplicación basada en Windows.</span><span class="sxs-lookup"><span data-stu-id="7d59d-105">Assemblies are saved as DLLs by default, unless the <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A> method requests the generation of a console application or a Windows-based application.</span></span>  
  
 <span data-ttu-id="7d59d-106">Si un ensamblado dinámico contiene más de un módulo dinámico, el nombre de archivo de manifiesto del ensamblado debe coincidir con el nombre del módulo que se especifica como el primer argumento para el <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A> método.</span><span class="sxs-lookup"><span data-stu-id="7d59d-106">If a dynamic assembly contains more than one dynamic module, the assembly's manifest file name should match the module's name that is specified as the first argument to the <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A> method.</span></span>  
  
 <span data-ttu-id="7d59d-107">Algunos métodos en la base de <xref:System.Reflection.Assembly> clase, como `GetModules` y `GetLoadedModules`, no funcionará correctamente cuando se llama desde <xref:System.Reflection.Emit.AssemblyBuilder> objetos.</span><span class="sxs-lookup"><span data-stu-id="7d59d-107">Some methods on the base <xref:System.Reflection.Assembly> class, such as `GetModules` and `GetLoadedModules`, will not work correctly when called from <xref:System.Reflection.Emit.AssemblyBuilder> objects.</span></span> <span data-ttu-id="7d59d-108">Puede cargar el ensamblado dinámico definido y llamar a los métodos en el ensamblado cargado.</span><span class="sxs-lookup"><span data-stu-id="7d59d-108">You can load the defined dynamic assembly and call the methods on the loaded assembly.</span></span> <span data-ttu-id="7d59d-109">Por ejemplo, para asegurarse de que los módulos de recursos se incluyen en la lista de módulos devuelta, llame a `GetModules` en cargado <xref:System.Reflection.Assembly> objeto.</span><span class="sxs-lookup"><span data-stu-id="7d59d-109">For example, to ensure that resource modules are included in the returned module list, call `GetModules` on the loaded <xref:System.Reflection.Assembly> object.</span></span>  
  
 <span data-ttu-id="7d59d-110">La firma de un ensamblado dinámico usando <xref:System.Reflection.AssemblyName.KeyPair%2A> no es efectivo hasta que el ensamblado se guarda en el disco.</span><span class="sxs-lookup"><span data-stu-id="7d59d-110">The signing of a dynamic assembly using <xref:System.Reflection.AssemblyName.KeyPair%2A> is not effective until the assembly is saved to disk.</span></span> <span data-ttu-id="7d59d-111">Por lo tanto, los nombres seguros no funcionará con los ensamblados dinámicos transitorios.</span><span class="sxs-lookup"><span data-stu-id="7d59d-111">So, strong names will not work with transient dynamic assemblies.</span></span>  
  
 <span data-ttu-id="7d59d-112">Para obtener un <xref:System.Reflection.Emit.AssemblyBuilder> de objeto, utilice el <xref:System.AppDomain.DefineDynamicAssembly%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="7d59d-112">To get an <xref:System.Reflection.Emit.AssemblyBuilder> object, use the <xref:System.AppDomain.DefineDynamicAssembly%2A?displayProperty=nameWithType> method.</span></span>  
  
## <a name="reflection-emit-dynamic-assembly-scenarios"></a><span data-ttu-id="7d59d-113">Escenarios de ensamblado dinámico de emisión de reflexión</span><span class="sxs-lookup"><span data-stu-id="7d59d-113">Reflection emit dynamic assembly scenarios</span></span>  
 <span data-ttu-id="7d59d-114">Los siguientes son algunas cosas a tener en cuenta cuando se usa el <xref:System.Reflection.Emit.AssemblyBuilder> clase para crear ensamblados dinámicos.</span><span class="sxs-lookup"><span data-stu-id="7d59d-114">The following are some things to consider when using the <xref:System.Reflection.Emit.AssemblyBuilder> class to create dynamic assemblies.</span></span>  
  
### <a name="dynamic-modules"></a><span data-ttu-id="7d59d-115">Módulos dinámicos</span><span class="sxs-lookup"><span data-stu-id="7d59d-115">Dynamic modules</span></span>  
 <span data-ttu-id="7d59d-116">Emisión de reflexión admite la creación de módulos dinámicos definidos en ensamblados dinámicos.</span><span class="sxs-lookup"><span data-stu-id="7d59d-116">Reflection emit supports the creation of dynamic modules defined in dynamic assemblies.</span></span> <span data-ttu-id="7d59d-117">Puede ser un módulo dinámico creado en un ensamblado dinámico transitorio o persistente.</span><span class="sxs-lookup"><span data-stu-id="7d59d-117">A dynamic module created in a dynamic assembly can be transient or persistable.</span></span>  
  
### <a name="restrictions-on-type-references"></a><span data-ttu-id="7d59d-118">Restricciones en las referencias de tipos</span><span class="sxs-lookup"><span data-stu-id="7d59d-118">Restrictions on type references</span></span>  
 <span data-ttu-id="7d59d-119">Los ensamblados pueden hacer referencia a tipos definidos en otro ensamblado.</span><span class="sxs-lookup"><span data-stu-id="7d59d-119">Assemblies can reference types defined in another assembly.</span></span> <span data-ttu-id="7d59d-120">Un ensamblado dinámico transitorio con seguridad puede hacer referencia a tipos definidos en otro ensamblado dinámico transitorio, un ensamblado dinámico con persistencia o un ensamblado estático.</span><span class="sxs-lookup"><span data-stu-id="7d59d-120">A transient dynamic assembly can safely reference types defined in another transient dynamic assembly, a persistable dynamic assembly, or a static assembly.</span></span> <span data-ttu-id="7d59d-121">Sin embargo, common language runtime no permite un módulo dinámico con persistencia hacer referencia a un tipo definido en un módulo dinámico transitorio.</span><span class="sxs-lookup"><span data-stu-id="7d59d-121">However, the common language runtime does not allow a persistable dynamic module to reference a type defined in a transient dynamic module.</span></span> <span data-ttu-id="7d59d-122">Esto es porque cuando se carga el módulo dinámico con persistencia después de guardarlas en el disco, el tiempo de ejecución no puede resolver las referencias a tipos definidos en el módulo dinámico transitorio.</span><span class="sxs-lookup"><span data-stu-id="7d59d-122">This is because when the persisted dynamic module is loaded after being saved to disk, the runtime cannot resolve the references to types defined in the transient dynamic module.</span></span>  
  
### <a name="restrictions-on-emitting-to-remote-application-domains"></a><span data-ttu-id="7d59d-123">Restricciones en la emisión a dominios de aplicación remota</span><span class="sxs-lookup"><span data-stu-id="7d59d-123">Restrictions on emitting to remote application domains</span></span>  
 <span data-ttu-id="7d59d-124">Algunos escenarios requieren un ensamblado dinámico se creen y se ejecuta en un dominio de aplicación remota.</span><span class="sxs-lookup"><span data-stu-id="7d59d-124">Some scenarios require a dynamic assembly to be created and executed in a remote application domain.</span></span> <span data-ttu-id="7d59d-125">Emisión de reflexión no permite un ensamblado dinámico que se emitan directamente a un dominio de aplicación remota.</span><span class="sxs-lookup"><span data-stu-id="7d59d-125">Reflection emit does not allow a dynamic assembly to be emitted directly to a remote application domain.</span></span> <span data-ttu-id="7d59d-126">La solución consiste en emitir el ensamblado dinámico en el dominio de aplicación actual, guardar el ensamblado dinámico emitido en el disco y, a continuación, cargar el ensamblado dinámico en el dominio de aplicación remota.</span><span class="sxs-lookup"><span data-stu-id="7d59d-126">The solution is to emit the dynamic assembly in the current application domain, save the emitted dynamic assembly to disk, and then load the dynamic assembly into the remote application domain.</span></span>  
  
### <a name="dynamic-assembly-access-modes"></a><span data-ttu-id="7d59d-127">Modos de acceso del ensamblado dinámico</span><span class="sxs-lookup"><span data-stu-id="7d59d-127">Dynamic assembly access modes</span></span>  
 <span data-ttu-id="7d59d-128">Ensamblados dinámicos se pueden crear mediante uno de los siguientes modos de acceso:</span><span class="sxs-lookup"><span data-stu-id="7d59d-128">Dynamic assemblies can be created using one of the following access modes:</span></span>  
  
-   <xref:System.Reflection.Emit.AssemblyBuilderAccess.Run?displayProperty=nameWithType>  
  
     <span data-ttu-id="7d59d-129">El ensamblado dinámico representado por un <xref:System.Reflection.Emit.AssemblyBuilder> objeto es transitorio.</span><span class="sxs-lookup"><span data-stu-id="7d59d-129">The dynamic assembly represented by an <xref:System.Reflection.Emit.AssemblyBuilder> object is transient.</span></span> <span data-ttu-id="7d59d-130">El ensamblado dinámico solo puede utilizarse para ejecutar el código emitido.</span><span class="sxs-lookup"><span data-stu-id="7d59d-130">The dynamic assembly can only be used to execute the emitted code.</span></span>  
  
-   <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save?displayProperty=nameWithType>  
  
     <span data-ttu-id="7d59d-131">El ensamblado dinámico representado por un <xref:System.Reflection.Emit.AssemblyBuilder> objeto puede persistir, pero no se puede ejecutar hasta que se ha cargado el archivo guardado portable ejecutable (PE) desde el disco.</span><span class="sxs-lookup"><span data-stu-id="7d59d-131">The dynamic assembly represented by an <xref:System.Reflection.Emit.AssemblyBuilder> object is persistable but cannot be executed until the saved portable executable (PE) file has been loaded from disk.</span></span>  
  
-   <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave?displayProperty=nameWithType>  
  
     <span data-ttu-id="7d59d-132">El ensamblado dinámico representado por un <xref:System.Reflection.Emit.AssemblyBuilder> objeto puede persistir, pero también se puede ejecutar antes o después de guarda el ensamblado en el disco.</span><span class="sxs-lookup"><span data-stu-id="7d59d-132">The dynamic assembly represented by an <xref:System.Reflection.Emit.AssemblyBuilder> object is persistable, but can also be executed before and/or after the assembly is saved to disk.</span></span>  
  
 <span data-ttu-id="7d59d-133">Se debe especificar el modo de acceso proporcionando adecuado <xref:System.Reflection.Emit.AssemblyBuilderAccess> valor en la llamada a la <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly%2A?displayProperty=nameWithType> método cuando el ensamblado dinámico está definido y no se puede cambiar más adelante.</span><span class="sxs-lookup"><span data-stu-id="7d59d-133">The access mode must be specified by providing the appropriate <xref:System.Reflection.Emit.AssemblyBuilderAccess> value in the call to the <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly%2A?displayProperty=nameWithType> method when the dynamic assembly is defined and cannot be changed later.</span></span> <span data-ttu-id="7d59d-134">El runtime usa el modo de acceso de un ensamblado dinámico para optimizar la representación interna del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="7d59d-134">The runtime uses the access mode of a dynamic assembly to optimize the assembly's internal representation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d59d-135">El ejemplo de código siguiente muestra cómo definir un ensamblado dinámico con un módulo.</span><span class="sxs-lookup"><span data-stu-id="7d59d-135">The following code example shows how to define a dynamic assembly with one module.</span></span> <span data-ttu-id="7d59d-136">El módulo en el ensamblado de ejemplo contiene un solo tipo, `MyDynamicType`, que tiene un campo privado, una propiedad que obtiene y establece el campo privado, los constructores que inicializan el campo privado y un método que multiplica un número proporcionado por el usuario mediante el campo privado valor y devuelve el resultado.</span><span class="sxs-lookup"><span data-stu-id="7d59d-136">The module in the example assembly contains one type, `MyDynamicType`, which has a private field, a property that gets and sets the private field, constructors that initialize the private field, and a method that multiplies a user-supplied number by the private field value and returns the result.</span></span>  
  
 <span data-ttu-id="7d59d-137"><xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave?displayProperty=nameWithType> se especifica cuando se crea el ensamblado.</span><span class="sxs-lookup"><span data-stu-id="7d59d-137"><xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave?displayProperty=nameWithType> is specified when the assembly is created.</span></span> <span data-ttu-id="7d59d-138">El código de ensamblado se usa inmediatamente, y el ensamblado también se guarda en el disco para que éste puede examinarse con [Ildasm.exe (Desensamblador de IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) o se usa en otro programa.</span><span class="sxs-lookup"><span data-stu-id="7d59d-138">The assembly code is used immediately, and the assembly is also saved to disk so that it can be examined with [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) or used in another program.</span></span>  
  
 [!code-cpp[AssemblyBuilderClass#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilderClass/cpp/24895.cpp#1)]
 [!code-csharp[AssemblyBuilderClass#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilderClass/cs/24895.cs#1)]
 [!code-vb[AssemblyBuilderClass#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilderClass/vb/24895.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.ReflectionPermission">
      <span data-ttu-id="7d59d-139">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7d59d-139">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
      </span>
      <span data-ttu-id="7d59d-140">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7d59d-140">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
      </span>
    </permission>
    <altmember cref="Overload:System.AppDomain.DefineDynamicAssembly" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddResourceFile">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7d59d-141">Agrega un archivo de recursos existente a este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-141">Adds an existing resource file to this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddResourceFile">
      <MemberSignature Language="C#" Value="public void AddResourceFile (string name, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddResourceFile(string name, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.AddResourceFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResourceFile (name As String, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddResourceFile(System::String ^ name, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.AddResourceFile : string * string -&gt; unit" Usage="assemblyBuilder.AddResourceFile (name, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7d59d-142">Nombre lógico del recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-142">The logical name of the resource.</span>
          </span>
        </param>
        <param name="fileName">
          <span data-ttu-id="7d59d-143">Nombre del archivo físico (archivo .resources) al que está asignado el nombre lógico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-143">The physical file name (.resources file) to which the logical name is mapped.</span>
          </span>
          <span data-ttu-id="7d59d-144">No debería incluir una ruta de acceso; el archivo debe estar en el mismo directorio que el ensamblado al que se agrega.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-144">This should not include a path; the file must be in the same directory as the assembly to which it is added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-145">Agrega un archivo de recursos existente a este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-145">Adds an existing resource file to this assembly.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d59d-146">`fileName` no se debe ser el mismo que el de cualquier otro módulo con persistencia, recurso administrado independiente o el archivo de manifiesto independiente.</span><span class="sxs-lookup"><span data-stu-id="7d59d-146">`fileName` should not be the same as that of any other persistable module, standalone managed resource, or the standalone manifest file.</span></span>  
  
 <span data-ttu-id="7d59d-147">Se supone que los recursos administrados en el archivo sea público.</span><span class="sxs-lookup"><span data-stu-id="7d59d-147">The managed resources in the file are assumed to be public.</span></span>  
  
 <span data-ttu-id="7d59d-148">El archivo de recursos especificado debe estar en el directorio donde se guardará el ensamblado.</span><span class="sxs-lookup"><span data-stu-id="7d59d-148">The specified resource file must be in the directory where the assembly will be saved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7d59d-149">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="7d59d-149">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="7d59d-150">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="7d59d-150">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d59d-151">Ejemplo de código siguiente muestra cómo asociar un archivo de recursos a un ensamblado creado dinámicamente, utiliza `AddResourceFile`.</span><span class="sxs-lookup"><span data-stu-id="7d59d-151">The following code sample demonstrates how to attach a resource file to a dynamically created assembly, using `AddResourceFile`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d59d-152">
            <paramref name="name" /> se definió anteriormente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-152">
              <paramref name="name" /> has been previously defined.</span>
          </span>
          <span data-ttu-id="7d59d-153">-o bien- Hay otro archivo en el ensamblado denominado <paramref name="fileName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-153">-or-  There is another file in the assembly named <paramref name="fileName" />.</span>
          </span>
          <span data-ttu-id="7d59d-154">-o bien- La longitud de <paramref name="name" /> es cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-154">-or-  The length of <paramref name="name" /> is zero.</span>
          </span>
          <span data-ttu-id="7d59d-155">-o bien- La longitud de <paramref name="fileName" /> es cero, o si <paramref name="fileName" /> incluye una ruta de acceso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-155">-or-  The length of <paramref name="fileName" /> is zero, or if <paramref name="fileName" /> includes a path.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d59d-156">El valor de <paramref name="name" /> o <paramref name="fileName" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-156">
              <paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="7d59d-157">No se encuentra el archivo <paramref name="fileName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-157">The file <paramref name="fileName" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7d59d-158">El llamador no dispone del permiso requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-158">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="7d59d-159">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-159">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="7d59d-160">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-160">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="7d59d-161">El permiso FileIOPermissionAccess.Read es necesario tener acceso al archivo de recursos <paramref name="resourceFileName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-161">The FileIOPermissionAccess.Read permission is needed to access the resource file <paramref name="resourceFileName" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AddResourceFile">
      <MemberSignature Language="C#" Value="public void AddResourceFile (string name, string fileName, System.Reflection.ResourceAttributes attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddResourceFile(string name, string fileName, valuetype System.Reflection.ResourceAttributes attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.AddResourceFile(System.String,System.String,System.Reflection.ResourceAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResourceFile (name As String, fileName As String, attribute As ResourceAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddResourceFile(System::String ^ name, System::String ^ fileName, System::Reflection::ResourceAttributes attribute);" />
      <MemberSignature Language="F#" Value="member this.AddResourceFile : string * string * System.Reflection.ResourceAttributes -&gt; unit" Usage="assemblyBuilder.AddResourceFile (name, fileName, attribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="attribute" Type="System.Reflection.ResourceAttributes" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7d59d-162">Nombre lógico del recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-162">The logical name of the resource.</span>
          </span>
        </param>
        <param name="fileName">
          <span data-ttu-id="7d59d-163">Nombre del archivo físico (archivo .resources) al que está asignado el nombre lógico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-163">The physical file name (.resources file) to which the logical name is mapped.</span>
          </span>
          <span data-ttu-id="7d59d-164">No debería incluir una ruta de acceso; el archivo debe estar en el mismo directorio que el ensamblado al que se agrega.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-164">This should not include a path; the file must be in the same directory as the assembly to which it is added.</span>
          </span>
        </param>
        <param name="attribute">
          <span data-ttu-id="7d59d-165">Atributos de recursos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-165">The resource attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-166">Agrega un archivo de recursos existente a este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-166">Adds an existing resource file to this assembly.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d59d-167">`fileName` no se debe ser el mismo que el de cualquier otro módulo con persistencia, recurso administrado independiente o el archivo de manifiesto independiente.</span><span class="sxs-lookup"><span data-stu-id="7d59d-167">`fileName` should not be the same as that of any other persistable module, standalone managed resource, or the standalone manifest file.</span></span>  
  
 <span data-ttu-id="7d59d-168">Los atributos se pueden especificar para el recurso administrado.</span><span class="sxs-lookup"><span data-stu-id="7d59d-168">Attributes can be specified for the managed resource.</span></span>  
  
 <span data-ttu-id="7d59d-169">El archivo de recursos especificado debe estar en el directorio donde se guardará el ensamblado.</span><span class="sxs-lookup"><span data-stu-id="7d59d-169">The specified resource file must be in the directory where the assembly will be saved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7d59d-170">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="7d59d-170">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="7d59d-171">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="7d59d-171">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d59d-172">Ejemplo de código siguiente muestra cómo asociar un archivo de recursos a un ensamblado creado dinámicamente, utiliza `AddResourceFile`.</span><span class="sxs-lookup"><span data-stu-id="7d59d-172">The following code sample demonstrates how to attach a resource file to a dynamically created assembly, using `AddResourceFile`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d59d-173">
            <paramref name="name" /> se definió anteriormente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-173">
              <paramref name="name" /> has been previously defined.</span>
          </span>
          <span data-ttu-id="7d59d-174">-o bien- Hay otro archivo en el ensamblado denominado <paramref name="fileName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-174">-or-  There is another file in the assembly named <paramref name="fileName" />.</span>
          </span>
          <span data-ttu-id="7d59d-175">-o bien- La longitud de <paramref name="name" /> es cero o si la longitud de <paramref name="fileName" /> es cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-175">-or-  The length of <paramref name="name" /> is zero or if the length of <paramref name="fileName" /> is zero.</span>
          </span>
          <span data-ttu-id="7d59d-176">-o bien- <paramref name="fileName" /> incluye una ruta de acceso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-176">-or-  <paramref name="fileName" /> includes a path.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d59d-177">El valor de <paramref name="name" /> o <paramref name="fileName" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-177">
              <paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="7d59d-178">Si no se encuentra el archivo <paramref name="fileName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-178">If the file <paramref name="fileName" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7d59d-179">El llamador no dispone del permiso requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-179">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="7d59d-180">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-180">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="7d59d-181">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-181">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="7d59d-182">El permiso FileIOPermissionAccess.Read es necesario tener acceso al archivo de recursos <paramref name="resourceFileName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-182">The FileIOPermissionAccess.Read permission is needed to access the resource file <paramref name="resourceFileName" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CodeBase">
      <MemberSignature Language="C#" Value="public override string CodeBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.CodeBase" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CodeBase { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeBase : string" Usage="System.Reflection.Emit.AssemblyBuilder.CodeBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7d59d-183">Obtiene la ubicación del ensamblado tal y como se especificó originalmente (como en un objeto <see cref="T:System.Reflection.AssemblyName" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-183">Gets the location of the assembly, as specified originally (such as in an <see cref="T:System.Reflection.AssemblyName" /> object).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7d59d-184">Ubicación del ensamblado tal y como se especificó originalmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-184">The location of the assembly, as specified originally.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d59d-185">Para obtener la ruta de acceso absoluta del archivo cargado que contiene el manifiesto, use el <xref:System.Reflection.Assembly.Location%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="7d59d-185">To get the absolute path to the loaded manifest-containing file, use the <xref:System.Reflection.Assembly.Location%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7d59d-186">Este método no se admite actualmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-186">This method is not currently supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7d59d-187">El llamador no dispone del permiso requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-187">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="7d59d-188">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-188">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="7d59d-189">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-189">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DefinedTypes">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;System.Reflection.TypeInfo&gt; DefinedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.TypeInfo&gt; DefinedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.DefinedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DefinedTypes As IEnumerable(Of TypeInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Reflection::TypeInfo ^&gt; ^ DefinedTypes { System::Collections::Generic::IEnumerable&lt;System::Reflection::TypeInfo ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefinedTypes : seq&lt;System.Reflection.TypeInfo&gt;" Usage="System.Reflection.Emit.AssemblyBuilder.DefinedTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.TypeInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineDynamicAssembly">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7d59d-190">Define un ensamblado dinámico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-190">Defines a dynamic assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineDynamicAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly(class System.Reflection.AssemblyName name, valuetype System.Reflection.Emit.AssemblyBuilderAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineDynamicAssembly (name As AssemblyName, access As AssemblyBuilderAccess) As AssemblyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::AssemblyBuilder ^ DefineDynamicAssembly(System::Reflection::AssemblyName ^ name, System::Reflection::Emit::AssemblyBuilderAccess access);" />
      <MemberSignature Language="F#" Value="static member DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess -&gt; System.Reflection.Emit.AssemblyBuilder" Usage="System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly (name, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
        <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7d59d-191">Nombre del ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-191">The name of the assembly.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="7d59d-192">Derechos de acceso del ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-192">The access rights of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-193">Define un ensamblado dinámico con el nombre y los derechos de acceso especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-193">Defines a dynamic assembly that has the specified name and access rights.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d59d-194">Objeto que representa el nuevo ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-194">An object that represents the new assembly.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.Collections.Generic.IEnumerable&lt;System.Reflection.Emit.CustomAttributeBuilder&gt; assemblyAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly(class System.Reflection.AssemblyName name, valuetype System.Reflection.Emit.AssemblyBuilderAccess access, class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Emit.CustomAttributeBuilder&gt; assemblyAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineDynamicAssembly (name As AssemblyName, access As AssemblyBuilderAccess, assemblyAttributes As IEnumerable(Of CustomAttributeBuilder)) As AssemblyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::AssemblyBuilder ^ DefineDynamicAssembly(System::Reflection::AssemblyName ^ name, System::Reflection::Emit::AssemblyBuilderAccess access, System::Collections::Generic::IEnumerable&lt;System::Reflection::Emit::CustomAttributeBuilder ^&gt; ^ assemblyAttributes);" />
      <MemberSignature Language="F#" Value="static member DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess * seq&lt;System.Reflection.Emit.CustomAttributeBuilder&gt; -&gt; System.Reflection.Emit.AssemblyBuilder" Usage="System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly (name, access, assemblyAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
        <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
        <Parameter Name="assemblyAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.Emit.CustomAttributeBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7d59d-195">Nombre del ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-195">The name of the assembly.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="7d59d-196">Derechos de acceso del ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-196">The access rights of the assembly.</span>
          </span>
        </param>
        <param name="assemblyAttributes">
          <span data-ttu-id="7d59d-197">Colección que contiene los atributos personalizados del ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-197">A collection that contains the attributes of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-198">Define un nuevo ensamblado con el nombre, los derechos de acceso y los atributos especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-198">Defines a new assembly that has the specified name, access rights, and attributes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d59d-199">Objeto que representa el nuevo ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-199">An object that represents the new assembly.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineDynamicModule">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7d59d-200">Define un módulo dinámico en este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-200">Defines a dynamic module in this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineDynamicModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ModuleBuilder DefineDynamicModule (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ModuleBuilder DefineDynamicModule(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDynamicModule (name As String) As ModuleBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ModuleBuilder ^ DefineDynamicModule(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.DefineDynamicModule : string -&gt; System.Reflection.Emit.ModuleBuilder" Usage="assemblyBuilder.DefineDynamicModule name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ModuleBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7d59d-201">Nombre del módulo dinámico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-201">The name of the dynamic module.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-202">Define un módulo dinámico transitorio con nombre en este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-202">Defines a named transient dynamic module in this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d59d-203">
            <see cref="T:System.Reflection.Emit.ModuleBuilder" /> que representa el módulo dinámico definido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-203">A <see cref="T:System.Reflection.Emit.ModuleBuilder" /> representing the defined dynamic module.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d59d-204">Es un error al definir varios módulos dinámicos con el mismo nombre en un ensamblado.</span><span class="sxs-lookup"><span data-stu-id="7d59d-204">It is an error to define multiple dynamic modules with the same name in an assembly.</span></span>  
  
 <span data-ttu-id="7d59d-205">El módulo dinámico definido es transitorio.</span><span class="sxs-lookup"><span data-stu-id="7d59d-205">The defined dynamic module is transient.</span></span> <span data-ttu-id="7d59d-206">No se guarda el módulo dinámico, incluso si se creó el ensamblado dinámico principal con <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave>.</span><span class="sxs-lookup"><span data-stu-id="7d59d-206">The dynamic module is not saved, even if the parent dynamic assembly was created with <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7d59d-207">Para suprimir las optimizaciones al depurar los módulos dinámicos, aplique el <xref:System.Diagnostics.DebuggableAttribute> atributo al ensamblado dinámico antes de llamar a <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span><span class="sxs-lookup"><span data-stu-id="7d59d-207">To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span></span> <span data-ttu-id="7d59d-208">Cree una instancia de <xref:System.Diagnostics.DebuggableAttribute> con el <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> marca y aplicarla mediante el <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> método.</span><span class="sxs-lookup"><span data-stu-id="7d59d-208">Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method.</span></span> <span data-ttu-id="7d59d-209">El atributo debe aplicarse al ensamblado dinámico.</span><span class="sxs-lookup"><span data-stu-id="7d59d-209">The attribute must be applied to the dynamic assembly.</span></span> <span data-ttu-id="7d59d-210">No tiene ningún efecto si se aplica al módulo.</span><span class="sxs-lookup"><span data-stu-id="7d59d-210">It has no effect if applied to the module.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7d59d-211">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="7d59d-211">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="7d59d-212">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="7d59d-212">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d59d-213">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="7d59d-213">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="7d59d-214">El ejemplo de código siguiente muestra cómo crear un módulo dinámico transitorio mediante `DefineDynamicModule`.</span><span class="sxs-lookup"><span data-stu-id="7d59d-214">The code example below demonstrates how to create a transient dynamic module using `DefineDynamicModule`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d59d-215">
            <paramref name="name" /> comienza con un espacio en blanco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-215">
              <paramref name="name" /> begins with white space.</span>
          </span>
          <span data-ttu-id="7d59d-216">-o bien- La longitud de <paramref name="name" /> es cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-216">-or-  The length of <paramref name="name" /> is zero.</span>
          </span>
          <span data-ttu-id="7d59d-217">-o bien- La longitud de <paramref name="name" /> es superior a la longitud máxima definida por el sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-217">-or-  The length of <paramref name="name" /> is greater than the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d59d-218">
            <paramref name="name" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-218">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7d59d-219">El llamador no dispone del permiso requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-219">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ExecutionEngineException">
          <span data-ttu-id="7d59d-220">No se puede cargar el ensamblado para el escritor de símbolos predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-220">The assembly for default symbol writer cannot be loaded.</span>
          </span>
          <span data-ttu-id="7d59d-221">-o bien- No se encuentra el tipo que implementa la interfaz del escritor de símbolos predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-221">-or-  The type that implements the default symbol writer interface cannot be found.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="7d59d-222">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-222">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="7d59d-223">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-223">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ModuleBuilder DefineDynamicModule (string name, bool emitSymbolInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ModuleBuilder DefineDynamicModule(string name, bool emitSymbolInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDynamicModule (name As String, emitSymbolInfo As Boolean) As ModuleBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ModuleBuilder ^ DefineDynamicModule(System::String ^ name, bool emitSymbolInfo);" />
      <MemberSignature Language="F#" Value="member this.DefineDynamicModule : string * bool -&gt; System.Reflection.Emit.ModuleBuilder" Usage="assemblyBuilder.DefineDynamicModule (name, emitSymbolInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ModuleBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="emitSymbolInfo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7d59d-224">Nombre del módulo dinámico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-224">The name of the dynamic module.</span>
          </span>
        </param>
        <param name="emitSymbolInfo">
          <span data-ttu-id="7d59d-225">
            <see langword="true" /> si se va a emitir información de símbolos; si no, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-225">
              <see langword="true" /> if symbol information is to be emitted; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-226">Define un módulo dinámico transitorio con nombre en este ensamblado y especifica si se debe emitir información de símbolos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-226">Defines a named transient dynamic module in this assembly and specifies whether symbol information should be emitted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d59d-227">
            <see cref="T:System.Reflection.Emit.ModuleBuilder" /> que representa el módulo dinámico definido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-227">A <see cref="T:System.Reflection.Emit.ModuleBuilder" /> representing the defined dynamic module.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d59d-228">Es un error al definir varios módulos dinámicos con el mismo nombre en un ensamblado.</span><span class="sxs-lookup"><span data-stu-id="7d59d-228">It is an error to define multiple dynamic modules with the same name in an assembly.</span></span>  
  
 <span data-ttu-id="7d59d-229">No se guarda el módulo dinámico, incluso si se creó el ensamblado dinámico principal con <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave>.</span><span class="sxs-lookup"><span data-stu-id="7d59d-229">The dynamic module is not saved, even if the parent dynamic assembly was created with <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7d59d-230">Para suprimir las optimizaciones al depurar los módulos dinámicos, aplique el <xref:System.Diagnostics.DebuggableAttribute> atributo al ensamblado dinámico antes de llamar a <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span><span class="sxs-lookup"><span data-stu-id="7d59d-230">To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span></span> <span data-ttu-id="7d59d-231">Cree una instancia de <xref:System.Diagnostics.DebuggableAttribute> con el <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> marca y aplicarla mediante el <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> método.</span><span class="sxs-lookup"><span data-stu-id="7d59d-231">Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method.</span></span> <span data-ttu-id="7d59d-232">El atributo debe aplicarse al ensamblado dinámico.</span><span class="sxs-lookup"><span data-stu-id="7d59d-232">The attribute must be applied to the dynamic assembly.</span></span> <span data-ttu-id="7d59d-233">No tiene ningún efecto si se aplica al módulo.</span><span class="sxs-lookup"><span data-stu-id="7d59d-233">It has no effect if applied to the module.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7d59d-234">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="7d59d-234">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="7d59d-235">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="7d59d-235">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d59d-236">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="7d59d-236">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="7d59d-237">El ejemplo de código siguiente muestra cómo crear un módulo dinámico transitorio mediante `DefineDynamicModule`, suprimir la información de símbolos.</span><span class="sxs-lookup"><span data-stu-id="7d59d-237">The code example below demonstrates how to create a transient dynamic module using `DefineDynamicModule`, suppressing symbol information.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CPP/source.cpp#2)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CS/source.cs#2)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d59d-238">
            <paramref name="name" /> comienza con un espacio en blanco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-238">
              <paramref name="name" /> begins with white space.</span>
          </span>
          <span data-ttu-id="7d59d-239">-o bien- La longitud de <paramref name="name" /> es cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-239">-or-  The length of <paramref name="name" /> is zero.</span>
          </span>
          <span data-ttu-id="7d59d-240">-o bien- La longitud de <paramref name="name" /> es superior a la longitud máxima definida por el sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-240">-or-  The length of <paramref name="name" /> is greater than the system-defined maximum length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d59d-241">
            <paramref name="name" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-241">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ExecutionEngineException">
          <span data-ttu-id="7d59d-242">No se puede cargar el ensamblado para el escritor de símbolos predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-242">The assembly for default symbol writer cannot be loaded.</span>
          </span>
          <span data-ttu-id="7d59d-243">-o bien- No se encuentra el tipo que implementa la interfaz del escritor de símbolos predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-243">-or-  The type that implements the default symbol writer interface cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7d59d-244">El llamador no dispone del permiso requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-244">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="7d59d-245">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-245">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="7d59d-246">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-246">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ModuleBuilder DefineDynamicModule (string name, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ModuleBuilder DefineDynamicModule(string name, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDynamicModule (name As String, fileName As String) As ModuleBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ModuleBuilder ^ DefineDynamicModule(System::String ^ name, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DefineDynamicModule : string * string -&gt; System.Reflection.Emit.ModuleBuilder" Usage="assemblyBuilder.DefineDynamicModule (name, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ModuleBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7d59d-247">Nombre del módulo dinámico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-247">The name of the dynamic module.</span>
          </span>
        </param>
        <param name="fileName">
          <span data-ttu-id="7d59d-248">Nombre del archivo en el que se debe guardar el módulo dinámico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-248">The name of the file to which the dynamic module should be saved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-249">Define un módulo dinámico con persistencia con el nombre especificado que se guardará en el archivo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-249">Defines a persistable dynamic module with the given name that will be saved to the specified file.</span>
          </span>
          <span data-ttu-id="7d59d-250">No se emitirá información de símbolos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-250">No symbol information is emitted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d59d-251">Objeto <see cref="T:System.Reflection.Emit.ModuleBuilder" /> que representa el módulo dinámico definido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-251">A <see cref="T:System.Reflection.Emit.ModuleBuilder" /> object representing the defined dynamic module.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d59d-252">Para definir un módulo dinámico con persistencia, este ensamblado debe crearse con el <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save> o <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave> atributo.</span><span class="sxs-lookup"><span data-stu-id="7d59d-252">To define a persistable dynamic module, this assembly needs to be created with the <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save> or the <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave> attribute.</span></span>  
  
 <span data-ttu-id="7d59d-253">Si desea que el módulo que contiene el manifiesto del ensamblado, `name` debe ser el mismo que el nombre del ensamblado (es decir, el <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> propiedad de la <xref:System.Reflection.AssemblyName> utilizado para crear el ensamblado dinámico) y `fileName` debe ser el mismo que el nombre de archivo que especifique cuando se guarda el ensamblado.</span><span class="sxs-lookup"><span data-stu-id="7d59d-253">If you want the module to contain the assembly manifest, `name` should be the same as the name of the assembly (that is, the <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> property of the <xref:System.Reflection.AssemblyName> used to create the dynamic assembly) and `fileName` should be the same as the filename you specify when you save the assembly.</span></span>  
  
 <span data-ttu-id="7d59d-254">En un ensamblado con un solo módulo, ese módulo debe contener el manifiesto del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="7d59d-254">In an assembly with only one module, that module should contain the assembly manifest.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7d59d-255">Para suprimir las optimizaciones al depurar los módulos dinámicos, aplique el <xref:System.Diagnostics.DebuggableAttribute> atributo al ensamblado dinámico antes de llamar a <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span><span class="sxs-lookup"><span data-stu-id="7d59d-255">To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span></span> <span data-ttu-id="7d59d-256">Cree una instancia de <xref:System.Diagnostics.DebuggableAttribute> con el <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> marca y aplicarla mediante el <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> método.</span><span class="sxs-lookup"><span data-stu-id="7d59d-256">Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method.</span></span> <span data-ttu-id="7d59d-257">El atributo debe aplicarse al ensamblado dinámico.</span><span class="sxs-lookup"><span data-stu-id="7d59d-257">The attribute must be applied to the dynamic assembly.</span></span> <span data-ttu-id="7d59d-258">No tiene ningún efecto si se aplica al módulo.</span><span class="sxs-lookup"><span data-stu-id="7d59d-258">It has no effect if applied to the module.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7d59d-259">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="7d59d-259">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="7d59d-260">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="7d59d-260">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d59d-261">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="7d59d-261">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="7d59d-262">El ejemplo de código siguiente muestra cómo crear un módulo dinámico con persistencia mediante `DefineDynamicModule`.</span><span class="sxs-lookup"><span data-stu-id="7d59d-262">The code example below demonstrates how to create a persistent dynamic module using `DefineDynamicModule`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CPP/source.cpp#3)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CS/source.cs#3)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d59d-263">El valor de <paramref name="name" /> o <paramref name="fileName" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-263">
              <paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d59d-264">La longitud de <paramref name="name" /> o <paramref name="fileName" /> es cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-264">The length of <paramref name="name" /> or <paramref name="fileName" /> is zero.</span>
          </span>
          <span data-ttu-id="7d59d-265">-o bien- La longitud de <paramref name="name" /> es superior a la longitud máxima definida por el sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-265">-or-  The length of <paramref name="name" /> is greater than the system-defined maximum length.</span>
          </span>
          <span data-ttu-id="7d59d-266">-o bien- <paramref name="fileName" /> contiene una especificación de ruta de acceso (por ejemplo, un componente de directorio).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-266">-or-  <paramref name="fileName" /> contains a path specification (a directory component, for example).</span>
          </span>
          <span data-ttu-id="7d59d-267">-o bien- Hay un conflicto con el nombre de otro archivo que pertenece a este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-267">-or-  There is a conflict with the name of another file that belongs to this assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7d59d-268">Este ensamblado se ha guardado previamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-268">This assembly has been previously saved.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7d59d-269">Se llamó a este ensamblado en un ensamblado dinámico con el atributo <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Run" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-269">This assembly was called on a dynamic assembly with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Run" /> attribute.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7d59d-270">El llamador no dispone del permiso requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-270">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ExecutionEngineException">
          <span data-ttu-id="7d59d-271">No se puede cargar el ensamblado para el escritor de símbolos predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-271">The assembly for default symbol writer cannot be loaded.</span>
          </span>
          <span data-ttu-id="7d59d-272">-o bien- No se encuentra el tipo que implementa la interfaz del escritor de símbolos predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-272">-or-  The type that implements the default symbol writer interface cannot be found.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="7d59d-273">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-273">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="7d59d-274">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-274">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="7d59d-275">Escribir = true o Append = true es necesaria para guardar el módulo</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-275">Write=true or Append=true is needed to save the module</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ModuleBuilder DefineDynamicModule (string name, string fileName, bool emitSymbolInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ModuleBuilder DefineDynamicModule(string name, string fileName, bool emitSymbolInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDynamicModule (name As String, fileName As String, emitSymbolInfo As Boolean) As ModuleBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ModuleBuilder ^ DefineDynamicModule(System::String ^ name, System::String ^ fileName, bool emitSymbolInfo);" />
      <MemberSignature Language="F#" Value="member this.DefineDynamicModule : string * string * bool -&gt; System.Reflection.Emit.ModuleBuilder" Usage="assemblyBuilder.DefineDynamicModule (name, fileName, emitSymbolInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ModuleBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="emitSymbolInfo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7d59d-276">Nombre del módulo dinámico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-276">The name of the dynamic module.</span>
          </span>
        </param>
        <param name="fileName">
          <span data-ttu-id="7d59d-277">Nombre del archivo en el que se debe guardar el módulo dinámico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-277">The name of the file to which the dynamic module should be saved.</span>
          </span>
        </param>
        <param name="emitSymbolInfo">
          <span data-ttu-id="7d59d-278">Si es <see langword="true" />, la información de símbolos se escribe con el escritor de símbolos predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-278">If <see langword="true" />, symbolic information is written using the default symbol writer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-279">Define un módulo dinámico con persistencia, especificando el nombre del módulo, el nombre del archivo en el que se guardará el módulo y si se debe emitir información de símbolos mediante el escritor de símbolos predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-279">Defines a persistable dynamic module, specifying the module name, the name of the file to which the module will be saved, and whether symbol information should be emitted using the default symbol writer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d59d-280">Objeto <see cref="T:System.Reflection.Emit.ModuleBuilder" /> que representa el módulo dinámico definido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-280">A <see cref="T:System.Reflection.Emit.ModuleBuilder" /> object representing the defined dynamic module.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d59d-281">Para definir un módulo dinámico con persistencia, este ensamblado debe crearse con el <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save> o <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave> atributo.</span><span class="sxs-lookup"><span data-stu-id="7d59d-281">To define a persistable dynamic module, this assembly needs to be created with the <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save> or the <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave> attribute.</span></span>  
  
 <span data-ttu-id="7d59d-282">Si desea que el módulo que contiene el manifiesto del ensamblado, `name` debe ser el mismo que el nombre del ensamblado (es decir, el <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> propiedad de la <xref:System.Reflection.AssemblyName> utilizado para crear el ensamblado dinámico) y `fileName` debe ser el mismo que el nombre de archivo que especifique cuando se guarda el ensamblado.</span><span class="sxs-lookup"><span data-stu-id="7d59d-282">If you want the module to contain the assembly manifest, `name` should be the same as the name of the assembly (that is, the <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> property of the <xref:System.Reflection.AssemblyName> used to create the dynamic assembly) and `fileName` should be the same as the filename you specify when you save the assembly.</span></span>  
  
 <span data-ttu-id="7d59d-283">En un ensamblado con un solo módulo, ese módulo debe contener el manifiesto del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="7d59d-283">In an assembly with only one module, that module should contain the assembly manifest.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7d59d-284">Para suprimir las optimizaciones al depurar los módulos dinámicos, aplique el <xref:System.Diagnostics.DebuggableAttribute> atributo al ensamblado dinámico antes de llamar a <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span><span class="sxs-lookup"><span data-stu-id="7d59d-284">To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span></span> <span data-ttu-id="7d59d-285">Cree una instancia de <xref:System.Diagnostics.DebuggableAttribute> con el <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> marca y aplicarla mediante el <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> método.</span><span class="sxs-lookup"><span data-stu-id="7d59d-285">Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method.</span></span> <span data-ttu-id="7d59d-286">El atributo debe aplicarse al ensamblado dinámico.</span><span class="sxs-lookup"><span data-stu-id="7d59d-286">The attribute must be applied to the dynamic assembly.</span></span> <span data-ttu-id="7d59d-287">No tiene ningún efecto si se aplica al módulo.</span><span class="sxs-lookup"><span data-stu-id="7d59d-287">It has no effect if applied to the module.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7d59d-288">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="7d59d-288">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="7d59d-289">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="7d59d-289">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d59d-290">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="7d59d-290">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="7d59d-291">El ejemplo de código siguiente muestra cómo crear un módulo dinámico con persistencia con el uso de la emisión de símbolos `DefineDynamicModule`.</span><span class="sxs-lookup"><span data-stu-id="7d59d-291">The code example below demonstrates how to create a persistent dynamic module with symbol emission using `DefineDynamicModule`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CPP/source.cpp#4)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CS/source.cs#4)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d59d-292">El valor de <paramref name="name" /> o <paramref name="fileName" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-292">
              <paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d59d-293">La longitud de <paramref name="name" /> o <paramref name="fileName" /> es cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-293">The length of <paramref name="name" /> or <paramref name="fileName" /> is zero.</span>
          </span>
          <span data-ttu-id="7d59d-294">-o bien- La longitud de <paramref name="name" /> es superior a la longitud máxima definida por el sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-294">-or-  The length of <paramref name="name" /> is greater than the system-defined maximum length.</span>
          </span>
          <span data-ttu-id="7d59d-295">-o bien- <paramref name="fileName" /> contiene una especificación de ruta de acceso (por ejemplo, un componente de directorio).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-295">-or-  <paramref name="fileName" /> contains a path specification (a directory component, for example).</span>
          </span>
          <span data-ttu-id="7d59d-296">-o bien- Hay un conflicto con el nombre de otro archivo que pertenece a este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-296">-or-  There is a conflict with the name of another file that belongs to this assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7d59d-297">Este ensamblado se ha guardado previamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-297">This assembly has been previously saved.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7d59d-298">Se llamó a este ensamblado en un ensamblado dinámico con el atributo <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Run" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-298">This assembly was called on a dynamic assembly with the <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Run" /> attribute.</span>
          </span>
        </exception>
        <exception cref="T:System.ExecutionEngineException">
          <span data-ttu-id="7d59d-299">No se puede cargar el ensamblado para el escritor de símbolos predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-299">The assembly for default symbol writer cannot be loaded.</span>
          </span>
          <span data-ttu-id="7d59d-300">-o bien- No se encuentra el tipo que implementa la interfaz del escritor de símbolos predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-300">-or-  The type that implements the default symbol writer interface cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7d59d-301">El llamador no dispone del permiso requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-301">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="7d59d-302">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-302">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="7d59d-303">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-303">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="7d59d-304">Escribir = true o Append = true es necesaria para guardar este módulo</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-304">Write=true or Append=true is needed to save this module</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineResource">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7d59d-305">Define un recurso administrado independiente para este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-305">Defines a standalone managed resource for this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineResource">
      <MemberSignature Language="C#" Value="public System.Resources.IResourceWriter DefineResource (string name, string description, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Resources.IResourceWriter DefineResource(string name, string description, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineResource(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineResource (name As String, description As String, fileName As String) As IResourceWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Resources::IResourceWriter ^ DefineResource(System::String ^ name, System::String ^ description, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DefineResource : string * string * string -&gt; System.Resources.IResourceWriter" Usage="assemblyBuilder.DefineResource (name, description, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.IResourceWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7d59d-306">Nombre lógico del recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-306">The logical name of the resource.</span>
          </span>
        </param>
        <param name="description">
          <span data-ttu-id="7d59d-307">Descripción textual del recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-307">A textual description of the resource.</span>
          </span>
        </param>
        <param name="fileName">
          <span data-ttu-id="7d59d-308">Nombre del archivo físico (archivo .resources) al que está asignado el nombre lógico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-308">The physical file name (.resources file) to which the logical name is mapped.</span>
          </span>
          <span data-ttu-id="7d59d-309">No debe incluir una ruta de acceso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-309">This should not include a path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-310">Define un recurso administrado independiente para este ensamblado con el atributo de recurso público predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-310">Defines a standalone managed resource for this assembly with the default public resource attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d59d-311">Un objeto <see cref="T:System.Resources.ResourceWriter" /> para el recurso especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-311">A <see cref="T:System.Resources.ResourceWriter" /> object for the specified resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d59d-312">Se pueden agregar recursos muy específicos con el valor devuelto <xref:System.Resources.ResourceWriter> mediante una llamada a <xref:System.Resources.ResourceWriter.AddResource%2A>.</span><span class="sxs-lookup"><span data-stu-id="7d59d-312">Fine grain resources can be added with the returned <xref:System.Resources.ResourceWriter> by calling <xref:System.Resources.ResourceWriter.AddResource%2A>.</span></span>  
  
 <span data-ttu-id="7d59d-313">`fileName` no se debe ser el mismo que el de cualquier otro módulo con persistencia, recurso administrado independiente o el archivo de manifiesto independiente.</span><span class="sxs-lookup"><span data-stu-id="7d59d-313">`fileName` should not be the same as that of any other persistable module, stand-alone managed resource, or the stand-alone manifest file.</span></span>  
  
 <span data-ttu-id="7d59d-314">El runtime llama a la <xref:System.Resources.ResourceWriter.Close%2A> método cuando se guarda el ensamblado dinámico.</span><span class="sxs-lookup"><span data-stu-id="7d59d-314">The runtime calls the <xref:System.Resources.ResourceWriter.Close%2A> method when the dynamic assembly is saved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7d59d-315">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="7d59d-315">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="7d59d-316">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="7d59d-316">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d59d-317">En el ejemplo siguiente se usa el <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A> método para obtener un escritor de recursos.</span><span class="sxs-lookup"><span data-stu-id="7d59d-317">The following example uses the <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A> method to get a resource writer.</span></span> <span data-ttu-id="7d59d-318">El ejemplo utiliza el sistema de escritura de recursos para agregar tres cadenas de recursos.</span><span class="sxs-lookup"><span data-stu-id="7d59d-318">The example uses the resource writer to add three resource strings.</span></span>  
  
 [!code-cpp[AssemblyBuilder.DefineResource Example 2#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder.DefineResource Example 2/CPP/assemblybuilder_defineresource.cpp#1)]
 [!code-csharp[AssemblyBuilder.DefineResource Example 2#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder.DefineResource Example 2/CS/assemblybuilder_defineresource.cs#1)]
 [!code-vb[AssemblyBuilder.DefineResource Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder.DefineResource Example 2/VB/assemblybuilder_defineresource.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d59d-319">
            <paramref name="name" /> se definió anteriormente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-319">
              <paramref name="name" /> has been previously defined.</span>
          </span>
          <span data-ttu-id="7d59d-320">-o bien- Hay otro archivo en el ensamblado denominado <paramref name="fileName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-320">-or-  There is another file in the assembly named <paramref name="fileName" />.</span>
          </span>
          <span data-ttu-id="7d59d-321">-o bien- La longitud de <paramref name="name" /> es cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-321">-or-  The length of <paramref name="name" /> is zero.</span>
          </span>
          <span data-ttu-id="7d59d-322">-o bien- La longitud de <paramref name="fileName" /> es cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-322">-or-  The length of <paramref name="fileName" /> is zero.</span>
          </span>
          <span data-ttu-id="7d59d-323">-o bien- <paramref name="fileName" /> incluye una ruta de acceso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-323">-or-  <paramref name="fileName" /> includes a path.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d59d-324">El valor de <paramref name="name" /> o <paramref name="fileName" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-324">
              <paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7d59d-325">El llamador no dispone del permiso requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-325">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="7d59d-326">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-326">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="7d59d-327">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-327">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="7d59d-328">Escribir = true o Append = true</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-328">Write=true or Append=true</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DefineResource">
      <MemberSignature Language="C#" Value="public System.Resources.IResourceWriter DefineResource (string name, string description, string fileName, System.Reflection.ResourceAttributes attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Resources.IResourceWriter DefineResource(string name, string description, string fileName, valuetype System.Reflection.ResourceAttributes attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineResource(System.String,System.String,System.String,System.Reflection.ResourceAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineResource (name As String, description As String, fileName As String, attribute As ResourceAttributes) As IResourceWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Resources::IResourceWriter ^ DefineResource(System::String ^ name, System::String ^ description, System::String ^ fileName, System::Reflection::ResourceAttributes attribute);" />
      <MemberSignature Language="F#" Value="member this.DefineResource : string * string * string * System.Reflection.ResourceAttributes -&gt; System.Resources.IResourceWriter" Usage="assemblyBuilder.DefineResource (name, description, fileName, attribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.IResourceWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="attribute" Type="System.Reflection.ResourceAttributes" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7d59d-329">Nombre lógico del recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-329">The logical name of the resource.</span>
          </span>
        </param>
        <param name="description">
          <span data-ttu-id="7d59d-330">Descripción textual del recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-330">A textual description of the resource.</span>
          </span>
        </param>
        <param name="fileName">
          <span data-ttu-id="7d59d-331">Nombre del archivo físico (archivo .resources) al que está asignado el nombre lógico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-331">The physical file name (.resources file) to which the logical name is mapped.</span>
          </span>
          <span data-ttu-id="7d59d-332">Esto no debe incluir una ruta de acceso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-332">This should not include a path.</span>
          </span>
        </param>
        <param name="attribute">
          <span data-ttu-id="7d59d-333">Atributos de recursos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-333">The resource attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-334">Define un recurso administrado independiente para este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-334">Defines a standalone managed resource for this assembly.</span>
          </span>
          <span data-ttu-id="7d59d-335">Los atributos se pueden especificar para el recurso administrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-335">Attributes can be specified for the managed resource.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d59d-336">Un objeto <see cref="T:System.Resources.ResourceWriter" /> para el recurso especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-336">A <see cref="T:System.Resources.ResourceWriter" /> object for the specified resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d59d-337">Se pueden agregar recursos concretos con el valor devuelto <xref:System.Resources.ResourceWriter> mediante una llamada a <xref:System.Resources.ResourceWriter.AddResource%2A>.</span><span class="sxs-lookup"><span data-stu-id="7d59d-337">Fine-grain resources can be added with the returned <xref:System.Resources.ResourceWriter> by calling <xref:System.Resources.ResourceWriter.AddResource%2A>.</span></span>  
  
 <span data-ttu-id="7d59d-338">`fileName` no se debe ser el mismo que el de cualquier otro módulo con persistencia, recurso administrado independiente o el archivo de manifiesto independiente.</span><span class="sxs-lookup"><span data-stu-id="7d59d-338">`fileName` should not be the same as that of any other persistable module, standalone managed resource, or the standalone manifest file.</span></span>  
  
 <span data-ttu-id="7d59d-339">El runtime llama a la <xref:System.Resources.ResourceWriter.Close%2A> método cuando se guarda el ensamblado dinámico.</span><span class="sxs-lookup"><span data-stu-id="7d59d-339">The runtime calls the <xref:System.Resources.ResourceWriter.Close%2A> method when the dynamic assembly is saved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7d59d-340">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="7d59d-340">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="7d59d-341">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="7d59d-341">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d59d-342">
            <paramref name="name" /> se ha definido anteriormente o hay otro archivo en el ensamblado denominado <paramref name="fileName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-342">
              <paramref name="name" /> has been previously defined or if there is another file in the assembly named <paramref name="fileName" />.</span>
          </span>
          <span data-ttu-id="7d59d-343">-o bien- La longitud de <paramref name="name" /> es cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-343">-or-  The length of <paramref name="name" /> is zero.</span>
          </span>
          <span data-ttu-id="7d59d-344">-o bien- La longitud de <paramref name="fileName" /> es cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-344">-or-  The length of <paramref name="fileName" /> is zero.</span>
          </span>
          <span data-ttu-id="7d59d-345">-o bien- <paramref name="fileName" /> incluye una ruta de acceso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-345">-or-  <paramref name="fileName" /> includes a path.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d59d-346">El valor de <paramref name="name" /> o <paramref name="fileName" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-346">
              <paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7d59d-347">El llamador no dispone del permiso requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-347">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="7d59d-348">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-348">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="7d59d-349">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-349">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="7d59d-350">Escribir = true o Append = true</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-350">Write=true or Append=true</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineUnmanagedResource">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7d59d-351">Define un recurso no administrado para este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-351">Defines an unmanaged resource for this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineUnmanagedResource">
      <MemberSignature Language="C#" Value="public void DefineUnmanagedResource (byte[] resource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineUnmanagedResource(unsigned int8[] resource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineUnmanagedResource (resource As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineUnmanagedResource(cli::array &lt;System::Byte&gt; ^ resource);" />
      <MemberSignature Language="F#" Value="member this.DefineUnmanagedResource : byte[] -&gt; unit" Usage="assemblyBuilder.DefineUnmanagedResource resource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resource" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="resource">
          <span data-ttu-id="7d59d-352">Blob opaco de bytes que representa el recurso no administrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-352">The opaque blob of bytes representing the unmanaged resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-353">Define un recurso no administrado para este ensamblado como blob opaco de bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-353">Defines an unmanaged resource for this assembly as an opaque blob of bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d59d-354">Un ensamblado puede asociarse con un único recurso no administrado.</span><span class="sxs-lookup"><span data-stu-id="7d59d-354">An assembly can be associated with only one unmanaged resource.</span></span> <span data-ttu-id="7d59d-355">Esto significa que la llamada a <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> o <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> después uno de los métodos se llamó anteriormente, se producirá la excepción System.ArgumentException.</span><span class="sxs-lookup"><span data-stu-id="7d59d-355">This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException being throw.</span></span> <span data-ttu-id="7d59d-356">Varios recursos no administrados deben combinarse con una herramienta como la utilidad ResMerge de Microsoft (no proporcionada con common language runtime).</span><span class="sxs-lookup"><span data-stu-id="7d59d-356">Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d59d-357">Ejemplo de código siguiente crea y adjunta una matriz de bytes que representa un recurso no administrado a un ensamblado dinámico, usando `DefineUnmanagedResource`.</span><span class="sxs-lookup"><span data-stu-id="7d59d-357">The following code sample creates and attaches an array of bytes representing an unmanaged resource to a dynamic assembly, using `DefineUnmanagedResource`.</span></span>  
  
 [!code-cpp[AssemblyBuilder_DefineUnmanagedResource2#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource2/CPP/assemblybuilder_defineunmanagedresource2.cpp#1)]
 [!code-csharp[AssemblyBuilder_DefineUnmanagedResource2#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource2/CS/assemblybuilder_defineunmanagedresource2.cs#1)]
 [!code-vb[AssemblyBuilder_DefineUnmanagedResource2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource2/VB/assemblybuilder_defineunmanagedresource2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d59d-358">Se ha definido previamente un recurso no administrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-358">An unmanaged resource was previously defined.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d59d-359">
            <paramref name="resource" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-359">
              <paramref name="resource" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7d59d-360">El llamador no dispone del permiso requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-360">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="7d59d-361">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-361">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="7d59d-362">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-362">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DefineUnmanagedResource">
      <MemberSignature Language="C#" Value="public void DefineUnmanagedResource (string resourceFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineUnmanagedResource(string resourceFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineUnmanagedResource (resourceFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineUnmanagedResource(System::String ^ resourceFileName);" />
      <MemberSignature Language="F#" Value="member this.DefineUnmanagedResource : string -&gt; unit" Usage="assemblyBuilder.DefineUnmanagedResource resourceFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceFileName">
          <span data-ttu-id="7d59d-363">Nombre del archivo de recursos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-363">The name of the resource file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-364">Define un archivo de recurso no administrado para este ensamblado con el nombre del archivo de recursos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-364">Defines an unmanaged resource file for this assembly given the name of the resource file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d59d-365">Un ensamblado puede asociarse con un único recurso no administrado.</span><span class="sxs-lookup"><span data-stu-id="7d59d-365">An assembly can be associated with only one unmanaged resource.</span></span> <span data-ttu-id="7d59d-366">Esto significa que la llamada a <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> o <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> después uno de los métodos se llamó anteriormente producirá la excepción System.ArgumentException.</span><span class="sxs-lookup"><span data-stu-id="7d59d-366">This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException.</span></span> <span data-ttu-id="7d59d-367">Varios recursos no administrados deben combinarse con una herramienta como la utilidad ResMerge de Microsoft (no proporcionada con common language runtime).</span><span class="sxs-lookup"><span data-stu-id="7d59d-367">Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7d59d-368">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="7d59d-368">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="7d59d-369">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="7d59d-369">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d59d-370">El ejemplo siguiente muestra una llamada a `DefineUnmanagedResource`, pasando un archivo de recursos externos.</span><span class="sxs-lookup"><span data-stu-id="7d59d-370">The example below demonstrates a call to `DefineUnmanagedResource`, passing an external resource file.</span></span>  
  
 [!code-cpp[AssemblyBuilder_DefineUnmanagedResource#3](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource/CPP/assemblybuilder_defineunmanagedresource.cpp#3)]
 [!code-csharp[AssemblyBuilder_DefineUnmanagedResource#3](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource/CS/assemblybuilder_defineunmanagedresource.cs#3)]
 [!code-vb[AssemblyBuilder_DefineUnmanagedResource#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource/VB/assemblybuilder_defineunmanagedresource.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d59d-371">Se ha definido previamente un recurso no administrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-371">An unmanaged resource was previously defined.</span>
          </span>
          <span data-ttu-id="7d59d-372">-o bien- El archivo <paramref name="resourceFileName" /> no es legible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-372">-or-  The file <paramref name="resourceFileName" /> is not readable.</span>
          </span>
          <span data-ttu-id="7d59d-373">-o bien- <paramref name="resourceFileName" /> es la cadena vacía ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-373">-or-  <paramref name="resourceFileName" /> is the empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d59d-374">
            <paramref name="resourceFileName" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-374">
              <paramref name="resourceFileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="7d59d-375">No se ha encontrado <paramref name="resourceFileName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-375">
              <paramref name="resourceFileName" /> is not found.</span>
          </span>
          <span data-ttu-id="7d59d-376">-o bien- <paramref name="resourceFileName" /> es un directorio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-376">-or-  <paramref name="resourceFileName" /> is a directory.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7d59d-377">El llamador no dispone del permiso requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-377">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="7d59d-378">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-378">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="7d59d-379">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-379">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="7d59d-380">El permiso FileIOPermissionAccess.Read es necesario tener acceso al archivo de recursos <paramref name="resourceFileName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-380">The FileIOPermissionAccess.Read permission is needed to access the resource file <paramref name="resourceFileName" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineVersionInfoResource">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7d59d-381">Define un recurso de información de versión no administrado para este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-381">Defines an unmanaged version information resource for this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineVersionInfoResource">
      <MemberSignature Language="C#" Value="public void DefineVersionInfoResource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineVersionInfoResource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineVersionInfoResource ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineVersionInfoResource();" />
      <MemberSignature Language="F#" Value="member this.DefineVersionInfoResource : unit -&gt; unit" Usage="assemblyBuilder.DefineVersionInfoResource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7d59d-382">Define un recurso de información de versión sin administrar mediante la información especificada en el objeto AssemblyName del ensamblado y los atributos personalizados del ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-382">Defines an unmanaged version information resource using the information specified in the assembly's AssemblyName object and the assembly's custom attributes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d59d-383">Un ensamblado puede asociarse con un único recurso no administrado.</span><span class="sxs-lookup"><span data-stu-id="7d59d-383">An assembly can be associated with only one unmanaged resource.</span></span> <span data-ttu-id="7d59d-384">Esto significa que la llamada a <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> o <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> después uno de los métodos se llamó anteriormente producirá la excepción System.ArgumentException.</span><span class="sxs-lookup"><span data-stu-id="7d59d-384">This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException.</span></span> <span data-ttu-id="7d59d-385">Varios recursos no administrados deben combinarse con una herramienta como la utilidad ResMerge de Microsoft (no proporcionada con el SDK de common language runtime).</span><span class="sxs-lookup"><span data-stu-id="7d59d-385">Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime SDK).</span></span>  
  
 <span data-ttu-id="7d59d-386">Las cadenas de argumentos vacía se escriben como un único espacio.</span><span class="sxs-lookup"><span data-stu-id="7d59d-386">Empty argument strings get written as a single space.</span></span> <span data-ttu-id="7d59d-387">Los espacios se sustituyen por caracteres nulos en las cadenas de argumento.</span><span class="sxs-lookup"><span data-stu-id="7d59d-387">Spaces are substituted for null characters in the argument strings.</span></span>  
  
 <span data-ttu-id="7d59d-388">La información se deduce de la `AssemblyName` objeto utilizado para definir este ensamblado dinámico.</span><span class="sxs-lookup"><span data-stu-id="7d59d-388">The information is inferred from the `AssemblyName` object used to define this dynamic assembly.</span></span> <span data-ttu-id="7d59d-389">Atributos personalizados de este ensamblado reemplazan la información especificada en el `AssemblyName` objeto.</span><span class="sxs-lookup"><span data-stu-id="7d59d-389">This assembly's custom attributes override information specified in the `AssemblyName` object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7d59d-390">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="7d59d-390">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="7d59d-391">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="7d59d-391">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d59d-392">El ejemplo siguiente muestra el uso de `DefineVersionInfoResource`.</span><span class="sxs-lookup"><span data-stu-id="7d59d-392">The example below illustrates the usage of `DefineVersionInfoResource`.</span></span>  
  
 [!code-cpp[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/CPP/assemblybuilder_defineversioninforesource.cpp#1)]
 [!code-csharp[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/CS/assemblybuilder_defineversioninforesource.cs#1)]
 [!code-vb[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/VB/assemblybuilder_defineversioninforesource.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d59d-393">Se definió previamente un recurso de información de versión sin administrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-393">An unmanaged version information resource was previously defined.</span>
          </span>
          <span data-ttu-id="7d59d-394">-o bien- La información de versión sin administrar es demasiado grande para que se pueda almacenar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-394">-or-  The unmanaged version information is too large to persist.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7d59d-395">El llamador no dispone del permiso requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-395">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="7d59d-396">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-396">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="7d59d-397">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-397">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DefineVersionInfoResource">
      <MemberSignature Language="C#" Value="public void DefineVersionInfoResource (string product, string productVersion, string company, string copyright, string trademark);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineVersionInfoResource(string product, string productVersion, string company, string copyright, string trademark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineVersionInfoResource (product As String, productVersion As String, company As String, copyright As String, trademark As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineVersionInfoResource(System::String ^ product, System::String ^ productVersion, System::String ^ company, System::String ^ copyright, System::String ^ trademark);" />
      <MemberSignature Language="F#" Value="member this.DefineVersionInfoResource : string * string * string * string * string -&gt; unit" Usage="assemblyBuilder.DefineVersionInfoResource (product, productVersion, company, copyright, trademark)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="product" Type="System.String" />
        <Parameter Name="productVersion" Type="System.String" />
        <Parameter Name="company" Type="System.String" />
        <Parameter Name="copyright" Type="System.String" />
        <Parameter Name="trademark" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="product">
          <span data-ttu-id="7d59d-398">El nombre del producto con el que se distribuye este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-398">The name of the product with which this assembly is distributed.</span>
          </span>
        </param>
        <param name="productVersion">
          <span data-ttu-id="7d59d-399">La versión del producto con el que se distribuye este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-399">The version of the product with which this assembly is distributed.</span>
          </span>
        </param>
        <param name="company">
          <span data-ttu-id="7d59d-400">El nombre de la compañía que produjo este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-400">The name of the company that produced this assembly.</span>
          </span>
        </param>
        <param name="copyright">
          <span data-ttu-id="7d59d-401">Describe todos los avisos de propiedad intelectual, marcas comerciales y marcas registradas que se aplican a este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-401">Describes all copyright notices, trademarks, and registered trademarks that apply to this assembly.</span>
          </span>
          <span data-ttu-id="7d59d-402">Esto debe incluir el texto completo de todos los avisos, símbolos legales, fechas de copyright, números de marcas comerciales, etc.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-402">This should include the full text of all notices, legal symbols, copyright dates, trademark numbers, and so on.</span>
          </span>
          <span data-ttu-id="7d59d-403">En inglés, esta cadena debe tener el formato "Copyright Microsoft Corp. 1990-2001".</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-403">In English, this string should be in the format "Copyright Microsoft Corp. 1990-2001".</span>
          </span>
        </param>
        <param name="trademark">
          <span data-ttu-id="7d59d-404">Describe todas las marcas comerciales y marcas comerciales registradas que se aplican a este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-404">Describes all trademarks and registered trademarks that apply to this assembly.</span>
          </span>
          <span data-ttu-id="7d59d-405">Esto debe incluir el texto completo de todos los avisos, símbolos legales, números de marcas comerciales, etc.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-405">This should include the full text of all notices, legal symbols, trademark numbers, and so on.</span>
          </span>
          <span data-ttu-id="7d59d-406">En inglés, esta cadena debe tener el formato "Windows es una marca comercial de Microsoft Corporation".</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-406">In English, this string should be in the format "Windows is a trademark of Microsoft Corporation".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-407">Define un recurso de información de versión no administrado para este ensamblado con las especificaciones dadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-407">Defines an unmanaged version information resource for this assembly with the given specifications.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d59d-408">Un ensamblado puede asociarse con un único recurso no administrado.</span><span class="sxs-lookup"><span data-stu-id="7d59d-408">An assembly can be associated with only one unmanaged resource.</span></span> <span data-ttu-id="7d59d-409">Esto significa que la llamada a <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> o <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> después uno de los métodos se llamó anteriormente producirá la excepción System.ArgumentException.</span><span class="sxs-lookup"><span data-stu-id="7d59d-409">This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException.</span></span> <span data-ttu-id="7d59d-410">Varios recursos no administrados deben combinarse con una herramienta como Microsoft `ResMerge` utilidad (no proporcionada con el SDK de common language runtime).</span><span class="sxs-lookup"><span data-stu-id="7d59d-410">Multiple unmanaged resources need to be merged with a tool such as the Microsoft `ResMerge` utility (not supplied with the common language runtime SDK).</span></span>  
  
 <span data-ttu-id="7d59d-411">Las cadenas de argumentos vacía se escriben como un único espacio.</span><span class="sxs-lookup"><span data-stu-id="7d59d-411">Empty argument strings get written as a single space.</span></span> <span data-ttu-id="7d59d-412">Los espacios se sustituyen por caracteres nulos en las cadenas de argumento.</span><span class="sxs-lookup"><span data-stu-id="7d59d-412">Spaces are substituted for null characters in the argument strings.</span></span>  
  
 <span data-ttu-id="7d59d-413">La estructura del recurso de versión incluye datos que identifica la versión, el idioma y la distribución del archivo.</span><span class="sxs-lookup"><span data-stu-id="7d59d-413">The structure of the version resource includes data that identifies the version, language, and distribution of the file.</span></span> <span data-ttu-id="7d59d-414">Programas de instalación de usar las funciones de la biblioteca de instalación de archivos (VER. (DLL) para recuperar el recurso de información de versión de un archivo y extraer los bloques de información de versión desde el recurso.</span><span class="sxs-lookup"><span data-stu-id="7d59d-414">Installation programs use the functions in the file installation library (VER.DLL) to retrieve the version information resource from a file and to extract the version information blocks from the resource.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7d59d-415">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="7d59d-415">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="7d59d-416">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="7d59d-416">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d59d-417">El ejemplo siguiente muestra el uso de `DefineVersionInfoResource`.</span><span class="sxs-lookup"><span data-stu-id="7d59d-417">The example below illustrates the usage of `DefineVersionInfoResource`.</span></span>  
  
 [!code-cpp[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/CPP/assemblybuilder_defineversioninforesource.cpp#1)]
 [!code-csharp[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/CS/assemblybuilder_defineversioninforesource.cs#1)]
 [!code-vb[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/VB/assemblybuilder_defineversioninforesource.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d59d-418">Se definió previamente un recurso de información de versión sin administrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-418">An unmanaged version information resource was previously defined.</span>
          </span>
          <span data-ttu-id="7d59d-419">-o bien- La información de versión sin administrar es demasiado grande para que se pueda almacenar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-419">-or-  The unmanaged version information is too large to persist.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7d59d-420">El llamador no dispone del permiso requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-420">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="7d59d-421">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-421">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="7d59d-422">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-422">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="EntryPoint">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo EntryPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo EntryPoint" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.EntryPoint" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EntryPoint As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MethodInfo ^ EntryPoint { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntryPoint : System.Reflection.MethodInfo" Usage="System.Reflection.Emit.AssemblyBuilder.EntryPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7d59d-423">Devuelve el punto de entrada de este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-423">Returns the entry point of this assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7d59d-424">Punto de entrada de este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-424">The entry point of this assembly.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7d59d-425">El llamador no dispone del permiso requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-425">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="7d59d-426">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-426">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="7d59d-427">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-427">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="assemblyBuilder.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="7d59d-428">Objeto que se va a comparar con esta instancia o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-428">An object to compare with this instance, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-429">Devuelve un valor que indica si esta instancia es igual que el objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-429">Returns a value that indicates whether this instance is equal to the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d59d-430">Es <see langword="true" /> si <paramref name="obj" /> es igual al tipo y valor de esta instancia; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-430">
              <see langword="true" /> if <paramref name="obj" /> equals the type and value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evidence">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.Evidence Evidence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.Evidence Evidence" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.Evidence" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Evidence As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Policy::Evidence ^ Evidence { System::Security::Policy::Evidence ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Evidence : System.Security.Policy.Evidence" Usage="System.Reflection.Emit.AssemblyBuilder.Evidence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7d59d-431">Obtiene la evidencia para este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-431">Gets the evidence for this assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7d59d-432">Evidencia de este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-432">The evidence for this assembly.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public override string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.Reflection.Emit.AssemblyBuilder.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7d59d-433">Obtiene el nombre para mostrar del ensamblado dinámico actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-433">Gets the display name of the current dynamic assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7d59d-434">Nombre para mostrar del ensamblado dinámico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-434">The display name of the dynamic assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d59d-435">Consulte <xref:System.Reflection.AssemblyName> para obtener una descripción del formato del nombre para mostrar de un ensamblado.</span><span class="sxs-lookup"><span data-stu-id="7d59d-435">See <xref:System.Reflection.AssemblyName> for a description of the format of the display name of an assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7d59d-436">Devuelve los atributos personalizados que se han aplicado a la clase <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-436">Returns custom attributes that have been applied to the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" /></span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : bool -&gt; obj[]" Usage="assemblyBuilder.GetCustomAttributes inherit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">
          <span data-ttu-id="7d59d-437">Este argumento se omite para objetos de este tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-437">This argument is ignored for objects of this type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-438">Devuelve todos los atributos personalizados que se han aplicado a la clase <see cref="T:System.Reflection.Emit.AssemblyBuilder" />actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-438">Returns all the custom attributes that have been applied to the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d59d-439">Matriz que contiene los atributos personalizados; la matriz está vacía si no hay ningún atributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-439">An array that contains the custom attributes; the array is empty if there are no attributes.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : Type * bool -&gt; obj[]" Usage="assemblyBuilder.GetCustomAttributes (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="7d59d-440">Tipo base del que derivan los atributos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-440">The base type from which attributes derive.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="7d59d-441">Este argumento se omite para objetos de este tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-441">This argument is ignored for objects of this type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-442">Devuelve todos los atributos personalizados que se han aplicado a la clase <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> actual y que derivan de un tipo de atributo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-442">Returns all the custom attributes that have been applied to the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" />, and that derive from a specified attribute type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d59d-443">Matriz que contiene los atributos personalizados que se derivan en cualquier nivel de <paramref name="attributeType" />; la matriz está vacía si no hay ninguno de esos atributos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-443">An array that contains the custom attributes that are derived at any level from <paramref name="attributeType" />; the array is empty if there are no such attributes.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d59d-444">
            <paramref name="attributeType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-444">
              <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d59d-445">
            <paramref name="attributeType" /> no es un objeto <see cref="T:System.Type" /> proporcionado en tiempo de ejecución.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-445">
              <paramref name="attributeType" /> is not a <see cref="T:System.Type" /> object supplied by the runtime.</span>
          </span>
          <span data-ttu-id="7d59d-446">Por ejemplo, <paramref name="attributeType" /> es un objeto <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-446">For example, <paramref name="attributeType" /> is a <see cref="T:System.Reflection.Emit.TypeBuilder" /> object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributesData">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributesData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributesData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetCustomAttributesData" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributesData () As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributesData();" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributesData : unit -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="assemblyBuilder.GetCustomAttributesData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7d59d-447">Devuelve objetos <see cref="T:System.Reflection.CustomAttributeData" /> que contienen información sobre los atributos que se han aplicado a la clase <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-447">Returns <see cref="T:System.Reflection.CustomAttributeData" /> objects that contain information about the attributes that have been applied to the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d59d-448">Lista genérica de objetos <see cref="T:System.Reflection.CustomAttributeData" /> que representan datos acerca de los atributos que se han aplicado al módulo actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-448">A generic list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the current module.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d59d-449">Utilice este método para examinar los atributos personalizados del código en el contexto de solo reflexión, en casos donde se definen los atributos personalizados a sí mismos en el código que se carga en el contexto de solo reflexión.</span><span class="sxs-lookup"><span data-stu-id="7d59d-449">Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context.</span></span> <span data-ttu-id="7d59d-450">Los métodos como <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> y <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> no se puede usar en casos como éste, porque crean instancias de los atributos.</span><span class="sxs-lookup"><span data-stu-id="7d59d-450">Methods such as <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> and <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> cannot be used in such cases, because they create instances of the attributes.</span></span> <span data-ttu-id="7d59d-451">No se puede ejecutar código en el contexto de solo reflexión.</span><span class="sxs-lookup"><span data-stu-id="7d59d-451">Code in the reflection-only context cannot be executed.</span></span> <span data-ttu-id="7d59d-452">Para obtener más información y como código, vea el <xref:System.Reflection.CustomAttributeData> clase.</span><span class="sxs-lookup"><span data-stu-id="7d59d-452">For more information and for example code, see the <xref:System.Reflection.CustomAttributeData> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDynamicModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ModuleBuilder GetDynamicModule (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ModuleBuilder GetDynamicModule(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetDynamicModule(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDynamicModule (name As String) As ModuleBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ModuleBuilder ^ GetDynamicModule(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetDynamicModule : string -&gt; System.Reflection.Emit.ModuleBuilder" Usage="assemblyBuilder.GetDynamicModule name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ModuleBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7d59d-453">Nombre del módulo dinámico solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-453">The name of the requested dynamic module.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-454">Devuelve el módulo dinámico con el nombre especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-454">Returns the dynamic module with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d59d-455">Objeto ModuleBuilder que representa el módulo dinámico solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-455">A ModuleBuilder object representing the requested dynamic module.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d59d-456">
            <paramref name="name" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-456">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d59d-457">La longitud de <paramref name="name" /> es cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-457">The length of <paramref name="name" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7d59d-458">El llamador no dispone del permiso requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-458">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="7d59d-459">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-459">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="7d59d-460">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-460">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetExportedTypes">
      <MemberSignature Language="C#" Value="public override Type[] GetExportedTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type[] GetExportedTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetExportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetExportedTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;Type ^&gt; ^ GetExportedTypes();" />
      <MemberSignature Language="F#" Value="override this.GetExportedTypes : unit -&gt; Type[]" Usage="assemblyBuilder.GetExportedTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7d59d-461">Obtiene los tipos definidos en este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-461">Gets the exported types defined in this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d59d-462">Matriz de <see cref="T:System.Type" /> que contiene los tipos exportados definidos en este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-462">An array of <see cref="T:System.Type" /> containing the exported types defined in this assembly.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7d59d-463">Este método no se implementa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-463">This method is not implemented.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7d59d-464">El llamador no dispone del permiso requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-464">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="7d59d-465">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-465">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="7d59d-466">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-466">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetFile">
      <MemberSignature Language="C#" Value="public override System.IO.FileStream GetFile (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.FileStream GetFile(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFile (name As String) As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::FileStream ^ GetFile(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetFile : string -&gt; System.IO.FileStream" Usage="assemblyBuilder.GetFile name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7d59d-467">Nombre del archivo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-467">The name of the specified file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-468">Obtiene un objeto <see cref="T:System.IO.FileStream" /> para el archivo especificado en la tabla de archivos del manifiesto de este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-468">Gets a <see cref="T:System.IO.FileStream" /> for the specified file in the file table of the manifest of this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d59d-469">
            <see cref="T:System.IO.FileStream" /> para el archivo especificado, o <see langword="null" /> si no se encuentra el archivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-469">A <see cref="T:System.IO.FileStream" /> for the specified file, or <see langword="null" />, if the file is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d59d-470">`name` no se debe incluir la ruta de acceso al archivo.</span><span class="sxs-lookup"><span data-stu-id="7d59d-470">`name` should not include the path to the file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7d59d-471">Este método no se admite actualmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-471">This method is not currently supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7d59d-472">El llamador no dispone del permiso requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-472">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="7d59d-473">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-473">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="7d59d-474">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-474">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public override System.IO.FileStream[] GetFiles (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.FileStream[] GetFiles(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetFiles(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFiles (getResourceModules As Boolean) As FileStream()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::IO::FileStream ^&gt; ^ GetFiles(bool getResourceModules);" />
      <MemberSignature Language="F#" Value="override this.GetFiles : bool -&gt; System.IO.FileStream[]" Usage="assemblyBuilder.GetFiles getResourceModules" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules">
          <span data-ttu-id="7d59d-475">
            <see langword="true" /> para incluir módulos de recursos; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-475">
              <see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-476">Obtiene los archivos en la tabla de archivos del manifiesto del ensamblado, especificando si deben incluirse módulos de recursos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-476">Gets the files in the file table of an assembly manifest, specifying whether to include resource modules.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d59d-477">Matriz de objetos <see cref="T:System.IO.FileStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-477">An array of <see cref="T:System.IO.FileStream" /> objects.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7d59d-478">Este método no se admite actualmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-478">This method is not currently supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7d59d-479">El llamador no dispone del permiso requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-479">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="7d59d-480">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-480">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="7d59d-481">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-481">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="assemblyBuilder.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7d59d-482">Devuelve el código hash de esta instancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-482">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d59d-483">Código hash de un entero de 32 bits con signo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-483">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLoadedModules">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module[] GetLoadedModules (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Module[] GetLoadedModules(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetLoadedModules(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLoadedModules (getResourceModules As Boolean) As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::Module ^&gt; ^ GetLoadedModules(bool getResourceModules);" />
      <MemberSignature Language="F#" Value="override this.GetLoadedModules : bool -&gt; System.Reflection.Module[]" Usage="assemblyBuilder.GetLoadedModules getResourceModules" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules">
          <span data-ttu-id="7d59d-484">
            <see langword="true" /> para incluir módulos de recursos; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-484">
              <see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-485">Devuelve todos los módulos cargados que forman parte de este ensamblado e incluye opcionalmente módulos de recursos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-485">Returns all the loaded modules that are part of this assembly, and optionally includes resource modules.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d59d-486">Módulos cargados que forman parte de este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-486">The loaded modules that are part of this assembly.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceInfo">
      <MemberSignature Language="C#" Value="public override System.Reflection.ManifestResourceInfo GetManifestResourceInfo (string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.ManifestResourceInfo GetManifestResourceInfo(string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetManifestResourceInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetManifestResourceInfo (resourceName As String) As ManifestResourceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::ManifestResourceInfo ^ GetManifestResourceInfo(System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="override this.GetManifestResourceInfo : string -&gt; System.Reflection.ManifestResourceInfo" Usage="assemblyBuilder.GetManifestResourceInfo resourceName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ManifestResourceInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceName">
          <span data-ttu-id="7d59d-487">Nombre del recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-487">The name of the resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-488">Devuelve información sobre cómo el recurso dado ha persistido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-488">Returns information about how the given resource has been persisted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d59d-489">
            <see langword="null" /> rellenado con información sobre la topología del recurso, o <see cref="T:System.Reflection.ManifestResourceInfo" /> si no se encuentra el recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-489">
              <see cref="T:System.Reflection.ManifestResourceInfo" /> populated with information about the resource's topology, or <see langword="null" /> if the resource is not found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7d59d-490">Este método no se admite actualmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-490">This method is not currently supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7d59d-491">El llamador no dispone del permiso requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-491">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="7d59d-492">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-492">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="7d59d-493">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-493">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceNames">
      <MemberSignature Language="C#" Value="public override string[] GetManifestResourceNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetManifestResourceNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetManifestResourceNames" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetManifestResourceNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetManifestResourceNames();" />
      <MemberSignature Language="F#" Value="override this.GetManifestResourceNames : unit -&gt; string[]" Usage="assemblyBuilder.GetManifestResourceNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7d59d-494">Carga el recurso del manifiesto especificado a partir de este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-494">Loads the specified manifest resource from this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d59d-495">Matriz de tipo <see langword="String" /> que contiene los nombres de todos los recursos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-495">An array of type <see langword="String" /> containing the names of all the resources.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7d59d-496">Este método no se admite en un ensamblado dinámico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-496">This method is not supported on a dynamic assembly.</span>
          </span>
          <span data-ttu-id="7d59d-497">Para obtener los nombres de recurso del manifiesto, use <see cref="M:System.Reflection.Assembly.GetManifestResourceNames" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-497">To get the manifest resource names, use <see cref="M:System.Reflection.Assembly.GetManifestResourceNames" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7d59d-498">El llamador no dispone del permiso requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-498">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="7d59d-499">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-499">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="7d59d-500">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-500">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetManifestResourceStream">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7d59d-501">Carga el recurso del manifiesto especificado a partir de este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-501">Loads the specified manifest resource from this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetManifestResourceStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetManifestResourceStream (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetManifestResourceStream(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetManifestResourceStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetManifestResourceStream (name As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ GetManifestResourceStream(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetManifestResourceStream : string -&gt; System.IO.Stream" Usage="assemblyBuilder.GetManifestResourceStream name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7d59d-502">Nombre del recurso de manifiesto que se solicita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-502">The name of the manifest resource being requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-503">Carga el recurso del manifiesto especificado a partir de este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-503">Loads the specified manifest resource from this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d59d-504">
            <see cref="T:System.IO.Stream" /> que representa este recurso de manifiesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-504">A <see cref="T:System.IO.Stream" /> representing this manifest resource.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7d59d-505">Este método no se admite actualmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-505">This method is not currently supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7d59d-506">El llamador no dispone del permiso requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-506">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="7d59d-507">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-507">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="7d59d-508">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-508">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetManifestResourceStream (Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetManifestResourceStream(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetManifestResourceStream(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ GetManifestResourceStream(Type ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetManifestResourceStream : Type * string -&gt; System.IO.Stream" Usage="assemblyBuilder.GetManifestResourceStream (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="7d59d-509">Tipo cuyo espacio de nombres se usa para especificar el nombre del recurso de manifiesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-509">The type whose namespace is used to scope the manifest resource name.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="7d59d-510">Nombre del recurso de manifiesto que se solicita.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-510">The name of the manifest resource being requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-511">Carga el recurso del manifiesto especificado según el espacio de nombres del tipo especificado a partir de este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-511">Loads the specified manifest resource, scoped by the namespace of the specified type, from this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d59d-512">
            <see cref="T:System.IO.Stream" /> que representa este recurso de manifiesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-512">A <see cref="T:System.IO.Stream" /> representing this manifest resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d59d-513">El valor devuelto <xref:System.IO.Stream> tiene el puntero de archivo establecido al principio del recurso.</span><span class="sxs-lookup"><span data-stu-id="7d59d-513">The returned <xref:System.IO.Stream> has its file pointer set to the beginning of the resource.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d59d-514">Si el nombre completo del `type` es "MyNameSpace.MyClasses" y `name` es "Dot", `GetManifestResourceStream` buscará un recurso denominado MyNameSpace.Dot.</span><span class="sxs-lookup"><span data-stu-id="7d59d-514">If the full name of `type` is "MyNameSpace.MyClasses" and `name` is "Dot", `GetManifestResourceStream` will search for a resource named MyNameSpace.Dot.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7d59d-515">Este método no se admite actualmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-515">This method is not currently supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7d59d-516">El llamador no dispone del permiso requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-516">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="7d59d-517">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-517">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="7d59d-518">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-518">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetModule">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module GetModule (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Module GetModule(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetModule(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetModule (name As String) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::Module ^ GetModule(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetModule : string -&gt; System.Reflection.Module" Usage="assemblyBuilder.GetModule name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7d59d-519">Nombre del módulo solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-519">The name of the requested module.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-520">Obtiene el módulo especificado en este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-520">Gets the specified module in this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d59d-521">Módulo que se solicita o <see langword="null" /> si no se encuentra el módulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-521">The module being requested, or <see langword="null" /> if the module is not found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModules">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module[] GetModules (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Module[] GetModules(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetModules(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetModules (getResourceModules As Boolean) As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::Module ^&gt; ^ GetModules(bool getResourceModules);" />
      <MemberSignature Language="F#" Value="override this.GetModules : bool -&gt; System.Reflection.Module[]" Usage="assemblyBuilder.GetModules getResourceModules" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules">
          <span data-ttu-id="7d59d-522">
            <see langword="true" /> para incluir módulos de recursos; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-522">
              <see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-523">Obtiene todos los módulos que forman parte de este ensamblado e incluye opcionalmente módulos de recursos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-523">Gets all the modules that are part of this assembly, and optionally includes resource modules.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d59d-524">Módulos que forman parte de este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-524">The modules that are part of this assembly.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override System.Reflection.AssemblyName GetName (bool copiedName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.AssemblyName GetName(bool copiedName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetName(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (copiedName As Boolean) As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::AssemblyName ^ GetName(bool copiedName);" />
      <MemberSignature Language="F#" Value="override this.GetName : bool -&gt; System.Reflection.AssemblyName" Usage="assemblyBuilder.GetName copiedName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="copiedName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="copiedName">
          <span data-ttu-id="7d59d-525">Es <see langword="true" /> para establecer el código base en la ubicación del ensamblado después de realizar una copia sombra; es <see langword="false" /> para establecer el código base en la ubicación original.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-525">
              <see langword="true" /> to set the code base to the location of the assembly after it is shadow-copied; <see langword="false" /> to set the code base to the original location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-526">Obtiene el objeto <see cref="T:System.Reflection.AssemblyName" /> que se especificó cuando se creó el ensamblado dinámico actual, y establece el código base tal y como se especifica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-526">Gets the <see cref="T:System.Reflection.AssemblyName" /> that was specified when the current dynamic assembly was created, and sets the code base as specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d59d-527">Nombre del ensamblado dinámico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-527">The name of the dynamic assembly.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReferencedAssemblies">
      <MemberSignature Language="C#" Value="public override System.Reflection.AssemblyName[] GetReferencedAssemblies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.AssemblyName[] GetReferencedAssemblies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetReferencedAssemblies () As AssemblyName()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ GetReferencedAssemblies();" />
      <MemberSignature Language="F#" Value="override this.GetReferencedAssemblies : unit -&gt; System.Reflection.AssemblyName[]" Usage="assemblyBuilder.GetReferencedAssemblies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7d59d-528">Obtiene una lista incompleta de objetos <see cref="T:System.Reflection.AssemblyName" /> para los ensamblados a los que hace referencia esta clase <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-528">Gets an incomplete list of <see cref="T:System.Reflection.AssemblyName" /> objects for the assemblies that are referenced by this <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d59d-529">Matriz de nombres de ensamblado para los ensamblados a los que se hace referencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-529">An array of assembly names for the referenced assemblies.</span>
          </span>
          <span data-ttu-id="7d59d-530">Esta matriz no es una lista completa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-530">This array is not a complete list.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d59d-531">Este método no devuelve una lista completa de los ensamblados que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="7d59d-531">This method does not return a complete list of referenced assemblies.</span></span> <span data-ttu-id="7d59d-532">Por ejemplo, si aplica un atributo personalizado a la <xref:System.Reflection.Emit.AssemblyBuilder>, el ensamblado en el que se definió el atributo está incluido en la lista devuelta por este método.</span><span class="sxs-lookup"><span data-stu-id="7d59d-532">For example, if you apply a custom attribute to the <xref:System.Reflection.Emit.AssemblyBuilder>, the assembly in which the attribute was defined is included in the list returned by this method.</span></span> <span data-ttu-id="7d59d-533">Sin embargo, si usa un <xref:System.Type> objeto para especificar el tipo de un parámetro de método que el tipo no se incluye.</span><span class="sxs-lookup"><span data-stu-id="7d59d-533">However, if you use a <xref:System.Type> object to specify the type of a method parameter, that type is not included.</span></span>  
  
 <span data-ttu-id="7d59d-534">Para obtener una lista completa de los ensamblados que se hace referencia, guarde el ensamblado, cargarlo en otro dominio de aplicación y llamada la <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="7d59d-534">To get a complete list of referenced assemblies, save the assembly, load it into another application domain, and call the <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSatelliteAssembly">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7d59d-535">Obtiene un ensamblaje de satélite en concreto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-535">Gets a specified satellite assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSatelliteAssembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Assembly GetSatelliteAssembly(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetSatelliteAssembly(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSatelliteAssembly (culture As CultureInfo) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::Assembly ^ GetSatelliteAssembly(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="override this.GetSatelliteAssembly : System.Globalization.CultureInfo -&gt; System.Reflection.Assembly" Usage="assemblyBuilder.GetSatelliteAssembly culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="7d59d-536">Referencia cultural especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-536">The specified culture.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-537">Obtiene el ensamblado satélite para la referencia cultural especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-537">Gets the satellite assembly for the specified culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d59d-538">Ensamblado satélite especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-538">The specified satellite assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d59d-539">Los ensamblados satélite contienen recursos localizados, a diferencia de los ensamblados de aplicación principal, que contienen código ejecutable no traducible y recursos para una única referencia cultural que sirven como referencia cultural neutra o predeterminada.</span><span class="sxs-lookup"><span data-stu-id="7d59d-539">Satellite assemblies contain localized resources, as distinct from main application assemblies, which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture.</span></span>  
  
 <span data-ttu-id="7d59d-540">Llame a este método para utilizar la versión de ensamblado actual.</span><span class="sxs-lookup"><span data-stu-id="7d59d-540">Call this method to use your current assembly version.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d59d-541">
            <paramref name="culture" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-541">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="7d59d-542">No se encuentra el ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-542">The assembly cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="7d59d-543">Se ha encontrado un ensamblado satélite con un nombre de archivo coincidente, pero <see langword="CultureInfo" /> no coincide con la especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-543">The satellite assembly with a matching file name was found, but the <see langword="CultureInfo" /> did not match the one specified.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="7d59d-544">El ensamblado satélite no es un ensamblado válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-544">The satellite assembly is not a valid assembly.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSatelliteAssembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture, Version version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Assembly GetSatelliteAssembly(class System.Globalization.CultureInfo culture, class System.Version version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::Assembly ^ GetSatelliteAssembly(System::Globalization::CultureInfo ^ culture, Version ^ version);" />
      <MemberSignature Language="F#" Value="override this.GetSatelliteAssembly : System.Globalization.CultureInfo * Version -&gt; System.Reflection.Assembly" Usage="assemblyBuilder.GetSatelliteAssembly (culture, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="version" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="7d59d-545">Referencia cultural especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-545">The specified culture.</span>
          </span>
        </param>
        <param name="version">
          <span data-ttu-id="7d59d-546">Versión del ensamblado satélite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-546">The version of the satellite assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-547">Obtiene la versión especificada del ensamblado satélite para la referencia cultural especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-547">Gets the specified version of the satellite assembly for the specified culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d59d-548">Ensamblado satélite especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-548">The specified satellite assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d59d-549">Los ensamblados satélite contienen recursos localizados, a diferencia de los ensamblados de aplicación principal, que contienen código ejecutable no traducible y recursos para una única referencia cultural que sirven como referencia cultural neutra o predeterminada.</span><span class="sxs-lookup"><span data-stu-id="7d59d-549">Satellite assemblies contain localized resources, as distinct from main application assemblies, which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture.</span></span>  
  
 <span data-ttu-id="7d59d-550">Llame a la <xref:System.Reflection.Assembly.GetSatelliteAssembly%28System.Globalization.CultureInfo%29> sobrecarga al utilizar la versión de ensamblado actual.</span><span class="sxs-lookup"><span data-stu-id="7d59d-550">Call the <xref:System.Reflection.Assembly.GetSatelliteAssembly%28System.Globalization.CultureInfo%29> overload to use your current assembly version.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d59d-551">
            <paramref name="culture" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-551">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="7d59d-552">Se ha encontrado un ensamblado satélite con un nombre de archivo coincidente, pero <see langword="CultureInfo" /> o la versión no coincide con la especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-552">The satellite assembly with a matching file name was found, but the <see langword="CultureInfo" /> or the version did not match the one specified.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="7d59d-553">No se encuentra el ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-553">The assembly cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="7d59d-554">El ensamblado satélite no es un ensamblado válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-554">The satellite assembly is not a valid assembly.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public override Type GetType (string name, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetType(string name, bool throwOnError, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetType(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetType (name As String, throwOnError As Boolean, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetType(System::String ^ name, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * bool * bool -&gt; Type" Usage="assemblyBuilder.GetType (name, throwOnError, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="7d59d-555">Nombre del tipo que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-555">The name of the type to search for.</span>
          </span>
        </param>
        <param name="throwOnError">
          <span data-ttu-id="7d59d-556">
            <see langword="true" /> para producir una excepción si no se encuentra el tipo; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-556">
              <see langword="true" /> to throw an exception if the type is not found; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="7d59d-557">
            <see langword="true" /> para no distinguir entre mayúsculas y minúsculas en el nombre del tipo durante la búsqueda; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-557">
              <see langword="true" /> to ignore the case of the type name when searching; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-558">Obtiene el tipo especificado de los tipos que se han definido y creado en la clase <see cref="T:System.Reflection.Emit.AssemblyBuilder" />actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-558">Gets the specified type from the types that have been defined and created in the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d59d-559">Tipo especificado, o <see langword="null" /> si el tipo no se encuentra o no se ha creado todavía.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-559">The specified type, or <see langword="null" /> if the type is not found or has not been created yet.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d59d-560">No se puede encontrar un tipo hasta que se creó mediante una llamada a la <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> método.</span><span class="sxs-lookup"><span data-stu-id="7d59d-560">A type cannot be found until it has been created by calling the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalAssemblyCache">
      <MemberSignature Language="C#" Value="public override bool GlobalAssemblyCache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GlobalAssemblyCache" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.GlobalAssemblyCache" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property GlobalAssemblyCache As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool GlobalAssemblyCache { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalAssemblyCache : bool" Usage="System.Reflection.Emit.AssemblyBuilder.GlobalAssemblyCache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7d59d-561">Obtiene un valor que indica si el ensamblado se ha cargado desde la caché global de ensamblados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-561">Gets a value that indicates whether the assembly was loaded from the global assembly cache.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7d59d-562">Siempre es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-562">Always <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d59d-563"><xref:System.Reflection.Emit.AssemblyBuilder> los objetos siempre representan ensamblados dinámicos y, por tanto, nunca se cargan desde la caché global de ensamblados.</span><span class="sxs-lookup"><span data-stu-id="7d59d-563"><xref:System.Reflection.Emit.AssemblyBuilder> objects always represent dynamic assemblies, and therefore are never loaded from the global assembly cache.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostContext">
      <MemberSignature Language="C#" Value="public override long HostContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 HostContext" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.HostContext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HostContext As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long HostContext { long get(); };" />
      <MemberSignature Language="F#" Value="member this.HostContext : int64" Usage="System.Reflection.Emit.AssemblyBuilder.HostContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7d59d-564">Obtiene el contexto del host donde se está creando el ensamblado dinámico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-564">Gets the host context where the dynamic assembly is being created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7d59d-565">Valor que indica el contexto del host donde se está creando el ensamblado dinámico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-565">A value that indicates the host context where the dynamic assembly is being created.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageRuntimeVersion">
      <MemberSignature Language="C#" Value="public override string ImageRuntimeVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageRuntimeVersion" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.ImageRuntimeVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ImageRuntimeVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ImageRuntimeVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ImageRuntimeVersion : string" Usage="System.Reflection.Emit.AssemblyBuilder.ImageRuntimeVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7d59d-566">Obtiene l versión de Common Language Runtime (CLR) que se guardará en el archivo que contiene el manifiesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-566">Gets the version of the common language runtime that will be saved in the file containing the manifest.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7d59d-567">Cadena que representa la versión de Common Language Runtime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-567">A string representing the common language runtime version.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7d59d-568">El llamador no dispone del permiso requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-568">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="7d59d-569">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-569">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="7d59d-570">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-570">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public override bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.IsDefined : Type * bool -&gt; bool" Usage="assemblyBuilder.IsDefined (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="7d59d-571">Tipo de atributo que se va a probar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-571">The type of attribute to test for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="7d59d-572">Este argumento se omite para objetos de este tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-572">This argument is ignored for objects of this type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-573">Devuelve un valor que indica si se aplica a este miembro una o más instancias del tipo de atributo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-573">Returns a value that indicates whether one or more instances of the specified attribute type is applied to this member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d59d-574">Es <see langword="true" /> si se aplican una o más instancias de <paramref name="attributeType" /> a este ensamblado dinámico; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-574">
              <see langword="true" /> if one or more instances of <paramref name="attributeType" /> is applied to this dynamic assembly; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDynamic">
      <MemberSignature Language="C#" Value="public override bool IsDynamic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDynamic" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.IsDynamic" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDynamic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDynamic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDynamic : bool" Usage="System.Reflection.Emit.AssemblyBuilder.IsDynamic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7d59d-575">Obtiene un valor que indica que el ensamblado actual es un ensamblado dinámico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-575">Gets a value that indicates that the current assembly is a dynamic assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7d59d-576">Siempre es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-576">Always <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d59d-577">Un <xref:System.Reflection.Emit.AssemblyBuilder> objeto siempre representa un ensamblado dinámico.</span><span class="sxs-lookup"><span data-stu-id="7d59d-577">An <xref:System.Reflection.Emit.AssemblyBuilder> object always represents a dynamic assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public override string Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Location" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.Location" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Location As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Location { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Location : string" Usage="System.Reflection.Emit.AssemblyBuilder.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7d59d-578">Obtiene la ubicación, en formato de código base, del archivo cargado que contiene el manifiesto si no se han creado instantáneas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-578">Gets the location, in codebase format, of the loaded file that contains the manifest if it is not shadow-copied.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7d59d-579">Ubicación del archivo cargado que contiene el manifiesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-579">The location of the loaded file that contains the manifest.</span>
          </span>
          <span data-ttu-id="7d59d-580">Si se ha realizado una copia de seguridad del archivo cargado, la <see langword="Location" /> es la ubicación del archivo antes de que se hiciera la copia de seguridad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-580">If the loaded file has been shadow-copied, the <see langword="Location" /> is that of the file before being shadow-copied.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7d59d-581">Este método no se admite actualmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-581">This method is not currently supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7d59d-582">El llamador no dispone del permiso requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-582">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="7d59d-583">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-583">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="7d59d-584">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-584">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ManifestModule">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module ManifestModule { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Module ManifestModule" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.ManifestModule" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ManifestModule As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Module ^ ManifestModule { System::Reflection::Module ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ManifestModule : System.Reflection.Module" Usage="System.Reflection.Emit.AssemblyBuilder.ManifestModule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7d59d-585">Obtiene el módulo del <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> actual que contiene el manifiesto del ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-585">Gets the module in the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> that contains the assembly manifest.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7d59d-586">Módulo del manifiesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-586">The manifest module.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;System.Reflection.Module&gt; Modules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Module&gt; Modules" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.Modules" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Modules As IEnumerable(Of Module)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Reflection::Module ^&gt; ^ Modules { System::Collections::Generic::IEnumerable&lt;System::Reflection::Module ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Modules : seq&lt;System.Reflection.Module&gt;" Usage="System.Reflection.Emit.AssemblyBuilder.Modules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.Module&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PermissionSet">
      <MemberSignature Language="C#" Value="public override System.Security.PermissionSet PermissionSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.PermissionSet PermissionSet" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.PermissionSet" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PermissionSet As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::PermissionSet ^ PermissionSet { System::Security::PermissionSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PermissionSet : System.Security.PermissionSet" Usage="System.Reflection.Emit.AssemblyBuilder.PermissionSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7d59d-587">Obtiene el conjunto de permisos del ensamblado dinámico actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-587">Gets the grant set of the current dynamic assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7d59d-588">Conjunto de permisos del ensamblado dinámico actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-588">The grant set of the current dynamic assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d59d-589"><xref:System.Security.PermissionSet> los objetos pueden contener información confidencial como las rutas de acceso.</span><span class="sxs-lookup"><span data-stu-id="7d59d-589"><xref:System.Security.PermissionSet> objects can contain sensitive information such as paths.</span></span> <span data-ttu-id="7d59d-590">Por lo tanto, se requiere plena confianza para tener acceso a estos objetos.</span><span class="sxs-lookup"><span data-stu-id="7d59d-590">Therefore, full trust is required to access these objects.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="7d59d-591">requiere plena confianza para el llamador inmediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-591">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="7d59d-592">Este miembro no se puede usar código de confianza parcial o transparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-592">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ReflectionOnly">
      <MemberSignature Language="C#" Value="public override bool ReflectionOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReflectionOnly" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.ReflectionOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReflectionOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReflectionOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ReflectionOnly : bool" Usage="System.Reflection.Emit.AssemblyBuilder.ReflectionOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7d59d-593">Obtiene un valor que indica si el ensamblado dinámico está en el contexto de solo reflexión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-593">Gets a value indicating whether the dynamic assembly is in the reflection-only context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7d59d-594">
            <see langword="true" /> si el ensamblado dinámico está en el contexto de sólo reflexión; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-594">
              <see langword="true" /> if the dynamic assembly is in the reflection-only context; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d59d-595">Para emitir un ensamblado dinámico en el contexto de solo reflexión, especifique <xref:System.Reflection.Emit.AssemblyBuilderAccess.ReflectionOnly?displayProperty=nameWithType> cuando se crea el <xref:System.Reflection.Emit.AssemblyBuilder>.</span><span class="sxs-lookup"><span data-stu-id="7d59d-595">To emit a dynamic assembly in the reflection-only context, specify <xref:System.Reflection.Emit.AssemblyBuilderAccess.ReflectionOnly?displayProperty=nameWithType> when you create the <xref:System.Reflection.Emit.AssemblyBuilder>.</span></span> <span data-ttu-id="7d59d-596">Si se emite un ensamblado dinámico en el contexto de solo reflexión, no se puede ejecutar su código.</span><span class="sxs-lookup"><span data-stu-id="7d59d-596">If a dynamic assembly is emitted in the reflection-only context, its code cannot be executed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7d59d-597">Después de haber guardado un ensamblado dinámico en el disco, puede usar el <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A?displayProperty=nameWithType> método para cargar el ensamblado completado en el contexto de solo reflexión.</span><span class="sxs-lookup"><span data-stu-id="7d59d-597">After you have saved a dynamic assembly to disk, you can use the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A?displayProperty=nameWithType> method to load the completed assembly into the reflection-only context.</span></span> <span data-ttu-id="7d59d-598">Sin embargo, ya no se puede modificar el ensamblado.</span><span class="sxs-lookup"><span data-stu-id="7d59d-598">However, the assembly can no longer be modified.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Reflection.Emit.AssemblyBuilderAccess.ReflectionOnly" />
        <altmember cref="M:System.Reflection.Assembly.ReflectionOnlyLoad(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7d59d-599">Guarda este ensamblado dinámico en el disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-599">Saves this dynamic assembly to disk.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string assemblyFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string assemblyFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (assemblyFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ assemblyFileName);" />
      <MemberSignature Language="F#" Value="member this.Save : string -&gt; unit" Usage="assemblyBuilder.Save assemblyFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFileName">
          <span data-ttu-id="7d59d-600">El nombre de archivo del ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-600">The file name of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-601">Guarda este ensamblado dinámico en el disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-601">Saves this dynamic assembly to disk.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d59d-602">Este método guarda todos los módulos dinámicos no transitorios definidos en este ensamblado dinámico.</span><span class="sxs-lookup"><span data-stu-id="7d59d-602">This method saves all non-transient dynamic modules defined in this dynamic assembly.</span></span> <span data-ttu-id="7d59d-603">No se guardan los módulos dinámicos transitorios.</span><span class="sxs-lookup"><span data-stu-id="7d59d-603">Transient dynamic modules are not saved.</span></span> <span data-ttu-id="7d59d-604">El nombre de archivo de ensamblado puede ser el mismo que el nombre de uno de los módulos.</span><span class="sxs-lookup"><span data-stu-id="7d59d-604">The assembly file name can be the same as the name of one of the modules.</span></span> <span data-ttu-id="7d59d-605">Si es así, el manifiesto del ensamblado se almacena dentro de ese módulo.</span><span class="sxs-lookup"><span data-stu-id="7d59d-605">If so, the assembly manifest is stored within that module.</span></span> <span data-ttu-id="7d59d-606">`assemblyFileName` puede ser diferente de los nombres de todos los módulos incluidos en el ensamblado.</span><span class="sxs-lookup"><span data-stu-id="7d59d-606">`assemblyFileName` can be different from the names of all of the modules contained within the assembly.</span></span> <span data-ttu-id="7d59d-607">Si es así, el archivo de ensamblado contiene sólo el manifiesto del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="7d59d-607">If so, the assembly file contains only the assembly manifest.</span></span>  
  
 <span data-ttu-id="7d59d-608">Para cada <xref:System.Resources.ResourceWriter> obtenidos mediante <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>, este método escribe el archivo .resources y llama <xref:System.Resources.ResourceWriter.Close%2A> para cerrar la secuencia.</span><span class="sxs-lookup"><span data-stu-id="7d59d-608">For each <xref:System.Resources.ResourceWriter> obtained using <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>, this method writes the .resources file and calls <xref:System.Resources.ResourceWriter.Close%2A> to close the stream.</span></span>  
  
 <span data-ttu-id="7d59d-609">El `assemblyFileName` debe ser un nombre de archivo simple sin un componente de unidad o el directorio.</span><span class="sxs-lookup"><span data-stu-id="7d59d-609">The `assemblyFileName` needs to be a simple file name without a drive or directory component.</span></span> <span data-ttu-id="7d59d-610">Para crear un ensamblado en un directorio específico, use uno de los <xref:System.AppDomain.DefineDynamicAssembly%2A> métodos que toma un argumento de directorio de destino.</span><span class="sxs-lookup"><span data-stu-id="7d59d-610">To create an assembly in a specific directory, use one of the <xref:System.AppDomain.DefineDynamicAssembly%2A> methods that takes a target directory argument.</span></span>  
  
 <span data-ttu-id="7d59d-611">En .NET Framework versión 2.0, esta sobrecarga de la <xref:System.Reflection.Emit.AssemblyBuilder.Save%2A> es equivalente a llamar al método el <xref:System.Reflection.Emit.AssemblyBuilder.Save%28System.String%2CSystem.Reflection.PortableExecutableKinds%2CSystem.Reflection.ImageFileMachine%29> sobrecarga del método con <xref:System.Reflection.PortableExecutableKinds.ILOnly> para el `portableExecutableKind` parámetro y <xref:System.Reflection.ImageFileMachine.I386> para el `imageFileMachine` parámetro.</span><span class="sxs-lookup"><span data-stu-id="7d59d-611">In the .NET Framework version 2.0, this overload of the <xref:System.Reflection.Emit.AssemblyBuilder.Save%2A> method is equivalent to calling the <xref:System.Reflection.Emit.AssemblyBuilder.Save%28System.String%2CSystem.Reflection.PortableExecutableKinds%2CSystem.Reflection.ImageFileMachine%29> method overload with <xref:System.Reflection.PortableExecutableKinds.ILOnly> for the `portableExecutableKind` parameter and <xref:System.Reflection.ImageFileMachine.I386> for the `imageFileMachine` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d59d-612">Ejemplo de código siguiente crea un ensamblado dinámico y, a continuación, lo almacena en un disco local mediante `Save`.</span><span class="sxs-lookup"><span data-stu-id="7d59d-612">The following code sample creates a dynamic assembly and then persists it to a local disk using `Save`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.Save Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.Save Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.Save Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.Save Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.Save Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.Save Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d59d-613">La longitud de <paramref name="assemblyFileName" /> es 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-613">The length of <paramref name="assemblyFileName" /> is 0.</span>
          </span>
          <span data-ttu-id="7d59d-614">-o bien- Hay dos o más archivos de recursos de módulos en el ensamblado con el mismo nombre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-614">-or-  There are two or more modules resource files in the assembly with the same name.</span>
          </span>
          <span data-ttu-id="7d59d-615">-o bien- El directorio de destino del ensamblado no es válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-615">-or-  The target directory of the assembly is invalid.</span>
          </span>
          <span data-ttu-id="7d59d-616">-o bien- <paramref name="assemblyFileName" /> no es un nombre de archivo simple (por ejemplo, tiene un directorio o un componente de unidad) o se definió más de un recurso sin administrar, incluido un recurso de información de versión, en este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-616">-or-  <paramref name="assemblyFileName" /> is not a simple file name (for example, has a directory or drive component), or more than one unmanaged resource, including a version information resource, was defined in this assembly.</span>
          </span>
          <span data-ttu-id="7d59d-617">-o bien- La cadena <see langword="CultureInfo" /> de <see cref="T:System.Reflection.AssemblyCultureAttribute" /> no es una cadena válida y se llamó a <see cref="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)" /> antes de llamar a este método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-617">-or-  The <see langword="CultureInfo" /> string in <see cref="T:System.Reflection.AssemblyCultureAttribute" /> is not a valid string and <see cref="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)" /> was called prior to calling this method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d59d-618">
            <paramref name="assemblyFileName" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-618">
              <paramref name="assemblyFileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7d59d-619">Este ensamblado se guardó antes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-619">This assembly has been saved before.</span>
          </span>
          <span data-ttu-id="7d59d-620">-o bien- Este ensamblado tiene acceso <see langword="Run" /><see cref="T:System.Reflection.Emit.AssemblyBuilderAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-620">-or-  This assembly has access <see langword="Run" /><see cref="T:System.Reflection.Emit.AssemblyBuilderAccess" /></span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="7d59d-621">Se produce un error de salida al guardar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-621">An output error occurs during the save.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7d59d-622">No se ha llamado a <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> para ninguno de los tipos de los módulos del ensamblado que se van a escribir en disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-622">
              <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has not been called for any of the types in the modules of the assembly to be written to disk.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="7d59d-623">Escribir = true o Append = true se necesita para guardar este ensamblado en el nombre de archivo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-623">Write = true or Append = true is needed to save this assembly to the specified file name.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="7d59d-624">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-624">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="7d59d-625">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-625">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string assemblyFileName, System.Reflection.PortableExecutableKinds portableExecutableKind, System.Reflection.ImageFileMachine imageFileMachine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string assemblyFileName, valuetype System.Reflection.PortableExecutableKinds portableExecutableKind, valuetype System.Reflection.ImageFileMachine imageFileMachine) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.Save(System.String,System.Reflection.PortableExecutableKinds,System.Reflection.ImageFileMachine)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ assemblyFileName, System::Reflection::PortableExecutableKinds portableExecutableKind, System::Reflection::ImageFileMachine imageFileMachine);" />
      <MemberSignature Language="F#" Value="member this.Save : string * System.Reflection.PortableExecutableKinds * System.Reflection.ImageFileMachine -&gt; unit" Usage="assemblyBuilder.Save (assemblyFileName, portableExecutableKind, imageFileMachine)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFileName" Type="System.String" />
        <Parameter Name="portableExecutableKind" Type="System.Reflection.PortableExecutableKinds" />
        <Parameter Name="imageFileMachine" Type="System.Reflection.ImageFileMachine" />
      </Parameters>
      <Docs>
        <param name="assemblyFileName">
          <span data-ttu-id="7d59d-626">El nombre de archivo del ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-626">The file name of the assembly.</span>
          </span>
        </param>
        <param name="portableExecutableKind">
          <span data-ttu-id="7d59d-627">Combinación bit a bit de los valores de <see cref="T:System.Reflection.PortableExecutableKinds" /> que especifica la naturaleza del código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-627">A bitwise combination of the <see cref="T:System.Reflection.PortableExecutableKinds" /> values that specifies the nature of the code.</span>
          </span>
        </param>
        <param name="imageFileMachine">
          <span data-ttu-id="7d59d-628">Uno de los valores de <see cref="T:System.Reflection.ImageFileMachine" /> que especifica la plataforma de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-628">One of the <see cref="T:System.Reflection.ImageFileMachine" /> values that specifies the target platform.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-629">Guarda este ensamblado dinámico en el disco, especificando la naturaleza del código en los ejecutables del ensamblado y en la plataforma de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-629">Saves this dynamic assembly to disk, specifying the nature of code in the assembly's executables and the target platform.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d59d-630">Si `imageFileMachine` y `portableExecutableKind` son incompatibles, `imageFileMachine` tiene prioridad sobre `portableExecutableKind`.</span><span class="sxs-lookup"><span data-stu-id="7d59d-630">If `imageFileMachine` and `portableExecutableKind` are incompatible, `imageFileMachine` takes precedence over `portableExecutableKind`.</span></span> <span data-ttu-id="7d59d-631">No se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="7d59d-631">No exception is thrown.</span></span> <span data-ttu-id="7d59d-632">Por ejemplo, si especifica <xref:System.Reflection.ImageFileMachine.I386?displayProperty=nameWithType> con <xref:System.Reflection.PortableExecutableKinds.PE32Plus?displayProperty=nameWithType>, <xref:System.Reflection.PortableExecutableKinds.PE32Plus?displayProperty=nameWithType> se omite.</span><span class="sxs-lookup"><span data-stu-id="7d59d-632">For example, if you specify <xref:System.Reflection.ImageFileMachine.I386?displayProperty=nameWithType> with <xref:System.Reflection.PortableExecutableKinds.PE32Plus?displayProperty=nameWithType>, <xref:System.Reflection.PortableExecutableKinds.PE32Plus?displayProperty=nameWithType> is ignored.</span></span>  
  
 <span data-ttu-id="7d59d-633">Este método guarda todos los módulos dinámicos no transitorios definidos en este ensamblado dinámico.</span><span class="sxs-lookup"><span data-stu-id="7d59d-633">This method saves all non-transient dynamic modules defined in this dynamic assembly.</span></span> <span data-ttu-id="7d59d-634">No se guardan los módulos dinámicos transitorios.</span><span class="sxs-lookup"><span data-stu-id="7d59d-634">Transient dynamic modules are not saved.</span></span> <span data-ttu-id="7d59d-635">El nombre de archivo de ensamblado puede ser el mismo que el nombre de uno de los módulos.</span><span class="sxs-lookup"><span data-stu-id="7d59d-635">The assembly file name can be the same as the name of one of the module.</span></span> <span data-ttu-id="7d59d-636">Si es así, el manifiesto del ensamblado se almacena dentro de ese módulo.</span><span class="sxs-lookup"><span data-stu-id="7d59d-636">If so, the assembly manifest is stored within that module.</span></span> <span data-ttu-id="7d59d-637">`assemblyFileName` puede ser diferente de los nombres de todos los módulos incluidos en el ensamblado.</span><span class="sxs-lookup"><span data-stu-id="7d59d-637">`assemblyFileName` can be different from the names of all of the modules contained within the assembly.</span></span> <span data-ttu-id="7d59d-638">Si es así, el archivo de ensamblado contiene sólo el manifiesto del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="7d59d-638">If so, the assembly file contains only the assembly manifest.</span></span>  
  
 <span data-ttu-id="7d59d-639">Para cada <xref:System.Resources.ResourceWriter> obtenidos mediante <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>, este método escribe el archivo .resources y llama <xref:System.Resources.ResourceWriter.Close%2A> para cerrar la secuencia.</span><span class="sxs-lookup"><span data-stu-id="7d59d-639">For each <xref:System.Resources.ResourceWriter> obtained using <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>, this method writes the .resources file and calls <xref:System.Resources.ResourceWriter.Close%2A> to close the stream.</span></span>  
  
 <span data-ttu-id="7d59d-640">El `assemblyFileName` debe ser un nombre de archivo simple sin un componente de unidad o el directorio.</span><span class="sxs-lookup"><span data-stu-id="7d59d-640">The `assemblyFileName` needs to be a simple file name without a drive or directory component.</span></span> <span data-ttu-id="7d59d-641">Para crear un ensamblado en un directorio específico, use uno de los <xref:System.AppDomain.DefineDynamicAssembly%2A> métodos que toma un argumento de directorio de destino.</span><span class="sxs-lookup"><span data-stu-id="7d59d-641">To create an assembly in a specific directory, use one of the <xref:System.AppDomain.DefineDynamicAssembly%2A> methods that takes a target directory argument.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d59d-642">La longitud de <paramref name="assemblyFileName" /> es 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-642">The length of <paramref name="assemblyFileName" /> is 0.</span>
          </span>
          <span data-ttu-id="7d59d-643">-o bien- Hay dos o más archivos de recursos de módulos en el ensamblado con el mismo nombre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-643">-or-  There are two or more modules resource files in the assembly with the same name.</span>
          </span>
          <span data-ttu-id="7d59d-644">-o bien- El directorio de destino del ensamblado no es válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-644">-or-  The target directory of the assembly is invalid.</span>
          </span>
          <span data-ttu-id="7d59d-645">-o bien- <paramref name="assemblyFileName" /> no es un nombre de archivo simple (por ejemplo, tiene un directorio o un componente de unidad), o se ha definido más de un recurso no administrado, incluidos recursos de información de versión, en este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-645">-or-  <paramref name="assemblyFileName" /> is not a simple file name (for example, has a directory or drive component), or more than one unmanaged resource, including a version information resources, was defined in this assembly.</span>
          </span>
          <span data-ttu-id="7d59d-646">-o bien- La cadena <see langword="CultureInfo" /> de <see cref="T:System.Reflection.AssemblyCultureAttribute" /> no es una cadena válida y se llamó a <see cref="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)" /> antes de llamar a este método.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-646">-or-  The <see langword="CultureInfo" /> string in <see cref="T:System.Reflection.AssemblyCultureAttribute" /> is not a valid string and <see cref="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)" /> was called prior to calling this method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d59d-647">
            <paramref name="assemblyFileName" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-647">
              <paramref name="assemblyFileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7d59d-648">Este ensamblado se guardó antes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-648">This assembly has been saved before.</span>
          </span>
          <span data-ttu-id="7d59d-649">-o bien- Este ensamblado tiene acceso <see langword="Run" /><see cref="T:System.Reflection.Emit.AssemblyBuilderAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-649">-or-  This assembly has access <see langword="Run" /><see cref="T:System.Reflection.Emit.AssemblyBuilderAccess" /></span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="7d59d-650">Se produce un error de salida al guardar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-650">An output error occurs during the save.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7d59d-651">No se ha llamado a <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> para ninguno de los tipos de los módulos del ensamblado que se van a escribir en disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-651">
              <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has not been called for any of the types in the modules of the assembly to be written to disk.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="7d59d-652">Escribir = true o Append = true se necesita para guardar este ensamblado en el nombre de archivo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-652">Write = true or Append = true is needed to save this assembly to the specified file name.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="7d59d-653">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-653">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="7d59d-654">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-654">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SecurityRuleSet">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityRuleSet SecurityRuleSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.SecurityRuleSet SecurityRuleSet" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.SecurityRuleSet" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SecurityRuleSet As SecurityRuleSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::SecurityRuleSet SecurityRuleSet { System::Security::SecurityRuleSet get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityRuleSet : System.Security.SecurityRuleSet" Usage="System.Reflection.Emit.AssemblyBuilder.SecurityRuleSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityRuleSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7d59d-655">Obtiene un valor que indica el conjunto de reglas de seguridad que Common Language Runtime (CLR) aplica para este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-655">Gets a value that indicates which set of security rules the common language runtime (CLR) enforces for this assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7d59d-656">Conjunto de reglas de seguridad que CLR aplica para este ensamblado dinámico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-656">The security rule set that the CLR enforces for this dynamic assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d59d-657">El [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] siempre exige la transparencia de nivel 2 (<xref:System.Security.SecurityRuleSet.Level2?displayProperty=nameWithType>) para los ensamblados dinámicos que genera.</span><span class="sxs-lookup"><span data-stu-id="7d59d-657">The [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] always enforces level 2 transparency (<xref:System.Security.SecurityRuleSet.Level2?displayProperty=nameWithType>) for the dynamic assemblies it generates.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCustomAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7d59d-658">Establece un atributo personalizado en este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-658">Sets a custom attribute on this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.Emit.CustomAttributeBuilder customBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (customBuilder As CustomAttributeBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::Emit::CustomAttributeBuilder ^ customBuilder);" />
      <MemberSignature Language="F#" Value="member this.SetCustomAttribute : System.Reflection.Emit.CustomAttributeBuilder -&gt; unit" Usage="assemblyBuilder.SetCustomAttribute customBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customBuilder" Type="System.Reflection.Emit.CustomAttributeBuilder" />
      </Parameters>
      <Docs>
        <param name="customBuilder">
          <span data-ttu-id="7d59d-659">Instancia de una clase auxiliar para definir el atributo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-659">An instance of a helper class to define the custom attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-660">Establezca un atributo personalizado en este ensamblado mediante un generador de atributos personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-660">Set a custom attribute on this assembly using a custom attribute builder.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7d59d-661"><xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> no se puede usar para establecer los atributos de seguridad declarativa.</span><span class="sxs-lookup"><span data-stu-id="7d59d-661"><xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> cannot be used to set declarative security attributes.</span></span> <span data-ttu-id="7d59d-662">Use una de las sobrecargas de <xref:System.AppDomain.DefineDynamicAssembly%2A> que toma requerido, opcional y no los permisos.</span><span class="sxs-lookup"><span data-stu-id="7d59d-662">Use one of the overloads of <xref:System.AppDomain.DefineDynamicAssembly%2A> that takes required, optional, and refused permissions.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7d59d-663">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="7d59d-663">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="7d59d-664">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="7d59d-664">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d59d-665">Ejemplo de código siguiente muestra el uso de `SetCustomAttribute` en <xref:System.Reflection.Emit.AssemblyBuilder>, mediante un <xref:System.Reflection.Emit.CustomAttributeBuilder>.</span><span class="sxs-lookup"><span data-stu-id="7d59d-665">The following code sample illustrates the use of `SetCustomAttribute` within <xref:System.Reflection.Emit.AssemblyBuilder>, using a <xref:System.Reflection.Emit.CustomAttributeBuilder>.</span></span>  
  
 [!code-cpp[AssemblyBuilder_SetCustomAttribute1#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute1/CPP/assemblybuilder_setcustomattribute1.cpp#1)]
 [!code-csharp[AssemblyBuilder_SetCustomAttribute1#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute1/CS/assemblybuilder_setcustomattribute1.cs#1)]
 [!code-vb[AssemblyBuilder_SetCustomAttribute1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute1/VB/assemblybuilder_setcustomattribute1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d59d-666">
            <paramref name="con" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-666">
              <paramref name="con" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7d59d-667">El llamador no dispone del permiso requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-667">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="7d59d-668">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-668">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="7d59d-669">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-669">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.ConstructorInfo con, unsigned int8[] binaryAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (con As ConstructorInfo, binaryAttribute As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::ConstructorInfo ^ con, cli::array &lt;System::Byte&gt; ^ binaryAttribute);" />
      <MemberSignature Language="F#" Value="member this.SetCustomAttribute : System.Reflection.ConstructorInfo * byte[] -&gt; unit" Usage="assemblyBuilder.SetCustomAttribute (con, binaryAttribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="binaryAttribute" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="con">
          <span data-ttu-id="7d59d-670">Constructor para el atributo personalizado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-670">The constructor for the custom attribute.</span>
          </span>
        </param>
        <param name="binaryAttribute">
          <span data-ttu-id="7d59d-671">Blob de bytes que representa los atributos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-671">A byte blob representing the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-672">Establezca un atributo personalizado en este ensamblado mediante un blob de atributo personalizado especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-672">Set a custom attribute on this assembly using a specified custom attribute blob.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d59d-673">Vea la especificación de metadatos en la documentación de ECMA Partition II para obtener más información sobre cómo dar formato a `binaryAttribute`.</span><span class="sxs-lookup"><span data-stu-id="7d59d-673">See the metadata specification in the ECMA Partition II documentation for details on how to format `binaryAttribute`.</span></span> <span data-ttu-id="7d59d-674">La documentación está disponible en línea; vea [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) (Estándares de ECMA C# y Common Language Infrastructure) en MSDN y [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) (Estándar ECMA-335: Common Language Infrastructure [CLI]) en el sitio web de Ecma International.</span><span class="sxs-lookup"><span data-stu-id="7d59d-674">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 <span data-ttu-id="7d59d-675">`RuntimeConstructorInfo` es un tipo especial generado por el sistema.</span><span class="sxs-lookup"><span data-stu-id="7d59d-675">`RuntimeConstructorInfo` is a special type generated by the system.</span></span> <span data-ttu-id="7d59d-676">Deriva el <xref:System.Reflection.ConstructorInfo> clase y cualquier <xref:System.Reflection.ConstructorInfo> objeto obtenido mediante reflexión es realmente una instancia de `RuntimeConstructorInfo`.</span><span class="sxs-lookup"><span data-stu-id="7d59d-676">It derives from the <xref:System.Reflection.ConstructorInfo> class, and any <xref:System.Reflection.ConstructorInfo> object you obtain through reflection is actually an instance of `RuntimeConstructorInfo`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7d59d-677"><xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> no se puede usar para establecer los atributos de seguridad declarativa.</span><span class="sxs-lookup"><span data-stu-id="7d59d-677"><xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> cannot be used to set declarative security attributes.</span></span> <span data-ttu-id="7d59d-678">Use una de las sobrecargas de <xref:System.AppDomain.DefineDynamicAssembly%2A> que toma requerido, opcional y no los permisos.</span><span class="sxs-lookup"><span data-stu-id="7d59d-678">Use one of the overloads of <xref:System.AppDomain.DefineDynamicAssembly%2A> that takes required, optional, and refused permissions.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7d59d-679">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="7d59d-679">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="7d59d-680">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="7d59d-680">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d59d-681">Ejemplo de código siguiente muestra el uso de `SetCustomAttribute` para asociar un atributo personalizado a un ensamblado generado dinámicamente.</span><span class="sxs-lookup"><span data-stu-id="7d59d-681">The following code sample illustrates the use of `SetCustomAttribute` to attach a custom attribute to a dynamically generated assembly.</span></span>  
  
 [!code-cpp[AssemblyBuilder_SetCustomAttribute2#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute2/CPP/assemblybuilder_setcustomattribute2.cpp#1)]
 [!code-csharp[AssemblyBuilder_SetCustomAttribute2#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute2/CS/assemblybuilder_setcustomattribute2.cs#1)]
 [!code-vb[AssemblyBuilder_SetCustomAttribute2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute2/VB/assemblybuilder_setcustomattribute2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d59d-682">El valor de <paramref name="con" /> o <paramref name="binaryAttribute" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-682">
              <paramref name="con" /> or <paramref name="binaryAttribute" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7d59d-683">El llamador no dispone del permiso requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-683">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d59d-684">
            <paramref name="con" /> no es un objeto <see langword="RuntimeConstructorInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-684">
              <paramref name="con" /> is not a <see langword="RuntimeConstructorInfo" /> object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="7d59d-685">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-685">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="7d59d-686">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-686">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetEntryPoint">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7d59d-687">Establece el punto de entrada de este ensamblado dinámico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-687">Sets the entry point for this dynamic assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetEntryPoint">
      <MemberSignature Language="C#" Value="public void SetEntryPoint (System.Reflection.MethodInfo entryMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEntryPoint(class System.Reflection.MethodInfo entryMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetEntryPoint (entryMethod As MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetEntryPoint(System::Reflection::MethodInfo ^ entryMethod);" />
      <MemberSignature Language="F#" Value="member this.SetEntryPoint : System.Reflection.MethodInfo -&gt; unit" Usage="assemblyBuilder.SetEntryPoint entryMethod" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryMethod" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="entryMethod">
          <span data-ttu-id="7d59d-688">Una referencia al método que representa el punto de entrada de este ensamblado dinámico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-688">A reference to the method that represents the entry point for this dynamic assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-689">Establece el punto de entrada para este ensamblado dinámico, suponiendo que se está generando una aplicación de consola.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-689">Sets the entry point for this dynamic assembly, assuming that a console application is being built.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d59d-690">
            <paramref name="entryMethod" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-690">
              <paramref name="entryMethod" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7d59d-691">
            <paramref name="entryMethod" /> no está incluido en este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-691">
              <paramref name="entryMethod" /> is not contained within this assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7d59d-692">El llamador no dispone del permiso requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-692">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="7d59d-693">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-693">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="7d59d-694">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-694">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetEntryPoint">
      <MemberSignature Language="C#" Value="public void SetEntryPoint (System.Reflection.MethodInfo entryMethod, System.Reflection.Emit.PEFileKinds fileKind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEntryPoint(class System.Reflection.MethodInfo entryMethod, valuetype System.Reflection.Emit.PEFileKinds fileKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint(System.Reflection.MethodInfo,System.Reflection.Emit.PEFileKinds)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetEntryPoint (entryMethod As MethodInfo, fileKind As PEFileKinds)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetEntryPoint(System::Reflection::MethodInfo ^ entryMethod, System::Reflection::Emit::PEFileKinds fileKind);" />
      <MemberSignature Language="F#" Value="member this.SetEntryPoint : System.Reflection.MethodInfo * System.Reflection.Emit.PEFileKinds -&gt; unit" Usage="assemblyBuilder.SetEntryPoint (entryMethod, fileKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryMethod" Type="System.Reflection.MethodInfo" />
        <Parameter Name="fileKind" Type="System.Reflection.Emit.PEFileKinds" />
      </Parameters>
      <Docs>
        <param name="entryMethod">
          <span data-ttu-id="7d59d-695">Una referencia al método que representa el punto de entrada de este ensamblado dinámico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-695">A reference to the method that represents the entry point for this dynamic assembly.</span>
          </span>
        </param>
        <param name="fileKind">
          <span data-ttu-id="7d59d-696">Tipo del ejecutable de ensamblado que se está generando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-696">The type of the assembly executable being built.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-697">Establece el punto de entrada para este ensamblado y define el tipo de archivo ejecutable portable (PE) que se está generando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-697">Sets the entry point for this assembly and defines the type of the portable executable (PE file) being built.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7d59d-698">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="7d59d-698">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="7d59d-699">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="7d59d-699">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d59d-700">
            <paramref name="entryMethod" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-700">
              <paramref name="entryMethod" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7d59d-701">
            <paramref name="entryMethod" /> no está incluido en este ensamblado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-701">
              <paramref name="entryMethod" /> is not contained within this assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="7d59d-702">El llamador no dispone del permiso requerido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-702">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="7d59d-703">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-703">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="7d59d-704">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-704">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyBuilder.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _AssemblyBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyBuilder.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _AssemblyBuilder.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyBuilder.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_AssemblyBuilder::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyBuilder.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="7d59d-705">Reservado para un uso futuro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-705">Reserved for future use.</span>
          </span>
          <span data-ttu-id="7d59d-706">Debe ser IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-706">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="7d59d-707">Matriz que se pasa con los nombres que se van a asignar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-707">Passed-in array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="7d59d-708">Número de nombres que se van a asignar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-708">Count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="7d59d-709">Contexto de configuración regional en el que se van a interpretar los nombres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-709">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="7d59d-710">Matriz asignada por el llamador que recibe los identificadores que corresponden a los nombres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-710">Caller-allocated array which receives the IDs corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-711">Asigna un conjunto de nombres a un conjunto correspondiente de identificadores de envío.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-711">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d59d-712">Este método es para el acceso a las clases administradas desde código no administrado y no debe llamarse desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="7d59d-712">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="7d59d-713">Para obtener más información sobre `IDispatch::GetIDsOfNames`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="7d59d-713">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="7d59d-714">Al método se le llama de manera enlazada en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-714">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _AssemblyBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _AssemblyBuilder.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_AssemblyBuilder::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="7d59d-715">Información de tipos que se va a devolver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-715">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="7d59d-716">Identificador de la configuración regional de la información de tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-716">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="7d59d-717">Recibe un puntero al objeto de información de tipo solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-717">Receives a pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-718">Recupera la información de tipo de un objeto, que se puede usar después para obtener la información de tipo de una interfaz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-718">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d59d-719">Este método es para el acceso a las clases administradas desde código no administrado y no debe llamarse desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="7d59d-719">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="7d59d-720">Para obtener más información sobre `IDispatch::GetTypeInfo`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="7d59d-720">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="7d59d-721">Al método se le llama de manera enlazada en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-721">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _AssemblyBuilder.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _AssemblyBuilder.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_AssemblyBuilder::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="7d59d-722">Señala a una ubicación que recibe el número de interfaces de información de tipo proporcionado por el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-722">Points to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-723">Recupera el número de interfaces de información de tipo que proporciona un objeto (0 ó 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-723">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d59d-724">Este método es para el acceso a las clases administradas desde código no administrado y no debe llamarse desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="7d59d-724">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="7d59d-725">Para obtener más información sobre `IDispatch::GetTypeInfoCount`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="7d59d-725">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="7d59d-726">Al método se le llama de manera enlazada en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-726">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyBuilder.Invoke">
      <MemberSignature Language="C#" Value="void _AssemblyBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyBuilder.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _AssemblyBuilder.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyBuilder.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_AssemblyBuilder::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyBuilder.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="7d59d-727">Identifica el miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-727">Identifies the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="7d59d-728">Reservado para un uso futuro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-728">Reserved for future use.</span>
          </span>
          <span data-ttu-id="7d59d-729">Debe ser IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-729">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="7d59d-730">Contexto de la configuración regional en que se interpretan los argumentos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-730">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="7d59d-731">Marcas que describen el contexto de la llamada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-731">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="7d59d-732">Puntero a una estructura que contiene una matriz de argumentos, una matriz de valores DISPID de argumento para argumentos con nombre y recuentos del número de elementos de cada matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-732">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="7d59d-733">Puntero a la ubicación donde se va a almacenar el resultado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-733">Pointer to the location where the result is to be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="7d59d-734">Puntero a una estructura que contiene información de excepciones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-734">Pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="7d59d-735">Índice del primer argumento que tiene un error.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-735">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d59d-736">Proporciona acceso a las propiedades y los métodos expuestos por un objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-736">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d59d-737">Este método es para el acceso a las clases administradas desde código no administrado y no debe llamarse desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="7d59d-737">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="7d59d-738">Para obtener más información sobre `IDispatch::Invoke`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="7d59d-738">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="7d59d-739">Al método se le llama de manera enlazada en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d59d-739">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>