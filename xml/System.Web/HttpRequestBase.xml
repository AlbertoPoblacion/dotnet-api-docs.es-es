<Type Name="HttpRequestBase" FullName="System.Web.HttpRequestBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d98b34038b143c14ea3fcbf826546ebac4a2b3f3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30611079" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class HttpRequestBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpRequestBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpRequestBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpRequestBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpRequestBase abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2f350-101">Actúa como clase base para las clases que permiten a ASP.NET leer los valores HTTP enviados por un cliente durante una solicitud web.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2f350-101">Serves as the base class for classes that enable ASP.NET to read the HTTP values sent by a client during a Web request.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f350-102">El <xref:System.Web.HttpRequestBase> clase es una clase abstracta que contiene los mismos miembros que la <xref:System.Web.HttpRequest> clase.</span><span class="sxs-lookup"><span data-stu-id="2f350-102">The <xref:System.Web.HttpRequestBase> class is an abstract class that contains the same members as the <xref:System.Web.HttpRequest> class.</span></span> <span data-ttu-id="2f350-103">El <xref:System.Web.HttpRequestBase> clase le permite crear clases derivadas que son similares a los <xref:System.Web.HttpRequest> clase, pero que puede personalizar y que trabajan fuera de la canalización ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="2f350-103">The <xref:System.Web.HttpRequestBase> class enables you to create derived classes that are like the <xref:System.Web.HttpRequest> class, but that you can customize and that work outside the ASP.NET pipeline.</span></span> <span data-ttu-id="2f350-104">Cuando se realizan pruebas unitarias, normalmente se utilice una clase derivada para implementar a los miembros que han personalizado el comportamiento que cumple el escenario que se está probando.</span><span class="sxs-lookup"><span data-stu-id="2f350-104">When you perform unit testing, you typically use a derived class to implement members that have customized behavior that fulfills the scenario that you are testing.</span></span>  
  
 <span data-ttu-id="2f350-105">La clase <xref:System.Web.HttpRequestWrapper> se deriva de la clase <xref:System.Web.HttpRequestBase>.</span><span class="sxs-lookup"><span data-stu-id="2f350-105">The <xref:System.Web.HttpRequestWrapper> class derives from the <xref:System.Web.HttpRequestBase> class.</span></span> <span data-ttu-id="2f350-106">El <xref:System.Web.HttpRequestWrapper> clase que actúa como contenedor para el <xref:System.Web.HttpRequest> clase.</span><span class="sxs-lookup"><span data-stu-id="2f350-106">The <xref:System.Web.HttpRequestWrapper> class serves as a wrapper for the <xref:System.Web.HttpRequest> class.</span></span> <span data-ttu-id="2f350-107">En tiempo de ejecución, normalmente se utiliza una instancia de la <xref:System.Web.HttpRequestWrapper> clase para llamar a los miembros de la <xref:System.Web.HttpRequest> objeto.</span><span class="sxs-lookup"><span data-stu-id="2f350-107">At run time, you typically use an instance of the <xref:System.Web.HttpRequestWrapper> class to invoke members of the <xref:System.Web.HttpRequest> object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpRequestBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpRequestBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2f350-108">Inicializa la clase para que la use una instancia de la clase heredada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-108">Initializes the class for use by an inherited class instance.</span>
          </span>
          <span data-ttu-id="2f350-109">A este constructor solo lo puede llamar una clase heredada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-109">This constructor can only be called by an inherited class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public virtual void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestBase.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Abort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2f350-110">Termina de manera forzosa la conexión TCP subyacente, lo que provoca el error de cualquier E/S pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-110">Forcibly terminates the underlying TCP connection, causing any outstanding I/O to fail.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f350-111">Este método es seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="2f350-111">This method is thread-safe.</span></span> <span data-ttu-id="2f350-112">Cualquier subproceso puede llamar a él en cualquier momento.</span><span class="sxs-lookup"><span data-stu-id="2f350-112">Any thread may call it at any time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptTypes">
      <MemberSignature Language="C#" Value="public virtual string[] AcceptTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AcceptTypes" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.AcceptTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AcceptTypes As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ AcceptTypes { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-113">Cuando se invalida en una clase derivada, obtiene una matriz de tipos de aceptación MIME admitidos por el cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-113">When overridden in a derived class, gets an array of client-supported MIME accept types.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-114">Matriz de tipos de aceptación MIME admitidos por el cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-114">An array of client-supported MIME accept types.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-115">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-115">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AnonymousID">
      <MemberSignature Language="C#" Value="public virtual string AnonymousID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AnonymousID" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.AnonymousID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AnonymousID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AnonymousID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-116">Cuando se invalida en una clase derivada, obtiene el identificador anónimo del usuario, si está disponible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-116">When overridden in a derived class, gets the anonymous identifier for the user, if it is available.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-117">Identificador del usuario anónimo actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-117">The current anonymous user identifier.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-118">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-118">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationPath">
      <MemberSignature Language="C#" Value="public virtual string ApplicationPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.ApplicationPath" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ApplicationPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-119">Cuando se invalida en una clase derivada, obtiene la ruta de acceso virtual a la raíz de la aplicación ASP.NET en el servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-119">When overridden in a derived class, gets the virtual root path of the ASP.NET application on the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-120">Ruta de acceso virtual de la aplicación actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-120">The virtual path of the current application.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-121">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-121">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AppRelativeCurrentExecutionFilePath">
      <MemberSignature Language="C#" Value="public virtual string AppRelativeCurrentExecutionFilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AppRelativeCurrentExecutionFilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.AppRelativeCurrentExecutionFilePath" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AppRelativeCurrentExecutionFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AppRelativeCurrentExecutionFilePath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-122">Cuando se invalida en una clase derivada, obtiene la ruta de acceso virtual a la raíz de la aplicación y la convierte en relativa usando la tilde (~) para la raíz de la aplicación (como en "~/page.aspx").</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-122">When overridden in a derived class, gets the virtual path of the application root and makes it relative by using the tilde (~) notation for the application root (as in "~/page.aspx").</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-123">Ruta de acceso virtual a la raíz de la aplicación para la solicitud actual con el operador de tilde (~) agregado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-123">The virtual path of the application root for the current request with the tilde operator (~) added.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-124">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-124">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BinaryRead">
      <MemberSignature Language="C#" Value="public virtual byte[] BinaryRead (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] BinaryRead(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestBase.BinaryRead(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BinaryRead (count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ BinaryRead(int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">
          <span data-ttu-id="2f350-125">Número de bytes que se va a leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-125">The number of bytes to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f350-126">Cuando se invalida en una clase derivada, realiza una lectura binaria del número especificado de bytes del flujo de entrada actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-126">When overridden in a derived class, performs a binary read of a specified number of bytes from the current input stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f350-127">Matriz que contiene los datos binarios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-127">An array that contains the binary data.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-128">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-128">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Browser">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpBrowserCapabilitiesBase Browser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpBrowserCapabilitiesBase Browser" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.Browser" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Browser As HttpBrowserCapabilitiesBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpBrowserCapabilitiesBase ^ Browser { System::Web::HttpBrowserCapabilitiesBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpBrowserCapabilitiesBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-129">Cuando se invalida en una clase derivada, obtiene información sobre las funciones de explorador del cliente que realiza la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-129">When overridden in a derived class, gets information about the requesting client's browser capabilities.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-130">Objeto que representa las funciones de explorador del cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-130">An object that represents the capabilities of the client browser.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-131">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-131">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificate">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpClientCertificate ClientCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpClientCertificate ClientCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.ClientCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ClientCertificate As HttpClientCertificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpClientCertificate ^ ClientCertificate { System::Web::HttpClientCertificate ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpClientCertificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-132">Cuando se invalida en una clase derivada, obtiene el certificado de seguridad del cliente para la solicitud actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-132">When overridden in a derived class, gets the current request's client security certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-133">Certificado de seguridad del cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-133">The client's security certificate.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-134">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-134">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoding ContentEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContentEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ ContentEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-135">Cuando se invalida en una clase derivada, obtiene o establece el juego de caracteres de los datos proporcionados por el cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-135">When overridden in a derived class, gets or sets the character set of the data that is provided by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-136">Juego de caracteres del cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-136">The client's character set.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-137">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-137">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public virtual int ContentLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ContentLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ContentLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-138">Cuando se invalida en una clase derivada, obtiene la longitud, en bytes, del contenido enviado por el cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-138">When overridden in a derived class, gets the length, in bytes, of content that was sent by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-139">Longitud, en bytes, del contenido enviado por el cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-139">The length, in bytes, of content that was sent by the client.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-140">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-140">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public virtual string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-141">Cuando se invalida en una clase derivada, obtiene o establece el tipo de contenido MIME de la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-141">When overridden in a derived class, gets or sets the MIME content type of the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-142">Tipo de contenido MIME de la solicitud, como "text/html".</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-142">The MIME content type of the request, such as "text/html".</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-143">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-143">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpCookieCollection Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCookieCollection Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Cookies As HttpCookieCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpCookieCollection ^ Cookies { System::Web::HttpCookieCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-144">Cuando se invalida en una clase derivada, obtiene la colección de cookies enviadas por el cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-144">When overridden in a derived class, gets the collection of cookies that were sent by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-145">Cookies del cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-145">The client's cookies.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-146">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-146">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentExecutionFilePath">
      <MemberSignature Language="C#" Value="public virtual string CurrentExecutionFilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentExecutionFilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.CurrentExecutionFilePath" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrentExecutionFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CurrentExecutionFilePath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-147">Cuando se invalida en una clase derivada, obtiene la ruta de acceso virtual a la solicitud actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-147">When overridden in a derived class, gets the virtual path of the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-148">Ruta de acceso virtual al controlador de páginas que se está ejecutando actualmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-148">The virtual path of the page handler that is currently executing.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f350-149">El <xref:System.Web.HttpRequestBase.CurrentExecutionFilePath%2A> propiedad devuelve la ruta de acceso de archivo del controlador de página actualmente en ejecución.</span><span class="sxs-lookup"><span data-stu-id="2f350-149">The <xref:System.Web.HttpRequestBase.CurrentExecutionFilePath%2A> property returns the file path of the currently executing page handler.</span></span>  
  
 <span data-ttu-id="2f350-150">Al redirigir una solicitud mediante la <xref:System.Web.HttpServerUtility.Execute%2A?displayProperty=nameWithType> método o la <xref:System.Web.HttpServerUtility.Transfer%2A?displayProperty=nameWithType> método, el <xref:System.Web.HttpRequestBase.CurrentExecutionFilePath%2A> propiedad devuelve la ruta de acceso de la página que se redirige a (la página secundaria).</span><span class="sxs-lookup"><span data-stu-id="2f350-150">When you redirect a request using either the <xref:System.Web.HttpServerUtility.Execute%2A?displayProperty=nameWithType> method or the <xref:System.Web.HttpServerUtility.Transfer%2A?displayProperty=nameWithType> method, the <xref:System.Web.HttpRequestBase.CurrentExecutionFilePath%2A> property returns the path of the page that you are redirecting to (the child page).</span></span> <span data-ttu-id="2f350-151">Sin embargo, cuando el cliente se redirige a otra página, el <xref:System.Web.HttpRequestBase.FilePath%2A> propiedad devuelve la ruta de acceso a la página original.</span><span class="sxs-lookup"><span data-stu-id="2f350-151">However, when the client is redirected to another page, the <xref:System.Web.HttpRequestBase.FilePath%2A> property returns the path to the original page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-152">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-152">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentExecutionFilePathExtension">
      <MemberSignature Language="C#" Value="public virtual string CurrentExecutionFilePathExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentExecutionFilePathExtension" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.CurrentExecutionFilePathExtension" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrentExecutionFilePathExtension As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CurrentExecutionFilePathExtension { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-153">Cuando se implementa en una clase derivada, obtiene la extensión del nombre de archivo que se especifica en la propiedad <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-153">When implemented in a derived class, gets the extension of the file name that is specified in the <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-154">Extensión del nombre de archivo que se especifica en la propiedad <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-154">The extension of the file name that is specified in the <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /> property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePath">
      <MemberSignature Language="C#" Value="public virtual string FilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.FilePath" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FilePath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-155">Cuando se invalida en una clase derivada, obtiene la ruta de acceso virtual a la solicitud actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-155">When overridden in a derived class, gets the virtual path of the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-156">Ruta de acceso virtual de la solicitud actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-156">The virtual path of the current request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-157">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-157">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Files">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpFileCollectionBase Files { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpFileCollectionBase Files" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.Files" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Files As HttpFileCollectionBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpFileCollectionBase ^ Files { System::Web::HttpFileCollectionBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpFileCollectionBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-158">Cuando se invalida en una clase derivada, obtiene la colección de archivos cargados por el cliente, en formato MIME de varias partes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-158">When overridden in a derived class, gets the collection of files that were uploaded by the client, in multipart MIME format.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-159">Archivos cargados por el cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-159">The files that were uploaded by the client.</span>
          </span>
          <span data-ttu-id="2f350-160">Los elementos del objeto <see cref="T:System.Web.HttpFileCollection" /> son del tipo <see cref="T:System.Web.HttpPostedFile" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-160">The items in the <see cref="T:System.Web.HttpFileCollection" /> object are of type <see cref="T:System.Web.HttpPostedFile" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-161">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-161">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Filter" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Filter As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Stream ^ Filter { System::IO::Stream ^ get(); void set(System::IO::Stream ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-162">Cuando se invalida en una clase derivada, obtiene o establece el filtro que debe usarse al leer el flujo de entrada actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-162">When overridden in a derived class, gets or sets the filter to use when the current input stream is being read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-163">Objeto que se va a usar como filtro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-163">An object to use as the filter.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-164">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-164">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection Form { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Form" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.Form" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Form As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::NameValueCollection ^ Form { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-165">Cuando se invalida en una clase derivada, obtiene la colección de variables de formulario enviadas por el cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-165">When overridden in a derived class, gets the collection of form variables that were sent by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-166">Variables de formulario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-166">The form variables.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-167">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-167">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBufferedInputStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetBufferedInputStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetBufferedInputStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestBase.GetBufferedInputStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBufferedInputStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetBufferedInputStream();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2f350-168">Cuando se implementa en una clase derivada, obtiene un objeto <see cref="T:System.IO.Stream" /> que se puede usar para leer el cuerpo de la entidad HTTP de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-168">When implemented in a derived class, gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f350-169">Objeto <see cref="T:System.IO.Stream" /> que se puede usar para leer el cuerpo de la entidad HTTP de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-169">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          </span>
          <span data-ttu-id="2f350-170">Dado que esta información se conserva, el código de nivel inferior, como las páginas de formularios ASP.NET Web Forms (archivos .aspx), se ejecutará correctamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-170">Because this information is preserved, downstream code such as ASP.NET Web Forms pages (.aspx files) will run successfully.</span>
          </span>
          <span data-ttu-id="2f350-171">Esto no sucede así con el método <see cref="M:System.Web.HttpRequest.GetBufferlessInputStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-171">This is not the case with the <see cref="M:System.Web.HttpRequest.GetBufferlessInputStream" /> method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBufferlessInputStream">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-172">Cuando se implementa en una clase derivada, obtiene un objeto <see cref="T:System.IO.Stream" /> que se puede usar para leer el cuerpo de la entidad HTTP de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-172">When implemented in a derived class, gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBufferlessInputStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetBufferlessInputStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetBufferlessInputStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestBase.GetBufferlessInputStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBufferlessInputStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetBufferlessInputStream();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2f350-173">Cuando se implementa en una clase derivada, obtiene un objeto <see cref="T:System.IO.Stream" /> que se puede usar para leer el cuerpo de la entidad HTTP de entrada, deshabilitando opcionalmente el límite de longitud de la solicitud que se establece en la propiedad <see cref="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-173">When implemented in a derived class, gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body, optionally disabling the request length limit that is set in the <see cref="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" /> property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f350-174">Objeto <see cref="T:System.IO.Stream" /> que se puede usar para leer el cuerpo de la entidad HTTP de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-174">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.HttpRequest.GetBufferedInputStream" />
      </Docs>
    </Member>
    <Member MemberName="GetBufferlessInputStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetBufferlessInputStream (bool disableMaxRequestLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetBufferlessInputStream(bool disableMaxRequestLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestBase.GetBufferlessInputStream(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBufferlessInputStream (disableMaxRequestLength As Boolean) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetBufferlessInputStream(bool disableMaxRequestLength);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disableMaxRequestLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disableMaxRequestLength">
          <span data-ttu-id="2f350-175">Es <see langword="true" /> para deshabilitar el límite de longitud de la solicitud; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-175">
              <see langword="true" /> to disable the request length limit; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f350-176">Cuando se implementa en una clase derivada, obtiene un objeto <see cref="T:System.IO.Stream" /> que se puede usar para leer el cuerpo de la entidad HTTP de entrada, deshabilitando opcionalmente el límite de longitud de la solicitud que se establece en la propiedad <see cref="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-176">When implemented in a derived class, gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body, optionally disabling the request length limit that is set in the <see cref="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" /> property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f350-177">Objeto <see cref="T:System.IO.Stream" /> que se puede usar para leer el cuerpo de la entidad HTTP de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-177">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.HttpRequest.GetBufferedInputStream" />
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.Headers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Headers As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::NameValueCollection ^ Headers { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-178">Cuando se invalida en una clase derivada, obtiene la colección de encabezados HTTP enviados por el cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-178">When overridden in a derived class, gets the collection of HTTP headers that were sent by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-179">Encabezados de solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-179">The request headers.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-180">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-180">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HttpChannelBinding">
      <MemberSignature Language="C#" Value="public virtual System.Security.Authentication.ExtendedProtection.ChannelBinding HttpChannelBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ChannelBinding HttpChannelBinding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.HttpChannelBinding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HttpChannelBinding As ChannelBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Authentication::ExtendedProtection::ChannelBinding ^ HttpChannelBinding { System::Security::Authentication::ExtendedProtection::ChannelBinding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ChannelBinding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-181">Cuando se invalida en una clase derivada, obtiene el objeto <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> de la instancia actual de <see cref="T:System.Web.HttpWorkerRequest" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-181">When overridden in a derived class, gets the <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> object of the current <see cref="T:System.Web.HttpWorkerRequest" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-182">Objeto <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> de la instancia de <see cref="T:System.Web.HttpWorkerRequest" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-182">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> object of the current <see cref="T:System.Web.HttpWorkerRequest" /> instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-183">El objeto <see cref="T:System.Web.HttpWorkerRequest" /> actual no es un objeto <see langword="System.Web.Hosting.IIS7WorkerRequest" /> ni <see langword="System.Web.Hosting.ISAPIWorkerRequestInProc" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-183">The current <see cref="T:System.Web.HttpWorkerRequest" /> object is not a <see langword="System.Web.Hosting.IIS7WorkerRequest" /> object or a <see langword="System.Web.Hosting.ISAPIWorkerRequestInProc" /> object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HttpMethod">
      <MemberSignature Language="C#" Value="public virtual string HttpMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HttpMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.HttpMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HttpMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HttpMethod { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-184">Cuando se invalida en una clase derivada, obtiene el método de transferencia de datos HTTP (como <see langword="GET" />, <see langword="POST" /> o <see langword="HEAD" />) usado por el cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-184">When overridden in a derived class, gets the HTTP data-transfer method (such as <see langword="GET" />, <see langword="POST" />, or <see langword="HEAD" />) that was used by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-185">Método de transferencia de datos HTTP usado por el cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-185">The HTTP data-transfer method that was used by the client.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-186">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-186">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InputStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream InputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InputStream" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.InputStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property InputStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Stream ^ InputStream { System::IO::Stream ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-187">Cuando se invalida en una clase derivada, obtiene el contenido del cuerpo de la entidad HTTP de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-187">When overridden in a derived class, gets the contents of the incoming HTTP entity body.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-188">Contenido del cuerpo de la entidad HTTP de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-188">The contents of the incoming HTTP entity body.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-189">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-189">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="InsertEntityBody">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-190">Cuando se implementa en una clase derivada, proporciona un contenedor administrado para el método de IIS que inserta el cuerpo de una entidad de solicitud HTTP en memoria.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-190">When implemented in a derived class, provides a managed wrapper for the IIS method that inserts an HTTP request entity body into memory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InsertEntityBody">
      <MemberSignature Language="C#" Value="public virtual void InsertEntityBody ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertEntityBody() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestBase.InsertEntityBody" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertEntityBody ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertEntityBody();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2f350-191">Cuando se implementa en una clase derivada, proporciona una copia del cuerpo de la entidad de solicitud HTTP a IIS.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-191">When implemented in a derived class, provides a copy of the HTTP request entity body to IIS.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertEntityBody">
      <MemberSignature Language="C#" Value="public virtual void InsertEntityBody (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertEntityBody(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestBase.InsertEntityBody(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertEntityBody (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertEntityBody(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="2f350-192">Matriz que contiene los datos de la entidad de solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-192">An array that contains the request entity data.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="2f350-193">Posición de base cero en <c>buffer</c> donde se comienzan a almacenar los datos de la entidad de solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-193">The zero-based position in <c>buffer</c> at which to begin storing the request entity data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="2f350-194">Número de bytes que se van a leer en la matriz <c>buffer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-194">The number of bytes to read into the <c>buffer</c> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f350-195">Cuando se implementa una clase derivada, proporciona a IIS una copia del cuerpo de la entidad de solicitud HTTP e información sobre el objeto de entidad de solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-195">When implemented in a derived class, provides IIS with a copy of the HTTP request entity body and with information about the request entity object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public virtual bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-196">Cuando se invalida en una clase derivada, obtiene un valor que indica si se autenticó la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-196">When overridden in a derived class, gets a value that indicates whether the request has been authenticated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-197">Es <see langword="true" /> si se autentica la solicitud; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-197">
              <see langword="true" /> if the request has been authenticated; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-198">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-198">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsLocal">
      <MemberSignature Language="C#" Value="public virtual bool IsLocal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocal" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.IsLocal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsLocal { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-199">Cuando se invalida en una clase derivada, obtiene un valor que indica si la solicitud proviene del equipo local.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-199">When overridden in a derived class, gets a value that indicates whether the request is from the local computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-200">Es <see langword="true" /> si la solicitud procede del equipo local; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-200">
              <see langword="true" /> if the request is from the local computer; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-201">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-201">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsSecureConnection">
      <MemberSignature Language="C#" Value="public virtual bool IsSecureConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecureConnection" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.IsSecureConnection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSecureConnection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSecureConnection { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-202">Cuando se invalida en una clase derivada, obtiene un valor que indica si la conexión HTTP usa ranuras seguras (protocolo HTTPS).</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-202">When overridden in a derived class, gets a value that indicates whether the HTTP connection uses secure sockets (HTTPS protocol).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-203">Es <see langword="true" /> si la conexión es una conexión SSL que usa el protocolo HTTPS; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-203">
              <see langword="true" /> if the connection is an SSL connection that uses HTTPS protocol; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-204">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-204">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual string this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="2f350-205">Nombre del miembro de colección que se va a obtener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-205">The name of the collection member to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f350-206">Cuando se invalida en una clase derivada, obtiene el objeto especificado de las colecciones <see cref="P:System.Web.HttpRequestBase.Cookies" />, <see cref="P:System.Web.HttpRequestBase.Form" />, <see cref="P:System.Web.HttpRequestBase.QueryString" /> o <see cref="P:System.Web.HttpRequestBase.ServerVariables" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-206">When overridden in a derived class, gets the specified object from the <see cref="P:System.Web.HttpRequestBase.Cookies" />, <see cref="P:System.Web.HttpRequestBase.Form" />, <see cref="P:System.Web.HttpRequestBase.QueryString" />, or <see cref="P:System.Web.HttpRequestBase.ServerVariables" /> collections.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-207">Miembro de colección <see cref="P:System.Web.HttpRequestBase.QueryString" />, <see cref="P:System.Web.HttpRequestBase.Form" />, <see cref="P:System.Web.HttpRequestBase.Cookies" /> o <see cref="P:System.Web.HttpRequestBase.ServerVariables" /> especificado en el parámetro <paramref name="key" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-207">The <see cref="P:System.Web.HttpRequestBase.QueryString" />, <see cref="P:System.Web.HttpRequestBase.Form" />, <see cref="P:System.Web.HttpRequestBase.Cookies" />, or <see cref="P:System.Web.HttpRequestBase.ServerVariables" /> collection member that is specified by <paramref name="key" />.</span>
          </span>
          <span data-ttu-id="2f350-208">Si no se encuentra el valor de <paramref name="key" /> especificado, se devuelve <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-208">If the specified <paramref name="key" /> value is not found, <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-209">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-209">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LogonUserIdentity">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.WindowsIdentity LogonUserIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.WindowsIdentity LogonUserIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.LogonUserIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LogonUserIdentity As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::WindowsIdentity ^ LogonUserIdentity { System::Security::Principal::WindowsIdentity ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-210">Cuando se invalida en una clase derivada, obtiene el tipo <see cref="T:System.Security.Principal.WindowsIdentity" /> del usuario actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-210">When overridden in a derived class, gets the <see cref="T:System.Security.Principal.WindowsIdentity" /> type for the current user.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-211">Identidad del usuario actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-211">The identity for the current user.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-212">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-212">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MapImageCoordinates">
      <MemberSignature Language="C#" Value="public virtual int[] MapImageCoordinates (string imageFieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32[] MapImageCoordinates(string imageFieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestBase.MapImageCoordinates(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MapImageCoordinates (imageFieldName As String) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;int&gt; ^ MapImageCoordinates(System::String ^ imageFieldName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="imageFieldName">
          <span data-ttu-id="2f350-213">Nombre del mapa de imágenes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-213">The name of the image map.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f350-214">Cuando se invalida en una clase derivada, asigna un parámetro de formulario entrante de campo de imagen a los valores adecuados de coordenada X y de coordenada Y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-214">When overridden in a derived class, maps an incoming image-field form parameter to appropriate x-coordinate and y-coordinate values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f350-215">Matriz bidimensional de enteros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-215">A two-dimensional array of integers.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-216">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-216">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MapPath">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-217">Cuando se invalida en una clase derivada, asigna la ruta de acceso virtual de la dirección URL solicitada a una ruta de acceso física en el servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-217">When overridden in a derived class, maps the virtual path in the requested URL to a physical path on the server.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public virtual string MapPath (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string MapPath(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestBase.MapPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MapPath (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ MapPath(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="2f350-218">Ruta de acceso virtual (absoluta o relativa) que se va a asignar a una ruta de acceso física.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-218">The virtual path (absolute or relative) to map to a physical path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f350-219">Cuando se invalida en una clase derivada, asigna la ruta de acceso virtual especificada a una ruta de acceso física en el servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-219">When overridden in a derived class, maps the specified virtual path to a physical path on the server.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f350-220">Ruta de acceso física en el servidor que se especifica en <paramref name="virtualPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-220">The physical path on the server that is specified by <paramref name="virtualPath" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-221">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-221">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public virtual string MapPath (string virtualPath, string baseVirtualDir, bool allowCrossAppMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string MapPath(string virtualPath, string baseVirtualDir, bool allowCrossAppMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestBase.MapPath(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MapPath (virtualPath As String, baseVirtualDir As String, allowCrossAppMapping As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ MapPath(System::String ^ virtualPath, System::String ^ baseVirtualDir, bool allowCrossAppMapping);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="baseVirtualDir" Type="System.String" />
        <Parameter Name="allowCrossAppMapping" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="2f350-222">Ruta de acceso virtual (absoluta o relativa) que se va a asignar a una ruta de acceso física.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-222">The virtual path (absolute or relative) to map to a physical path.</span>
          </span>
        </param>
        <param name="baseVirtualDir">
          <span data-ttu-id="2f350-223">Ruta de acceso al directorio base virtual que se usa para una resolución relativa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-223">The virtual base directory path that is used for relative resolution.</span>
          </span>
        </param>
        <param name="allowCrossAppMapping">
          <span data-ttu-id="2f350-224">
            <see langword="true" /> para indicar que <c>virtualPath</c> puede pertenecer a otra aplicación; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-224">
              <see langword="true" /> to indicate that <c>virtualPath</c> can belong to another application; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f350-225">Cuando se invalida en una clase derivada, asigna la ruta de acceso virtual especificada a una ruta de acceso física en el servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-225">When overridden in a derived class, maps the specified virtual path to a physical path on the server.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f350-226">Ruta de acceso física del servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-226">The physical path on the server.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-227">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-227">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MapRawImageCoordinates">
      <MemberSignature Language="C#" Value="public virtual double[] MapRawImageCoordinates (string imageFieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64[] MapRawImageCoordinates(string imageFieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestBase.MapRawImageCoordinates(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MapRawImageCoordinates (imageFieldName As String) As Double()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;double&gt; ^ MapRawImageCoordinates(System::String ^ imageFieldName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="imageFieldName">
          <span data-ttu-id="2f350-228">Nombre del campo de imagen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-228">The name of the image field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f350-229">Asigna un parámetro de formulario entrante de campo de imagen a los valores de coordenadas X e Y adecuados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-229">Maps an incoming image field form parameter into appropriate x and y coordinate values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f350-230">Valores de coordenadas X e Y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-230">The x and y coordinate values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Params">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection Params { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Params" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.Params" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Params As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::NameValueCollection ^ Params { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-231">Cuando se invalida en una clase derivada, obtiene una colección combinada de elementos <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.ServerVariables" /> y <see cref="P:System.Web.HttpRequest.Cookies" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-231">When overridden in a derived class, gets a combined collection of <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.ServerVariables" />, and <see cref="P:System.Web.HttpRequest.Cookies" /> items.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-232">Colección de valores combinados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-232">The collection of combined values.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-233">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-233">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public virtual string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.Path" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Path { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-234">Cuando se invalida en una clase derivada, obtiene la ruta de acceso virtual a la solicitud actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-234">When overridden in a derived class, gets the virtual path of the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-235">Ruta de acceso virtual de la solicitud actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-235">The virtual path of the current request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-236">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-236">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PathInfo">
      <MemberSignature Language="C#" Value="public virtual string PathInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.PathInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PathInfo As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PathInfo { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-237">Cuando se invalida en una clase derivada, obtiene información adicional de la ruta de acceso a un recurso con una extensión URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-237">When overridden in a derived class, gets additional path information for a resource that has a URL extension.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-238">Información adicional de la ruta de acceso al recurso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-238">The additional path information for the resource.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f350-239">Para la dirección URL Http://www.contoso.com/virdir/page.html/tail, el <xref:System.Web.HttpRequestBase.PathInfo%2A> valor es/tail.</span><span class="sxs-lookup"><span data-stu-id="2f350-239">For the URL Http://www.contoso.com/virdir/page.html/tail, the <xref:System.Web.HttpRequestBase.PathInfo%2A> value is /tail.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-240">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-240">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PhysicalApplicationPath">
      <MemberSignature Language="C#" Value="public virtual string PhysicalApplicationPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PhysicalApplicationPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.PhysicalApplicationPath" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PhysicalApplicationPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PhysicalApplicationPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-241">Cuando se invalida en una clase derivada, obtiene la ruta de acceso física del sistema de archivos al directorio raíz de la aplicación actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-241">When overridden in a derived class, gets the physical file-system path of the current application's root directory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-242">Ruta de acceso del sistema de archivos al directorio raíz de la aplicación actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-242">The file-system path of the current application's root directory.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-243">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-243">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PhysicalPath">
      <MemberSignature Language="C#" Value="public virtual string PhysicalPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PhysicalPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.PhysicalPath" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PhysicalPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PhysicalPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-244">Cuando se invalida en una clase derivada, obtiene la ruta de acceso física del sistema de archivos al recurso solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-244">When overridden in a derived class, gets the physical file-system path of the requested resource.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-245">Ruta de acceso del sistema de archivos al recurso solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-245">The file-system path of the requested resource.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-246">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-246">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection QueryString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection QueryString" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.QueryString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property QueryString As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::NameValueCollection ^ QueryString { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-247">Cuando se invalida en una clase derivada, obtiene la colección de variables de cadena de consulta HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-247">When overridden in a derived class, gets the collection of HTTP query-string variables.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-248">Variables de cadena de consulta enviadas por el cliente en la dirección URL de la solicitud actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-248">The query-string variables that were sent by the client in the URL of the current request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-249">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-249">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RawUrl">
      <MemberSignature Language="C#" Value="public virtual string RawUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RawUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.RawUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RawUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ RawUrl { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-250">Cuando se invalida en una clase derivada, obtiene la dirección URL completa de la solicitud actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-250">When overridden in a derived class, gets the complete URL of the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-251">Dirección URL completa de la solicitud actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-251">The complete URL of the current request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-252">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-252">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadEntityBodyMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.ReadEntityBodyMode ReadEntityBodyMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.ReadEntityBodyMode ReadEntityBodyMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.ReadEntityBodyMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ReadEntityBodyMode As ReadEntityBodyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::ReadEntityBodyMode ReadEntityBodyMode { System::Web::ReadEntityBodyMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ReadEntityBodyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-253">Cuando se implementa en una clase derivada, obtiene un valor que indica si se leyó el cuerpo de la entidad de solicitud y, en caso afirmativo, cómo se leyó.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-253">When implemented in a derived class, gets a value that indicates whether the request entity body has been read, and if so, how it was read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-254">Valor que indica cómo se leyó el cuerpo de la entidad de solicitud o que todavía no se leyó.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-254">The value that indicates how the request entity body was read, or that it has not yet been read.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestContext">
      <MemberSignature Language="C#" Value="public virtual System.Web.Routing.RequestContext RequestContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RequestContext RequestContext" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.RequestContext" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RequestContext As RequestContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Routing::RequestContext ^ RequestContext { System::Web::Routing::RequestContext ^ get(); void set(System::Web::Routing::RequestContext ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RequestContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-255">Cuando se invalida en una clase derivada, obtiene la instancia de <see cref="T:System.Web.Routing.RequestContext" /> de la solicitud actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-255">When overridden in a derived class, gets the <see cref="T:System.Web.Routing.RequestContext" /> instance of the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-256">Instancia de <see cref="T:System.Web.Routing.RequestContext" /> de la solicitud actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-256">The <see cref="T:System.Web.Routing.RequestContext" /> instance of the current request.</span>
          </span>
          <span data-ttu-id="2f350-257">En el caso de solicitudes no enrutadas, el objeto <see cref="T:System.Web.Routing.RequestContext" /> que se devuelve está vacío.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-257">For non-routed requests, the <see cref="T:System.Web.Routing.RequestContext" /> object that is returned is empty.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f350-258">Esta propiedad proporciona acceso a la <xref:System.Web.Routing.RouteData> objeto de la solicitud actual.</span><span class="sxs-lookup"><span data-stu-id="2f350-258">This property provides access to the <xref:System.Web.Routing.RouteData> object for the current request.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-259">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-259">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RequestType">
      <MemberSignature Language="C#" Value="public virtual string RequestType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.RequestType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RequestType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ RequestType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-260">Cuando se invalida en una clase derivada, obtiene o establece el método de transferencia de datos HTTP (<see langword="GET" /> o <see langword="POST" />) usado por el cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-260">When overridden in a derived class, gets or sets the HTTP data-transfer method (<see langword="GET" /> or <see langword="POST" />) that was used by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-261">Tipo de método de transferencia de datos HTTP usado por el cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-261">The HTTP data-transfer method type that was used by the client.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-262">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-262">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public virtual void SaveAs (string filename, bool includeHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveAs(string filename, bool includeHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestBase.SaveAs(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SaveAs (filename As String, includeHeaders As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SaveAs(System::String ^ filename, bool includeHeaders);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="includeHeaders" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="2f350-263">Ruta de acceso física a la unidad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-263">The physical drive path.</span>
          </span>
        </param>
        <param name="includeHeaders">
          <span data-ttu-id="2f350-264">Valor que especifica si los encabezados HTTP se van a guardar en el disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-264">A value that specifies whether to save HTTP headers to disk.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f350-265">Cuando se invalida en una clase derivada, guarda una solicitud HTTP en el disco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-265">When overridden in a derived class, saves an HTTP request to disk.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-266">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-266">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ServerVariables">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection ServerVariables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection ServerVariables" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.ServerVariables" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ServerVariables As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::NameValueCollection ^ ServerVariables { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-267">Cuando se invalida en una clase derivada, obtiene una colección de variables de servidor web.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-267">When overridden in a derived class, gets a collection of Web server variables.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-268">Variables de servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-268">The server variables.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-269">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-269">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TimedOutToken">
      <MemberSignature Language="C#" Value="public virtual System.Threading.CancellationToken TimedOutToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken TimedOutToken" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.TimedOutToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TimedOutToken As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Threading::CancellationToken TimedOutToken { System::Threading::CancellationToken get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-270">Cuando se implementa en una clase derivada, obtiene un objeto <see cref="T:System.Threading.CancellationToken" /> que se recorre cuando se agota el tiempo de espera de una solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-270">When implemented in a derived class, gets a <see cref="T:System.Threading.CancellationToken" /> object that is tripped when a request times out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-271">Token de cancelación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-271">The cancellation token.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f350-272">Para obtener más información, vea <xref:System.Web.HttpRequest.TimedOutToken%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2f350-272">For more information, see <xref:System.Web.HttpRequest.TimedOutToken%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TlsTokenBindingInfo">
      <MemberSignature Language="C#" Value="public virtual System.Web.ITlsTokenBindingInfo TlsTokenBindingInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.ITlsTokenBindingInfo TlsTokenBindingInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.TlsTokenBindingInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TlsTokenBindingInfo As ITlsTokenBindingInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::ITlsTokenBindingInfo ^ TlsTokenBindingInfo { System::Web::ITlsTokenBindingInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ITlsTokenBindingInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-273">Obtiene o establece la información de enlace del token para esta instancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-273">Gets or sets the token binding information for this instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-274">Información de enlace del token para esta instancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-274">The token binding information for this instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalBytes">
      <MemberSignature Language="C#" Value="public virtual int TotalBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalBytes" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.TotalBytes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TotalBytes As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TotalBytes { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-275">Cuando se invalida en una clase derivada, obtiene el número de bytes en el flujo de entrada actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-275">When overridden in a derived class, gets the number of bytes in the current input stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-276">Número de bytes del flujo de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-276">The number of bytes in the input stream.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-277">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-277">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Unvalidated">
      <MemberSignature Language="C#" Value="public virtual System.Web.UnvalidatedRequestValuesBase Unvalidated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UnvalidatedRequestValuesBase Unvalidated" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.Unvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Unvalidated As UnvalidatedRequestValuesBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UnvalidatedRequestValuesBase ^ Unvalidated { System::Web::UnvalidatedRequestValuesBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UnvalidatedRequestValuesBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-278">Cuando se implementa en una clase derivada, proporciona acceso a los valores de la solicitud HTTP sin desencadenar la validación de la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-278">When implemented in a derived class, provides access to HTTP request values without triggering request validation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-279">Valores de solicitud no validados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-279">Unvalidated request values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f350-280">Para obtener más información acerca de la validación de solicitudes, consulte <xref:System.Web.UnvalidatedRequestValues>.</span><span class="sxs-lookup"><span data-stu-id="2f350-280">For more information about request validation, see <xref:System.Web.UnvalidatedRequestValues>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2f350-281">Si utiliza esta propiedad, se deben comprobar manualmente los datos de posibles ataques de scripts entre sitios.</span><span class="sxs-lookup"><span data-stu-id="2f350-281">If you use this property, you must manually check the data for potential cross-site scripting attacks.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UnvalidatedRequestValues" />
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public virtual Uri Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.Url" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Url As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Uri ^ Url { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-282">Cuando se invalida en una clase derivada, obtiene información sobre la dirección URL de la solicitud actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-282">When overridden in a derived class, gets information about the URL of the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-283">Objeto que contiene información sobre la dirección URL de la solicitud actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-283">An object that contains information about the URL of the current request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-284">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-284">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UrlReferrer">
      <MemberSignature Language="C#" Value="public virtual Uri UrlReferrer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UrlReferrer" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.UrlReferrer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UrlReferrer As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Uri ^ UrlReferrer { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-285">Cuando se invalida en una clase derivada, obtiene información sobre la dirección URL de la solicitud de cliente vinculada a la dirección URL actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-285">When overridden in a derived class, gets information about the URL of the client request that linked to the current URL.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-286">Dirección URL de la página vinculada a la solicitud actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-286">The URL of the page that linked to the current request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-287">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-287">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public virtual string UserAgent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.UserAgent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UserAgent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UserAgent { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-288">Cuando se invalida en una clase derivada, obtiene la cadena de agente de usuario completa del cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-288">When overridden in a derived class, gets the complete user-agent string of the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-289">Cadena de agente de usuario completa del cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-289">The complete user-agent string of the client.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-290">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-290">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UserHostAddress">
      <MemberSignature Language="C#" Value="public virtual string UserHostAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostAddress" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.UserHostAddress" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UserHostAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UserHostAddress { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-291">Cuando se invalida en una clase derivada, obtiene la dirección IP del host del cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-291">When overridden in a derived class, gets the IP host address of the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-292">Dirección IP del cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-292">The IP address of the client.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-293">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-293">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UserHostName">
      <MemberSignature Language="C#" Value="public virtual string UserHostName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostName" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.UserHostName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UserHostName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UserHostName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-294">Cuando se invalida en una clase derivada, obtiene el nombre DNS del cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-294">When overridden in a derived class, gets the DNS name of the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-295">Nombre DNS del cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-295">The DNS name of the client.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-296">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-296">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UserLanguages">
      <MemberSignature Language="C#" Value="public virtual string[] UserLanguages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] UserLanguages" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequestBase.UserLanguages" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UserLanguages As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ UserLanguages { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f350-297">Cuando se invalida en una clase derivada, obtiene una matriz ordenada de las preferencias de idioma del cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-297">When overridden in a derived class, gets a sorted array of client language preferences.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f350-298">Matriz ordenada de las preferencias de idioma del cliente o <see langword="null" /> si la matriz está vacía.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-298">A sorted array of client language preferences, or <see langword="null" /> if the array is empty.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-299">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-299">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateInput">
      <MemberSignature Language="C#" Value="public virtual void ValidateInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ValidateInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestBase.ValidateInput" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ValidateInput ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ValidateInput();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2f350-300">Cuando se invalida en una clase derivada, hace que se validen las colecciones a las que se obtiene acceso a través de las propiedades <see cref="P:System.Web.HttpRequestBase.Cookies" />, <see cref="P:System.Web.HttpRequestBase.Form" /> y <see cref="P:System.Web.HttpRequestBase.QueryString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-300">When overridden in a derived class, causes validation to occur for the collections that are accessed through the <see cref="P:System.Web.HttpRequestBase.Cookies" />, <see cref="P:System.Web.HttpRequestBase.Form" />, and <see cref="P:System.Web.HttpRequestBase.QueryString" /> properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f350-301">El <xref:System.Web.HttpRequestBase> clase utiliza marcas de validación de entrada para determinar si se debe realizar la validación en las colecciones de solicitud que se tiene acceso a través de la <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, y <xref:System.Web.HttpRequest.QueryString%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="2f350-301">The <xref:System.Web.HttpRequestBase> class uses input validation flags to determine whether to perform validation on the request collections that are accessed through the <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, and <xref:System.Web.HttpRequest.QueryString%2A> properties.</span></span> <span data-ttu-id="2f350-302">El <xref:System.Web.HttpRequestBase.ValidateInput%2A> método establece estos marcadores lo que, cuando la `get` descriptores de acceso de la <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, o <xref:System.Web.HttpRequest.QueryString%2A> se invocan propiedades, se realiza una validación de entrada.</span><span class="sxs-lookup"><span data-stu-id="2f350-302">The <xref:System.Web.HttpRequestBase.ValidateInput%2A> method sets these flags so that when the `get` accessors of the <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, or <xref:System.Web.HttpRequest.QueryString%2A> properties are invoked, input validation is performed.</span></span> <span data-ttu-id="2f350-303">Validación funciona mediante la comprobación de todos los datos de entrada en una lista codificada de forma rígida de datos potencialmente peligrosos.</span><span class="sxs-lookup"><span data-stu-id="2f350-303">Validation works by checking all input data against a hard-coded list of potentially dangerous data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="2f350-304">Siempre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f350-304">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>