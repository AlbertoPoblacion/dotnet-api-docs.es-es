<Type Name="TraceContextRecord" FullName="System.Web.TraceContextRecord">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe544be2279fa289b6685d54b1d4d99179df41ff" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37528325" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TraceContextRecord" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TraceContextRecord extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.TraceContextRecord" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TraceContextRecord" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceContextRecord sealed" />
  <TypeSignature Language="F#" Value="type TraceContextRecord = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa un mensaje de seguimiento de ASP.NET y sus datos asociados.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.TraceContextRecord> objeto encapsula el mensaje de seguimiento, categoría, cualquier asociado <xref:System.Exception>, y si se escribió el registro de seguimiento por la <xref:System.Web.TraceContext.Warn%2A?displayProperty=nameWithType> método.  
  
 Cada llamada a la <xref:System.Web.TraceContext.Write%2A?displayProperty=nameWithType> y <xref:System.Web.TraceContext.Warn%2A?displayProperty=nameWithType> métodos genera un <xref:System.Web.TraceContextRecord> objeto que se agrega a la <xref:System.Web.TraceContextEventArgs.TraceRecords%2A?displayProperty=nameWithType> mensajes de la colección. Puede obtener acceso a la colección de registros controlando el <xref:System.Web.TraceContext.TraceFinished> eventos.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo se puede registrar un <xref:System.Web.TraceContextEventHandler> delegado para controlar el <xref:System.Web.TraceContext.TraceFinished> eventos. En este ejemplo, el `OnTraceFinished` método tiene acceso a la colección de <xref:System.Web.TraceContextRecord> objetos a través de la <xref:System.Web.TraceContextEventArgs.TraceRecords%2A> propiedad, itera a través de ellos y los escribe en la secuencia de respuesta.  
  
 [!code-aspx-csharp[System.Web.Trace_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_3/CS/form3cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_3/VB/form3vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.TraceContextEventArgs" />
    <altmember cref="T:System.Web.TraceContextEventHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceContextRecord (string category, string msg, bool isWarning, Exception errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string category, string msg, bool isWarning, class System.Exception errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.TraceContextRecord.#ctor(System.String,System.String,System.Boolean,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (category As String, msg As String, isWarning As Boolean, errorInfo As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceContextRecord(System::String ^ category, System::String ^ msg, bool isWarning, Exception ^ errorInfo);" />
      <MemberSignature Language="F#" Value="new System.Web.TraceContextRecord : string * string * bool * Exception -&gt; System.Web.TraceContextRecord" Usage="new System.Web.TraceContextRecord (category, msg, isWarning, errorInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="isWarning" Type="System.Boolean" />
        <Parameter Name="errorInfo" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="category">Categoría de seguimiento que recibe el mensaje.</param>
        <param name="msg">Mensaje de seguimiento.</param>
        <param name="isWarning">
          <see langword="true" /> si el método asociado a <see cref="T:System.Web.TraceContextRecord" /> es el método <see cref="Overload:System.Web.TraceContext.Warn" />; <see langword="false" /> si el método de traza es el método <see cref="Overload:System.Web.TraceContext.Write" />.</param>
        <param name="errorInfo">Objeto <see cref="T:System.Exception" /> que contiene información de error adicional.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.TraceContextRecord" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cada llamada a la <xref:System.Web.TraceContext.Write%2A?displayProperty=nameWithType> y <xref:System.Web.TraceContext.Warn%2A?displayProperty=nameWithType> métodos genera un <xref:System.Web.TraceContextRecord> objeto que se agrega a la <xref:System.Web.TraceContextEventArgs.TraceRecords%2A?displayProperty=nameWithType> mensajes de la colección. El <xref:System.Web.TraceContext.Warn%2A> conjuntos de llamada de método la <xref:System.Web.TraceContextRecord.IsWarning%2A> propiedad `true`, mientras el <xref:System.Web.TraceContext.Write%2A> llamadas al método establecerlo en `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public string Category { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Category" />
      <MemberSignature Language="DocId" Value="P:System.Web.TraceContextRecord.Category" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Category As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Category { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Category : string" Usage="System.Web.TraceContextRecord.Category" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la categoría definida por el usuario para el registro de seguimiento.</summary>
        <value>Cadena que representa una categoría para el registro de seguimiento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La categoría se usa para organizar mejor los mensajes de seguimiento en grupos reconocibles, pero puede ser cualquier cadena. El <xref:System.Web.TraceContext> clase utiliza <xref:System.String.Empty?displayProperty=nameWithType> como su categoría predeterminada para los métodos que toman sólo un `message` parámetro. La categoría predeterminada de ASP.NET, que escribe varios registros de seguimiento cuando está habilitada la traza, es "aspx.page".  
  
   
  
## Examples  
 El código siguiente muestra cómo obtener acceso a la <xref:System.Web.TraceContextRecord.Category%2A> propiedad de un <xref:System.Web.TraceContextRecord>e imprimir y su mensaje de seguimiento asociado a la `Response` stream.  
  
 [!code-aspx-csharp[System.Web.Trace_5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_5/CS/form5cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_5/VB/form5vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorInfo">
      <MemberSignature Language="C#" Value="public Exception ErrorInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception ErrorInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.TraceContextRecord.ErrorInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorInfo As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ ErrorInfo { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ErrorInfo : Exception" Usage="System.Web.TraceContextRecord.ErrorInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la <see cref="T:System.Exception" /> asociada al registro de seguimiento, si la hay.</summary>
        <value>
          <see cref="T:System.Exception" /> asociada al registro de seguimiento, si la hay, o <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede incluir una excepción en un registro de seguimiento si el seguimiento se usa para depurar una aplicación o solución de problemas de control de errores y excepciones. El <xref:System.Web.TraceContextRecord.ErrorInfo%2A> propiedad es `null` cuando el registro de seguimiento está asociado con uno de los <xref:System.Web.TraceContext> los métodos que no tienen una explícita `errorInfo` se proporciona el parámetro o sin ninguna excepción.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWarning">
      <MemberSignature Language="C#" Value="public bool IsWarning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWarning" />
      <MemberSignature Language="DocId" Value="P:System.Web.TraceContextRecord.IsWarning" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWarning As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWarning { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWarning : bool" Usage="System.Web.TraceContextRecord.IsWarning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el registro de seguimiento está asociado a una llamada al método <see cref="Overload:System.Web.TraceContext.Warn" />.</summary>
        <value>
          <see langword="true" /> si el <see cref="T:System.Web.TraceContextRecord" /> está asociado a la llamada al método <see cref="Overload:System.Web.TraceContext.Warn" />; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El código siguiente muestra cómo comprobar el <xref:System.Web.TraceContextRecord.IsWarning%2A> propiedad de un <xref:System.Web.TraceContextRecord> para determinar si el mensaje que contiene el registro se escribió por un <xref:System.Web.TraceContext.Warn%2A> o <xref:System.Web.TraceContext.Write%2A> llamada al método. Si el registro de seguimiento es un mensaje de advertencia, se realiza una acción diferente que si es un mensaje de error.  
  
 [!code-aspx-csharp[System.Web.Trace_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_4/CS/form4cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_4/VB/form4vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Web.TraceContextRecord.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.Web.TraceContextRecord.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el mensaje de seguimiento definido por el usuario.</summary>
        <value>Cadena que representa un mensaje para el registro de seguimiento.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El mensaje puede ser cualquier cadena y se utiliza para escribir información de seguimiento detallada. Se corresponde con el parámetro de mensaje que se pasa a la <xref:System.Web.TraceContext.Write%2A?displayProperty=nameWithType> y <xref:System.Web.TraceContext.Warn%2A?displayProperty=nameWithType> métodos. La información puede ser valores de tiempo de ejecución, los mensajes para orientarle y guiarle a través de la ejecución de un programa u otros datos de diagnóstico.  
  
   
  
## Examples  
 El código siguiente muestra cómo obtener acceso a la <xref:System.Web.TraceContextRecord.Message%2A> propiedad de un <xref:System.Web.TraceContextRecord>e imprimir para la `Response` stream.  
  
 [!code-aspx-csharp[System.Web.Trace_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Trace_4/CS/form4cs.aspx#1)]
 [!code-aspx-vb[System.Web.Trace_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Trace_4/VB/form4vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>