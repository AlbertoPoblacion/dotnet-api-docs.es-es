<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HttpApplication.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5763b66da8b1dceadda77652804c5bae9caa303a5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">763b66da8b1dceadda77652804c5bae9caa303a5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Defines the methods, properties, and events that are common to all application objects in an ASP.NET application.</source>
          <target state="translated">Define los métodos, las propiedades y los eventos comunes a todos los objetos de aplicación existentes en una aplicación ASP.NET.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>This class is the base class for applications that are defined by the user in the Global.asax file.</source>
          <target state="translated">Esta clase es la clase base para las aplicaciones que están definidas por el usuario en el archivo Global.asax.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>Instances of the <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> class are created in the ASP.NET infrastructure, not by the user directly.</source>
          <target state="translated">Instancias de la <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> clase se crean en la infraestructura de ASP.NET, no por el usuario directamente.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>One instance of the <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> class is used to process many requests in its lifetime.</source>
          <target state="translated">Una instancia de la <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> clase se utiliza para procesar muchas solicitudes durante su duración.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>However, it can process only one request at a time.</source>
          <target state="translated">Sin embargo, puede procesar únicamente una solicitud a la vez.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>Thus, member variables can be used to store per-request data.</source>
          <target state="translated">Por lo tanto, las variables de miembro pueden utilizarse para almacenar los datos de cada solicitud.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>An application raises events that can be handled by custom modules that implement the <ph id="ph1">&lt;xref:System.Web.IHttpModule&gt;</ph> interface or by event handler code that is defined in the Global.asax file.</source>
          <target state="translated">Una aplicación provoca eventos que pueden ser controlados por módulos personalizados que implementan la <ph id="ph1">&lt;xref:System.Web.IHttpModule&gt;</ph> interfaz o archivo de código del controlador de eventos que se define en Global.asax.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>Custom modules that implement the <ph id="ph1">&lt;xref:System.Web.IHttpModule&gt;</ph> interface can be put in the App_Code folder or in a DLL in the Bin folder.</source>
          <target state="translated">Módulos personalizados que implementan la <ph id="ph1">&lt;xref:System.Web.IHttpModule&gt;</ph> interfaz puede colocarse en la carpeta App_Code o en un archivo DLL en la carpeta Bin.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> se introdujo en la versión 3.5 de .NET Framework.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">Para más información, vea <bpt id="p1">[</bpt>Versiones y dependencias<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>When running IIS 7.0 in Integrated mode, custom modules in the App_Code folder or Bin folder apply to all requests in the request pipeline.</source>
          <target state="translated">Cuando se ejecuta IIS 7.0 en modo integrado, los módulos personalizados en la carpeta App_Code o la carpeta Bin se aplican a todas las solicitudes de la canalización de solicitudes.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>Event handler code in the Global.asax file only applies to requests that are mapped to an ASP.NET handler.</source>
          <target state="translated">Código del controlador de eventos en el archivo Global.asax sólo se aplica a las solicitudes que se asignan a un controlador de ASP.NET.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The application events are raised in the following order:</source>
          <target state="translated">Los eventos de aplicación se generan en el orden siguiente:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>After the <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostResolveRequestCache&gt;</ph> event and before the <ph id="ph2">&lt;xref:System.Web.HttpApplication.PostMapRequestHandler&gt;</ph> event, an event handler (which is a page that corresponds to the request URL) is created.</source>
          <target state="translated">Después de la <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostResolveRequestCache&gt;</ph> eventos y antes de la <ph id="ph2">&lt;xref:System.Web.HttpApplication.PostMapRequestHandler&gt;</ph> evento, se crea un controlador de eventos (que es una página que corresponde a la dirección URL de solicitud).</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>When a server is running IIS 7.0 in Integrated mode and at least the .NET Framework version 3.0, the <ph id="ph1">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph> event is raised.</source>
          <target state="translated">Cuando un servidor ejecuta IIS 7.0 en modo integrado y al menos .NET Framework versión 3.0, el <ph id="ph1">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph> evento se desencadena.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>When a server is running IIS 7.0 in Classic mode or an earlier version of IIS, this event cannot be handled.</source>
          <target state="translated">Cuando un servidor ejecuta IIS 7.0 en modo clásico o una versión anterior de IIS, no se puede controlar este evento.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The event handler is executed.</source>
          <target state="translated">Se ejecuta el controlador de eventos.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>After the <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostReleaseRequestState&gt;</ph> event is raised, any existing response filters will filter the output.</source>
          <target state="translated">Después de la <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostReleaseRequestState&gt;</ph> evento se desencadena, los filtros de respuesta existentes filtrarán los resultados.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>This event is supported in IIS 7.0 Integrated mode and at least the .NET Framework 3.0</source>
          <target state="translated">Este evento se admite en el modo integrado de IIS 7.0 y al menos .NET Framework 3.0</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>This event is supported IIS 7.0 Integrated mode and at least the .NET Framework 3.0</source>
          <target state="translated">Este evento es compatible el modo integrado de IIS 7.0 y al menos .NET Framework 3.0</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The following two examples demonstrate how to use the <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> class and its events.</source>
          <target state="translated">Los dos ejemplos siguientes muestran cómo utilizar la <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> clase y sus eventos.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The first example demonstrates how to create a custom HTTP module and connect an event to it.</source>
          <target state="translated">El primer ejemplo muestra cómo crear un módulo HTTP personalizado y conectarse a un evento.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The second example demonstrates how to modify the Web.config file.</source>
          <target state="translated">El segundo ejemplo muestra cómo modificar el archivo Web.config.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The following example demonstrates how to create a custom HTTP module and connect the <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> event to the HTTP module.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo crear un módulo HTTP personalizado y conectar el <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> que el módulo HTTP del evento.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>HTTP modules intercept each request to Web application resources, thereby allowing you to filter client requests.</source>
          <target state="translated">Los módulos HTTP interceptan cada solicitud a los recursos de aplicación Web, lo que permite filtrar las solicitudes de cliente.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>Any HTTP module that subscribes to an <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> event must implement the <ph id="ph2">&lt;xref:System.Web.IHttpModule&gt;</ph> interface.</source>
          <target state="translated">Cualquier módulo HTTP que se suscribe a un <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> eventos deben implementar la <ph id="ph2">&lt;xref:System.Web.IHttpModule&gt;</ph> interfaz.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>Before an event in a custom HTTP module can occur, you must modify the configuration settings in the Web.config file to notify ASP.NET about the HTTP module.</source>
          <target state="translated">Antes de que puede producirse un evento en un módulo HTTP personalizado, debe modificar los valores de configuración en el archivo Web.config para notificar a ASP.NET acerca del módulo HTTP.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The following example shows the appropriate configuration setting in the <ph id="ph1">`httpModules`</ph> section of the Web.config file.</source>
          <target state="translated">En el ejemplo siguiente se muestra la configuración adecuada en la <ph id="ph1">`httpModules`</ph> sección del archivo Web.config.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The following setting applies to IIS 7.0 Classic mode and to earlier versions of IIS.</source>
          <target state="translated">La siguiente configuración se aplica al modo clásico de IIS 7.0 y versiones anteriores de IIS.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The following setting applies to IIS 7.0 Integrated mode.</source>
          <target state="translated">La siguiente configuración se aplica al modo integrado de IIS 7.0.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.HttpApplication" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Web.HttpApplication" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.AcquireRequestState">
          <source>Occurs when ASP.NET acquires the current state (for example, session state) that is associated with the current request.</source>
          <target state="translated">Se produce cuando ASP.NET adquiere el estado actual (por ejemplo, estado de sesión) asociado a la solicitud actual.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AcquireRequestState">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> event is raised after the event handler has been created.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> evento se desencadena una vez creado el controlador de eventos.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AcquireRequestState">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo controlar eventos, vea <bpt id="p1">[</bpt>NIB: consumir eventos<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AcquireRequestState">
          <source>For an example of handling the <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> event, see the <ph id="ph2">&lt;xref:System.Web.HttpApplication&gt;</ph> overview topic.</source>
          <target state="translated">Para obtener un ejemplo de control de la <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> eventos, vea el <ph id="ph2">&lt;xref:System.Web.HttpApplication&gt;</ph> tema de introducción.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</source>
          <target state="translated">Estado asociado que se va a agregar al evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> asincrónico.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</source>
          <target state="translated">Estado asociado que se va a agregar al evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> asincrónico.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</source>
          <target state="translated">Estado asociado que se va a agregar al evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> asincrónico.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</source>
          <target state="translated">Estado asociado que se va a agregar al evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> asincrónico.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</source>
          <target state="translated">Estado asociado que se va a agregar al evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> asincrónico.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A&gt;</ph> se introdujo en la versión 3.5 de .NET Framework.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">Para más información, vea <bpt id="p1">[</bpt>Versiones y dependencias<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A&gt;</ph> se introdujo en la versión 3.5 de .NET Framework.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">Para más información, vea <bpt id="p1">[</bpt>Versiones y dependencias<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</source>
          <target state="translated">Estado asociado que se va a agregar al evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> asincrónico.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A&gt;</ph> se introdujo en la versión 3.5 de .NET Framework.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">Para más información, vea <bpt id="p1">[</bpt>Versiones y dependencias<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A&gt;</ph> se introdujo en la versión 3.5 de .NET Framework.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">Para más información, vea <bpt id="p1">[</bpt>Versiones y dependencias<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</source>
          <target state="translated">Estado asociado que se va a agregar al evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> asincrónico.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</source>
          <target state="translated">Estado asociado que se va a agregar al evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> asincrónico.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="Overload:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="Overload:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated">Estado asociado que se va a agregar al evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> asincrónico.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated">Estado asociado que se va a agregar al evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> asincrónico.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A&gt;</ph> se introdujo en la versión 3.5 de .NET Framework.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">Para más información, vea <bpt id="p1">[</bpt>Versiones y dependencias<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A&gt;</ph> se introdujo en la versión 3.5 de .NET Framework.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">Para más información, vea <bpt id="p1">[</bpt>Versiones y dependencias<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</source>
          <target state="translated">Estado asociado que se va a agregar al evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> asincrónico.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> collection.</source>
          <target state="translated">Estado asociado que se va a agregar a la colección <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> asincrónica.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated">Estado asociado que se va a agregar al evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> asincrónico.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated">Estado asociado que se va a agregar al evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> asincrónico.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated">Estado asociado que se va a agregar al evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> asincrónico.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico del evento.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated">Estado asociado que se va a agregar al evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> asincrónico.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> collection.</source>
          <target state="translated">Estado asociado que se va a agregar a la colección <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> asincrónica.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated">Estado asociado que se va a agregar al evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> asincrónico.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> event handler to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el controlador de eventos <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> event handler to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el controlador de eventos <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated">Estado asociado que se va a agregar al evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> asincrónico.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> event handler to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el controlador de eventos <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> que inicia el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> que finaliza el procesamiento asincrónico de <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated">Estado asociado que se va a agregar al evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> asincrónico.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Agrega el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> especificado a la colección de controladores de eventos <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> asincrónicos de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Application">
          <source>Gets the current state of an application.</source>
          <target state="translated">Obtiene el estado actual de una aplicación.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Application">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> for the current request.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Application">
          <source>The current state of an application consists of a key/value dictionary of application-wide objects that you can use to store both .NET Framework objects and scalar values that are related to multiple Web requests from multiple clients.</source>
          <target state="translated">El estado actual de una aplicación está formada por un diccionario de clave/valor de objetos de toda la aplicación que puede usar para almacenar objetos de .NET Framework y valores escalares relacionados con varias solicitudes Web de varios clientes.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.AuthenticateRequest">
          <source>Occurs when a security module has established the identity of the user.</source>
          <target state="translated">Se produce cuando un módulo de seguridad ha establecido la identidad del usuario.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AuthenticateRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph> event signals that the configured authentication mechanism has authenticated the current request.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph> evento indica que el mecanismo de autenticación configurado ha autenticado la solicitud actual.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AuthenticateRequest">
          <source>Subscribing to the <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph> event ensures that the request will be authenticated before processing the attached module or event handler.</source>
          <target state="translated">Suscribirse a las <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph> eventos garantiza que la solicitud se autenticará antes de procesar el controlador de evento o módulo asociado.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AuthenticateRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo controlar eventos, vea <bpt id="p1">[</bpt>NIB: consumir eventos<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.AuthorizeRequest">
          <source>Occurs when a security module has verified user authorization.</source>
          <target state="translated">Se produce cuando un módulo de seguridad ha comprobado la autorización del usuario.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AuthorizeRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthorizeRequest&gt;</ph> event signals that ASP.NET has authorized the current request.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthorizeRequest&gt;</ph> evento indica que ASP.NET ha autorizado la solicitud actual.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AuthorizeRequest">
          <source>Subscribing to the <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthorizeRequest&gt;</ph> event ensures that the request will be authenticated and authorized before processing the attached module or event handler.</source>
          <target state="translated">Suscribirse a las <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthorizeRequest&gt;</ph> eventos garantiza que la solicitud se autenticarse y autorizarse antes de procesar el controlador de evento o módulo asociado.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AuthorizeRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo controlar eventos, vea <bpt id="p1">[</bpt>NIB: consumir eventos<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.BeginRequest">
          <source>Occurs as the first event in the HTTP pipeline chain of execution when ASP.NET responds to a request.</source>
          <target state="translated">Se produce como el primer evento de la cadena de ejecución de canalización HTTP cuando ASP.NET responde a una solicitud.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.BeginRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.BeginRequest&gt;</ph> event signals the creation of any given new request.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Web.HttpApplication.BeginRequest&gt;</ph> evento indica la creación de cualquier nueva solicitud determinada.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.BeginRequest">
          <source>This event is always raised and is always the first event to occur during the processing of a request.</source>
          <target state="translated">Este evento se genera siempre y siempre es el primer evento que se produzca durante el procesamiento de una solicitud.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.BeginRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo controlar eventos, vea <bpt id="p1">[</bpt>NIB: consumir eventos<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.CompleteRequest">
          <source>Causes ASP.NET to bypass all events and filtering in the HTTP pipeline chain of execution and directly execute the <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event.</source>
          <target state="translated">Permite que ASP.NET omita todos los eventos y el filtrado de la cadena de ejecución de canalización HTTP y ejecute directamente el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Context">
          <source>Gets HTTP-specific information about the current request.</source>
          <target state="translated">Obtiene información específica de HTTP acerca de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Context">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> for the current request.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.Dispose">
          <source>Disposes the <ph id="ph1">&lt;see cref="T:System.Web.HttpApplication" /&gt;</ph> instance.</source>
          <target state="translated">Se deshace de la instancia <ph id="ph1">&lt;see cref="T:System.Web.HttpApplication" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.Request%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.HttpApplication.Response%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.HttpApplication.Session%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Web.HttpApplication.Application%2A&gt;</ph> properties are not available for use when the <ph id="ph5">&lt;xref:System.Web.HttpApplication.Dispose%2A&gt;</ph> method executes.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Web.HttpApplication.Request%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.HttpApplication.Response%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.HttpApplication.Session%2A&gt;</ph>, y <ph id="ph4">&lt;xref:System.Web.HttpApplication.Application%2A&gt;</ph> propiedades no están disponibles para usar cuando el <ph id="ph5">&lt;xref:System.Web.HttpApplication.Dispose%2A&gt;</ph> el método se ejecuta.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.Dispose%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Web.IHttpModule.Dispose%2A&gt;</ph> method on each of the registered <ph id="ph3">&lt;xref:System.Web.Configuration.SystemWebSectionGroup.HttpModules%2A&gt;</ph> in the application instance and raises the <ph id="ph4">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> event.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Web.HttpApplication.Dispose%2A&gt;</ph> llamadas al método el <ph id="ph2">&lt;xref:System.Web.IHttpModule.Dispose%2A&gt;</ph> método en cada uno de los registrados <ph id="ph3">&lt;xref:System.Web.Configuration.SystemWebSectionGroup.HttpModules%2A&gt;</ph> en la instancia de la aplicación y genera el <ph id="ph4">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.Dispose">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Web.HttpApplication.Dispose" /&gt;</ph> in a derived class, make sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Web.HttpApplication.Dispose" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Al reemplazar <ph id="ph1">&lt;see cref="M:System.Web.HttpApplication.Dispose" /&gt;</ph> en una clase derivada, asegúrese de llamar a la clase base <ph id="ph2">&lt;see cref="M:System.Web.HttpApplication.Dispose" /&gt;</ph> método para que los delegados registrados reciban el evento.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.Disposed">
          <source>Occurs when the application is disposed.</source>
          <target state="translated">Se produce cuando se desecha la aplicación.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Disposed">
          <source>When you create a <ph id="ph1">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> delegate, you identify the method that handles the event.</source>
          <target state="translated">Cuando se crea un delegado de <ph id="ph1">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph>, se identifica el método que controla el evento.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Disposed">
          <source>To associate the event with your event handler, add an instance of the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> delegate to the event.</source>
          <target state="translated">Para asociar el evento al controlador de eventos, debe agregar una instancia de la <ph id="ph1">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> delegado al evento.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Disposed">
          <source>The event handler is called whenever the event occurs, unless you remove the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> delegate.</source>
          <target state="translated">Se llama al controlador de eventos cada vez que se produce el evento, a menos que quite el <ph id="ph1">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> delegar.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Disposed">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo controlar eventos, vea <bpt id="p1">[</bpt>NIB: consumir eventos<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.EndRequest">
          <source>Occurs as the last event in the HTTP pipeline chain of execution when ASP.NET responds to a request.</source>
          <target state="translated">Se produce como el último evento de la cadena de ejecución de canalización HTTP cuando ASP.NET responde a una solicitud.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.EndRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.EndRequest&gt;</ph> event is always raised when the <ph id="ph2">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph> method is called.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Web.HttpApplication.EndRequest&gt;</ph> siempre es el evento se genera cuando el <ph id="ph2">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph> se llama al método.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.EndRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo controlar eventos, vea <bpt id="p1">[</bpt>NIB: consumir eventos<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.Error">
          <source>Occurs when an unhandled exception is thrown.</source>
          <target state="translated">Se produce cuando se produce una excepción no controlada.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Error">
          <source>The exception that raises the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Error&gt;</ph> event can be accessed by a call to the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.GetLastError%2A&gt;</ph> method.</source>
          <target state="translated">La excepción que provoca la <ph id="ph1">&lt;xref:System.Web.HttpApplication.Error&gt;</ph> pueden tener acceso a los eventos mediante una llamada a la <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.GetLastError%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Error">
          <source>If your application generates custom error output, suppress the default error message that is generated by ASP.NET by a call to the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.ClearError%2A&gt;</ph> method.</source>
          <target state="translated">Si la aplicación genera resultados de errores personalizados, suprima el mensaje de error predeterminado que se genera por ASP.NET mediante una llamada a la <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.ClearError%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Error">
          <source>If your Web application contains XML Web services, you cannot use the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Error&gt;</ph> event for global exception handling of those services.</source>
          <target state="translated">Si la aplicación Web contiene servicios Web XML, no puede usar el <ph id="ph1">&lt;xref:System.Web.HttpApplication.Error&gt;</ph> eventos para el control de excepciones global de esos servicios.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Error">
          <source>The HTTP handler for XML Web services consumes any exception that occurs in an XML Web service and converts it to a SOAP fault before the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Error&gt;</ph> being called.</source>
          <target state="translated">El controlador HTTP para servicios Web XML consume cualquier excepción que se produce en un servicio Web XML y lo convierte en un error de SOAP antes de la <ph id="ph1">&lt;xref:System.Web.HttpApplication.Error&gt;</ph> que se va a llamar.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Error">
          <source>To handle XML Web service exceptions, build a SOAP extension to process Web service exceptions in a custom global exception handler.</source>
          <target state="translated">Para controlar las excepciones de servicio Web XML, generar una extensión SOAP para procesar excepciones de servicio Web en un controlador de excepciones global personalizado.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Error">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo controlar eventos, vea <bpt id="p1">[</bpt>NIB: consumir eventos<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Events">
          <source>Gets the list of event handler delegates that process all application events.</source>
          <target state="translated">Obtiene la lista de delegados de controladores de eventos que procesan todos los eventos de aplicación.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Events">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventHandlerList" /&gt;</ph> that contains the names of the event handler delegates.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventHandlerList" /&gt;</ph> que contiene los nombres de los delegados de controladores de eventos.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> that provides references to intrinsic server objects that are used to service HTTP requests.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> que proporciona referencias a objetos de servidor intrínsecos que se usan para atender las solicitudes HTTP.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>Gets the name of the default output-cache provider that is configured for a Web site.</source>
          <target state="translated">Obtiene el nombre del proveedor de caché de resultados predeterminado que se ha configurado para un sitio web.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>The name of the default provider.</source>
          <target state="translated">Nombre del proveedor predeterminado.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>You can override this method and use it to return the name of any output-cache provider that is configured for a Web site.</source>
          <target state="translated">Puede invalidar este método y utilizarlo para devolver el nombre de cualquier proveedor de caché de resultados que está configurado para un sitio Web.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>ASP.NET retrieves a reference to the named provider and uses it to store output-cache data for the currently executing request.</source>
          <target state="translated">ASP.NET recupera una referencia al proveedor con nombre y lo utiliza para almacenar los datos de la caché de resultados para la solicitud que se está ejecutando actualmente.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>By default, in ASP.NET, all HTTP responses, rendered pages, and controls use the in-memory output cache.</source>
          <target state="translated">De forma predeterminada, en ASP.NET, todas las respuestas HTTP, representadas páginas y controles utilizan la caché de resultados en memoria.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>You can change the default output-cache provider that is used for a Web application by specifying a different provider name for <ph id="ph1">`defaultProvider`</ph>.</source>
          <target state="translated">Puede cambiar el proveedor de caché de resultados predeterminado que se usa para una aplicación Web especificando un nombre de proveedor diferente para <ph id="ph1">`defaultProvider`</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>In addition, you can select different output-cache providers for individual control and for individual requests.</source>
          <target state="translated">Además, puede seleccionar los proveedores de caché de resultados diferentes para controles individuales y para las solicitudes individuales.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>The easiest way to choose a different output-cache provider for different Web user controls is to do so declaratively by using the new <ph id="ph1">`providerName`</ph> attribute in a page or control directive, as shown in the following example:</source>
          <target state="translated">La manera más fácil para elegir un proveedor de caché de resultados diferente para los distintos controles de usuario Web es hacerlo mediante declaración con el nuevo <ph id="ph1">`providerName`</ph> atributo en una directiva de página o un control, tal como se muestra en el ejemplo siguiente:</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>To specify a different output cache provider for an HTTP request, you override this method in the Global.asax file to programmatically specify which provider to use for a specific request.</source>
          <target state="translated">Para especificar un proveedor de caché de resultados diferentes para una solicitud HTTP, invalide este método en el archivo Global.asax para especificar mediante programación el proveedor que desea usar para una solicitud específica.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>For more information, see <bpt id="p1">[</bpt>ASP.NET Caching Overview<ept id="p1">](http://msdn.microsoft.com/library/5ec28012-4972-4dc3-b3e8-9d20401fe11d)</ept>.</source>
          <target state="translated">Para más información, vea <bpt id="p1">[</bpt>Información general sobre el almacenamiento en caché en ASP.NET<ept id="p1">](http://msdn.microsoft.com/library/5ec28012-4972-4dc3-b3e8-9d20401fe11d)</ept>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>The following example shows how to programmatically specify the cache provider named <ph id="ph1">`DiskCache`</ph> for any HTTP request that goes to the Advanced.aspx page.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo especificar mediante programación el proveedor de caché denominado <ph id="ph1">`DiskCache`</ph> para cualquier solicitud HTTP que se va a la página Advanced.aspx.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or is an empty string.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;paramref name="context" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph> o una cadena vacía.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> object that contains information about the current Web request.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> que contiene información sobre la solicitud web actual.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <source>The custom string that specifies which cached response is used to respond to the current request.</source>
          <target state="translated">Cadena personalizada que especifica qué respuesta almacenada en caché se va a utilizar para responder a la solicitud actual.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <source>Provides an application-wide implementation of the <ph id="ph1">&lt;see cref="P:System.Web.UI.PartialCachingAttribute.VaryByCustom" /&gt;</ph> property.</source>
          <target state="translated">Proporciona una implementación de la propiedad <ph id="ph1">&lt;see cref="P:System.Web.UI.PartialCachingAttribute.VaryByCustom" /&gt;</ph> para toda la aplicación.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <source>If the value of the <ph id="ph1">&lt;paramref name="custom" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="&amp;quot;browser&amp;quot;" /&gt;</ph>, the browser's <ph id="ph3">&lt;see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Type" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Si el valor del parámetro <ph id="ph1">&lt;paramref name="custom" /&gt;</ph> es <ph id="ph2">&lt;see langword="&amp;quot;browser&amp;quot;" /&gt;</ph>, es la propiedad <ph id="ph3">&lt;see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Type" /&gt;</ph> del explorador; en caso contrario, es <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <source>You can override <ph id="ph1">&lt;xref:System.Web.HttpApplication.GetVaryByCustomString%2A&gt;</ph> to add a new method for calculating custom vary-by values that are based on the current request.</source>
          <target state="translated">Puede invalidar <ph id="ph1">&lt;xref:System.Web.HttpApplication.GetVaryByCustomString%2A&gt;</ph> para agregar un nuevo método para calcular valores vary-by personalizados que se basan en la solicitud actual.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <source>The implementation has to call the base class for custom values that it does not recognize.</source>
          <target state="translated">La implementación tiene que llamar a la clase base para los valores personalizados que no reconoce.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Cache Versions of a Page Using Custom Strings<ept id="p1">](http://msdn.microsoft.com/library/b6c73735-a3cd-4d19-ba4d-0431881b0db0)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>Cómo: las versiones de caché de una página Using Custom Strings<ept id="p1">](http://msdn.microsoft.com/library/b6c73735-a3cd-4d19-ba4d-0431881b0db0)</ept>.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.Init">
          <source>Executes custom initialization code after all event handler modules have been added.</source>
          <target state="translated">Ejecuta el código de inicialización personalizado una vez agregados todos los módulos controladores de eventos.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.Init">
          <source>In a derived class, you can override the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Init%2A&gt;</ph> method to add custom one-time initialization code.</source>
          <target state="translated">En una clase derivada, se puede reemplazar el <ph id="ph1">&lt;xref:System.Web.HttpApplication.Init%2A&gt;</ph> método para agregar código de inicialización de un solo uso personalizado.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.LogRequest">
          <source>Occurs just before ASP.NET performs any logging for the current request.</source>
          <target state="translated">Se produce justo antes de que ASP.NET realice cualquier registro para la solicitud actual.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> event is raised even if an error occurs.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> evento se desencadena incluso si se produce un error.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source>You can provide an event handler for the <ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> event to provide custom logging for the request.</source>
          <target state="translated">Puede proporcionar un controlador de eventos para el <ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> eventos para proporcionar registro personalizado para la solicitud.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo controlar eventos, vea <bpt id="p1">[</bpt>NIB: consumir eventos<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> se introdujo en la versión 3.5 de .NET Framework.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">Para más información, vea <bpt id="p1">[</bpt>Versiones y dependencias<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source>The following example demonstrates how to provide an event handler for the <ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> event.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo proporcionar un controlador de eventos para el <ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source>The event handler also handles several other events.</source>
          <target state="translated">El controlador de eventos también controla otros eventos.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source>Therefore, the <ph id="ph1">&lt;xref:System.Web.HttpContext.CurrentNotification%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.HttpContext.IsPostNotification%2A&gt;</ph> properties are used to determine what code to run.</source>
          <target state="translated">Por lo tanto, la <ph id="ph1">&lt;xref:System.Web.HttpContext.CurrentNotification%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Web.HttpContext.IsPostNotification%2A&gt;</ph> propiedades se utilizan para determinar qué código debe ejecutarse.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.MapRequestHandler">
          <source>Occurs when the handler is selected to respond to the request.</source>
          <target state="translated">Se produce cuando se selecciona el controlador para responder a la solicitud.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.MapRequestHandler">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph> event is used by the ASP.NET infrastructure to determine the request handler for the current request.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph> evento es utilizado por la infraestructura de ASP.NET para determinar el controlador de solicitudes para la solicitud actual.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.MapRequestHandler">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Register HTTP Handlers<ept id="p1">](http://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>Cómo: registrar controladores HTTP<ept id="p1">](http://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60)</ept>.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.MapRequestHandler">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo controlar eventos, vea <bpt id="p1">[</bpt>NIB: consumir eventos<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.MapRequestHandler">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph> se introdujo en la versión 3.5 de .NET Framework.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.MapRequestHandler">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">Para más información, vea <bpt id="p1">[</bpt>Versiones y dependencias<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Modules">
          <source>Gets the collection of modules for the current application.</source>
          <target state="translated">Obtiene la colección de módulos de la aplicación actual.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Modules">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpModuleCollection" /&gt;</ph> that contains the names of the modules for the application.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.HttpModuleCollection" /&gt;</ph> que contiene los nombres de los módulos de la aplicación.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.OnExecuteRequestStep(System.Action{System.Web.HttpContextBase,System.Action})">
          <source>The callback method.</source>
          <target state="translated">Método de devolución de llamada.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.OnExecuteRequestStep(System.Action{System.Web.HttpContextBase,System.Action})">
          <source>Specifies a callback to invoke when a request execution step is executed.</source>
          <target state="translated">Especifica una devolución de llamada que se invocará cuando se complete un paso de ejecución de solicitud.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.OnExecuteRequestStep(System.Action{System.Web.HttpContextBase,System.Action})">
          <source>This method provides extensibility to the ASP.NET pipeline to make it easy for developers to implement features in ambient context scenarios and build libraries that care about ASP.NET execution flow (for example, tracing, profiling, diagnostics, and transactions).</source>
          <target state="translated">Este método proporciona extensibilidad para la canalización ASP.NET para facilitar a los desarrolladores implementar características en escenarios de contexto de ambiente y crear bibliotecas que interesan flujo de ejecución de ASP.NET (por ejemplo, el seguimiento, de generación de perfiles, diagnósticos y las transacciones).</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostAcquireRequestState">
          <source>Occurs when the request state (for example, session state) that is associated with the current request has been obtained.</source>
          <target state="translated">Se produce cuando se ha obtenido el estado de solicitud (por ejemplo, el estado de sesión) asociado con la solicitud actual.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAcquireRequestState">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAcquireRequestState&gt;</ph> event is raised after the <ph id="ph2">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> event has occurred.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAcquireRequestState&gt;</ph> evento se genera tras la <ph id="ph2">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> se ha producido el evento.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAcquireRequestState">
          <source>Functionality that subscribes to the <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> event can access any data that is processed by the <ph id="ph2">&lt;xref:System.Web.HttpApplication.PostAcquireRequestState&gt;</ph>.</source>
          <target state="translated">La funcionalidad que se suscribe a la <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> evento puede tener acceso a los datos que es procesados por el <ph id="ph2">&lt;xref:System.Web.HttpApplication.PostAcquireRequestState&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAcquireRequestState">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo controlar eventos, vea <bpt id="p1">[</bpt>NIB: consumir eventos<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostAuthenticateRequest">
          <source>Occurs when a security module has established the identity of the user.</source>
          <target state="translated">Se produce cuando un módulo de seguridad ha establecido la identidad del usuario.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAuthenticateRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph> event is raised after the <ph id="ph2">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph> event has occurred.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph> evento se genera tras la <ph id="ph2">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph> se ha producido el evento.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAuthenticateRequest">
          <source>Functionality that subscribes to the <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph> event can access any data that is processed by the <ph id="ph2">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph>.</source>
          <target state="translated">La funcionalidad que se suscribe a la <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph> evento puede tener acceso a los datos que es procesados por el <ph id="ph2">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAuthenticateRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo controlar eventos, vea <bpt id="p1">[</bpt>NIB: consumir eventos<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostAuthorizeRequest">
          <source>Occurs when the user for the current request has been authorized.</source>
          <target state="translated">Se produce cuando se ha autorizado al usuario de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAuthorizeRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthorizeRequest&gt;</ph> event signals that ASP.NET has authorized the current request.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthorizeRequest&gt;</ph> evento indica que ASP.NET ha autorizado la solicitud actual.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAuthorizeRequest">
          <source>Subscribing to the <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthorizeRequest&gt;</ph> event ensures authentication and authorization of the request before processing the attached module or event handler.</source>
          <target state="translated">Suscribirse a las <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthorizeRequest&gt;</ph> eventos garantizan la autenticación y autorización de la solicitud antes de procesar el controlador de evento o módulo asociado.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAuthorizeRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo controlar eventos, vea <bpt id="p1">[</bpt>NIB: consumir eventos<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostLogRequest">
          <source>Occurs when ASP.NET has completed processing all the event handlers for the <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> event.</source>
          <target state="translated">Se produce cuando ASP.NET ha completado el procesamiento de todos los controladores de eventos para el evento <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostLogRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo controlar eventos, vea <bpt id="p1">[</bpt>NIB: consumir eventos<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostLogRequest">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.PostLogRequest&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.PostLogRequest&gt;</ph> se introdujo en la versión 3.5 de .NET Framework.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostLogRequest">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">Para más información, vea <bpt id="p1">[</bpt>Versiones y dependencias<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostMapRequestHandler">
          <source>Occurs when ASP.NET has mapped the current request to the appropriate event handler.</source>
          <target state="translated">Se produce cuando ASP.NET ha asignado la solicitud actual al controlador de eventos adecuado.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostMapRequestHandler">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo controlar eventos, vea <bpt id="p1">[</bpt>NIB: consumir eventos<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostReleaseRequestState">
          <source>Occurs when ASP.NET has completed executing all request event handlers and the request state data has been stored.</source>
          <target state="translated">Se produce cuando ASP.NET ha finalizado de ejecutar todos los controladores de eventos de la solicitud y se han almacenado los datos de estado de la solicitud.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostReleaseRequestState">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo controlar eventos, vea <bpt id="p1">[</bpt>NIB: consumir eventos<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostRequestHandlerExecute">
          <source>Occurs when the ASP.NET event handler (for example, a page or an XML Web service) finishes execution.</source>
          <target state="translated">Se produce cuando el controlador de eventos ASP.NET (por ejemplo, una página o un servicio Web XML) finaliza su ejecución.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostRequestHandlerExecute">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo controlar eventos, vea <bpt id="p1">[</bpt>NIB: consumir eventos<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostResolveRequestCache">
          <source>Occurs when ASP.NET bypasses execution of the current event handler and allows a caching module to serve a request from the cache.</source>
          <target state="translated">Se produce cuando ASP.NET omite la ejecución del controlador de eventos actual y permite que un módulo de almacenamiento en caché atienda una solicitud desde la caché.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostResolveRequestCache">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo controlar eventos, vea <bpt id="p1">[</bpt>NIB: consumir eventos<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostUpdateRequestCache">
          <source>Occurs when ASP.NET finishes updating caching modules and storing responses that are used to serve subsequent requests from the cache.</source>
          <target state="translated">Se produce cuando ASP.NET completa la actualización de los módulos de almacenamiento en caché que almacenan las respuestas que se usan para atender las posteriores solicitudes de la caché.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostUpdateRequestCache">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostUpdateRequestCache&gt;</ph> event is raised after the <ph id="ph2">&lt;xref:System.Web.HttpApplication.UpdateRequestCache&gt;</ph> event has occurred.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostUpdateRequestCache&gt;</ph> evento se genera tras la <ph id="ph2">&lt;xref:System.Web.HttpApplication.UpdateRequestCache&gt;</ph> se ha producido el evento.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostUpdateRequestCache">
          <source>When the <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostUpdateRequestCache&gt;</ph> is raised, ASP.NET has completed processing code and the content of the cache is finalized.</source>
          <target state="translated">Cuando el <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostUpdateRequestCache&gt;</ph> es genera, ASP.NET ha completado el procesamiento de código y se finaliza el contenido de la memoria caché.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostUpdateRequestCache">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo controlar eventos, vea <bpt id="p1">[</bpt>NIB: consumir eventos<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PreRequestHandlerExecute">
          <source>Occurs just before ASP.NET starts executing an event handler (for example, a page or an XML Web service).</source>
          <target state="translated">Se produce justo antes de que ASP.NET comience a ejecutar un controlador de eventos (por ejemplo, una página o un servicio Web XML).</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreRequestHandlerExecute">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo controlar eventos, vea <bpt id="p1">[</bpt>NIB: consumir eventos<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PreSendRequestContent">
          <source>Occurs just before ASP.NET sends content to the client.</source>
          <target state="translated">Se produce inmediatamente antes de que ASP.NET envíe el contenido al cliente.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestContent">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.PreSendRequestContent&gt;</ph> event may occur multiple times.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Web.HttpApplication.PreSendRequestContent&gt;</ph> evento puede aparecer varias veces.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestContent">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo controlar eventos, vea <bpt id="p1">[</bpt>NIB: consumir eventos<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestContent">
          <source>Do not use <ph id="ph1">`PreSendRequestContent`</ph> with managed modules that implement <ph id="ph2">`IHttpModule`</ph>.</source>
          <target state="translated">No utilice <ph id="ph1">`PreSendRequestContent`</ph> con módulos administrados que implementan <ph id="ph2">`IHttpModule`</ph>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestContent">
          <source>Setting these properties can cause issues with asynchronous requests.</source>
          <target state="translated">Al establecer estas propiedades puede causar problemas con solicitudes asincrónicas.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestContent">
          <source>The combination of Application Requested Routing (ARR) and websockets might lead to access violation exceptions that can cause w3wp to crash.</source>
          <target state="translated">La combinación de enrutamiento solicitado aplicaciones (ARR) y websockets podría provocar excepciones de infracción de acceso que pueden causar w3wp se bloquee.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestContent">
          <source>For example, iiscore!W3_CONTEXT_BASE::GetIsLastNotification+68 in iiscore.dll has caused an access violation exception (0xC0000005).</source>
          <target state="translated">¡Por ejemplo, iiscore! W3_CONTEXT_BASE::GetIsLastNotification + 68 en iiscore.dll ha provocado una excepción de infracción de acceso (0xC0000005).</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PreSendRequestHeaders">
          <source>Occurs just before ASP.NET sends HTTP headers to the client.</source>
          <target state="translated">Se produce inmediatamente antes de que ASP.NET envíe los encabezados HTTP al cliente.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestHeaders">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo controlar eventos, vea <bpt id="p1">[</bpt>NIB: consumir eventos<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestHeaders">
          <source>Do not use <ph id="ph1">`PreSendRequestHeaders`</ph> with managed modules that implement <ph id="ph2">`IHttpModule`</ph>.</source>
          <target state="translated">No utilice <ph id="ph1">`PreSendRequestHeaders`</ph> con módulos administrados que implementan <ph id="ph2">`IHttpModule`</ph>.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestHeaders">
          <source>Setting these properties can cause issues with asynchronous requests.</source>
          <target state="translated">Al establecer estas propiedades puede causar problemas con solicitudes asincrónicas.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestHeaders">
          <source>The combination of Application Requested Routing (ARR) and websockets might lead to access violation exceptions that can cause w3wp to crash.</source>
          <target state="translated">La combinación de enrutamiento solicitado aplicaciones (ARR) y websockets podría provocar excepciones de infracción de acceso que pueden causar w3wp se bloquee.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestHeaders">
          <source>For example, iiscore!W3_CONTEXT_BASE::GetIsLastNotification+68 in iiscore.dll has caused an access violation exception (0xC0000005).</source>
          <target state="translated">¡Por ejemplo, iiscore! W3_CONTEXT_BASE::GetIsLastNotification + 68 en iiscore.dll ha provocado una excepción de infracción de acceso (0xC0000005).</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.RegisterModule(System.Type)">
          <source>The type of the module.</source>
          <target state="translated">Tipo del módulo.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.RegisterModule(System.Type)">
          <source>Registers an application module.</source>
          <target state="translated">Registra un módulo de aplicación.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.ReleaseRequestState">
          <source>Occurs after ASP.NET finishes executing all request event handlers.</source>
          <target state="translated">Se produce después de que ASP.NET termine de ejecutar todos los controladores de eventos de la solicitud.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.ReleaseRequestState">
          <source>This event causes state modules to save the current state data.</source>
          <target state="translated">Este evento permite que los módulos de estado guarden los datos de estado actuales.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.ReleaseRequestState">
          <source>When the <ph id="ph1">&lt;xref:System.Web.HttpApplication.ReleaseRequestState&gt;</ph> event is raised, the application is finished with the request and ASP.NET is signaled to store the request state.</source>
          <target state="translated">Cuando el <ph id="ph1">&lt;xref:System.Web.HttpApplication.ReleaseRequestState&gt;</ph> evento se desencadena, la aplicación finaliza con la solicitud y se señala a ASP.NET para almacenar el estado de la solicitud.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.ReleaseRequestState">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo controlar eventos, vea <bpt id="p1">[</bpt>NIB: consumir eventos<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Request">
          <source>Gets the intrinsic request object for the current request.</source>
          <target state="translated">Obtiene el objeto de solicitud intrínseco  de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Request">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> object that the application is processing.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> que procesa la aplicación.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Request">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> object is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.RequestCompleted">
          <source>Occurs when the managed objects that are associated with the request have been released.</source>
          <target state="translated">Se produce al liberarse los objetos administrados asociados a la solicitud.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.RequestCompleted">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.RequestCompleted&gt;</ph> event is called after all managed modules and handlers in the ASP.NET pipeline have been called.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Web.HttpApplication.RequestCompleted&gt;</ph> eventos se llama después de todos los módulos administrados y se ha llamado a controladores de la canalización ASP.NET.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.RequestCompleted">
          <source>It enables modules to clean up resources after all managed modules and handlers have executed.</source>
          <target state="translated">Permite a los módulos limpiar los recursos que administrados después de que todos los módulos y los controladores se han ejecutado.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.RequestCompleted">
          <source>Use this event if you require a specific time to explicitly dispose of managed resources that you created during a request.</source>
          <target state="translated">Utilice este evento si necesita una hora específica que desee eliminar explícitamente los recursos administrados que ha creado durante una solicitud.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.ResolveRequestCache">
          <source>Occurs when ASP.NET finishes an authorization event to let the caching modules serve requests from the cache, bypassing execution of the event handler (for example, a page or an XML Web service).</source>
          <target state="translated">Se produce cuando ASP.NET finaliza un evento de autorización para permitir que los módulos de almacenamiento en caché atiendan las solicitudes de la caché, evitando la ejecución del controlador de eventos (por ejemplo, una página o servicio Web XML).</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.ResolveRequestCache">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo controlar eventos, vea <bpt id="p1">[</bpt>NIB: consumir eventos<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Response">
          <source>Gets the intrinsic response object for the current request.</source>
          <target state="translated">Obtiene el objeto de respuesta intrínseco de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Response">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpResponse" /&gt;</ph> object that the application is processing.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Web.HttpResponse" /&gt;</ph> que procesa la aplicación.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Response">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpResponse" /&gt;</ph> object is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Web.HttpResponse" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Server">
          <source>Gets the intrinsic server object for the current request.</source>
          <target state="translated">Obtiene el objeto de servidor intrínseco de la solicitud actual.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Server">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpServerUtility" /&gt;</ph> object that the application is processing.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Web.HttpServerUtility" /&gt;</ph> que procesa la aplicación.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Session">
          <source>Gets the intrinsic session object that provides access to session data.</source>
          <target state="translated">Obtiene el objeto de sesión intrínseco que proporciona acceso a los datos de la sesión.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Session">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.SessionState.HttpSessionState" /&gt;</ph> object for the current session.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Web.SessionState.HttpSessionState" /&gt;</ph> para la sesión actual.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Session">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.SessionState.HttpSessionState" /&gt;</ph> object is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Web.SessionState.HttpSessionState" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Site">
          <source>Gets or sets a site interface for an <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> implementation.</source>
          <target state="translated">Obtiene o establece una interfaz de sitio para una implementación de <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Site">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> object that allows a container to manage and communicate with its child components.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> que permite que un contenedor administre sus componentes secundarios y se comunique con ellos.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> that provides references to intrinsic server objects that are used to service HTTP requests.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> que proporciona referencias a objetos de servidor intrínsecos que se usan para atender las solicitudes HTTP.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> to call when the asynchronous method call is complete.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> que se va a llamar cuando finalice la llamada de método asincrónico.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>cb<ept id="p1">&lt;/c&gt;</ept> parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the delegate is not called.</source>
          <target state="translated">Si el parámetro <bpt id="p1">&lt;c&gt;</bpt>cb<ept id="p1">&lt;/c&gt;</ept> es <ph id="ph1">&lt;see langword="null" /&gt;</ph>, no se llama al delegado.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
          <source>Any extra data that is required to process the request.</source>
          <target state="translated">Datos adicionales necesarios para procesar la solicitud.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
          <source>Initiates an asynchronous call to the HTTP event handler.</source>
          <target state="translated">Inicia una llamada asincrónica al controlador de eventos HTTP.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that contains information about the status of the process.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> que contiene información sobre el estado del proceso.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that contains information about the status of the process.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> que contiene información sobre el estado del proceso.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
          <source>Provides an asynchronous process <ph id="ph1">&lt;see langword="End" /&gt;</ph> method when the process finishes.</source>
          <target state="translated">Proporciona un método <ph id="ph1">&lt;see langword="End" /&gt;</ph> de proceso asincrónico cuando finaliza el proceso.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.HttpApplication.System%23Web%23IHttpAsyncHandler%23EndProcessRequest%2A&gt;</ph> method to raise any exceptions that are caught during the asynchronous process.</source>
          <target state="translated">Puede usar el <ph id="ph1">&lt;xref:System.Web.HttpApplication.System%23Web%23IHttpAsyncHandler%23EndProcessRequest%2A&gt;</ph> método para generar las excepciones que se detectan durante el proceso asincrónico.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable">
          <source>Gets a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether another request can use the <ph id="ph2">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> object.</source>
          <target state="translated">Obtiene un valor <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> que indica si otra solicitud puede utilizar el objeto <ph id="ph2">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> object is reusable; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si se puede reutilizar el objeto <ph id="ph2">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph>; en caso contrario, es  <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable">
          <source>To explicitly set the <ph id="ph1">`IsReusable`</ph> property to <ph id="ph2">`true`</ph> or <ph id="ph3">`false`</ph>, provide code that overrides the <ph id="ph4">`IsReusable`</ph> property accessor.</source>
          <target state="translated">Para establecer explícitamente la <ph id="ph1">`IsReusable`</ph> propiedad <ph id="ph2">`true`</ph> o <ph id="ph3">`false`</ph>, proporcionar código que invalida el <ph id="ph4">`IsReusable`</ph> descriptor de acceso de propiedad.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> that provides references to the intrinsic server objects that are used to service HTTP requests.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> que proporciona referencias a los objetos de servidor intrínsecos que se usan para atender las solicitudes HTTP.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
          <source>Enables processing of HTTP Web requests by a custom HTTP handler that implements the <ph id="ph1">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> interface.</source>
          <target state="translated">Permite el procesamiento de solicitudes Web HTTP mediante un controlador HTTP personalizado que implementa la interfaz <ph id="ph1">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
          <source>Classes that inherit the <ph id="ph1">&lt;xref:System.Web.IHttpModule&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.IHttpHandler&gt;</ph> interfaces are provided as a reference to an <ph id="ph3">&lt;xref:System.Web.HttpContext&gt;</ph> object for the current HTTP request.</source>
          <target state="translated">Las clases que heredan la <ph id="ph1">&lt;xref:System.Web.IHttpModule&gt;</ph> y <ph id="ph2">&lt;xref:System.Web.IHttpHandler&gt;</ph> interfaces se proporcionan como una referencia a un <ph id="ph3">&lt;xref:System.Web.HttpContext&gt;</ph> objeto de la solicitud HTTP actual.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
          <source>The object provides access to the intrinsic <ph id="ph1">`Request`</ph>, <ph id="ph2">`Response`</ph>, and <ph id="ph3">`Server`</ph> objects for the request.</source>
          <target state="translated">El objeto proporciona acceso a la función intrínseca <ph id="ph1">`Request`</ph>, <ph id="ph2">`Response`</ph>, y <ph id="ph3">`Server`</ph> objetos para la solicitud.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
          <source>In all cases.</source>
          <target state="translated">En todos los casos.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.UpdateRequestCache">
          <source>Occurs when ASP.NET finishes executing an event handler in order to let caching modules store responses that will be used to serve subsequent requests from the cache.</source>
          <target state="translated">Se produce cuando ASP.NET finaliza la ejecución de un controlador de eventos para permitir que los módulos de almacenamiento en caché almacenen las respuestas que se van a utilizar para atender las solicitudes siguientes de la caché.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.UpdateRequestCache">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo controlar eventos, vea <bpt id="p1">[</bpt>NIB: consumir eventos<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.User">
          <source>Gets the intrinsic user object for the current request.</source>
          <target state="translated">Obtiene el objeto de usuario intrínseco de la respuesta actual.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.User">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Principal.IPrincipal" /&gt;</ph> object that represents the current authenticated or anonymous user.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Security.Principal.IPrincipal" /&gt;</ph> que representa al usuario autenticado o anónimo actual.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.User">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Principal.IPrincipal" /&gt;</ph> object is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Security.Principal.IPrincipal" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>