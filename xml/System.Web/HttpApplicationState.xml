<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HttpApplicationState.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac516f2143bf2be7e6b84dc7a430caca84732d94bfd.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">16f2143bf2be7e6b84dc7a430caca84732d94bfd</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplicationState">
          <source>Enables sharing of global information across multiple sessions and requests within an ASP.NET application.</source>
          <target state="translated">Habilita el uso compartido de la información global entre varias sesiones y solicitudes dentro de una aplicación ASP.NET.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplicationState">
          <source>An ASP.NET application is the sum of all files, pages, handlers, modules, and code within the scope of a virtual directory and its subdirectories on a single Web server.</source>
          <target state="translated">Una aplicación ASP.NET es la suma de todos los archivos, páginas, controladores, módulos y el código dentro del ámbito de un directorio virtual y sus subdirectorios en un único servidor Web.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplicationState">
          <source>A single instance of an <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> class is created the first time a client requests any URL resource from within a particular ASP.NET application virtual directory.</source>
          <target state="translated">Una única instancia de un <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> clase se crea la primera vez que un cliente solicita un recurso de dirección URL desde dentro de un determinado directorio virtual de la aplicación de ASP.NET.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplicationState">
          <source>A separate single instance is created for each ASP.NET application on a Web server.</source>
          <target state="translated">Se crea una única instancia independiente para cada aplicación de ASP.NET en un servidor Web.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplicationState">
          <source>A reference to each instance is then exposed via the intrinsic <ph id="ph1">&lt;xref:System.Web.HttpContext.Application%2A&gt;</ph> object.</source>
          <target state="translated">Una referencia a cada instancia, a continuación, se expone a través de la función intrínseca <ph id="ph1">&lt;xref:System.Web.HttpContext.Application%2A&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplicationState">
          <source>Application state is not shared across either a Web farm (in which an application is hosted across multiple servers) or a Web garden (in which an application is hosted across multiple processes on the same computer).</source>
          <target state="translated">Estado de la aplicación no se comparte en una granja de servidores Web (en el que una aplicación se hospeda en varios servidores) o una matriz de procesos Web (en el que una aplicación se hospeda en varios procesos en el mismo equipo).</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplicationState">
          <source>This type is thread safe.</source>
          <target state="translated">Este tipo es seguro para la ejecución de subprocesos.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.Add(System.String,System.Object)">
          <source>The name of the object to be added to the collection.</source>
          <target state="translated">Nombre del objeto que se agrega a la colección.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.Add(System.String,System.Object)">
          <source>The value of the object.</source>
          <target state="translated">Valor del objeto.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.Add(System.String,System.Object)">
          <source>Adds a new object to the <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> collection.</source>
          <target state="translated">Agrega un nuevo objeto a la colección <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplicationState.Add(System.String,System.Object)">
          <source>The following example adds two application variables named MyAppVar1 and MyAppVar2 to the Application collection.</source>
          <target state="translated">El ejemplo siguiente agrega dos variables de aplicación denominadas MyAppVar1 y MyAppVar2 a la colección de aplicaciones.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplicationState.AllKeys">
          <source>Gets the access keys in the <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> collection.</source>
          <target state="translated">Obtiene las claves de acceso de la colección <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplicationState.AllKeys">
          <source>A string array of <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> object names.</source>
          <target state="translated">Matriz de cadenas de nombres de objeto <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplicationState.AllKeys">
          <source>The following example fills a string array with all the object names in the application state collection.</source>
          <target state="translated">En el ejemplo siguiente se rellena una matriz de cadenas con todos los nombres de objeto en la colección de Estados de aplicación.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.Clear">
          <source>Removes all objects from an <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> collection.</source>
          <target state="translated">Quita todos los objetos de una colección <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplicationState.Clear">
          <source>The following example removes all <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> variables from the collection.</source>
          <target state="translated">En el ejemplo siguiente quita todos los <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> variables de la colección.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplicationState.Contents">
          <source>Gets a reference to the <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> object.</source>
          <target state="translated">Obtiene una referencia al objeto <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplicationState.Contents">
          <source>A reference to the <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> object.</source>
          <target state="translated">Una referencia al objeto <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplicationState.Contents">
          <source>This property provides compatibility with earlier versions of ASP.</source>
          <target state="translated">Esta propiedad proporciona compatibilidad con versiones anteriores de ASP.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplicationState.Contents">
          <source>The following example creates a new <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> object that is used to access the object names in the application state collection.</source>
          <target state="translated">En el ejemplo siguiente se crea un nuevo <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> objeto que se usa para tener acceso a los nombres de objeto en la colección de Estados de aplicación.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplicationState.Count">
          <source>Gets the number of objects in the <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> collection.</source>
          <target state="translated">Obtiene el número de objetos de la colección <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplicationState.Count">
          <source>The number of item objects in the collection.</source>
          <target state="translated">Número de objetos elemento de la colección.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplicationState.Count">
          <source>The default is 0.</source>
          <target state="translated">El valor predeterminado es 0.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplicationState.Count">
          <source>The following example executes only if the number of objects in the collection exceeds five.</source>
          <target state="translated">En el ejemplo siguiente se ejecuta sólo si el número de objetos de la colección es superior a cinco.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplicationState">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> object by name or index.</source>
          <target state="translated">Obtiene un objeto <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> por nombre o índice.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.Get(System.Int32)">
          <source>The index of the application state object.</source>
          <target state="translated">Índice del objeto de estado de aplicación.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.Get(System.Int32)">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> object by numerical index.</source>
          <target state="translated">Obtiene un objeto <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> por índice numérico.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.Get(System.Int32)">
          <source>The object referenced by <ph id="ph1">&lt;paramref name="index" /&gt;</ph>.</source>
          <target state="translated">Objeto al que hace referencia <ph id="ph1">&lt;paramref name="index" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplicationState.Get(System.Int32)">
          <source>The following example returns the first object (index = 0) from the <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> collection of the intrinsic <ph id="ph2">&lt;xref:System.Web.HttpContext.Application%2A&gt;</ph> object and copies it to a new object variable.</source>
          <target state="translated">En el ejemplo siguiente se devuelve el primer objeto (índice = 0) desde la <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> colección de la función intrínseca <ph id="ph2">&lt;xref:System.Web.HttpContext.Application%2A&gt;</ph> objeto y lo copia en una nueva variable de objeto.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.Get(System.String)">
          <source>The name of the object.</source>
          <target state="translated">El nombre del objeto.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.Get(System.String)">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> object by name.</source>
          <target state="translated">Obtiene un objeto <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> por nombre.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.Get(System.String)">
          <source>The object referenced by <ph id="ph1">&lt;paramref name="name" /&gt;</ph>.</source>
          <target state="translated">Objeto al que hace referencia <ph id="ph1">&lt;paramref name="name" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplicationState.Get(System.String)">
          <source>The following example returns an object named MyAppVar1 from the <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> collection of the intrinsic <ph id="ph2">&lt;xref:System.Web.HttpContext.Application%2A&gt;</ph> object and copies it to a new object variable.</source>
          <target state="translated">En el ejemplo siguiente se devuelve un objeto denominado MyAppVar1 desde la <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> colección de la función intrínseca <ph id="ph2">&lt;xref:System.Web.HttpContext.Application%2A&gt;</ph> objeto y lo copia en una nueva variable de objeto.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.GetKey(System.Int32)">
          <source>The index of the application state object.</source>
          <target state="translated">Índice del objeto de estado de aplicación.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.GetKey(System.Int32)">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> object name by index.</source>
          <target state="translated">Obtiene un nombre de objeto <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> por índice.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.GetKey(System.Int32)">
          <source>The name under which the application state object was saved.</source>
          <target state="translated">Nombre con el que se guardó el objeto de estado de aplicación.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplicationState.GetKey(System.Int32)">
          <source>The following example returns the names of all the objects in the application state collection and stores the names in a string array.</source>
          <target state="translated">En el ejemplo siguiente devuelve los nombres de todos los objetos de la colección de Estados de aplicación y almacena los nombres en una matriz de cadenas.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplicationState">
          <source>Gets access to an object in an <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> collection.</source>
          <target state="translated">Obtiene acceso a un objeto de una colección <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplicationState">
          <source>This property is overloaded to allow access to an object by name or numerical index.</source>
          <target state="translated">Esta propiedad se sobrecarga para permitir el acceso a un objeto por nombre o por índice numérico.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplicationState.Item(System.Int32)">
          <source>The numerical index of the object in the collection.</source>
          <target state="translated">Índice numérico del objeto de la colección.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplicationState.Item(System.Int32)">
          <source>Gets a single <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> object by index.</source>
          <target state="translated">Obtiene un único objeto <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> por índice.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplicationState.Item(System.Int32)">
          <source>The object referenced by <ph id="ph1">&lt;paramref name="index" /&gt;</ph>.</source>
          <target state="translated">Objeto al que hace referencia <ph id="ph1">&lt;paramref name="index" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplicationState.Item(System.Int32)">
          <source>The following example returns the first object (index = 0) from the <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> collection of the intrinsic <ph id="ph2">&lt;xref:System.Web.HttpContext.Application%2A&gt;</ph> object and copies it to a new object variable.</source>
          <target state="translated">En el ejemplo siguiente se devuelve el primer objeto (índice = 0) desde la <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> colección de la función intrínseca <ph id="ph2">&lt;xref:System.Web.HttpContext.Application%2A&gt;</ph> objeto y lo copia en una nueva variable de objeto.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplicationState.Item(System.String)">
          <source>The name of the object in the collection.</source>
          <target state="translated">Nombre del objeto de la colección.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplicationState.Item(System.String)">
          <source>Gets the value of a single <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> object by name.</source>
          <target state="translated">Obtiene el valor de un solo objeto <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> por nombre.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplicationState.Item(System.String)">
          <source>The object referenced by <ph id="ph1">&lt;paramref name="name" /&gt;</ph>.</source>
          <target state="translated">Objeto al que hace referencia <ph id="ph1">&lt;paramref name="name" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplicationState.Item(System.String)">
          <source>The following example returns an object named <ph id="ph1">`MyAppVar1`</ph> from the <ph id="ph2">&lt;xref:System.Web.HttpApplicationState&gt;</ph> collection of the intrinsic <ph id="ph3">&lt;xref:System.Web.HttpContext.Application%2A&gt;</ph> object and copies it to a new object variable.</source>
          <target state="translated">En el ejemplo siguiente se devuelve un objeto denominado <ph id="ph1">`MyAppVar1`</ph> desde el <ph id="ph2">&lt;xref:System.Web.HttpApplicationState&gt;</ph> colección de la función intrínseca <ph id="ph3">&lt;xref:System.Web.HttpContext.Application%2A&gt;</ph> objeto y lo copia en una nueva variable de objeto.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.Lock">
          <source>Locks access to an <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> variable to facilitate access synchronization.</source>
          <target state="translated">Bloquea el acceso a una variable <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> para que la sincronización del acceso sea más sencilla.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplicationState.Lock">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> class performs automatic locking and unlocking with the <ph id="ph2">&lt;xref:System.Web.HttpApplicationState.AllKeys%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.HttpApplicationState.Count%2A&gt;</ph> properties and the <ph id="ph4">&lt;xref:System.Web.HttpApplicationState.Add%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.HttpApplicationState.Clear%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Web.HttpApplicationState.Get%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Web.HttpApplicationState.GetKey%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Web.HttpApplicationState.Remove%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Web.HttpApplicationState.RemoveAt%2A&gt;</ph> and <ph id="ph10">&lt;xref:System.Web.HttpApplicationState.Set%2A&gt;</ph> methods.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> clase realiza automática de bloqueo y desbloqueo con la <ph id="ph2">&lt;xref:System.Web.HttpApplicationState.AllKeys%2A&gt;</ph> y <ph id="ph3">&lt;xref:System.Web.HttpApplicationState.Count%2A&gt;</ph> propiedades y la <ph id="ph4">&lt;xref:System.Web.HttpApplicationState.Add%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.HttpApplicationState.Clear%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Web.HttpApplicationState.Get%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Web.HttpApplicationState.GetKey%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Web.HttpApplicationState.Remove%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Web.HttpApplicationState.RemoveAt%2A&gt;</ph> y <ph id="ph10">&lt;xref:System.Web.HttpApplicationState.Set%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplicationState.Lock">
          <source>However, explicitly using the <ph id="ph1">&lt;xref:System.Web.HttpApplicationState.Lock%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.HttpApplicationState.UnLock%2A&gt;</ph> methods when you have a series of operations may be more efficient.</source>
          <target state="translated">Sin embargo, explícitamente utilizando el <ph id="ph1">&lt;xref:System.Web.HttpApplicationState.Lock%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Web.HttpApplicationState.UnLock%2A&gt;</ph> métodos cuando se tiene una serie de operaciones pueden ser más eficaces.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplicationState.Lock">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Web.HttpApplicationState.Lock%2A&gt;</ph> method and <ph id="ph2">&lt;xref:System.Web.HttpApplicationState.UnLock%2A&gt;</ph> method to prevent other sessions from changing the value of two application variables until after the local session has changed them.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Web.HttpApplicationState.Lock%2A&gt;</ph> método y <ph id="ph2">&lt;xref:System.Web.HttpApplicationState.UnLock%2A&gt;</ph> método para impedir que otras sesiones cambiando el valor de dos variables de aplicación hasta que la sesión local las haya cambiado.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.Remove(System.String)">
          <source>The name of the object to be removed from the collection.</source>
          <target state="translated">Nombre del objeto que se quita de la colección.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.Remove(System.String)">
          <source>Removes the named object from an <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> collection.</source>
          <target state="translated">Quita el objeto con nombre de una colección <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplicationState.Remove(System.String)">
          <source>The following example removes one application state variable from the collection.</source>
          <target state="translated">En el ejemplo siguiente se quita una variable de estado de aplicación de la colección.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.RemoveAll">
          <source>Removes all objects from an <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> collection.</source>
          <target state="translated">Quita todos los objetos de una colección <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplicationState.RemoveAll">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplicationState.RemoveAll%2A&gt;</ph> is an internal call to <ph id="ph2">&lt;xref:System.Web.HttpApplicationState.Clear%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplicationState.RemoveAll%2A&gt;</ph> es una llamada interna a <ph id="ph2">&lt;xref:System.Web.HttpApplicationState.Clear%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplicationState.RemoveAll">
          <source>The following example removes all <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> variables from the collection.</source>
          <target state="translated">En el ejemplo siguiente quita todos los <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> variables de la colección.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.RemoveAt(System.Int32)">
          <source>The position in the collection of the item to remove.</source>
          <target state="translated">Posición en la colección del elemento que va a quitarse.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.RemoveAt(System.Int32)">
          <source>Removes an <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> object from a collection by index.</source>
          <target state="translated">Quita un objeto <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> de una colección atendiendo al índice.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplicationState.RemoveAt(System.Int32)">
          <source>The following code example demonstrates how to insert two application variables into the collection, and then use the <ph id="ph1">&lt;xref:System.Web.HttpApplicationState.RemoveAt%2A&gt;</ph> method to remove the first variable in a custom <ph id="ph2">&lt;xref:System.Web.HttpApplicationState&gt;</ph> object.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo insertar dos variables de aplicación en la colección y, a continuación, use la <ph id="ph1">&lt;xref:System.Web.HttpApplicationState.RemoveAt%2A&gt;</ph> método para quitar la primera variable en un personalizado <ph id="ph2">&lt;xref:System.Web.HttpApplicationState&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.Set(System.String,System.Object)">
          <source>The name of the object to be updated.</source>
          <target state="translated">Nombre del objeto que hay que actualizar.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.Set(System.String,System.Object)">
          <source>The updated value of the object.</source>
          <target state="translated">Valor actualizado del objeto.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.Set(System.String,System.Object)">
          <source>Updates the value of an object in an <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> collection.</source>
          <target state="translated">Actualiza el valor de un objeto en una colección <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplicationState.Set(System.String,System.Object)">
          <source>The following example updates the value of an existing application state variable.</source>
          <target state="translated">En el ejemplo siguiente se actualiza el valor de una variable de estado de aplicación existente.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplicationState.StaticObjects">
          <source>Gets all objects declared by an <ph id="ph1">&lt;see langword="&amp;lt;object&amp;gt;" /&gt;</ph> tag where the scope is set to "Application" within the ASP.NET application.</source>
          <target state="translated">Obtiene todos los objetos declarados por una etiqueta <ph id="ph1">&lt;see langword="&amp;lt;object&amp;gt;" /&gt;</ph> donde el ámbito se establece en "Application" en la aplicación ASP.NET.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplicationState.StaticObjects">
          <source>A collection of objects on the page.</source>
          <target state="translated">Colección de objetos de la página.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplicationState.StaticObjects">
          <source>Application objects are defined in the Global.asax file inside the <ph id="ph1">`&lt;object runat="server" scope="Application"&gt; &lt;/object&gt;`</ph> tags.</source>
          <target state="translated">Objetos de la aplicación se definen en el archivo Global.asax dentro de la <ph id="ph1">`&lt;object runat="server" scope="Application"&gt; &lt;/object&gt;`</ph> etiquetas.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplicationState.StaticObjects">
          <source>The following example gets all application objects into a <ph id="ph1">&lt;xref:System.Web.HttpStaticObjectsCollection&gt;</ph> variable and executes a routine only if the number of objects is greater than 0.</source>
          <target state="translated">El ejemplo siguiente obtiene todos los objetos de la aplicación en un <ph id="ph1">&lt;xref:System.Web.HttpStaticObjectsCollection&gt;</ph> variable y se ejecuta una rutina sólo si el número de objetos es mayor que 0.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplicationState.UnLock">
          <source>Unlocks access to an <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> variable to facilitate access synchronization.</source>
          <target state="translated">Desbloquea el acceso a una variable <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> para que la sincronización del acceso sea más sencilla.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplicationState.UnLock">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> class performs automatic locking and unlocking with the <ph id="ph2">&lt;xref:System.Web.HttpApplicationState.AllKeys%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.HttpApplicationState.Count%2A&gt;</ph> properties and the <ph id="ph4">&lt;xref:System.Web.HttpApplicationState.Add%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.HttpApplicationState.Clear%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Web.HttpApplicationState.Get%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Web.HttpApplicationState.GetKey%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Web.HttpApplicationState.Remove%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Web.HttpApplicationState.RemoveAt%2A&gt;</ph> and <ph id="ph10">&lt;xref:System.Web.HttpApplicationState.Set%2A&gt;</ph> methods.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Web.HttpApplicationState&gt;</ph> clase realiza automática de bloqueo y desbloqueo con la <ph id="ph2">&lt;xref:System.Web.HttpApplicationState.AllKeys%2A&gt;</ph> y <ph id="ph3">&lt;xref:System.Web.HttpApplicationState.Count%2A&gt;</ph> propiedades y la <ph id="ph4">&lt;xref:System.Web.HttpApplicationState.Add%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.HttpApplicationState.Clear%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Web.HttpApplicationState.Get%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Web.HttpApplicationState.GetKey%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Web.HttpApplicationState.Remove%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Web.HttpApplicationState.RemoveAt%2A&gt;</ph> y <ph id="ph10">&lt;xref:System.Web.HttpApplicationState.Set%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplicationState.UnLock">
          <source>However, explicitly using the <ph id="ph1">&lt;xref:System.Web.HttpApplicationState.Lock%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.HttpApplicationState.UnLock%2A&gt;</ph> methods when you have a series of operations may be more efficient.</source>
          <target state="translated">Sin embargo, explícitamente utilizando el <ph id="ph1">&lt;xref:System.Web.HttpApplicationState.Lock%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Web.HttpApplicationState.UnLock%2A&gt;</ph> métodos cuando se tiene una serie de operaciones pueden ser más eficaces.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplicationState.UnLock">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Web.HttpApplicationState.Lock%2A&gt;</ph> method and <ph id="ph2">&lt;xref:System.Web.HttpApplicationState.UnLock%2A&gt;</ph> method to prevent other sessions from changing the value of two application variables until after the local session has changed them.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Web.HttpApplicationState.Lock%2A&gt;</ph> método y <ph id="ph2">&lt;xref:System.Web.HttpApplicationState.UnLock%2A&gt;</ph> método para impedir que otras sesiones cambiando el valor de dos variables de aplicación hasta que la sesión local las haya cambiado.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>