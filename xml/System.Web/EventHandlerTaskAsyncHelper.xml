<Type Name="EventHandlerTaskAsyncHelper" FullName="System.Web.EventHandlerTaskAsyncHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7fa40733c1fa3304b9da0ada1a3d5e53298cfd7c" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64117723" /></Metadata><TypeSignature Language="C#" Value="public sealed class EventHandlerTaskAsyncHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventHandlerTaskAsyncHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.EventHandlerTaskAsyncHelper" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventHandlerTaskAsyncHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventHandlerTaskAsyncHelper sealed" />
  <TypeSignature Language="F#" Value="type EventHandlerTaskAsyncHelper = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Convierte los métodos asincrónicos de volver de tarea en métodos que utilizan el modelo de programación asincrónica que se utilizaba en versiones anteriores de ASP.NET y se basa en los eventos de inicio y de finalización.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para controlar las tareas asincrónicas en ASP.NET 4.5, implementa la lógica para devolver una tarea como un <xref:System.Web.TaskEventHandler> delegar. Este modelo de programación asincrónica basada en tareas reemplaza el modelo utilizado en versiones anteriores de ASP.NET, qué bases de datos de todos los eventos de control en begin y end eventos. Después de implementar un <xref:System.Web.TaskEventHandler> delegado, puede pasar a la <xref:System.Web.EventHandlerTaskAsyncHelper.%23ctor%2A> constructor, que encapsula la lógica de devolución de tarea y el controlador se convierte en el modelo que usa begin y end eventos. El <xref:System.Web.EventHandlerTaskAsyncHelper> clase habilita la <xref:System.Web.TaskEventHandler> objeto sea compatible con el marco de páginas ASP.NET. Cuando se llama a la <xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync%2A> método a la tarea de proceso para una página asincrónica, puede usar el <xref:System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler%2A> y <xref:System.Web.EventHandlerTaskAsyncHelper.EndEventHandler%2A> propiedades para pasar el convertido begin y controladores de eventos para el método.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventHandlerTaskAsyncHelper (System.Web.TaskEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.TaskEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.EventHandlerTaskAsyncHelper.#ctor(System.Web.TaskEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As TaskEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventHandlerTaskAsyncHelper(System::Web::TaskEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="new System.Web.EventHandlerTaskAsyncHelper : System.Web.TaskEventHandler -&gt; System.Web.EventHandlerTaskAsyncHelper" Usage="new System.Web.EventHandlerTaskAsyncHelper handler" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.TaskEventHandler" />
      </Parameters>
      <Docs>
        <param name="handler">Tarea asincrónica.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.EventHandlerTaskAsyncHelper" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEventHandler">
      <MemberSignature Language="C#" Value="public System.Web.BeginEventHandler BeginEventHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.BeginEventHandler BeginEventHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BeginEventHandler As BeginEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::BeginEventHandler ^ BeginEventHandler { System::Web::BeginEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BeginEventHandler : System.Web.BeginEventHandler" Usage="System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.BeginEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el método <see cref="T:System.Web.BeginEventHandler" /> para una tarea asincrónica.</summary>
        <value>Método que controla el evento de inicio para la tarea asincrónica.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndEventHandler">
      <MemberSignature Language="C#" Value="public System.Web.EndEventHandler EndEventHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.EndEventHandler EndEventHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.EventHandlerTaskAsyncHelper.EndEventHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndEventHandler As EndEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::EndEventHandler ^ EndEventHandler { System::Web::EndEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndEventHandler : System.Web.EndEventHandler" Usage="System.Web.EventHandlerTaskAsyncHelper.EndEventHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.EndEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el método <see cref="T:System.Web.EndEventHandler" /> para una tarea asincrónica.</summary>
        <value>Método que controla el evento final para la tarea asincrónica.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>