<Type Name="DefaultHttpHandler" FullName="System.Web.DefaultHttpHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b7092d6763234ab7b224c85923020aef6fec5259" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36574720" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DefaultHttpHandler : System.Web.IHttpAsyncHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultHttpHandler extends System.Object implements class System.Web.IHttpAsyncHandler, class System.Web.IHttpHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.DefaultHttpHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultHttpHandler&#xA;Implements IHttpAsyncHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultHttpHandler : System::Web::IHttpAsyncHandler" />
  <TypeSignature Language="F#" Value="type DefaultHttpHandler = class&#xA;    interface IHttpAsyncHandler&#xA;    interface IHttpHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpAsyncHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="3bb45-101">Representa las propiedades y los métodos de un controlador HTTP predeterminado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3bb45-101">Represents the properties and methods of a default HTTP handler.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb45-102">Un <xref:System.Web.DefaultHttpHandler> objeto intercepta las solicitudes entrantes en la canalización HTTP cuando la interceptación de la solicitud se ha configurado a través de Internet Information Services (IIS) 6.0 y no hay ningún enlace explícita se aplica a la extensión solicitada.</span><span class="sxs-lookup"><span data-stu-id="3bb45-102">A <xref:System.Web.DefaultHttpHandler> object intercepts incoming requests in the HTTP pipeline when both request interception has been configured through Internet Information Services (IIS) 6.0 and no explicit  bindings apply to the requested extension.</span></span>  
  
 <span data-ttu-id="3bb45-103">Interceptación de la solicitud se puede configurar mediante la característica de asignación de aplicación de comodines introducida en IIS 6.0.</span><span class="sxs-lookup"><span data-stu-id="3bb45-103">Request interception can be set up through the wildcard application mapping feature introduced in IIS 6.0.</span></span> <span data-ttu-id="3bb45-104">Para obtener más información, busque el [MSDN Library](http://go.microsoft.com/fwlink/?linkid=37118) para obtener información sobre el uso de mapas de aplicación de comodines para reasignar una dirección URL.</span><span class="sxs-lookup"><span data-stu-id="3bb45-104">For more information, search the [MSDN Library](http://go.microsoft.com/fwlink/?linkid=37118) for information about using wildcard application maps to remap a URL.</span></span>  
  
 <span data-ttu-id="3bb45-105">El <xref:System.Web.DefaultHttpHandler> la clase implementa la <xref:System.Web.IHttpAsyncHandler> interfaz para proporcionar procesamiento de solicitudes asincrónicas.</span><span class="sxs-lookup"><span data-stu-id="3bb45-105">The <xref:System.Web.DefaultHttpHandler> class implements the <xref:System.Web.IHttpAsyncHandler> interface to provide asynchronous request processing.</span></span> <span data-ttu-id="3bb45-106">Para obtener información general sobre los controladores HTTP, vea [controladores HTTP y HTTP Modules Overview](http://msdn.microsoft.com/library/f540bdeb-d22e-4e1d-ba8a-fe6c9926283b).</span><span class="sxs-lookup"><span data-stu-id="3bb45-106">For general information about HTTP handlers, see [HTTP Handlers and HTTP Modules Overview](http://msdn.microsoft.com/library/f540bdeb-d22e-4e1d-ba8a-fe6c9926283b).</span></span> <span data-ttu-id="3bb45-107">Además, para más información, vea lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="3bb45-107">Additionally, for more information see the following:</span></span>  
  
-   <span data-ttu-id="3bb45-108">Acerca de cómo crear controladores HTTP asincrónicos, vea [Tutorial: crear un controlador HTTP asincrónico](http://msdn.microsoft.com/library/1b5c4a27-599b-44d0-8a06-72edc6765aa9).</span><span class="sxs-lookup"><span data-stu-id="3bb45-108">About creating asynchronous HTTP handlers, see [Walkthrough: Creating an Asynchronous HTTP Handler](http://msdn.microsoft.com/library/1b5c4a27-599b-44d0-8a06-72edc6765aa9).</span></span>  
  
-   <span data-ttu-id="3bb45-109">Información sobre cómo registrar controladores HTTP, consulte [Cómo: registrar controladores HTTP](http://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60).</span><span class="sxs-lookup"><span data-stu-id="3bb45-109">About registering HTTP handlers, see [How to: Register HTTP Handlers](http://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60).</span></span>  
  
 <span data-ttu-id="3bb45-110">Pueden derivar clases de la <xref:System.Web.DefaultHttpHandler> clase para proporcionar control personalizado de solicitudes.</span><span class="sxs-lookup"><span data-stu-id="3bb45-110">Classes can derive from the <xref:System.Web.DefaultHttpHandler> class to provide customized handling of requests.</span></span> <span data-ttu-id="3bb45-111">Un controlador HTTP asincrónico que se deriva de la <xref:System.Web.DefaultHttpHandler> podría invalidar la <xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A> método para cambiar cómo se procesan las solicitudes.</span><span class="sxs-lookup"><span data-stu-id="3bb45-111">An asynchronous HTTP handler that is derived from the <xref:System.Web.DefaultHttpHandler> could override the <xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A> method to change how requests are processed.</span></span>  
  
 <span data-ttu-id="3bb45-112">Un <xref:System.Web.DefaultHttpHandler> no usa los errores de ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="3bb45-112">A <xref:System.Web.DefaultHttpHandler> does not use ASP.NET errors.</span></span> <span data-ttu-id="3bb45-113">El contenido existente utiliza errores de IIS o un mecanismo de error personalizado de ISAPI de decoro funcionaría sin cambios.</span><span class="sxs-lookup"><span data-stu-id="3bb45-113">Existing content that uses IIS errors or a propriety ISAPI custom error mechanism would work unchanged.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bb45-114">En el ejemplo de código siguiente se muestra cómo implementar un controlador HTTP personalizado derivando de la <xref:System.Web.DefaultHttpHandler> clase.</span><span class="sxs-lookup"><span data-stu-id="3bb45-114">The following code example demonstrates how to implement a customized HTTP handler by deriving from the <xref:System.Web.DefaultHttpHandler> class.</span></span>  
  
 [!code-csharp[System.Web.DefaultHttpHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DefaultHttpHandler/CS/source.cs#1)]
 [!code-vb[System.Web.DefaultHttpHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DefaultHttpHandler/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultHttpHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultHttpHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3bb45-115">Inicializa una nueva instancia de la clase <see cref="T:System.Web.DefaultHttpHandler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bb45-115">Initializes a new instance of the <see cref="T:System.Web.DefaultHttpHandler" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginProcessRequest">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginProcessRequest (System.Web.HttpContext context, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginProcessRequest(class System.Web.HttpContext context, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginProcessRequest (context As HttpContext, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginProcessRequest(System::Web::HttpContext ^ context, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginProcessRequest : System.Web.HttpContext * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginProcessRequest : System.Web.HttpContext * AsyncCallback * obj -&gt; IAsyncResult" Usage="defaultHttpHandler.BeginProcessRequest (context, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpAsyncHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="3bb45-116">Objeto que proporciona referencias a los objetos de servidor intrínsecos que se usan para atender las solicitudes HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bb45-116">An object that provides references to intrinsic server objects that are used to service HTTP requests.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="3bb45-117">Método al que se va a llamar cuando la llamada de método asincrónico se haya completado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bb45-117">The method to call when the asynchronous method call is complete.</span>
          </span>
          <span data-ttu-id="3bb45-118">Si <c>callback</c> es <see langword="null" />, no se llama al delegado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bb45-118">If <c>callback</c> is <see langword="null" />, the delegate is not called.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3bb45-119">Cualquier dato de estado necesario para procesar la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bb45-119">Any state data that is needed to process the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3bb45-120">Inicia una llamada asincrónica para el controlador HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bb45-120">Initiates an asynchronous call to the HTTP handler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3bb45-121">
            <see cref="T:System.IAsyncResult" /> que contiene información sobre el estado del proceso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bb45-121">An <see cref="T:System.IAsyncResult" /> that contains information about the status of the process.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb45-122">Al crear un controlador HTTP para uso asincrónico, el controlador debe implementar la asincrónica <xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A> y <xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A> métodos que se llaman de forma asincrónica por ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="3bb45-122">When creating an HTTP handler for asynchronous use, your handler must implement the asynchronous <xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A> and <xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A> methods that are called asynchronously by ASP.NET.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="3bb45-123">No se han cumplido las condiciones previas para procesar una solicitud y, o bien el archivo solicitado tiene el sufijo .asp, o bien la solicitud se ha enviado mediante POST.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bb45-123">The preconditions for processing a request fail and either the requested file has the suffix .asp or the request was sent through POST.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="protected System.Web.HttpContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Web.DefaultHttpHandler.Context" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Context As HttpContext" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::HttpContext ^ Context { System::Web::HttpContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Web.HttpContext" Usage="System.Web.DefaultHttpHandler.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3bb45-124">Obtiene el contexto asociado con el objeto <see cref="T:System.Web.DefaultHttpHandler" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bb45-124">Gets the context that is associated with the current <see cref="T:System.Web.DefaultHttpHandler" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3bb45-125">Un objeto <see cref="T:System.Web.HttpContext" /> que contiene el contexto actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bb45-125">An <see cref="T:System.Web.HttpContext" /> object that contains the current context.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb45-126">El <xref:System.Web.DefaultHttpHandler.Context%2A> propiedad proporciona acceso a la actual <xref:System.Web.HttpContext> objeto para las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="3bb45-126">The <xref:System.Web.DefaultHttpHandler.Context%2A> property provides access to the current <xref:System.Web.HttpContext> object for derived classes.</span></span> <span data-ttu-id="3bb45-127">Un <xref:System.Web.HttpContext> objeto proporciona acceso a la función intrínseca <xref:System.Web.HttpApplication.Request%2A>, <xref:System.Web.HttpApplication.Response%2A>, y <xref:System.Web.HttpApplication.Server%2A> propiedades de la solicitud.</span><span class="sxs-lookup"><span data-stu-id="3bb45-127">An <xref:System.Web.HttpContext> object provides access to the intrinsic <xref:System.Web.HttpApplication.Request%2A>, <xref:System.Web.HttpApplication.Response%2A>, and <xref:System.Web.HttpApplication.Server%2A> properties for the request.</span></span> <span data-ttu-id="3bb45-128">Para obtener más información acerca del acceso a información contextual, vea <xref:System.Web.HttpContext>.</span><span class="sxs-lookup"><span data-stu-id="3bb45-128">For more information about accessing contextual information, see <xref:System.Web.HttpContext>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpContext" />
      </Docs>
    </Member>
    <Member MemberName="EndProcessRequest">
      <MemberSignature Language="C#" Value="public virtual void EndProcessRequest (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndProcessRequest(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.EndProcessRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndProcessRequest (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndProcessRequest(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndProcessRequest : IAsyncResult -&gt; unit&#xA;override this.EndProcessRequest : IAsyncResult -&gt; unit" Usage="defaultHttpHandler.EndProcessRequest result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpAsyncHandler.EndProcessRequest(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="3bb45-129">Objeto que contiene información sobre el estado del proceso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bb45-129">An object that contains information about the status of the process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3bb45-130">Proporciona un método de fin para un proceso asincrónico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bb45-130">Provides an end method for an asynchronous process.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb45-131">Puede usar el <xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A> método para producir cualquier excepción que se detecta durante el proceso asincrónico.</span><span class="sxs-lookup"><span data-stu-id="3bb45-131">You can use the <xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A> method to throw any exceptions that are caught during the asynchronous process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteUrlHeaders">
      <MemberSignature Language="C#" Value="protected System.Collections.Specialized.NameValueCollection ExecuteUrlHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection ExecuteUrlHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Web.DefaultHttpHandler.ExecuteUrlHeaders" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ExecuteUrlHeaders As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Specialized::NameValueCollection ^ ExecuteUrlHeaders { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExecuteUrlHeaders : System.Collections.Specialized.NameValueCollection" Usage="System.Web.DefaultHttpHandler.ExecuteUrlHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3bb45-132">Obtiene una colección de encabezados y valores de solicitud para transferirlos junto con la solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bb45-132">Gets a collection of request headers and request values to transfer along with the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3bb45-133">
            <see cref="T:System.Collections.Specialized.NameValueCollection" /> que contiene encabezados y valores de solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bb45-133">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> containing request headers and values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb45-134">El <xref:System.Web.DefaultHttpHandler.ExecuteUrlHeaders%2A> propiedad devuelve una colección vacía a menos que se rellena en una clase que se deriva de la <xref:System.Web.DefaultHttpHandler> clase.</span><span class="sxs-lookup"><span data-stu-id="3bb45-134">The <xref:System.Web.DefaultHttpHandler.ExecuteUrlHeaders%2A> property returns an empty collection unless it is populated in a class that is derived from the <xref:System.Web.DefaultHttpHandler> class.</span></span> <span data-ttu-id="3bb45-135">Los encabezados que se agregan se anexan a la colección de encabezados de la solicitud antes de pasar la solicitud de nuevo a Internet Information Services (IIS).</span><span class="sxs-lookup"><span data-stu-id="3bb45-135">The headers that are added are appended to the collection of headers in the request before passing the request back to Internet Information Services (IIS).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReusable">
      <MemberSignature Language="C#" Value="public virtual bool IsReusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReusable" />
      <MemberSignature Language="DocId" Value="P:System.Web.DefaultHttpHandler.IsReusable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReusable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReusable : bool" Usage="System.Web.DefaultHttpHandler.IsReusable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.IHttpHandler.IsReusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3bb45-136">Obtiene un valor booleano que indica que otra solicitud puede utilizar la instancia actual de la clase <see cref="T:System.Web.DefaultHttpHandler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bb45-136">Gets a Boolean value indicating that another request can use the current instance of the <see cref="T:System.Web.DefaultHttpHandler" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3bb45-137">Es <see langword="true" /> si <see cref="T:System.Web.DefaultHttpHandler" /> se puede reutilizar; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bb45-137">
              <see langword="true" /> if the <see cref="T:System.Web.DefaultHttpHandler" /> is reusable; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb45-138">Para establecer explícitamente la <xref:System.Web.DefaultHttpHandler.IsReusable%2A> propiedad `true` o `false`, invalide el <xref:System.Web.DefaultHttpHandler.IsReusable%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="3bb45-138">To explicitly set the <xref:System.Web.DefaultHttpHandler.IsReusable%2A> property to `true` or `false`, override the <xref:System.Web.DefaultHttpHandler.IsReusable%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)" />
      </Docs>
    </Member>
    <Member MemberName="OnExecuteUrlPreconditionFailure">
      <MemberSignature Language="C#" Value="public virtual void OnExecuteUrlPreconditionFailure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnExecuteUrlPreconditionFailure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnExecuteUrlPreconditionFailure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnExecuteUrlPreconditionFailure();" />
      <MemberSignature Language="F#" Value="abstract member OnExecuteUrlPreconditionFailure : unit -&gt; unit&#xA;override this.OnExecuteUrlPreconditionFailure : unit -&gt; unit" Usage="defaultHttpHandler.OnExecuteUrlPreconditionFailure " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3bb45-139">Se llama cuando las condiciones previas evitan que el objeto <see cref="T:System.Web.DefaultHttpHandler" /> procese una solicitud.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bb45-139">Called when preconditions prevent the <see cref="T:System.Web.DefaultHttpHandler" /> object from processing a request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb45-140">Las condiciones previas son especificadas por el cliente en los campos de encabezado de solicitud y se evalúan en el servidor Web.</span><span class="sxs-lookup"><span data-stu-id="3bb45-140">Preconditions are specified by the client in the request-header fields and are evaluated on the Web server.</span></span> <span data-ttu-id="3bb45-141">Por ejemplo, mediante el uso de las condiciones previas, los clientes pueden impedir que un método solicitado (por ejemplo, GET) que se aplica a un recurso distinto del que se pretende.</span><span class="sxs-lookup"><span data-stu-id="3bb45-141">For example, by using preconditions, clients can prevent a requested method (for example, GET) from being applied to a resource other than the one intended.</span></span> <span data-ttu-id="3bb45-142">Para obtener más información, consulte la sección 14, "Definiciones de campo de encabezado", en la [protocolo de transferencia de hipertexto--HTTP/1.1](http://go.microsoft.com/fwlink/?LinkID=73147) especificación en el sitio Web de World Wide Web Consortium (W3C).</span><span class="sxs-lookup"><span data-stu-id="3bb45-142">For more information, see section 14, "Header Field Definitions," in the [Hypertext Transfer Protocol -- HTTP/1.1](http://go.microsoft.com/fwlink/?LinkID=73147) specification on the World Wide Web Consortium (W3C) Web site.</span></span>  
  
 <span data-ttu-id="3bb45-143">El <xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A> método se llama cuando las condiciones previas evitar el <xref:System.Web.DefaultHttpHandler> objeto procese una solicitud.</span><span class="sxs-lookup"><span data-stu-id="3bb45-143">The <xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A> method is called when preconditions prevent the <xref:System.Web.DefaultHttpHandler> object from processing a request.</span></span> <span data-ttu-id="3bb45-144">Una clase derivada puede invalidar la <xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A> método se producirá una excepción cuando se producirá un error en las condiciones previas.</span><span class="sxs-lookup"><span data-stu-id="3bb45-144">A deriving class might override the <xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A> method to throw an exception when the preconditions fail.</span></span> <span data-ttu-id="3bb45-145">El <xref:System.Web.DefaultHttpHandler> no produce una excepción el <xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A> método.</span><span class="sxs-lookup"><span data-stu-id="3bb45-145">The <xref:System.Web.DefaultHttpHandler> does not throw an exception in the <xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A> method.</span></span>  
  
 <span data-ttu-id="3bb45-146">Cualquiera de las siguientes acciones hará que las condiciones previas un error:</span><span class="sxs-lookup"><span data-stu-id="3bb45-146">Any of the following will cause the preconditions to fail:</span></span>  
  
-   <span data-ttu-id="3bb45-147">Llamada a <xref:System.Web.HttpResponse.Write%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3bb45-147">Calling <xref:System.Web.HttpResponse.Write%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="3bb45-148">Llamada a <xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3bb45-148">Calling <xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="3bb45-149">Llamada a <xref:System.Web.HttpResponse.Flush%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3bb45-149">Calling <xref:System.Web.HttpResponse.Flush%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="3bb45-150">Cambiar la directiva de caché para la respuesta.</span><span class="sxs-lookup"><span data-stu-id="3bb45-150">Changing the cache policy for the response.</span></span>  
  
-   <span data-ttu-id="3bb45-151">Agregar un <xref:System.IO.Stream> objeto como un filtro para el <xref:System.Web.HttpResponse.Filter%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="3bb45-151">Adding a <xref:System.IO.Stream> object as a filter to the <xref:System.Web.HttpResponse.Filter%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverrideExecuteUrlPath">
      <MemberSignature Language="C#" Value="public virtual string OverrideExecuteUrlPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string OverrideExecuteUrlPath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.OverrideExecuteUrlPath" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OverrideExecuteUrlPath () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ OverrideExecuteUrlPath();" />
      <MemberSignature Language="F#" Value="abstract member OverrideExecuteUrlPath : unit -&gt; string&#xA;override this.OverrideExecuteUrlPath : unit -&gt; string" Usage="defaultHttpHandler.OverrideExecuteUrlPath " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3bb45-152">Reemplaza la dirección URL de destino correspondiente a la solicitud actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bb45-152">Overrides the target URL for the current request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3bb45-153">Es la dirección URL reemplazada que se utilizará en la solicitud; de lo contrario, es <see langword="null" /> si no se proporciona una dirección URL reemplazada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bb45-153">The overridden URL to use in the request; or <see langword="null" /> if an overridden URL is not provided.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb45-154">El <xref:System.Web.DefaultHttpHandler.OverrideExecuteUrlPath%2A> método `null` a menos que se invalide en una clase que se deriva de la <xref:System.Web.DefaultHttpHandler> clase.</span><span class="sxs-lookup"><span data-stu-id="3bb45-154">The <xref:System.Web.DefaultHttpHandler.OverrideExecuteUrlPath%2A> method returns `null` unless it is overridden in a class that is derived from the <xref:System.Web.DefaultHttpHandler> class.</span></span>  
  
 <span data-ttu-id="3bb45-155">El <xref:System.Web.DefaultHttpHandler.OverrideExecuteUrlPath%2A> método se llama solo si ASP.NET se ejecuta en modo de aislamiento de procesos de trabajo en IIS 6.0, y si la respuesta no fue modificado antes de la <xref:System.Web.DefaultHttpHandler> se llamó a objeto.</span><span class="sxs-lookup"><span data-stu-id="3bb45-155">The <xref:System.Web.DefaultHttpHandler.OverrideExecuteUrlPath%2A> method is called only if ASP.NET is running in worker process isolation mode on IIS 6.0, and if the response was not modified before the <xref:System.Web.DefaultHttpHandler> object was called.</span></span> <span data-ttu-id="3bb45-156">La respuesta se modifica por cualquiera de las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="3bb45-156">The response is modified by any of the following:</span></span>  
  
-   <span data-ttu-id="3bb45-157">Llamada a <xref:System.Web.HttpResponse.Write%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3bb45-157">Calling <xref:System.Web.HttpResponse.Write%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="3bb45-158">Llamada a <xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3bb45-158">Calling <xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="3bb45-159">Llamada a <xref:System.Web.HttpResponse.Flush%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3bb45-159">Calling <xref:System.Web.HttpResponse.Flush%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="3bb45-160">Cambiar la directiva de caché para la respuesta.</span><span class="sxs-lookup"><span data-stu-id="3bb45-160">Changing the cache policy for the response.</span></span>  
  
-   <span data-ttu-id="3bb45-161">Agregar un <xref:System.IO.Stream> objeto como un filtro para el <xref:System.Web.HttpResponse.Filter%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="3bb45-161">Adding a <xref:System.IO.Stream> object as a filter to the <xref:System.Web.HttpResponse.Filter%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRequest">
      <MemberSignature Language="C#" Value="public virtual void ProcessRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessRequest(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ProcessRequest : System.Web.HttpContext -&gt; unit&#xA;override this.ProcessRequest : System.Web.HttpContext -&gt; unit" Usage="defaultHttpHandler.ProcessRequest context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="3bb45-162">Objeto que proporciona referencias a los objetos de servidor intrínsecos que se usan para atender las solicitudes HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bb45-162">An object that provides references to intrinsic server objects used to service HTTP requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3bb45-163">Permite que un objeto <see cref="T:System.Web.DefaultHttpHandler" /> procese solicitudes Web HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bb45-163">Enables a <see cref="T:System.Web.DefaultHttpHandler" /> object to process of HTTP Web requests.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bb45-164">El <xref:System.Web.DefaultHttpHandler.ProcessRequest%2A> método no debe llamarse sincrónicamente.</span><span class="sxs-lookup"><span data-stu-id="3bb45-164">The <xref:System.Web.DefaultHttpHandler.ProcessRequest%2A> method should not be called synchronously.</span></span> <span data-ttu-id="3bb45-165">Las clases que se derivan de la <xref:System.Web.DefaultHttpHandler> clase puede invalidar el <xref:System.Web.DefaultHttpHandler.ProcessRequest%2A> para proporcionar procesamiento de solicitudes personalizado.</span><span class="sxs-lookup"><span data-stu-id="3bb45-165">Classes that are derived from the <xref:System.Web.DefaultHttpHandler> class can override the <xref:System.Web.DefaultHttpHandler.ProcessRequest%2A> to provide customized request processing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3bb45-166">Se llama a <see cref="M:System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)" /> de manera sincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3bb45-166">The <see cref="M:System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)" /> is called synchronously.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)" />
      </Docs>
    </Member>
  </Members>
</Type>