<Type Name="HttpStaticObjectsCollection" FullName="System.Web.HttpStaticObjectsCollection">
  <TypeSignature Language="C#" Value="public sealed class HttpStaticObjectsCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpStaticObjectsCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpStaticObjectsCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpStaticObjectsCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpStaticObjectsCollection sealed : System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="eaebf-101">Proporciona una colección de objetos con ámbito de aplicación para la propiedad <see cref="P:System.Web.HttpApplicationState.StaticObjects" />.</span><span class="sxs-lookup"><span data-stu-id="eaebf-101">Provides a collection of application-scoped objects for the <see cref="P:System.Web.HttpApplicationState.StaticObjects" /> property.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpStaticObjectsCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpStaticObjectsCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpStaticObjectsCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eaebf-102">Inicializa una nueva instancia de la clase <see cref="T:System.Web.HttpStaticObjectsCollection" />.</span><span class="sxs-lookup"><span data-stu-id="eaebf-102">Initializes a new instance of the <see cref="T:System.Web.HttpStaticObjectsCollection" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpStaticObjectsCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="eaebf-103">Matriz en la que se copiará <see cref="T:System.Web.HttpStaticObjectsCollection" />.</span><span class="sxs-lookup"><span data-stu-id="eaebf-103">The array to copy the <see cref="T:System.Web.HttpStaticObjectsCollection" /> into.</span></span></param>
        <param name="index"><span data-ttu-id="eaebf-104">Miembro de la colección en el que comienza la copia.</span><span class="sxs-lookup"><span data-stu-id="eaebf-104">The member of the collection where copying starts.</span></span></param>
        <summary><span data-ttu-id="eaebf-105">Copia los miembros de <see cref="T:System.Web.HttpStaticObjectsCollection" /> en una matriz.</span><span class="sxs-lookup"><span data-stu-id="eaebf-105">Copies members of an <see cref="T:System.Web.HttpStaticObjectsCollection" /> into an array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eaebf-106">En el ejemplo siguiente se crea un nuevo <xref:System.Object> matriz el tamaño necesario y se copia existente <xref:System.Web.HttpApplicationState.StaticObjects%2A> colección en él.</span><span class="sxs-lookup"><span data-stu-id="eaebf-106">The following example creates a new <xref:System.Object> array of the required size and copies an existing <xref:System.Web.HttpApplicationState.StaticObjects%2A> collection into it.</span></span>  
  
 [!code-csharp[Classic HttpStaticObjectsCollection.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpStaticObjectsCollection.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic HttpStaticObjectsCollection.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpStaticObjectsCollection.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpStaticObjectsCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eaebf-107">Obtiene el número de objetos de la colección.</span><span class="sxs-lookup"><span data-stu-id="eaebf-107">Gets the number of objects in the collection.</span></span></summary>
        <value><span data-ttu-id="eaebf-108">Número de objetos de la colección.</span><span class="sxs-lookup"><span data-stu-id="eaebf-108">The number of objects in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eaebf-109">El código en el siguiente ejemplo se ejecuta sólo si el número de objetos de la colección es superior a cinco.</span><span class="sxs-lookup"><span data-stu-id="eaebf-109">The code in the following example executes only if the number of objects in the collection exceeds five.</span></span>  
  
 [!code-csharp[Classic HttpStaticObjectsCollection.Count Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpStaticObjectsCollection.Count Example/CS/source.cs#1)]
 [!code-vb[Classic HttpStaticObjectsCollection.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpStaticObjectsCollection.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public static System.Web.HttpStaticObjectsCollection Deserialize (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.HttpStaticObjectsCollection Deserialize(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpStaticObjectsCollection.Deserialize(System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Deserialize (reader As BinaryReader) As HttpStaticObjectsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::HttpStaticObjectsCollection ^ Deserialize(System::IO::BinaryReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpStaticObjectsCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="eaebf-110"><see cref="T:System.IO.BinaryReader" /> utilizado para leer la colección serializada de una secuencia o cadena codificada.</span><span class="sxs-lookup"><span data-stu-id="eaebf-110">The <see cref="T:System.IO.BinaryReader" /> used to read the serialized collection from a stream or encoded string.</span></span></param>
        <summary><span data-ttu-id="eaebf-111">Crea un objeto <see cref="T:System.Web.HttpStaticObjectsCollection" /> a partir de un archivo binario escrito utilizando el método <see cref="M:System.Web.HttpStaticObjectsCollection.Serialize(System.IO.BinaryWriter)" />.</span><span class="sxs-lookup"><span data-stu-id="eaebf-111">Creates an <see cref="T:System.Web.HttpStaticObjectsCollection" /> object from a binary file that was written by using the <see cref="M:System.Web.HttpStaticObjectsCollection.Serialize(System.IO.BinaryWriter)" /> method.</span></span></summary>
        <returns><span data-ttu-id="eaebf-112"><see cref="T:System.Web.HttpStaticObjectsCollection" /> que se ha llenado con el contenido de un archivo binario escrito utilizando el método <see cref="M:System.Web.HttpStaticObjectsCollection.Serialize(System.IO.BinaryWriter)" />.</span><span class="sxs-lookup"><span data-stu-id="eaebf-112">An <see cref="T:System.Web.HttpStaticObjectsCollection" /> populated with the contents from a binary file written using the <see cref="M:System.Web.HttpStaticObjectsCollection.Serialize(System.IO.BinaryWriter)" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eaebf-113">El <xref:System.Web.HttpStaticObjectsCollection.Deserialize%2A> método se usa para leer el contenido de un <xref:System.Web.HttpStaticObjectsCollection> objeto que se almacena en una ubicación de almacenamiento que se crea mediante la <xref:System.Web.HttpStaticObjectsCollection.Serialize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="eaebf-113">The <xref:System.Web.HttpStaticObjectsCollection.Deserialize%2A> method is used to read the contents of a <xref:System.Web.HttpStaticObjectsCollection> object that is stored in a storage location that is created by the <xref:System.Web.HttpStaticObjectsCollection.Serialize%2A> method.</span></span> <span data-ttu-id="eaebf-114">Para serializar un <xref:System.Web.HttpStaticObjectsCollection>, use el <xref:System.Web.HttpStaticObjectsCollection.Serialize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="eaebf-114">To serialize an <xref:System.Web.HttpStaticObjectsCollection>, use the <xref:System.Web.HttpStaticObjectsCollection.Serialize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpStaticObjectsCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eaebf-115">Devuelve un enumerador de diccionario que se utiliza para establecer una iteración en los pares de clave y valor que contiene la colección.</span><span class="sxs-lookup"><span data-stu-id="eaebf-115">Returns a dictionary enumerator used for iterating through the key-and-value pairs contained in the collection.</span></span></summary>
        <returns><span data-ttu-id="eaebf-116">El enumerador de la colección.</span><span class="sxs-lookup"><span data-stu-id="eaebf-116">The enumerator for the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eaebf-117">En el ejemplo siguiente se crea un enumerador para la <xref:System.Web.HttpApplicationState.StaticObjects%2A> colección.</span><span class="sxs-lookup"><span data-stu-id="eaebf-117">The following example creates an enumerator for the <xref:System.Web.HttpApplicationState.StaticObjects%2A> collection.</span></span>  
  
 [!code-csharp[Classic HttpStaticObjectsCollection.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpStaticObjectsCollection.GetEnumerator Example/CS/source.cs#1)]
 [!code-vb[Classic HttpStaticObjectsCollection.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpStaticObjectsCollection.GetEnumerator Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public object GetObject (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetObject(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpStaticObjectsCollection.GetObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObject (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetObject(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="eaebf-118">Nombre que no distingue mayúsculas de minúsculas del objeto que se devolverá.</span><span class="sxs-lookup"><span data-stu-id="eaebf-118">The case-insensitive name of the object to return.</span></span></param>
        <summary><span data-ttu-id="eaebf-119">Devuelve el objeto con el nombre especificado de la colección.</span><span class="sxs-lookup"><span data-stu-id="eaebf-119">Returns the object with the specified name from the collection.</span></span> <span data-ttu-id="eaebf-120">Esta propiedad es una alternativa al descriptor de acceso <see langword="this" />.</span><span class="sxs-lookup"><span data-stu-id="eaebf-120">This property is an alternative to the <see langword="this" /> accessor.</span></span></summary>
        <returns><span data-ttu-id="eaebf-121">Un objeto de la colección.</span><span class="sxs-lookup"><span data-stu-id="eaebf-121">An object from the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eaebf-122">En el ejemplo siguiente se devuelve un objeto denominado ArrayList1 de la <xref:System.Web.HttpApplicationState.StaticObjects%2A> colección y lo copia en una variable de objeto.</span><span class="sxs-lookup"><span data-stu-id="eaebf-122">The following example returns an object named ArrayList1 from the <xref:System.Web.HttpApplicationState.StaticObjects%2A> collection and copies it to an object variable.</span></span>  
  
 [!code-csharp[Classic HttpStaticObjectsCollection.GetObject Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpStaticObjectsCollection.GetObject Example/CS/source.cs#1)]
 [!code-vb[Classic HttpStaticObjectsCollection.GetObject Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpStaticObjectsCollection.GetObject Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpStaticObjectsCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eaebf-123">Obtiene un valor que indica si la colección es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="eaebf-123">Gets a value indicating whether the collection is read-only.</span></span></summary>
        <value><span data-ttu-id="eaebf-124">Siempre devuelve <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="eaebf-124">Always returns <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eaebf-125">El código en el siguiente ejemplo se ejecuta sólo si la colección es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="eaebf-125">The code in the following example executes only if the collection is read-only.</span></span>  
  
 [!code-csharp[Classic HttpStaticObjectsCollection.IsReadOnly Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpStaticObjectsCollection.IsReadOnly Example/CS/source.cs#1)]
 [!code-vb[Classic HttpStaticObjectsCollection.IsReadOnly Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpStaticObjectsCollection.IsReadOnly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpStaticObjectsCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eaebf-126">Obtiene un valor que indica si la colección está sincronizada, es decir, si es segura para la ejecución de subprocesos.</span><span class="sxs-lookup"><span data-stu-id="eaebf-126">Gets a value indicating whether the collection is synchronized (that is, thread-safe).</span></span></summary>
        <value><span data-ttu-id="eaebf-127">En esta implementación, esta propiedad siempre devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="eaebf-127">In this implementation, this property always returns <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpStaticObjectsCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="eaebf-128">Nombre que no distingue mayúsculas de minúsculas del objeto que se obtendrá.</span><span class="sxs-lookup"><span data-stu-id="eaebf-128">The case-insensitive name of the object to get.</span></span></param>
        <summary><span data-ttu-id="eaebf-129">Obtiene el objeto con el nombre especificado de la colección.</span><span class="sxs-lookup"><span data-stu-id="eaebf-129">Gets the object with the specified name from the collection.</span></span></summary>
        <value><span data-ttu-id="eaebf-130">Un objeto de la colección.</span><span class="sxs-lookup"><span data-stu-id="eaebf-130">An object from the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eaebf-131">En el ejemplo siguiente se recupera un objeto denominado ArrayList1 de la <xref:System.Web.HttpApplicationState.StaticObjects%2A> colección y lo copia en una variable de objeto.</span><span class="sxs-lookup"><span data-stu-id="eaebf-131">The following example retrieves an object named ArrayList1 from the <xref:System.Web.HttpApplicationState.StaticObjects%2A> collection and copies it to an object variable.</span></span>  
  
 [!code-csharp[Classic HttpStaticObjectsCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpStaticObjectsCollection.this Example/CS/source.cs#1)]
 [!code-vb[Classic HttpStaticObjectsCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpStaticObjectsCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NeverAccessed">
      <MemberSignature Language="C#" Value="public bool NeverAccessed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NeverAccessed" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpStaticObjectsCollection.NeverAccessed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NeverAccessed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NeverAccessed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eaebf-132">Obtiene un valor booleano que indica si se ha tenido acceso a la colección anteriormente.</span><span class="sxs-lookup"><span data-stu-id="eaebf-132">Gets a Boolean value indicating whether the collection has been accessed before.</span></span></summary>
        <value>
          <span data-ttu-id="eaebf-133">Es <see langword="true" /> si nunca se ha tenido acceso a <see cref="T:System.Web.HttpStaticObjectsCollection" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="eaebf-133"><see langword="true" /> if the <see cref="T:System.Web.HttpStaticObjectsCollection" /> has never been accessed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.BinaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.IO.BinaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpStaticObjectsCollection.Serialize(System.IO.BinaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (writer As BinaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::IO::BinaryWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="eaebf-134"><see cref="T:System.IO.BinaryWriter" /> utilizado para escribir la colección serializada en una secuencia o una cadena codificada.</span><span class="sxs-lookup"><span data-stu-id="eaebf-134">The <see cref="T:System.IO.BinaryWriter" /> used to write the serialized collection to a stream or encoded string.</span></span></param>
        <summary><span data-ttu-id="eaebf-135">Escribe el contenido de la colección en un objeto <see cref="T:System.IO.BinaryWriter" />.</span><span class="sxs-lookup"><span data-stu-id="eaebf-135">Writes the contents of the collection to a <see cref="T:System.IO.BinaryWriter" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eaebf-136">Puede usar el <xref:System.Web.HttpStaticObjectsCollection.Serialize%2A> método para escribir el contenido de un <xref:System.Web.HttpStaticObjectsCollection> el objeto a un <xref:System.IO.BinaryWriter> objeto.</span><span class="sxs-lookup"><span data-stu-id="eaebf-136">You can use the <xref:System.Web.HttpStaticObjectsCollection.Serialize%2A> method to write the contents of a <xref:System.Web.HttpStaticObjectsCollection> object to a <xref:System.IO.BinaryWriter> object.</span></span> <span data-ttu-id="eaebf-137">Para recuperar un número de serie <xref:System.Web.HttpStaticObjectsCollection> objeto, utilice el <xref:System.Web.HttpStaticObjectsCollection.Deserialize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="eaebf-137">To retrieve a serialized <xref:System.Web.HttpStaticObjectsCollection> object, use the <xref:System.Web.HttpStaticObjectsCollection.Deserialize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpStaticObjectsCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eaebf-138">Obtiene un objeto que se puede utilizar para sincronizar el acceso a la colección.</span><span class="sxs-lookup"><span data-stu-id="eaebf-138">Gets an object that can be used to synchronize access to the collection.</span></span></summary>
        <value><span data-ttu-id="eaebf-139">Objeto <see cref="T:System.Web.HttpStaticObjectsCollection" /> actual.</span><span class="sxs-lookup"><span data-stu-id="eaebf-139">The current <see cref="T:System.Web.HttpStaticObjectsCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eaebf-140">Código de programa general, deberá realizar las operaciones sincronizadas en el <xref:System.Web.HttpStaticObjectsCollection.SyncRoot%2A> de una colección, no directamente en la propia colección.</span><span class="sxs-lookup"><span data-stu-id="eaebf-140">Program code should generally perform synchronized operations on the <xref:System.Web.HttpStaticObjectsCollection.SyncRoot%2A> of a collection, not directly on the collection itself.</span></span> <span data-ttu-id="eaebf-141">De este modo, se garantiza el funcionamiento correcto de las colecciones derivadas de otros objetos.</span><span class="sxs-lookup"><span data-stu-id="eaebf-141">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="eaebf-142">En concreto, mantiene la sincronización correcta con otros subprocesos que podrían modificar al mismo tiempo el objeto de colección.</span><span class="sxs-lookup"><span data-stu-id="eaebf-142">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection object.</span></span>  
  
 <span data-ttu-id="eaebf-143">El objeto devuelto en esta implementación es el <xref:System.Web.HttpStaticObjectsCollection> propio.</span><span class="sxs-lookup"><span data-stu-id="eaebf-143">The object returned in this implementation is the <xref:System.Web.HttpStaticObjectsCollection> itself.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eaebf-144">En el ejemplo siguiente se crea un objeto utilizado para sincronizar el acceso a la <xref:System.Web.HttpStaticObjectsCollection>.</span><span class="sxs-lookup"><span data-stu-id="eaebf-144">The following example creates an object used to synchronize access to the <xref:System.Web.HttpStaticObjectsCollection>.</span></span>  
  
 [!code-csharp[Classic HttpStaticObjectsCollection.SyncRoot Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpStaticObjectsCollection.SyncRoot Example/CS/source.cs#1)]
 [!code-vb[Classic HttpStaticObjectsCollection.SyncRoot Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpStaticObjectsCollection.SyncRoot Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>