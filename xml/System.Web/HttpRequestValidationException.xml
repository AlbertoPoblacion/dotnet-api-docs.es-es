<Type Name="HttpRequestValidationException" FullName="System.Web.HttpRequestValidationException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9021dfeb52e52baae75a5f4bd4ad108f46f25dba" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52366809" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpRequestValidationException : System.Web.HttpException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit HttpRequestValidationException extends System.Web.HttpException" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpRequestValidationException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpRequestValidationException&#xA;Inherits HttpException" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpRequestValidationException sealed : System::Web::HttpException" />
  <TypeSignature Language="F#" Value="type HttpRequestValidationException = class&#xA;    inherit HttpException" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.HttpException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Excepción que se produce cuando una cadena de entrada potencialmente malintencionada se recibe del cliente como parte de los datos de la solicitud. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Restringir y validar la entrada del usuario son esencial en una aplicación Web para evitar ataques de piratas informáticos que se basan en las cadenas de entrada malintencionadas. Ataques de scripts entre sitios son un ejemplo de estos métodos alternativos. Otros tipos de datos malintencionados o no deseados pueden pasarse en una solicitud a través de diversas formas de entrada. Al limitar los tipos de datos que se pasan a bajo nivel en una aplicación, puede evitar que los eventos no deseados, incluso cuando los programadores que utilizan su código no coloquen las técnicas de validación adecuado en su lugar.  
  
 Validación de solicitudes detecta una entrada de cliente potencialmente malintencionados y produce esta excepción para anular el procesamiento de la solicitud. Una solicitud de anulación puede indicar un intento de poner en peligro la seguridad de la aplicación, como un ataque XSS. Se recomienda encarecidamente que la aplicación compruebe explícitamente todas las entradas con respecto a las anulaciones de solicitud. Sin embargo, puede deshabilitar la validación de solicitudes estableciendo el `validateRequest` atributo de la directiva en `false`, como se muestra en el ejemplo siguiente:  
  
 `<%@ Page validateRequest="false" %>`  
  
 Para deshabilitar la validación de solicitudes para su aplicación, debe modificar o crear un archivo Web.config para la aplicación y establezca el `validateRequest` atributo de la `pages` sección a `false`, como se muestra en el ejemplo siguiente:  
  
```  
<configuration>   
  <system.web>   
    <pages validateRequest="false" />   
  </system.web>   
</configuration>   
```  
  
 Para deshabilitar la validación de solicitudes para todas las aplicaciones en el servidor, puede hacer esta modificación en el archivo Machine.config.  
  
> [!NOTE]
>  Se recomienda encarecidamente que la aplicación compruebe explícitamente todas las entradas que usa además de la validación de solicitudes realizada por ASP.NET. La característica de validación de solicitud no puede detectar todos los sobre todo los diseñados específicamente contra la lógica de aplicación ataques,.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo comprobar la entrada del usuario malintencionado mediante una <xref:System.Web.HttpRequestValidationException>.  
  
> [!IMPORTANT]
>  Este ejemplo tiene un cuadro de texto que acepta datos proporcionados por el usuario, lo que puede suponer una amenaza para la seguridad. De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script. Para más información, consulte [Información general sobre los ataques mediante scripts](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[HttpRequestValidationException#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpRequestValidationException/CS/httprequestvalidationexception_cs.aspx#1)]
 [!code-aspx-vb[HttpRequestValidationException#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpRequestValidationException/VB/HttpRequestValidationException_VB.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sobrecargado. Crea una nueva instancia de la clase <see cref="T:System.Web.HttpRequestValidationException" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestValidationException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestValidationException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestValidationException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Crea una nueva instancia de la clase <see cref="T:System.Web.HttpRequestValidationException" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestValidationException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestValidationException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestValidationException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpRequestValidationException : string -&gt; System.Web.HttpRequestValidationException" Usage="new System.Web.HttpRequestValidationException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Cadena que describe el error.</param>
        <summary>Crea una nueva excepción <see cref="T:System.Web.HttpRequestValidationException" /> con el mensaje de error especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El contenido de la `message` parámetro está diseñado para que sean legibles. El llamador de la <xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%29> constructor es necesario para asegurarse de que el `message` cadena se ha traducido.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestValidationException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestValidationException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestValidationException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpRequestValidationException : string * Exception -&gt; System.Web.HttpRequestValidationException" Usage="new System.Web.HttpRequestValidationException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Mensaje de error que explica la razón de la excepción.</param>
        <param name="innerException">Excepción que es la causa de la excepción actual. Si este parámetro no es <see langword="null" />, se produce la excepción actual en un bloque <see langword="catch" /> que controla la excepción interna.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.HttpRequestValidationException" /> con los parámetros especificados: un mensaje de error y una referencia a la excepción interna que es la causa de la excepción.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una excepción que se produce como consecuencia directa de una excepción anterior debe incluir una referencia a esta última en la propiedad <xref:System.Exception.InnerException%2A>. El <xref:System.Exception.InnerException%2A> propiedad devuelve el mismo valor que se pasa a la <xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%2CSystem.Exception%29> constructor, o `null` si el <xref:System.Exception.InnerException%2A> propiedad no proporciona el valor de la excepción interna para el <xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%2CSystem.Exception%29> constructor.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>