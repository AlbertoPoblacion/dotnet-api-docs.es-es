<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ArrayPool`1.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5924af3bcdfd42b06e9a7eaf3e33460653c01b53b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">924af3bcdfd42b06e9a7eaf3e33460653c01b53b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Buffers.ArrayPool`1">
          <source>The type of the objects that are in the resource pool.</source>
          <target state="translated">El tipo de los objetos que se encuentran en el grupo de recursos.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Buffers.ArrayPool`1">
          <source>Provides a resource pool that enables reusing instances of type <ph id="ph1">&lt;see cref="T:T[]" /&gt;</ph>.</source>
          <target state="translated">Proporciona un grupo de recursos que permite volver a usar instancias de tipo <ph id="ph1">&lt;see cref="T:T[]" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Buffers.ArrayPool`1">
          <source>Using the <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph> class to rent and return buffers (using the <ph id="ph2">&lt;xref:System.Buffers.ArrayPool%601.Rent%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Buffers.ArrayPool%601.Return%2A&gt;</ph> methods) can improve performance in situations where arrays are created and destroyed frequently, resulting in significant memory pressure on the garbage collector.</source>
          <target state="translated">Mediante el <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph> clase alquilar y devolver los búferes (mediante el <ph id="ph2">&lt;xref:System.Buffers.ArrayPool%601.Rent%2A&gt;</ph> y <ph id="ph3">&lt;xref:System.Buffers.ArrayPool%601.Return%2A&gt;</ph> métodos) puede mejorar el rendimiento en situaciones donde matrices se crean y destruyen con frecuencia, lo que produce presión de memoria significativa en el recolector de elementos no utilizados.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Buffers.ArrayPool`1">
          <source>This class is thread-safe.</source>
          <target state="translated">Esta clase es segura para subprocesos.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Buffers.ArrayPool`1">
          <source>All members may be used by multiple threads concurrently.</source>
          <target state="translated">Todos los miembros se pueden usar varios subprocesos simultáneamente.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Buffers.ArrayPool`1.#ctor">
          <source>Note that this constructor is protected; it can only be called by classes derived from the <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph> class.</source>
          <target state="translated">Tenga en cuenta que este constructor está protegido; solo se puede llamar mediante las clases derivadas de la <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Create">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> class.</source>
          <target state="translated">Crea una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Create">
          <source>A new instance of the <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> class.</source>
          <target state="translated">Nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)">
          <source>The maximum length of an array instance that may be stored in the pool.</source>
          <target state="translated">Longitud máxima de una instancia de matriz que se puede almacenar en el grupo.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)">
          <source>The maximum number of array instances that may be stored in each bucket in the pool.</source>
          <target state="translated">Número máximo de instancias de matriz que se pueden almacenar en cada depósito del grupo.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)">
          <source>The pool groups arrays of similar lengths into buckets for faster access.</source>
          <target state="translated">El grupo agrupa matrices de longitudes similares en depósitos para acelerar el acceso.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> class using the specifed configuration.</source>
          <target state="translated">Crea una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> con la condición especificada.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)">
          <source>A new instance of the <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> class with the specified configuration.</source>
          <target state="translated">Nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> con la configuración especificada.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)">
          <source>The instance of the <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph> class created by this method will group arrays into buckets, with no more than <ph id="ph2">`maxArraysPerBucket`</ph> in each bucket, and with those arrays not exceeding <ph id="ph3">`maxArrayLength`</ph> in length.</source>
          <target state="translated">La instancia de la <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph> clase creada por este método agrupan matrices en sectores de almacenamiento, no más de <ph id="ph2">`maxArraysPerBucket`</ph> en cada cubo y con esas matrices no supere <ph id="ph3">`maxArrayLength`</ph> de longitud.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Rent(System.Int32)">
          <source>The minimum length of the array.</source>
          <target state="translated">Longitud mínima de la matriz.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Rent(System.Int32)">
          <source>Retrieves a buffer that is at least the requested length.</source>
          <target state="translated">Recupera un búfer que tiene al menos la longitud solicitada.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Rent(System.Int32)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:T[]" /&gt;</ph> that is at least <ph id="ph2">&lt;paramref name="minimumLength" /&gt;</ph> in length.</source>
          <target state="translated">Matriz de tipo <ph id="ph1">&lt;see cref="T:T[]" /&gt;</ph> que tiene al menos <ph id="ph2">&lt;paramref name="minimumLength" /&gt;</ph> de longitud.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Buffers.ArrayPool`1.Rent(System.Int32)">
          <source>This buffer is loaned to the caller and should be returned to the same pool using the <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601.Return%2A&gt;</ph> method, so that it can be reused in subsequent calls to the <ph id="ph2">&lt;xref:System.Buffers.ArrayPool%601.Rent%2A&gt;</ph> method.</source>
          <target state="translated">Este búfer se presta al autor de la llamada y debe devolverse al mismo grupo utilizando la <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601.Return%2A&gt;</ph> método, por lo que TI puede reutilizarse en llamadas posteriores a la <ph id="ph2">&lt;xref:System.Buffers.ArrayPool%601.Rent%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Buffers.ArrayPool`1.Rent(System.Int32)">
          <source>Failure to return a rented buffer is not a fatal error.</source>
          <target state="translated">Error al devolver el búfer alquilado no es un error irrecuperable.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Buffers.ArrayPool`1.Rent(System.Int32)">
          <source>However, it may lead to decreased application performance, as the pool may need to create a new buffer to replace the lost one.</source>
          <target state="translated">Sin embargo, puede provocar que la aplicación una disminución de rendimiento, el grupo que tenga que crear un nuevo búfer para reemplazar al perdido.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)">
          <source>A buffer to return to the pool that was previously obtained using the <ph id="ph1">&lt;see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /&gt;</ph> method.</source>
          <target state="translated">Búfer que se va a devolver al grupo que se ha obtenido anteriormente con el método <ph id="ph1">&lt;see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)">
          <source>Indicates whether the contents of the buffer should be cleared before reuse.</source>
          <target state="translated">Indica si se debe borrar el contenido del búfer antes de volver a usarlo.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)">
          <source>If <ph id="ph1">&lt;paramref name="clearArray" /&gt;</ph> is set to <ph id="ph2">&lt;see langword="true" /&gt;</ph>, and if the pool will store the buffer to enable subsequent reuse, the <ph id="ph3">&lt;see cref="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" /&gt;</ph> method will clear the <ph id="ph4">&lt;paramref name="array" /&gt;</ph> of its contents so that a subsequent caller using the <ph id="ph5">&lt;see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /&gt;</ph> method will not see the content of the previous caller.</source>
          <target state="translated">Si <ph id="ph1">&lt;paramref name="clearArray" /&gt;</ph> está establecido en <ph id="ph2">&lt;see langword="true" /&gt;</ph> y el grupo va a almacenar el búfer para permitir su reutilización posterior, el método <ph id="ph3">&lt;see cref="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" /&gt;</ph> borra el contenido de <ph id="ph4">&lt;paramref name="array" /&gt;</ph> para que un autor de llamada posterior que use el método <ph id="ph5">&lt;see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /&gt;</ph> no vea el contenido del autor de llamada anterior.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)">
          <source>If <ph id="ph1">&lt;paramref name="clearArray" /&gt;</ph> is set to <ph id="ph2">&lt;see langword="false" /&gt;</ph> or if the pool will release the buffer, the array's contents are left unchanged.</source>
          <target state="translated">Si <ph id="ph1">&lt;paramref name="clearArray" /&gt;</ph> está establecido en <ph id="ph2">&lt;see langword="false" /&gt;</ph> o si el grupo va a liberar el búfer, el contenido de la matriz no se cambia.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)">
          <source>Returns an array to the pool that was previously obtained using the <ph id="ph1">&lt;see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /&gt;</ph> method on the same <ph id="ph2">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> instance.</source>
          <target state="translated">Devuelve una matriz al grupo que se ha obtenido anteriormente al usar el método <ph id="ph1">&lt;see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /&gt;</ph> en la misma instancia de <ph id="ph2">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)">
          <source>Once a buffer has been returned to the pool, the caller gives up all ownership of the buffer and must not use it.</source>
          <target state="translated">Una vez que haya obtenido un búfer al grupo, el llamador desiste todas las propiedad del búfer y no debe usar.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)">
          <source>The reference returned from a given call to the <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601.Rent%2A&gt;</ph> method must only be returned using the <ph id="ph2">&lt;xref:System.Buffers.ArrayPool%601.Return%2A&gt;</ph> method once.</source>
          <target state="translated">Devuelve la referencia de una llamada determinada a la <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601.Rent%2A&gt;</ph> solo se debe devolver el método mediante el <ph id="ph2">&lt;xref:System.Buffers.ArrayPool%601.Return%2A&gt;</ph> una vez al método.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)">
          <source>The default <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph> may hold onto the returned buffer in order to rent it again, or it may release the returned buffer if it's determined that the pool already has enough buffers stored.</source>
          <target state="translated">El valor predeterminado <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph> puede almacenar en el búfer devuelto para alquilar vuelva a, o bien puede liberar el búfer devuelto si se determina que el grupo ya tiene suficientes búferes almacenados.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Buffers.ArrayPool`1.Shared">
          <source>Gets a shared <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> instance.</source>
          <target state="translated">Obtiene una instancia compartida de <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Buffers.ArrayPool`1.Shared">
          <source>A shared <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> instance.</source>
          <target state="translated">Un compartido <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> instancia.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Buffers.ArrayPool`1.Shared">
          <source>The shared pool provides a default implementation of the <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph> class that's intended for general applicability.</source>
          <target state="translated">El grupo compartido proporciona una implementación predeterminada de la <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph> clase que está diseñado para la aplicación general.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Buffers.ArrayPool`1.Shared">
          <source>A shared class maintains arrays of multiple sizes, and may hand back a larger array than was actually requested, but it will never hand back a smaller array than was requested.</source>
          <target state="translated">Clases compartidas mantiene las matrices de varios tamaños y pueden administrando una matriz mayor que realmente se ha solicitado, pero nunca entregará una matriz más pequeña que se ha solicitado.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Buffers.ArrayPool`1.Shared">
          <source>Renting a buffer from a shared class using the <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601.Rent%2A&gt;</ph> method will result in an existing buffer being taken from the pool if an appropriate buffer is available or in a new buffer being allocated if one is not available.</source>
          <target state="translated">Alquilar un búfer de una clase compartida mediante la <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601.Rent%2A&gt;</ph> método dará como resultado en un búfer existente que se interrumpa desde el grupo si está disponible un búfer adecuado o en un nuevo búfer que se va a asignar si uno no está disponible.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>