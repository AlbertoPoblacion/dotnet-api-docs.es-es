<Type Name="IPinnable" FullName="System.Buffers.IPinnable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="907982cc3daf2aad256508185bbdc2e178bd9cea" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52195971" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IPinnable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPinnable" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.IPinnable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPinnable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPinnable" />
  <TypeSignature Language="F#" Value="type IPinnable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Proporciona un mecanismo para anclar y desanclar objetos a fin de que el recolector de elementos no utilizados no pueda moverlos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

La clase <xref:System.Buffers.MemoryManager%601> implementa la interfaz `IPinnable`.

       ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Pin">
      <MemberSignature Language="C#" Value="public System.Buffers.MemoryHandle Pin (int elementIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Buffers.MemoryHandle Pin(int32 elementIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.IPinnable.Pin(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Pin (elementIndex As Integer) As MemoryHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Buffers::MemoryHandle Pin(int elementIndex);" />
      <MemberSignature Language="F#" Value="abstract member Pin : int -&gt; System.Buffers.MemoryHandle" Usage="iPinnable.Pin elementIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.MemoryHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elementIndex">Desplazamiento del elemento dentro del búfer de memoria al que apunta el elemento <see cref="T:System.Buffers.MemoryHandle" /> devuelto.</param>
        <summary>Ancla un bloque de memoria.</summary>
        <returns>Manipulador del bloque de memoria.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

Un desarrollador puede tener acceso a un objeto que implementa el <xref:System.Buffers.IPinnable> interfaz sin Anclando únicamente a través de API administradas. Anclar es necesario para el acceso mediante la API no administradas. 

Llame a este método para indicar que el <xref:System.Buffers.IPinnable> objeto no se puede mover el recolector de elementos no utilizados para que se puede usar la dirección del objeto anclado.


       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unpin">
      <MemberSignature Language="C#" Value="public void Unpin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unpin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.IPinnable.Unpin" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unpin ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unpin();" />
      <MemberSignature Language="F#" Value="abstract member Unpin : unit -&gt; unit" Usage="iPinnable.Unpin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libera un bloque de memoria anclada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

Llame a este método para indicar que el <xref:System.Buffers.IPinnable> objeto ya no necesita anclarse y que el recolector de elementos no utilizados ahora puede mover el objeto.


       ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>