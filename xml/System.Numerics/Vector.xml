<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Vector.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac595e1267a9f59f96ee76094302da88cdb96a63f2e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">95e1267a9f59f96ee76094302da88cdb96a63f2e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Numerics.Vector">
          <source>Provides a collection of static convenience methods for creating, manipulating, combining, and converting generic vectors.</source>
          <target state="translated">Proporciona una colección de métodos estáticos para crear, manipular, combinar y convertir vectores genéricos.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.Abs``1(System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.Abs``1(System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Abs``1(System.Numerics.Vector{``0})">
          <source>The source vector.</source>
          <target state="translated">Vector de origen.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Abs``1(System.Numerics.Vector{``0})">
          <source>Returns a new vector whose elements are the absolute values of the given vector's elements.</source>
          <target state="translated">Devuelve un nuevo vector cuyos elementos son los valores absolutos de los elementos del vector especificado.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Abs``1(System.Numerics.Vector{``0})">
          <source>The absolute value vector.</source>
          <target state="translated">Vector de valor absoluto.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.Add``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.Add``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Add``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The first vector.</source>
          <target state="translated">Primer vector.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Add``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The second vector.</source>
          <target state="translated">Segundo vector.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Add``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>Returns a new vector whose values are the sum of each pair of elements from two given vectors.</source>
          <target state="translated">Devuelve un nuevo vector cuyos valores son la suma de cada par de elementos de dos vectores especificados.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Add``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The summed vector.</source>
          <target state="translated">Vector sumado.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.AndNot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.AndNot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.AndNot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The first vector.</source>
          <target state="translated">Primer vector.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.AndNot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The second vector.</source>
          <target state="translated">Segundo vector.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.AndNot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>Returns a new vector by performing a bitwise And Not operation on each pair of corresponding elements in two vectors.</source>
          <target state="translated">Devuelve un nuevo vector realizando una operación bit a bit AND NOT en cada par de elementos correspondientes de dos vectores.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.AndNot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The resulting vector.</source>
          <target state="translated">Vector resultante.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.AsVectorByte``1(System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.AsVectorByte``1(System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.AsVectorByte``1(System.Numerics.Vector{``0})">
          <source>The source vector.</source>
          <target state="translated">Vector de origen.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.AsVectorByte``1(System.Numerics.Vector{``0})">
          <source>Reinterprets the bits of a specified vector into those of a vector of unsigned bytes.</source>
          <target state="translated">Reinterpreta los bits de un vector especificado en los de un vector de bytes sin signo.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.AsVectorByte``1(System.Numerics.Vector{``0})">
          <source>The reinterpreted vector.</source>
          <target state="translated">Vector reinterpretado.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.AsVectorDouble``1(System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.AsVectorDouble``1(System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.AsVectorDouble``1(System.Numerics.Vector{``0})">
          <source>The source vector.</source>
          <target state="translated">Vector de origen.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.AsVectorDouble``1(System.Numerics.Vector{``0})">
          <source>Reinterprets the bits of a specified vector into those of a double-precision floating-point vector.</source>
          <target state="translated">Reinterpreta los bits de un vector especificado en los de un vector de punto flotante de doble precisión.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.AsVectorDouble``1(System.Numerics.Vector{``0})">
          <source>The reinterpreted vector.</source>
          <target state="translated">Vector reinterpretado.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.AsVectorInt16``1(System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.AsVectorInt16``1(System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.AsVectorInt16``1(System.Numerics.Vector{``0})">
          <source>The source vector.</source>
          <target state="translated">Vector de origen.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.AsVectorInt16``1(System.Numerics.Vector{``0})">
          <source>Reinterprets the bits of a specified vector into those of a vector of 16-bit integers.</source>
          <target state="translated">Reinterpreta los bits de un vector especificado en los de un vector de enteros de 16 bits.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.AsVectorInt16``1(System.Numerics.Vector{``0})">
          <source>The reinterpreted vector.</source>
          <target state="translated">Vector reinterpretado.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.AsVectorInt32``1(System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.AsVectorInt32``1(System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.AsVectorInt32``1(System.Numerics.Vector{``0})">
          <source>The source vector.</source>
          <target state="translated">Vector de origen.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.AsVectorInt32``1(System.Numerics.Vector{``0})">
          <source>Reinterprets the bits of a specified vector into those of a vector of integers.</source>
          <target state="translated">Reinterpreta los bits de un vector especificado en los de un vector de enteros.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.AsVectorInt32``1(System.Numerics.Vector{``0})">
          <source>The reinterpreted vector.</source>
          <target state="translated">Vector reinterpretado.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.AsVectorInt64``1(System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.AsVectorInt64``1(System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.AsVectorInt64``1(System.Numerics.Vector{``0})">
          <source>The source vector.</source>
          <target state="translated">Vector de origen.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.AsVectorInt64``1(System.Numerics.Vector{``0})">
          <source>Reinterprets the bits of a specified vector into those of a vector of long integers.</source>
          <target state="translated">Reinterpreta los bits de un vector especificado en los de un vector de enteros largos.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.AsVectorInt64``1(System.Numerics.Vector{``0})">
          <source>The reinterpreted vector.</source>
          <target state="translated">Vector reinterpretado.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.AsVectorSByte``1(System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.AsVectorSByte``1(System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.AsVectorSByte``1(System.Numerics.Vector{``0})">
          <source>The source vector.</source>
          <target state="translated">Vector de origen.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.AsVectorSByte``1(System.Numerics.Vector{``0})">
          <source>Reinterprets the bits of a specified vector into those of a vector of signed bytes.</source>
          <target state="translated">Reinterpreta los bits de un vector especificado en los de un vector de bytes con signo.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.AsVectorSByte``1(System.Numerics.Vector{``0})">
          <source>The reinterpreted vector.</source>
          <target state="translated">Vector reinterpretado.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.AsVectorSingle``1(System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.AsVectorSingle``1(System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.AsVectorSingle``1(System.Numerics.Vector{``0})">
          <source>The source vector.</source>
          <target state="translated">Vector de origen.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.AsVectorSingle``1(System.Numerics.Vector{``0})">
          <source>Reinterprets the bits of a specified vector into those of a single-precision floating-point vector.</source>
          <target state="translated">Reinterpreta los bits de un vector especificado en los de un vector de punto flotante de precisión sencilla.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.AsVectorSingle``1(System.Numerics.Vector{``0})">
          <source>The reinterpreted vector.</source>
          <target state="translated">Vector reinterpretado.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.AsVectorUInt16``1(System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.AsVectorUInt16``1(System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.AsVectorUInt16``1(System.Numerics.Vector{``0})">
          <source>The source vector.</source>
          <target state="translated">Vector de origen.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.AsVectorUInt16``1(System.Numerics.Vector{``0})">
          <source>Reinterprets the bits of a specified vector into those of a vector of unsigned 16-bit integers.</source>
          <target state="translated">Reinterpreta los bits de un vector especificado en los de un vector de enteros de 16 bits sin signo.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.AsVectorUInt16``1(System.Numerics.Vector{``0})">
          <source>The reinterpreted vector.</source>
          <target state="translated">Vector reinterpretado.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.AsVectorUInt32``1(System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.AsVectorUInt32``1(System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.AsVectorUInt32``1(System.Numerics.Vector{``0})">
          <source>The source vector.</source>
          <target state="translated">Vector de origen.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.AsVectorUInt32``1(System.Numerics.Vector{``0})">
          <source>Reinterprets the bits of a specified vector into those of a vector of unsigned integers.</source>
          <target state="translated">Reinterpreta los bits de un vector especificado en los de un vector de enteros sin signo.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.AsVectorUInt32``1(System.Numerics.Vector{``0})">
          <source>The reinterpreted vector.</source>
          <target state="translated">Vector reinterpretado.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.AsVectorUInt64``1(System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.AsVectorUInt64``1(System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.AsVectorUInt64``1(System.Numerics.Vector{``0})">
          <source>The source vector.</source>
          <target state="translated">Vector de origen.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.AsVectorUInt64``1(System.Numerics.Vector{``0})">
          <source>Reinterprets the bits of a specified vector into those of a vector of unsigned long integers.</source>
          <target state="translated">Reinterpreta los bits de un vector especificado en los de un vector de enteros largos sin signo.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.AsVectorUInt64``1(System.Numerics.Vector{``0})">
          <source>The reinterpreted vector.</source>
          <target state="translated">Vector reinterpretado.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.BitwiseAnd``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.BitwiseAnd``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.BitwiseAnd``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The first vector.</source>
          <target state="translated">Primer vector.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.BitwiseAnd``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The second vector.</source>
          <target state="translated">Segundo vector.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.BitwiseAnd``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>Returns a new vector by performing a bitwise <ph id="ph1">&lt;see langword="And" /&gt;</ph> operation on each pair of elements in two vectors.</source>
          <target state="translated">Devuelve un nuevo vector realizando una operación <ph id="ph1">&lt;see langword="And" /&gt;</ph> bit a bit en cada par de elementos de dos vectores.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.BitwiseAnd``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The resulting vector.</source>
          <target state="translated">Vector resultante.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.BitwiseOr``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.BitwiseOr``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.BitwiseOr``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The first vector.</source>
          <target state="translated">Primer vector.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.BitwiseOr``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The second vector.</source>
          <target state="translated">Segundo vector.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.BitwiseOr``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>Returns a new vector by performing a bitwise <ph id="ph1">&lt;see langword="Or" /&gt;</ph> operation on each pair of elements in two vectors.</source>
          <target state="translated">Devuelve un nuevo vector realizando una operación <ph id="ph1">&lt;see langword="Or" /&gt;</ph> bit a bit en cada par de elementos de dos vectores.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.BitwiseOr``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The resulting vector.</source>
          <target state="translated">Vector resultante.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
          <source>The integral mask vector used to drive selection.</source>
          <target state="translated">Vector de máscara entero usado para realizar la selección.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
          <source>The first source vector.</source>
          <target state="translated">Primer vector de origen.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
          <source>The second source vector.</source>
          <target state="translated">Segundo vector de origen.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
          <source>Creates a new single-precision vector with elements selected between two specified single-precision source vectors based on an integral mask vector.</source>
          <target state="translated">Crea un nuevo vector de precisión sencilla con elementos seleccionados entre dos vectores de origen de precisión sencilla especificados según un vector de máscara entero.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
          <source>The new vector with elements selected based on the mask.</source>
          <target state="translated">Nuevo vector con los elementos seleccionados según la máscara.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
          <source>The integral mask vector used to drive selection.</source>
          <target state="translated">Vector de máscara entero usado para realizar la selección.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
          <source>The first source vector.</source>
          <target state="translated">Primer vector de origen.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
          <source>The second source vector.</source>
          <target state="translated">Segundo vector de origen.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
          <source>Creates a new double-precision vector with elements selected between two specified double-precision source vectors based on an integral mask vector.</source>
          <target state="translated">Crea un nuevo vector de doble precisión con elementos seleccionados entre dos vectores de origen de doble precisión especificados según un vector de máscara entero.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
          <source>The new vector with elements selected based on the mask.</source>
          <target state="translated">Nuevo vector con los elementos seleccionados según la máscara.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.ConditionalSelect``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.ConditionalSelect``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.ConditionalSelect``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The integral mask vector used to drive selection.</source>
          <target state="translated">Vector de máscara entero usado para realizar la selección.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.ConditionalSelect``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The first source vector.</source>
          <target state="translated">Primer vector de origen.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.ConditionalSelect``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The second source vector.</source>
          <target state="translated">Segundo vector de origen.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.ConditionalSelect``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>Creates a new vector of a specified type with elements selected between two specified source vectors of the same type based on an integral mask vector.</source>
          <target state="translated">Crea un nuevo vector de un tipo especificado con elementos seleccionados entre dos vectores de origen especificados del mismo tipo según un vector de máscara entero.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.ConditionalSelect``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The new vector with elements selected based on the mask.</source>
          <target state="translated">Nuevo vector con los elementos seleccionados según la máscara.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.Divide``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.Divide``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Divide``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The first vector.</source>
          <target state="translated">Primer vector.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Divide``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The second vector.</source>
          <target state="translated">Segundo vector.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Divide``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>Returns a new vector whose values are the result of dividing the first vector's elements by the corresponding elements in the second vector.</source>
          <target state="translated">Devuelve un nuevo vector cuyos valores son el resultado de dividir los elementos del primer vector por los elementos correspondientes del segundo vector.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Divide``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The divided vector.</source>
          <target state="translated">Vector dividido.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.Dot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.Dot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Dot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The first vector.</source>
          <target state="translated">Primer vector.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Dot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The second vector.</source>
          <target state="translated">Segundo vector.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Dot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>Returns the dot product of two vectors.</source>
          <target state="translated">Devuelve el producto escalar de dos vectores.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Dot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The dot product.</source>
          <target state="translated">Producto escalar.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
          <source>Returns a new integral vector whose elements signal whether the elements in two specified double-precision vectors are equal.</source>
          <target state="translated">Devuelve un nuevo vector entero cuyos elementos indican si los elementos de los dos vectores de doble precisión especificados son iguales.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
          <source>The resulting integral vector.</source>
          <target state="translated">Vector entero resultante.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
          <source>Returns a new integral vector whose elements signal whether the elements in two specified integral vectors are equal.</source>
          <target state="translated">Devuelve un nuevo vector entero cuyos elementos indican si los elementos de los dos vectores enteros especificados son iguales.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
          <source>The resulting integral vector.</source>
          <target state="translated">Vector entero resultante.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
          <source>Returns a new vector whose elements signal whether the elements in two specified long integer vectors are equal.</source>
          <target state="translated">Devuelve un nuevo vector entero cuyos elementos indican si los elementos de los dos vectores enteros largos especificados son iguales.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
          <source>The resulting long integer vector.</source>
          <target state="translated">Vector entero largo resultante.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
          <source>Returns a new integral vector whose elements signal whether the elements in two specified single-precision vectors are equal.</source>
          <target state="translated">Devuelve un nuevo vector entero cuyos elementos indican si los elementos de los dos vectores de precisión sencilla especificados son iguales.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
          <source>The resulting integral vector.</source>
          <target state="translated">Vector entero resultante.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.Equals``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.Equals``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Equals``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Equals``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Equals``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>Returns a new vector of a specified type whose elements signal whether the elements in two specified vectors of the same type are equal.</source>
          <target state="translated">Devuelve un nuevo vector de un tipo especificado cuyos elementos indican si los elementos de los dos vectores especificados del mismo tipo son iguales.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Equals``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The resulting vector.</source>
          <target state="translated">Vector resultante.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.EqualsAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.EqualsAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.EqualsAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.EqualsAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.EqualsAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>Returns a value that indicates whether each pair of elements in the given vectors is equal.</source>
          <target state="translated">Devuelve un valor que indica si cada par de elementos de los vectores especificados es igual.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.EqualsAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if all elements in <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si todos los elementos de <ph id="ph2">&lt;paramref name="left" /&gt;</ph> y <ph id="ph3">&lt;paramref name="right" /&gt;</ph> son iguales; de lo contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.EqualsAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.EqualsAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.EqualsAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.EqualsAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.EqualsAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>Returns a value that indicates whether any single pair of elements in the given vectors is equal.</source>
          <target state="translated">Devuelve un valor que indica si cada par de elementos individual de los vectores especificados es igual.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.EqualsAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if any element pair in <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> is equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si algún par elementos de <ph id="ph2">&lt;paramref name="left" /&gt;</ph> y <ph id="ph3">&lt;paramref name="right" /&gt;</ph> es igual; de lo contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
          <source>Returns a new integral vector whose elements signal whether the elements in one double-precision floating-point vector are greater than their corresponding elements in a second double-precision floating-point vector.</source>
          <target state="translated">Devuelve un nuevo vector entero cuyos elementos indican si los elementos de un vector de punto flotante de doble precisión son mayores que sus elementos correspondientes de un segundo vector de punto flotante de doble precisión.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
          <source>The resulting integral vector.</source>
          <target state="translated">Vector entero resultante.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
          <source>Returns a new integral vector whose elements signal whether the elements in one integral vector are greater than their corresponding elements in a second integral vector.</source>
          <target state="translated">Devuelve un nuevo vector entero cuyos elementos indican si los elementos de un vector entero son mayores que sus elementos correspondientes de un segundo vector entero.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
          <source>The resulting integral vector.</source>
          <target state="translated">Vector entero resultante.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
          <source>Returns a new long integer vector whose elements signal whether the elements in one long integer vector are greater than their corresponding elements in a second long integer vector.</source>
          <target state="translated">Devuelve un nuevo vector entero largo cuyos elementos indican si los elementos de un vector entero largo son mayores que sus elementos correspondientes de un segundo vector entero largo.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
          <source>The resulting long integer vector.</source>
          <target state="translated">Vector entero largo resultante.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
          <source>Returns a new integral vector whose elements signal whether the elements in one single-precision floating-point vector are greater than their corresponding elements in a second single-precision floating-point vector.</source>
          <target state="translated">Devuelve un nuevo vector entero cuyos elementos indican si los elementos de un vector de punto flotante de precisión sencilla son mayores que sus elementos correspondientes de un segundo vector de punto flotante de precisión sencilla.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
          <source>The resulting integral vector.</source>
          <target state="translated">Vector entero resultante.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.GreaterThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.GreaterThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>Returns a new vector whose elements signal whether the elements in one vector of a specified type are greater than their corresponding elements in the second vector of the same time.</source>
          <target state="translated">Devuelve un nuevo vector cuyos elementos indican si los elementos de un vector de un tipo especificado son mayores que sus elementos correspondientes del segundo vector del mismo tipo.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The resulting vector.</source>
          <target state="translated">Vector resultante.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.GreaterThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.GreaterThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>Returns a value that indicates whether all elements in the first vector are greater than the corresponding elements in the second vector.</source>
          <target state="translated">Devuelve un valor que indica si todos los elementos del primer vector son mayores que los elementos correspondientes del segundo vector.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if all elements in <ph id="ph2">&lt;paramref name="left" /&gt;</ph> are greater than the corresponding elements in <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si todos los elementos de <ph id="ph2">&lt;paramref name="left" /&gt;</ph> son mayores que los elementos correspondientes de <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; de lo contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.GreaterThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.GreaterThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>Returns a value that indicates whether any element in the first vector is greater than the corresponding element in the second vector.</source>
          <target state="translated">Devuelve un valor que indica si algún elemento del primer vector es mayor que el elemento correspondiente del segundo vector.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if any element in <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than the corresponding element in <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise,  <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si algún elemento de <ph id="ph2">&lt;paramref name="left" /&gt;</ph> es mayor que el elemento correspondiente de <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; de lo contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
          <source>Returns a new integral vector whose elements signal whether the elements in one vector are greater than or equal to their corresponding elements in the second double-precision floating-point vector.</source>
          <target state="translated">Devuelve un nuevo vector entero cuyos elementos indican si los elementos de un vector son mayores o iguales que sus elementos correspondientes del segundo vector de punto flotante de doble precisión.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
          <source>The resulting integral vector.</source>
          <target state="translated">Vector entero resultante.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
          <source>Returns a new integral vector whose elements signal whether the elements in one integral vector are greater than or equal to their corresponding elements in the second integral vector.</source>
          <target state="translated">Devuelve un nuevo vector entero cuyos elementos indican si los elementos de un vector entero son mayores o iguales que sus elementos correspondientes del segundo vector entero.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
          <source>The resulting integral vector.</source>
          <target state="translated">Vector entero resultante.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
          <source>Returns a new long integer vector whose elements signal whether the elements in one long integer vector are greater than or equal to their corresponding elements in the second long integer vector.</source>
          <target state="translated">Devuelve un nuevo nuevo vector entero largo cuyos elementos indican si los elementos de un vector entero largo son mayores o iguales que sus elementos correspondientes del segundo vector entero largo.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
          <source>The resulting long integer vector.</source>
          <target state="translated">Vector entero largo resultante.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
          <source>Returns a new integral vector whose elements signal whether the elements in one vector are greater than or equal to their corresponding elements in the single-precision floating-point second vector.</source>
          <target state="translated">Devuelve un nuevo vector entero cuyos elementos indican si los elementos de un vector son mayores o iguales que sus elementos correspondientes del segundo vector de punto flotante de precisión sencilla.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
          <source>The resulting integral vector.</source>
          <target state="translated">Vector entero resultante.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.GreaterThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.GreaterThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>Returns a new vector whose elements signal whether the elements in one vector of a specified type are greater than or equal to their corresponding elements in the second vector of the same type.</source>
          <target state="translated">Devuelve un nuevo vector cuyos elementos indican si los elementos de un vector de un tipo especificado son mayores o iguales que sus elementos correspondientes del segundo vector del mismo tipo.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The resulting vector.</source>
          <target state="translated">Vector resultante.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.GreaterThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.GreaterThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>Returns a value that indicates whether all elements in the first vector are greater than or equal to all the corresponding elements in the second vector.</source>
          <target state="translated">Devuelve un valor que indica si todos los elementos del primer vector son mayores o iguales que todos los elementos correspondientes del segundo vector.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if all elements in <ph id="ph2">&lt;paramref name="left" /&gt;</ph> are greater than or equal to the corresponding elements in <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si todos los elementos de <ph id="ph2">&lt;paramref name="left" /&gt;</ph> son mayores o iguales que los elementos correspondientes de <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; de lo contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.GreaterThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.GreaterThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>Returns a value that indicates whether any element in the first vector is greater than or equal to the corresponding element in the second vector.</source>
          <target state="translated">Devuelve un valor que indica si algún elemento del primer vector es mayor o igual que el elemento correspondiente del segundo vector.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.GreaterThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if any element in <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than or equal to the corresponding element in <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise,  <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si algún elemento de <ph id="ph2">&lt;paramref name="left" /&gt;</ph> es mayor o igual que el elemento correspondiente de <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; de lo contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector.IsHardwareAccelerated">
          <source>Gets a value that indicates whether vector operations are subject to hardware acceleration through JIT intrinsic support.</source>
          <target state="translated">Obtiene un valor que indica si las operaciones de vector están sujetas a la aceleración de hardware mediante la compatibilidad intrínseca de JIT.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Vector.IsHardwareAccelerated">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if vector operations are subject to hardware acceleration; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si las operaciones de vector están sujetas a la aceleración de hardware; de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Vector.IsHardwareAccelerated">
          <source>Vector operations are subject to hardware acceleration on systems that support Single Instruction, Multiple Data (SIMD) instructions and the RyiJIT just-in-time compiler is used to compile managed code.</source>
          <target state="translated">Las operaciones de vector están sujetas a la aceleración de hardware en los sistemas que admiten la única instrucción, instrucciones Multiple Data (SIMD) y el compilador de just-in-time RyiJIT se utiliza para compilar código administrado.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
          <source>Returns a new integral vector whose elements signal whether the elements in one double-precision floating-point vector are less than their corresponding elements in a second double-precision floating-point vector.</source>
          <target state="translated">Devuelve un nuevo vector entero cuyos elementos indican si los elementos de un vector de punto flotante de doble precisión son menores que sus elementos correspondientes de un segundo vector de punto flotante de doble precisión.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
          <source>The resulting integral vector.</source>
          <target state="translated">Vector entero resultante.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
          <source>Returns a new integral vector whose elements signal whether the elements in one integral vector are less than their corresponding elements in a second integral vector.</source>
          <target state="translated">Devuelve un nuevo vector entero cuyos elementos indican si los elementos de un vector entero son menores que sus elementos correspondientes de un segundo vector entero.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
          <source>The resulting integral vector</source>
          <target state="translated">Vector entero resultante.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
          <source>Returns a new long integer vector whose elements signal whether the elements in one long integer vector are less than their corresponding elements in a second long integer vector.</source>
          <target state="translated">Devuelve un nuevo vector entero largo cuyos elementos indican si los elementos de un vector entero largo son menores que sus elementos correspondientes de un segundo vector entero largo.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
          <source>The resulting long integer vector.</source>
          <target state="translated">Vector entero largo resultante.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
          <source>Returns a new integral vector whose elements signal whether the elements in one single-precision vector are less than their corresponding elements in a second single-precision vector.</source>
          <target state="translated">Devuelve un nuevo vector entero cuyos elementos indican si los elementos de un vector de precisión sencilla son menores que sus elementos correspondientes de un segundo vector de precisión sencilla.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
          <source>The resulting integral vector.</source>
          <target state="translated">Vector entero resultante.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.LessThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.LessThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>Returns a new vector of a specified type whose elements signal whether the elements in one vector are less than their corresponding elements in the second vector.</source>
          <target state="translated">Devuelve un nuevo vector de un tipo especificado cuyos elementos indican si los elementos de un vector son menores que sus elementos correspondientes del segundo vector.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The resulting vector.</source>
          <target state="translated">Vector resultante.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.LessThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.LessThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>Returns a value that indicates whether all of the elements in the first vector are less than their corresponding elements in the second vector.</source>
          <target state="translated">Devuelve un valor que indica si todos los elementos del primer vector son menores que los elementos correspondientes del segundo vector.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if all of the elements in <ph id="ph2">&lt;paramref name="left" /&gt;</ph> are less than the corresponding elements in <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise,  <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si todos los elementos de <ph id="ph2">&lt;paramref name="left" /&gt;</ph> son menores que los elementos correspondientes de <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; de lo contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.LessThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.LessThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>Returns a value that indicates whether any element in the first vector is less than the corresponding element in the second vector.</source>
          <target state="translated">Devuelve un valor que indica si algún elemento elemento del primer vector es menor que el elemento correspondiente del segundo vector.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if any element in <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than the corresponding element in <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise,  <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si algún elemento de <ph id="ph2">&lt;paramref name="left" /&gt;</ph> es menor que el elemento correspondiente de <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; de lo contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
          <source>Returns a new integral vector whose elements signal whether the elements in one double-precision floating-point vector are less than or equal to their corresponding elements in a second double-precision floating-point vector.</source>
          <target state="translated">Devuelve un nuevo vector entero cuyos elementos indican si los elementos de un vector de punto flotante de doble precisión son menores o iguales que sus elementos correspondientes de un segundo vector de punto flotante de doble precisión.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
          <source>The resulting integral vector.</source>
          <target state="translated">Vector entero resultante.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
          <source>Returns a new integral vector whose elements signal whether the elements in one integral vector are less than or equal to their corresponding elements in a second integral vector.</source>
          <target state="translated">Devuelve un nuevo vector entero cuyos elementos indican si los elementos de un vector entero son menores o iguales que sus elementos correspondientes de un segundo vector entero.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
          <source>The resulting integral vector.</source>
          <target state="translated">Vector entero resultante.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
          <source>Returns a new long integer vector whose elements signal whether the elements in one long integer vector are less or equal to their corresponding elements in a second long integer vector.</source>
          <target state="translated">Devuelve un nuevo vector entero largo cuyos elementos indican si los elementos de un vector entero largo son menores o iguales que sus elementos correspondientes de un segundo vector entero largo.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
          <source>The resulting long integer vector.</source>
          <target state="translated">Vector entero largo resultante.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
          <source>Returns a new integral vector whose elements signal whether the elements in one single-precision floating-point vector are less than or equal to their corresponding elements in a second single-precision floating-point vector.</source>
          <target state="translated">Devuelve un nuevo vector entero cuyos elementos indican si los elementos de un vector de punto flotante de precisión sencilla son menores o iguales que sus elementos correspondientes de un segundo vector de punto flotante de precisión sencilla.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
          <source>The resulting integral vector.</source>
          <target state="translated">Vector entero resultante.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.LessThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.LessThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>Returns a new vector whose elements signal whether the elements in one vector are less than or equal to their corresponding elements in the second vector.</source>
          <target state="translated">Devuelve un nuevo vector cuyos elementos indican si los elementos de un vector son menores o iguales que sus elementos correspondientes del segundo vector.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The resulting vector.</source>
          <target state="translated">Vector resultante.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.LessThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.LessThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>Returns a value that indicates whether all elements in the first vector are less than or equal to their corresponding elements in the second vector.</source>
          <target state="translated">Devuelve un valor que indica si todos los elementos del primer vector son menores o iguales que los elementos correspondientes del segundo vector.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if all of the elements in <ph id="ph2">&lt;paramref name="left" /&gt;</ph> are less than or equal to the corresponding elements in <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise,  <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si todos los elementos de <ph id="ph2">&lt;paramref name="left" /&gt;</ph> son menores o iguales que los elementos correspondientes de <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; de lo contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.LessThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.LessThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>Returns a value that indicates whether any element in the first vector is less than or equal to the corresponding element in the second vector.</source>
          <target state="translated">Devuelve un valor que indica si algún elemento del primer vector es menor o igual que el elemento correspondiente del segundo vector.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.LessThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if any element in <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than or equal to the corresponding element in <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise,  <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si algún elemento de <ph id="ph2">&lt;paramref name="left" /&gt;</ph> es menor o igual que el elemento correspondiente de <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; de lo contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.Max``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.Max``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Max``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Max``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Max``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>Returns a new vector whose elements are the maximum of each pair of elements in the two given vectors.</source>
          <target state="translated">Devuelve un nuevo vector cuyos elementos son el máximo de cada par de elementos de dos vectores dados.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Max``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The maximum vector.</source>
          <target state="translated">Vector máximo.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.Min``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.Min``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Min``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The first vector to compare.</source>
          <target state="translated">Primer vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Min``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The second vector to compare.</source>
          <target state="translated">Segundo vector que se va a comparar.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Min``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>Returns a new vector whose elements are the minimum of each pair of elements in the two given vectors.</source>
          <target state="translated">Devuelve un nuevo vector cuyos elementos son el mínimo de cada par de elementos de dos vectores dados.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Min``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The minimum vector.</source>
          <target state="translated">Vector mínimo.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The first vector.</source>
          <target state="translated">Primer vector.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The second vector.</source>
          <target state="translated">Segundo vector.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>Returns a new vector whose values are the product of each pair of elements in two specified vectors.</source>
          <target state="translated">Devuelve un nuevo vector cuyos valores son el producto de cada par de elementos de dos vectores especificados.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The product vector.</source>
          <target state="translated">Vector del producto.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},``0)">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},``0)">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},``0)">
          <source>The vector.</source>
          <target state="translated">Vector.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},``0)">
          <source>The scalar value.</source>
          <target state="translated">Valor escalar.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},``0)">
          <source>Returns a new vector whose values are the values of a specified vector each multiplied by a scalar value.</source>
          <target state="translated">Devuelve un nuevo vector cuyos valores son los valores de un vector especificado, multiplicado cada uno por un valor escalar.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},``0)">
          <source>The scaled vector.</source>
          <target state="translated">Vector escalado.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.Multiply``1(``0,System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.Multiply``1(``0,System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Multiply``1(``0,System.Numerics.Vector{``0})">
          <source>The scalar value.</source>
          <target state="translated">Valor escalar.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Multiply``1(``0,System.Numerics.Vector{``0})">
          <source>The vector.</source>
          <target state="translated">Vector.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Multiply``1(``0,System.Numerics.Vector{``0})">
          <source>Returns a new vector whose values are a scalar value multiplied by each of the values of a specified vector.</source>
          <target state="translated">Devuelve un nuevo vector cuyos valores son un valor escalar multiplicado por cada uno de los valores de un vector especificado.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Multiply``1(``0,System.Numerics.Vector{``0})">
          <source>The scaled vector.</source>
          <target state="translated">Vector escalado.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.Negate``1(System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.Negate``1(System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Negate``1(System.Numerics.Vector{``0})">
          <source>The source vector.</source>
          <target state="translated">Vector de origen.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Negate``1(System.Numerics.Vector{``0})">
          <source>Returns a new vector whose elements are the negation of the corresponding element in the specified vector.</source>
          <target state="translated">Devuelve un nuevo vector cuyos elementos son la negación del elemento correspondiente del vector especificado.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Negate``1(System.Numerics.Vector{``0})">
          <source>The negated vector.</source>
          <target state="translated">Vector convertido en negativo.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.OnesComplement``1(System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.OnesComplement``1(System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.OnesComplement``1(System.Numerics.Vector{``0})">
          <source>The source vector.</source>
          <target state="translated">Vector de origen.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.OnesComplement``1(System.Numerics.Vector{``0})">
          <source>Returns a new vector whose elements are obtained by taking the one's complement of a specified vector's elements.</source>
          <target state="translated">Devuelve un nuevo vector cuyos elementos se obtienen tomando el complemento de uno de los elementos de un vector especificado.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.OnesComplement``1(System.Numerics.Vector{``0})">
          <source>The resulting vector.</source>
          <target state="translated">Vector resultante.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.SquareRoot``1(System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.SquareRoot``1(System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.SquareRoot``1(System.Numerics.Vector{``0})">
          <source>The source vector.</source>
          <target state="translated">Vector de origen.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.SquareRoot``1(System.Numerics.Vector{``0})">
          <source>Returns a new vector whose elements are the square roots of a specified vector's elements.</source>
          <target state="translated">Devuelve un nuevo vector cuyos elementos son la raíz cuadrada de los elementos de un vector especificado.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.SquareRoot``1(System.Numerics.Vector{``0})">
          <source>The square root vector.</source>
          <target state="translated">Raíz cuadrada del vector.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.Subtract``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.Subtract``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Subtract``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The first vector.</source>
          <target state="translated">Primer vector.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Subtract``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The second vector.</source>
          <target state="translated">Segundo vector.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Subtract``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>Returns a new vector whose values are the difference between the elements in the second vector and their corresponding elements in the first vector.</source>
          <target state="translated">Devuelve un nuevo vector cuyos valores son la diferencia entre los elementos del segundo vector y los elementos correspondientes del primer vector.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Subtract``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The difference vector.</source>
          <target state="translated">Vector de diferencia.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.Xor``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The vector type.</source>
          <target state="translated">Tipo de vector.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector.Xor``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> puede ser cualquier tipo numérico primitivo.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Xor``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The first vector.</source>
          <target state="translated">Primer vector.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Xor``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The second vector.</source>
          <target state="translated">Segundo vector.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Xor``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>Returns a new vector by performing a bitwise exclusive Or (<ph id="ph1">&lt;see langword="XOr" /&gt;</ph>) operation on each pair of elements in two vectors.</source>
          <target state="translated">Devuelve un nuevo vector realizando una operación O exclusiva (<ph id="ph1">&lt;see langword="XOr" /&gt;</ph>) bit a bit en cada par de elementos de dos vectores.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector.Xor``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
          <source>The resulting vector.</source>
          <target state="translated">Vector resultante.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>