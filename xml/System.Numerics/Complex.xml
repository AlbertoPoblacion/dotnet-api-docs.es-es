<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Complex.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51adbe02d035bfc5cd2896e8b0e40079375718a5e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1adbe02d035bfc5cd2896e8b0e40079375718a5e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Numerics.Complex">
          <source>Represents a complex number.</source>
          <target state="translated">Representa un número complejo.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>A complex number is a number that comprises a real number part and an imaginary number part.</source>
          <target state="translated">Un número complejo es un número que consta de un número real y un elemento de número imaginario.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>A complex number z is usually written in the form z = x + yi, where <bpt id="p1">*</bpt>x<ept id="p1">*</ept> and <bpt id="p2">*</bpt>y<ept id="p2">*</ept> are real numbers, and <bpt id="p3">*</bpt>i<ept id="p3">*</ept> is the imaginary unit that has the property <bpt id="p4">*</bpt>i<ept id="p4">*</ept><bpt id="p5">&lt;sup&gt;</bpt>2<ept id="p5">&lt;/sup&gt;</ept> = -1.</source>
          <target state="translated">Una número complejo z se escribe normalmente en forma de z = x + yi, donde <bpt id="p1">*</bpt>x<ept id="p1">*</ept> y <bpt id="p2">*</bpt>y<ept id="p2">*</ept> son números reales, y <bpt id="p3">*</bpt><ept id="p3">*</ept> es la unidad imaginaria que tiene la propiedad <bpt id="p4">*</bpt><ept id="p4">*</ept><bpt id="p5">&lt;sup&gt;</bpt>2<ept id="p5">&lt;/sup&gt;</ept> = -1.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The real part of the complex number is represented by <bpt id="p1">*</bpt>x<ept id="p1">*</ept>, and the imaginary part of the complex number is represented by <bpt id="p2">*</bpt>y<ept id="p2">*</ept>.</source>
          <target state="translated">Representa la parte real del número complejo <bpt id="p1">*</bpt>x<ept id="p1">*</ept>, y la parte imaginaria del número complejo se representa mediante <bpt id="p2">*</bpt>y<ept id="p2">*</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> type uses the Cartesian coordinate system (real, imaginary) when instantiating and manipulating complex numbers.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> tipo utiliza el sistema de coordenadas cartesiano (real, imaginario) al crear instancias y manipular números complejos.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>A complex number can be represented as a point in a two-dimensional coordinate system, which is known as the complex plane.</source>
          <target state="translated">Un número complejo se puede representar como un punto en un sistema de coordenadas bidimensional, que se conoce como el plano complejo.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The real part of the complex number is positioned on the x-axis (the horizontal axis), and the imaginary part is positioned on the y-axis (the vertical axis).</source>
          <target state="translated">La parte real del número complejo se coloca en el eje x (el eje horizontal) y la parte imaginaria se coloca en el eje y (el eje vertical).</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Any point in the complex plane can also be expressed based on its absolute value, by using the polar coordinate system., In polar coordinates, a point is characterized by two numbers:</source>
          <target state="translated">Cualquier punto en el plano complejo también se puede expresar en función de su valor absoluto, usando el polar sistema de coordenadas., en coordenadas polares, un punto se caracteriza por dos números:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Its magnitude, which is the distance of the point from the origin (that is, 0,0, or the point at which the x-axis and the y-axis intersect).</source>
          <target state="translated">Su magnitud, que es la distancia del punto desde el origen (es decir, 0,0 o el punto en el que se cortan el eje x y el eje y).</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Its phase, which is the angle between the real axis and the line drawn from the origin to the point.</source>
          <target state="translated">Su fase, que es el ángulo entre el eje real y la línea que se dibuja desde el origen hasta el punto.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Instantiating a Complex Number</source>
          <target state="translated">Crear instancias de un número complejo</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>You can assign a value to a complex number in one of the following ways:</source>
          <target state="translated">Puede asignar un valor a un número complejo de una de las maneras siguientes:</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>By passing two <ph id="ph1">&lt;xref:System.Double&gt;</ph> values to its constructor.</source>
          <target state="translated">Pasando dos <ph id="ph1">&lt;xref:System.Double&gt;</ph> valores a su constructor.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The first value represents the real part of the complex number, and the second value represents its imaginary part.</source>
          <target state="translated">El primer valor representa la parte real del número complejo y el segundo valor representa su parte imaginaria.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>These values represent the position of the complex number in the two-dimensional Cartesian coordinate system.</source>
          <target state="translated">Estos valores representan la posición del número complejo en el sistema de coordenadas cartesiano bidimensional.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>By calling the static (<ph id="ph1">`Shared`</ph> in Visual Basic) <ph id="ph2">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A?displayProperty=nameWithType&gt;</ph> method to create a complex number from its polar coordinates.</source>
          <target state="translated">Mediante una llamada a estático (<ph id="ph1">`Shared`</ph> en Visual Basic) <ph id="ph2">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A?displayProperty=nameWithType&gt;</ph> método para crear un número complejo a partir de sus coordenadas polares.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>By assigning a <ph id="ph1">&lt;xref:System.Byte&gt;</ph>, <ph id="ph2">&lt;xref:System.SByte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph5">&lt;xref:System.Int32&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt32&gt;</ph>, <ph id="ph7">&lt;xref:System.Int64&gt;</ph>, <ph id="ph8">&lt;xref:System.UInt64&gt;</ph>, <ph id="ph9">&lt;xref:System.Single&gt;</ph>, or <ph id="ph10">&lt;xref:System.Double&gt;</ph> value to a <ph id="ph11">&lt;xref:System.Numerics.Complex&gt;</ph> object.</source>
          <target state="translated">Mediante la asignación de un <ph id="ph1">&lt;xref:System.Byte&gt;</ph>, <ph id="ph2">&lt;xref:System.SByte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph5">&lt;xref:System.Int32&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt32&gt;</ph>, <ph id="ph7">&lt;xref:System.Int64&gt;</ph>, <ph id="ph8">&lt;xref:System.UInt64&gt;</ph>, <ph id="ph9">&lt;xref:System.Single&gt;</ph>, o <ph id="ph10">&lt;xref:System.Double&gt;</ph> valor a un <ph id="ph11">&lt;xref:System.Numerics.Complex&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The value becomes the real part of the complex number, and its imaginary part equals 0.</source>
          <target state="translated">El valor se convierte en la parte real del número complejo y su parte imaginaria es igual a 0.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>By casting (in C#) or converting (in Visual Basic) a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> or <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value to a <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> object.</source>
          <target state="translated">Conversión (en C#) o convirtiendo (en Visual Basic) un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> o <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> valor a un <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The value becomes the real part of the complex number, and its imaginary part equals 0.</source>
          <target state="translated">El valor se convierte en la parte real del número complejo y su parte imaginaria es igual a 0.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>By assigning the complex number that is returned by a method or operator to a <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> object.</source>
          <target state="translated">Asignando el número complejo que es devuelto por un método u operador a un <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>For example, <ph id="ph1">&lt;xref:System.Numerics.Complex.Add%2A?displayProperty=nameWithType&gt;</ph> is a static method that returns a complex number that is the sum of two complex numbers, and the <ph id="ph2">&lt;xref:System.Numerics.Complex.op_Addition%2A?displayProperty=nameWithType&gt;</ph> operator adds two complex numbers and returns the result.</source>
          <target state="translated">Por ejemplo, <ph id="ph1">&lt;xref:System.Numerics.Complex.Add%2A?displayProperty=nameWithType&gt;</ph> es un método estático que devuelve un número complejo que es la suma de dos números complejos, y el <ph id="ph2">&lt;xref:System.Numerics.Complex.op_Addition%2A?displayProperty=nameWithType&gt;</ph> operador de suma dos números complejos y devuelve el resultado.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The following example demonstrates each of these five ways of assigning a value to a complex number.</source>
          <target state="translated">En el ejemplo siguiente se muestra cada uno de estos cinco formas de asignar un valor a un número complejo.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Operations with Complex Numbers</source>
          <target state="translated">Operaciones con números complejos</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> structure in the .NET Framework includes members that provide the following functionality:</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> estructura en .NET Framework incluye miembros que proporcionan la funcionalidad siguiente:</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Methods to compare two complex numbers to determine whether they are equal.</source>
          <target state="translated">Métodos para comparar dos números complejos para determinar si son iguales.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Operators to perform arithmetic operations on complex numbers.</source>
          <target state="translated">Operadores para realizar operaciones aritméticas en números complejos.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source><ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> operators enable you to perform addition, subtraction, multiplication, division, and unary negation with complex numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> los operadores permiten realizar suma, resta, multiplicación, división y negación unaria con números complejos.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Methods to perform other numerical operations on complex numbers.</source>
          <target state="translated">Métodos para realizar otras operaciones numéricas en números complejos.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>In addition to the four basic arithmetic operations, you can raise a complex number to a specified power, find the square root of a complex number, and get the absolute value of a complex number.</source>
          <target state="translated">Además de las cuatro operaciones aritméticas básicas, puede elevar un número complejo a una potencia especificada, buscar la raíz cuadrada de un número complejo y obtener el valor absoluto de un número complejo.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Methods to perform trigonometric operations on complex numbers.</source>
          <target state="translated">Métodos para realizar operaciones trigonométricas en números complejos.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>For example, you can calculate the tangent of an angle represented by a complex number.</source>
          <target state="translated">Por ejemplo, puede calcular la tangente de un ángulo representado por un número complejo.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Note that, because the <ph id="ph1">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> and  <ph id="ph2">&lt;xref:System.Numerics.Complex.Imaginary%2A&gt;</ph> properties are read-only, you cannot modify the value of an existing <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> object.</source>
          <target state="translated">Tenga en cuenta que, dado el <ph id="ph1">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Numerics.Complex.Imaginary%2A&gt;</ph> propiedades son de solo lectura, no se puede modificar el valor de un miembro de <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>All methods that perform an operation on a <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> number, if their return value is of type <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph>, return a new <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> number.</source>
          <target state="translated">Todos los métodos que realizan una operación en un <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> número, si su valor devuelto es de tipo <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph>, devuelven un nuevo <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> número.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Precision and Complex Numbers</source>
          <target state="translated">Precisión y números complejos</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The real and imaginary parts of a complex number are represented by two double-precision floating-point values.</source>
          <target state="translated">Las partes reales e imaginarias de un número complejo se representan mediante dos valores de punto flotante de precisión doble.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>This means that <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> values, like double-precision floating-point values, can lose precision as a result of numerical operations.</source>
          <target state="translated">Esto significa que <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> valores, como valores de punto flotante de precisión doble, pueden perder precisión como resultado de operaciones numéricas.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>This means that strict comparisons for equality of two <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> values may fail, even if the difference between the two values is due to a loss of precision.</source>
          <target state="translated">Esto significa que estricta comparaciones de igualdad de dos <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> valores pueden fallar, incluso si la diferencia entre los dos valores es debido a una pérdida de precisión.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Double&gt;</ph>.</source>
          <target state="translated">Para obtener más información, vea <ph id="ph1">&lt;xref:System.Double&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>For example, performing exponentiation on the logarithm of a number should return the original number.</source>
          <target state="translated">Por ejemplo, al realizar la exponenciación en el logaritmo de un número, debe devolver el número original.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>However, in some cases, the loss of precision of floating-point values can cause slight differences between the two values, as the following example illustrates.</source>
          <target state="translated">Sin embargo, en algunos casos, la pérdida de precisión de los valores de punto flotante puede producir ligeras diferencias entre los dos valores, como se muestra en el ejemplo siguiente.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Similarly, the following example, which calculates the square root of a <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> number, produces slightly different results on the 32-bit and IA64 versions of the .NET Framework.</source>
          <target state="translated">De igual forma, el ejemplo siguiente, que calcula la raíz cuadrada de un <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> número, genera resultados ligeramente diferentes en las versiones de IA64 de .NET Framework y de 32 bits.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Complex Numbers, Infinity, and NaN</source>
          <target state="translated">Números complejos, Infinity y NaN</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The real and imaginary parts of a complex number are represented by <ph id="ph1">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">Las partes reales e imaginarias de un número complejo se representan mediante <ph id="ph1">&lt;xref:System.Double&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>In addition to ranging from <ph id="ph1">&lt;xref:System.Double.MinValue?displayProperty=nameWithType&gt;</ph> to <ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>, the real or imaginary part of a complex number can have a value of <ph id="ph3">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, or <ph id="ph5">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Además de comprendido entre <ph id="ph1">&lt;xref:System.Double.MinValue?displayProperty=nameWithType&gt;</ph> a <ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>, la parte real o imaginaria de un número complejo puede tener un valor de <ph id="ph3">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, o <ph id="ph5">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source><ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, and <ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> all propagate in any arithmetic or trigonometric operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, y <ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> todos se propagan en cualquier operación aritmética o trigonométrica.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>In the following example, division by <ph id="ph1">&lt;xref:System.Numerics.Complex.Zero&gt;</ph> produces a complex number whose real and imaginary parts are both <ph id="ph2">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">En el ejemplo siguiente, la división por <ph id="ph1">&lt;xref:System.Numerics.Complex.Zero&gt;</ph> genera un número complejo cuyas partes reales e imaginarias son <ph id="ph2">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>As a result, performing multiplication with this value also produces a complex number whose real and imaginary parts are <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Como resultado, realizar la multiplicación con este valor también genera un número complejo cuyas partes reales e imaginarias son <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Similarly, performing a multiplication that overflows the range of the <ph id="ph1">&lt;xref:System.Double&gt;</ph> type produces a complex number whose real part is <ph id="ph2">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> and whose imaginary part is <ph id="ph3">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">De igual forma, realizar una multiplicación que desborda el intervalo de la <ph id="ph1">&lt;xref:System.Double&gt;</ph> tipo genera un número complejo cuya parte real es <ph id="ph2">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> y cuya parte imaginaria es <ph id="ph3">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Subsequently performing division with this complex number returns a complex number whose real part is <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> and whose imaginary part is <ph id="ph2">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Realizar la división con este número complejo posteriormente devuelve el número complejo cuya parte real es <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> y cuya parte imaginaria es <ph id="ph2">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Mathematical operations with complex numbers that are invalid or that overflow the range of the <ph id="ph1">&lt;xref:System.Double&gt;</ph> data type do not throw an exception.</source>
          <target state="translated">Operaciones matemáticas con números complejos que no son válidos o que desbordara el intervalo de la <ph id="ph1">&lt;xref:System.Double&gt;</ph> tipo de datos no producen una excepción.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Instead, they return a <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, or <ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> under the following conditions:</source>
          <target state="translated">En su lugar, devuelven un <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, o <ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> en las siguientes condiciones:</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The division of a positive number by zero returns <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">La división de un número positivo por cero devuelve <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Any operation that overflows the upper bound of the <ph id="ph1">&lt;xref:System.Double&gt;</ph> data type returns <ph id="ph2">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Cualquier operación que desborde el límite superior de la <ph id="ph1">&lt;xref:System.Double&gt;</ph> tipo de datos devuelve <ph id="ph2">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The division of a negative number by zero returns <ph id="ph1">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">La división de un número negativo por cero devuelve <ph id="ph1">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Any operation that overflows the lower bound of the <ph id="ph1">&lt;xref:System.Double&gt;</ph> data type returns <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Cualquier operación que desborde el límite inferior de la <ph id="ph1">&lt;xref:System.Double&gt;</ph> tipo de datos devuelve <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The division of a zero by zero returns <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">La división de un cero por cero devuelve <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Any operation that is performed on operands whose values are <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, or <ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> returns <ph id="ph4">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, or <ph id="ph6">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>, depending on the specific operation.</source>
          <target state="translated">Cualquier operación que se realiza en operandos cuyos valores son <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, o <ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> devuelve <ph id="ph4">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, o <ph id="ph6">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>, dependiendo de la operación específica.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Note that this applies to any intermediate calculations performed by a method.</source>
          <target state="translated">Tenga en cuenta que esto se aplica a cualquier cálculo intermedio realizado por un método.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>For example, the multiplication of <ph id="ph1">`new Complex(9e308, 9e308) and new Complex(2.5, 3.5)`</ph> uses the formula (ac - bd) + (ad + bc)i.</source>
          <target state="translated">Por ejemplo, la multiplicación de <ph id="ph1">`new Complex(9e308, 9e308) and new Complex(2.5, 3.5)`</ph> utiliza la fórmula (ac - bd) + (ad + bc).</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The calculation of the real component that results from the multiplication evaluates the expression 9e308 * 2.5 - 9e308 * 3.5.</source>
          <target state="translated">El cálculo del componente real que es el resultado de la multiplicación evalúa la expresión 9e308 * 2.5 - 9e308 * 3.5.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Each intermediate multiplication in this expression returns <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, and the attempt to subtract <ph id="ph2">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> from <ph id="ph3">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> returns <ph id="ph4">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Cada multiplicación intermedia en esta expresión devuelve <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>y el intento para restar <ph id="ph2">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> de <ph id="ph3">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> devuelve <ph id="ph4">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Formatting a Complex Number</source>
          <target state="translated">Aplicar formato a un número complejo</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>By default, the string representation of a complex number takes the form <ph id="ph1">`(`</ph><bpt id="p1">*</bpt>real<ept id="p1">*</ept><ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>imaginary<ept id="p2">*</ept><ph id="ph3">`)`</ph>, where <bpt id="p3">*</bpt>real<ept id="p3">*</ept> and <bpt id="p4">*</bpt>imaginary<ept id="p4">*</ept> are the string representations of the <ph id="ph4">&lt;xref:System.Double&gt;</ph> values that form the complex number's real and imaginary components.</source>
          <target state="translated">De forma predeterminada, la representación de cadena de un número complejo toma la forma <ph id="ph1">`(`</ph> <bpt id="p1">*</bpt>real<ept id="p1">*</ept> <ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>imaginaria<ept id="p2">*</ept><ph id="ph3">`)`</ph>, donde <bpt id="p3">*</bpt>real<ept id="p3">*</ept> y <bpt id="p4">*</bpt>imaginaria<ept id="p4">*</ept> son las representaciones de cadena de la <ph id="ph4">&lt;xref:System.Double&gt;</ph> valores que forman los componentes reales e imaginarias del número complejo.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Some overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.ToString%2A&gt;</ph> method allow customization of the string representations of these <ph id="ph2">&lt;xref:System.Double&gt;</ph> values to reflect the formatting conventions of a particular culture or to appear in a particular format defined by a standard or custom numeric format string.</source>
          <target state="translated">Algunas sobrecargas de la <ph id="ph1">&lt;xref:System.Numerics.Complex.ToString%2A&gt;</ph> método permiten la personalización de las representaciones de cadena de estos <ph id="ph2">&lt;xref:System.Double&gt;</ph> valores para reflejar las convenciones de formato de una referencia cultural determinada o que aparezcan en un formato concreto que se define mediante una cadena de formato numérico estándar o personalizada.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>(For more information, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.)</source>
          <target state="translated">(Para obtener más información, consulte <bpt id="p1">[</bpt>cadenas de formato numérico estándar<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> y <bpt id="p2">[</bpt>cadenas de formato numérico personalizado<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.)</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>One of the more common ways of expressing the string representation of a complex number takes the form a + bi, where a is the complex number's real component, and b is the complex number's imaginary component.</source>
          <target state="translated">Uno de los usos más comunes de expresar la representación de cadena de un número complejo toma la forma a + bi, donde una es el componente real del número complejo, y b es componente imaginario del número complejo.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>In electrical engineering, a complex number is most commonly expressed as a + bj.</source>
          <target state="translated">En la ingeniería de electricidad, de un número complejo se expresa normalmente como un + bj.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>You can return the string representation of a complex number in either of these two forms.</source>
          <target state="translated">Puede devolver la representación de cadena de un número complejo en cualquiera de estos dos formatos.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>To do this, define a custom format provider by implementing the <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> and <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> interfaces, and then call the <ph id="ph3">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Para ello, defina un proveedor de formato personalizado implementando la <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> y <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> interfaces y, después, llame el <ph id="ph3">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The following example defines a <ph id="ph1">`ComplexFormatter`</ph> class that represents a complex number as a string in the form of either a + bi or a + bj.</source>
          <target state="translated">En el ejemplo siguiente se define un <ph id="ph1">`ComplexFormatter`</ph> clase que representa un número complejo como una cadena con el formato de uno de ellos a + bi o + bj.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The following example then uses this custom formatter to display the string representation of a complex number.</source>
          <target state="translated">A continuación, en el ejemplo siguiente se usa a este formateador personalizado para mostrar la representación de cadena de un número complejo.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.#ctor(System.Double,System.Double)">
          <source>The real part of the complex number.</source>
          <target state="translated">Parte real del número complejo.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.#ctor(System.Double,System.Double)">
          <source>The imaginary part of the complex number.</source>
          <target state="translated">Parte imaginaria del número complejo.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.#ctor(System.Double,System.Double)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> structure using the specified real and imaginary values.</source>
          <target state="translated">Inicializa una nueva instancia de la estructura <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> utilizando el valor real y el valor imaginario especificados.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.#ctor(System.Double,System.Double)">
          <source>The <ph id="ph1">`real`</ph> or <ph id="ph2">`imaginary`</ph> arguments may lose precision if they are data types that require an explicit cast to <ph id="ph3">&lt;xref:System.Double&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">`real`</ph> o <ph id="ph2">`imaginary`</ph> argumentos podrán perder precisión si son tipos de datos que requieren una conversión explícita a <ph id="ph3">&lt;xref:System.Double&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.#ctor(System.Double,System.Double)">
          <source>The following example instantiates two complex numbers, and then uses them in addition, subtraction, multiplication, and division operations.</source>
          <target state="translated">En el ejemplo siguiente se crea una instancia de dos números complejos y, a continuación, se utiliza en operaciones de suma, resta, multiplicación y división.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">Número complejo.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>Gets the absolute value (or magnitude) of a complex number.</source>
          <target state="translated">Obtiene el valor absoluto (o magnitud) de un número complejo.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>The absolute value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Valor absoluto de <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>The absolute value of a complex number is equivalent to its <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> property.</source>
          <target state="translated">El valor absoluto de un número complejo es equivalente a su <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>The absolute value of a real number a + bi is calculated as follows:</source>
          <target state="translated">El valor absoluto de un número real un + bi se calcula como sigue:</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>If b = 0, the result is 0.</source>
          <target state="translated">Si b = 0, el resultado es 0.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>If a &gt; b, the result is a *<ph id="ph1">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>(1 + b<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept>/a<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>).</source>
          <target state="translated">Si un &gt; b, el resultado es un *<ph id="ph1">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>(1 + b<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept>/a<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>If b &gt; a, the result is b * <ph id="ph1">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>(1 + a<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept>/b<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>).</source>
          <target state="translated">Si b &gt;, el resultado es b * <ph id="ph1">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>(1 + un<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept>/b<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>If the calculation of the absolute value results in an overflow, the method returns either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si el cálculo del valor absoluto da como resultado un desbordamiento, el método devuelve <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> o <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>If either the <ph id="ph1">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Numerics.Complex.Imaginary%2A&gt;</ph> property is <ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> and the other property is neither <ph id="ph4">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> nor <ph id="ph5">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, the method returns <ph id="ph6">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si el <ph id="ph1">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Numerics.Complex.Imaginary%2A&gt;</ph> propiedad es <ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> y la otra propiedad no es ni <ph id="ph4">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> ni <ph id="ph5">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, el método devuelve <ph id="ph6">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>The following example calculates the absolute value of a complex number and demonstrates that it is equivalent to the value of the <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> property.</source>
          <target state="translated">En el ejemplo siguiente se calcula el valor absoluto de un número complejo y se muestra que es equivalente al valor de la <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
          <source>A complex number that represents a cosine.</source>
          <target state="translated">Número complejo que representa un coseno.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
          <source>Returns the angle that is the arc cosine of the specified complex number.</source>
          <target state="translated">Devuelve el ángulo que es el arco coseno del número complejo especificado.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
          <source>The angle, measured in radians, which is the arc cosine of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Ángulo, medido en radianes, que es el arco coseno de <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Acos%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> método para los números complejos corresponde a la <ph id="ph2">&lt;xref:System.Math.Acos%2A?displayProperty=nameWithType&gt;</ph> método para números reales.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> method uses the following formula:</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> método utiliza la fórmula siguiente:</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
          <source>(-<ph id="ph1">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph>) * <ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id="ph3">`value`</ph><ph id="ph4"> + </ph><ph id="ph5">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph><ph id="ph6">*</ph><ph id="ph7">&lt;xref:System.Numerics.Complex.Sqrt%2A&gt;</ph>(<ph id="ph8">&lt;xref:System.Numerics.Complex.One&gt;</ph><ph id="ph9"> - </ph><ph id="ph10">`value`</ph><ph id="ph11"> * </ph><ph id="ph12">`value`</ph>)))</source>
          <target state="translated">(-<ph id="ph1">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph>) * <ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id="ph3">`value`</ph><ph id="ph4"> + </ph><ph id="ph5">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph><ph id="ph6">*</ph><ph id="ph7">&lt;xref:System.Numerics.Complex.Sqrt%2A&gt;</ph>(<ph id="ph8">&lt;xref:System.Numerics.Complex.One&gt;</ph><ph id="ph9"> - </ph><ph id="ph10">`value`</ph><ph id="ph11"> * </ph><ph id="ph12">`value`</ph>)))</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> method.</source>
          <target state="translated">En el ejemplo siguiente se muestra el <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
          <source>It shows that passing the value returned by the <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> method to the <ph id="ph2">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph> method returns the original <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> value.</source>
          <target state="translated">Muestra que se pasa el valor devuelto por la <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> método a la <ph id="ph2">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph> método devuelve la versión original <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The first complex number to add.</source>
          <target state="translated">Primer número complejo que se va a sumar.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The second complex number to add.</source>
          <target state="translated">Segundo número complejo que se va a sumar.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Adds two complex numbers and returns the result.</source>
          <target state="translated">Suma dos valores complejos y devuelve el resultado.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The sum of <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">La suma de <ph id="ph1">&lt;paramref name="left" /&gt;</ph> y <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The addition of a complex number, a + bi, and a second complex number, c + di, takes the following form:</source>
          <target state="translated">La adición de un complejo número a + bi, y un segundo número complejo, c + inserción de dependencias, toma la forma siguiente:</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>(a + c) + (b + d)i.</source>
          <target state="translated">(a + c) + (b + d)i.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>If the method call results in an overflow in either the real or imaginary component, the value of the component is either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si la llamada al método produce un desbordamiento en el componente real o imaginario, el valor del componente es <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> o <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Languages that do not support custom operators can use the <ph id="ph1">&lt;xref:System.Numerics.Complex.Add%2A&gt;</ph> method to perform addition with complex numbers.</source>
          <target state="translated">Los lenguajes que no admiten operadores personalizados pueden usar el <ph id="ph1">&lt;xref:System.Numerics.Complex.Add%2A&gt;</ph> método para realizar la suma con números complejos.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The following example illustrates addition with complex numbers.</source>
          <target state="translated">En el ejemplo siguiente se muestra la suma con números complejos.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">Número complejo.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
          <source>Returns the angle that is the arc sine of the specified complex number.</source>
          <target state="translated">Devuelve el ángulo que es el arco seno del número complejo especificado.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
          <source>The angle which is the arc sine of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Ángulo que es el arco seno de <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Asin%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> método para los números complejos corresponde a la <ph id="ph2">&lt;xref:System.Math.Asin%2A?displayProperty=nameWithType&gt;</ph> método para números reales.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> method uses the following formula:</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> método utiliza la fórmula siguiente:</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
          <source><ph id="ph1">-</ph><ph id="ph2">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph><ph id="ph3"> * </ph><ph id="ph4">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id="ph5">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph> * value + <ph id="ph6">&lt;xref:System.Numerics.Complex.Sqrt%2A&gt;</ph>(<ph id="ph7">&lt;xref:System.Numerics.Complex.One&gt;</ph> - value * value))</source>
          <target state="translated"><ph id="ph1">-</ph><ph id="ph2">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph><ph id="ph3"> * </ph><ph id="ph4">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id="ph5">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph> * valor + <ph id="ph6">&lt;xref:System.Numerics.Complex.Sqrt%2A&gt;</ph>(<ph id="ph7">&lt;xref:System.Numerics.Complex.One&gt;</ph> -valor * valor))</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> method.</source>
          <target state="translated">En el ejemplo siguiente se muestra el <ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
          <source>It shows that passing the value returned by the <ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> method to the <ph id="ph2">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> method returns the original <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> value.</source>
          <target state="translated">Muestra que se pasa el valor devuelto por la <ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> método a la <ph id="ph2">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> método devuelve la versión original <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">Número complejo.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
          <source>Returns the angle that is the arc tangent of the specified complex number.</source>
          <target state="translated">Devuelve el ángulo que es el arco tangente del número complejo especificado.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
          <source>The angle that is the arc tangent of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Ángulo que es el arco tangente de <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Atan%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> método para los números complejos corresponde a la <ph id="ph2">&lt;xref:System.Math.Atan%2A?displayProperty=nameWithType&gt;</ph> método para números reales.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> method uses the following formula:</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> método utiliza la fórmula siguiente:</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
          <source><ph id="ph1">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph> / new Complex(2.0, 0.0)) * (<ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id="ph3">&lt;xref:System.Numerics.Complex.One&gt;</ph><ph id="ph4"> - </ph><ph id="ph5">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph> * value) - <ph id="ph6">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id="ph7">&lt;xref:System.Numerics.Complex.One&gt;</ph> + ImaginaryOne * value)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph> / nuevo complejo (2.0, 0,0)) * (<ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id="ph3">&lt;xref:System.Numerics.Complex.One&gt;</ph> <ph id="ph4"> - </ph> <ph id="ph5">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph> * valor)- <ph id="ph6">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id="ph7">&lt;xref:System.Numerics.Complex.One&gt;</ph> + ImaginaryOne * valor)</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> method.</source>
          <target state="translated">En el ejemplo siguiente se muestra el <ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
          <source>It shows that passing the value returned by the <ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> method to the <ph id="ph2">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> method returns the original <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> value.</source>
          <target state="translated">Muestra que se pasa el valor devuelto por la <ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> método a la <ph id="ph2">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> método devuelve la versión original <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Conjugate(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">Número complejo.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Conjugate(System.Numerics.Complex)">
          <source>Computes the conjugate of a complex number and returns the result.</source>
          <target state="translated">Calcula el conjugado de un número complejo y devuelve el resultado.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Conjugate(System.Numerics.Complex)">
          <source>The conjugate of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Conjugado de <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Conjugate(System.Numerics.Complex)">
          <source>The conjugate of a complex number inverts the sign of the imaginary component; that is, it applies unary negation to the imaginary component.</source>
          <target state="translated">El conjugado de un número complejo invierte el signo del componente imaginario; es decir, aplica la negación unaria al componente imaginario.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Conjugate(System.Numerics.Complex)">
          <source>If a + bi is a complex number, its conjugate is a - bi.</source>
          <target state="translated">Si un + bi es un número complejo, su conjugado es a - bi.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Conjugate(System.Numerics.Complex)">
          <source>The following example displays the conjugate of two complex numbers.</source>
          <target state="translated">En el ejemplo siguiente se muestra el conjugado de dos números complejos.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">Número complejo.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
          <source>Returns the cosine of the specified complex number.</source>
          <target state="translated">Devuelve el coseno del número complejo especificado.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
          <source>The cosine of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Coseno de <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Cos%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph> método para los números complejos corresponde a la <ph id="ph2">&lt;xref:System.Math.Cos%2A?displayProperty=nameWithType&gt;</ph> método para números reales.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph> method uses the following formula to calculate the cosine of the complex number a + bi:</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph> método usa la siguiente fórmula para calcular el coseno del número complejo a + bi:</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
          <source>(<ph id="ph1">&lt;xref:System.Math.Cos%2A&gt;</ph>(a) * <ph id="ph2">&lt;xref:System.Math.Cosh%2A&gt;</ph>(b), -(<ph id="ph3">&lt;xref:System.Math.Sin%2A&gt;</ph>(a) * <ph id="ph4">&lt;xref:System.Math.Sinh%2A&gt;</ph>(b)))</source>
          <target state="translated">(<ph id="ph1">&lt;xref:System.Math.Cos%2A&gt;</ph>(a) * <ph id="ph2">&lt;xref:System.Math.Cosh%2A&gt;</ph>(b), -(<ph id="ph3">&lt;xref:System.Math.Sin%2A&gt;</ph>(a) * <ph id="ph4">&lt;xref:System.Math.Sinh%2A&gt;</ph>(b)))</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> method.</source>
          <target state="translated">En el ejemplo siguiente se muestra el <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
          <source>It shows that passing the value returned by the <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> method to the <ph id="ph2">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph> method returns the original <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> value.</source>
          <target state="translated">Muestra que se pasa el valor devuelto por la <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> método a la <ph id="ph2">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph> método devuelve la versión original <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Cosh(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">Número complejo.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Cosh(System.Numerics.Complex)">
          <source>Returns the hyperbolic cosine of the specified complex number.</source>
          <target state="translated">Devuelve el coseno hiperbólico del número complejo especificado.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Cosh(System.Numerics.Complex)">
          <source>The hyperbolic cosine of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Coseno hiperbólico de <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Cosh(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Cosh%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Cosh%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.Cosh%2A&gt;</ph> método para los números complejos corresponde a la <ph id="ph2">&lt;xref:System.Math.Cosh%2A?displayProperty=nameWithType&gt;</ph> método para números reales.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Cosh(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Cosh%2A&gt;</ph> method uses the following formula to calculate the hyperbolic cosine of the complex number a + bi:</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.Cosh%2A&gt;</ph> método usa la siguiente fórmula para calcular el coseno hiperbólico del número complejo a + bi:</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Cosh(System.Numerics.Complex)">
          <source>(<ph id="ph1">&lt;xref:System.Math.Cosh%2A&gt;</ph>(a) * <ph id="ph2">&lt;xref:System.Math.Cos%2A&gt;</ph>(b), <ph id="ph3">&lt;xref:System.Math.Sinh%2A&gt;</ph>(a) * <ph id="ph4">&lt;xref:System.Math.Sin%2A&gt;</ph>(b))</source>
          <target state="translated">(<ph id="ph1">&lt;xref:System.Math.Cosh%2A&gt;</ph>(a) * <ph id="ph2">&lt;xref:System.Math.Cos%2A&gt;</ph>(b), <ph id="ph3">&lt;xref:System.Math.Sinh%2A&gt;</ph>(a) * <ph id="ph4">&lt;xref:System.Math.Sin%2A&gt;</ph>(b))</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The complex number to be divided.</source>
          <target state="translated">Número complejo que se va a dividir.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The complex number to divide by.</source>
          <target state="translated">Número complejo por el cual se va a dividir.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Divides one complex number by another and returns the result.</source>
          <target state="translated">Divide un número complejo por otro y devuelve el resultado.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The quotient of the division.</source>
          <target state="translated">Cociente de la división.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The division of a complex number, a + bi, by a second complex number, number, c + di, takes the following form:</source>
          <target state="translated">La división de un número complejo, un + bi, por un segundo número complejo, número, c + di, toma la forma siguiente:</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>((ac + bd) / (c<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept> + d<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>)) + ((bc - ad) / (c<bpt id="p3">&lt;sup&gt;</bpt>2<ept id="p3">&lt;/sup&gt;</ept> + d<bpt id="p4">&lt;sup&gt;</bpt>2<ept id="p4">&lt;/sup&gt;</ept>)i</source>
          <target state="translated">((AC + BD) / (c<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept> + d<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>)) + ((bc-ad) / (c<bpt id="p3">&lt;sup&gt;</bpt>2<ept id="p3">&lt;/sup&gt;</ept> + d<bpt id="p4">&lt;sup&gt;</bpt>2<ept id="p4">&lt;/sup&gt;</ept>)</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>If the calculation of the quotient results in an overflow in either the real or imaginary component, the value of that component is either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si el cálculo del cociente provoca un desbordamiento en el componente real o imaginario, el valor de ese componente sea <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> o <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Divide%2A&gt;</ph> method can be used by languages that do not support custom operators.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.Divide%2A&gt;</ph> método se puede utilizar lenguajes que no admiten operadores personalizados.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Its behavior is identical to division using the division operator.</source>
          <target state="translated">Su comportamiento es idéntico a la división utilizando el operador de división.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The following example divides a complex number by each element in an array of complex numbers.</source>
          <target state="translated">En el ejemplo siguiente se divide un número complejo por cada elemento de una matriz de números complejos.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="T:System.Numerics.Complex">
          <source>Returns a value that indicates whether two complex numbers are equal.</source>
          <target state="translated">Devuelve un valor que indica si dos números complejos son iguales.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>The complex number to compare.</source>
          <target state="translated">Número complejo que se va a comparar.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>Returns a value that indicates whether the current instance and a specified complex number have the same value.</source>
          <target state="translated">Devuelve un valor que indica si la instancia actual y el número complejo especificado tienen el mismo valor.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this complex number and <ph id="ph2">&lt;paramref name="value" /&gt;</ph> have the same value; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si este número complejo y <ph id="ph2">&lt;paramref name="value" /&gt;</ph> tienen el mismo valor; de lo contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> method provides the <ph id="ph2">&lt;xref:System.IEquatable%601&gt;</ph> implementation for the <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> structure.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> método proporciona la <ph id="ph2">&lt;xref:System.IEquatable%601&gt;</ph> implementación para el <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> estructura.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>It performs slightly better than <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Object%29&gt;</ph> method because it does not have to convert its parameter to a complex number.</source>
          <target state="translated">Tiene un rendimiento ligeramente mejor que <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Object%29&gt;</ph> método porque no tiene que convertir su parámetro en un número complejo.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>Two complex numbers are equal if their real parts are equal and their imaginary parts are equal.</source>
          <target state="translated">Dos números complejos son iguales si sus partes reales son iguales y sus partes imaginarias son iguales.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> method is equivalent to the following expression:</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> método es equivalente a la siguiente expresión:</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>Use the <ph id="ph1">&lt;see cref="M:System.Numerics.Complex.Equals(System.Numerics.Complex)" /&gt;</ph> method with caution, because two values that are apparently equivalent can be considered unequal due to the differing precision of their real and imaginary components.</source>
          <target state="translated">Use la <ph id="ph1">&lt;see cref="M:System.Numerics.Complex.Equals(System.Numerics.Complex)" /&gt;</ph> método con precaución, porque dos valores que son aparentemente equivalentes pueden considerarse iguales debido a la precisión distintas de sus componentes reales e imaginarias.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>The following example reports that <bpt id="p1">&lt;c&gt;</bpt>(3.33333, 0.142857)<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>(10/3, 1/7)<ept id="p2">&lt;/c&gt;</ept> are not equal.</source>
          <target state="translated">En el ejemplo siguiente se notifica que <bpt id="p1">&lt;c&gt;</bpt>(3.33333, 0.142857)<ept id="p1">&lt;/c&gt;</ept> y <bpt id="p2">&lt;c&gt;</bpt>(10/3, 1/7)<ept id="p2">&lt;/c&gt;</ept> no son iguales.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>One recommended technique is to define an acceptable margin of difference between the two values (such as .01% of one of the values' real and imaginary components) instead of comparing the values for equality.</source>
          <target state="translated">Una técnica recomendada consiste en definir un margen aceptable de diferencia entre los dos valores (como. 01% de uno de reales e imaginarias componentes los valores) en lugar de comparar los valores de igualdad.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>If the absolute value of the difference between the two values is less than or equal to that margin, the difference is likely to be due to a difference in precision, and, therefore, the values are likely to be equal.</source>
          <target state="translated">Si el valor absoluto de la diferencia entre los dos valores es menor o igual que el margen, la diferencia es probable que sea debido a una diferencia en precisión y, por lo tanto, los valores suelen ser iguales.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>The following example uses this technique to compare the two complex values that the previous code example found to be unequal.</source>
          <target state="translated">En el ejemplo siguiente se utiliza esta técnica para comparar los dos valores complejos que en el ejemplo de código anterior se encuentra como iguales.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>It finds the two complex numbers to be equal.</source>
          <target state="translated">Encuentra los dos números complejos son iguales.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>The object to compare.</source>
          <target state="translated">Objeto que se va a comparar.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>Returns a value that indicates whether the current instance and a specified object have the same value.</source>
          <target state="translated">Devuelve un valor que indica si la instancia actual y un objeto especificado tienen el mismo valor.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> parameter is a <ph id="ph3">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> object or a type capable of implicit conversion to a <ph id="ph4">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> object, and its value is equal to the current <ph id="ph5">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> object; otherwise, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el parámetro <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> es un objeto <ph id="ph3">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> o un tipo capaz de realizar una conversión implícita a un objeto <ph id="ph4">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph>, y su valor es igual al valor del objeto <ph id="ph5">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> actual; de lo contrario, es <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>Two complex numbers are equal if their real parts are equal and their imaginary parts are equal.</source>
          <target state="translated">Dos números complejos son iguales si sus partes reales son iguales y sus partes imaginarias son iguales.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Object%29&gt;</ph> method is equivalent to the following expression:</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Object%29&gt;</ph> método es equivalente a la siguiente expresión:</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>If the <ph id="ph1">`obj`</ph> parameter is not a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object, but it is a data type for which an implicit conversion is defined, the <ph id="ph3">&lt;xref:System.Numerics.Complex.Equals%28System.Object%29&gt;</ph> method converts <ph id="ph4">`obj`</ph> to a <ph id="ph5">&lt;xref:System.Numerics.Complex&gt;</ph> object whose real part is equal to the value of <ph id="ph6">`obj`</ph> and whose imaginary part is equal to zero before it performs the comparison.</source>
          <target state="translated">Si el <ph id="ph1">`obj`</ph> parámetro no es un <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> objeto, pero es un tipo de datos para el que se define una conversión implícita, el <ph id="ph3">&lt;xref:System.Numerics.Complex.Equals%28System.Object%29&gt;</ph> método convierte <ph id="ph4">`obj`</ph> a una <ph id="ph5">&lt;xref:System.Numerics.Complex&gt;</ph> objeto cuya parte real es igual al valor de <ph id="ph6">`obj`</ph> y cuya parte imaginaria es igual a cero antes de realizar la comparación.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>The following example illustrates this by finding that a complex number and a double-precision floating-point value are equal.</source>
          <target state="translated">En el ejemplo siguiente se ilustra esto detecta que un número complejo y un valor de punto flotante de doble precisión son iguales.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>Use the <ph id="ph1">&lt;see cref="M:System.Numerics.Complex.Equals(System.Numerics.Complex)" /&gt;</ph> method with caution, because two values that are apparently equivalent can be considered unequal due to the differing precision of their real and imaginary components.</source>
          <target state="translated">Use la <ph id="ph1">&lt;see cref="M:System.Numerics.Complex.Equals(System.Numerics.Complex)" /&gt;</ph> método con precaución, porque dos valores que son aparentemente equivalentes pueden considerarse iguales debido a la precisión distintas de sus componentes reales e imaginarias.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>The problem can be accentuated if <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> must be converted to a <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> before performing the comparison.</source>
          <target state="translated">El problema puede ser acentúa si <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> deben convertirse en un <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> antes de realizar la comparación.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>The following example compares a complex number whose real component appears to be equal to a <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> value with that <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> value.</source>
          <target state="translated">En el ejemplo siguiente se compara un número complejo cuyo componente real parece ser igual a un <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> valor con el que <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>As the output shows, the comparison for equality returns <ph id="ph1">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated">Tal y como se muestra el resultado, la comparación de igualdad devuelve <ph id="ph1">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>One recommended technique is to define an acceptable margin of difference between the two values (such as .01% of one of the values' real and imaginary components) instead of comparing the values for equality.</source>
          <target state="translated">Una técnica recomendada consiste en definir un margen aceptable de diferencia entre los dos valores (como. 01% de uno de reales e imaginarias componentes los valores) en lugar de comparar los valores de igualdad.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>If the absolute value of the difference between the two values is less than or equal to that margin, the difference is likely to be due to a difference in precision and, therefore, the values are likely to be equal.</source>
          <target state="translated">Si el valor absoluto de la diferencia entre los dos valores es menor o igual que el margen, la diferencia es probable que sea debido a una diferencia en precisión y, por lo tanto, los valores suelen ser iguales.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>The following example uses this technique to compare the two values that the previous code example found to be unequal.</source>
          <target state="translated">En el ejemplo siguiente se utiliza esta técnica para comparar los dos valores que en el ejemplo de código anterior se encuentra como iguales.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>It now finds them to be equal.</source>
          <target state="translated">Ahora busca que sean iguales.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
          <source>A complex number that specifies a power.</source>
          <target state="translated">Número complejo que especifica una potencia.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
          <source>Returns <ph id="ph1">&lt;see langword="e" /&gt;</ph> raised to the power specified by a complex number.</source>
          <target state="translated">Devuelve un número <ph id="ph1">&lt;see langword="e" /&gt;</ph> elevado a la potencia especificada por un número complejo.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
          <source>The number <ph id="ph1">&lt;see langword="e" /&gt;</ph> raised to the power <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Número <ph id="ph1">&lt;see langword="e" /&gt;</ph> elevado a la potencia <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
          <source>Use the <ph id="ph1">&lt;xref:System.Numerics.Complex.Pow%2A&gt;</ph> method to calculate the powers of other bases.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.Numerics.Complex.Pow%2A&gt;</ph> método para calcular las potencias de otras bases de datos.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Exp%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> método para los números complejos corresponde a la <ph id="ph2">&lt;xref:System.Math.Exp%2A?displayProperty=nameWithType&gt;</ph> método para números reales.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
          <source><ph id="ph1">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> is the inverse of <ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> es el inverso del <ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> method.</source>
          <target state="translated">En el ejemplo siguiente se muestra el <ph id="ph1">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
          <source>It shows that, with some allowance for the lack of precision of the <ph id="ph1">&lt;xref:System.Double&gt;</ph> data type, passing the value returned by the <ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph> method to the <ph id="ph3">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> method returns the original <ph id="ph4">&lt;xref:System.Numerics.Complex&gt;</ph> value.</source>
          <target state="translated">Muestra que, con alguna concesión para la falta de precisión de la <ph id="ph1">&lt;xref:System.Double&gt;</ph> tipo de datos, pasando el valor devuelto por la <ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph> método a la <ph id="ph3">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> método devuelve la versión original <ph id="ph4">&lt;xref:System.Numerics.Complex&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>The magnitude, which is the distance from the origin (the intersection of the x-axis and the y-axis) to the number.</source>
          <target state="translated">Magnitud, que es la distancia del origen (la intersección de los ejes X e Y) al número.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>The phase, which is the angle from the line to the horizontal axis, measured in radians.</source>
          <target state="translated">Fase, que es el ángulo desde la línea al eje horizontal, medido en radianes.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>Creates a complex number from a point's polar coordinates.</source>
          <target state="translated">Crea un número complejo a partir de las coordenadas polares de un punto.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>A complex number.</source>
          <target state="translated">Número complejo.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> method instantiates a complex number based on its polar coordinates.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> método crea una instancia de un número complejo basándose en sus coordenadas polares.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>Because there are multiple representations of a point on a complex plane, the return value of the <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> method is normalized.</source>
          <target state="translated">Puesto que existen varias representaciones de un punto en un plano complejo, el valor devuelto de la <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> método se normaliza.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>The magnitude is normalized to a positive number, and the phase is normalized to a value in the range of -<ph id="ph1">&lt;xref:System.Math.PI&gt;</ph> to <ph id="ph2">&lt;xref:System.Math.PI&gt;</ph>.</source>
          <target state="translated">La magnitud se normaliza respecto a un número positivo y la fase se normaliza respecto a un valor en el intervalo de -<ph id="ph1">&lt;xref:System.Math.PI&gt;</ph> a <ph id="ph2">&lt;xref:System.Math.PI&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>As a result, the values of the <ph id="ph1">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> properties of the resulting complex number may not equal the original values of the <ph id="ph3">`magnitude`</ph> and <ph id="ph4">`phase`</ph> parameters.</source>
          <target state="translated">Como resultado, los valores de la <ph id="ph1">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> propiedades del número complejo resultante no pueden ser igual a los valores originales de la <ph id="ph3">`magnitude`</ph> y <ph id="ph4">`phase`</ph> parámetros.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>To convert a value from degrees to radians for the <ph id="ph1">`phase`</ph> parameter, multiply it by <ph id="ph2">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph>/180.</source>
          <target state="translated">Para convertir un valor de grados en radianes para el <ph id="ph1">`phase`</ph> parámetro, multiplicación; para ello  <ph id="ph2">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph> /180.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> method to instantiate a complex number based on its polar coordinates and then displays the value of its <ph id="ph2">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph> properties.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> método para crear una instancia de un número complejo basándose en sus coordenadas polares y, a continuación, muestra el valor de su <ph id="ph2">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> y <ph id="ph3">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph> propiedades.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.GetHashCode">
          <source>Returns the hash code for the current <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> object.</source>
          <target state="translated">Devuelve el código hash del objeto <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Código hash de un entero de 32 bits con signo.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="P:System.Numerics.Complex.Imaginary">
          <source>Gets the imaginary component of the current <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> object.</source>
          <target state="translated">Obtiene el componente imaginario del objeto <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Imaginary">
          <source>The imaginary component of a complex number.</source>
          <target state="translated">Componente imaginario de un número complejo.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Imaginary">
          <source>Given a complex number a + bi, the <ph id="ph1">&lt;xref:System.Numerics.Complex.Imaginary%2A&gt;</ph> property returns the value of b.</source>
          <target state="translated">Dado un número complejo a + bi, el <ph id="ph1">&lt;xref:System.Numerics.Complex.Imaginary%2A&gt;</ph> propiedad devuelve el valor de b.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Imaginary">
          <source>The following example instantiates an array of <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> objects and displays the real and imaginary components of each in the form a + bi.</source>
          <target state="translated">El ejemplo siguiente crea una matriz de <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> objetos y muestra los componentes reales e imaginarios de cada uno en el formulario a + bi.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="F:System.Numerics.Complex.ImaginaryOne">
          <source>Returns a new <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> instance with a real number equal to zero and an imaginary number equal to one.</source>
          <target state="translated">Devuelve una nueva instancia de <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> con un número real igual a cero y un número imaginario igual a uno.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.ImaginaryOne">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> value by using the <ph id="ph2">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph> property.</source>
          <target state="translated">El ejemplo siguiente crea un <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> valor mediante el uso de la <ph id="ph2">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.ImaginaryOne">
          <source>It then compares this value to another value that is instantiated by calling the <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> constructor with a real part equal to zero and an imaginary part equal to one.</source>
          <target state="translated">A continuación, compara este valor con otro valor cuyas instancias se crean mediante una llamada a la <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> constructor con una parte real igual a cero y una parte imaginaria igual a uno.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.ImaginaryOne">
          <source>As the output from the example shows, the two values are equal.</source>
          <target state="translated">Como se muestra en el resultado del ejemplo, los dos valores son iguales.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="T:System.Numerics.Complex">
          <source>Returns the logarithm of a complex number.</source>
          <target state="translated">Devuelve el logaritmo de un número complejo.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">Número complejo.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex)">
          <source>Returns the natural (base <ph id="ph1">&lt;see langword="e" /&gt;</ph>) logarithm of a specified complex number.</source>
          <target state="translated">Devuelve el logaritmo natural (en la base <ph id="ph1">&lt;see langword="e" /&gt;</ph>) del número complejo especificado.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex)">
          <source>The natural (base <ph id="ph1">&lt;see langword="e" /&gt;</ph>) logarithm of <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Logaritmo natural (en la base <ph id="ph1">&lt;see langword="e" /&gt;</ph>) de <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Log%28System.Numerics.Complex%29&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Log%28System.Double%29?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.Log%28System.Numerics.Complex%29&gt;</ph> método para los números complejos corresponde a la <ph id="ph2">&lt;xref:System.Math.Log%28System.Double%29?displayProperty=nameWithType&gt;</ph> método para números reales.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph> method.</source>
          <target state="translated">En el ejemplo siguiente se muestra el <ph id="ph1">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex)">
          <source>It shows that, with some allowance for the lack of precision of the <ph id="ph1">&lt;xref:System.Double&gt;</ph> data type, passing the value returned by the <ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph> method to the <ph id="ph3">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> method returns the original <ph id="ph4">&lt;xref:System.Numerics.Complex&gt;</ph> value.</source>
          <target state="translated">Muestra que, con alguna concesión para la falta de precisión de la <ph id="ph1">&lt;xref:System.Double&gt;</ph> tipo de datos, pasando el valor devuelto por la <ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph> método a la <ph id="ph3">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> método devuelve la versión original <ph id="ph4">&lt;xref:System.Numerics.Complex&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex,System.Double)">
          <source>A complex number.</source>
          <target state="translated">Número complejo.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex,System.Double)">
          <source>The base of the logarithm.</source>
          <target state="translated">Base del logaritmo.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex,System.Double)">
          <source>Returns the logarithm of a specified complex number in a specified base.</source>
          <target state="translated">Devuelve el logaritmo del número complejo especificado en la base especificada.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex,System.Double)">
          <source>The logarithm of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> in base <ph id="ph2">&lt;paramref name="baseValue" /&gt;</ph>.</source>
          <target state="translated">Logaritmo de <ph id="ph1">&lt;paramref name="value" /&gt;</ph> en la base <ph id="ph2">&lt;paramref name="baseValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex,System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Log%28System.Numerics.Complex%2CSystem.Double%29&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Log%28System.Double%2CSystem.Double%29?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.Log%28System.Numerics.Complex%2CSystem.Double%29&gt;</ph> método para los números complejos corresponde a la <ph id="ph2">&lt;xref:System.Math.Log%28System.Double%2CSystem.Double%29?displayProperty=nameWithType&gt;</ph> método para números reales.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log10(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">Número complejo.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log10(System.Numerics.Complex)">
          <source>Returns the base-10 logarithm of a specified complex number.</source>
          <target state="translated">Devuelve el logaritmo en la base 10 del número complejo especificado.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log10(System.Numerics.Complex)">
          <source>The base-10 logarithm of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Logaritmo en la base 10 de <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Log10(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Log10%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Log10%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.Log10%2A&gt;</ph> método para los números complejos corresponde a la <ph id="ph2">&lt;xref:System.Math.Log10%2A?displayProperty=nameWithType&gt;</ph> método para números reales.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="P:System.Numerics.Complex.Magnitude">
          <source>Gets the magnitude (or absolute value) of a complex number.</source>
          <target state="translated">Obtiene la magnitud (o valor absoluto) de un número complejo.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>The magnitude of the current instance.</source>
          <target state="translated">Magnitud de la instancia actual.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> property is equivalent to the absolute value of a complex number.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> propiedad es equivalente al valor absoluto de un número complejo.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>It specifies the distance from the origin (the intersection of the x-axis and the y-axis in the Cartesian coordinate system) to the two-dimensional point represented by a complex number.</source>
          <target state="translated">Especifica la distancia desde el origen (la intersección del eje x y el eje y en el sistema de coordenadas cartesiano) al punto bidimensional representado por un número complejo.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>The absolute value is calculated as follows:</source>
          <target state="translated">El valor absoluto se calcula como sigue:</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>&amp;#124; a + bi &amp;#124; = <ph id="ph1">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>(a * a + b * b)</source>
          <target state="translated">&amp;#124; a + bi &amp;#124; = <ph id="ph1">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>(a * a + b * b)</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>If the calculation of the absolute value results in an overflow, this property returns either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si el cálculo del valor absoluto da como resultado un desbordamiento, esta propiedad devuelve <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> o <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph> properties define the position of a point that represents a complex number in the polar coordinate system.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph> propiedades definen la posición de un punto que representa un número complejo en el sistema de coordenadas polares.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>You can instantiate a complex number based on its polar coordinates instead of its Cartesian coordinates by calling the <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> method.</source>
          <target state="translated">Puede crear instancias de un número complejo basándose en sus coordenadas polares en lugar de sus coordenadas cartesianas mediante una llamada a la <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>The following example calculates the absolute value of a complex number and demonstrates that it is equivalent to the value of the <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> property.</source>
          <target state="translated">En el ejemplo siguiente se calcula el valor absoluto de un número complejo y se muestra que es equivalente al valor de la <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The first complex number to multiply.</source>
          <target state="translated">Primer número complejo que se va a multiplicar.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The second complex number to multiply.</source>
          <target state="translated">Segundo número complejo que se va a multiplicar.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Returns the product of two complex numbers.</source>
          <target state="translated">Devuelve el producto de dos números complejos.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The product of the <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph> parameters.</source>
          <target state="translated">Producto de los parámetros <ph id="ph1">&lt;paramref name="left" /&gt;</ph> y <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The multiplication of a complex number, a + bi, and a second complex number, c + di, takes the following form:</source>
          <target state="translated">La multiplicación de un complejo número a + bi, y un segundo número complejo, c + inserción de dependencias, toma la forma siguiente:</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>(ac - bd) + (ad + bc)i</source>
          <target state="translated">(ac - bd) + (ad + bc)</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>If the multiplication results in an overflow in either the real or imaginary component, the value of that component is either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si la multiplicación provoca un desbordamiento en el componente real o imaginario, el valor de ese componente sea <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> o <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Multiply%2A&gt;</ph> method is implemented for languages that do not support custom operators.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.Multiply%2A&gt;</ph> método se implementa para idiomas que no admiten operadores personalizados.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Its behavior is identical to multiplication using the multiplication operator.</source>
          <target state="translated">Su comportamiento es idéntico a la multiplicación utilizando el operador de multiplicación.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The following example multiples a complex number by each element in an array of complex numbers.</source>
          <target state="translated">En el ejemplo siguiente se multiplica un número complejo por cada elemento de una matriz de números complejos.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">Número complejo.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
          <source>Returns the additive inverse of a specified complex number.</source>
          <target state="translated">Devuelve el inverso aditivo de un número complejo especificado.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
          <source>The result of the <ph id="ph1">&lt;see cref="P:System.Numerics.Complex.Real" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Numerics.Complex.Imaginary" /&gt;</ph> components of the <ph id="ph3">&lt;paramref name="value" /&gt;</ph> parameter multiplied by -1.</source>
          <target state="translated">Resultado de multiplicar por -1 los componentes <ph id="ph1">&lt;see cref="P:System.Numerics.Complex.Real" /&gt;</ph> e <ph id="ph2">&lt;see cref="P:System.Numerics.Complex.Imaginary" /&gt;</ph> del parámetro <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
          <source>The additive inverse of a complex number is a complex number that produces a value of <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> when it is added to the original complex number.</source>
          <target state="translated">El inverso aditivo de un número complejo es un número complejo que genera un valor de <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> cuando se agrega al número complejo original.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
          <source>This method returns a complex number in which the real and imaginary components of the original complex number are multiplied by -1.</source>
          <target state="translated">Este método devuelve un número complejo en el que los componentes reales e imaginarios del número complejo original se multiplican por -1.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Negate%2A&gt;</ph> method is implemented for languages that do not support custom operators.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.Negate%2A&gt;</ph> método se implementa para idiomas que no admiten operadores personalizados.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
          <source>Its behavior is identical to negation using the unary negation operator, <ph id="ph1">&lt;xref:System.Numerics.Complex.op_UnaryNegation%2A&gt;</ph>.</source>
          <target state="translated">Su comportamiento es idéntico a la negación usando el operador unario de negación, <ph id="ph1">&lt;xref:System.Numerics.Complex.op_UnaryNegation%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
          <source>The following example obtains the additive inverse of each element in an array of complex numbers.</source>
          <target state="translated">En el ejemplo siguiente se obtiene el inverso aditivo de cada elemento de una matriz de números complejos.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="F:System.Numerics.Complex.One">
          <source>Returns a new <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> instance with a real number equal to one and an imaginary number equal to zero.</source>
          <target state="translated">Devuelve una nueva instancia de <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> con un número real igual a uno y un número imaginario igual a cero.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.One">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> value by using the <ph id="ph2">&lt;xref:System.Numerics.Complex.One&gt;</ph> property.</source>
          <target state="translated">El ejemplo siguiente crea un <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> valor mediante el uso de la <ph id="ph2">&lt;xref:System.Numerics.Complex.One&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.One">
          <source>It then compares this value to another value that is instantiated by calling the <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> constructor with a real part equal to one and an imaginary part equal to zero.</source>
          <target state="translated">A continuación, compara este valor con otro valor cuyas instancias se crean mediante una llamada a la <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> constructor con una parte real igual a uno y una parte imaginaria igual a cero.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.One">
          <source>As the output from the example shows, the two values are equal.</source>
          <target state="translated">Como se muestra en el resultado del ejemplo, los dos valores son iguales.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The first value to add.</source>
          <target state="translated">Primer valor que se va a sumar.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The second value to add.</source>
          <target state="translated">Segundo valor que se va a sumar.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Adds two complex numbers.</source>
          <target state="translated">Suma dos números complejos.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The sum of <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">La suma de <ph id="ph1">&lt;paramref name="left" /&gt;</ph> y <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Addition%2A&gt;</ph> method defines the addition operation for complex numbers.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Addition%2A&gt;</ph> método define la operación de suma de números complejos.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>It enables code such as the following:</source>
          <target state="translated">Permite que el código como el siguiente:</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The addition of a complex number, a + bi, and a second complex number, c + di, takes the following form:</source>
          <target state="translated">La adición de un complejo número a + bi, y un segundo número complejo, c + inserción de dependencias, toma la forma siguiente:</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>(a + c) + (b + d)i</source>
          <target state="translated">(a + c) + (b + d)</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>If the method call results in an overflow in either the real or imaginary component, the value of that component is either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si la llamada al método produce un desbordamiento en el componente real o imaginario, el valor de ese componente sea <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> o <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.Complex.Add%2A&gt;</ph> method instead.</source>
          <target state="translated">Los lenguajes que no admiten operadores personalizados pueden llamar el <ph id="ph1">&lt;xref:System.Numerics.Complex.Add%2A&gt;</ph> método en su lugar.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.Complex.Add%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">El método equivalente para este operador es <ph id="ph1">&lt;xref:System.Numerics.Complex.Add%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The following example illustrates addition with complex numbers.</source>
          <target state="translated">En el ejemplo siguiente se muestra la suma con números complejos.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The value to be divided.</source>
          <target state="translated">Valor que se va a dividir.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The value to divide by.</source>
          <target state="translated">Valor por el que se va a dividir.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Divides a specified complex number by another specified complex number.</source>
          <target state="translated">Divide el número complejo especificado por otro.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The result of dividing <ph id="ph1">&lt;paramref name="left" /&gt;</ph> by <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">Resultado de dividir <ph id="ph1">&lt;paramref name="left" /&gt;</ph> por <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Division%2A&gt;</ph> method defines the division operation for complex numbers.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Division%2A&gt;</ph> método define la operación de división para números complejos.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>It enables code such as the following:</source>
          <target state="translated">Permite que el código como el siguiente:</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The division of a complex number, a + bi, and a second complex number, c + di, takes the following form:</source>
          <target state="translated">La división de un complejo número a + bi, y un segundo número complejo, c + inserción de dependencias, toma la forma siguiente:</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>((ac + bd) / (c<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept> + d<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>)) + ((bc - ad) / (c<bpt id="p3">&lt;sup&gt;</bpt>2<ept id="p3">&lt;/sup&gt;</ept> + d<bpt id="p4">&lt;sup&gt;</bpt>2<ept id="p4">&lt;/sup&gt;</ept>)i</source>
          <target state="translated">((AC + BD) / (c<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept> + d<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>)) + ((bc-ad) / (c<bpt id="p3">&lt;sup&gt;</bpt>2<ept id="p3">&lt;/sup&gt;</ept> + d<bpt id="p4">&lt;sup&gt;</bpt>2<ept id="p4">&lt;/sup&gt;</ept>)</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>If the division results in an overflow in either the real or imaginary component, the value of that component is either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si la división provoca un desbordamiento en el componente real o imaginario, el valor de ese componente sea <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> o <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Languages that do not support custom operators and operator overloading can call the <ph id="ph1">&lt;xref:System.Numerics.Complex.Divide%2A&gt;</ph> method instead.</source>
          <target state="translated">Los lenguajes que no admiten operadores personalizados ni sobrecarga de operadores pueden llamar el <ph id="ph1">&lt;xref:System.Numerics.Complex.Divide%2A&gt;</ph> método en su lugar.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.Complex.Divide%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">El método equivalente para este operador es <ph id="ph1">&lt;xref:System.Numerics.Complex.Divide%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The first complex number to compare.</source>
          <target state="translated">Primer número complejo que se va a comparar.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The second complex number to compare.</source>
          <target state="translated">Segundo número complejo que se va a comparar.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Returns a value that indicates whether two complex numbers are equal.</source>
          <target state="translated">Devuelve un valor que indica si dos números complejos son iguales.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> parameters have the same value; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si los parámetros <ph id="ph2">&lt;paramref name="left" /&gt;</ph> y <ph id="ph3">&lt;paramref name="right" /&gt;</ph> tienen el mismo valor; de lo contrario, es <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Equality%2A&gt;</ph> method defines the operation of the equality operator for <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> values.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Equality%2A&gt;</ph> método define el funcionamiento del operador de igualdad para <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>It enables code such as the following:</source>
          <target state="translated">Permite que el código como el siguiente:</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> method instead.</source>
          <target state="translated">Los lenguajes que no admiten operadores personalizados pueden llamar el <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> método en su lugar.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Two complex numbers are equal if their real parts are equal and their imaginary parts are equal.</source>
          <target state="translated">Dos números complejos son iguales si sus partes reales son iguales y sus partes imaginarias son iguales.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Equality%2A&gt;</ph> method is equivalent to the following expression:</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Equality%2A&gt;</ph> método es equivalente a la siguiente expresión:</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Note that, because of differences in precision, two complex numbers that are apparently equivalent can be considered unequal.</source>
          <target state="translated">Tenga en cuenta que, debido a diferencias en precisión, dos números complejos que son aparentemente equivalentes pueden considerarse iguales.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>For more information and a possible workaround, see the <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> method.</source>
          <target state="translated">Para obtener más información y una posible solución alternativa, vea el <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%2A?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">El método equivalente para este operador es <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%2A?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="T:System.Numerics.Complex">
          <source>Defines an explicit conversion between a <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> object and another type.</source>
          <target state="translated">Define una conversión explícita entre un objeto <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> y otro tipo.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">Valor que se va a convertir en un número complejo.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value to a complex number.</source>
          <target state="translated">Define una conversión explícita de un valor <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> a un número complejo.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>A complex number that has a real component equal to <ph id="ph1">&lt;paramref name="value" /&gt;</ph> and an imaginary component equal to zero.</source>
          <target state="translated">Número complejo con un componente real igual a <ph id="ph1">&lt;paramref name="value" /&gt;</ph> y un componente imaginario igual a cero.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>Explicit conversion operators define types that can be converted to a <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> object.</source>
          <target state="translated">Operadores de conversión explícitos definen tipos que se pueden convertir en un <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">Los compiladores de lenguajes no realizan esta conversión automáticamente porque puede implicar pérdida de datos.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> in Visual Basic) is used.</source>
          <target state="translated">En su lugar, realizan la conversión solo si un operador de conversión (en C#) o una función de conversión (como <ph id="ph1">`CType`</ph> en Visual Basic) se utiliza.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">En caso contrario, muestra un error del compilador.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>The conversion of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to the real part of a complex number can result in a loss of precision because a <ph id="ph2">&lt;xref:System.Double&gt;</ph>, which is the type of the complex number's <ph id="ph3">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> property, has fewer significant digits than a <ph id="ph4">&lt;xref:System.Decimal&gt;</ph>.</source>
          <target state="translated">La conversión de un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valor para la parte real de un número complejo puede provocar una pérdida de precisión porque un <ph id="ph2">&lt;xref:System.Double&gt;</ph>, que es el tipo del número complejo <ph id="ph3">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> propiedad, tiene menos dígitos significativos que un <ph id="ph4">&lt;xref:System.Decimal&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>The following example illustrates the explicit conversion of <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values to <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> values.</source>
          <target state="translated">En el ejemplo siguiente se muestra la conversión explícita de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valores <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">Valor que se va a convertir en un número complejo.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value to a complex number.</source>
          <target state="translated">Define una conversión explícita de un valor <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> a un número complejo.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>A complex number that has a real component equal to <ph id="ph1">&lt;paramref name="value" /&gt;</ph> and an imaginary component equal to zero.</source>
          <target state="translated">Número complejo con un componente real igual a <ph id="ph1">&lt;paramref name="value" /&gt;</ph> y un componente imaginario igual a cero.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>Explicit conversion operators define types that can be converted to a <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> object.</source>
          <target state="translated">Operadores de conversión explícitos definen tipos que se pueden convertir en un <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">Los compiladores de lenguajes no realizan esta conversión automáticamente porque puede implicar pérdida de datos.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> in Visual Basic) is used.</source>
          <target state="translated">En su lugar, realizan la conversión solo si un operador de conversión (en C#) o una función de conversión (como <ph id="ph1">`CType`</ph> en Visual Basic) se utiliza.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">En caso contrario, muestra un error del compilador.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>The conversion of a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value to the real part of a complex number can result in a loss of precision because a <ph id="ph2">&lt;xref:System.Double&gt;</ph>, which is the type of the complex number's <ph id="ph3">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> property, has fewer significant digits than a <ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
          <target state="translated">La conversión de un <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> valor para la parte real de un número complejo puede provocar una pérdida de precisión porque un <ph id="ph2">&lt;xref:System.Double&gt;</ph>, que es el tipo del número complejo <ph id="ph3">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> propiedad, tiene menos dígitos significativos que un <ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>If the conversion is unsuccessful because the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is out of the range of the <ph id="ph2">&lt;xref:System.Double&gt;</ph> type, the operation does not throw an <ph id="ph3">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">Si la conversión se realiza correctamente porque el <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> valor está fuera del intervalo de la <ph id="ph2">&lt;xref:System.Double&gt;</ph> tipo, la operación no produce una excepción un <ph id="ph3">&lt;xref:System.OverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>Instead, if <ph id="ph1">`value`</ph> is less than <ph id="ph2">&lt;xref:System.Double.MinValue&gt;</ph>, the result is a complex number that has a <ph id="ph3">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> property value equal to <ph id="ph4">&lt;xref:System.Double.NegativeInfinity&gt;</ph>.</source>
          <target state="translated">En su lugar, si <ph id="ph1">`value`</ph> es menor que <ph id="ph2">&lt;xref:System.Double.MinValue&gt;</ph>, el resultado es un número complejo que tiene un <ph id="ph3">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> igual al valor de la propiedad <ph id="ph4">&lt;xref:System.Double.NegativeInfinity&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>If <ph id="ph1">`value`</ph> is greater than <ph id="ph2">&lt;xref:System.Double.MaxValue&gt;</ph>, the result is a complex number that has a <ph id="ph3">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> property value equal to <ph id="ph4">&lt;xref:System.Double.PositiveInfinity&gt;</ph>.</source>
          <target state="translated">Si <ph id="ph1">`value`</ph> es mayor que <ph id="ph2">&lt;xref:System.Double.MaxValue&gt;</ph>, el resultado es un número complejo que tiene un <ph id="ph3">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> igual al valor de la propiedad <ph id="ph4">&lt;xref:System.Double.PositiveInfinity&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>The following example illustrates the explicit conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values to <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> values.</source>
          <target state="translated">En el ejemplo siguiente se muestra la conversión explícita de <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> valores <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> valores.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="T:System.Numerics.Complex">
          <source>Defines an implicit conversion between a <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> object and another type.</source>
          <target state="translated">Define una conversión implícita entre un objeto <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> y otro tipo.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">Valor que se va a convertir en un número complejo.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex">
          <source>Defines an implicit conversion of an unsigned byte to a complex number.</source>
          <target state="translated">Define una conversión implícita de un byte sin signo en un número complejo.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated">Objeto que contiene el valor del parámetro <ph id="ph1">&lt;paramref name="value" /&gt;</ph> como número real y cero como número imaginario.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Las sobrecargas de la <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operador definen los tipos desde el que un compilador puede convertir automáticamente un <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> objeto sin un operador de conversión explícito (en C#) o una llamada a una función de conversión (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">Son conversiones de ampliación que no implican la pérdida de datos y no producen un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value to a complex number, as the following example shows.</source>
          <target state="translated">Esta sobrecarga permite al compilador administrar las conversiones de un <ph id="ph1">&lt;xref:System.Byte&gt;</ph> valor en un número complejo, como se muestra en el ejemplo siguiente.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value and whose imaginary part is equal to zero.</source>
          <target state="translated">Tenga en cuenta que el resultado de la conversión es un número complejo cuya parte real es igual que el <ph id="ph1">&lt;xref:System.Byte&gt;</ph> valor y cuya parte imaginaria es igual a cero.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">Valor que se va a convertir en un número complejo.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a double-precision floating-point number to a complex number.</source>
          <target state="translated">Define una conversión implícita de un número de punto flotante de precisión doble en un número complejo.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated">Objeto que contiene el valor del parámetro <ph id="ph1">&lt;paramref name="value" /&gt;</ph> como número real y cero como número imaginario.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Las sobrecargas de la <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operador definen los tipos desde el que un compilador puede convertir automáticamente un <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> objeto sin un operador de conversión explícito (en C#) o una llamada a una función de conversión (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">Son conversiones de ampliación que no implican la pérdida de datos y no producen un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value to a complex number, as the following example shows.</source>
          <target state="translated">Esta sobrecarga permite al compilador administrar las conversiones de un <ph id="ph1">&lt;xref:System.Double&gt;</ph> valor en un número complejo, como se muestra en el ejemplo siguiente.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the <ph id="ph1">&lt;xref:System.Double&gt;</ph> value and whose imaginary part is equal to zero.</source>
          <target state="translated">Tenga en cuenta que el resultado de la conversión es un número complejo cuya parte real es igual que el <ph id="ph1">&lt;xref:System.Double&gt;</ph> valor y cuya parte imaginaria es igual a cero.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">Valor que se va a convertir en un número complejo.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a 16-bit signed integer to a complex number.</source>
          <target state="translated">Define una conversión implícita de un entero de 16 bits con signo en un número complejo.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated">Objeto que contiene el valor del parámetro <ph id="ph1">&lt;paramref name="value" /&gt;</ph> como número real y cero como número imaginario.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Las sobrecargas de la <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operador definen los tipos desde el que un compilador puede convertir automáticamente un <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> objeto sin un operador de conversión explícito (en C#) o una llamada a una función de conversión (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">Son conversiones de ampliación que no implican la pérdida de datos y no producen un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from a signed 16-bit integer to a complex number, as the following example shows.</source>
          <target state="translated">Esta sobrecarga permite al compilador administrar las conversiones de un entero de 16 bits con signo en un número complejo, como se muestra en el ejemplo siguiente.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the signed 16-bit integer and whose imaginary part is equal to zero.</source>
          <target state="translated">Tenga en cuenta que el resultado de la conversión es un número complejo cuya parte real es igual que en el entero de 16 bits con signo y cuya parte imaginaria es igual a cero.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">Valor que se va a convertir en un número complejo.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a 32-bit signed integer to a complex number.</source>
          <target state="translated">Define una conversión implícita de un entero de 32 bits con signo en un número complejo.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated">Objeto que contiene el valor del parámetro <ph id="ph1">&lt;paramref name="value" /&gt;</ph> como número real y cero como número imaginario.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Las sobrecargas de la <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operador definen los tipos desde el que un compilador puede convertir automáticamente un <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> objeto sin un operador de conversión explícito (en C#) o una llamada a una función de conversión (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">Son conversiones de ampliación que no implican la pérdida de datos y no producen un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from a signed 32-bit integer to a complex number, as the following example shows.</source>
          <target state="translated">Esta sobrecarga permite al compilador administrar las conversiones de un entero de 32 bits con signo en un número complejo, como se muestra en el ejemplo siguiente.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the signed 32-bit integer and whose imaginary part is equal to zero.</source>
          <target state="translated">Tenga en cuenta que el resultado de la conversión es un número complejo cuya parte real es igual que en el entero de 32 bits con signo y cuya parte imaginaria es igual a cero.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">Valor que se va a convertir en un número complejo.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a 64-bit signed integer to a complex number.</source>
          <target state="translated">Define una conversión implícita de un entero de 64 bits con signo en un número complejo.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated">Objeto que contiene el valor del parámetro <ph id="ph1">&lt;paramref name="value" /&gt;</ph> como número real y cero como número imaginario.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Las sobrecargas de la <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operador definen los tipos desde el que un compilador puede convertir automáticamente un <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> objeto sin un operador de conversión explícito (en C#) o una llamada a una función de conversión (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">Son conversiones de ampliación que no implican la pérdida de datos y no producen un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from a signed 64-bit integer to a complex number, as the following example shows.</source>
          <target state="translated">Esta sobrecarga permite al compilador administrar las conversiones de un entero de 64 bits con signo en un número complejo, como se muestra en el ejemplo siguiente.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the signed 64-bit integer and whose imaginary part is equal to zero.</source>
          <target state="translated">Tenga en cuenta que el resultado de la conversión es un número complejo cuya parte real es igual que en el entero de 64 bits con signo y cuya parte imaginaria es igual a cero.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">Valor que se va a convertir en un número complejo.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a signed byte to a complex number.</source>
          <target state="translated">Define una conversión implícita de un byte con signo en un número complejo.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">Esta API no es conforme a CLS.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated">Objeto que contiene el valor del parámetro <ph id="ph1">&lt;paramref name="value" /&gt;</ph> como número real y cero como número imaginario.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Las sobrecargas de la <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operador definen los tipos desde el que un compilador puede convertir automáticamente un <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> objeto sin un operador de conversión explícito (en C#) o una llamada a una función de conversión (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">Son conversiones de ampliación que no implican la pérdida de datos y no producen un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from a signed byte to a complex number, as the following example shows.</source>
          <target state="translated">Esta sobrecarga permite al compilador administrar las conversiones de un byte con signo en un número complejo, como se muestra en el ejemplo siguiente.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the signed byte and whose imaginary part is equal to zero.</source>
          <target state="translated">Tenga en cuenta que el resultado de la conversión es un número complejo cuya parte real es igual a un byte con signo y cuya parte imaginaria es igual a cero.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">Valor que se va a convertir en un número complejo.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a single-precision floating-point number to a complex number.</source>
          <target state="translated">Define una conversión implícita de un número de punto flotante de precisión sencilla en un número complejo.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated">Objeto que contiene el valor del parámetro <ph id="ph1">&lt;paramref name="value" /&gt;</ph> como número real y cero como número imaginario.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Las sobrecargas de la <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operador definen los tipos desde el que un compilador puede convertir automáticamente un <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> objeto sin un operador de conversión explícito (en C#) o una llamada a una función de conversión (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">Son conversiones de ampliación que no implican la pérdida de datos y no producen un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value to a complex number, as the following example shows.</source>
          <target state="translated">Esta sobrecarga permite al compilador administrar las conversiones de un <ph id="ph1">&lt;xref:System.Single&gt;</ph> valor en un número complejo, como se muestra en el ejemplo siguiente.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the <ph id="ph1">&lt;xref:System.Single&gt;</ph> value and whose imaginary part is equal to zero.</source>
          <target state="translated">Tenga en cuenta que el resultado de la conversión es un número complejo cuya parte real es igual que el <ph id="ph1">&lt;xref:System.Single&gt;</ph> valor y cuya parte imaginaria es igual a cero.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">Valor que se va a convertir en un número complejo.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a 16-bit unsigned integer to a complex number.</source>
          <target state="translated">Define una conversión implícita de un entero de 16 bits sin signo en un número complejo.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">Esta API no es conforme a CLS.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated">Objeto que contiene el valor del parámetro <ph id="ph1">&lt;paramref name="value" /&gt;</ph> como número real y cero como número imaginario.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Las sobrecargas de la <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operador definen los tipos desde el que un compilador puede convertir automáticamente un <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> objeto sin un operador de conversión explícito (en C#) o una llamada a una función de conversión (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">Son conversiones de ampliación que no implican la pérdida de datos y no producen un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from an unsigned 16-bit integer to a complex number, as the following example shows.</source>
          <target state="translated">Esta sobrecarga permite al compilador administrar las conversiones de un entero de 16 bits sin signo en un número complejo, como se muestra en el ejemplo siguiente.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the unsigned 16-bit integer and whose imaginary part is equal to zero.</source>
          <target state="translated">Tenga en cuenta que el resultado de la conversión es un número complejo cuya parte real es igual que el entero de 16 bits sin signo y cuya parte imaginaria es igual a cero.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">Valor que se va a convertir en un número complejo.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a 32-bit unsigned integer to a complex number.</source>
          <target state="translated">Define una conversión implícita de un entero de 32 bits sin signo en un número complejo.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">Esta API no es conforme a CLS.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated">Objeto que contiene el valor del parámetro <ph id="ph1">&lt;paramref name="value" /&gt;</ph> como número real y cero como número imaginario.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Las sobrecargas de la <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operador definen los tipos desde el que un compilador puede convertir automáticamente un <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> objeto sin un operador de conversión explícito (en C#) o una llamada a una función de conversión (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">Son conversiones de ampliación que no implican la pérdida de datos y no producen un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from an unsigned 32-bit integer to a complex number, as the following example shows.</source>
          <target state="translated">Esta sobrecarga permite al compilador administrar las conversiones de un entero de 32 bits sin signo en un número complejo, como se muestra en el ejemplo siguiente.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the unsigned 32-bit integer and whose imaginary part is equal to zero.</source>
          <target state="translated">Tenga en cuenta que el resultado de la conversión es un número complejo cuya parte real es igual que el entero de 32 bits sin signo y cuya parte imaginaria es igual a cero.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">Valor que se va a convertir en un número complejo.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a 64-bit unsigned integer to a complex number.</source>
          <target state="translated">Define una conversión implícita de un entero de 64 bits sin signo en un número complejo.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">Esta API no es conforme a CLS.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated">Objeto que contiene el valor del parámetro <ph id="ph1">&lt;paramref name="value" /&gt;</ph> como número real y cero como número imaginario.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Las sobrecargas de la <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operador definen los tipos desde el que un compilador puede convertir automáticamente un <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> objeto sin un operador de conversión explícito (en C#) o una llamada a una función de conversión (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">Son conversiones de ampliación que no implican la pérdida de datos y no producen un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from an unsigned 64-bit integer to a complex number, as the following example shows.</source>
          <target state="translated">Esta sobrecarga permite al compilador administrar las conversiones de un entero de 64 bits sin signo en un número complejo, como se muestra en el ejemplo siguiente.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the unsigned 64-bit integer and whose imaginary part is equal to zero.</source>
          <target state="translated">Tenga en cuenta que el resultado de la conversión es un número complejo cuya parte real es igual que el entero de 64 bits sin signo y cuya parte imaginaria es igual a cero.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The first value to compare.</source>
          <target state="translated">Primer valor que se va a comparar.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The second value to compare.</source>
          <target state="translated">Segundo valor que se va a comparar.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Returns a value that indicates whether two complex numbers are not equal.</source>
          <target state="translated">Devuelve un valor que indica si dos números complejos no son iguales.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are not equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="left" /&gt;</ph> y <ph id="ph3">&lt;paramref name="right" /&gt;</ph> no son iguales; en caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Equality%2A&gt;</ph> method defines the operation of the inequality operator for complex numbers.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Equality%2A&gt;</ph> método define el funcionamiento del operador de desigualdad para los números complejos.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>It enables code such as the following:</source>
          <target state="translated">Permite que el código como el siguiente:</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Languages that do not support custom operators can test for inequality by calling the <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> method and reversing its value.</source>
          <target state="translated">Los lenguajes que no admiten operadores personalizados pueden comprobar la desigualdad mediante una llamada a la <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> método e invertir su valor.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Note that, because of differences in precision, two complex numbers that are apparently equivalent can be considered unequal.</source>
          <target state="translated">Tenga en cuenta que, debido a diferencias en precisión, dos números complejos que son aparentemente equivalentes pueden considerarse iguales.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>One possible workaround is to implement a comparison method that returns <ph id="ph1">`true`</ph> only if the difference between the two real and imaginary parts of the complex numbers exceeds a certain threshold (such as .01% of the value of the real or imaginary component of one of the complex numbers).</source>
          <target state="translated">Una posible solución consiste en implementar un método de comparación que devuelva <ph id="ph1">`true`</ph> solo si la diferencia entre las dos partes reales e imaginarias de los números complejos supera un cierto umbral (como. 01% del valor del componente real o imaginario de uno de los números complejos).</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> method.</source>
          <target state="translated">Para obtener más información, vea el método <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The first value to multiply.</source>
          <target state="translated">Primer valor que se va a multiplicar.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The second value to multiply.</source>
          <target state="translated">Segundo valor que se va a multiplicar.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Multiplies two specified complex numbers.</source>
          <target state="translated">Multiplica los dos números complejos especificados.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The product of <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">Producto de <ph id="ph1">&lt;paramref name="left" /&gt;</ph> y <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Multiply%2A&gt;</ph> method defines the operation of the multiplication operator for complex numbers.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Multiply%2A&gt;</ph> método define el funcionamiento del operador de multiplicación para los números complejos.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>It enables code such as the following:</source>
          <target state="translated">Permite que el código como el siguiente:</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The multiplication of a complex number, a + bi, and a second complex number, c + di, takes the following form:</source>
          <target state="translated">La multiplicación de un complejo número a + bi, y un segundo número complejo, c + inserción de dependencias, toma la forma siguiente:</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>(ac - bd) + (ad + bc)i</source>
          <target state="translated">(ac - bd) + (ad + bc)</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>If the multiplication results in an overflow in either the real or imaginary component, the value of that component is either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si la multiplicación provoca un desbordamiento en el componente real o imaginario, el valor de ese componente sea <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> o <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.Complex.Multiply%2A&gt;</ph> method instead.</source>
          <target state="translated">Los lenguajes que no admiten operadores personalizados pueden llamar el <ph id="ph1">&lt;xref:System.Numerics.Complex.Multiply%2A&gt;</ph> método en su lugar.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.Complex.Multiply%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">El método equivalente para este operador es <ph id="ph1">&lt;xref:System.Numerics.Complex.Multiply%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The value to subtract from (the minuend).</source>
          <target state="translated">Valor del que se va a restar (minuendo).</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The value to subtract (the subtrahend).</source>
          <target state="translated">Valor que se va a restar (sustraendo).</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Subtracts a complex number from another complex number.</source>
          <target state="translated">Resta un número complejo de otro número complejo.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The result of subtracting <ph id="ph1">&lt;paramref name="right" /&gt;</ph> from <ph id="ph2">&lt;paramref name="left" /&gt;</ph>.</source>
          <target state="translated">Resultado de restar <ph id="ph1">&lt;paramref name="right" /&gt;</ph> de <ph id="ph2">&lt;paramref name="left" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Subtraction%2A&gt;</ph> method defines the operation of the subtraction operator for complex numbers.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Subtraction%2A&gt;</ph> método define el funcionamiento del operador de sustracción para números complejos.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>It enables code such as the following:</source>
          <target state="translated">Permite que el código como el siguiente:</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>If the method call results in an overflow in either the real or imaginary component, the value of that component is either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si la llamada al método produce un desbordamiento en el componente real o imaginario, el valor de ese componente sea <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> o <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The subtraction of a complex number, c + di, from another complex number, a + bi, takes the following form:</source>
          <target state="translated">El resultado de un número complejo, c + di, de otro número complejo, restar un + bi, toma la forma siguiente:</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>(a - c) + (b - d)i</source>
          <target state="translated">(a - c) + (b - d.)</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.Complex.Subtract%2A&gt;</ph> method instead.</source>
          <target state="translated">Los lenguajes que no admiten operadores personalizados pueden llamar el <ph id="ph1">&lt;xref:System.Numerics.Complex.Subtract%2A&gt;</ph> método en su lugar.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.Complex.Subtract%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">El método equivalente para este operador es <ph id="ph1">&lt;xref:System.Numerics.Complex.Subtract%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
          <source>The value to negate.</source>
          <target state="translated">Valor que se va a negar.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
          <source>Returns the additive inverse of a specified complex number.</source>
          <target state="translated">Devuelve el inverso aditivo de un número complejo especificado.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
          <source>The result of the <ph id="ph1">&lt;see cref="P:System.Numerics.Complex.Real" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Numerics.Complex.Imaginary" /&gt;</ph> components of the <ph id="ph3">&lt;paramref name="value" /&gt;</ph> parameter multiplied by -1.</source>
          <target state="translated">Resultado de multiplicar por -1 los componentes <ph id="ph1">&lt;see cref="P:System.Numerics.Complex.Real" /&gt;</ph> e <ph id="ph2">&lt;see cref="P:System.Numerics.Complex.Imaginary" /&gt;</ph> del parámetro <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.op_UnaryNegation%2A&gt;</ph> method defines the operation of the unary negation (additive inverse) operator for complex numbers.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.op_UnaryNegation%2A&gt;</ph> método define la operación del operador unario de negación (aditivo inverso) para los números complejos.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
          <source>It enables code such as the following:</source>
          <target state="translated">Permite que el código como el siguiente:</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
          <source>The resulting complex number produces a value of <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> 0 (zero) when it is added to the original complex number.</source>
          <target state="translated">Número complejo resultante produce un valor de <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> 0 (cero) cuando se agrega al número complejo original.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.Complex.Negate%2A&gt;</ph> method instead.</source>
          <target state="translated">Los lenguajes que no admiten operadores personalizados pueden llamar el <ph id="ph1">&lt;xref:System.Numerics.Complex.Negate%2A&gt;</ph> método en su lugar.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.Complex.Negate%28System.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">El método equivalente para este operador es <ph id="ph1">&lt;xref:System.Numerics.Complex.Negate%28System.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="P:System.Numerics.Complex.Phase">
          <source>Gets the phase of a complex number.</source>
          <target state="translated">Obtiene la fase de un número complejo.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Phase">
          <source>The phase of a complex number, in radians.</source>
          <target state="translated">Fase de un número complejo, en radianes.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Phase">
          <source>For a complex number a + bi, the phase is computed as <ph id="ph1">&lt;xref:System.Math.Atan2%2A?displayProperty=nameWithType&gt;</ph>(b, a).</source>
          <target state="translated">Para un número complejo un + bi, la fase se calcula como <ph id="ph1">&lt;xref:System.Math.Atan2%2A?displayProperty=nameWithType&gt;</ph>(b, una).</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Phase">
          <source>You can identify a complex number by its Cartesian coordinates on the complex plane or by its polar coordinates.</source>
          <target state="translated">Puede identificar un número complejo por sus coordenadas cartesianas en el plano complejo o por sus coordenadas polares.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Phase">
          <source>The phase (argument) of a complex number is the angle to the real axis of a line drawn from the point of origin (the intersection of the x-axis and the y-axis) to the point represented by the complex number.</source>
          <target state="translated">La fase (argumento) de un número complejo es el ángulo al eje real de una línea dibujada desde el punto de origen (la intersección del eje x y el eje y) para el punto representado por el número complejo.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Phase">
          <source>The magnitude (represented by the <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> property) is the distance from the point of origin to the point that is represented by the complex number.</source>
          <target state="translated">La magnitud (representada por la <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> propiedad) es la distancia desde el punto de origen hasta el punto que representa el número complejo.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Phase">
          <source>You can instantiate a complex number based on its polar coordinates instead of its Cartesian coordinates by calling the <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> method.</source>
          <target state="translated">Puede crear instancias de un número complejo basándose en sus coordenadas polares en lugar de sus coordenadas cartesianas mediante una llamada a la <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Phase">
          <source>To convert the phase from radians to degrees, multiply it by 180/<ph id="ph1">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Para convertir la fase de radianes a grados, multiplíquelo por 180 /<ph id="ph1">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Phase">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> method to instantiate a complex number based on its polar coordinates, and then displays the value of its <ph id="ph2">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph> properties.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> método para crear una instancia de un número complejo basándose en sus coordenadas polares y, a continuación, muestra el valor de su <ph id="ph2">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> y <ph id="ph3">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph> propiedades.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="T:System.Numerics.Complex">
          <source>Returns a specified complex number raised to a specified power.</source>
          <target state="translated">Devuelve el número complejo especificado elevado a la potencia especificada.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
          <source>A complex number to be raised to a power.</source>
          <target state="translated">Número complejo que se va a elevar a una potencia.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
          <source>A double-precision floating-point number that specifies a power.</source>
          <target state="translated">Número de punto flotante de precisión doble que especifica una potencia.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
          <source>Returns a specified complex number raised to a power specified by a double-precision floating-point number.</source>
          <target state="translated">Devuelve un número complejo especificado elevado a la potencia indicada por un número de punto flotante de precisión doble.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
          <source>The complex number <ph id="ph1">&lt;paramref name="value" /&gt;</ph> raised to the power <ph id="ph2">&lt;paramref name="power" /&gt;</ph>.</source>
          <target state="translated">Número complejo <ph id="ph1">&lt;paramref name="value" /&gt;</ph> elevado a la potencia indicada por <ph id="ph2">&lt;paramref name="power" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">&lt;xref:System.Numerics.Complex.Zero?displayProperty=nameWithType&gt;</ph>, the method returns <ph id="ph3">&lt;xref:System.Numerics.Complex.Zero?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si el valor de <ph id="ph1">`value`</ph> es <ph id="ph2">&lt;xref:System.Numerics.Complex.Zero?displayProperty=nameWithType&gt;</ph>, el método devuelve <ph id="ph3">&lt;xref:System.Numerics.Complex.Zero?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
          <source>For other values, if <ph id="ph1">`power`</ph> is 0, the method returns <ph id="ph2">&lt;xref:System.Numerics.Complex.One?displayProperty=nameWithType&gt;</ph>, and if <ph id="ph3">`power`</ph> is 1, it returns <ph id="ph4">`value`</ph>.</source>
          <target state="translated">Para otros valores, si <ph id="ph1">`power`</ph> es 0, el método devuelve <ph id="ph2">&lt;xref:System.Numerics.Complex.One?displayProperty=nameWithType&gt;</ph>y si <ph id="ph3">`power`</ph> es 1, devuelve <ph id="ph4">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
          <source>This method corresponds to the <ph id="ph1">&lt;xref:System.Math.Pow%2A?displayProperty=nameWithType&gt;</ph> method for primitive numeric types.</source>
          <target state="translated">Este método corresponde a la <ph id="ph1">&lt;xref:System.Math.Pow%2A?displayProperty=nameWithType&gt;</ph> método para los tipos numéricos primitivos.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
          <source>The following example illustrates exponentiation using a complex number and an exponent whose value ranges from -1 to 10.</source>
          <target state="translated">En el ejemplo siguiente se muestra exponenciación mediante un número complejo y un exponente cuyo valor varía entre -1 y 10.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Numerics.Complex)">
          <source>A complex number to be raised to a power.</source>
          <target state="translated">Número complejo que se va a elevar a una potencia.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Numerics.Complex)">
          <source>A complex number that specifies a power.</source>
          <target state="translated">Número complejo que especifica una potencia.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Returns a specified complex number raised to a power specified by a complex number.</source>
          <target state="translated">Devuelve el número complejo especificado elevado a la potencia indicada por un número complejo.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The complex number <ph id="ph1">&lt;paramref name="value" /&gt;</ph> raised to the power <ph id="ph2">&lt;paramref name="power" /&gt;</ph>.</source>
          <target state="translated">Número complejo <ph id="ph1">&lt;paramref name="value" /&gt;</ph> elevado a la potencia indicada por <ph id="ph2">&lt;paramref name="power" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="P:System.Numerics.Complex.Real">
          <source>Gets the real component of the current <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> object.</source>
          <target state="translated">Obtiene el componente real del objeto <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Real">
          <source>The real component of a complex number.</source>
          <target state="translated">Componente real de un número complejo.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Real">
          <source>Given a complex number a + bi, the <ph id="ph1">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> property returns the value of a.</source>
          <target state="translated">Dado un número complejo a + bi, el <ph id="ph1">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> propiedad devuelve el valor de una.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Real">
          <source>The following example instantiates an array of <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> objects and displays the real and imaginary components of each in the form a + bi.</source>
          <target state="translated">El ejemplo siguiente crea una matriz de <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> objetos y muestra los componentes reales e imaginarios de cada uno en el formulario a + bi.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">Número complejo.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>Returns the multiplicative inverse of a complex number.</source>
          <target state="translated">Devuelve el inverso multiplicativo de un número complejo.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>The reciprocal of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Recíproco de <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>The reciprocal, or multiplicative inverse, of a number <bpt id="p1">*</bpt>x<ept id="p1">*</ept> is a number <bpt id="p2">*</bpt>y<ept id="p2">*</ept> where <bpt id="p3">*</bpt>x<ept id="p3">*</ept> multiplied by <bpt id="p4">*</bpt>y<ept id="p4">*</ept> yields 1.</source>
          <target state="translated">El recíproco, o inverso multiplicativo, de un número <bpt id="p1">*</bpt>x<ept id="p1">*</ept> es un número <bpt id="p2">*</bpt>y<ept id="p2">*</ept> donde <bpt id="p3">*</bpt>x<ept id="p3">*</ept> multiplicado por <bpt id="p4">*</bpt>y<ept id="p4">*</ept> da como resultado 1.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>The reciprocal of a complex number is the complex number that produces <ph id="ph1">&lt;xref:System.Numerics.Complex.One?displayProperty=nameWithType&gt;</ph> when the two numbers are multiplied.</source>
          <target state="translated">El inverso de un número complejo es el número complejo que genera <ph id="ph1">&lt;xref:System.Numerics.Complex.One?displayProperty=nameWithType&gt;</ph> cuando se multiplican los dos números.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>If a complex number is represented by a +bi, its reciprocal is represented by the expression a/(a<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept>+b<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>) + -b/(a<bpt id="p3">&lt;sup&gt;</bpt>2<ept id="p3">&lt;/sup&gt;</ept> + b<bpt id="p4">&lt;sup&gt;</bpt>2<ept id="p4">&lt;/sup&gt;</ept>).</source>
          <target state="translated">Si se representa un número complejo a + bi, su recíproco es representado por la expresión un / (un<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept>+ b<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>) + -b / (un<bpt id="p3">&lt;sup&gt;</bpt>2<ept id="p3">&lt;/sup&gt;</ept> + b<bpt id="p4">&lt;sup&gt;</bpt>2<ept id="p4">&lt;/sup&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>If value is <ph id="ph1">&lt;xref:System.Numerics.Complex.Zero?displayProperty=nameWithType&gt;</ph>, the method returns <ph id="ph2">&lt;xref:System.Numerics.Complex.Zero?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si el valor es <ph id="ph1">&lt;xref:System.Numerics.Complex.Zero?displayProperty=nameWithType&gt;</ph>, el método devuelve <ph id="ph2">&lt;xref:System.Numerics.Complex.Zero?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>Otherwise, it returns the result of the expression <ph id="ph1">&lt;xref:System.Numerics.Complex.One?displayProperty=nameWithType&gt;</ph><ph id="ph2">/</ph><ph id="ph3">`value`</ph>.</source>
          <target state="translated">En caso contrario, devuelve el resultado de la expresión <ph id="ph1">&lt;xref:System.Numerics.Complex.One?displayProperty=nameWithType&gt;</ph> <ph id="ph2">/</ph> <ph id="ph3">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Numerics.Complex.Reciprocal%2A&gt;</ph> method to calculate the reciprocal values of several complex numbers.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">&lt;xref:System.Numerics.Complex.Reciprocal%2A&gt;</ph> método para calcular los valores recíprocos de varios números complejos.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>It also demonstrates that the result of multiplying a complex number by its reciprocal is <ph id="ph1">&lt;xref:System.Numerics.Complex.One?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">También muestra que el resultado de multiplicar un número complejo por su recíproco es <ph id="ph1">&lt;xref:System.Numerics.Complex.One?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">Número complejo.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
          <source>Returns the sine of the specified complex number.</source>
          <target state="translated">Devuelve el seno del número complejo especificado.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
          <source>The sine of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Seno de <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Sin%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> método para los números complejos corresponde a la <ph id="ph2">&lt;xref:System.Math.Sin%2A?displayProperty=nameWithType&gt;</ph> método para números reales.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> method uses the following formula to calculate the sine of the complex number a + bi:</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> método usa la siguiente fórmula para calcular el seno del número complejo a + bi:</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
          <source>(<ph id="ph1">&lt;xref:System.Math.Sin%2A&gt;</ph>(a) * <ph id="ph2">&lt;xref:System.Math.Cosh%2A&gt;</ph>(b), <ph id="ph3">&lt;xref:System.Math.Cos%2A&gt;</ph>(a) * <ph id="ph4">&lt;xref:System.Math.Sinh%2A&gt;</ph>(b))</source>
          <target state="translated">(<ph id="ph1">&lt;xref:System.Math.Sin%2A&gt;</ph>(a) * <ph id="ph2">&lt;xref:System.Math.Cosh%2A&gt;</ph>(b), <ph id="ph3">&lt;xref:System.Math.Cos%2A&gt;</ph>(a) * <ph id="ph4">&lt;xref:System.Math.Sinh%2A&gt;</ph>(b))</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> method.</source>
          <target state="translated">En el ejemplo siguiente se muestra el <ph id="ph1">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
          <source>It shows that passing the value returned by the <ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> method to the <ph id="ph2">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> method returns the original <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> value.</source>
          <target state="translated">Muestra que se pasa el valor devuelto por la <ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> método a la <ph id="ph2">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> método devuelve la versión original <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sinh(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">Número complejo.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sinh(System.Numerics.Complex)">
          <source>Returns the hyperbolic sine of the specified complex number.</source>
          <target state="translated">Devuelve el seno hiperbólico del número complejo especificado.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sinh(System.Numerics.Complex)">
          <source>The hyperbolic sine of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Seno hiperbólico de <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sinh(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Sinh%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Sinh%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.Sinh%2A&gt;</ph> método para los números complejos corresponde a la <ph id="ph2">&lt;xref:System.Math.Sinh%2A?displayProperty=nameWithType&gt;</ph> método para números reales.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sinh(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Sinh%2A&gt;</ph> method uses the following formula to calculate the hyperbolic sine of the complex number a + bi:</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.Sinh%2A&gt;</ph> método usa la siguiente fórmula para calcular el seno hiperbólico del número complejo a + bi:</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sinh(System.Numerics.Complex)">
          <source>(<ph id="ph1">&lt;xref:System.Math.Sinh%2A&gt;</ph>(a) * <ph id="ph2">&lt;xref:System.Math.Cos%2A&gt;</ph>(b), <ph id="ph3">&lt;xref:System.Math.Cosh%2A&gt;</ph>(a) * <ph id="ph4">&lt;xref:System.Math.Sin%2A&gt;</ph>(b))</source>
          <target state="translated">(<ph id="ph1">&lt;xref:System.Math.Sinh%2A&gt;</ph>(a) * <ph id="ph2">&lt;xref:System.Math.Cos%2A&gt;</ph>(b), <ph id="ph3">&lt;xref:System.Math.Cosh%2A&gt;</ph>(a) * <ph id="ph4">&lt;xref:System.Math.Sin%2A&gt;</ph>(b))</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sqrt(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">Número complejo.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sqrt(System.Numerics.Complex)">
          <source>Returns the square root of a specified complex number.</source>
          <target state="translated">Devuelve la raíz cuadrada del número complejo especificado.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sqrt(System.Numerics.Complex)">
          <source>The square root of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Raíz cuadrada de <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sqrt(System.Numerics.Complex)">
          <source>The square root of the complex number <ph id="ph1">`value`</ph> is calculated by using the following formula:</source>
          <target state="translated">La raíz cuadrada del número complejo <ph id="ph1">`value`</ph> se calcula mediante la fórmula siguiente:</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sqrt(System.Numerics.Complex)">
          <source><ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A?displayProperty=nameWithType&gt;</ph>(<ph id="ph2">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>(<ph id="ph3">`value`</ph>.<ph id="ph4">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph>), <ph id="ph5">`value`</ph>.<ph id="ph6">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph>/2.0)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A?displayProperty=nameWithType&gt;</ph>(<ph id="ph2">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>(<ph id="ph3">`value`</ph>.<ph id="ph4">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph>), <ph id="ph5">`value`</ph>.<ph id="ph6">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph>/2.0)</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sqrt(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Sqrt%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.Sqrt%2A&gt;</ph> método para los números complejos corresponde a la <ph id="ph2">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph> método para números reales.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The value to subtract from (the minuend).</source>
          <target state="translated">Valor del que se va a restar (minuendo).</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The value to subtract (the subtrahend).</source>
          <target state="translated">Valor que se va a restar (sustraendo).</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Subtracts one complex number from another and returns the result.</source>
          <target state="translated">Resta un número complejo de otro y devuelve el resultado.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The result of subtracting <ph id="ph1">&lt;paramref name="right" /&gt;</ph> from <ph id="ph2">&lt;paramref name="left" /&gt;</ph>.</source>
          <target state="translated">Resultado de restar <ph id="ph1">&lt;paramref name="right" /&gt;</ph> de <ph id="ph2">&lt;paramref name="left" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The subtraction of a complex number, c + di, from another complex number, a + bi, takes the following form:</source>
          <target state="translated">El resultado de un número complejo, c + di, de otro número complejo, restar un + bi, toma la forma siguiente:</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>(a - c) + (b - d)i</source>
          <target state="translated">(a - c) + (b - d.)</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>If the method call results in an overflow in either the real or imaginary component, the value of that component is either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si la llamada al método produce un desbordamiento en el componente real o imaginario, el valor de ese componente sea <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> o <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Languages that do not support custom operators can use the <ph id="ph1">&lt;xref:System.Numerics.Complex.Subtract%2A&gt;</ph> method to perform subtraction using complex numbers.</source>
          <target state="translated">Los lenguajes que no admiten operadores personalizados pueden usar el <ph id="ph1">&lt;xref:System.Numerics.Complex.Subtract%2A&gt;</ph> método para realizar restas usando números complejos.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The following example subtracts each complex number in an array from a complex number.</source>
          <target state="translated">En el ejemplo siguiente se resta cada número complejo en una matriz de un número complejo.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">Número complejo.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
          <source>Returns the tangent of the specified complex number.</source>
          <target state="translated">Devuelve la tangente del número complejo especificado.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
          <source>The tangent of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Tangente de <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Tan%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> método para los números complejos corresponde a la <ph id="ph2">&lt;xref:System.Math.Tan%2A?displayProperty=nameWithType&gt;</ph> método para números reales.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> method uses the following formula to calculate the tangent of the complex number <ph id="ph2">`value`</ph>:</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> método usa la siguiente fórmula para calcular la tangente del número complejo <ph id="ph2">`value`</ph>:</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
          <source><ph id="ph1">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph>(<ph id="ph2">`value`</ph>) / <ph id="ph3">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph>(<ph id="ph4">`value`</ph>)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph>(<ph id="ph2">`value`</ph>) / <ph id="ph3">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph>(<ph id="ph4">`value`</ph>)</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> method.</source>
          <target state="translated">En el ejemplo siguiente se muestra el <ph id="ph1">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
          <source>It shows that passing the value returned by the <ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> method to the <ph id="ph2">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> method returns the original <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> value.</source>
          <target state="translated">Muestra que se pasa el valor devuelto por la <ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> método a la <ph id="ph2">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> método devuelve la versión original <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Tanh(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">Número complejo.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Tanh(System.Numerics.Complex)">
          <source>Returns the hyperbolic tangent of the specified complex number.</source>
          <target state="translated">Devuelve la tangente hiperbólica del número complejo especificado.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Tanh(System.Numerics.Complex)">
          <source>The hyperbolic tangent of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Tangente hiperbólica de <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Tanh(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Tanh%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Tanh%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.Tanh%2A&gt;</ph> método para los números complejos corresponde a la <ph id="ph2">&lt;xref:System.Math.Tanh%2A?displayProperty=nameWithType&gt;</ph> método para números reales.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Tanh(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Tanh%2A&gt;</ph> method uses the following formula to calculate the hyperbolic tangent of the complex number <ph id="ph2">`value`</ph>:</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.Tanh%2A&gt;</ph> método usa la siguiente fórmula para calcular la tangente hiperbólica del número complejo <ph id="ph2">`value`</ph>:</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Tanh(System.Numerics.Complex)">
          <source><ph id="ph1">&lt;xref:System.Numerics.Complex.Sinh%2A&gt;</ph>(<ph id="ph2">`value`</ph>) / <ph id="ph3">&lt;xref:System.Numerics.Complex.Cosh%2A&gt;</ph>(<ph id="ph4">`value`</ph>)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Sinh%2A&gt;</ph>(<ph id="ph2">`value`</ph>) / <ph id="ph3">&lt;xref:System.Numerics.Complex.Cosh%2A&gt;</ph>(<ph id="ph4">`value`</ph>)</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="T:System.Numerics.Complex">
          <source>Converts the value of a complex number to its equivalent string representation.</source>
          <target state="translated">Convierte el valor de un número complejo en su representación de cadena equivalente.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString">
          <source>Converts the value of the current complex number to its equivalent string representation in Cartesian form.</source>
          <target state="translated">Convierte el valor del actual número complejo a su representación de cadena equivalente en formato cartesiano.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString">
          <source>The string representation of the current instance in Cartesian form.</source>
          <target state="translated">Representación de cadena de la instancia actual en formato cartesiano.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString">
          <source>The default string representation of a complex number displays the number using its Cartesian coordinates in the form <ph id="ph1">`(`</ph><bpt id="p1">*</bpt>a<ept id="p1">*</ept><ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>b<ept id="p2">*</ept><ph id="ph3">`)`</ph>, where <bpt id="p3">*</bpt>a<ept id="p3">*</ept> is the real part of the complex number, and <bpt id="p4">*</bpt>b<ept id="p4">*</ept> is its imaginary part.</source>
          <target state="translated">La representación de cadena del valor predeterminado de un número complejo muestra el número usando sus coordenadas cartesianas en el formulario <ph id="ph1">`(`</ph> <bpt id="p1">*</bpt>una<ept id="p1">*</ept> <ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>b<ept id="p2">*</ept><ph id="ph3">`)`</ph>, donde <bpt id="p3">*</bpt>una<ept id="p3">*</ept> es la parte real del número complejo, y <bpt id="p4">*</bpt>b<ept id="p4">*</ept> es su parte imaginaria.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString">
          <source>Both <bpt id="p1">*</bpt>a<ept id="p1">*</ept> and <bpt id="p2">*</bpt>b<ept id="p2">*</ept> are formatted using the general format specifier ("G") and the conventions of the current system culture.</source>
          <target state="translated">Ambos <bpt id="p1">*</bpt>una<ept id="p1">*</ept> y <bpt id="p2">*</bpt>b<ept id="p2">*</ept> formateados con el especificador de formato general ("G") y las convenciones de la referencia cultural del sistema actual.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString">
          <source>The following example displays the string representation of several complex numbers.</source>
          <target state="translated">En el ejemplo siguiente se muestra la representación de cadena de varios números complejos.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString">
          <source>The output uses the formatting conventions of the English - United States ("en-US") culture, which, in this case, is the current system culture.</source>
          <target state="translated">El resultado usa las convenciones de formato de inglés - referencia cultural de Estados Unidos ("en-US"), que, en este caso, es la referencia cultural del sistema actual.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">Objeto que proporciona información de formato específica de la referencia cultural.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified culture-specific formatting information.</source>
          <target state="translated">Convierte el valor del actual número complejo a su representación de cadena equivalente en formato cartesiano utilizando la información de formato específica de la referencia cultural indicada.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>The string representation of the current instance in Cartesian form, as specified by <ph id="ph1">&lt;paramref name="provider" /&gt;</ph>.</source>
          <target state="translated">Representación de cadena de la instancia actual en formato cartesiano, tal como especifica <ph id="ph1">&lt;paramref name="provider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>The string representation of the complex number returned by this method displays the number using its Cartesian coordinates in the form <ph id="ph1">`(`</ph><bpt id="p1">*</bpt>a<ept id="p1">*</ept><ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>b<ept id="p2">*</ept><ph id="ph3">`)`</ph>, where <bpt id="p3">*</bpt>a<ept id="p3">*</ept> is the real part of the complex number, and <bpt id="p4">*</bpt>b<ept id="p4">*</ept> is its imaginary part.</source>
          <target state="translated">La representación de cadena del número complejo devuelto por este método muestra el número usando sus coordenadas cartesianas en el formulario <ph id="ph1">`(`</ph> <bpt id="p1">*</bpt>una<ept id="p1">*</ept> <ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>b<ept id="p2">*</ept><ph id="ph3">`)`</ph>, donde <bpt id="p3">*</bpt>una<ept id="p3">*</ept> es la parte real del número complejo, y <bpt id="p4">*</bpt>b<ept id="p4">*</ept> es su parte imaginaria.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>Both <bpt id="p1">*</bpt>a<ept id="p1">*</ept> and <bpt id="p2">*</bpt>b<ept id="p2">*</ept> are formatted using the general format specifier ("G") and the conventions of the culture defined by <ph id="ph1">`provider`</ph>.</source>
          <target state="translated">Ambos <bpt id="p1">*</bpt>una<ept id="p1">*</ept> y <bpt id="p2">*</bpt>b<ept id="p2">*</ept> formateados con el especificador de formato general ("G") y las convenciones de la referencia cultural definida por <ph id="ph1">`provider`</ph>.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation.</source>
          <target state="translated">El <ph id="ph1">`provider`</ph> parámetro es un <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementación.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific information about the format of the real and imaginary numbers in the returned string.</source>
          <target state="translated">Su <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> método devuelve un <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objeto que proporciona información específica de la referencia cultural acerca del formato de los números reales e imaginarios en la cadena devuelta.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the returned string is formatted using the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object of the current culture.</source>
          <target state="translated">Si <ph id="ph1">`provider`</ph> es <ph id="ph2">`null`</ph>, la cadena devuelta se ha formateado con el <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objeto de la referencia cultural actual.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter can be one of the following:</source>
          <target state="translated">El <ph id="ph1">`provider`</ph> parámetro puede ser uno de los siguientes:</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture that supplies formatting information</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objeto que representa la referencia cultural que proporciona información de formato</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that supplies formatting information.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objeto que proporciona información de formato.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>A custom object that implements the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface.</source>
          <target state="translated">Un objeto personalizado que implementa el <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interfaz.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that supplies formatting information.</source>
          <target state="translated">Su <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> método devuelve el <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objeto que proporciona información de formato.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>The following example displays the string representation of several complex numbers.</source>
          <target state="translated">En el ejemplo siguiente se muestra la representación de cadena de varios números complejos.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>The result uses the formatting conventions of the English - United States ("en-US") and French - France ("fr-FR") cultures.</source>
          <target state="translated">El resultado usa las convenciones de formato del inglés - Estados Unidos ("en-US") y francés - referencias culturales de Francia ("fr-FR").</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>A standard or custom numeric format string.</source>
          <target state="translated">Cadena de formato numérico estándar o personalizada.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified format for its real and imaginary parts.</source>
          <target state="translated">Convierte el valor del actual número complejo a su representación de cadena equivalente en formato cartesiano utilizando el formato especificado para la parte real y la parte imaginaria.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>The string representation of the current instance in Cartesian form.</source>
          <target state="translated">Representación de cadena de la instancia actual en formato cartesiano.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>The string representation of the complex number returned by this method displays the number using its Cartesian coordinates in the form <ph id="ph1">`(`</ph><bpt id="p1">*</bpt>a<ept id="p1">*</ept><ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>b<ept id="p2">*</ept><ph id="ph3">`)`</ph>, where <bpt id="p3">*</bpt>a<ept id="p3">*</ept> is the real part of the complex number, and <bpt id="p4">*</bpt>b<ept id="p4">*</ept> is its imaginary part.</source>
          <target state="translated">La representación de cadena del número complejo devuelto por este método muestra el número usando sus coordenadas cartesianas en el formulario <ph id="ph1">`(`</ph> <bpt id="p1">*</bpt>una<ept id="p1">*</ept> <ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>b<ept id="p2">*</ept><ph id="ph3">`)`</ph>, donde <bpt id="p3">*</bpt>una<ept id="p3">*</ept> es la parte real del número complejo, y <bpt id="p4">*</bpt>b<ept id="p4">*</ept> es su parte imaginaria.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>Both <bpt id="p1">*</bpt>a<ept id="p1">*</ept> and <bpt id="p2">*</bpt>b<ept id="p2">*</ept> are formatted using the format string specified by <ph id="ph1">`format`</ph>.</source>
          <target state="translated">Ambos <bpt id="p1">*</bpt>una<ept id="p1">*</ept> y <bpt id="p2">*</bpt>b<ept id="p2">*</ept> formateados con la cadena de formato especificada por <ph id="ph1">`format`</ph>.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>The <ph id="ph1">`format`</ph> parameter can be any valid standard numeric format specifier, or any combination of custom numeric format specifiers.</source>
          <target state="translated">El <ph id="ph1">`format`</ph> parámetro puede ser cualquier especificador de formato numérico estándar válido, o cualquier combinación de especificadores de formato numérico personalizado.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>If <ph id="ph1">`format`</ph> is equal to <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> or is <ph id="ph3">`null`</ph>, the real and imaginary parts of the complex number are formatted with the general format specifier ("G").</source>
          <target state="translated">Si <ph id="ph1">`format`</ph> es igual a <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> o <ph id="ph3">`null`</ph>, se da formato a las partes reales e imaginarias del número complejo con el especificador de formato general ("G").</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>If <ph id="ph1">`format`</ph> is any other value, the method throws a <ph id="ph2">&lt;xref:System.FormatException&gt;</ph>.</source>
          <target state="translated">Si <ph id="ph1">`format`</ph> es cualquier otro valor, el método produce una <ph id="ph2">&lt;xref:System.FormatException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following topics:</source>
          <target state="translated">.NET Framework proporciona una amplia compatibilidad de formato, que se describe con más detalle en los temas siguientes:</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>For more information about numeric format strings, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Para obtener más información acerca de las cadenas de formato numérico, vea <bpt id="p1">[</bpt>cadenas de formato numérico estándar<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> y <bpt id="p2">[</bpt>cadenas de formato numérico personalizado<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>For more information about formatting in the .NET Framework, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre el formato de .NET Framework, vea <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>The format of the returned string is determined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture.</source>
          <target state="translated">El formato de la cadena devuelta está determinado por la <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objeto para la referencia cultural actual.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>Depending on the <ph id="ph1">`format`</ph> parameter, this object controls symbols such as the negative sign, the group separator, and the decimal point symbol in the output string.</source>
          <target state="translated">En función de la <ph id="ph1">`format`</ph> parámetro, este objeto controla símbolos como el signo negativo, el separador de grupos y el símbolo de separador decimal en la cadena de salida.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>To provide formatting information for cultures other than the current culture, call the <ph id="ph1">&lt;xref:System.Numerics.Complex.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> overload.</source>
          <target state="translated">Para proporcionar información de formato para las referencias culturales distintas de la referencia cultural actual, llame a la <ph id="ph1">&lt;xref:System.Numerics.Complex.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> de sobrecarga.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>The following example initializes a complex number and displays it using several standard format strings.</source>
          <target state="translated">En el ejemplo siguiente se inicializa un número complejo y se muestra usando varias cadenas de formato estándar.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> no es una cadena de formato válido.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>A standard or custom numeric format string.</source>
          <target state="translated">Cadena de formato numérico estándar o personalizada.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">Objeto que proporciona información de formato específica de la referencia cultural.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified format and culture-specific format information for its real and imaginary parts.</source>
          <target state="translated">Convierte el valor del actual número complejo a su representación de cadena equivalente en formato cartesiano utilizando el formato especificado y la información de formato específica de la referencia cultural indicada para la parte real y la parte imaginaria.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>The string representation of the current instance in Cartesian form, as specified by <ph id="ph1">&lt;paramref name="format" /&gt;</ph> and <ph id="ph2">&lt;paramref name="provider" /&gt;</ph>.</source>
          <target state="translated">Representación de cadena de la instancia actual en formato cartesiano, tal como especifican <ph id="ph1">&lt;paramref name="format" /&gt;</ph> y <ph id="ph2">&lt;paramref name="provider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>The string representation of the complex number returned by this method displays the number using its Cartesian coordinates in the form <ph id="ph1">`(`</ph><bpt id="p1">*</bpt>a<ept id="p1">*</ept><ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>b<ept id="p2">*</ept><ph id="ph3">`)`</ph>, where <bpt id="p3">*</bpt>a<ept id="p3">*</ept> is the real part of the complex number, and <bpt id="p4">*</bpt>b<ept id="p4">*</ept> is its imaginary part.</source>
          <target state="translated">La representación de cadena del número complejo devuelto por este método muestra el número usando sus coordenadas cartesianas en el formulario <ph id="ph1">`(`</ph> <bpt id="p1">*</bpt>una<ept id="p1">*</ept> <ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>b<ept id="p2">*</ept><ph id="ph3">`)`</ph>, donde <bpt id="p3">*</bpt>una<ept id="p3">*</ept> es la parte real del número complejo, y <bpt id="p4">*</bpt>b<ept id="p4">*</ept> es su parte imaginaria.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>Both <bpt id="p1">*</bpt>a<ept id="p1">*</ept> and <bpt id="p2">*</bpt>b<ept id="p2">*</ept> are formatted using the format string specified by <ph id="ph1">`format`</ph>.</source>
          <target state="translated">Ambos <bpt id="p1">*</bpt>una<ept id="p1">*</ept> y <bpt id="p2">*</bpt>b<ept id="p2">*</ept> formateados con la cadena de formato especificada por <ph id="ph1">`format`</ph>.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`format`</ph> parameter can be any valid standard numeric format specifier, or any combination of custom numeric format specifiers.</source>
          <target state="translated">El <ph id="ph1">`format`</ph> parámetro puede ser cualquier especificador de formato numérico estándar válido, o cualquier combinación de especificadores de formato numérico personalizado.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`format`</ph> is equal to <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> or is <ph id="ph3">`null`</ph>, the real and imaginary parts of the complex number are formatted with the general format specifier ("G").</source>
          <target state="translated">Si <ph id="ph1">`format`</ph> es igual a <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> o <ph id="ph3">`null`</ph>, se da formato a las partes reales e imaginarias del número complejo con el especificador de formato general ("G").</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`format`</ph> is any other value, the method throws a <ph id="ph2">&lt;xref:System.FormatException&gt;</ph>.</source>
          <target state="translated">Si <ph id="ph1">`format`</ph> es cualquier otro valor, el método produce una <ph id="ph2">&lt;xref:System.FormatException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following topics:</source>
          <target state="translated">.NET Framework proporciona una amplia compatibilidad de formato, que se describe con más detalle en los temas siguientes:</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>For more information about numeric format strings, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Para obtener más información acerca de las cadenas de formato numérico, vea <bpt id="p1">[</bpt>cadenas de formato numérico estándar<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> y <bpt id="p2">[</bpt>cadenas de formato numérico personalizado<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>For more information about formatting in the .NET Framework, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre el formato de .NET Framework, vea <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation.</source>
          <target state="translated">El <ph id="ph1">`provider`</ph> parámetro es un <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementación.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific information about the format of the real and imaginary numbers in the returned string.</source>
          <target state="translated">Su <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> método devuelve un <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objeto que proporciona información específica de la referencia cultural acerca del formato de los números reales e imaginarios en la cadena devuelta.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>Depending on the <ph id="ph1">`format`</ph> parameter, this object controls symbols such as the negative sign, the group separator, and the decimal point symbol in the output string.</source>
          <target state="translated">En función de la <ph id="ph1">`format`</ph> parámetro, este objeto controla símbolos como el signo negativo, el separador de grupos y el símbolo de separador decimal en la cadena de salida.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the returned string is formatted using the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object of the current culture.</source>
          <target state="translated">Si <ph id="ph1">`provider`</ph> es <ph id="ph2">`null`</ph>, la cadena devuelta se ha formateado con el <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objeto de la referencia cultural actual.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter can be one of the following:</source>
          <target state="translated">El <ph id="ph1">`provider`</ph> parámetro puede ser uno de los siguientes:</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture that supplies formatting information</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objeto que representa la referencia cultural que proporciona información de formato</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that supplies formatting information.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objeto que proporciona información de formato.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>A custom object that implements the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface.</source>
          <target state="translated">Un objeto personalizado que implementa el <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interfaz.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that supplies formatting information.</source>
          <target state="translated">Su <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> método devuelve el <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objeto que proporciona información de formato.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>The following example creates an array of complex numbers, and displays each using several standard format strings as well as <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objects that represent the English - United States ("en-US") and French - France ("fr-FR") cultures.</source>
          <target state="translated">En el ejemplo siguiente se crea una matriz de números complejos y muestra cada una con varias cadenas de formato estándar, así como <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objetos que representan las referencias culturales de inglés - Estados Unidos ("en-US") y Francés - Francia ("fr-FR").</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> no es una cadena de formato válido.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="F:System.Numerics.Complex.Zero">
          <source>Returns a new <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> instance with a real number equal to zero and an imaginary number equal to zero.</source>
          <target state="translated">Devuelve una nueva instancia de <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> con un número real igual a cero y un número imaginario igual a cero.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.Zero">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Zero&gt;</ph> property is most frequently used to compare a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> value to zero.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Numerics.Complex.Zero&gt;</ph> propiedad se utiliza con más frecuencia para comparar un <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> valor a cero.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.Zero">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> value by using the <ph id="ph2">&lt;xref:System.Numerics.Complex.Zero&gt;</ph> property.</source>
          <target state="translated">El ejemplo siguiente crea un <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> valor mediante el uso de la <ph id="ph2">&lt;xref:System.Numerics.Complex.Zero&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.Zero">
          <source>It then compares this value to another value that is instantiated by calling the <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> constructor with a real part equal to zero and an imaginary part equal to zero.</source>
          <target state="translated">A continuación, compara este valor con otro valor cuyas instancias se crean mediante una llamada a la <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> constructor con una parte real igual a cero y una parte imaginaria igual a cero.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.Zero">
          <source>As the output from the example shows, the two values are equal.</source>
          <target state="translated">Como se muestra en el resultado del ejemplo, los dos valores son iguales.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>