<Type Name="SubclassTypeValidator" FullName="System.Configuration.SubclassTypeValidator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2661bed4f84e341e9fe8ddb21a38a2f971f363ea" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30377909" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SubclassTypeValidator : System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SubclassTypeValidator extends System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.SubclassTypeValidator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SubclassTypeValidator&#xA;Inherits ConfigurationValidatorBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class SubclassTypeValidator sealed : System::Configuration::ConfigurationValidatorBase" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationValidatorBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e0396-101">Valida que un objeto es una clase derivada de un tipo especificado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e0396-101">Validates that an object is a derived class of a specified type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0396-102">La <xref:System.Configuration.SubclassTypeValidator> clase se utiliza para garantizar que un objeto cumple determinados criterios.</span><span class="sxs-lookup"><span data-stu-id="e0396-102">The <xref:System.Configuration.SubclassTypeValidator> class is used to ensure that an object meets specific criteria.</span></span> <span data-ttu-id="e0396-103">Los criterios de validación se establece cuando una instancia de la <xref:System.Configuration.SubclassTypeValidator> se crea la clase.</span><span class="sxs-lookup"><span data-stu-id="e0396-103">The criteria for validation is established when an instance of the <xref:System.Configuration.SubclassTypeValidator> class is created.</span></span>  
  
 <span data-ttu-id="e0396-104">El <xref:System.Configuration.SubclassTypeValidator.CanValidate%2A> método determina si el tipo del objeto que se está validando es en realidad un <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="e0396-104">The <xref:System.Configuration.SubclassTypeValidator.CanValidate%2A> method determines whether the type of the object being validated is in fact a <xref:System.Type>.</span></span> <span data-ttu-id="e0396-105">El objeto que se va a validar se pasa como un parámetro de la <xref:System.Configuration.SubclassTypeValidator.Validate%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e0396-105">The object being validated is passed as a parameter of the <xref:System.Configuration.SubclassTypeValidator.Validate%2A> method.</span></span> <span data-ttu-id="e0396-106">Este método comprueba primero que el objeto que se va a validar no es `null`y, a continuación, comprueba que el objeto es una clase derivada del tipo esperado.</span><span class="sxs-lookup"><span data-stu-id="e0396-106">This method first verifies that the object to validate is not `null`, and then verifies that the object is a derived class of the expected type.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SubclassTypeValidator (Type baseClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type baseClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SubclassTypeValidator.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseClass As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SubclassTypeValidator(Type ^ baseClass);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="baseClass">
          <span data-ttu-id="e0396-107">Clase base respecto de la cual se va a validar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0396-107">The base class to validate against.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0396-108">Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SubclassTypeValidator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0396-108">Initializes a new instance of the <see cref="T:System.Configuration.SubclassTypeValidator" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0396-109">Los criterios de validación se basa en el `baseClass` parámetro.</span><span class="sxs-lookup"><span data-stu-id="e0396-109">The criteria for validation is based on the `baseClass` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e0396-110">
            <paramref name="baseClass" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0396-110">
              <paramref name="baseClass" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanValidate">
      <MemberSignature Language="C#" Value="public override bool CanValidate (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanValidate(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SubclassTypeValidator.CanValidate(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanValidate(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="e0396-111">Tipo del objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0396-111">The object type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0396-112">Determina si un objeto se puede validar basándose en el tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0396-112">Determines whether an object can be validated based on type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e0396-113">
            <see langword="true" /> si el parámetro <paramref name="type" /> coincide con un tipo que se puede validar; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0396-113">
              <see langword="true" /> if the <paramref name="type" /> parameter matches a type that can be validated; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0396-114">El <xref:System.Configuration.SubclassTypeValidator.CanValidate%2A> método determina si el tipo del objeto que se está validando es en realidad un <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="e0396-114">The <xref:System.Configuration.SubclassTypeValidator.CanValidate%2A> method determines whether the type of the object being validated is in fact a <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SubclassTypeValidator.Validate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Validate(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e0396-115">Valor del objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0396-115">The object value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0396-116">Determina si el valor de un objeto es válido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0396-116">Determines whether the value of an object is valid.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0396-117">Cuando una instancia de la <xref:System.Configuration.SubclassTypeValidator> se crea la clase, se proporciona la clase base y se utiliza como criterios de evaluación.</span><span class="sxs-lookup"><span data-stu-id="e0396-117">When an instance of the <xref:System.Configuration.SubclassTypeValidator> class is created, the base class is provided and used as evaluation criteria.</span></span> <span data-ttu-id="e0396-118">El objeto que se va a validar se pasa como un parámetro de la <xref:System.Configuration.SubclassTypeValidator.Validate%2A> método.</span><span class="sxs-lookup"><span data-stu-id="e0396-118">The object to validate is passed as a parameter of the <xref:System.Configuration.SubclassTypeValidator.Validate%2A> method.</span></span> <span data-ttu-id="e0396-119">Este método realiza la comprobación de validación entre la clase base y el objeto de parámetro.</span><span class="sxs-lookup"><span data-stu-id="e0396-119">This method performs the validation check between the base class and the parameter object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e0396-120">
            <paramref name="value" /> no es de un <see cref="T:System.Type" /> que se pueda derivar de <paramref name="baseClass" /> como se define en el constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0396-120">
              <paramref name="value" /> is not of a <see cref="T:System.Type" /> that can be derived from <paramref name="baseClass" /> as defined in the constructor.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>