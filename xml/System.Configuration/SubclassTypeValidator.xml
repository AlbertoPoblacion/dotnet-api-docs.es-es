<Type Name="SubclassTypeValidator" FullName="System.Configuration.SubclassTypeValidator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e34cd26fdaf94248a3f026235dca6a89fc936bd9" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37685616" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SubclassTypeValidator : System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SubclassTypeValidator extends System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.SubclassTypeValidator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SubclassTypeValidator&#xA;Inherits ConfigurationValidatorBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class SubclassTypeValidator sealed : System::Configuration::ConfigurationValidatorBase" />
  <TypeSignature Language="F#" Value="type SubclassTypeValidator = class&#xA;    inherit ConfigurationValidatorBase" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationValidatorBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Valida que un objeto es una clase derivada de un tipo especificado.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Configuration.SubclassTypeValidator> clase se utiliza para garantizar que un objeto cumple determinados criterios. Los criterios de validación se establece cuando una instancia de la <xref:System.Configuration.SubclassTypeValidator> se crea la clase.  
  
 El <xref:System.Configuration.SubclassTypeValidator.CanValidate%2A> método determina si el tipo del objeto que se está validando es en realidad un <xref:System.Type>. El objeto que se va a validar se pasa como un parámetro de la <xref:System.Configuration.SubclassTypeValidator.Validate%2A> método. Este método primero comprueba que el objeto para validar no es `null`y, a continuación, comprueba que el objeto es una clase derivada del tipo esperado.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SubclassTypeValidator (Type baseClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type baseClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SubclassTypeValidator.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseClass As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SubclassTypeValidator(Type ^ baseClass);" />
      <MemberSignature Language="F#" Value="new System.Configuration.SubclassTypeValidator : Type -&gt; System.Configuration.SubclassTypeValidator" Usage="new System.Configuration.SubclassTypeValidator baseClass" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="baseClass">Clase base respecto de la cual se va a validar.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Configuration.SubclassTypeValidator" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los criterios de validación se basa en el `baseClass` parámetro.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="baseClass" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CanValidate">
      <MemberSignature Language="C#" Value="public override bool CanValidate (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanValidate(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SubclassTypeValidator.CanValidate(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanValidate(Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.CanValidate : Type -&gt; bool" Usage="subclassTypeValidator.CanValidate type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Tipo del objeto.</param>
        <summary>Determina si un objeto se puede validar basándose en el tipo.</summary>
        <returns>
          <see langword="true" /> si el parámetro <paramref name="type" /> coincide con un tipo que se puede validar; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Configuration.SubclassTypeValidator.CanValidate%2A> método determina si el tipo del objeto que se está validando es en realidad un <xref:System.Type>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SubclassTypeValidator.Validate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Validate(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Validate : obj -&gt; unit" Usage="subclassTypeValidator.Validate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Valor del objeto.</param>
        <summary>Determina si el valor de un objeto es válido.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando una instancia de la <xref:System.Configuration.SubclassTypeValidator> se crea la clase, proporciona la clase base y usar como criterios de evaluación. Objeto que se va a validar se pasa como un parámetro de la <xref:System.Configuration.SubclassTypeValidator.Validate%2A> método. Este método realiza la comprobación de validación entre la clase base y el objeto de parámetro.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> no es de un <see cref="T:System.Type" /> que se pueda derivar de <paramref name="baseClass" /> como se define en el constructor.</exception>
      </Docs>
    </Member>
  </Members>
</Type>