<Type Name="IConfigurationSectionHandler" FullName="System.Configuration.IConfigurationSectionHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="384d73827fca9429904bc08c858c97e1699a071d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36696670" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IConfigurationSectionHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IConfigurationSectionHandler" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IConfigurationSectionHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface IConfigurationSectionHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class IConfigurationSectionHandler" />
  <TypeSignature Language="F#" Value="type IConfigurationSectionHandler = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Controla el acceso a determinadas secciones de configuración.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **Importante** <xref:System.Configuration.IConfigurationSectionHandler> está en desuso en .NET Framework 2.0 y versiones posteriores. Sin embargo, dado que se usa internamente, se ha conservado. Puede encontrar un ejemplo en [Cómo: Create Custom Configuration Sections Using IConfigurationSectionHandler](http://msdn.microsoft.com/library/07f68a3f-2920-4665-a824-47bda744e662). Si utiliza el ejemplo anterior, genérelo con la versión 1.0 o 1.1 de .NET Framework.  
  
 En .NET Framework versión 2.0 y versiones posteriores, en su lugar, debe derivar de la <xref:System.Configuration.ConfigurationSection> clase para implementar el controlador de la sección de configuración relacionados. Puede encontrar un ejemplo en [Cómo: Create Custom Configuration Sections Using ConfigurationSection](http://msdn.microsoft.com/library/febaca98-c727-4017-95ed-82e2fb6cf234).  
  
 Instancias de la <xref:System.Configuration.IConfigurationSectionHandler> clase debe ser sin estado de seguras para subprocesos. El <xref:System.Configuration.IConfigurationSectionHandler.Create%2A> debe poder llamar al método desde varios subprocesos simultáneamente.  
  
 Además, el objeto de configuración generado por el <xref:System.Configuration.IConfigurationSectionHandler.Create%2A> método debe ser inmutable de seguras para subprocesos. Dado que los objetos de configuración se almacenan en caché por el sistema de configuración, es importante no se puede modificar el argumento primario para el <xref:System.Configuration.IConfigurationSectionHandler.Create%2A> método. Por ejemplo, si el valor devuelto de <xref:System.Configuration.IConfigurationSectionHandler.Create%2A> es sólo una pequeña modificación del elemento primario, se deben efectuar modificaciones reales en un clon del elemento primario, no el original.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public object Create (object parent, object configContext, System.Xml.XmlNode section);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Create(object parent, object configContext, class System.Xml.XmlNode section) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (parent As Object, configContext As Object, section As XmlNode) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Create(System::Object ^ parent, System::Object ^ configContext, System::Xml::XmlNode ^ section);" />
      <MemberSignature Language="F#" Value="abstract member Create : obj * obj * System.Xml.XmlNode -&gt; obj" Usage="iConfigurationSectionHandler.Create (parent, configContext, section)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Object" />
        <Parameter Name="configContext" Type="System.Object" />
        <Parameter Name="section" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="parent">Objeto primario.</param>
        <param name="configContext">Objeto de contexto de configuración.</param>
        <param name="section">Nodo XML de la sección.</param>
        <summary>Crea un controlador de secciones de configuración.</summary>
        <returns>El objeto controlador de secciones creado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Instancias de la <xref:System.Configuration.IConfigurationSectionHandler> clase debe ser sin estado de seguras para subprocesos. El <xref:System.Configuration.IConfigurationSectionHandler.Create%2A> debe poder llamar al método desde varios subprocesos simultáneamente.  
  
 Además, el objeto de configuración generado por el <xref:System.Configuration.IConfigurationSectionHandler.Create%2A> método debe ser inmutable de seguras para subprocesos. Dado que los objetos de configuración se almacenan en caché por el sistema de configuración, es importante no se puede modificar el argumento primario <xref:System.Configuration.IConfigurationSectionHandler.Create%2A>. Por ejemplo, si el valor devuelto de <xref:System.Configuration.IConfigurationSectionHandler.Create%2A> es sólo una pequeña modificación del elemento primario, se deben efectuar modificaciones reales en un clon del elemento primario, no el original.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.ConfigurationSection" />
      </Docs>
    </Member>
  </Members>
</Type>