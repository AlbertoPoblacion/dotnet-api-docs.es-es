<Type Name="SettingsProvider" FullName="System.Configuration.SettingsProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e349899c9a9eaa082e51bfa42237de5a3090e2dc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30379669" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SettingsProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SettingsProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.SettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SettingsProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class SettingsProvider abstract : System::Configuration::Provider::ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Actúa como una clase base para derivar los proveedores de configuración personalizados de la arquitectura de configuración de aplicación.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un proveedor de configuración define el mecanismo para almacenar los datos de configuración que se utilizan en la arquitectura de configuración de aplicación. .NET Framework contiene un proveedor de configuración predeterminado único, <xref:System.Configuration.LocalFileSettingsProvider>, que almacena los datos de configuración en el sistema de archivos local. Sin embargo, puede crear mecanismos de almacenamiento alternativos derivando de la clase abstracta <xref:System.Configuration.SettingsProvider> clase. El proveedor que utiliza una clase contenedora se determina mediante la decoración de la clase de contenedor con el <xref:System.Configuration.SettingsProviderAttribute>. Si este atributo no se proporciona, el valor predeterminado, <xref:System.Configuration.LocalFileSettingsProvider>, se utiliza.  
  
 Cuando se crea un proveedor de configuración personalizado, como mínimo, debe proporcionar implementaciones para los tres métodos de esta clase: <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A>, <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> y <xref:System.Configuration.SettingsProvider.ApplicationName%2A>.  
  
 Para las aplicaciones de cliente, puede agregar funcionalidad más normalizada a un proveedor personalizado implementando también la <xref:System.Configuration.IApplicationSettingsProvider> interfaz. Esta interfaz refleja los métodos que se encuentran en la <xref:System.Configuration.ApplicationSettingsBase> (clase), que principalmente habilita la compatibilidad de versiones.  
  
 Por lo general, debería diseñar proveedores de configuración como una sola instancia para evitar la contención de recursos de almacenamiento. Proveedores también deben ser seguro para subprocesos porque se pueden llamar simultáneamente desde varias instancias de contenedor en un único dominio de aplicación o desde varias aplicaciones en dominios diferentes.  
  
 Como mínimo, un proveedor de configuración debe reconocer los tres atributos:<xref:System.Configuration.ApplicationScopedSettingAttribute>, <xref:System.Configuration.UserScopedSettingAttribute>, y <xref:System.Configuration.DefaultSettingValueAttribute>. Para obtener una lista completa de atributos que se pueden aplicar a la configuración de la aplicación, consulte [Application Settings Attributes](~/docs/framework/winforms/advanced/application-settings-attributes.md). Un proveedor de configuración personalizada debe resolver los atributos que se aplican a las propiedades de configuración de la siguiente manera:  
  
1.  Si el proveedor puede satisfacer la solicitud implicada en el atributo, obviamente debería hacerlo.  
  
2.  Si el proveedor no puede satisfacer la solicitud, debe omitir en modo silencioso.  
  
3.  Si dos o más propiedades están en conflicto; Por ejemplo, una propiedad está decorada con <xref:System.Configuration.ApplicationScopedSettingAttribute> y <xref:System.Configuration.UserScopedSettingAttribute>; el proveedor debe producir una <xref:System.Configuration.ConfigurationException>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
    <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <altmember cref="T:System.Configuration.ConfigurationException" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SettingsProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SettingsProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una instancia de la clase <see cref="T:System.Configuration.SettingsProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se trata de este constructor protegido predeterminado para esta clase abstracta. Proveedores de configuración personalizados derivados no son necesarios para garantizar un constructor explícito porque el <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> método normalmente realiza toda la inicialización.  
  
 Código de cliente por lo general no directamente crea instancias de un proveedor de configuración; en su lugar, utilice el procedimiento siguiente para buscar un proveedor de configuración para una propiedad de configuración concreta:  
  
1.  Llame a la <xref:System.ComponentModel.Component.GetService%2A> método en actual <xref:System.ComponentModel.Component> o <xref:System.ComponentModel.ISite> para devolver una referencia al actual <xref:System.Configuration.ISettingsProviderService>.  
  
2.  Llame a la <xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A> método de la <xref:System.Configuration.ISettingsProviderService> recuperado en el primer paso para devolver el proveedor de configuración.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
        <altmember cref="M:System.Configuration.ISettingsProviderService.GetSettingsProvider(System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public abstract string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SettingsProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre de la aplicación que se está ejecutando actualmente.</summary>
        <value>A <see cref="T:System.String" /> que contiene el nombre abreviado de la aplicación, que no contiene una ruta de acceso completa o una extensión, por ejemplo, <c>SimpleAppSettings</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Configuration.SettingsProvider.ApplicationName%2A> y <xref:System.Configuration.Provider.ProviderBase.Name%2A> propiedades ayudan a eliminar la ambigüedad del mismo modo de propiedades de configuración con nombre en aplicaciones diferentes.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Provider.ProviderBase.Name" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValues">
      <MemberSignature Language="C#" Value="public abstract System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValueCollection GetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPropertyValues (context As SettingsContext, collection As SettingsPropertyCollection) As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Configuration::SettingsPropertyValueCollection ^ GetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="collection" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Configuration.SettingsContext" /> que describe el uso de la aplicación actual.</param>
        <param name="collection">Colección <see cref="T:System.Configuration.SettingsPropertyCollection" /> que contiene el grupo de propiedades de configuración cuyos valores se van a recuperar.</param>
        <summary>Devuelve la colección de valores de propiedades de configuración para la instancia de la aplicación y el grupo de propiedades de configuración especificados.</summary>
        <returns>Objeto <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> que contiene los valores para el grupo de propiedades de configuración especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A> método debe implementarse para controlar los valores especiales, los marcados con <xref:System.Configuration.SpecialSettingAttribute>, así como para conciliar la configuración de aplicación y del usuario.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SpecialSettingAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValues">
      <MemberSignature Language="C#" Value="public abstract void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyValueCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetPropertyValues (context As SettingsContext, collection As SettingsPropertyValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyValueCollection ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="collection" Type="System.Configuration.SettingsPropertyValueCollection" />
      </Parameters>
      <Docs>
        <param name="context">Objeto <see cref="T:System.Configuration.SettingsContext" /> que describe el uso de la aplicación actual.</param>
        <param name="collection">Objeto <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> que representa el grupo de valores de propiedades que se va a establecer.</param>
        <summary>Establece los valores del grupo especificado de valores de propiedades.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ApplicationSettingsBase> contiene el <xref:System.Configuration.ApplicationSettingsBase.Save%2A> método, que se llama para conservar los valores de todas sus propiedades de configuración. Este método enumera todos los valores de proveedores asociados con sus propiedades de configuración y llama a la <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> método para cada <xref:System.Configuration.SettingsProvider> para realizar la operación de serialización real.  
  
 El <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> método debe implementarse teniendo en cuenta la seguridad:  
  
-   Código de plena confianza solo debe permitirse para actualizar la configuración de la aplicación. Código de confianza parcial debe permitirse para actualizar la configuración de la aplicación de usuario solo. Código no seguro no se permite normalmente para actualizar la configuración de la aplicación.  
  
-   Cuotas de uso deben considerarse para protegerse contra ataques de recursos por aplicaciones de confianza parcial.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
      </Docs>
    </Member>
  </Members>
</Type>