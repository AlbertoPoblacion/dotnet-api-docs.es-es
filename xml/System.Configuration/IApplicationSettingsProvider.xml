<Type Name="IApplicationSettingsProvider" FullName="System.Configuration.IApplicationSettingsProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2e29c40f8cbdc9f6186d829367dc515ce43887ef" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30379379" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IApplicationSettingsProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IApplicationSettingsProvider" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IApplicationSettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IApplicationSettingsProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IApplicationSettingsProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Define funciones extendidas para los proveedores de configuración de aplicación basada en cliente.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La arquitectura de configuración de aplicación permite proporcionar un mecanismo de almacenamiento personalizado para configuración de la aplicación mediante la creación de un proveedor de configuración personalizada, que es una clase derivada de <xref:System.Configuration.SettingsProvider>. Esta clase contiene la funcionalidad básica para almacenar y recuperar propiedades. Sin embargo, puede agregar funcionalidad normalizada adicional implementando la <xref:System.Configuration.IApplicationSettingsProvider> interfaz en el proveedor de configuración personalizada. Esta interfaz contiene tres métodos que básicamente permiten que el proveedor de configuración más inteligente cambios de versión de identificador de aplicación. Normalmente, el proveedor de configuración almacenará la configuración de la aplicación para las diferentes versiones de una aplicación por separado como anticiparse a las siguientes circunstancias:  
  
-   Ejecución en paralelo de distintas versiones de una aplicación.  
  
-   Conservar la configuración de la aplicación al actualizar una aplicación.  
  
-   Restablecer la configuración de la aplicación con sus valores predeterminados para la versión usada actualmente.  
  
 La clase <xref:System.Configuration.LocalFileSettingsProvider> implementa la interfaz <xref:System.Configuration.IApplicationSettingsProvider>. El mismo conjunto de métodos incluidos en <xref:System.Configuration.IApplicationSettingsProvider> también se encuentra en la <xref:System.Configuration.ApplicationSettingsBase> (clase), lo que permite el establecimiento de un canal de comunicación predefinido entre un contenedor de configuración de la aplicación y su proveedor de configuración.  
  
> [!NOTE]
>  Esta interfaz es opcional. Si un proveedor no implementa esta interfaz, se producirá un error en la infraestructura de configuración no se notifica si intenta obtener acceso a cualquiera de los métodos definidos por esta interfaz.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.SettingsProvider" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
  </Docs>
  <Members>
    <Member MemberName="GetPreviousVersion">
      <MemberSignature Language="C#" Value="public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValue GetPreviousVersion(class System.Configuration.SettingsContext context, class System.Configuration.SettingsProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousVersion (context As SettingsContext, property As SettingsProperty) As SettingsPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Configuration::SettingsPropertyValue ^ GetPreviousVersion(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsProperty ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="property" Type="System.Configuration.SettingsProperty" />
      </Parameters>
      <Docs>
        <param name="context">Objeto <see cref="T:System.Configuration.SettingsContext" /> que describe el uso de la aplicación actual.</param>
        <param name="property">Objeto <see cref="T:System.Configuration.SettingsProperty" /> cuyo valor se va a devolver.</param>
        <summary>Devuelve el valor de la propiedad de configuración especificada para la versión anterior de la misma aplicación.</summary>
        <returns>Objeto <see cref="T:System.Configuration.SettingsPropertyValue" /> que contiene el último valor de la configuración de propiedad especificada establecido en la versión anterior de la aplicación; o <see langword="null" /> si no se puede encontrar la configuración.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar el <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> método junto con el <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> método para migrar la configuración de la aplicación durante o después de la instalación de una nueva versión de una aplicación.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException">Para <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> permiso.</permission>
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (System.Configuration.SettingsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset(class System.Configuration.SettingsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (context As SettingsContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset(System::Configuration::SettingsContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
      </Parameters>
      <Docs>
        <param name="context">Objeto <see cref="T:System.Configuration.SettingsContext" /> que describe el uso de la aplicación actual.</param>
        <summary>Reestablece los valores predeterminados de la configuración de aplicación asociada a la aplicación especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A> método reinicializa los valores almacenados del grupo de configuración de aplicación especificado. En cambio, <xref:System.Configuration.DefaultSettingValueAttribute> proporciona un valor predeterminado para una propiedad de configuración de inicio único durante la inicialización de la propiedad, si no tiene ningún valor almacenado.  
  
 El proveedor de configuración determina cuáles son valores predeterminados razonables para el grupo de configuración de la aplicación especificado. Por ejemplo, la implementación en <xref:System.Configuration.LocalFileSettingsProvider> restablece la configuración de ámbito de usuario a sus valores compartidos en el `application.exe.config` archivo; en cambio, deja sin modificar la configuración de ámbito de la aplicación.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException">Para <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> permiso.</permission>
        <altmember cref="T:System.Configuration.DefaultSettingValueAttribute" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Upgrade(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Upgrade (context As SettingsContext, properties As SettingsPropertyCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Upgrade(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context">Objeto <see cref="T:System.Configuration.SettingsContext" /> que describe el uso de la aplicación actual.</param>
        <param name="properties">Colección <see cref="T:System.Configuration.SettingsPropertyCollection" /> que contiene el grupo de propiedades de configuración cuyos valores se van a recuperar.</param>
        <summary>Indica al proveedor que se ha actualizado la aplicación. De este modo el proveedor tiene una oportunidad de actualizar su configuración almacenada según resulte conveniente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework habilita la instalación en paralelo y la ejecución de las distintas versiones de la misma aplicación. El proveedor de configuración de la aplicación almacena la configuración de la aplicación para cada versión de una aplicación por separado para garantizar el aislamiento. Sin embargo, puede migrar la configuración de la versión anterior de una aplicación a la actual. Para proporcionar esta funcionalidad de migración, use la <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> método, que se implementa en una clase derivada de <xref:System.Configuration.SettingsProvider>.  
  
 Puede usar el <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> método junto con el <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> método para migrar la configuración de la aplicación durante o después de la instalación de una nueva versión de una aplicación.  
  
 Se debe suprimir este método para cada aplicación que establece que tiene el <xref:System.Configuration.NoSettingsVersionUpgradeAttribute> se aplica a él, o para toda la clase contenedora de la configuración, derivado de <xref:System.Configuration.ApplicationSettingsBase>.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException">Para <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> permiso.</permission>
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
        <altmember cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>