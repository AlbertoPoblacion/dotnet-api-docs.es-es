<Type Name="LocalFileSettingsProvider" FullName="System.Configuration.LocalFileSettingsProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0c9a3a4064263081f2a1f46910ce3194a6d72c40" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36696193" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LocalFileSettingsProvider : System.Configuration.SettingsProvider, System.Configuration.IApplicationSettingsProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LocalFileSettingsProvider extends System.Configuration.SettingsProvider implements class System.Configuration.IApplicationSettingsProvider" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.LocalFileSettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class LocalFileSettingsProvider&#xA;Inherits SettingsProvider&#xA;Implements IApplicationSettingsProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class LocalFileSettingsProvider : System::Configuration::SettingsProvider, System::Configuration::IApplicationSettingsProvider" />
  <TypeSignature Language="F#" Value="type LocalFileSettingsProvider = class&#xA;    inherit SettingsProvider&#xA;    interface IApplicationSettingsProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.SettingsProvider</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Configuration.IApplicationSettingsProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Provides persistence for application settings classes.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Proveedores de configuración, define un mecanismo para almacenar los datos de configuración que se utilizan en la arquitectura de configuración de aplicación. El [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] contiene un proveedor de configuración predeterminado único, <xref:System.Configuration.LocalFileSettingsProvider>, que almacena los datos de configuración en el sistema de archivos local. Una propiedad de configuración de aplicación o el grupo de propiedades están asociadas a un proveedor de configuración específica mediante el uso de la <xref:System.Configuration.SettingsProviderAttribute>.  
  
 Normalmente, el programa cliente no explícitamente acceso a esta clase; en su lugar, la arquitectura de configuración de aplicación invoca automáticamente el proveedor de configuración adecuado cuando se requieren sus servicios. Por ejemplo, muchos de los miembros de <xref:System.Configuration.ApplicationSettingsBase> delegar su trabajo en el proveedor de configuración asociada.  
  
 <xref:System.Configuration.LocalFileSettingsProvider> conserva los valores de los archivos de configuración que tienen la extensión `.config`. El contenido de los archivos de configuración se estructura como documentos XML. Dependiendo de si el valor se sitúa en el nivel de aplicación o en el nivel de usuario, los datos de configuración se almacenan como elementos dentro de un `<applicationSettings>` o un `<userSettings>` sección grupo, respectivamente. Cada uno de estos grupos se representa mediante su correspondiente <xref:System.Configuration.AppSettingsSection> o <xref:System.Configuration.ClientSettingsSection>, respectivamente. Cada objeto de sección le pertenece y se administra mediante un controlador de la sección de configuración, que es un objeto de tipo <xref:System.Configuration.IConfigurationSectionHandler>.  
  
 La configuración de ámbito de aplicación y la configuración de ámbito de usuario predeterminada se almacena en un archivo denominado `application.exe.config`, que se crea en el mismo directorio que el archivo ejecutable. Opciones de configuración de aplicación son de solo lectura. Datos de usuario específico se almacenan en un archivo denominado `user.config`, almacenado en el directorio principal del usuario. Si están habilitados los perfiles móviles, pudieron existir dos versiones del archivo de configuración de usuario. En tal caso, las entradas de la versión móvil tienen prioridad sobre las entradas duplicadas en el archivo de configuración de usuario local.  
  
 Para obtener más información acerca de la configuración de la aplicación, consulte [Application Settings for Windows Forms](~/docs/framework/winforms/advanced/application-settings-for-windows-forms.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
    <altmember cref="T:System.Configuration.ApplicationScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.UserScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <altmember cref="T:System.Configuration.ClientSettingsSection" />
    <altmember cref="T:System.Configuration.IConfigurationSectionHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LocalFileSettingsProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LocalFileSettingsProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Configuration.LocalFileSettingsProvider" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El constructor predeterminado establece la <xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A> propiedad <xref:System.String.Empty>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.LocalFileSettingsProvider.ApplicationName" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.LocalFileSettingsProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Configuration.LocalFileSettingsProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the currently running application.</summary>
        <value>Una cadena que contiene el nombre para mostrar de la aplicación.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A> y <xref:System.Configuration.Provider.ProviderBase.Name%2A> propiedades ayudan a eliminar la ambigüedad del mismo modo de propiedades de configuración con nombre en aplicaciones diferentes.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Provider.ProviderBase.Name" />
      </Docs>
    </Member>
    <Member MemberName="GetPreviousVersion">
      <MemberSignature Language="C#" Value="public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValue GetPreviousVersion(class System.Configuration.SettingsContext context, class System.Configuration.SettingsProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousVersion (context As SettingsContext, property As SettingsProperty) As SettingsPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Configuration::SettingsPropertyValue ^ GetPreviousVersion(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsProperty ^ property);" />
      <MemberSignature Language="F#" Value="abstract member GetPreviousVersion : System.Configuration.SettingsContext * System.Configuration.SettingsProperty -&gt; System.Configuration.SettingsPropertyValue&#xA;override this.GetPreviousVersion : System.Configuration.SettingsContext * System.Configuration.SettingsProperty -&gt; System.Configuration.SettingsPropertyValue" Usage="localFileSettingsProvider.GetPreviousVersion (context, property)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="property" Type="System.Configuration.SettingsProperty" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.Configuration.SettingsContext" /> that describes where the application settings property is used.</param>
        <param name="property">The <see cref="T:System.Configuration.SettingsProperty" /> whose value is to be returned.</param>
        <summary>Returns the value of the named settings property for the previous version of the same application.</summary>
        <returns>A <see cref="T:System.Configuration.SettingsPropertyValue" /> representing the application setting if found; otherwise, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion%2A> método se utiliza a menudo junto con el <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> método al migrar la configuración de la aplicación durante la instalación de una nueva versión de una aplicación. Para obtener más información, vea el método <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)" />
        <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValues">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Configuration.SettingsPropertyValueCollection GetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPropertyValues (context As SettingsContext, properties As SettingsPropertyCollection) As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Configuration::SettingsPropertyValueCollection ^ GetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ properties);" />
      <MemberSignature Language="F#" Value="override this.GetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; System.Configuration.SettingsPropertyValueCollection" Usage="localFileSettingsProvider.GetPropertyValues (context, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</param>
        <param name="properties">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> containing the settings property group whose values are to be retrieved.</param>
        <summary>Returns the collection of setting property values for the specified application instance and settings property group.</summary>
        <returns>A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> containing the values for the specified settings property group.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Configuration.LocalFileSettingsProvider.GetPropertyValues%2A> método también administra el tipo de configuración de aplicación especial <xref:System.Configuration.SpecialSetting.ConnectionString>. Las cadenas de conexión se almacenan en una sección especial del archivo de configuración delimitado por el elemento `<connectionstrings>`.  
  
> [!CAUTION]
>  <xref:System.Configuration.LocalFileSettingsProvider> no usa el cifrado para conservar la configuración. Por lo tanto, no almacene las contraseñas de texto sin formato u otra información confidencial utilizando este proveedor sin tomar precauciones adicionales, como el cifrado por separado de la información en el archivo de configuración. Para obtener más información, consulte [Encrypting Configuration Information Using Protected Configuration](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">A user-scoped setting was encountered but the current configuration only supports application-scoped settings.</exception>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SpecialSettingAttribute" />
        <altmember cref="P:System.Configuration.SettingsPropertyValue.IsDirty" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, values As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ values);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="localFileSettingsProvider.Initialize (name, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="values" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">The friendly name of the provider.</param>
        <param name="values">A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</param>
        <summary>Initializes the provider.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (System.Configuration.SettingsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset(class System.Configuration.SettingsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (context As SettingsContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset(System::Configuration::SettingsContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member Reset : System.Configuration.SettingsContext -&gt; unit&#xA;override this.Reset : System.Configuration.SettingsContext -&gt; unit" Usage="localFileSettingsProvider.Reset context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</param>
        <summary>Resets all application settings properties associated with the specified application to their default values.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Configuration.LocalFileSettingsProvider.Reset%2A> método restaura los valores almacenados del grupo de configuración de aplicación especificado. La acción de <xref:System.Configuration.LocalFileSettingsProvider.Reset%2A> dependerá del alcance de la propiedad de configuración de aplicación:  
  
-   No afecta a la configuración de ámbito de aplicación.  
  
-   La configuración de ámbito de usuario se restablece a los valores predeterminados que se almacenan como entradas de solo lectura en el archivo de configuración de aplicación, `application.exe.config`. Si se usan perfiles móviles, los valores de configuración de aplicación en el perfil móvil tienen prioridad sobre los duplicados que se encuentran en el perfil local.  
  
 Tenga en cuenta que si se usan perfiles móviles, puede haber dos `user.config` archivos, uno para la configuración local y otro para el perfil móvil.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">A user-scoped setting was encountered but the current configuration only supports application-scoped settings.</exception>
        <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
        <altmember cref="T:System.Configuration.DefaultSettingValueAttribute" />
        <altmember cref="T:System.Configuration.SettingsManageability" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValues">
      <MemberSignature Language="C#" Value="public override void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyValueCollection values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetPropertyValues (context As SettingsContext, values As SettingsPropertyValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyValueCollection ^ values);" />
      <MemberSignature Language="F#" Value="override this.SetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyValueCollection -&gt; unit" Usage="localFileSettingsProvider.SetPropertyValues (context, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="values" Type="System.Configuration.SettingsPropertyValueCollection" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</param>
        <param name="values">A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> representing the group of property settings to set.</param>
        <summary>Sets the values of the specified group of property settings.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Deriva una clase contenedora de configuración, <xref:System.Configuration.ApplicationSettingsBase>, contiene el <xref:System.Configuration.ApplicationSettingsBase.Save%2A> método, que se llama para conservar los valores de todas sus propiedades de configuración. Este método enumera todos los valores de proveedores asociados con sus propiedades de configuración y llama a la <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> método para cada <xref:System.Configuration.SettingsProvider> para realizar la operación de serialización real.  
  
 <xref:System.Configuration.LocalFileSettingsProvider.SetPropertyValues%2A> serializa individualmente cada propiedad de configuración de aplicación de ámbito de usuario a su configuración en el archivo de la aplicación correspondiente `user.config` archivo de configuración.  
  
 De forma predeterminada, la <xref:System.Configuration.LocalFileSettingsProvider.SetPropertyValues%2A> método utiliza la siguiente secuencia lógica para determinar el esquema de serialización, según el tipo de la propiedad de configuración:  
  
1.  Si el tipo tiene asociado un <xref:System.ComponentModel.TypeConverter> con un <xref:System.ComponentModel.TypeConverter.ConvertToString%2A> se utiliza la implementación del método, esta conversión.  
  
2.  Se usa la serialización XML.  
  
 Sin embargo, puede especificar un mecanismo de serialización preferido mediante la <xref:System.Configuration.SettingsSerializeAsAttribute>. <xref:System.Configuration.LocalFileSettingsProvider> no se admite la serialización binaria en [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)].  
  
 Si una propiedad de configuración de ámbito de usuario se vuelve a establecer en su valor predeterminado explícitamente, el proveedor de configuración de archivo local quitará la entrada para la configuración asociada desde el archivo de configuración de usuario. El siguiente acceso de lectura para esta propiedad simplemente usará el valor predeterminado.  
  
> [!CAUTION]
>  <xref:System.Configuration.LocalFileSettingsProvider> no usa el cifrado para conservar la configuración. Por lo tanto, no almacene las contraseñas de texto sin formato u otra información confidencial utilizando este proveedor sin tomar precauciones adicionales, como el cifrado por separado de la información en el archivo de configuración. Para obtener más información, consulte [Encrypting Configuration Information Using Protected Configuration](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">A user-scoped setting was encountered but the current configuration only supports application-scoped settings.  -or-  There was a general failure saving the settings to the configuration file.</exception>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.Configuration.SettingsSerializeAsAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Upgrade(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Upgrade (context As SettingsContext, properties As SettingsPropertyCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Upgrade(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member Upgrade : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; unit&#xA;override this.Upgrade : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; unit" Usage="localFileSettingsProvider.Upgrade (context, properties)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</param>
        <param name="properties">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> containing the settings property group whose values are to be retrieved.</param>
        <summary>Attempts to migrate previous user-scoped settings from a previous version of the same application.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.LocalFileSettingsProvider> migra la configuración local y móvil en operaciones independientes.  
  
 El <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> método se suprime para cada aplicación que establece que tiene el <xref:System.Configuration.NoSettingsVersionUpgradeAttribute> aplicada al mismo o para toda la clase contenedora de la configuración, derivado de <xref:System.Configuration.ApplicationSettingsBase>.  
  
 Este modo que se llama a este método depende del tipo de aplicación que se está actualizando:  
  
-   Cada versión de un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplicación se almacena en su propio directorio de instalación aislado. Después de una nueva versión de un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplicación está instalada, y cuando se ejecuta primero la nueva versión, lógica interna llama automáticamente a <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> para migrar toda la configuración de aplicación común a la nueva versión. Para más información, consulte [ClickOnce y configuración de la aplicación](http://msdn.microsoft.com/library/891caba6-faef-4a3c-8f71-60e6fadb60eb).  
  
-   Estándar de Windows Forms y aplicaciones de consola deben llamar manualmente <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>, porque no hay un modo general y automático para determinar cuándo se ejecuta este tipo de aplicación por primera vez. Las dos formas habituales de necesarios se desde el programa de instalación o mediante desde la propia aplicación, utilizando una propiedad conservada, a menudo denominación algo parecido a `IsFirstRun`.  
  
 Tenga en cuenta que para que la versión más reciente migrar la configuración de la aplicación, debe ser capaz de cargar y leer la versión anterior de la configuración de la aplicación. Por lo tanto, debe contener clases contenedoras compatibles con las versiones nuevas y anteriores de la aplicación.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">A user-scoped setting was encountered but the current configuration only supports application-scoped settings.  -or-  The previous version of the configuration file could not be accessed.</exception>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)" />
        <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
        <altmember cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>