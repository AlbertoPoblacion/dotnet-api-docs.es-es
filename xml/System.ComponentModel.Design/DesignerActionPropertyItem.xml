<Type Name="DesignerActionPropertyItem" FullName="System.ComponentModel.Design.DesignerActionPropertyItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="53c95ca8b8f21d169f985d0a2677c965301c2a12" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39951878" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DesignerActionPropertyItem : System.ComponentModel.Design.DesignerActionItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DesignerActionPropertyItem extends System.ComponentModel.Design.DesignerActionItem" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignerActionPropertyItem" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DesignerActionPropertyItem&#xA;Inherits DesignerActionItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerActionPropertyItem sealed : System::ComponentModel::Design::DesignerActionItem" />
  <TypeSignature Language="F#" Value="type DesignerActionPropertyItem = class&#xA;    inherit DesignerActionItem" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.DesignerActionItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa un elemento de panel asociado a una propiedad en una clase que se deriva de <see cref="T:System.ComponentModel.Design.DesignerActionList" />. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.ComponentModel.Design.DesignerActionPropertyItem> clase representa los elementos individuales de un panel de etiquetas inteligentes. Cada elemento se suele asociar con una propiedad en una clase que se deriva el <xref:System.ComponentModel.Design.DesignerActionList> clase y proporcionado por el autor del componente. La asociación se mantiene a través del nombre de la propiedad, tal como está almacenado en el <xref:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName%2A> propiedad.  
  
 Elementos de panel individuales se asocian entre sí para formar un panel mediante una llamada a la <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> método de la <xref:System.ComponentModel.Design.DesignerActionList> clase.  
  
 Para mostrar el valor de la propiedad asociada, esa propiedad debe tener un `get` método de descriptor de acceso; para permitir la edición, la propiedad debe tener un `set` método de descriptor de acceso. La manera en que el panel permite la edición directa de un elemento de propiedad por el usuario depende de la información de tipo auxiliar presente para el tipo de datos de la propiedad asociada. En la tabla siguiente se muestra la combinación probable.  
  
|Información de tipo de propiedad|Edición de la interfaz de usuario (UI) de elemento de propiedad|  
|-------------------------------|-------------------------------------------------|  
|Tiene un editor del tipo asociado (<xref:System.Drawing.Design.UITypeEditor>)|Para editar el valor de propiedad, se muestra el editor de tipos asociado a la propiedad subyacente.|  
|Tiene un convertidor de tipos asociado a un tipo conocido (<xref:System.ComponentModel.TypeConverter>)|Para editar el valor de propiedad, se muestra el editor de tipos para el tipo conocido. Por ejemplo, un convertidor de tipos <xref:System.String> probablemente mostrará un <xref:System.Windows.Forms.TextBox>.|  
|Valor booleano|El elemento se muestra con una interfaz de usuario binario, como una marca de verificación.|  
|Ninguno de los anteriores.|El elemento se muestra como una cadena de texto no modificable con el tipo de datos <xref:System.Object.ToString%2A> método.|  
  
 Todos los tipos fundamentales, tales como <xref:System.Boolean?displayProperty=nameWithType>, comunes y [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] tipos de datos, como <xref:System.String?displayProperty=nameWithType>, proporcionar estándar convertidores y editores. Para obtener más información sobre los convertidores de tipos, vea [Cómo: implementar un convertidor de tipos](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56) o [conversión de tipos generalizada](http://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada). Para obtener más información acerca de los editores de tipo, consulte [Cómo: implementar un Editor de tipos de interfaz de usuario](http://msdn.microsoft.com/library/ed961fb9-ee02-4666-b511-05f3204bb75c).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear una colección de <xref:System.ComponentModel.Design.DesignerActionItem> objetos. Para obtener un ejemplo completo de la implementación de etiquetas inteligentes, consulte [Cómo: asociar etiquetas inteligentes a un componente de Windows Forms](http://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233).  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#7)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#7)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName" />
    <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
    <altmember cref="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionPropertyItem (string memberName, string displayName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string memberName, string displayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (memberName As String, displayName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerActionPropertyItem(System::String ^ memberName, System::String ^ displayName);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignerActionPropertyItem : string * string -&gt; System.ComponentModel.Design.DesignerActionPropertyItem" Usage="new System.ComponentModel.Design.DesignerActionPropertyItem (memberName, displayName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="memberName">Nombre con distinción entre mayúsculas y minúsculas de la propiedad asociado a este elemento del panel.</param>
        <param name="displayName">Texto de panel para este elemento.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> con los nombres para mostrar y de propiedad especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.ComponentModel.Design.DesignerActionPropertyItem.%23ctor%28System.String%2CSystem.String%29> constructor establece el <xref:System.ComponentModel.Design.DesignerActionItem.Category%2A> y <xref:System.ComponentModel.Design.DesignerActionItem.Description%2A> propiedades a `null`.  
  
 El `memberName` parámetro hace referencia al nombre de la propiedad asociada que sea miembro de la clase proporcionada por el programador derivada la <xref:System.ComponentModel.Design.DesignerActionList> clase.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionPropertyItem (string memberName, string displayName, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string memberName, string displayName, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (memberName As String, displayName As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerActionPropertyItem(System::String ^ memberName, System::String ^ displayName, System::String ^ category);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignerActionPropertyItem : string * string * string -&gt; System.ComponentModel.Design.DesignerActionPropertyItem" Usage="new System.ComponentModel.Design.DesignerActionPropertyItem (memberName, displayName, category)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="memberName">Nombre con distinción entre mayúsculas y minúsculas de la propiedad asociado a este elemento del panel.</param>
        <param name="displayName">Texto de panel para este elemento.</param>
        <param name="category">
          <see cref="T:System.String" /> con distinción entre mayúsculas y minúsculas que se utiliza para agrupar elementos similares en el panel.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> con los nombres de categoría y propiedad especificados, así como texto para mostrar.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.ComponentModel.Design.DesignerActionPropertyItem.%23ctor%28System.String%2CSystem.String%2CSystem.String%29> constructor establece el <xref:System.ComponentModel.Design.DesignerActionItem.Description%2A> propiedad `null`.  
  
 Para obtener más información acerca de cómo los `category` parámetro se usa para agrupar elementos en un panel, vea el <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> método.  
  
 El `memberName` parámetro hace referencia al nombre de la propiedad asociada que sea miembro de la clase proporcionada por el programador derivada <xref:System.ComponentModel.Design.DesignerActionList>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionPropertyItem (string memberName, string displayName, string category, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string memberName, string displayName, string category, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (memberName As String, displayName As String, category As String, description As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerActionPropertyItem(System::String ^ memberName, System::String ^ displayName, System::String ^ category, System::String ^ description);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignerActionPropertyItem : string * string * string * string -&gt; System.ComponentModel.Design.DesignerActionPropertyItem" Usage="new System.ComponentModel.Design.DesignerActionPropertyItem (memberName, displayName, category, description)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="memberName" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="memberName">Nombre con distinción entre mayúsculas y minúsculas de la propiedad asociado a este elemento del panel.</param>
        <param name="displayName">Texto de panel para este elemento.</param>
        <param name="category">
          <see cref="T:System.String" /> con distinción entre mayúsculas y minúsculas que se utiliza para agrupar elementos similares en el panel.</param>
        <param name="description">Texto complementario para este elemento, que se utiliza en la información sobre herramientas o en la barra de estado.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> con los nombres de categoría y propiedad especificados, así como texto para mostrar y de descripción.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para obtener más información acerca de cómo los `category` parámetro se usa para agrupar elementos en un panel, vea el <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> método.  
  
 El `memberName` parámetro hace referencia al nombre de la propiedad asociada que sea miembro de la clase proporcionada por el programador derivada la <xref:System.ComponentModel.Design.DesignerActionList> clase.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear una colección de <xref:System.ComponentModel.Design.DesignerActionItem> objetos. Para obtener un ejemplo completo de la implementación de etiquetas inteligentes, consulte [Cómo: asociar etiquetas inteligentes a un componente de Windows Forms](http://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233).  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#7)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems" />
      </Docs>
    </Member>
    <Member MemberName="MemberName">
      <MemberSignature Language="C#" Value="public string MemberName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MemberName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MemberName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MemberName : string" Usage="System.ComponentModel.Design.DesignerActionPropertyItem.MemberName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de la propiedad a la que está asociado este elemento.</summary>
        <value>
          <see cref="T:System.String" /> que contiene el nombre de la propiedad asociada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName%2A> propiedad especifica qué propiedad: en la clase derivada de la <xref:System.ComponentModel.Design.DesignerActionList> clase, se debe enlazar el elemento. Cuando el programador interactúa con el elemento del panel a través de la interfaz de usuario (UI), se establecerá este propiedad asociada.  
  
 <xref:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName%2A> se establece en el constructor. Su valor distingue mayúsculas de minúsculas.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String,System.String)" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
      </Docs>
    </Member>
    <Member MemberName="RelatedComponent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent RelatedComponent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent RelatedComponent" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent" />
      <MemberSignature Language="VB.NET" Value="Public Property RelatedComponent As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ RelatedComponent { System::ComponentModel::IComponent ^ get(); void set(System::ComponentModel::IComponent ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RelatedComponent : System.ComponentModel.IComponent with get, set" Usage="System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un componente que contribuye con sus elementos al panel actual.</summary>
        <value>Componente suministrado, que debería tener un diseñador asociado que proporcionase objetos <see cref="T:System.ComponentModel.Design.DesignerActionItem" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Con el <xref:System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent%2A> propiedad, el otro componente puede prestar sus elementos de panel de modelo de extracción a la lista actual. Por ejemplo, podría agregar un control de usuario la <xref:System.ComponentModel.Design.DesignerActionItem> objetos de uno o varios de sus controles constituyentes.  
  
 Esta propiedad funciona junto con el <xref:System.ComponentModel.Design.DesignerActionItem.AllowAssociate%2A?displayProperty=nameWithType> propiedad.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionItem" />
        <altmember cref="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate" />
      </Docs>
    </Member>
  </Members>
</Type>