<Type Name="DesignerActionList" FullName="System.ComponentModel.Design.DesignerActionList">
  <Metadata><Meta Name="ms.openlocfilehash" Value="28e511552af1a36996f7a7de37017872a3fba306" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51901157" /></Metadata><TypeSignature Language="C#" Value="public class DesignerActionList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DesignerActionList extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.DesignerActionList" />
  <TypeSignature Language="VB.NET" Value="Public Class DesignerActionList" />
  <TypeSignature Language="C++ CLI" Value="public ref class DesignerActionList" />
  <TypeSignature Language="F#" Value="type DesignerActionList = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona la clase base para los tipos que definen una lista de elementos utilizados para crear un panel de etiquetas inteligentes.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `DesignerAction` característica permite a los componentes y controles para mostrar información contextual y comandos. El `DesignerAction` característica puede considerarse un reemplazo para los verbos de diseñador, porque un <xref:System.ComponentModel.Design.DesignerActionItem> puede mostrarse en el panel de etiquetas inteligentes y también en el menú contextual asociado con un componente o control. La <xref:System.ComponentModel.Design.DesignerActionList> clase representa el punto principal de interacción para compatibilidad de los desarrolladores que desean agregar etiquetas inteligentes a sus componentes y controles personalizados.  
  
 <xref:System.ComponentModel.Design.DesignerActionList> es la clase base, derivada de los desarrolladores de componentes para rellenar un panel de etiquetas inteligentes. Un panel de etiquetas inteligentes representa la interfaz de usuario de tipo menú (UI) para las etiquetas inteligentes.  
  
 Esta clase derivada puede implementar el `virtual` <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> método para devolver una colección de objetos derivados de <xref:System.ComponentModel.Design.DesignerActionItem>. Estos objetos representan los elementos del panel de etiquetas inteligentes. Cada elemento se muestra en el panel según su tipo. Por ejemplo, un <xref:System.ComponentModel.Design.DesignerActionTextItem> se muestra como una etiqueta de texto estático. Los elementos del panel activo, representados por la <xref:System.ComponentModel.Design.DesignerActionPropertyItem> y <xref:System.ComponentModel.Design.DesignerActionMethodItem> tipos, tienen una propiedad públicamente accesible correspondiente o método, respectivamente, que implementa la funcionalidad para ese elemento.  
  
 Para obtener más información acerca de cómo agregar elementos al panel de etiquetas inteligentes, consulte el <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> método.  
  
> [!NOTE]
>  Formularios y cuadros de diálogo se pueden mostrar los miembros de la clase derivada de <xref:System.ComponentModel.Design.DesignerActionList>. De forma predeterminada, el elemento primario de estas ventanas será la ventana del contenedor para el panel de etiquetas inteligentes. Explícitamente relaciones jerárquicas estas ventanas secundarias y otro servicio o ventana pueden hacer que las etiquetas inteligentes se muestren correctamente.  
>   
>  Paneles de la etiqueta inteligente no admiten el desplazamiento o de paginación, por lo que tener cuidado para no de rellenar los paneles con muchos elementos de etiqueta inteligente. Pueden dar lugar a demasiados elementos en el panel de etiquetas inteligentes extender más allá del límite de la pantalla.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear una colección de <xref:System.ComponentModel.Design.DesignerActionItem> objetos.  
  
 Para obtener una explicación completa de este ejemplo de código, vea [Cómo: asociar etiquetas inteligentes a un componente de Windows Forms](https://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233).  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#2)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
    <altmember cref="T:System.ComponentModel.Design.DesignerActionItem" />
    <altmember cref="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems" />
    <altmember cref="T:System.ComponentModel.Design.DesignerActionListCollection" />
    <related type="Article" href="https://msdn.microsoft.com/library/0bad6816-922a-4845-b8e3-50e91ec60f13">Comandos del diseñador y modelo de objetos de DesignerAction para formularios Windows Forms</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DesignerActionList (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionList.#ctor(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DesignerActionList(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.DesignerActionList : System.ComponentModel.IComponent -&gt; System.ComponentModel.Design.DesignerActionList" Usage="new System.ComponentModel.Design.DesignerActionList component" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">Componente relacionado con el objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.ComponentModel.Design.DesignerActionList> constructor establece el <xref:System.ComponentModel.Design.DesignerActionList.AutoShow%2A> propiedad `false`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear una colección de <xref:System.ComponentModel.Design.DesignerActionItem> objetos.  
  
 Para obtener una explicación completa de este ejemplo de código, vea [Cómo: asociar etiquetas inteligentes a un componente de Windows Forms](https://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233).  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#4)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoShow">
      <MemberSignature Language="C#" Value="public virtual bool AutoShow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoShow" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerActionList.AutoShow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoShow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoShow { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoShow : bool with get, set" Usage="System.ComponentModel.Design.DesignerActionList.AutoShow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se debe mostrar automáticamente el panel de etiquetas inteligentes al crearse.</summary>
        <value><see langword="true" /> si se debe mostrar el panel al crear el componente propietario; de lo contrario, <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el valor de propiedad se establece en `true`, el componente con el que este <xref:System.ComponentModel.Design.DesignerActionList> asociado estará automáticamente expandir y mostrar el panel de etiquetas inteligentes cuando se crea el componente.  
  
 Puede rechazar este comportamiento estableciendo el <xref:System.Windows.Forms.Design.DesignerOptions.ObjectBoundSmartTagAutoShow%2A?displayProperty=nameWithType> propiedad `false`.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear una colección de <xref:System.ComponentModel.Design.DesignerActionItem> objetos.  
  
 Para obtener una explicación completa de este ejemplo de código, vea [Cómo: asociar etiquetas inteligentes a un componente de Windows Forms](https://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233).  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#7)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)" />
        <altmember cref="M:System.ComponentModel.Design.DesignerActionUIService.ShowUI(System.ComponentModel.IComponent)" />
        <altmember cref="T:System.ComponentModel.Design.DesignerOptionService" />
      </Docs>
    </Member>
    <Member MemberName="Component">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent Component { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent Component" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.DesignerActionList.Component" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Component As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ Component { System::ComponentModel::IComponent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Component : System.ComponentModel.IComponent" Usage="System.ComponentModel.Design.DesignerActionList.Component" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el componente relacionado con <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
        <value>Componente relacionado con <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionList.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="member this.GetService : Type -&gt; obj" Usage="designerActionList.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">Servicio suministrado por <see cref="T:System.ComponentModel.Component" />.</param>
        <summary>Devuelve un objeto que representa un servicio proporcionado por el componente asociado al objeto <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
        <returns><see cref="T:System.Object" /> que representa un servicio suministrado por <see cref="T:System.ComponentModel.Component" />. Este valor es <see langword="null" /> si <see cref="T:System.ComponentModel.Component" /> no proporciona el servicio especificado.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSortedActionItems">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DesignerActionItemCollection GetSortedActionItems ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.DesignerActionItemCollection GetSortedActionItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSortedActionItems () As DesignerActionItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::Design::DesignerActionItemCollection ^ GetSortedActionItems();" />
      <MemberSignature Language="F#" Value="abstract member GetSortedActionItems : unit -&gt; System.ComponentModel.Design.DesignerActionItemCollection&#xA;override this.GetSortedActionItems : unit -&gt; System.ComponentModel.Design.DesignerActionItemCollection" Usage="designerActionList.GetSortedActionItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionItemCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve la colección de objetos <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> que contiene la lista.</summary>
        <returns>Matriz de <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> que contiene los elementos de esta lista.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `virtual` <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> método se implementa para devolver, el orden de visualización de la esperada, una colección de objetos derivados de la <xref:System.ComponentModel.Design.DesignerActionItem> clase. Estos elementos pueden ser de los siguientes tipos específicos.  
  
|Tipo|Descripción|  
|----------|-----------------|  
|<xref:System.ComponentModel.Design.DesignerActionHeaderItem>|La etiqueta de grupo, que aparece en negrita.|  
|<xref:System.ComponentModel.Design.DesignerActionTextItem>|Etiqueta que se muestra en una fuente sin formato.|  
|<xref:System.ComponentModel.Design.DesignerActionPropertyItem>|Un elemento de panel asociado con una propiedad. También puede mostrar una marca de verificación o el editor de propiedades asociado con la propiedad subyacente.|  
|<xref:System.ComponentModel.Design.DesignerActionMethodItem>|Un elemento del panel se muestra como un hipervínculo y asociado a un método.|  
  
 Para cada <xref:System.ComponentModel.Design.DesignerActionMethodItem> y <xref:System.ComponentModel.Design.DesignerActionPropertyItem>, se debe agregar un método o propiedad correspondiente a la clase proporcionada por el programador derivada la <xref:System.ComponentModel.Design.DesignerActionList> clase. Cada elemento de método y propiedad se muestra como una entrada activa; interactuar con él a través de la interfaz de usuario (UI) invoca el método o propiedad correspondiente, respectivamente.  
  
 Los elementos de propiedad tienen una interfaz especial de elemento de panel que permite la presentación y manipulación de los valores de propiedad correspondiente. Para obtener más información, vea la clase <xref:System.ComponentModel.Design.DesignerActionPropertyItem>.  
  
 El orden de los elementos de la matriz devuelta refleja el orden en que aparecen en el panel. Los elementos se agrupan según el <xref:System.ComponentModel.Design.DesignerActionItem.Category%2A> propiedad, utilizando las reglas siguientes:  
  
-   La categoría del primer elemento encontrado significa el inicio del primer grupo. Ese grupo continúa siempre y cuando cada elemento subsiguiente sea de la misma categoría. Cuando se encuentra un elemento de una categoría diferente y nuevo, se crea un nuevo grupo y el elemento se coloca en él.  
  
-   Si un elemento tiene un tipo diferente del grupo actual, pero ya se ha utilizado esa categoría, el elemento se coloca en la categoría existente coincidente.  
  
-   Si un elemento no tiene una categoría, se coloca en un grupo Misceláneo al final del panel. Este grupo también contiene los elementos cuyo <xref:System.ComponentModel.Design.DesignerActionItem.AllowAssociate%2A> propiedad está establecida en `false`.  
  
 El <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> método se llama cuando se crea por primera vez el panel. Debe llamar a la <xref:System.ComponentModel.Design.DesignerActionUIService.Refresh%2A> método para actualizar la lista de elementos que se muestran en el panel.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear una colección de <xref:System.ComponentModel.Design.DesignerActionItem> objetos.  
  
 Para obtener una explicación completa de este ejemplo de código, vea [Cómo: asociar etiquetas inteligentes a un componente de Windows Forms](https://msdn.microsoft.com/library/42cc4a0c-9ab3-47e1-93b8-03b6a6ccf233).  
  
 [!code-csharp[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/CS/smarttags.cs#7)]
 [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent/VB/smarttags.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionItem" />
        <altmember cref="P:System.ComponentModel.Design.DesignerActionItem.Category" />
        <altmember cref="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
  </Members>
</Type>