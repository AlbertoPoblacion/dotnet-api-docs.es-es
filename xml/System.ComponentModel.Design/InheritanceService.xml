<Type Name="InheritanceService" FullName="System.ComponentModel.Design.InheritanceService">
  <TypeSignature Language="C#" Value="public class InheritanceService : IDisposable, System.ComponentModel.Design.IInheritanceService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InheritanceService extends System.Object implements class System.ComponentModel.Design.IInheritanceService, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.InheritanceService" />
  <TypeSignature Language="VB.NET" Value="Public Class InheritanceService&#xA;Implements IDisposable, IInheritanceService" />
  <TypeSignature Language="C++ CLI" Value="public ref class InheritanceService : IDisposable, System::ComponentModel::Design::IInheritanceService" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IInheritanceService</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="5eb79-101">Proporciona un conjunto de métodos para identificar componentes heredados.</span><span class="sxs-lookup"><span data-stu-id="5eb79-101">Provides a set of methods for identifying inherited components.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5eb79-102">La <xref:System.ComponentModel.Design.InheritanceService> puede usarse para buscar componentes heredados, seleccionar las que desea omitir y recuperar el atributo de herencia de cada clase heredada que se realiza un seguimiento por el servicio.</span><span class="sxs-lookup"><span data-stu-id="5eb79-102">The <xref:System.ComponentModel.Design.InheritanceService> can be used to find inherited components, select which ones to ignore, and retrieve the inheritance attribute of each inherited class that is tracked by the service.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.InheritanceAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InheritanceService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.InheritanceService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InheritanceService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5eb79-103">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.InheritanceService" />.</span><span class="sxs-lookup"><span data-stu-id="5eb79-103">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.InheritanceService" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddInheritedComponents">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5eb79-104">Agrega a <see cref="T:System.ComponentModel.Design.InheritanceService" /> los componentes heredados por el componente especificado.</span><span class="sxs-lookup"><span data-stu-id="5eb79-104">Adds the components inherited by the specified component to the <see cref="T:System.ComponentModel.Design.InheritanceService" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddInheritedComponents">
      <MemberSignature Language="C#" Value="public void AddInheritedComponents (System.ComponentModel.IComponent component, System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddInheritedComponents(class System.ComponentModel.IComponent component, class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddInheritedComponents (component As IComponent, container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddInheritedComponents(System::ComponentModel::IComponent ^ component, System::ComponentModel::IContainer ^ container);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="5eb79-105">Componente en el cual se buscarán los componentes heredados que se agregarán al contenedor especificado.</span><span class="sxs-lookup"><span data-stu-id="5eb79-105">The component to search for inherited components to add to the specified container.</span></span></param>
        <param name="container"><span data-ttu-id="5eb79-106">Contenedor al que se agregarán los componentes heredados.</span><span class="sxs-lookup"><span data-stu-id="5eb79-106">The container to add the inherited components to.</span></span></param>
        <summary><span data-ttu-id="5eb79-107">Agrega a <see cref="T:System.ComponentModel.Design.InheritanceService" /> los componentes heredados por el componente especificado.</span><span class="sxs-lookup"><span data-stu-id="5eb79-107">Adds the components inherited by the specified component to the <see cref="T:System.ComponentModel.Design.InheritanceService" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5eb79-108">Este método busca en todos los campos de todas las clases base del componente especificado.</span><span class="sxs-lookup"><span data-stu-id="5eb79-108">This method searches all the fields of all base classes of the specified component.</span></span> <span data-ttu-id="5eb79-109">Cada campo que implementa <xref:System.ComponentModel.IComponent> se agrega al contenedor especificado.</span><span class="sxs-lookup"><span data-stu-id="5eb79-109">Each field that implements <xref:System.ComponentModel.IComponent> is added to the specified container.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IInheritanceService" />
      </Docs>
    </Member>
    <Member MemberName="AddInheritedComponents">
      <MemberSignature Language="C#" Value="protected virtual void AddInheritedComponents (Type type, System.ComponentModel.IComponent component, System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddInheritedComponents(class System.Type type, class System.ComponentModel.IComponent component, class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.Type,System.ComponentModel.IComponent,System.ComponentModel.IContainer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddInheritedComponents(Type ^ type, System::ComponentModel::IComponent ^ component, System::ComponentModel::IContainer ^ container);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="5eb79-110">Tipo base que se buscará.</span><span class="sxs-lookup"><span data-stu-id="5eb79-110">The base type to search for.</span></span></param>
        <param name="component"><span data-ttu-id="5eb79-111">Componente en el cual se buscarán los componentes heredados que se agregarán al contenedor especificado.</span><span class="sxs-lookup"><span data-stu-id="5eb79-111">The component to search for inherited components to add to the specified container.</span></span></param>
        <param name="container"><span data-ttu-id="5eb79-112">Contenedor al que se agregarán los componentes heredados.</span><span class="sxs-lookup"><span data-stu-id="5eb79-112">The container to add the inherited components to.</span></span></param>
        <summary><span data-ttu-id="5eb79-113">Agrega a <see cref="T:System.ComponentModel.Design.InheritanceService" /> los componentes del tipo especificado heredados por el componente indicado.</span><span class="sxs-lookup"><span data-stu-id="5eb79-113">Adds the components of the specified type that are inherited by the specified component to the <see cref="T:System.ComponentModel.Design.InheritanceService" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5eb79-114">Este método busca en todos los campos de todas las clases base del componente.</span><span class="sxs-lookup"><span data-stu-id="5eb79-114">This method searches all the fields of all base classes of component.</span></span> <span data-ttu-id="5eb79-115">Cada campo que implementa <xref:System.ComponentModel.IComponent> se agrega a una lista interna que almacena un <xref:System.ComponentModel.InheritanceAttribute> que identifica el nivel de herencia del componente.</span><span class="sxs-lookup"><span data-stu-id="5eb79-115">Each field that implements <xref:System.ComponentModel.IComponent> is added to an internal list that stores an <xref:System.ComponentModel.InheritanceAttribute> that identifies the inheritance level of the component.</span></span> <span data-ttu-id="5eb79-116">El componente, a continuación, se agrega al contenedor especificado.</span><span class="sxs-lookup"><span data-stu-id="5eb79-116">The component is then added to the specified container.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5eb79-117">Libera los recursos que usa <see cref="T:System.ComponentModel.Design.InheritanceService" />.</span><span class="sxs-lookup"><span data-stu-id="5eb79-117">Releases the resources used by the <see cref="T:System.ComponentModel.Design.InheritanceService" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.InheritanceService.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5eb79-118">Libera todos los recursos que usa <see cref="T:System.ComponentModel.Design.InheritanceService" />.</span><span class="sxs-lookup"><span data-stu-id="5eb79-118">Releases all resources used by the <see cref="T:System.ComponentModel.Design.InheritanceService" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5eb79-119">Al llamar a <xref:System.ComponentModel.Design.InheritanceService.Dispose%2A> permite que los recursos utilizados por el <xref:System.ComponentModel.Design.InheritanceService> se reasignen para otros fines.</span><span class="sxs-lookup"><span data-stu-id="5eb79-119">Calling <xref:System.ComponentModel.Design.InheritanceService.Dispose%2A> allows the resources used by the <xref:System.ComponentModel.Design.InheritanceService> to be reallocated for other purposes.</span></span> <span data-ttu-id="5eb79-120">Para obtener más información acerca de <xref:System.ComponentModel.Design.InheritanceService.Dispose%2A>, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="5eb79-120">For more information about <xref:System.ComponentModel.Design.InheritanceService.Dispose%2A>, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.InheritanceService.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="5eb79-121">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</span><span class="sxs-lookup"><span data-stu-id="5eb79-121"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="5eb79-122">Libera los recursos no administrados que usa <see cref="T:System.ComponentModel.Design.InheritanceService" /> y, de forma opcional, libera los recursos administrados.</span><span class="sxs-lookup"><span data-stu-id="5eb79-122">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.InheritanceService" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5eb79-123">Se llama a este método público `Dispose()` método y <xref:System.Object.Finalize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="5eb79-123">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="5eb79-124">`Dispose()` se invoca el protegido `Dispose(Boolean)` método con el `disposing` parámetro establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="5eb79-124">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="5eb79-125"><xref:System.Object.Finalize%2A> invoca `Dispose` con `disposing` establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="5eb79-125"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="5eb79-126">Cuando el `disposing` del parámetro es true, este método libera todos los recursos retenidos por los objetos administrados que este <xref:System.ComponentModel.Design.InheritanceService> referencias.</span><span class="sxs-lookup"><span data-stu-id="5eb79-126">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.InheritanceService> references.</span></span> <span data-ttu-id="5eb79-127">Este método invoca al método `Dispose()` de cada uno de los objetos a los que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="5eb79-127">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="5eb79-128"><see langword="Dispose" /> puede recibir varias llamadas de otros objetos.</span><span class="sxs-lookup"><span data-stu-id="5eb79-128"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="5eb79-129">Al reemplazar <see langword="Dispose(Boolean)" /> tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="5eb79-129">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="5eb79-130">Para obtener más información sobre cómo implementar <see langword="Dispose(Boolean)" />, consulte [implementa un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="5eb79-130">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="5eb79-131">Para obtener más información acerca de <see langword="Dispose" /> y <see cref="M:System.Object.Finalize" />, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [reemplazar el método Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span><span class="sxs-lookup"><span data-stu-id="5eb79-131">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetInheritanceAttribute">
      <MemberSignature Language="C#" Value="public System.ComponentModel.InheritanceAttribute GetInheritanceAttribute (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.InheritanceAttribute GetInheritanceAttribute(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.InheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInheritanceAttribute (component As IComponent) As InheritanceAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::InheritanceAttribute ^ GetInheritanceAttribute(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.InheritanceAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="5eb79-132">Componente del cual se va a recuperar el atributo de herencia.</span><span class="sxs-lookup"><span data-stu-id="5eb79-132">The component to retrieve the inheritance attribute for.</span></span></param>
        <summary><span data-ttu-id="5eb79-133">Obtiene el atributo de herencia del componente especificado.</span><span class="sxs-lookup"><span data-stu-id="5eb79-133">Gets the inheritance attribute of the specified component.</span></span></summary>
        <returns><span data-ttu-id="5eb79-134">Un objeto <see cref="T:System.ComponentModel.InheritanceAttribute" /> que describe el nivel de herencia del que procede este componente.</span><span class="sxs-lookup"><span data-stu-id="5eb79-134">An <see cref="T:System.ComponentModel.InheritanceAttribute" /> that describes the level of inheritance that this component comes from.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5eb79-135">Si no se hereda el componente, este método devuelve el valor <xref:System.ComponentModel.InheritanceAttribute.NotInherited>.</span><span class="sxs-lookup"><span data-stu-id="5eb79-135">If the component is not inherited, this method returns the value <xref:System.ComponentModel.InheritanceAttribute.NotInherited>.</span></span> <span data-ttu-id="5eb79-136">En caso contrario, devuelve el atributo de herencia para este componente.</span><span class="sxs-lookup"><span data-stu-id="5eb79-136">Otherwise, it returns the inheritance attribute for this component.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.InheritanceAttribute" />
        <altmember cref="T:System.ComponentModel.Design.IInheritanceService" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreInheritedMember">
      <MemberSignature Language="C#" Value="protected virtual bool IgnoreInheritedMember (System.Reflection.MemberInfo member, System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IgnoreInheritedMember(class System.Reflection.MemberInfo member, class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.InheritanceService.IgnoreInheritedMember(System.Reflection.MemberInfo,System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IgnoreInheritedMember (member As MemberInfo, component As IComponent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IgnoreInheritedMember(System::Reflection::MemberInfo ^ member, System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="member"><span data-ttu-id="5eb79-137">Miembro que se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="5eb79-137">The member to check.</span></span> <span data-ttu-id="5eb79-138">Este miembro es un objeto <see cref="T:System.Reflection.FieldInfo" /> o bien <see cref="T:System.Reflection.MethodInfo" />.</span><span class="sxs-lookup"><span data-stu-id="5eb79-138">This member is either a <see cref="T:System.Reflection.FieldInfo" /> or a <see cref="T:System.Reflection.MethodInfo" />.</span></span></param>
        <param name="component"><span data-ttu-id="5eb79-139">Instancia del componente a la que se enlaza este miembro.</span><span class="sxs-lookup"><span data-stu-id="5eb79-139">The component instance this member is bound to.</span></span></param>
        <summary><span data-ttu-id="5eb79-140">Indica si se debe omitir el miembro especificado.</span><span class="sxs-lookup"><span data-stu-id="5eb79-140">Indicates whether to ignore the specified member.</span></span></summary>
        <returns>
          <span data-ttu-id="5eb79-141"><see langword="true" /> si el miembro especificado debe incluirse en el conjunto de componentes heredados; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5eb79-141"><see langword="true" /> if the specified member should be included in the set of inherited components; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="5eb79-142">Al reemplazar este método, los usuarios pueden modificar el conjunto de miembros que no distingue entre el servicio de herencia.</span><span class="sxs-lookup"><span data-stu-id="5eb79-142">By overriding this method, users can modify the set of members that the inheritance service ignores.</span></span> <span data-ttu-id="5eb79-143">La implementación predeterminada omite todos los miembros que son privados y solo permite pública o miembros protegidos.</span><span class="sxs-lookup"><span data-stu-id="5eb79-143">The default implementation ignores all members that are private, and allows only public or protected members.</span></span></para>
        </block>
        <altmember cref="T:System.Reflection.FieldInfo" />
        <altmember cref="T:System.Reflection.MethodInfo" />
      </Docs>
    </Member>
  </Members>
</Type>