<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ITypeDiscoveryService.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e642e3b51b337634311cc65e6d4b88f28dfb66eb.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e642e3b51b337634311cc65e6d4b88f28dfb66eb</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.ITypeDiscoveryService">
          <source>Discovers available types at design time.</source>
          <target state="translated">Detecta los tipos disponibles en tiempo de diseño.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.ITypeDiscoveryService">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.ITypeDiscoveryService&gt;</ph> is used to discover available types at design time, when a client of the service does not know the names of existing types or referenced assemblies.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.Design.ITypeDiscoveryService&gt;</ph> se usa para detectar los tipos disponibles en tiempo de diseño, cuando un cliente del servicio no conoce los nombres de los tipos existentes o ensamblados de referencia.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeDiscoveryService.GetTypes(System.Type,System.Boolean)">
          <source>The base type to match.</source>
          <target state="translated">Tipo base con el que deben coincidir.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeDiscoveryService.GetTypes(System.Type,System.Boolean)">
          <source>Can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Puede ser <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeDiscoveryService.GetTypes(System.Type,System.Boolean)">
          <source>Indicates whether types from all referenced assemblies should be checked.</source>
          <target state="translated">Indica si se deben comprobar los tipos procedentes de todos los ensamblados de referencia.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeDiscoveryService.GetTypes(System.Type,System.Boolean)">
          <source>Retrieves the list of available types.</source>
          <target state="translated">Recupera la lista de tipos disponibles.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.ITypeDiscoveryService.GetTypes(System.Type,System.Boolean)">
          <source>A collection of types that match the criteria specified by <ph id="ph1">&lt;paramref name="baseType" /&gt;</ph> and <ph id="ph2">&lt;paramref name="excludeGlobalTypes" /&gt;</ph>.</source>
          <target state="translated">Colección de tipos que coinciden con los criterios especificados por <ph id="ph1">&lt;paramref name="baseType" /&gt;</ph> y <ph id="ph2">&lt;paramref name="excludeGlobalTypes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.ITypeDiscoveryService.GetTypes(System.Type,System.Boolean)">
          <source>If <ph id="ph1">`baseType`</ph> is <ph id="ph2">`null`</ph>, all types are returned.</source>
          <target state="translated">Si <ph id="ph1">`baseType`</ph> es <ph id="ph2">`null`</ph>, se devuelven todos los tipos.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.ITypeDiscoveryService.GetTypes(System.Type,System.Boolean)">
          <source>Otherwise, only types derived from the specified base type are returned.</source>
          <target state="translated">En caso contrario, se devuelven solo los tipos derivados del tipo base especificado.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.ITypeDiscoveryService.GetTypes(System.Type,System.Boolean)">
          <source>If <ph id="ph1">`excludeGlobalTypes`</ph> is <ph id="ph2">`false`</ph>, types from all referenced assemblies are checked.</source>
          <target state="translated">Si <ph id="ph1">`excludeGlobalTypes`</ph> es <ph id="ph2">`false`</ph>, se comprueban los tipos de todos los ensamblados.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.ITypeDiscoveryService.GetTypes(System.Type,System.Boolean)">
          <source>Otherwise, only types from non-Global Assembly Cache (GAC) referenced assemblies are checked.</source>
          <target state="translated">En caso contrario, se comprueban los tipos solo de los ensamblados no - caché Ensamblados Global al que hace referencia.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.ITypeDiscoveryService.GetTypes(System.Type,System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Working with Assemblies and the Global Assembly Cache<ept id="p1">](~/docs/framework/app-domains/working-with-assemblies-and-the-gac.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>trabajar con ensamblados y la caché Global de ensamblados<ept id="p1">](~/docs/framework/app-domains/working-with-assemblies-and-the-gac.md)</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>