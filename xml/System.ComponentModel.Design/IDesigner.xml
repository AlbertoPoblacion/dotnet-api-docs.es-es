<Type Name="IDesigner" FullName="System.ComponentModel.Design.IDesigner">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0849fa0e599b09ff55fcc31d8a1d86c544bb6a9b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30368459" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDesigner : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesigner implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesigner&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesigner : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Proporciona el marco de trabajo básico para compilar un diseñador personalizado.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.ComponentModel.Design.IDesigner> interfaz proporciona una interfaz a través del cual se pueden implementar servicios básicos de un diseñador. Un diseñador puede modificar el comportamiento de un componente en tiempo de diseño y puede proporcionar sus propios servicios y el comportamiento. Un diseñador sólo está activo en tiempo de diseño y debe estar asociado con un tipo de componente mediante un <xref:System.ComponentModel.DesignerAttribute> con el fin de cargar cuando se crea un componente del tipo asociado en tiempo de diseño.  
  
 El <xref:System.ComponentModel.Design.IDesigner> interfaz proporciona métodos y propiedades que se pueden implementar para proporcionar un comportamiento personalizado en tiempo de diseño.  
  
 Implemente el <xref:System.ComponentModel.Design.IDesigner.Initialize%2A> método de un diseñador para realizar acciones cuando se crea un componente. Esto puede ser útil si un componente debe tener una configuración especial en tiempo de diseño, o si debe cambiar su configuración según las condiciones que el diseñador puede determinar.  
  
 Un diseñador puede proporcionar los comandos de menú en el menú contextual que se muestra cuando un usuario seleccione un componente o control en el entorno de tiempo de diseño. Puede implementar la <xref:System.ComponentModel.Design.IDesigner.Verbs%2A> propiedad para definir un descriptor de acceso get que devuelve un <xref:System.ComponentModel.Design.DesignerVerbCollection> que contiene el <xref:System.ComponentModel.Design.DesignerVerb> objetos para generar los comandos de menú.  
  
 Un diseñador para un componente que aparece en la Bandeja de componentes puede realizar una acción predeterminada cuando se hace doble clic en el componente. Implemente el <xref:System.ComponentModel.Design.IDesigner.DoDefaultAction%2A> método para especificar el comportamiento que se va a realizar cuando se hace doble clic en el componente.  
  
 Un diseñador también puede utilizar los servicios de tiempo de diseño disponibles para realizar diversas tareas, como supervisar el entorno de tiempo de diseño para componentes y sus propiedades, leer y establecer los valores de propiedades de los componentes, administrar el cuadro de herramientas, administrar los componentes seleccionados o mostrar una interfaz de usuario que puede usarse para configurar los valores o aplicar otros procesos.  
  
 Para implementar un diseñador para un control que se puede ubicar en un formulario, se puede heredar de la <xref:System.Windows.Forms.Design.ControlDesigner> clase. Controles cuyo diseñador asociado no se deriva de <xref:System.Windows.Forms.Design.ControlDesigner> se muestran en la Bandeja de componentes. El <xref:System.ComponentModel.Design.ComponentDesigner> y <xref:System.Windows.Forms.Design.ControlDesigner> clases implementan la <xref:System.ComponentModel.Design.IDesigner> interfaz y proporcionar compatibilidad en tiempo de diseño adicional que puede resultar útiles a los autores de diseñadores. Para obtener más información, consulte la documentación de referencia para estas clases.  
  
 Para obtener información general de creación de componentes de diseño, vea [extender compatibilidad en tiempo de diseño](http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2).  
  
   
  
## Examples  
 Este ejemplo se muestra un <xref:System.ComponentModel.Design.IDesigner> implementación que almacena una referencia local a su componente, realiza una acción predeterminada cuando se hace doble clic en el componente y proporciona un comando de menú de verbos de diseñador.  
  
 [!code-cpp[IDesignerExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IDesignerExample/CPP/testcontrol.cpp#1)]
 [!code-csharp[IDesignerExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IDesignerExample/CS/testcontrol.cs#1)]
 [!code-vb[IDesignerExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IDesignerExample/VB/testcontrol.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.IRootDesigner" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
  </Docs>
  <Members>
    <Member MemberName="Component">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent Component { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent Component" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesigner.Component" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Component As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ Component { System::ComponentModel::IComponent ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el componente base que está diseñando el diseñador.</summary>
        <value>
          <see cref="T:System.ComponentModel.IComponent" /> que indica el componente base que diseña el diseñador.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoDefaultAction">
      <MemberSignature Language="C#" Value="public void DoDefaultAction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoDefaultAction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesigner.DoDefaultAction" />
      <MemberSignature Language="VB.NET" Value="Public Sub DoDefaultAction ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DoDefaultAction();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Realiza la acción predeterminada para el diseñador.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se llama cuando un usuario hace doble clic en la representación de un componente en la Bandeja de componentes.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesigner.Initialize(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">Componente que se va a asociar al diseñador.</param>
        <summary>Inicializa el diseñador con el componente especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.DesignerVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerVerbCollection Verbs" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.IDesigner.Verbs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Verbs As DesignerVerbCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::DesignerVerbCollection ^ Verbs { System::ComponentModel::Design::DesignerVerbCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una colección de los verbos en tiempo de diseño admitidos por el diseñador.</summary>
        <value>Objeto <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> que contiene los verbos admitidos por el diseñador, o <see langword="null" /> si el componente no tiene verbos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Devuelve el diseño verbos en tiempo de admitida por el componente asociado al diseñador. Normalmente se muestran los verbos que devuelve este método por el entorno de tiempo de diseño en un menú contextual. Cuando un usuario selecciona uno de los verbos, el controlador de eventos de los correspondientes <xref:System.ComponentModel.Design.DesignerVerb> se invoca.  
  
> [!NOTE]
>  Normalmente, un entorno en tiempo de diseño proporciona una **propiedades... ** entrada en el menú contextual de un componente. Para evitar títulos duplicados para las entradas de menú, debe incluirse ningún verbo con el título "Propiedades..." en un <xref:System.ComponentModel.Design.DesignerVerbCollection>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.DesignerVerb" />
        <altmember cref="T:System.ComponentModel.Design.DesignerVerbCollection" />
      </Docs>
    </Member>
  </Members>
</Type>