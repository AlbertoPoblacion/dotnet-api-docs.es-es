<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IComponentChangeService.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5647abc567c7d8f53c334f9c393caa36a6e7443a4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">647abc567c7d8f53c334f9c393caa36a6e7443a4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source>Provides an interface to add and remove the event handlers for events that add, change, remove or rename components, and provides methods to raise a <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /&gt;</ph> or <ph id="ph2">&lt;see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /&gt;</ph> event.</source>
          <target state="translated">Proporciona una interfaz para agregar y quitar los controladores de eventos que agregan, cambian, quitan o cambian de nombre componentes, y proporciona métodos para iniciar un evento <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /&gt;</ph> o <ph id="ph2">&lt;see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph> provides an interface that can be used to indicate the methods that handle the following events:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph> Proporciona una interfaz que puede utilizarse para indicar los métodos que controlan los siguientes eventos:</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdded&gt;</ph>, raised when a component is added.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdded&gt;</ph>, se produce cuando se agrega un componente.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdding&gt;</ph>, raised when a component is about to be added.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentAdding&gt;</ph>, se genera cuando un componente se va a agregar.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph>, raised when a component is changed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph>, se produce cuando se cambia un componente.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging&gt;</ph>, raised when a component is about to be changed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging&gt;</ph>, se genera cuando un componente se va a modificar.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved&gt;</ph>, raised when a component is removed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved&gt;</ph>, se produce cuando se quita un componente.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving&gt;</ph>, raised when a component is about to be removed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving&gt;</ph>, se genera cuando un componente se va a quitar.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentRename&gt;</ph>, raised when a component is renamed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentRename&gt;</ph>, se produce cuando se cambia el nombre de un componente.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source>Typically, the design environment raises these component add, change, remove, or rename events.</source>
          <target state="translated">Normalmente, el entorno de diseño genera estos Agregar componente, cambiar, quitar o cambiar el nombre de eventos.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source>Designers should call the methods of this interface when using <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> objects to provide undo and redo functionality for design-time actions that affect components.</source>
          <target state="translated">Los diseñadores deben llamar a los métodos de esta interfaz cuando se usa <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> objetos para proporcionar deshacer y rehacer la funcionalidad para las acciones de tiempo de diseño que afectan a los componentes.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source>More information is available in the documentation for <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph>.</source>
          <target state="translated">Está disponible en la documentación para obtener más información <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source>Generally, only the root designer handles these change notifications.</source>
          <target state="translated">Por lo general, sólo el diseñador raíz controla estas notificaciones de cambio.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source>This service also provides methods that raise a component changed event or component changing event.</source>
          <target state="translated">Este servicio también proporciona métodos que generan un evento de componente cambiado o cambiar los eventos de componente.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> or a component can indicate that a component has changed or is changing with the <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> o un componente puede indicar que un componente ha cambiado o está cambiando con el <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;</ph> y <ph id="ph3">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt;</ph> métodos, respectivamente.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.IComponentChangeService">
          <source>This following example demonstrates how to use the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph> interface to receive notifications about the addition of, removal of, and changes to components in design mode.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo utilizar el <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph> interfaz para recibir notificaciones sobre la adición de y eliminación de cambios en los componentes en modo de diseño.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded">
          <source>Occurs when a component has been added.</source>
          <target state="translated">Se produce cuando se ha agregado un componente.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded">
          <source>This event occurs during load and when new components are created by the user, after the component has been sited.</source>
          <target state="translated">Este evento se produce durante la carga y cuando se crean nuevos componentes por el usuario, después de que sitúa el componente.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding">
          <source>Occurs when a component is in the process of being added.</source>
          <target state="translated">Se produce cuando un componente está en el proceso de agregarse.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding">
          <source>This event occurs during load and when the user creates a new component.</source>
          <target state="translated">Este evento se produce durante la carga y cuando el usuario crea un nuevo componente.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding">
          <source>You can cancel the process of adding a component by throwing an exception here.</source>
          <target state="translated">Puede cancelar el proceso de agregar un componente iniciando una excepción aquí.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged">
          <source>Occurs when a component has been changed.</source>
          <target state="translated">Se produce cuando se ha cambiado un componente.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged">
          <source>This event occurs when any component on the form changes.</source>
          <target state="translated">Este evento se produce cuando cambia cualquier componente en el formulario.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged">
          <source>This event will not occur during form load and unload, because changes are expected at this time.</source>
          <target state="translated">Este evento no se producen durante la carga del formulario y la descarga, porque los cambios se esperan en este momento.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> can raise multiple <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> events.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> puede generar varios <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged">
          <source>Some <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> event handlers can interfere with expected sequences of events, such as if your code alters the values of properties while a transaction is occurring.</source>
          <target state="translated">Algunos <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> controladores de eventos pueden interferir con las secuencias de eventos previstas, por ejemplo, si el código modifica los valores de propiedades mientras se lleva a cabo una transacción.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> event handler can also impair performance if it draws after each change while a <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> is in progress.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> controlador de eventos también puede afectar al rendimiento si dibuja después de cada cambio mientras un <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> está en curso.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged">
          <source>In order to allow a <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> in process to complete without interruption or interference by your <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> event handler, you can test the state of the <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerHost.InTransaction%2A&gt;</ph> property, and defer handling the change events until the completion of the transaction by adding a <ph id="ph4">&lt;xref:System.ComponentModel.Design.DesignerTransactionCloseEventHandler&gt;</ph> which will raise your <ph id="ph5">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> event handler and remove itself upon completion of the transaction.</source>
          <target state="translated">Para permitir que un <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> en proceso se complete sin interrupciones ni interferencias su <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> controlador de eventos, puede probar el estado de la <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerHost.InTransaction%2A&gt;</ph> propiedad y aplazar el control de los eventos de cambio hasta la finalización de la transacción mediante la adición de un <ph id="ph4">&lt;xref:System.ComponentModel.Design.DesignerTransactionCloseEventHandler&gt;</ph> que generará el <ph id="ph5">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> controlador de eventos y quitar tras la finalización de la transacción.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging">
          <source>Occurs when a component is in the process of being changed.</source>
          <target state="translated">Se produce cuando un componente está en el proceso de cambiarse.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging">
          <source>This event occurs before the component is actually changed, and gives the designer a chance to abort the change or perform any pre-change processing.</source>
          <target state="translated">Este evento se produce antes de que el componente se cambia realmente y da al diseñador la oportunidad de anular el cambio o realizar cualquier procesamiento previo al cambio.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging">
          <source>This event does not occur during form load and unload, because changes are expected at this time.</source>
          <target state="translated">Este evento no se producen durante la carga del formulario y la descarga, porque los cambios se esperan en este momento.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved">
          <source>Occurs when a component has been removed.</source>
          <target state="translated">Se produce cuando se ha quitado un componente.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved">
          <source>This event occurs during unload and when a component is deleted by the user.</source>
          <target state="translated">Este evento se produce durante la descarga y cuando se elimina un componente por el usuario.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved">
          <source>The event occurs before the site has been removed from the component.</source>
          <target state="translated">El evento tiene lugar antes de que se ha quitado el sitio desde el componente.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving">
          <source>Occurs when a component is in the process of being removed.</source>
          <target state="translated">Se produce cuando un componente está en el proceso de quitarse.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving">
          <source>This event occurs during unload and when the user deletes a component.</source>
          <target state="translated">Este evento se produce durante la descarga y cuando el usuario elimina un componente.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving">
          <source>You can cancel the process of removing a component by throwing an exception here.</source>
          <target state="translated">Puede cancelar el proceso de quitar un componente iniciando una excepción aquí.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename">
          <source>Occurs when a component is renamed.</source>
          <target state="translated">Se produce cuando se cambia el nombre de un componente.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename">
          <source>This event occurs after the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> event when a component has been renamed.</source>
          <target state="translated">Este evento se produce después de la <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> evento cuando se ha cambiado el nombre de un componente.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>The component that has changed.</source>
          <target state="translated">Componente que ha cambiado.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>The member that has changed.</source>
          <target state="translated">Miembro que ha cambiado.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>This is <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this change is not related to a single member.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="null" /&gt;</ph> si este cambio no está relacionado con un solo miembro.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>The old value of the member.</source>
          <target state="translated">Valor antiguo del miembro.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>This is valid only if the member is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Sólo es válido si el miembro no es <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>The new value of the member.</source>
          <target state="translated">Valor nuevo del miembro.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>This is valid only if the member is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Sólo es válido si el miembro no es <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>Announces to the component change service that a particular component has changed.</source>
          <target state="translated">Anuncia al servicio de cambio de componentes que un determinado componente ha cambiado.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>This method raises the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> event.</source>
          <target state="translated">Este método provoca el <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>Most designers that ship with the <ph id="ph1">[!INCLUDE[winsdklong](~/includes/winsdklong-md.md)]</ph>, as well as the Visual Studio design-time environment, typically raise this event for you when a component in a project is changed, so most of the time you do not need to explicitly call this method.</source>
          <target state="translated">La mayoría de los diseñadores que se incluyen con el <ph id="ph1">[!INCLUDE[winsdklong](~/includes/winsdklong-md.md)]</ph>, así como el entorno de tiempo de diseño de Visual Studio, suelen provocar este evento por hora de un componente en un proyecto se cambia, por lo que la mayoría de los casos no es necesario explícitamente para llamar a este método.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>The appropriate <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph> events are automatically raised when a <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> is used to change a property value or components are added or removed from the <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> container.</source>
          <target state="translated">Adecuado <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph> eventos son automáticamente se genera cuando un <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> se utiliza para cambiar una propiedad de valor o los componentes se agregan o quitan de la <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> contenedor.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>Before calling <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;</ph>, first call <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt;</ph> to indicate that a component is about to change, and make the change.</source>
          <target state="translated">Antes de llamar a <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;</ph>, primero llame a <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt;</ph> para indicar que un componente está a punto de cambiar y realizar el cambio.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>Then call <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;</ph> to raise the <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> event.</source>
          <target state="translated">A continuación, llame a <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;</ph> para generar el <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>This event allows the implementer to do any post-processing that is needed after a property change.</source>
          <target state="translated">Este evento permite al implementador hacer cualquier procesamiento posterior a la que es necesario después de un cambio de propiedad.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
          <source>For example, a designer typically updates the source code that sets the property with the new value.</source>
          <target state="translated">Por ejemplo, un diseñador actualiza normalmente el código fuente que establece la propiedad con el nuevo valor.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>The component that is about to change.</source>
          <target state="translated">Componente que va a cambiar.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>The member that is changing.</source>
          <target state="translated">Miembro que se va a cambiar.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>This is <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this change is not related to a single member.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="null" /&gt;</ph> si este cambio no está relacionado con un solo miembro.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>Announces to the component change service that a particular component is changing.</source>
          <target state="translated">Anuncia al servicio de cambio de componentes que un determinado componente está cambiando.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>This method raises the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging&gt;</ph> event.</source>
          <target state="translated">Este método provoca el <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>Most designers included with the <ph id="ph1">[!INCLUDE[winsdklong](~/includes/winsdklong-md.md)]</ph>, as well as the Visual Studio design-time environment, typically raise this event automatically; so most of the time, you do not need to explicitly call this method.</source>
          <target state="translated">La mayoría diseñadores que se incluyen con el <ph id="ph1">[!INCLUDE[winsdklong](~/includes/winsdklong-md.md)]</ph>, así como el entorno de tiempo de diseño de Visual Studio, normalmente se genera este evento automáticamente; por lo que la mayoría de los casos, no es necesario llamar explícitamente a este método.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>The appropriate <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph> events are automatically raised when a <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> is used to change a property value or components are added or removed from the <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> container.</source>
          <target state="translated">Adecuado <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph> eventos son automáticamente se genera cuando un <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> se utiliza para cambiar una propiedad de valor o los componentes se agregan o quitan de la <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> contenedor.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>This method throws an exception if the property cannot be changed.</source>
          <target state="translated">Este método produce una excepción si no se puede cambiar la propiedad.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>This is not intended to validate the values of a particular property.</source>
          <target state="translated">Esto no está diseñada para validar los valores de una propiedad determinada.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>Instead, it is intended to provide a global method of preventing a component from changing.</source>
          <target state="translated">En su lugar, se pretende proporcionar un método global de impide que un componente de cambiar.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
          <source>For example, if a designer file is checked into source code control, this event's handler would typically throw an exception if the user refused to check out the file.</source>
          <target state="translated">Por ejemplo, si un archivo de diseñador está protegido en el control de código fuente, controlador de este evento normalmente produciría una excepción si el usuario se niega a desproteger el archivo.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>