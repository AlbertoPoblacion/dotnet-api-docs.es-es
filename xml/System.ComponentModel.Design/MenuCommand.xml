<Type Name="MenuCommand" FullName="System.ComponentModel.Design.MenuCommand">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9857b16d26530fe05c26f2d684fccf8ed627f766" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MenuCommand" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MenuCommand extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.MenuCommand" />
  <TypeSignature Language="VB.NET" Value="Public Class MenuCommand" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuCommand" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d455b-101">Representa un elemento de comando de barra de herramientas o de menú de Windows.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d455b-101">Represents a Windows menu or toolbar command item.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d455b-102">La <xref:System.ComponentModel.Design.MenuCommand> clase representa información sobre un comando de menú o barra de herramientas de Windows.</span><span class="sxs-lookup"><span data-stu-id="d455b-102">The <xref:System.ComponentModel.Design.MenuCommand> class represents information about a Windows menu or toolbar command.</span></span> <span data-ttu-id="d455b-103">El <xref:System.ComponentModel.Design.IMenuCommandService> interfaz le permite agregar <xref:System.ComponentModel.Design.MenuCommand> objetos en el menú de Visual Studio.</span><span class="sxs-lookup"><span data-stu-id="d455b-103">The <xref:System.ComponentModel.Design.IMenuCommandService> interface allows you to add <xref:System.ComponentModel.Design.MenuCommand> objects to the Visual Studio menu.</span></span>  
  
 <span data-ttu-id="d455b-104">Esta clase proporciona a los siguientes miembros:</span><span class="sxs-lookup"><span data-stu-id="d455b-104">This class provides the following members:</span></span>  
  
-   <span data-ttu-id="d455b-105">Una propiedad de controlador de eventos a los que puede adjuntar un controlador de eventos para el comando.</span><span class="sxs-lookup"><span data-stu-id="d455b-105">An event-handler property to which you can attach an event handler for the command.</span></span>  
  
-   <span data-ttu-id="d455b-106">Un <xref:System.ComponentModel.Design.CommandID> propiedad que identifica de forma única el comando.</span><span class="sxs-lookup"><span data-stu-id="d455b-106">A <xref:System.ComponentModel.Design.CommandID> property that uniquely identifies the command.</span></span>  
  
-   <span data-ttu-id="d455b-107">Un <xref:System.ComponentModel.Design.MenuCommand.Invoke%2A> método que se ejecuta el comando.</span><span class="sxs-lookup"><span data-stu-id="d455b-107">An <xref:System.ComponentModel.Design.MenuCommand.Invoke%2A> method that executes the command.</span></span>  
  
-   <span data-ttu-id="d455b-108">Un <xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A> método que se puede invalidar para controlar el evento que tiene lugar cuando se selecciona un nuevo comando.</span><span class="sxs-lookup"><span data-stu-id="d455b-108">An <xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A> method that can be overridden to handle the event that occurs when a new command is selected.</span></span>  
  
-   <span data-ttu-id="d455b-109">Estados de indicador booleano que indican si el comando es <xref:System.ComponentModel.Design.MenuCommand.Checked%2A>, <xref:System.ComponentModel.Design.MenuCommand.Enabled%2A>, <xref:System.ComponentModel.Design.MenuCommand.Supported%2A>, o <xref:System.ComponentModel.Design.MenuCommand.Visible%2A>.</span><span class="sxs-lookup"><span data-stu-id="d455b-109">Boolean flag states that indicate whether the command is <xref:System.ComponentModel.Design.MenuCommand.Checked%2A>, <xref:System.ComponentModel.Design.MenuCommand.Enabled%2A>, <xref:System.ComponentModel.Design.MenuCommand.Supported%2A>, or <xref:System.ComponentModel.Design.MenuCommand.Visible%2A>.</span></span>  
  
-   <span data-ttu-id="d455b-110">Un <xref:System.ComponentModel.Design.MenuCommand.OleStatus%2A> código de estado para el comando de comandos de la propiedad que indica la OLE.</span><span class="sxs-lookup"><span data-stu-id="d455b-110">An <xref:System.ComponentModel.Design.MenuCommand.OleStatus%2A> property that indicates the OLE command status code for the command.</span></span>  
  
-   <span data-ttu-id="d455b-111">Un nombre para invalidar el <xref:System.ComponentModel.Design.MenuCommand.ToString%2A> método.</span><span class="sxs-lookup"><span data-stu-id="d455b-111">An override for the <xref:System.ComponentModel.Design.MenuCommand.ToString%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d455b-112">En el ejemplo de código siguiente se crea un <xref:System.ComponentModel.Design.MenuCommand> objeto, configura sus propiedades y lo agrega a la <xref:System.ComponentModel.Design.IMenuCommandService>.</span><span class="sxs-lookup"><span data-stu-id="d455b-112">The following code example creates a <xref:System.ComponentModel.Design.MenuCommand> object, configures its properties, and adds it to the <xref:System.ComponentModel.Design.IMenuCommandService>.</span></span>  
  
 <span data-ttu-id="d455b-113">Cree una instancia de la `Component1` clase en el formulario y abra el formulario en un entorno de diseño como Visual Studio.</span><span class="sxs-lookup"><span data-stu-id="d455b-113">Create an instance of the `Component1` class on your form and open the form in a design environment like Visual Studio.</span></span> <span data-ttu-id="d455b-114">Presione la tecla F1 para invocar el <xref:System.ComponentModel.Design.MenuCommand>.</span><span class="sxs-lookup"><span data-stu-id="d455b-114">Press the F1 key to invoke the <xref:System.ComponentModel.Design.MenuCommand>.</span></span>  
  
 [!code-cpp[MenuCommand Example#10](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuCommand Example/CPP/component1.cpp#10)]
 [!code-csharp[MenuCommand Example#10](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuCommand Example/CS/component1.cs#10)]
 [!code-vb[MenuCommand Example#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuCommand Example/VB/component1.vb#10)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet">
      <span data-ttu-id="d455b-115">Para obtener acceso completo a los recursos del sistema.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d455b-115">for full access to system resources.</span>
      </span>
      <span data-ttu-id="d455b-116">Valores de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d455b-116">Demand values: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
      </span>
      <span data-ttu-id="d455b-117">Estado asociado:</span>
      <span class="sxs-lookup">
        <span data-stu-id="d455b-117">Associated state:</span>
      </span>
    </permission>
    <altmember cref="T:System.ComponentModel.Design.StandardCommands" />
    <altmember cref="T:System.ComponentModel.Design.IMenuCommandService" />
    <altmember cref="T:System.ComponentModel.Design.CommandID" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuCommand (EventHandler handler, System.ComponentModel.Design.CommandID command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.EventHandler handler, class System.ComponentModel.Design.CommandID command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As EventHandler, command As CommandID)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuCommand(EventHandler ^ handler, System::ComponentModel::Design::CommandID ^ command);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.EventHandler" />
        <Parameter Name="command" Type="System.ComponentModel.Design.CommandID" />
      </Parameters>
      <Docs>
        <param name="handler">
          <span data-ttu-id="d455b-118">Evento que se va a provocar cuando el usuario seleccione el elemento de menú o el botón de barra de herramientas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d455b-118">The event to raise when the user selects the menu item or toolbar button.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="d455b-119">Identificador de comando único que vincula este comando de menú al menú del entorno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d455b-119">The unique command ID that links this menu command to the environment's menu.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d455b-120">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.MenuCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d455b-120">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.MenuCommand" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d455b-121">En el ejemplo de código siguiente se crea un <xref:System.ComponentModel.Design.MenuCommand> objeto, configura sus propiedades y lo agrega a un <xref:System.ComponentModel.Design.IMenuCommandService> objeto.</span><span class="sxs-lookup"><span data-stu-id="d455b-121">The following code example creates a <xref:System.ComponentModel.Design.MenuCommand> object, configures its properties, and adds it to an <xref:System.ComponentModel.Design.IMenuCommandService> object.</span></span>  
  
 [!code-cpp[MenuCommand Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuCommand Example/CPP/component1.cpp#1)]
 [!code-csharp[MenuCommand Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuCommand Example/CS/component1.cs#1)]
 [!code-vb[MenuCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuCommand Example/VB/component1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IMenuCommandService" />
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public virtual bool Checked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Checked" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.MenuCommand.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Checked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Checked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d455b-122">Obtiene o establece un valor que indica si el elemento de menú está activado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d455b-122">Gets or sets a value indicating whether this menu item is checked.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d455b-123">Es <see langword="true" /> si el elemento está activado; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d455b-123">
              <see langword="true" /> if the item is checked; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CommandChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CommandChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Design.MenuCommand.CommandChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CommandChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CommandChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d455b-124">Se produce cuando cambia el comando de menú.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d455b-124">Occurs when the menu command changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d455b-125">Un comando puede cambiar si se convierte en activa o se deshabilita.</span><span class="sxs-lookup"><span data-stu-id="d455b-125">A command can change if it becomes checked or disabled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandID">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.CommandID CommandID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.CommandID CommandID" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.MenuCommand.CommandID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CommandID As CommandID" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::CommandID ^ CommandID { System::ComponentModel::Design::CommandID ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.CommandID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d455b-126">Obtiene el <see cref="T:System.ComponentModel.Design.CommandID" /> asociado al comando de menú.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d455b-126">Gets the <see cref="T:System.ComponentModel.Design.CommandID" /> associated with this menu command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d455b-127">
            <see cref="T:System.ComponentModel.Design.CommandID" /> asociado al comando de menú.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d455b-127">The <see cref="T:System.ComponentModel.Design.CommandID" /> associated with the menu command.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.CommandID" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public virtual bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.MenuCommand.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d455b-128">Obtiene un valor que indica si el elemento de menú está disponible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d455b-128">Gets a value indicating whether this menu item is available.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d455b-129">Es <see langword="true" /> si el elemento está habilitado; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d455b-129">
              <see langword="true" /> if the item is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d455b-130">En el ejemplo de código siguiente se crea un <xref:System.ComponentModel.Design.MenuCommand> objeto, configura sus propiedades y lo agrega a <xref:System.ComponentModel.Design.IMenuCommandService>.</span><span class="sxs-lookup"><span data-stu-id="d455b-130">The following code example creates a <xref:System.ComponentModel.Design.MenuCommand> object, configures its properties, and adds it to <xref:System.ComponentModel.Design.IMenuCommandService>.</span></span>  
  
 [!code-cpp[MenuCommand Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuCommand Example/CPP/component1.cpp#1)]
 [!code-csharp[MenuCommand Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuCommand Example/CS/component1.cs#1)]
 [!code-vb[MenuCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuCommand Example/VB/component1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d455b-131">Invoca el comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d455b-131">Invokes the command.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public virtual void Invoke ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommand.Invoke" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Invoke ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Invoke();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d455b-132">Invoca el comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d455b-132">Invokes the command.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public virtual void Invoke (object arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke(object arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommand.Invoke(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Invoke (arg As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Invoke(System::Object ^ arg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="arg">
          <span data-ttu-id="d455b-133">Argumento opcional para ser utilizado por el comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d455b-133">An optional argument for use by the command.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d455b-134">Llama al comando con el parámetro determinado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d455b-134">Invokes the command with the given parameter.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d455b-135">La implementación predeterminada de este método omite <paramref name="arg" />, pero las clases derivadas pueden invalidar este método y usarlo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d455b-135">The default implementation of this method ignores <paramref name="arg" />, but deriving classes may override this method and use it.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OleStatus">
      <MemberSignature Language="C#" Value="public virtual int OleStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OleStatus" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.MenuCommand.OleStatus" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OleStatus As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int OleStatus { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d455b-136">Obtiene el código de estado del comando OLE para el elemento de menú.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d455b-136">Gets the OLE command status code for this menu item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d455b-137">Entero que contiene una combinación de marcadores de estado que reflejan el estado de este elemento de menú.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d455b-137">An integer containing a mixture of status flags that reflect the state of this menu item.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCommandChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCommandChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCommandChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCommandChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCommandChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="d455b-138">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d455b-138">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d455b-139">Genera el evento <see cref="E:System.ComponentModel.Design.MenuCommand.CommandChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d455b-139">Raises the <see cref="E:System.ComponentModel.Design.MenuCommand.CommandChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d455b-140">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="d455b-140">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d455b-141">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d455b-141">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d455b-142">El método <xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="d455b-142">The <xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d455b-143">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="d455b-143">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d455b-144">Al reemplazar <see cref="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)" /> método para que los delegados registrados reciban el evento.</span>
            <span class="sxs-lookup">
              <span data-stu-id="d455b-144">When overriding <see cref="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionary Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Properties" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.MenuCommand.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Properties As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::IDictionary ^ Properties { System::Collections::IDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d455b-145">Obtiene las propiedades públicas asociadas a la clase <see cref="T:System.ComponentModel.Design.MenuCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d455b-145">Gets the public properties associated with the <see cref="T:System.ComponentModel.Design.MenuCommand" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d455b-146">Una interfaz <see cref="T:System.Collections.IDictionary" /> que contiene las propiedades públicas de la clase <see cref="T:System.ComponentModel.Design.MenuCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d455b-146">An <see cref="T:System.Collections.IDictionary" /> containing the public properties of the <see cref="T:System.ComponentModel.Design.MenuCommand" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d455b-147">Todos los comandos de menú almacenan sus propiedades públicas en la <xref:System.ComponentModel.Design.MenuCommand.Properties%2A> colección.</span><span class="sxs-lookup"><span data-stu-id="d455b-147">All menu commands store their public properties in the <xref:System.ComponentModel.Design.MenuCommand.Properties%2A> collection.</span></span> <span data-ttu-id="d455b-148">La clave en el diccionario de propiedades es el nombre de propiedad.</span><span class="sxs-lookup"><span data-stu-id="d455b-148">The key in the properties dictionary is the property name.</span></span> <span data-ttu-id="d455b-149">Esto permite la enumeración genérica de propiedades y proporciona un sustrato coherente desde el que se pueden agregar nuevas propiedades sin modificar la definición de clase.</span><span class="sxs-lookup"><span data-stu-id="d455b-149">This allows for generic enumeration of properties and provides a consistent substrate from which new properties can be added without modifying the class definition.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Supported">
      <MemberSignature Language="C#" Value="public virtual bool Supported { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Supported" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.MenuCommand.Supported" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Supported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Supported { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d455b-150">Obtiene o establece un valor que indica si se admite el elemento de menú.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d455b-150">Gets or sets a value indicating whether this menu item is supported.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d455b-151">Es <see langword="true" /> si se admite el elemento, que es el valor predeterminado; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d455b-151">
              <see langword="true" /> if the item is supported, which is the default; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d455b-152">En el ejemplo de código siguiente se crea un <xref:System.ComponentModel.Design.MenuCommand> objeto, configura sus propiedades y lo agrega a la <xref:System.ComponentModel.Design.IMenuCommandService>.</span><span class="sxs-lookup"><span data-stu-id="d455b-152">The following code example creates a <xref:System.ComponentModel.Design.MenuCommand> object, configures its properties, and adds it to the <xref:System.ComponentModel.Design.IMenuCommandService>.</span></span>  
  
 [!code-cpp[MenuCommand Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuCommand Example/CPP/component1.cpp#1)]
 [!code-csharp[MenuCommand Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuCommand Example/CS/component1.cs#1)]
 [!code-vb[MenuCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuCommand Example/VB/component1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.MenuCommand.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d455b-153">Devuelve una representación en forma de cadena de este comando de menú.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d455b-153">Returns a string representation of this menu command.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d455b-154">Cadena que contiene el valor de la propiedad <see cref="P:System.ComponentModel.Design.MenuCommand.CommandID" /> que tiene agregados los nombres de los marcadores establecidos, separados por barras verticales (|</span>
          <span class="sxs-lookup">
            <span data-stu-id="d455b-154">A string containing the value of the <see cref="P:System.ComponentModel.Design.MenuCommand.CommandID" /> property appended with the names of any flags that are set, separated by pipe bars (|).</span>
          </span>
          <span data-ttu-id="d455b-155">Entre las propiedades de los marcadores se incluyen <see cref="P:System.ComponentModel.Design.MenuCommand.Checked" />, <see cref="P:System.ComponentModel.Design.MenuCommand.Enabled" />, <see cref="P:System.ComponentModel.Design.MenuCommand.Supported" /> y <see cref="P:System.ComponentModel.Design.MenuCommand.Visible" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d455b-155">These flag properties include <see cref="P:System.ComponentModel.Design.MenuCommand.Checked" />, <see cref="P:System.ComponentModel.Design.MenuCommand.Enabled" />, <see cref="P:System.ComponentModel.Design.MenuCommand.Supported" />, and <see cref="P:System.ComponentModel.Design.MenuCommand.Visible" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public virtual bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.MenuCommand.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d455b-156">Obtiene o establece un valor que indica si el elemento de menú es visible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d455b-156">Gets or sets a value indicating whether this menu item is visible.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d455b-157">Es <see langword="true" /> si el elemento es visible; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d455b-157">
              <see langword="true" /> if the item is visible; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d455b-158">En el ejemplo de código siguiente se crea un <xref:System.ComponentModel.Design.MenuCommand> objeto, configura sus propiedades y lo agrega a la <xref:System.ComponentModel.Design.IMenuCommandService>.</span><span class="sxs-lookup"><span data-stu-id="d455b-158">The following code example creates a <xref:System.ComponentModel.Design.MenuCommand> object, configures its properties, and adds it to the <xref:System.ComponentModel.Design.IMenuCommandService>.</span></span>  
  
 [!code-cpp[MenuCommand Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MenuCommand Example/CPP/component1.cpp#1)]
 [!code-csharp[MenuCommand Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MenuCommand Example/CS/component1.cs#1)]
 [!code-vb[MenuCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MenuCommand Example/VB/component1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>