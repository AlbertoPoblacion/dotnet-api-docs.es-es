<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MenuCommand.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59857b16d26530fe05c26f2d684fccf8ed627f766.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9857b16d26530fe05c26f2d684fccf8ed627f766</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>Represents a Windows menu or toolbar command item.</source>
          <target state="translated">Representa un elemento de comando de barra de herramientas o de menú de Windows.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> class represents information about a Windows menu or toolbar command.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> clase representa información sobre un comando de menú o barra de herramientas de Windows.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph> interface allows you to add <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> objects to the Visual Studio menu.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph> interfaz le permite agregar <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> objetos en el menú de Visual Studio.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>This class provides the following members:</source>
          <target state="translated">Esta clase proporciona a los siguientes miembros:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>An event-handler property to which you can attach an event handler for the command.</source>
          <target state="translated">Una propiedad de controlador de eventos a los que puede adjuntar un controlador de eventos para el comando.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Design.CommandID&gt;</ph> property that uniquely identifies the command.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.ComponentModel.Design.CommandID&gt;</ph> propiedad que identifica de forma única el comando.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>An <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.Invoke%2A&gt;</ph> method that executes the command.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.Invoke%2A&gt;</ph> método que se ejecuta el comando.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>An <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A&gt;</ph> method that can be overridden to handle the event that occurs when a new command is selected.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A&gt;</ph> método que se puede invalidar para controlar el evento que tiene lugar cuando se selecciona un nuevo comando.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>Boolean flag states that indicate whether the command is <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.Checked%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommand.Enabled%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.ComponentModel.Design.MenuCommand.Supported%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.ComponentModel.Design.MenuCommand.Visible%2A&gt;</ph>.</source>
          <target state="translated">Estados de indicador booleano que indican si el comando es <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.Checked%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ComponentModel.Design.MenuCommand.Enabled%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.ComponentModel.Design.MenuCommand.Supported%2A&gt;</ph>, o <ph id="ph4">&lt;xref:System.ComponentModel.Design.MenuCommand.Visible%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>An <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.OleStatus%2A&gt;</ph> property that indicates the OLE command status code for the command.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.OleStatus%2A&gt;</ph> código de estado para el comando de comandos de la propiedad que indica la OLE.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>An override for the <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.ToString%2A&gt;</ph> method.</source>
          <target state="translated">Un nombre para invalidar el <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.ToString%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> object, configures its properties, and adds it to the <ph id="ph2">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph>.</source>
          <target state="translated">En el ejemplo de código siguiente se crea un <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> objeto, configura sus propiedades y lo agrega a la <ph id="ph2">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>Create an instance of the <ph id="ph1">`Component1`</ph> class on your form and open the form in a design environment like Visual Studio.</source>
          <target state="translated">Cree una instancia de la <ph id="ph1">`Component1`</ph> clase en el formulario y abra el formulario en un entorno de diseño como Visual Studio.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>Press the F1 key to invoke the <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph>.</source>
          <target state="translated">Presione la tecla F1 para invocar el <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>for full access to system resources.</source>
          <target state="translated">Para obtener acceso completo a los recursos del sistema.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>Demand values: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>.</source>
          <target state="translated">Valores de petición: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>Associated state:</source>
          <target state="translated">Estado asociado:</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)">
          <source>The event to raise when the user selects the menu item or toolbar button.</source>
          <target state="translated">Evento que se va a provocar cuando el usuario seleccione el elemento de menú o el botón de barra de herramientas.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)">
          <source>The unique command ID that links this menu command to the environment's menu.</source>
          <target state="translated">Identificador de comando único que vincula este comando de menú al menú del entorno.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> object, configures its properties, and adds it to an <ph id="ph2">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph> object.</source>
          <target state="translated">En el ejemplo de código siguiente se crea un <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> objeto, configura sus propiedades y lo agrega a un <ph id="ph2">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.MenuCommand.Checked">
          <source>Gets or sets a value indicating whether this menu item is checked.</source>
          <target state="translated">Obtiene o establece un valor que indica si el elemento de menú está activado.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.Checked">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the item is checked; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el elemento está activado; en caso contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.MenuCommand.CommandChanged">
          <source>Occurs when the menu command changes.</source>
          <target state="translated">Se produce cuando cambia el comando de menú.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.MenuCommand.CommandChanged">
          <source>A command can change if it becomes checked or disabled.</source>
          <target state="translated">Un comando puede cambiar si se convierte en activa o se deshabilita.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.MenuCommand.CommandID">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.CommandID" /&gt;</ph> associated with this menu command.</source>
          <target state="translated">Obtiene el <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.CommandID" /&gt;</ph> asociado al comando de menú.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.CommandID">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.CommandID" /&gt;</ph> associated with the menu command.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.CommandID" /&gt;</ph> asociado al comando de menú.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.MenuCommand.Enabled">
          <source>Gets a value indicating whether this menu item is available.</source>
          <target state="translated">Obtiene un valor que indica si el elemento de menú está disponible.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.Enabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the item is enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el elemento está habilitado; en caso contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.Enabled">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> object, configures its properties, and adds it to <ph id="ph2">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph>.</source>
          <target state="translated">En el ejemplo de código siguiente se crea un <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> objeto, configura sus propiedades y lo agrega a <ph id="ph2">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.MenuCommand">
          <source>Invokes the command.</source>
          <target state="translated">Invoca el comando.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommand.Invoke">
          <source>Invokes the command.</source>
          <target state="translated">Invoca el comando.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommand.Invoke(System.Object)">
          <source>An optional argument for use by the command.</source>
          <target state="translated">Argumento opcional para ser utilizado por el comando.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommand.Invoke(System.Object)">
          <source>Invokes the command with the given parameter.</source>
          <target state="translated">Llama al comando con el parámetro determinado.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommand.Invoke(System.Object)">
          <source>The default implementation of this method ignores <ph id="ph1">&lt;paramref name="arg" /&gt;</ph>, but deriving classes may override this method and use it.</source>
          <target state="translated">La implementación predeterminada de este método omite <ph id="ph1">&lt;paramref name="arg" /&gt;</ph>, pero las clases derivadas pueden invalidar este método y usarlo.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.MenuCommand.OleStatus">
          <source>Gets the OLE command status code for this menu item.</source>
          <target state="translated">Obtiene el código de estado del comando OLE para el elemento de menú.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.OleStatus">
          <source>An integer containing a mixture of status flags that reflect the state of this menu item.</source>
          <target state="translated">Entero que contiene una combinación de marcadores de estado que reflejan el estado de este elemento de menú.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> que contiene los datos del evento.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.MenuCommand.CommandChanged" /&gt;</ph> event.</source>
          <target state="translated">Genera el evento <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.MenuCommand.CommandChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>controlar y provocar eventos<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">El método <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.OnCommandChanged%2A&gt;</ph> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Ésta es la técnica preferida para controlar el evento en una clase derivada.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class’s <ph id="ph2">&lt;see cref="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Al reemplazar <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)" /&gt;</ph> en una clase derivada, asegúrese de llamar a la clase base <ph id="ph2">&lt;see cref="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)" /&gt;</ph> método para que los delegados registrados reciban el evento.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.MenuCommand.Properties">
          <source>Gets the public properties associated with the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph>.</source>
          <target state="translated">Obtiene las propiedades públicas asociadas a la clase <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.Properties">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> containing the public properties of the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph>.</source>
          <target state="translated">Una interfaz <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> que contiene las propiedades públicas de la clase <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.MenuCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.Properties">
          <source>All menu commands store their public properties in the <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.Properties%2A&gt;</ph> collection.</source>
          <target state="translated">Todos los comandos de menú almacenan sus propiedades públicas en la <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand.Properties%2A&gt;</ph> colección.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.Properties">
          <source>The key in the properties dictionary is the property name.</source>
          <target state="translated">La clave en el diccionario de propiedades es el nombre de propiedad.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.Properties">
          <source>This allows for generic enumeration of properties and provides a consistent substrate from which new properties can be added without modifying the class definition.</source>
          <target state="translated">Esto permite la enumeración genérica de propiedades y proporciona un sustrato coherente desde el que se pueden agregar nuevas propiedades sin modificar la definición de clase.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.MenuCommand.Supported">
          <source>Gets or sets a value indicating whether this menu item is supported.</source>
          <target state="translated">Obtiene o establece un valor que indica si se admite el elemento de menú.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.Supported">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the item is supported, which is the default; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si se admite el elemento, que es el valor predeterminado; en caso contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.Supported">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> object, configures its properties, and adds it to the <ph id="ph2">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph>.</source>
          <target state="translated">En el ejemplo de código siguiente se crea un <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> objeto, configura sus propiedades y lo agrega a la <ph id="ph2">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommand.ToString">
          <source>Returns a string representation of this menu command.</source>
          <target state="translated">Devuelve una representación en forma de cadena de este comando de menú.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommand.ToString">
          <source>A string containing the value of the <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.MenuCommand.CommandID" /&gt;</ph> property appended with the names of any flags that are set, separated by pipe bars (|).</source>
          <target state="translated">Cadena que contiene el valor de la propiedad <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.MenuCommand.CommandID" /&gt;</ph> que tiene agregados los nombres de los marcadores establecidos, separados por barras verticales (|</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.MenuCommand.ToString">
          <source>These flag properties include <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.MenuCommand.Checked" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.ComponentModel.Design.MenuCommand.Enabled" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.ComponentModel.Design.MenuCommand.Supported" /&gt;</ph>, and <ph id="ph4">&lt;see cref="P:System.ComponentModel.Design.MenuCommand.Visible" /&gt;</ph>.</source>
          <target state="translated">Entre las propiedades de los marcadores se incluyen <ph id="ph1">&lt;see cref="P:System.ComponentModel.Design.MenuCommand.Checked" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.ComponentModel.Design.MenuCommand.Enabled" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.ComponentModel.Design.MenuCommand.Supported" /&gt;</ph> y <ph id="ph4">&lt;see cref="P:System.ComponentModel.Design.MenuCommand.Visible" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.MenuCommand.Visible">
          <source>Gets or sets a value indicating whether this menu item is visible.</source>
          <target state="translated">Obtiene o establece un valor que indica si el elemento de menú es visible.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.Visible">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the item is visible; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el elemento es visible; en caso contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.MenuCommand.Visible">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> object, configures its properties, and adds it to the <ph id="ph2">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph>.</source>
          <target state="translated">En el ejemplo de código siguiente se crea un <ph id="ph1">&lt;xref:System.ComponentModel.Design.MenuCommand&gt;</ph> objeto, configura sus propiedades y lo agrega a la <ph id="ph2">&lt;xref:System.ComponentModel.Design.IMenuCommandService&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>