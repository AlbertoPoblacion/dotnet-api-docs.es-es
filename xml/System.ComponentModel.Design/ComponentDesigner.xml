<Type Name="ComponentDesigner" FullName="System.ComponentModel.Design.ComponentDesigner">
  <TypeSignature Language="C#" Value="public class ComponentDesigner : IDisposable, System.ComponentModel.Design.IComponentInitializer, System.ComponentModel.Design.IDesigner, System.ComponentModel.Design.IDesignerFilter, System.ComponentModel.Design.ITreeDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComponentDesigner extends System.Object implements class System.ComponentModel.Design.IComponentInitializer, class System.ComponentModel.Design.IDesigner, class System.ComponentModel.Design.IDesignerFilter, class System.ComponentModel.Design.ITreeDesigner, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ComponentDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Class ComponentDesigner&#xA;Implements IComponentInitializer, IDesigner, IDesignerFilter, IDisposable, ITreeDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentDesigner : IDisposable, System::ComponentModel::Design::IComponentInitializer, System::ComponentModel::Design::IDesigner, System::ComponentModel::Design::IDesignerFilter, System::ComponentModel::Design::ITreeDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IComponentInitializer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IDesigner</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IDesignerFilter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.ITreeDesigner</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="8224a-101">Extiende el comportamiento de un componente en modo de diseño.</span><span class="sxs-lookup"><span data-stu-id="8224a-101">Extends the design mode behavior of a component.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8224a-102">La <xref:System.ComponentModel.Design.ComponentDesigner> clase base de diseñador proporciona un diseñador simple que puede extender el comportamiento de un componente asociado en modo de diseño.</span><span class="sxs-lookup"><span data-stu-id="8224a-102">The <xref:System.ComponentModel.Design.ComponentDesigner> base designer class provides a simple designer that can extend the behavior of an associated component in design mode.</span></span>  
  
 <span data-ttu-id="8224a-103"><xref:System.ComponentModel.Design.ComponentDesigner> Proporciona vacío <xref:System.ComponentModel.Design.IDesignerFilter> implementación, cuyos métodos se pueden invalidar para ajustar los atributos, propiedades y eventos del componente asociado en tiempo de diseño de la interfaz.</span><span class="sxs-lookup"><span data-stu-id="8224a-103"><xref:System.ComponentModel.Design.ComponentDesigner> provides an empty <xref:System.ComponentModel.Design.IDesignerFilter> interface implementation, whose methods can be overridden to adjust the attributes, properties and events of the associated component at design time.</span></span>  
  
 <span data-ttu-id="8224a-104">Puede asociar un diseñador a un tipo mediante un <xref:System.ComponentModel.DesignerAttribute>.</span><span class="sxs-lookup"><span data-stu-id="8224a-104">You can associate a designer with a type using a <xref:System.ComponentModel.DesignerAttribute>.</span></span> <span data-ttu-id="8224a-105">Para obtener información general sobre la personalización del comportamiento en tiempo de diseño, vea [extender compatibilidad en tiempo de diseño](http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2).</span><span class="sxs-lookup"><span data-stu-id="8224a-105">For an overview of customizing design-time behavior, see [Extending Design-Time Support](http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2).</span></span>  
  
 <span data-ttu-id="8224a-106">La <xref:System.ComponentModel.Design.ComponentDesigner> clase implementa un comportamiento especial para los descriptores de propiedades de componentes heredados.</span><span class="sxs-lookup"><span data-stu-id="8224a-106">The <xref:System.ComponentModel.Design.ComponentDesigner> class implements a special behavior for the property descriptors of inherited components.</span></span> <span data-ttu-id="8224a-107">Un tipo interno denominado `InheritedPropertyDescriptor` se usa la plantilla predeterminada <xref:System.ComponentModel.Design.ComponentDesigner> implementación a sustituir por las propiedades que se heredan de una clase base.</span><span class="sxs-lookup"><span data-stu-id="8224a-107">An internal type named `InheritedPropertyDescriptor` is used by the default <xref:System.ComponentModel.Design.ComponentDesigner> implementation to stand in for properties that are inherited from a base class.</span></span> <span data-ttu-id="8224a-108">Hay dos casos en que se agregan estos descriptores de propiedades.</span><span class="sxs-lookup"><span data-stu-id="8224a-108">There are two cases in which these property descriptors are added.</span></span>  
  
1.  <span data-ttu-id="8224a-109">En el propio objeto raíz, que es devuelto por la <xref:System.ComponentModel.Design.IDesignerHost.RootComponent%2A?displayProperty=nameWithType> propiedad, porque se hereda de su clase base.</span><span class="sxs-lookup"><span data-stu-id="8224a-109">To the root object itself, which is returned by the <xref:System.ComponentModel.Design.IDesignerHost.RootComponent%2A?displayProperty=nameWithType> property, because you are inheriting from its base class.</span></span>  
  
2.  <span data-ttu-id="8224a-110">A los campos que se encuentra en la clase base del objeto raíz.</span><span class="sxs-lookup"><span data-stu-id="8224a-110">To fields found in the base class of the root object.</span></span> <span data-ttu-id="8224a-111">Campos públicos y protegidos de la clase base se agregan al diseñador para que pueden manipular por el usuario.</span><span class="sxs-lookup"><span data-stu-id="8224a-111">Public and protected fields from the base class are added to the designer so that they can be manipulated by the user.</span></span>  
  
 <span data-ttu-id="8224a-112">La `InheritedPropertyDescriptor` clase modifica el valor predeterminado de una propiedad, por lo que el valor predeterminado es el valor actual en la creación de instancias de objeto.</span><span class="sxs-lookup"><span data-stu-id="8224a-112">The `InheritedPropertyDescriptor` class modifies the default value of a property, so that the default value is the current value at object instantiation.</span></span> <span data-ttu-id="8224a-113">Esto es porque la propiedad se hereda de otra instancia.</span><span class="sxs-lookup"><span data-stu-id="8224a-113">This is because the property is inherited from another instance.</span></span> <span data-ttu-id="8224a-114">El diseñador define restablecer el valor de propiedad como si se establece en el valor que se estableció la clase heredada.</span><span class="sxs-lookup"><span data-stu-id="8224a-114">The designer defines resetting the property value as setting it to the value that was set by the inherited class.</span></span> <span data-ttu-id="8224a-115">Este valor puede diferir del valor predeterminado almacenado en los metadatos.</span><span class="sxs-lookup"><span data-stu-id="8224a-115">This value may differ from the default value stored in metadata.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8224a-116">En el ejemplo de código siguiente se proporciona un ejemplo <xref:System.ComponentModel.Design.ComponentDesigner> implementación y un componente de ejemplo asociado al diseñador.</span><span class="sxs-lookup"><span data-stu-id="8224a-116">The following code example provides an example <xref:System.ComponentModel.Design.ComponentDesigner> implementation and an example component associated with the designer.</span></span> <span data-ttu-id="8224a-117">El diseñador implementa una invalidación de la <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> método que llama a la base de `Initialize` /método siguiente, una invalidación de la <xref:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction%2A> método que muestra un <xref:System.Windows.Forms.MessageBox> cuando se hace doble clic en el componente y un reemplazo de la <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> descriptor de acceso de propiedad que proporciona un personalizado <xref:System.ComponentModel.Design.DesignerVerb> comando de menú al menú contextual para el componente.</span><span class="sxs-lookup"><span data-stu-id="8224a-117">The designer implements an override of the <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> method that calls the base `Initialize` method, an override of the <xref:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction%2A> method that displays a <xref:System.Windows.Forms.MessageBox> when the component is double-clicked, and an override of the <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> property accessor that supplies a custom <xref:System.ComponentModel.Design.DesignerVerb> menu command to the shortcut menu for the component.</span></span>  
  
 [!code-cpp[ComponentDesignerExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ComponentDesignerExample/CPP/examplecomponent.cpp#1)]
 [!code-csharp[ComponentDesignerExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ComponentDesignerExample/CS/examplecomponent.cs#1)]
 [!code-vb[ComponentDesignerExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ComponentDesignerExample/VB/examplecomponent.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.IDesigner" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
    <altmember cref="T:System.ComponentModel.DesignerAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8224a-118">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</span><span class="sxs-lookup"><span data-stu-id="8224a-118">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionLists">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DesignerActionListCollection ActionLists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerActionListCollection ActionLists" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.ActionLists" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ActionLists As DesignerActionListCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignerActionListCollection ^ ActionLists { System::ComponentModel::Design::DesignerActionListCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionListCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8224a-119">Obtiene las listas de acciones en tiempo de diseño que admite el componente asociado al diseñador.</span><span class="sxs-lookup"><span data-stu-id="8224a-119">Gets the design-time action lists supported by the component associated with the designer.</span></span></summary>
        <value><span data-ttu-id="8224a-120">Listas de acciones en tiempo de diseño que admite el componente asociado al diseñador.</span><span class="sxs-lookup"><span data-stu-id="8224a-120">The design-time action lists supported by the component associated with the designer.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssociatedComponents">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection AssociatedComponents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection AssociatedComponents" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.AssociatedComponents" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AssociatedComponents As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ AssociatedComponents { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8224a-121">Obtiene la colección de componentes asociados al componente administrado por el diseñador.</span><span class="sxs-lookup"><span data-stu-id="8224a-121">Gets the collection of components associated with the component managed by the designer.</span></span></summary>
        <value><span data-ttu-id="8224a-122">Componentes asociados al componente administrado por el diseñador.</span><span class="sxs-lookup"><span data-stu-id="8224a-122">The components that are associated with the component managed by the designer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8224a-123">Esta propiedad indica los componentes para copiar o mover junto con el componente administrado por el diseñador durante una copia, arrastre o la operación de movimiento.</span><span class="sxs-lookup"><span data-stu-id="8224a-123">This property indicates any components to copy or move along with the component managed by the designer during a copy, drag, or move operation.</span></span>  
  
 <span data-ttu-id="8224a-124">Si esta colección contiene referencias a otros componentes en el documento actual en modo de diseño, los componentes se copiarán junto con el componente administrado por el diseñador durante una operación de copia.</span><span class="sxs-lookup"><span data-stu-id="8224a-124">If this collection contains references to other components in the current design mode document, those components will be copied along with the component managed by the designer during a copy operation.</span></span>  
  
 <span data-ttu-id="8224a-125">Cuando se selecciona el componente administrado por el diseñador, esta colección se rellena con los controles anidados.</span><span class="sxs-lookup"><span data-stu-id="8224a-125">When the component managed by the designer is selected, this collection is filled with any nested controls.</span></span> <span data-ttu-id="8224a-126">Esta colección también puede incluir otros componentes, como los botones de una barra de herramientas.</span><span class="sxs-lookup"><span data-stu-id="8224a-126">This collection can also include other components, such as the buttons of a toolbar.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Component">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent Component { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent Component" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.Component" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Component As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ Component { System::ComponentModel::IComponent ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8224a-127">Obtiene el componente que el diseñador está creando.</span><span class="sxs-lookup"><span data-stu-id="8224a-127">Gets the component this designer is designing.</span></span></summary>
        <value><span data-ttu-id="8224a-128">Componente administrado por el diseñador.</span><span class="sxs-lookup"><span data-stu-id="8224a-128">The component managed by the designer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8224a-129">El <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> método <xref:System.ComponentModel.Design.ComponentDesigner> establece esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="8224a-129">The <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> method of <xref:System.ComponentModel.Design.ComponentDesigner> sets this property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8224a-130">Al reemplazar el <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> método, asegúrese de llamar a la clase base <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> método antes de utilizar esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="8224a-130">When overriding the <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> method, be sure to call the base class <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> method before using this property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8224a-131">Libera los recursos que usa <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</span><span class="sxs-lookup"><span data-stu-id="8224a-131">Releases the resources used by the <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8224a-132">Libera todos los recursos que usa <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</span><span class="sxs-lookup"><span data-stu-id="8224a-132">Releases all resources used by the <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8224a-133">Llame a <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> cuando haya terminado de usar <xref:System.ComponentModel.Design.ComponentDesigner>.</span><span class="sxs-lookup"><span data-stu-id="8224a-133">Call <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.ComponentDesigner>.</span></span> <span data-ttu-id="8224a-134">El método <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> deja el <xref:System.ComponentModel.Design.ComponentDesigner> en un estado no utilizable.</span><span class="sxs-lookup"><span data-stu-id="8224a-134">The <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.ComponentDesigner> in an unusable state.</span></span> <span data-ttu-id="8224a-135">Después de llamar a <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A>, debe liberar todas las referencias a la <xref:System.ComponentModel.Design.ComponentDesigner> para que el recolector de elementos no utilizados pueda reclamar la memoria que el <xref:System.ComponentModel.Design.ComponentDesigner> estaba ocupando.</span><span class="sxs-lookup"><span data-stu-id="8224a-135">After calling <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.ComponentDesigner> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.ComponentDesigner> was occupying.</span></span> <span data-ttu-id="8224a-136">Para obtener más información, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [implementa un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="8224a-136">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8224a-137">Realice siempre una llamada a <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> antes de liberar la última referencia al objeto <xref:System.ComponentModel.Design.ComponentDesigner>.</span><span class="sxs-lookup"><span data-stu-id="8224a-137">Always call <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.ComponentDesigner>.</span></span> <span data-ttu-id="8224a-138">En caso contrario, los recursos que está usando no se liberarán hasta que el recolector de elementos no utilizados llame al método <xref:System.ComponentModel.Design.ComponentDesigner> del objeto `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="8224a-138">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.ComponentDesigner> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="8224a-139">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</span><span class="sxs-lookup"><span data-stu-id="8224a-139"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="8224a-140">Libera los recursos no administrados que usa <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> y, de forma opcional, libera los recursos administrados.</span><span class="sxs-lookup"><span data-stu-id="8224a-140">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8224a-141">Se llama a este método público `Dispose()` método y <xref:System.Object.Finalize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8224a-141">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="8224a-142">`Dispose()` se invoca el protegido `Dispose(Boolean)` método con el `disposing` parámetro establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="8224a-142">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="8224a-143"><xref:System.Object.Finalize%2A> invoca `Dispose` con `disposing` establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="8224a-143"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="8224a-144">Cuando el `disposing` del parámetro es true, este método libera todos los recursos retenidos por los objetos administrados que este <xref:System.ComponentModel.Design.ComponentDesigner> referencias.</span><span class="sxs-lookup"><span data-stu-id="8224a-144">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.ComponentDesigner> references.</span></span> <span data-ttu-id="8224a-145">Este método invoca al método `Dispose()` de cada uno de los objetos a los que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="8224a-145">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="8224a-146"><see langword="Dispose" /> puede recibir varias llamadas de otros objetos.</span><span class="sxs-lookup"><span data-stu-id="8224a-146"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="8224a-147">Al reemplazar <see langword="Dispose(Boolean)" /> tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="8224a-147">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="8224a-148">Para obtener más información sobre cómo implementar <see langword="Dispose(Boolean)" />, consulte [implementa un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="8224a-148">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="8224a-149">Para obtener más información acerca de <see langword="Dispose" /> y <see cref="M:System.Object.Finalize" />, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [reemplazar el método Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span><span class="sxs-lookup"><span data-stu-id="8224a-149">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DoDefaultAction">
      <MemberSignature Language="C#" Value="public virtual void DoDefaultAction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoDefaultAction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DoDefaultAction ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DoDefaultAction();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8224a-150">Crea una firma de método en el archivo de código fuente para el evento predeterminado del componente y hace navegar el cursor del usuario en esa ubicación.</span><span class="sxs-lookup"><span data-stu-id="8224a-150">Creates a method signature in the source code file for the default event on the component and navigates the user's cursor to that location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8224a-151">En los diseñadores de formularios Windows Forms y formularios Web Forms, este método se invoca cuando un usuario hace doble clic en un componente.</span><span class="sxs-lookup"><span data-stu-id="8224a-151">In Windows Forms and Web Forms designers, this method is invoked when a user double-clicks a component.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Design.CheckoutException"><span data-ttu-id="8224a-152">No se ha podido desproteger un archivo que está protegido en un programa de administración de código fuente.</span><span class="sxs-lookup"><span data-stu-id="8224a-152">An attempt to check out a file that is checked into a source code management program failed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ComponentDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ComponentDesigner ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8224a-153">Intenta liberar los recursos mediante una llamada a <see langword="Dispose(false)" /> antes de que el objeto sea reclamado por la recolección de elementos no utilizados.</span><span class="sxs-lookup"><span data-stu-id="8224a-153">Attempts to free resources by calling <see langword="Dispose(false)" /> before the object is reclaimed by garbage collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8224a-154">Este método invalida <xref:System.Object.Finalize%2A?displayProperty=nameWithType> y limpia los recursos mediante una llamada a `Dispose(false)`.</span><span class="sxs-lookup"><span data-stu-id="8224a-154">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType> and cleans up resources by calling `Dispose(false)`.</span></span> <span data-ttu-id="8224a-155">Invalide `Dispose(Boolean)` para personalizar la limpieza.</span><span class="sxs-lookup"><span data-stu-id="8224a-155">Override `Dispose(Boolean)` to customize the cleanup.</span></span>  
  
 <span data-ttu-id="8224a-156">Código de la aplicación no debe llamar a este método; un objeto `Finalize` método se invoca automáticamente durante la recolección de elementos no utilizados, a menos que se ha deshabilitado la finalización por el recolector de elementos no utilizados mediante una llamada a la <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="8224a-156">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="8224a-157">Para obtener más información, consulte [métodos de finalización y destructores](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md), y [reemplazar el método Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span><span class="sxs-lookup"><span data-stu-id="8224a-157">For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected virtual object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="8224a-158">Tipo de servicio que se va a solicitar.</span><span class="sxs-lookup"><span data-stu-id="8224a-158">The type of service to request.</span></span></param>
        <summary><span data-ttu-id="8224a-159">Intenta recuperar el tipo de servicio especificado del sitio en modo de diseño del componente del diseñador.</span><span class="sxs-lookup"><span data-stu-id="8224a-159">Attempts to retrieve the specified type of service from the design mode site of the designer's component.</span></span></summary>
        <returns><span data-ttu-id="8224a-160">Objeto que implementa el servicio solicitado o <see langword="null" /> si no se puede resolver el servicio.</span><span class="sxs-lookup"><span data-stu-id="8224a-160">An object implementing the requested service, or <see langword="null" /> if the service cannot be resolved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8224a-161">La implementación predeterminada de este método solicita el servicio desde el sitio del componente.</span><span class="sxs-lookup"><span data-stu-id="8224a-161">The default implementation of this method requests the service from the site of the component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8224a-162">En el ejemplo de código siguiente se muestra el uso de la <xref:System.ComponentModel.Design.ComponentDesigner.GetService%2A> método de acceso a servicios del diseñador.</span><span class="sxs-lookup"><span data-stu-id="8224a-162">The following code example demonstrates the use of the <xref:System.ComponentModel.Design.ComponentDesigner.GetService%2A> method to access designer services.</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.DesignerServices#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/CS/Form1.cs#7)]
 [!code-vb[System.ComponentModel.Design.DesignerServices#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritanceAttribute">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.InheritanceAttribute InheritanceAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.InheritanceAttribute InheritanceAttribute" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property InheritanceAttribute As InheritanceAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::ComponentModel::InheritanceAttribute ^ InheritanceAttribute { System::ComponentModel::InheritanceAttribute ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.InheritanceAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8224a-163">Obtiene un atributo que indica el tipo de herencia del componente asociado.</span><span class="sxs-lookup"><span data-stu-id="8224a-163">Gets an attribute that indicates the type of inheritance of the associated component.</span></span></summary>
        <value><span data-ttu-id="8224a-164"><see cref="T:System.ComponentModel.InheritanceAttribute" /> para el componente asociado.</span><span class="sxs-lookup"><span data-stu-id="8224a-164">The <see cref="T:System.ComponentModel.InheritanceAttribute" /> for the associated component.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Inherited">
      <MemberSignature Language="C#" Value="protected bool Inherited { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Inherited" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.Inherited" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Inherited As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Inherited { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8224a-165">Obtiene un valor que indica si este componente es heredado.</span><span class="sxs-lookup"><span data-stu-id="8224a-165">Gets a value indicating whether this component is inherited.</span></span></summary>
        <value>
          <span data-ttu-id="8224a-166"><see langword="true" /> si el componente es heredado; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8224a-166"><see langword="true" /> if the component is inherited; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual void Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Initialize (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="8224a-167">Componente para este diseñador.</span><span class="sxs-lookup"><span data-stu-id="8224a-167">The component for this designer.</span></span></param>
        <summary><span data-ttu-id="8224a-168">Prepara el diseñador para ver, modificar y diseñar el componente especificado.</span><span class="sxs-lookup"><span data-stu-id="8224a-168">Prepares the designer to view, edit, and design the specified component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8224a-169">El host del diseñador llama a este método cuando esté listo para usar el diseñador.</span><span class="sxs-lookup"><span data-stu-id="8224a-169">The designer host calls this method when it is ready to use the designer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
    <Member MemberName="InitializeExistingComponent">
      <MemberSignature Language="C#" Value="public virtual void InitializeExistingComponent (System.Collections.IDictionary defaultValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeExistingComponent(class System.Collections.IDictionary defaultValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitializeExistingComponent (defaultValues As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeExistingComponent(System::Collections::IDictionary ^ defaultValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="defaultValues"><span data-ttu-id="8224a-170">Diccionario de nombres/valores de los valores predeterminados que se van a aplicar a las propiedades.</span><span class="sxs-lookup"><span data-stu-id="8224a-170">A name/value dictionary of default values to apply to properties.</span></span> <span data-ttu-id="8224a-171">Puede ser <see langword="null" /> si no se especifican valores predeterminados.</span><span class="sxs-lookup"><span data-stu-id="8224a-171">May be <see langword="null" /> if no default values are specified.</span></span></param>
        <summary><span data-ttu-id="8224a-172">Reinicializa un componente existente.</span><span class="sxs-lookup"><span data-stu-id="8224a-172">Reinitializes an existing component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8224a-173">El <xref:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent%2A> método se llama cuando se se reinicializa un componente existente.</span><span class="sxs-lookup"><span data-stu-id="8224a-173">The <xref:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent%2A> method is called when an existing component is being reinitialized.</span></span> <span data-ttu-id="8224a-174">Por ejemplo, esto puede ocurrir después de que el usuario arrastra un componente a otro contenedor.</span><span class="sxs-lookup"><span data-stu-id="8224a-174">For example, this may occur after the user drags a component to another container.</span></span>  
  
 <span data-ttu-id="8224a-175">Puede usar el `defaultValues` diccionario aplicar recomendados de forma predeterminada a las propiedades; sin embargo, no debe modificar las propiedades de componente aparte de los almacenados en el diccionario, ya que este componente existente ya puede tener propiedades establecidas en él.</span><span class="sxs-lookup"><span data-stu-id="8224a-175">You may use the `defaultValues` dictionary to apply recommended defaults to properties; however, you should not modify component properties aside from those stored in the dictionary, because this existing component may already have properties set on it.</span></span>  
  
 <span data-ttu-id="8224a-176">La implementación predeterminada de este método no hace nada.</span><span class="sxs-lookup"><span data-stu-id="8224a-176">The default implementation of this method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeNewComponent">
      <MemberSignature Language="C#" Value="public virtual void InitializeNewComponent (System.Collections.IDictionary defaultValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeNewComponent(class System.Collections.IDictionary defaultValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitializeNewComponent (defaultValues As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeNewComponent(System::Collections::IDictionary ^ defaultValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="defaultValues"><span data-ttu-id="8224a-177">Diccionario de nombres/valores de los valores predeterminados que se van a aplicar a las propiedades.</span><span class="sxs-lookup"><span data-stu-id="8224a-177">A name/value dictionary of default values to apply to properties.</span></span> <span data-ttu-id="8224a-178">Puede ser <see langword="null" /> si no se especifican valores predeterminados.</span><span class="sxs-lookup"><span data-stu-id="8224a-178">May be <see langword="null" /> if no default values are specified.</span></span></param>
        <summary><span data-ttu-id="8224a-179">Inicializa un componente recién creado.</span><span class="sxs-lookup"><span data-stu-id="8224a-179">Initializes a newly created component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8224a-180">El <xref:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent%2A> se invoca cuando un componente de primer lugar se inicializa, normalmente después de que se agrega por primera vez a una superficie de diseño.</span><span class="sxs-lookup"><span data-stu-id="8224a-180">The <xref:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent%2A> method is called when a component is first initialized, typically after being first added to a design surface.</span></span>  
  
 <span data-ttu-id="8224a-181">Puede realizar cualquier inicialización necesaria de este componente, y puede pasar por alto el `defaultValues` diccionario por completo.</span><span class="sxs-lookup"><span data-stu-id="8224a-181">You may perform any necessary initialization of this component, and you may ignore the `defaultValues` dictionary altogether.</span></span>  
  
 <span data-ttu-id="8224a-182">La implementación predeterminada de este método no hace nada.</span><span class="sxs-lookup"><span data-stu-id="8224a-182">The default implementation of this method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeNonDefault">
      <MemberSignature Language="C#" Value="public virtual void InitializeNonDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeNonDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.InitializeNonDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitializeNonDefault ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeNonDefault();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated. Use InitializeExistingComponent instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8224a-183">Inicializa la configuración de un componente importado que ya se ha inicializado con una configuración que no es la predeterminada.</span><span class="sxs-lookup"><span data-stu-id="8224a-183">Initializes the settings for an imported component that is already initialized to settings other than the defaults.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8224a-184">Se llama a este método cuando el diseñador está asociado a un control que no está en su estado predeterminado, por ejemplo, un control que se pega o se mueve con una operación de arrastrar y colocar en el diseñador.</span><span class="sxs-lookup"><span data-stu-id="8224a-184">This method is called when the designer is associated with a control that is not in its default state, such as a control that you paste or move with a drag-and-drop operation onto the designer.</span></span> <span data-ttu-id="8224a-185">Este método proporciona una oportunidad para que los implementadores que modificar o prevalecer sobre las propiedades del componente en lugar de inicializar las propiedades para el componente en sus valores predeterminados.</span><span class="sxs-lookup"><span data-stu-id="8224a-185">This method provides an opportunity for implementers to modify or shadow the properties of the component rather than initialize the properties for the component to their defaults.</span></span> <span data-ttu-id="8224a-186">Se llama a este método después de las demás funciones de inicialización.</span><span class="sxs-lookup"><span data-stu-id="8224a-186">This method is called after the other initialization functions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeGetInheritanceAttribute">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.InheritanceAttribute InvokeGetInheritanceAttribute (System.ComponentModel.Design.ComponentDesigner toInvoke);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.InheritanceAttribute InvokeGetInheritanceAttribute(class System.ComponentModel.Design.ComponentDesigner toInvoke) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.InvokeGetInheritanceAttribute(System.ComponentModel.Design.ComponentDesigner)" />
      <MemberSignature Language="VB.NET" Value="Protected Function InvokeGetInheritanceAttribute (toInvoke As ComponentDesigner) As InheritanceAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::InheritanceAttribute ^ InvokeGetInheritanceAttribute(System::ComponentModel::Design::ComponentDesigner ^ toInvoke);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.InheritanceAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toInvoke" Type="System.ComponentModel.Design.ComponentDesigner" />
      </Parameters>
      <Docs>
        <param name="toInvoke"><span data-ttu-id="8224a-187">Enumeración <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> cuyo atributo de herencia se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="8224a-187">The <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> whose inheritance attribute to retrieve.</span></span></param>
        <summary><span data-ttu-id="8224a-188">Obtiene el objeto <see cref="T:System.ComponentModel.InheritanceAttribute" /> de la enumeración <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="8224a-188">Gets the <see cref="T:System.ComponentModel.InheritanceAttribute" /> of the specified <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</span></span></summary>
        <returns><span data-ttu-id="8224a-189">Clase <see cref="T:System.ComponentModel.InheritanceAttribute" /> del diseñador especificado.</span><span class="sxs-lookup"><span data-stu-id="8224a-189">The <see cref="T:System.ComponentModel.InheritanceAttribute" /> of the specified designer.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="OnSetComponentDefaults">
      <MemberSignature Language="C#" Value="public virtual void OnSetComponentDefaults ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSetComponentDefaults() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnSetComponentDefaults ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnSetComponentDefaults();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated. Use InitializeNewComponent instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8224a-190">Establece las propiedades predeterminadas del componente.</span><span class="sxs-lookup"><span data-stu-id="8224a-190">Sets the default properties for the component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8224a-191"><xref:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults%2A> se llama cuando se inicializa el diseñador.</span><span class="sxs-lookup"><span data-stu-id="8224a-191"><xref:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults%2A> is called when the designer is initialized.</span></span> <span data-ttu-id="8224a-192">Esto permite al diseñador proporcionar valores predeterminados para el componente base.</span><span class="sxs-lookup"><span data-stu-id="8224a-192">This allows the designer to provide default values for the base component.</span></span>  
  
 <span data-ttu-id="8224a-193">Este método se llama solo una vez: cuando se crea en primer lugar el componente arrastrándolo desde el cuadro de herramientas a la superficie de diseño.</span><span class="sxs-lookup"><span data-stu-id="8224a-193">This method is called only once: when you first create the component by dragging it from the Toolbox to the design surface.</span></span> <span data-ttu-id="8224a-194">Las inicializaciones subsiguientes del diseñador no invocar este método.</span><span class="sxs-lookup"><span data-stu-id="8224a-194">Subsequent initializations of the designer do not invoke this method.</span></span>  
  
 <span data-ttu-id="8224a-195">La implementación predeterminada de este método establece la propiedad predeterminada del componente en el nombre del componente si la propiedad predeterminada es una cadena y ya no está establecida la propiedad.</span><span class="sxs-lookup"><span data-stu-id="8224a-195">The default implementation of this method sets the default property of the component to the name of the component if the default property is a string and the property is not already set.</span></span> <span data-ttu-id="8224a-196">Este método se puede implementar en una clase derivada para personalizar la inicialización del componente que está diseñando este diseñador.</span><span class="sxs-lookup"><span data-stu-id="8224a-196">This method can be implemented in a derived class to customize the initialization of the component that this designer is designing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentComponent">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.IComponent ParentComponent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent ParentComponent" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.ParentComponent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ParentComponent As IComponent" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::ComponentModel::IComponent ^ ParentComponent { System::ComponentModel::IComponent ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8224a-197">Obtiene el componente primario de este diseñador.</span><span class="sxs-lookup"><span data-stu-id="8224a-197">Gets the parent component for this designer.</span></span></summary>
        <value><span data-ttu-id="8224a-198">Componente primario de este diseñador o <see langword="null" /> si el diseñador es el componente raíz.</span><span class="sxs-lookup"><span data-stu-id="8224a-198">The parent component for this designer, or <see langword="null" /> if this designer is the root component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8224a-199">Esta propiedad proporciona un mecanismo genérico para descubrir las relaciones primarias en los diseñadores y usa el <xref:System.ComponentModel.Design.ComponentDesigner> del objeto <xref:System.ComponentModel.Design.ITreeDesigner> implementación de la interfaz.</span><span class="sxs-lookup"><span data-stu-id="8224a-199">This property provides a generic mechanism for discovering parent relationships within designers, and is used by the <xref:System.ComponentModel.Design.ComponentDesigner> object's <xref:System.ComponentModel.Design.ITreeDesigner> interface implementation.</span></span> <span data-ttu-id="8224a-200">Esta propiedad sólo debe devolver `null` cuando este diseñador es el componente raíz.</span><span class="sxs-lookup"><span data-stu-id="8224a-200">This property should only return `null` when this designer is the root component.</span></span> <span data-ttu-id="8224a-201">La implementación predeterminada de esta propiedad devuelve el componente raíz para todos los componentes que no son un componente de raíz y devuelve `null` para el componente raíz.</span><span class="sxs-lookup"><span data-stu-id="8224a-201">The default implementation of this property returns the root component for all components that are not the root component, and it returns `null` for the root component.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostFilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual void PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PostFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PostFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="8224a-202">Atributos para la clase del componente.</span><span class="sxs-lookup"><span data-stu-id="8224a-202">The attributes for the class of the component.</span></span></param>
        <summary><span data-ttu-id="8224a-203">Permite a un diseñador cambiar o quitar elementos en el conjunto de atributos que expone mediante un <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="8224a-203">Allows a designer to change or remove items from the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8224a-204">Este método proporciona un medio para cambiar o quitar los elementos del diccionario de atributos que se exponen a través de un <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="8224a-204">This method provides a way to change or remove the items within the dictionary of attributes that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="8224a-205">Las claves del diccionario de atributos son los identificadores de tipo de los atributos, según lo especificado por el valor de sus <xref:System.Attribute.TypeId%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="8224a-205">The keys in the dictionary of attributes are the type identifiers of the attributes, as specified by the value of their <xref:System.Attribute.TypeId%2A> property.</span></span> <span data-ttu-id="8224a-206">Los objetos son del tipo <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="8224a-206">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="8224a-207">Este método se llama inmediatamente después de la <xref:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8224a-207">This method is called immediately after the <xref:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="8224a-208">Se puede filtrar directamente el diccionario que es accesible a través del <paramref name="attributes" /> parámetro o se puede dejar sin cambios.</span><span class="sxs-lookup"><span data-stu-id="8224a-208">You can directly filter the dictionary that is accessible through the <paramref name="attributes" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="8224a-209">Si invalida este método, llame a la implementación base después de realizar su propio filtrado.</span><span class="sxs-lookup"><span data-stu-id="8224a-209">If you override this method, call the base implementation after you perform your own filtering.</span></span> <span data-ttu-id="8224a-210">Además, no debe quitar los elementos en el <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)" /> método.</span><span class="sxs-lookup"><span data-stu-id="8224a-210">In addition, you must not remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)" /> method.</span></span> <span data-ttu-id="8224a-211">En su lugar, cambie los atributos para ocultar los elementos.</span><span class="sxs-lookup"><span data-stu-id="8224a-211">Instead, change attributes to hide items.</span></span> <span data-ttu-id="8224a-212">También puede quitar los elementos en el <see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)" /> método.</span><span class="sxs-lookup"><span data-stu-id="8224a-212">You may also remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)" /> method.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterEvents">
      <MemberSignature Language="C#" Value="protected virtual void PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PostFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PostFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events"><span data-ttu-id="8224a-213">Eventos para la clase del componente.</span><span class="sxs-lookup"><span data-stu-id="8224a-213">The events for the class of the component.</span></span></param>
        <summary><span data-ttu-id="8224a-214">Permite a un diseñador cambiar o quitar elementos del conjunto de eventos que expone mediante un objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="8224a-214">Allows a designer to change or remove items from the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8224a-215">Este método proporciona un medio para cambiar o quitar los elementos del diccionario de eventos que se exponen a través de un <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="8224a-215">This method provides a way to change or remove the items within the dictionary of events that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="8224a-216">Las claves del diccionario de eventos son los nombres de los eventos.</span><span class="sxs-lookup"><span data-stu-id="8224a-216">The keys in the dictionary of events are the names of the events.</span></span> <span data-ttu-id="8224a-217">Los objetos son del tipo <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="8224a-217">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="8224a-218">Este método se llama inmediatamente después de la <xref:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8224a-218">This method is called immediately after the <xref:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="8224a-219">Se puede filtrar directamente el diccionario que es accesible a través del <paramref name="events" /> parámetro o se puede dejar sin cambios.</span><span class="sxs-lookup"><span data-stu-id="8224a-219">You can directly filter the dictionary that is accessible through the <paramref name="events" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="8224a-220">Si invalida este método, llame a la implementación base después de realizar su propio filtrado.</span><span class="sxs-lookup"><span data-stu-id="8224a-220">If you override this method, call the base implementation after you perform your own filtering.</span></span> <span data-ttu-id="8224a-221">Además, no debe quitar los elementos en el <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)" /> método.</span><span class="sxs-lookup"><span data-stu-id="8224a-221">In addition, you must not remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)" /> method.</span></span> <span data-ttu-id="8224a-222">En su lugar, cambie los atributos para ocultar los elementos.</span><span class="sxs-lookup"><span data-stu-id="8224a-222">Instead, change attributes to hide items.</span></span> <span data-ttu-id="8224a-223">También puede quitar los elementos en el <see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)" /> método.</span><span class="sxs-lookup"><span data-stu-id="8224a-223">You may also remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)" /> method.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterProperties">
      <MemberSignature Language="C#" Value="protected virtual void PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PostFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PostFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="8224a-224">Propiedades para la clase del componente.</span><span class="sxs-lookup"><span data-stu-id="8224a-224">The properties for the class of the component.</span></span></param>
        <summary><span data-ttu-id="8224a-225">Permite a un diseñador cambiar o quitar elementos del conjunto de propiedades que expone mediante un objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="8224a-225">Allows a designer to change or remove items from the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8224a-226">Este método proporciona un medio para cambiar o quitar los elementos del diccionario de propiedades que se exponen a través de un <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="8224a-226">This method provides a way to change or remove the items within the dictionary of properties that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="8224a-227">Las claves del diccionario de propiedades son los nombres de las propiedades.</span><span class="sxs-lookup"><span data-stu-id="8224a-227">The keys in the dictionary of properties are the names of the properties.</span></span> <span data-ttu-id="8224a-228">Los objetos son del tipo <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="8224a-228">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="8224a-229">Este método se llama inmediatamente después de la <xref:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8224a-229">This method is called immediately after the <xref:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="8224a-230">Se puede filtrar directamente el diccionario que es accesible a través del <paramref name="properties" /> parámetro o se puede dejar sin cambios.</span><span class="sxs-lookup"><span data-stu-id="8224a-230">You can directly filter the dictionary that is accessible through the <paramref name="properties" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="8224a-231">Si invalida este método, llame a la implementación base después de realizar su propio filtrado.</span><span class="sxs-lookup"><span data-stu-id="8224a-231">If you override this method, call the base implementation after you perform your own filtering.</span></span> <span data-ttu-id="8224a-232">Además, no debe quitar los elementos en el <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)" /> método.</span><span class="sxs-lookup"><span data-stu-id="8224a-232">In addition, you must not remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)" /> method.</span></span> <span data-ttu-id="8224a-233">En su lugar, cambie los atributos para ocultar los elementos.</span><span class="sxs-lookup"><span data-stu-id="8224a-233">Instead, change attributes to hide items.</span></span> <span data-ttu-id="8224a-234">También puede quitar los elementos en el <see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)" /> método.</span><span class="sxs-lookup"><span data-stu-id="8224a-234">You may also remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)" /> method.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual void PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PreFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PreFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="8224a-235">Atributos para la clase del componente.</span><span class="sxs-lookup"><span data-stu-id="8224a-235">The attributes for the class of the component.</span></span></param>
        <summary><span data-ttu-id="8224a-236">Permite a un diseñador agregar elementos al conjunto de atributos que expone mediante un objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="8224a-236">Allows a designer to add to the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8224a-237">Este método proporciona un medio para agregar elementos al diccionario de atributos que un diseñador expone a través de un <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="8224a-237">This method provides a way to add items to the dictionary of attributes that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="8224a-238">Las claves del diccionario de atributos son los identificadores de tipo de los atributos, según lo especificado por el valor de sus <xref:System.Attribute.TypeId%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="8224a-238">The keys in the dictionary of attributes are the type identifiers of the attributes, as specified by the value of their <xref:System.Attribute.TypeId%2A> property.</span></span> <span data-ttu-id="8224a-239">Los objetos son del tipo <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="8224a-239">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="8224a-240">Este método se llama inmediatamente antes del <xref:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8224a-240">This method is called immediately before the <xref:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="8224a-241">Puede modificar directamente el diccionario que es accesible a través del <paramref name="attributes" /> parámetro o se puede dejar sin cambios.</span><span class="sxs-lookup"><span data-stu-id="8224a-241">You can directly modify the dictionary that is accessible through the <paramref name="attributes" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="8224a-242">Si invalida este método, llame a la implementación base antes de realizar su propio filtrado.</span><span class="sxs-lookup"><span data-stu-id="8224a-242">If you override this method, call the base implementation before you perform your own filtering.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterEvents">
      <MemberSignature Language="C#" Value="protected virtual void PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PreFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PreFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events"><span data-ttu-id="8224a-243">Eventos para la clase del componente.</span><span class="sxs-lookup"><span data-stu-id="8224a-243">The events for the class of the component.</span></span></param>
        <summary><span data-ttu-id="8224a-244">Permite a un diseñador agregar elementos al conjunto de eventos que expone mediante un objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="8224a-244">Allows a designer to add to the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8224a-245">Este método proporciona un medio para agregar elementos al diccionario de eventos que un diseñador expone a través de un <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="8224a-245">This method provides a way to add items to the dictionary of events that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="8224a-246">Las claves del diccionario de eventos son los nombres de los eventos.</span><span class="sxs-lookup"><span data-stu-id="8224a-246">The keys in the dictionary of events are the names of the events.</span></span> <span data-ttu-id="8224a-247">Los objetos son del tipo <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="8224a-247">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="8224a-248">Este método se llama inmediatamente antes del <xref:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8224a-248">This method is called immediately before the <xref:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="8224a-249">Puede modificar directamente el diccionario que es accesible a través del <paramref name="events" /> parámetro o se puede dejar sin cambios.</span><span class="sxs-lookup"><span data-stu-id="8224a-249">You can directly modify the dictionary that is accessible through the <paramref name="events" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="8224a-250">Si invalida este método, llame a la implementación base antes de realizar su propio filtrado.</span><span class="sxs-lookup"><span data-stu-id="8224a-250">If you override this method, call the base implementation before you perform your own filtering.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="protected virtual void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="8224a-251">Propiedades para la clase del componente.</span><span class="sxs-lookup"><span data-stu-id="8224a-251">The properties for the class of the component.</span></span></param>
        <summary><span data-ttu-id="8224a-252">Permite a un diseñador agregar elementos al conjunto de propiedades que expone mediante un objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="8224a-252">Allows a designer to add to the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8224a-253">Este método proporciona un medio para agregar elementos al diccionario de propiedades que un diseñador expone a través de un <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="8224a-253">This method provides a way to add items to the dictionary of properties that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="8224a-254">Las claves del diccionario de propiedades son los nombres de las propiedades.</span><span class="sxs-lookup"><span data-stu-id="8224a-254">The keys in the dictionary of properties are the names of the properties.</span></span> <span data-ttu-id="8224a-255">Los objetos son del tipo <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="8224a-255">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="8224a-256">Este método se llama inmediatamente antes del <xref:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8224a-256">This method is called immediately before the <xref:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="8224a-257">Puede modificar directamente el diccionario que es accesible a través del <paramref name="properties" /> parámetro o se puede dejar sin cambios.</span><span class="sxs-lookup"><span data-stu-id="8224a-257">You can directly modify the dictionary that is accessible through the <paramref name="properties" /> parameter, or you can leave it unchanged.</span></span> <span data-ttu-id="8224a-258">Si invalida este método, llame a la implementación base antes de realizar su propio filtrado.</span><span class="sxs-lookup"><span data-stu-id="8224a-258">If you override this method, call the base implementation before you perform your own filtering.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="RaiseComponentChanged">
      <MemberSignature Language="C#" Value="protected void RaiseComponentChanged (System.ComponentModel.MemberDescriptor member, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseComponentChanged(class System.ComponentModel.MemberDescriptor member, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanged(System.ComponentModel.MemberDescriptor,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseComponentChanged (member As MemberDescriptor, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseComponentChanged(System::ComponentModel::MemberDescriptor ^ member, System::Object ^ oldValue, System::Object ^ newValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="member"><span data-ttu-id="8224a-259">Un objeto <see cref="T:System.ComponentModel.MemberDescriptor" /> que indica el miembro que se ha modificado.</span><span class="sxs-lookup"><span data-stu-id="8224a-259">A <see cref="T:System.ComponentModel.MemberDescriptor" /> that indicates the member that has been changed.</span></span></param>
        <param name="oldValue"><span data-ttu-id="8224a-260">Valor antiguo del miembro.</span><span class="sxs-lookup"><span data-stu-id="8224a-260">The old value of the member.</span></span></param>
        <param name="newValue"><span data-ttu-id="8224a-261">Valor nuevo del miembro.</span><span class="sxs-lookup"><span data-stu-id="8224a-261">The new value of the member.</span></span></param>
        <summary><span data-ttu-id="8224a-262">Notifica a <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> que este componente se ha cambiado.</span><span class="sxs-lookup"><span data-stu-id="8224a-262">Notifies the <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> that this component has been changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8224a-263">Llamar a este método solo cuando se verán afectadas en las propiedades del componente directamente y no a través de los descriptores de acceso proporcionadas por <xref:System.ComponentModel.MemberDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="8224a-263">Call this method only when you affect component properties directly and not through the accessors provided by <xref:System.ComponentModel.MemberDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="RaiseComponentChanging">
      <MemberSignature Language="C#" Value="protected void RaiseComponentChanging (System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseComponentChanging(class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanging(System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseComponentChanging (member As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseComponentChanging(System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="member"><span data-ttu-id="8224a-264">Clase <see cref="T:System.ComponentModel.MemberDescriptor" /> que indica el miembro que se va a cambiar.</span><span class="sxs-lookup"><span data-stu-id="8224a-264">A <see cref="T:System.ComponentModel.MemberDescriptor" /> that indicates the member that is about to be changed.</span></span></param>
        <summary><span data-ttu-id="8224a-265">Notifica a <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> que este componente se va a cambiar.</span><span class="sxs-lookup"><span data-stu-id="8224a-265">Notifies the <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> that this component is about to be changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8224a-266">Llamar a este método solo cuando se verán afectadas en las propiedades del componente directamente y no a través de los descriptores de acceso proporcionadas por <xref:System.ComponentModel.MemberDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="8224a-266">Call this method only when you affect component properties directly and not through accessors provided by <xref:System.ComponentModel.MemberDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="ShadowProperties">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection ShadowProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.ComponentDesigner/ShadowPropertyCollection ShadowProperties" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.ShadowProperties" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ShadowProperties As ComponentDesigner.ShadowPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::Design::ComponentDesigner::ShadowPropertyCollection ^ ShadowProperties { System::ComponentModel::Design::ComponentDesigner::ShadowPropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ComponentDesigner+ShadowPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8224a-267">Obtiene una colección de valores de propiedad que reemplazan la configuración del usuario.</span><span class="sxs-lookup"><span data-stu-id="8224a-267">Gets a collection of property values that override user settings.</span></span></summary>
        <value><span data-ttu-id="8224a-268">Objeto <see cref="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" /> que indica las propiedades con copia sombra del documento de diseño.</span><span class="sxs-lookup"><span data-stu-id="8224a-268">A <see cref="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" /> that indicates the shadow properties of the design document.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PostFilterAttributes (attributes As IDictionary) Implements IDesignerFilter.PostFilterAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System::Collections::IDictionary ^ attributes) = System::ComponentModel::Design::IDesignerFilter::PostFilterAttributes;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="8224a-269">Objetos <see cref="T:System.Attribute" /> para la clase del componente.</span><span class="sxs-lookup"><span data-stu-id="8224a-269">The <see cref="T:System.Attribute" /> objects for the class of the component.</span></span> <span data-ttu-id="8224a-270">Las claves del diccionario de atributos son los valores de la propiedad <see cref="P:System.Attribute.TypeId" /> de los atributos.</span><span class="sxs-lookup"><span data-stu-id="8224a-270">The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</span></span></param>
        <summary><span data-ttu-id="8224a-271">Para obtener una descripción de este miembro, vea el método <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />.</span><span class="sxs-lookup"><span data-stu-id="8224a-271">For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8224a-272">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="8224a-272">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8224a-273">Solo se puede utilizar cuando la instancia de <xref:System.ComponentModel.Design.ComponentDesigner> se convierte en una interfaz <xref:System.ComponentModel.Design.IDesignerFilter>.</span><span class="sxs-lookup"><span data-stu-id="8224a-273">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PostFilterEvents">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PostFilterEvents (events As IDictionary) Implements IDesignerFilter.PostFilterEvents" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System::Collections::IDictionary ^ events) = System::ComponentModel::Design::IDesignerFilter::PostFilterEvents;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events"><span data-ttu-id="8224a-274">Objetos <see cref="T:System.ComponentModel.EventDescriptor" /> que representan los eventos de la clase del componente.</span><span class="sxs-lookup"><span data-stu-id="8224a-274">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component.</span></span> <span data-ttu-id="8224a-275">Las claves del diccionario de eventos son nombres de evento.</span><span class="sxs-lookup"><span data-stu-id="8224a-275">The keys in the dictionary of events are event names.</span></span></param>
        <summary><span data-ttu-id="8224a-276">Para obtener una descripción de este miembro, vea el método <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />.</span><span class="sxs-lookup"><span data-stu-id="8224a-276">For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8224a-277">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="8224a-277">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8224a-278">Solo se puede utilizar cuando la instancia de <xref:System.ComponentModel.Design.ComponentDesigner> se convierte en una interfaz <xref:System.ComponentModel.Design.IDesignerFilter>.</span><span class="sxs-lookup"><span data-stu-id="8224a-278">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PostFilterProperties">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PostFilterProperties (properties As IDictionary) Implements IDesignerFilter.PostFilterProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System::Collections::IDictionary ^ properties) = System::ComponentModel::Design::IDesignerFilter::PostFilterProperties;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="8224a-279">Objetos <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representan las propiedades de la clase del componente.</span><span class="sxs-lookup"><span data-stu-id="8224a-279">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component.</span></span> <span data-ttu-id="8224a-280">Las claves del diccionario de propiedades son nombres de propiedad.</span><span class="sxs-lookup"><span data-stu-id="8224a-280">The keys in the dictionary of properties are property names.</span></span></param>
        <summary><span data-ttu-id="8224a-281">Para obtener una descripción de este miembro, vea el método <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />.</span><span class="sxs-lookup"><span data-stu-id="8224a-281">For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8224a-282">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="8224a-282">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8224a-283">Solo se puede utilizar cuando la instancia de <xref:System.ComponentModel.Design.ComponentDesigner> se convierte en una interfaz <xref:System.ComponentModel.Design.IDesignerFilter>.</span><span class="sxs-lookup"><span data-stu-id="8224a-283">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PreFilterAttributes (attributes As IDictionary) Implements IDesignerFilter.PreFilterAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System::Collections::IDictionary ^ attributes) = System::ComponentModel::Design::IDesignerFilter::PreFilterAttributes;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="8224a-284">Objetos <see cref="T:System.Attribute" /> para la clase del componente.</span><span class="sxs-lookup"><span data-stu-id="8224a-284">The <see cref="T:System.Attribute" /> objects for the class of the component.</span></span> <span data-ttu-id="8224a-285">Las claves del diccionario de atributos son los valores de la propiedad <see cref="P:System.Attribute.TypeId" /> de los atributos.</span><span class="sxs-lookup"><span data-stu-id="8224a-285">The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</span></span></param>
        <summary><span data-ttu-id="8224a-286">Para obtener una descripción de este miembro, vea el método <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />.</span><span class="sxs-lookup"><span data-stu-id="8224a-286">For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8224a-287">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="8224a-287">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8224a-288">Solo se puede utilizar cuando la instancia de <xref:System.ComponentModel.Design.ComponentDesigner> se convierte en una interfaz <xref:System.ComponentModel.Design.IDesignerFilter>.</span><span class="sxs-lookup"><span data-stu-id="8224a-288">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PreFilterEvents">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PreFilterEvents (events As IDictionary) Implements IDesignerFilter.PreFilterEvents" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System::Collections::IDictionary ^ events) = System::ComponentModel::Design::IDesignerFilter::PreFilterEvents;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events"><span data-ttu-id="8224a-289">Objetos <see cref="T:System.ComponentModel.EventDescriptor" /> que representan los eventos de la clase del componente.</span><span class="sxs-lookup"><span data-stu-id="8224a-289">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component.</span></span> <span data-ttu-id="8224a-290">Las claves del diccionario de eventos son nombres de evento.</span><span class="sxs-lookup"><span data-stu-id="8224a-290">The keys in the dictionary of events are event names.</span></span></param>
        <summary><span data-ttu-id="8224a-291">Para obtener una descripción de este miembro, vea el método <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />.</span><span class="sxs-lookup"><span data-stu-id="8224a-291">For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8224a-292">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="8224a-292">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8224a-293">Solo se puede utilizar cuando la instancia de <xref:System.ComponentModel.Design.ComponentDesigner> se convierte en una interfaz <xref:System.ComponentModel.Design.IDesignerFilter>.</span><span class="sxs-lookup"><span data-stu-id="8224a-293">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PreFilterProperties">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PreFilterProperties (properties As IDictionary) Implements IDesignerFilter.PreFilterProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System::Collections::IDictionary ^ properties) = System::ComponentModel::Design::IDesignerFilter::PreFilterProperties;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="8224a-294">Objetos <see cref="T:System.ComponentModel.PropertyDescriptor" /> que representan las propiedades de la clase del componente.</span><span class="sxs-lookup"><span data-stu-id="8224a-294">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component.</span></span> <span data-ttu-id="8224a-295">Las claves del diccionario de propiedades son nombres de propiedad.</span><span class="sxs-lookup"><span data-stu-id="8224a-295">The keys in the dictionary of properties are property names.</span></span></param>
        <summary><span data-ttu-id="8224a-296">Para obtener una descripción de este miembro, vea el método <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />.</span><span class="sxs-lookup"><span data-stu-id="8224a-296">For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8224a-297">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="8224a-297">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8224a-298">Solo se puede utilizar cuando la instancia de <xref:System.ComponentModel.Design.ComponentDesigner> se convierte en una interfaz <xref:System.ComponentModel.Design.IDesignerFilter>.</span><span class="sxs-lookup"><span data-stu-id="8224a-298">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.ITreeDesigner.Children">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.ComponentModel.Design.ITreeDesigner.Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.ComponentModel.Design.ITreeDesigner.Children" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Children" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Children As ICollection Implements ITreeDesigner.Children" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System.ComponentModel.Design.ITreeDesigner.Children { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8224a-299">Para una descripción de este miembro, consulte la propiedad <see cref="P:System.ComponentModel.Design.ITreeDesigner.Children" />.</span><span class="sxs-lookup"><span data-stu-id="8224a-299">For a description of this member, see the <see cref="P:System.ComponentModel.Design.ITreeDesigner.Children" /> property.</span></span></summary>
        <value><span data-ttu-id="8224a-300"><see cref="T:System.Collections.ICollection" /> que contiene la colección de diseñadores <see cref="T:System.ComponentModel.Design.IDesigner" /> incluida en el diseñador primario actual.</span><span class="sxs-lookup"><span data-stu-id="8224a-300">An <see cref="T:System.Collections.ICollection" /> that contains the collection of <see cref="T:System.ComponentModel.Design.IDesigner" /> designers contained in the current parent designer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8224a-301">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="8224a-301">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8224a-302">Solo se puede utilizar cuando la instancia de <xref:System.ComponentModel.Design.ComponentDesigner> se convierte en una interfaz <xref:System.ComponentModel.Design.ITreeDesigner>.</span><span class="sxs-lookup"><span data-stu-id="8224a-302">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.ITreeDesigner> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.ITreeDesigner.Parent">
      <MemberSignature Language="C#" Value="System.ComponentModel.Design.IDesigner System.ComponentModel.Design.ITreeDesigner.Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.IDesigner System.ComponentModel.Design.ITreeDesigner.Parent" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Parent" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Parent As IDesigner Implements ITreeDesigner.Parent" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::Design::IDesigner ^ System.ComponentModel.Design.ITreeDesigner.Parent { System::ComponentModel::Design::IDesigner ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.IDesigner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8224a-303">Para una descripción de este miembro, consulte la propiedad <see cref="P:System.ComponentModel.Design.ITreeDesigner.Parent" />.</span><span class="sxs-lookup"><span data-stu-id="8224a-303">For a description of this member, see the <see cref="P:System.ComponentModel.Design.ITreeDesigner.Parent" /> property.</span></span></summary>
        <value><span data-ttu-id="8224a-304">Interfaz <see cref="T:System.ComponentModel.Design.IDesigner" /> que representa el diseñador primario o <see langword="null" /> si no hay ningún elemento primario.</span><span class="sxs-lookup"><span data-stu-id="8224a-304">An <see cref="T:System.ComponentModel.Design.IDesigner" /> representing the parent designer, or <see langword="null" /> if there is no parent.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8224a-305">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="8224a-305">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8224a-306">Solo se puede utilizar cuando la instancia de <xref:System.ComponentModel.Design.ComponentDesigner> se convierte en una interfaz <xref:System.ComponentModel.Design.ITreeDesigner>.</span><span class="sxs-lookup"><span data-stu-id="8224a-306">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.ITreeDesigner> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DesignerVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerVerbCollection Verbs" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.Verbs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Verbs As DesignerVerbCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignerVerbCollection ^ Verbs { System::ComponentModel::Design::DesignerVerbCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8224a-307">Obtiene los verbos en tiempo de diseño que admite el componente asociado al diseñador.</span><span class="sxs-lookup"><span data-stu-id="8224a-307">Gets the design-time verbs supported by the component that is associated with the designer.</span></span></summary>
        <value><span data-ttu-id="8224a-308">Colección <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> de objetos <see cref="T:System.ComponentModel.Design.DesignerVerb" /> o <see langword="null" /> si no hay verbos del diseñador disponibles.</span><span class="sxs-lookup"><span data-stu-id="8224a-308">A <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> of <see cref="T:System.ComponentModel.Design.DesignerVerb" /> objects, or <see langword="null" /> if no designer verbs are available.</span></span> <span data-ttu-id="8224a-309">Esta implementación predeterminada siempre devuelve <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8224a-309">This default implementation always returns <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8224a-310">Este método devuelve `null` si el componente no tiene ningún verbos en tiempo de diseño.</span><span class="sxs-lookup"><span data-stu-id="8224a-310">This method returns `null` if the component has no design-time verbs.</span></span>  
  
 <span data-ttu-id="8224a-311">El entorno en tiempo de diseño normalmente muestra los verbos que devuelve este método en un menú contextual (menú contextual).</span><span class="sxs-lookup"><span data-stu-id="8224a-311">The design-time environment typically displays verbs returned by this method in a shortcut (right-click) menu.</span></span> <span data-ttu-id="8224a-312">Cuando un usuario selecciona uno de los verbos, la <xref:System.ComponentModel.Design.MenuCommand.Invoke%2A> método correspondiente <xref:System.ComponentModel.Design.DesignerVerb> se invoca.</span><span class="sxs-lookup"><span data-stu-id="8224a-312">When a user selects one of the verbs, the <xref:System.ComponentModel.Design.MenuCommand.Invoke%2A> method of the corresponding <xref:System.ComponentModel.Design.DesignerVerb> is invoked.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8224a-313">Normalmente, un entorno en tiempo de diseño proporciona una **propiedades** comando en el menú contextual de un componente.</span><span class="sxs-lookup"><span data-stu-id="8224a-313">A design-time environment typically provides a **Properties** command on a component's shortcut menu.</span></span> <span data-ttu-id="8224a-314">Por lo tanto, no incluya una entrada de este tipo en la colección de verbos de diseñador especificado.</span><span class="sxs-lookup"><span data-stu-id="8224a-314">Therefore, do not include such an entry in the collection of designer-specified verbs.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
  </Members>
</Type>