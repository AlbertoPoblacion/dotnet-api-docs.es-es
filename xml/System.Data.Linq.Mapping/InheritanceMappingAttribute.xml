<Type Name="InheritanceMappingAttribute" FullName="System.Data.Linq.Mapping.InheritanceMappingAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bd8dc5f8a084dbc663800302b1c22c8130aae440" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37681768" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class InheritanceMappingAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InheritanceMappingAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.InheritanceMappingAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InheritanceMappingAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class InheritanceMappingAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type InheritanceMappingAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5d165-101">Asigna una jerarquía de herencia en una aplicación de LINQ to SQL.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5d165-101">Maps an inheritance hierarchy in a LINQ to SQL application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d165-102">Una <xref:System.Data.Linq.Mapping.InheritanceMappingAttribute> se especifica por clase asignada.</span><span class="sxs-lookup"><span data-stu-id="5d165-102">One <xref:System.Data.Linq.Mapping.InheritanceMappingAttribute> is specified per mapped class.</span></span>  
  
 <span data-ttu-id="5d165-103">Al asignar jerarquías de herencia, tenga en cuenta lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="5d165-103">Note the following when you map inheritance hierarchies:</span></span>  
  
-   <span data-ttu-id="5d165-104">Todas las clases en una jerarquía deben asignarse a una sola tabla.</span><span class="sxs-lookup"><span data-stu-id="5d165-104">All classes in a hierarchy must be mapped to a single table.</span></span>  
  
-   <span data-ttu-id="5d165-105">La tabla para una jerarquía de herencia debe declararse en el tipo asignado que está en la parte superior de la jerarquía.</span><span class="sxs-lookup"><span data-stu-id="5d165-105">The table for an inheritance hierarchy must be declared on the mapped type that is at the top of the hierarchy.</span></span> <span data-ttu-id="5d165-106">No se puede especificar los atributos de tabla o asignación en una clase que se deriva de la clase superior.</span><span class="sxs-lookup"><span data-stu-id="5d165-106">You cannot specify the table or mapping attributes in a class that is derived from the top class.</span></span>  
  
-   <span data-ttu-id="5d165-107">Puede usar una interfaz en una jerarquía, pero [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] no se asigna.</span><span class="sxs-lookup"><span data-stu-id="5d165-107">You can use an interface in a hierarchy, but [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] does not map it.</span></span>  
  
-   <span data-ttu-id="5d165-108">Puede omitir una clase en la jerarquía cuando se asignan las clases, pero puede consultar sólo clases asignadas.</span><span class="sxs-lookup"><span data-stu-id="5d165-108">You can skip a class in the hierarchy when you map classes, but you can query against mapped classes only.</span></span>  
  
 <span data-ttu-id="5d165-109">Para la materialización correcta, los valores de código del discriminador deben ser únicos y coinciden con los valores en la base de datos.</span><span class="sxs-lookup"><span data-stu-id="5d165-109">For correct materialization, discriminator code values must be unique and match the values in the database.</span></span> <span data-ttu-id="5d165-110">Una fila con un valor de código del discriminador coincide exactamente (incluso por las mayúsculas y minúsculas) crea una instancia de la clase mediante el uso de <xref:System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault%2A> establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="5d165-110">A row with a discriminator code value that does not exactly match (even by casing) instantiates the class by using <xref:System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault%2A> set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5d165-111">Este ejemplo muestra la asignación de herencia para una jerarquía donde la parte superior, asignan clase (`Shape`) es abstracta.</span><span class="sxs-lookup"><span data-stu-id="5d165-111">This example shows inheritance mapping for a hierarchy where the top, mapped class (`Shape`) is abstract.</span></span>  
  
 [!code-csharp[System.Data.Linq.Mapping.InheritanceMappingAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.InheritanceMappingAttribute/cs/Program.cs#1)]
 [!code-vb[System.Data.Linq.Mapping.InheritanceMappingAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.InheritanceMappingAttribute/vb/Module1.vb#1)]  
  
 <span data-ttu-id="5d165-112">El ejemplo siguiente muestra la inclusión de las clases no asignadas.</span><span class="sxs-lookup"><span data-stu-id="5d165-112">The following example shows the inclusion of unmapped classes.</span></span> <span data-ttu-id="5d165-113">Puede colocar clases sin asignar en cualquier lugar en la jerarquía.</span><span class="sxs-lookup"><span data-stu-id="5d165-113">You can put unmapped classes anywhere in the hierarchy.</span></span>  
  
 [!code-csharp[System.Data.Linq.Mapping.InheritanceMappingAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.Mapping.InheritanceMappingAttribute/cs/Program.cs#2)]
 [!code-vb[System.Data.Linq.Mapping.InheritanceMappingAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.Mapping.InheritanceMappingAttribute/vb/Module1.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InheritanceMappingAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.InheritanceMappingAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InheritanceMappingAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5d165-114">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Linq.Mapping.InheritanceMappingAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d165-114">Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.InheritanceMappingAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Code">
      <MemberSignature Language="C#" Value="public object Code { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Code" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.InheritanceMappingAttribute.Code" />
      <MemberSignature Language="VB.NET" Value="Public Property Code As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Code { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Code : obj with get, set" Usage="System.Data.Linq.Mapping.InheritanceMappingAttribute.Code" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5d165-115">Obtiene o establece el valor de código del discriminador en una jerarquía de herencia asignada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d165-115">Gets or sets the discriminator code value in a mapped inheritance hierarchy.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5d165-116">El usuario debe especificar el valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d165-116">Must be user-specified.</span>
          </span>
          <span data-ttu-id="5d165-117">No existe ningún valor predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d165-117">There is no default value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefault">
      <MemberSignature Language="C#" Value="public bool IsDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefault" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDefault { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDefault : bool with get, set" Usage="System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5d165-118">Obtiene o establece si se crean instancias de un objeto de este tipo cuando el valor del discriminador no coincide con el valor especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d165-118">Gets or sets whether an object of this type in instantiated when the discriminator value does not match a specified value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5d165-119">Valor predeterminado = <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d165-119">Default = <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d165-120">Exactamente uno de los <xref:System.Data.Linq.Mapping.InheritanceMappingAttribute> atributos deben declararse con <xref:System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault%2A> como `true`.</span><span class="sxs-lookup"><span data-stu-id="5d165-120">Exactly one of the <xref:System.Data.Linq.Mapping.InheritanceMappingAttribute> attributes must be declared with <xref:System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault%2A> as `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.InheritanceMappingAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Data.Linq.Mapping.InheritanceMappingAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5d165-121">Obtiene o establece el tipo de la clase en la jerarquía.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d165-121">Gets or sets the type of the class in the hierarchy.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5d165-122">El usuario debe especificar el valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d165-122">Must be user-specified.</span>
          </span>
          <span data-ttu-id="5d165-123">No existe ningún valor predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5d165-123">There is no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d165-124">Utilice cualquier tipo no abstracto en la jerarquía de herencia, incluido el tipo raíz.</span><span class="sxs-lookup"><span data-stu-id="5d165-124">Use any non-abstract type in the inheritance hierarchy, including the root type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>