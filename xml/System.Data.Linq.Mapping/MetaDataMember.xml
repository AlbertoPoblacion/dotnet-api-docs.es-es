<Type Name="MetaDataMember" FullName="System.Data.Linq.Mapping.MetaDataMember">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="195f8be7eea6436f98a825616ab87802912d8f7f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MetaDataMember" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MetaDataMember extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.MetaDataMember" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MetaDataMember" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaDataMember abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="912aa-101">Representa la asignación entre un campo o una propiedad de un objeto de dominio en una columna de una tabla de base de datos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="912aa-101">Represents the mapping between a field or a property of a domain object into a column of a database table.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MetaDataMember ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaDataMember.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MetaDataMember();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="912aa-102">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Linq.Mapping.MetaDataMember" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-102">Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.MetaDataMember" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Association">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAssociation Association { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAssociation Association" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Association" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Association As MetaAssociation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAssociation ^ Association { System::Data::Linq::Mapping::MetaAssociation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAssociation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="912aa-103">Obtiene el objeto <see cref="T:System.Data.Linq.Mapping.MetaAssociation" /> correspondiente a este miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-103">Gets the <see cref="T:System.Data.Linq.Mapping.MetaAssociation" /> that corresponds to this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="912aa-104">
            <see cref="T:System.Data.Linq.Mapping.MetaAssociation" /> correspondiente, si existe; de lo contrario, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-104">The corresponding <see cref="T:System.Data.Linq.Mapping.MetaAssociation" /> if one exists; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="912aa-105">Esta propiedad representa una asociación de base de datos como una clave externa para la relación de clave principal.</span><span class="sxs-lookup"><span data-stu-id="912aa-105">This property represents a database association like a foreign-key to primary-key relationship.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSync">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.AutoSync AutoSync { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Linq.Mapping.AutoSync AutoSync" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.AutoSync" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property AutoSync As AutoSync" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::AutoSync AutoSync { System::Data::Linq::Mapping::AutoSync get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.AutoSync</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="912aa-106">Obtiene el comportamiento de lectura de este miembro para las operaciones de inserción y actualización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-106">Gets the read-back behavior for this member for insert and update operations.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="912aa-107">Enumeración <see cref="T:System.Data.Linq.Mapping.AutoSync" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-107">An <see cref="T:System.Data.Linq.Mapping.AutoSync" /> enumeration.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBeNull">
      <MemberSignature Language="C#" Value="public abstract bool CanBeNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanBeNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.CanBeNull" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanBeNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanBeNull { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="912aa-108">Obtiene un valor que indica si a este miembro se le puede asignar el valor <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-108">Gets whether the value of this member can be assigned the <see langword="null" /> value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="912aa-109">
            <see langword="true" />, si a este miembro se le puede asignar el valor <see langword="null" />; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-109">
              <see langword="true" /> if this member can be assigned the <see langword="null" /> value; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="912aa-110">Esta propiedad es dependiente de la <xref:System.Data.Linq.Mapping.MetaDataMember.DbType%2A> propiedad y se proporciona por comodidad.</span><span class="sxs-lookup"><span data-stu-id="912aa-110">This property is dependent on the <xref:System.Data.Linq.Mapping.MetaDataMember.DbType%2A> property, and is provided for convenience.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public abstract string DbType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.DbType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DbType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DbType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="912aa-111">Obtiene el tipo de la columna de base de datos correspondiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-111">Gets the type of the corresponding database column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="912aa-112">Tipo de la columna de base de datos como una cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-112">The type of the database column as a string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="912aa-113">Este es el texto exacto que se utilizan para definir la columna en un comando de declaración de tabla de Transact-SQL.</span><span class="sxs-lookup"><span data-stu-id="912aa-113">This will be the exact text used to define the column in a Transact-SQL table declaration command.</span></span> <span data-ttu-id="912aa-114">Si no se define así, el tipo de columna de base de datos se deduce del tipo de miembro.</span><span class="sxs-lookup"><span data-stu-id="912aa-114">If not so defined, the database column type is inferred from the member type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaType DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaType DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DeclaringType As MetaType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaType ^ DeclaringType { System::Data::Linq::Mapping::MetaType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="912aa-115">Obtiene el objeto <see cref="T:System.Data.Linq.Mapping.MetaType" /> que contiene este miembro de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-115">Gets the <see cref="T:System.Data.Linq.Mapping.MetaType" /> that contains this data member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="912aa-116">Metatipo que contiene el miembro actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-116">The meta-type that contains the current member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferredSourceAccessor">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAccessor DeferredSourceAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAccessor DeferredSourceAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DeferredSourceAccessor As MetaAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAccessor ^ DeferredSourceAccessor { System::Data::Linq::Mapping::MetaAccessor ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAccessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="912aa-117">Obtiene el descriptor de acceso que se usa para obtener y establecer el origen aplazado de este miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-117">Gets the accessor that is used to get and set the deferred source of this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="912aa-118">Descriptor de acceso que se usa para obtener acceso al origen aplazado de este miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-118">The accessor used to access the deferred source for this member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferredValueAccessor">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAccessor DeferredValueAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAccessor DeferredValueAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DeferredValueAccessor As MetaAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAccessor ^ DeferredValueAccessor { System::Data::Linq::Mapping::MetaAccessor ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAccessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="912aa-119">Obtiene el descriptor de acceso que se usa para obtener y establecer el valor aplazado de este miembro (sin que se produzca la captura).</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-119">Gets the accessor that is used to get and set the deferred value of this member (without causing fetch).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="912aa-120">Descriptor de acceso que se usa para obtener acceso al valor aplazado de este miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-120">The accessor used to access the deferred value for this member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public abstract string Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Expression" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Expression { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="912aa-121">Obtiene la expresión que define una columna calculada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-121">Gets the expression that defines a computed column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="912aa-122">Expresión de la columna calculada, como una cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-122">The expression for the computed column as a string.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAssociation">
      <MemberSignature Language="C#" Value="public abstract bool IsAssociation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAssociation" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsAssociation" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsAssociation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsAssociation { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="912aa-123">Obtiene un valor que indica si este miembro define una relación de asociación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-123">Gets whether this member defines an association relationship.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="912aa-124">
            <see langword="true" />, si este miembro define una relación de asociación; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-124">
              <see langword="true" /> if this member defines an association relationship; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDbGenerated">
      <MemberSignature Language="C#" Value="public abstract bool IsDbGenerated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDbGenerated" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDbGenerated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDbGenerated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="912aa-125">Obtiene un valor que indica si la base de datos genera automáticamente este miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-125">Gets whether this member is automatically generated by the database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="912aa-126">
            <see langword="true" />, si la base de datos genera automáticamente este miembro; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-126">
              <see langword="true" /> if this member is automatically generated by the database; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="912aa-127">Los miembros generados automáticamente se sincronizan inmediatamente después de inserta la fila de datos correspondiente.</span><span class="sxs-lookup"><span data-stu-id="912aa-127">Automatically generated members are synchronized immediately after the corresponding data row is inserted.</span></span> <span data-ttu-id="912aa-128">No se admiten valores de clave generados por el desencadenador de inserción.</span><span class="sxs-lookup"><span data-stu-id="912aa-128">Insert trigger-generated key values are not supported.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeclaredBy">
      <MemberSignature Language="C#" Value="public abstract bool IsDeclaredBy (System.Data.Linq.Mapping.MetaType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDeclaredBy(class System.Data.Linq.Mapping.MetaType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(System.Data.Linq.Mapping.MetaType)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsDeclaredBy (type As MetaType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsDeclaredBy(System::Data::Linq::Mapping::MetaType ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Linq.Mapping.MetaType" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="912aa-129">Tipo que se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-129">The type to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="912aa-130">Especifica si el tipo especificado declara este miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-130">Specifies whether this member is declared by the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="912aa-131">
            <see langword="true" />, si este miembro se declara con el tipo especificado; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-131">
              <see langword="true" /> if this member is declared by the specified type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeferred">
      <MemberSignature Language="C#" Value="public abstract bool IsDeferred { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeferred" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsDeferred" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDeferred As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDeferred { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="912aa-132">Obtiene un valor que indica si el comportamiento predeterminado es cargar este miembro de manera aplazada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-132">Gets whether the default behavior is to load this member on a deferred basis.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="912aa-133">
            <see langword="true" /> si, de forma predeterminada, este miembro se carga de manera aplazada; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-133">
              <see langword="true" /> if this member loaded on a deferred basis by default; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDiscriminator">
      <MemberSignature Language="C#" Value="public abstract bool IsDiscriminator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDiscriminator" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDiscriminator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDiscriminator { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="912aa-134">Obtiene un valor que indica si este miembro representa el discriminador de herencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-134">Gets whether this member represents the inheritance discriminator.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="912aa-135">
            <see langword="true" />, si este miembro representa el discriminador de herencia; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-135">
              <see langword="true" /> if this member represents the inheritance discriminator; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="912aa-136">Esta propiedad puede ser `true` para a lo sumo un miembro de la propiedad topmost asigna clase en una jerarquía.</span><span class="sxs-lookup"><span data-stu-id="912aa-136">This property can be `true` for at most one member of the topmost mapped class in a hierarchy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPersistent">
      <MemberSignature Language="C#" Value="public abstract bool IsPersistent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPersistent" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsPersistent" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsPersistent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsPersistent { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="912aa-137">Obtiene un valor que indica si este miembro está asignado a una columna (o restricción).</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-137">Gets whether this member is mapped to a column (or constraint).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="912aa-138">
            <see langword="true" />, si este miembro está asignado a una columna (o restricción); en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-138">
              <see langword="true" /> if this member is mapped to a column (or constraint); otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="912aa-139">Una clase puede tener una combinación de miembros persistentes y no persistentes.</span><span class="sxs-lookup"><span data-stu-id="912aa-139">A class may have a combination of persistent and non-persistent members.</span></span> <span data-ttu-id="912aa-140">Miembros persistentes están asignados mientras los miembros no persistentes no están asignados.</span><span class="sxs-lookup"><span data-stu-id="912aa-140">Persistent members are mapped while non-persistent members are not mapped.</span></span> <span data-ttu-id="912aa-141">Una clase asignada debe tener al menos un miembro persistente.</span><span class="sxs-lookup"><span data-stu-id="912aa-141">A mapped class must have at least one persistent member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrimaryKey">
      <MemberSignature Language="C#" Value="public abstract bool IsPrimaryKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsPrimaryKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsPrimaryKey { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="912aa-142">Obtiene un valor que indica si este miembro forma parte de la identidad del tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-142">Gets whether this member is part of the type's identity.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="912aa-143">
            <see langword="true" />, si este miembro forma parte de la identidad del tipo; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-143">
              <see langword="true" /> if this member is part of the type's identity; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="912aa-144">Si esta propiedad es `true`, el miembro de clase representa una columna que forma parte de clave única de la tabla.</span><span class="sxs-lookup"><span data-stu-id="912aa-144">If this property is `true`, the class member represents a column that is part of the table’s unique key.</span></span> <span data-ttu-id="912aa-145">Más de un miembro de la clase puede tener esta propiedad establecida en `true` para una clave que es una composición de las columnas asociadas.</span><span class="sxs-lookup"><span data-stu-id="912aa-145">More than one member of the class can have this property set to `true` for a key that is a composite of the associated columns.</span></span> <span data-ttu-id="912aa-146">Para una clase de entidad, al menos un miembro debe tener este atributo y debe asignarse a la clave principal o una clave única en la tabla o vista correspondiente.</span><span class="sxs-lookup"><span data-stu-id="912aa-146">For an entity class, at least one member must have this attribute and should be mapped to the primary key or a unique key in the corresponding table or view.</span></span> <span data-ttu-id="912aa-147">De lo contrario, LINQ to SQL considera las instancias de la clase como de solo lectura con el fin de enviar los cambios a la base de datos.</span><span class="sxs-lookup"><span data-stu-id="912aa-147">Otherwise, LINQ to SQL considers instances of the class as read-only for the purpose of submitting changes to the database.</span></span>  
  
 <span data-ttu-id="912aa-148">El conjunto de columnas identificadas con <xref:System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey%2A> no tienen que ser la clave principal.</span><span class="sxs-lookup"><span data-stu-id="912aa-148">The set of columns identified with <xref:System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey%2A> are not required to be the primary key.</span></span> <span data-ttu-id="912aa-149">Simplemente denota un conjunto que identifica de forma única la entidad.</span><span class="sxs-lookup"><span data-stu-id="912aa-149">They simply denote a set that uniquely identifies the entity.</span></span> <span data-ttu-id="912aa-150">Alternativas comunes incluyen las columnas de índice u otras columnas de clave únicas de agrupación en clústeres.</span><span class="sxs-lookup"><span data-stu-id="912aa-150">Common alternatives include clustering index columns or other unique key columns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVersion">
      <MemberSignature Language="C#" Value="public abstract bool IsVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.IsVersion" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsVersion As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsVersion { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="912aa-151">Obtiene un valor que indica si este miembro representa la versión de fila o marca de tiempo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-151">Gets whether this member represents the row version or timestamp.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="912aa-152">
            <see langword="true" />, si este miembro representa la versión de fila o marca de tiempo; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-152">
              <see langword="true" /> if this member represents the row version or timestamp; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="912aa-153">Números de versión se incrementan y las columnas de marca de tiempo se actualizan cada vez que se actualiza la fila asociada.</span><span class="sxs-lookup"><span data-stu-id="912aa-153">Version numbers are incremented and timestamp columns are updated whenever the associated row is updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadMethod">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodInfo LoadMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo LoadMethod" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.LoadMethod" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property LoadMethod As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::MethodInfo ^ LoadMethod { System::Reflection::MethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="912aa-154">Obtiene el método <see cref="T:System.Data.Linq.DataContext" /> que se usa para realizar las operaciones de carga.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-154">Gets the <see cref="T:System.Data.Linq.DataContext" /> method that is used to perform load operations.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="912aa-155">Método de carga como <see cref="T:System.Reflection.MethodInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-155">The load method as <see cref="T:System.Reflection.MethodInfo" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MappedName">
      <MemberSignature Language="C#" Value="public abstract string MappedName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MappedName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.MappedName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MappedName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ MappedName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="912aa-156">Obtiene el nombre de la columna (o restricción) en la base de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-156">Gets the name of the column (or constraint) in the database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="912aa-157">Nombre de la columna (o restricción) como una cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-157">The name of the column (or constraint) as a string.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MemberInfo Member { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo Member" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Member" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Member As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::MemberInfo ^ Member { System::Reflection::MemberInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="912aa-158">Obtiene la <see cref="T:System.Reflection.MemberInfo" /> subyacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-158">Gets the underlying <see cref="T:System.Reflection.MemberInfo" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="912aa-159">Atributo del miembro e información de metadatos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-159">Member attribute and metadata information.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberAccessor">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAccessor MemberAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAccessor MemberAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.MemberAccessor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MemberAccessor As MetaAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAccessor ^ MemberAccessor { System::Data::Linq::Mapping::MetaAccessor ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAccessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="912aa-160">Obtiene el descriptor de acceso que se usa para obtener o establecer el valor de este miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-160">Gets the accessor that is used to get or set the value of this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="912aa-161">Descriptor de acceso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-161">The accessor.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="912aa-162">Obtiene el nombre del miembro, igual que el nombre de <see cref="T:System.Reflection.MemberInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-162">Gets the name of the member, same as the <see cref="T:System.Reflection.MemberInfo" /> name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="912aa-163">Nombre, igual que el nombre de <see cref="T:System.Reflection.MemberInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-163">The name, same as the <see cref="T:System.Reflection.MemberInfo" /> name.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ordinal">
      <MemberSignature Language="C#" Value="public abstract int Ordinal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Ordinal" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Ordinal" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Ordinal As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Ordinal { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="912aa-164">Obtiene la posición ordinal de este miembro en el diseño predeterminado de los resultados de consulta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-164">Gets the ordinal position of this member in the default layout of query results.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="912aa-165">Posición ordinal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-165">The ordinal position.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageAccessor">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaAccessor StorageAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaAccessor StorageAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.StorageAccessor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StorageAccessor As MetaAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::MetaAccessor ^ StorageAccessor { System::Data::Linq::Mapping::MetaAccessor ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaAccessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="912aa-166">Obtiene el descriptor de acceso que se usa para obtener o establecer el valor de almacenamiento de este miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-166">Gets the accessor that is used to get or set the storage value of this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="912aa-167">Descriptor de acceso para el valor de almacenamiento de este miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-167">The accessor for the storage value of this member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageMember">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MemberInfo StorageMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo StorageMember" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.StorageMember" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StorageMember As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::MemberInfo ^ StorageMember { System::Reflection::MemberInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="912aa-168">Obtiene el miembro que almacena los datos de este miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-168">Gets the member that stores the data for this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="912aa-169">Miembro de almacenamiento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-169">The storage member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public abstract Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.Type" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ Type { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="912aa-170">Obtiene el tipo de este miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-170">Gets the type of this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="912aa-171">Tipo de miembro actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-171">The type of the current member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCheck">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.UpdateCheck UpdateCheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Linq.Mapping.UpdateCheck UpdateCheck" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.MetaDataMember.UpdateCheck" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property UpdateCheck As UpdateCheck" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Data::Linq::Mapping::UpdateCheck UpdateCheck { System::Data::Linq::Mapping::UpdateCheck get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.UpdateCheck</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="912aa-172">Obtiene la directiva de comprobación de simultaneidad optimista para este miembro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-172">Gets the optimistic concurrency check policy for this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="912aa-173">Enumeración <see cref="T:System.Data.Linq.Mapping.UpdateCheck" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="912aa-173">An <see cref="T:System.Data.Linq.Mapping.UpdateCheck" /> enum.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="912aa-174">Si la clase no tiene un miembro de la versión (<xref:System.Data.Linq.Mapping.MetaDataMember.IsVersion%2A> establecido en `true`), la detección se realiza comparando los valores de miembro originales con el estado actual de la base de datos.</span><span class="sxs-lookup"><span data-stu-id="912aa-174">If the class does not have a version member (<xref:System.Data.Linq.Mapping.MetaDataMember.IsVersion%2A> set to `true`), detection is done by comparing original member values with the current database state.</span></span>  
  
 <span data-ttu-id="912aa-175">El <xref:System.Data.Linq.Mapping.MetaDataMember.UpdateCheck%2A> propiedad determina cómo LINQ to SQL implementa la detección de conflictos con la simultaneidad optimista.</span><span class="sxs-lookup"><span data-stu-id="912aa-175">The <xref:System.Data.Linq.Mapping.MetaDataMember.UpdateCheck%2A> property determines how LINQ to SQL implements conflict detection under optimistic concurrency.</span></span> <span data-ttu-id="912aa-176">Solo los miembros con esta propiedad se establecen en <xref:System.Data.Linq.Mapping.UpdateCheck.Always> o <xref:System.Data.Linq.Mapping.UpdateCheck.WhenChanged> se consideran durante la detección de conflictos.</span><span class="sxs-lookup"><span data-stu-id="912aa-176">Only those members with this property set to <xref:System.Data.Linq.Mapping.UpdateCheck.Always> or <xref:System.Data.Linq.Mapping.UpdateCheck.WhenChanged> are considered during conflict detection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>