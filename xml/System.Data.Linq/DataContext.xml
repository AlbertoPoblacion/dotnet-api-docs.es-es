<Type Name="DataContext" FullName="System.Data.Linq.DataContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6cbfb225f9d8295e7bf1faa0cef5897f808b990c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.DataContext" />
  <TypeSignature Language="VB.NET" Value="Public Class DataContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataContext : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="805b4-101">Representa el principal punto de entrada para el marco de trabajo de LINQ to SQL.</span>
      <span class="sxs-lookup">
        <span data-stu-id="805b4-101">Represents the main entry point for the LINQ to SQL framework.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805b4-102">El <xref:System.Data.Linq.DataContext> es el origen de todas las entidades asignadas a través de una conexión de base de datos.</span><span class="sxs-lookup"><span data-stu-id="805b4-102">The <xref:System.Data.Linq.DataContext> is the source of all entities mapped over a database connection.</span></span> <span data-ttu-id="805b4-103">Se realiza un seguimiento de los cambios realizados en todas las entidades recuperadas y mantiene una "memoria caché de identidad" que garantiza que las entidades recuperan más de una vez se representa mediante con la misma instancia de objeto.</span><span class="sxs-lookup"><span data-stu-id="805b4-103">It tracks changes that you made to all retrieved entities and maintains an "identity cache" that guarantees that entities retrieved more than one time are represented by using the same object instance.</span></span>  
  
 <span data-ttu-id="805b4-104">En general, un <xref:System.Data.Linq.DataContext> instancia está diseñada para que dure una "unidad de trabajo" sin embargo, la aplicación define ese término.</span><span class="sxs-lookup"><span data-stu-id="805b4-104">In general, a <xref:System.Data.Linq.DataContext> instance is designed to last for one "unit of work" however your application defines that term.</span></span> <span data-ttu-id="805b4-105">A <xref:System.Data.Linq.DataContext> es ligero y no es caro crear.</span><span class="sxs-lookup"><span data-stu-id="805b4-105">A <xref:System.Data.Linq.DataContext> is lightweight and is not expensive to create.</span></span> <span data-ttu-id="805b4-106">Una típica [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] aplicación crea <xref:System.Data.Linq.DataContext> instancias en el ámbito del método o como miembro de clases de corta duración que representan un conjunto lógico de relacionados con operaciones de base de datos.</span><span class="sxs-lookup"><span data-stu-id="805b4-106">A typical [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] application creates <xref:System.Data.Linq.DataContext> instances at method scope or as a member of short-lived classes that represent a logical set of related database operations.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="805b4-107">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Linq.DataContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-107">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class.</span>
          </span>
          <span data-ttu-id="805b4-108">La cadena de conexión que use puede ser una cadena de conexión de ADO.NET.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-108">The connection string you use can be an ADO.NET connection string.</span>
          </span>
          <span data-ttu-id="805b4-109">También puede especificar un nombre de archivo para un archivo SQL Server Express o SQL Server Compact.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-109">You can also specify a filename to a SQL Server Express or SQL Server Compact file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContext (System.Data.IDbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.IDbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As IDbConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::Data::IDbConnection ^ connection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.IDbConnection" />
      </Parameters>
      <Docs>
        <param name="connection">
          <span data-ttu-id="805b4-110">Conexión utilizada por [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-110">The connection used by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="805b4-111">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Linq.DataContext" /> haciendo referencia a la conexión utilizada por [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-111">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class by referencing the connection used by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805b4-112">Un <xref:System.Data.Linq.DataContext> abre y cierra una conexión de base de datos según sea necesario si se proporciona una conexión cerrada o una cadena de conexión.</span><span class="sxs-lookup"><span data-stu-id="805b4-112">A <xref:System.Data.Linq.DataContext> opens and closes a database connection as needed if you provide a closed connection or a connection string.</span></span> <span data-ttu-id="805b4-113">En general, nunca debería tener que llamar a `Dispose` en un <xref:System.Data.Linq.DataContext>.</span><span class="sxs-lookup"><span data-stu-id="805b4-113">In general, you should never have to call `Dispose` on a <xref:System.Data.Linq.DataContext>.</span></span> <span data-ttu-id="805b4-114">Si proporciona una conexión abierta, la <xref:System.Data.Linq.DataContext> no se cerrará.</span><span class="sxs-lookup"><span data-stu-id="805b4-114">If you provide an open connection, the <xref:System.Data.Linq.DataContext> will not close it.</span></span> <span data-ttu-id="805b4-115">Por lo tanto, no cree instancias de un <xref:System.Data.Linq.DataContext> con una conexión abierta a menos que tenga una buena razón para hacerlo.</span><span class="sxs-lookup"><span data-stu-id="805b4-115">Therefore, do not instantiate a <xref:System.Data.Linq.DataContext> with an open connection unless you have a good reason to do this.</span></span> <span data-ttu-id="805b4-116">En un <xref:System.Transactions> transacción, un <xref:System.Data.Linq.DataContext> no se abra o cierre una conexión para evitar la promoción.</span><span class="sxs-lookup"><span data-stu-id="805b4-116">In a <xref:System.Transactions> transaction, a <xref:System.Data.Linq.DataContext> will not open or close a connection to avoid promotion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContext (System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.IDbConnection connection, class System.Data.Linq.Mapping.MappingSource mapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection,System.Data.Linq.Mapping.MappingSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As IDbConnection, mapping As MappingSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::Data::IDbConnection ^ connection, System::Data::Linq::Mapping::MappingSource ^ mapping);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.IDbConnection" />
        <Parameter Name="mapping" Type="System.Data.Linq.Mapping.MappingSource" />
      </Parameters>
      <Docs>
        <param name="connection">
          <span data-ttu-id="805b4-117">Conexión utilizada por .NET Framework.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-117">The connection used by the .NET Framework.</span>
          </span>
        </param>
        <param name="mapping">
          <span data-ttu-id="805b4-118">Origen para asignar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-118">A source for mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="805b4-119">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Linq.DataContext" /> haciendo referencia a una conexión y un origen de asignación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-119">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class by referencing a connection and a mapping source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContext (string fileOrServerOrConnection, System.Data.Linq.Mapping.MappingSource mapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileOrServerOrConnection, class System.Data.Linq.Mapping.MappingSource mapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.#ctor(System.String,System.Data.Linq.Mapping.MappingSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileOrServerOrConnection As String, mapping As MappingSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::String ^ fileOrServerOrConnection, System::Data::Linq::Mapping::MappingSource ^ mapping);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileOrServerOrConnection" Type="System.String" />
        <Parameter Name="mapping" Type="System.Data.Linq.Mapping.MappingSource" />
      </Parameters>
      <Docs>
        <param name="fileOrServerOrConnection">
          <span data-ttu-id="805b4-120">Este argumento puede ser cualquiera de los siguientes:</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-120">This argument can be any one of the following:</span>
          </span>
          <span data-ttu-id="805b4-121">Nombre de un archivo donde reside una base de datos de SQL Server Express.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-121">The name of a file where a SQL Server Express database resides.</span>
          </span>
          <span data-ttu-id="805b4-122">Nombre de un servidor donde reside una base de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-122">The name of a server where a database is present.</span>
          </span>
          <span data-ttu-id="805b4-123">En este caso, el proveedor utiliza la base de datos predeterminada para un usuario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-123">In this case the provider uses the default database for a user.</span>
          </span>
          <span data-ttu-id="805b4-124">Cadena de conexión completa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-124">A complete connection string.</span>
          </span> [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]<span data-ttu-id="805b4-125"> solamente pasa la cadena al proveedor sin ningún tipo de modificación.</span><span class="sxs-lookup"><span data-stu-id="805b4-125"> just passes the string to the provider without modification.</span></span></param>
        <param name="mapping">
          <span data-ttu-id="805b4-126">Origen para asignar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-126">A source for mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="805b4-127">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Linq.DataContext" /> haciendo referencia a un origen de archivo y un origen de asignación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-127">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class by referencing a file source and a mapping source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContext (string fileOrServerOrConnection);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileOrServerOrConnection) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileOrServerOrConnection As String)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::String ^ fileOrServerOrConnection);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C#" Value="public DataContext (string connectionString);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.#ctor(System.String)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::String ^ connectionString);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileOrServerOrConnection" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
        <Parameter Name="connectionString" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="connectionString">To be added.</param>
        <summary>
          <span data-ttu-id="805b4-128">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Linq.DataContext" /> haciendo referencia a un origen de archivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-128">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class by referencing a file source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeConflicts">
      <MemberSignature Language="C#" Value="public System.Data.Linq.ChangeConflictCollection ChangeConflicts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.ChangeConflictCollection ChangeConflicts" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.ChangeConflicts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChangeConflicts As ChangeConflictCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::ChangeConflictCollection ^ ChangeConflicts { System::Data::Linq::ChangeConflictCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.ChangeConflictCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="805b4-129">Obtiene una colección de objetos que produjeron conflictos de simultaneidad cuando se llamó a <see cref="M:System.Data.Linq.DataContext.SubmitChanges" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-129">Gets a collection of objects that caused concurrency conflicts when <see cref="M:System.Data.Linq.DataContext.SubmitChanges" /> was called.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="805b4-130">Colección de objetos que causaron conflictos de simultaneidad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-130">A collection of objects that caused concurrency conflicts.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805b4-131">En el ejemplo siguiente se muestra cómo iteración la colección para recuperar información de conflictos.</span><span class="sxs-lookup"><span data-stu-id="805b4-131">The following example shows how the collection can be iterated over to retrieve conflict information.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.ObjectChangeConflict#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.objectchangeconflict/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.ObjectChangeConflict#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.objectchangeconflict/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CommandTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="805b4-132">Obtiene o establece un valor que aumenta el tiempo de espera de las consultas cuyo tiempo de espera se habría agotado durante el tiempo de espera predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-132">Gets or sets a value that increases the time-out period for queries that would otherwise time out during the default time-out period.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="805b4-133">Valor entero que aumenta el tiempo de espera de las consultas cuyo tiempo de espera se habría agotado durante el tiempo de espera predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-133">An integer value that increases the time-out period for queries that would otherwise time out during the default time-out period.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805b4-134">Esta propiedad obtiene o establece el tiempo de espera de comando que se usa para ejecutar los comandos generados (`IDbCommands`).</span><span class="sxs-lookup"><span data-stu-id="805b4-134">This property gets or sets the command time-out used to execute generated commands (`IDbCommands`).</span></span> <span data-ttu-id="805b4-135">Para obtener más información, vea <xref:System.Data.IDbCommand.CommandTimeout%2A>.</span><span class="sxs-lookup"><span data-stu-id="805b4-135">For more information, see <xref:System.Data.IDbCommand.CommandTimeout%2A>.</span></span>  
  
 <span data-ttu-id="805b4-136">Cuando esta propiedad no se establece, el valor predeterminado de <xref:System.Data.IDbCommand.CommandTimeout%2A> se usa para la ejecución del comando de consulta.</span><span class="sxs-lookup"><span data-stu-id="805b4-136">When this property is not set, the default value of <xref:System.Data.IDbCommand.CommandTimeout%2A> is used for query command execution.</span></span> <span data-ttu-id="805b4-137">Este valor predeterminado se establece mediante el proveedor de almacenamiento.</span><span class="sxs-lookup"><span data-stu-id="805b4-137">This default value is set by the storage provider.</span></span> <span data-ttu-id="805b4-138">Tenga en cuenta que algunos proveedores pueden producir excepciones si este valor se establece en un valor distinto de cero.</span><span class="sxs-lookup"><span data-stu-id="805b4-138">Note that some providers may throw exceptions if this value is set to a non-zero value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbConnection ^ Connection { System::Data::Common::DbConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="805b4-139">Obtiene la conexión utilizada por el marco de trabajo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-139">Gets the connection used by the framework.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="805b4-140">Conexión usada por el marco de trabajo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-140">The connection used by the framework.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805b4-141">Puede utilizar esta propiedad para interoperar con código relacional de ADO.NET.</span><span class="sxs-lookup"><span data-stu-id="805b4-141">You can use this property to interoperate with relational ADO.NET code.</span></span>  
  
 <span data-ttu-id="805b4-142">Se cerrará la conexión devuelta a menos que se ha abierto explícitamente por el usuario.</span><span class="sxs-lookup"><span data-stu-id="805b4-142">The returned connection will be closed unless it has been explicitly opened by the user.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDatabase">
      <MemberSignature Language="C#" Value="public void CreateDatabase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateDatabase() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.CreateDatabase" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateDatabase ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateDatabase();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="805b4-143">Crea una base de datos en el servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-143">Creates a database on the server.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805b4-144">El nombre de la base de datos se deriva utilizando el algoritmo siguiente:</span><span class="sxs-lookup"><span data-stu-id="805b4-144">The name of the database is derived by using the following algorithm:</span></span>  
  
-   <span data-ttu-id="805b4-145">Si una base de datos se identifica en la cadena de conexión, se utiliza su nombre.</span><span class="sxs-lookup"><span data-stu-id="805b4-145">If a database is identified in the connection string, its name is used.</span></span>  
  
-   <span data-ttu-id="805b4-146">Si un <xref:System.Data.Linq.Mapping.DatabaseAttribute> atributo está presente, su <xref:System.Data.Linq.Mapping.DatabaseAttribute.Name%2A> propiedad se utiliza como el nombre de la base de datos.</span><span class="sxs-lookup"><span data-stu-id="805b4-146">If a <xref:System.Data.Linq.Mapping.DatabaseAttribute> attribute is present, its <xref:System.Data.Linq.Mapping.DatabaseAttribute.Name%2A> property is used as the name of the database.</span></span>  
  
-   <span data-ttu-id="805b4-147">Si no hay ninguna etiqueta de base de datos en la cadena de conexión y un fuertemente tipadas <xref:System.Data.Linq.DataContext> se utiliza, una base de datos que tiene el mismo nombre que el <xref:System.Data.Linq.DataContext> heredar clase está activado.</span><span class="sxs-lookup"><span data-stu-id="805b4-147">If there is no database tag in the connection string and a strongly typed <xref:System.Data.Linq.DataContext> is used, a database that has the same name as the <xref:System.Data.Linq.DataContext> inheriting class is checked.</span></span>  
  
-   <span data-ttu-id="805b4-148">Si un débilmente tipada <xref:System.Data.Linq.DataContext> es utilizado, se produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="805b4-148">If a weakly typed <xref:System.Data.Linq.DataContext> is used, an exception is thrown.</span></span>  
  
-   <span data-ttu-id="805b4-149">Si el <xref:System.Data.Linq.DataContext> se ha creado mediante el uso de un nombre de archivo, se crea la base de datos correspondiente a ese nombre de archivo.</span><span class="sxs-lookup"><span data-stu-id="805b4-149">If the <xref:System.Data.Linq.DataContext> has been created by using a file name, the database corresponding to that file name is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="805b4-150">El código siguiente muestra cómo configurar una base de datos temporal y, a continuación, quitarlo.</span><span class="sxs-lookup"><span data-stu-id="805b4-150">The following code shows how to set up a temporary database and then remove it.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#1)]
 [!code-vb[System.Data.Linq.DataContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMethodCallQuery&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="protected internal System.Linq.IQueryable&lt;TResult&gt; CreateMethodCallQuery&lt;TResult&gt; (object instance, System.Reflection.MethodInfo methodInfo, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Linq.IQueryable`1&lt;!!TResult&gt; CreateMethodCallQuery&lt;TResult&gt;(object instance, class System.Reflection.MethodInfo methodInfo, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.CreateMethodCallQuery``1(System.Object,System.Reflection.MethodInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Linq::IQueryable&lt;TResult&gt; ^ CreateMethodCallQuery(System::Object ^ instance, System::Reflection::MethodInfo ^ methodInfo, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="methodInfo" Type="System.Reflection.MethodInfo" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="805b4-151">Tipo de elementos de la colección devuelta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-151">The type of the elements in the returned collection.</span>
          </span>
        </typeparam>
        <param name="instance">
          <span data-ttu-id="805b4-152">Instancia de la invocación al método (objeto actual).</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-152">The instance of the method invocation (the current object).</span>
          </span>
        </param>
        <param name="methodInfo">
          <span data-ttu-id="805b4-153">
            <see cref="T:System.Reflection.MethodInfo" /> que identifica al método CLR correspondiente a un método de base de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-153">The <see cref="T:System.Reflection.MethodInfo" /> that identifies the CLR method that corresponds to a database method.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="805b4-154">Matriz de parámetros que se va a pasar al comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-154">The array of parameters to be passed to the command.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="805b4-155">Ejecuta la función de base de datos con valores de tabla asociada al método CLR especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-155">Executes the table-valued database function associated with the specified CLR method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="805b4-156">Colección de valores resultantes devuelta por la consulta de base de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-156">A collection of resultant values returned by the database query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805b4-157">El <xref:System.Data.Linq.DataContext.CreateMethodCallQuery%2A> método se utiliza en código generado automáticamente y actúa como un proxy para las funciones de base de datos.</span><span class="sxs-lookup"><span data-stu-id="805b4-157">The <xref:System.Data.Linq.DataContext.CreateMethodCallQuery%2A> method is used in automatically generated code and acts as a proxy to database functions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DatabaseExists">
      <MemberSignature Language="C#" Value="public bool DatabaseExists ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool DatabaseExists() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.DatabaseExists" />
      <MemberSignature Language="VB.NET" Value="Public Function DatabaseExists () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool DatabaseExists();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="805b4-158">Determina si puede abrirse la base de datos asociada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-158">Determines whether the associated database can be opened.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="805b4-159">
            <see langword="true" />, si la base de datos especificada puede abrirse; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-159">
              <see langword="true" /> if the specified database can be opened; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805b4-160">Este método usa la conexión en la <xref:System.Data.Linq.DataContext.Connection%2A> propiedad para intentar abrir la base de datos asociada.</span><span class="sxs-lookup"><span data-stu-id="805b4-160">This method uses the connection in the <xref:System.Data.Linq.DataContext.Connection%2A> property to attempt to open the associated database.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="805b4-161">En el ejemplo siguiente se usa este método para determinar si ya existe una base de datos.</span><span class="sxs-lookup"><span data-stu-id="805b4-161">The following example uses this method to determine whether a database already exists.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#1)]
 [!code-vb[System.Data.Linq.DataContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferredLoadingEnabled">
      <MemberSignature Language="C#" Value="public bool DeferredLoadingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DeferredLoadingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.DeferredLoadingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property DeferredLoadingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DeferredLoadingEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="805b4-162">Obtiene o establece un valor que indica si se van a cargar con retraso relaciones uno a varios o uno a uno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-162">Gets or sets a value that indicates whether to delay-load one-to-many or one-to-one relationships.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="805b4-163">Es <see langword="true" /> si está habilitada la carga aplazada; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-163">
              <see langword="true" /> if deferred loading is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805b4-164">Cuando el código tiene acceso a una de estas relaciones, null se devuelve si la relación es uno a uno, y se devuelve una colección vacía si no uno a varios.</span><span class="sxs-lookup"><span data-stu-id="805b4-164">When the code accesses one of these relationships, null is returned if the relationship is one-to-one, and an empty collection is returned if it is one-to-many.</span></span> <span data-ttu-id="805b4-165">Las relaciones aún podrán rellenarse estableciendo la <xref:System.Data.Linq.DataContext.LoadOptions%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="805b4-165">The relationships can still be filled by setting the <xref:System.Data.Linq.DataContext.LoadOptions%2A> property.</span></span>  
  
 <span data-ttu-id="805b4-166">El escenario principal para esta propiedad es que le permite extraer una parte del modelo de objetos y enviarlo (por ejemplo, para un servicio Web).</span><span class="sxs-lookup"><span data-stu-id="805b4-166">The main scenario for this property is to enable you to extract a piece of the object model and send it out (for example, to a Web service).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="805b4-167">Si esta propiedad se establece en `false` después de que se ha ejecutado una consulta, se produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="805b4-167">If this property is set to `false` after a query has been executed, an exception is thrown.</span></span> <span data-ttu-id="805b4-168">Consulte la **los modos válidos** sección para obtener más información.</span><span class="sxs-lookup"><span data-stu-id="805b4-168">See the **Valid Modes** section below for more information.</span></span>  
  
## <a name="valid-modes"></a><span data-ttu-id="805b4-169">Modos válidos</span><span class="sxs-lookup"><span data-stu-id="805b4-169">Valid modes</span></span>  
 <span data-ttu-id="805b4-170">La carga aplazada requiere el seguimiento de objetos.</span><span class="sxs-lookup"><span data-stu-id="805b4-170">Deferred loading requires object tracking.</span></span> <span data-ttu-id="805b4-171">Solo los tres modos siguientes son válidos:</span><span class="sxs-lookup"><span data-stu-id="805b4-171">Only the following three modes are valid:</span></span>  
  
-   <span data-ttu-id="805b4-172"><xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `false`.</span><span class="sxs-lookup"><span data-stu-id="805b4-172"><xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `false`.</span></span> <span data-ttu-id="805b4-173"><xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> se omite y se deduce que para ser `false`.</span><span class="sxs-lookup"><span data-stu-id="805b4-173"><xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is ignored and inferred to be `false`.</span></span> <span data-ttu-id="805b4-174">Este comportamiento corresponde a solo lectura <xref:System.Data.Linq.DataContext>.</span><span class="sxs-lookup"><span data-stu-id="805b4-174">This behavior corresponds to a read-only <xref:System.Data.Linq.DataContext>.</span></span>  
  
-   <span data-ttu-id="805b4-175"><xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `true`.</span><span class="sxs-lookup"><span data-stu-id="805b4-175"><xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `true`.</span></span> <span data-ttu-id="805b4-176"><xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> = `false`.</span><span class="sxs-lookup"><span data-stu-id="805b4-176"><xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> = `false`.</span></span> <span data-ttu-id="805b4-177">Esta situación se corresponde con un <xref:System.Data.Linq.DataContext> que permite a los usuarios cargar un gráfico de objetos mediante <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> directivas, pero no permite la carga aplazada.</span><span class="sxs-lookup"><span data-stu-id="805b4-177">This situation corresponds to a <xref:System.Data.Linq.DataContext> that allows users to load an object graph by using <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> directives, but it does not enable deferred loading.</span></span>  
  
-   <span data-ttu-id="805b4-178">Ambos se establecen en `true`.</span><span class="sxs-lookup"><span data-stu-id="805b4-178">Both are set to `true`.</span></span> <span data-ttu-id="805b4-179">Este es el valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="805b4-179">This is the default.</span></span>  
  
 <span data-ttu-id="805b4-180">Las marcas no se pueden cambiar después de que se ha ejecutado una consulta.</span><span class="sxs-lookup"><span data-stu-id="805b4-180">The flags may not be changed after a query has been executed.</span></span> <span data-ttu-id="805b4-181">Cualquier cambio después de la ejecución de la primera consulta que usa <xref:System.Data.Linq.DataContext> produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="805b4-181">Any change after the execution of the first query that uses that <xref:System.Data.Linq.DataContext> throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDatabase">
      <MemberSignature Language="C#" Value="public void DeleteDatabase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteDatabase() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.DeleteDatabase" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteDatabase ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteDatabase();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="805b4-182">Elimina la base de datos asociada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-182">Deletes the associated database.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805b4-183">Este método usa la conexión en la <xref:System.Data.Linq.DataContext.Connection%2A> propiedad para identificar la base de datos va a eliminar.</span><span class="sxs-lookup"><span data-stu-id="805b4-183">This method uses the connection in the <xref:System.Data.Linq.DataContext.Connection%2A> property to identify the database to be deleted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="805b4-184">En el ejemplo siguiente se muestra cómo eliminar una base de datos que se ha creado temporalmente.</span><span class="sxs-lookup"><span data-stu-id="805b4-184">The following example shows how to delete a database that has been temporarily created.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#1)]
 [!code-vb[System.Data.Linq.DataContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Data.Linq.DataContext.Dispose" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="805b4-185">Libera los recursos que usa la clase <see cref="T:System.Data.Linq.DataContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-185">Releases the resources used by the <see cref="T:System.Data.Linq.DataContext" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="805b4-186">Libera todos los recursos usados por la instancia actual de la clase <see cref="T:System.Data.Linq.DataContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-186">Releases all resources used by the current instance of the <see cref="T:System.Data.Linq.DataContext" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="805b4-187">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-187">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="805b4-188">Libera los recursos no administrados usados por la clase <see cref="T:System.Data.Linq.DataContext" /> y, de forma opcional, libera el recurso administrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-188">Releases the unmanaged resources used by the <see cref="T:System.Data.Linq.DataContext" /> class and optionally releases the managed resource.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteCommand">
      <MemberSignature Language="C#" Value="public int ExecuteCommand (string command, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ExecuteCommand(string command, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteCommand (command As String, ParamArray parameters As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteCommand(System::String ^ command, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="805b4-189">El comando SQL que se va a ejecutar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-189">The SQL command to be executed.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="805b4-190">Matriz de parámetros que se va a pasar al comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-190">The array of parameters to be passed to the command.</span>
          </span>
          <span data-ttu-id="805b4-191">Observe el comportamiento siguiente:</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-191">Note the following behavior:</span>
          </span>
          <span data-ttu-id="805b4-192">Si el número de objetos de la matriz es menor que el número más alto identificado en la cadena de comandos, se produce una excepción.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-192">If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.</span>
          </span>
          <span data-ttu-id="805b4-193">Si la matriz contiene objetos a los que no se hace referencia en la cadena de comandos, no se produce ninguna excepción.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-193">If the array contains objects that are not referenced in the command string, no exception is thrown.</span>
          </span>
          <span data-ttu-id="805b4-194">Si alguno de los parámetros es null, se convierte en <see langword="DBNull.Value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-194">If any one of the parameters is null, it is converted to <see langword="DBNull.Value" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="805b4-195">Ejecuta los comandos SQL directamente en la base de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-195">Executes SQL commands directly on the database.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="805b4-196">Número de filas modificadas por el comando ejecutado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-196">The number of rows modified by the executed command.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805b4-197">Este método es un mecanismo de paso a través para los casos donde [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] no proporciona adecuadamente para un escenario determinado.</span><span class="sxs-lookup"><span data-stu-id="805b4-197">This method is a pass-through mechanism for cases where [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] does not adequately provide for a particular scenario.</span></span>  
  
 <span data-ttu-id="805b4-198">La sintaxis del comando es prácticamente igual que la sintaxis utilizada para crear un ADO.NET `DataCommand`.</span><span class="sxs-lookup"><span data-stu-id="805b4-198">The syntax for the command is almost the same as the syntax used to create an ADO.NET `DataCommand`.</span></span> <span data-ttu-id="805b4-199">La única diferencia está en cómo se especifican los parámetros.</span><span class="sxs-lookup"><span data-stu-id="805b4-199">The only difference is in how the parameters are specified.</span></span> <span data-ttu-id="805b4-200">En concreto, especifique los parámetros encerrándolos entre llaves ({...}) y enumerarlas empezando desde 0.</span><span class="sxs-lookup"><span data-stu-id="805b4-200">Specifically, you specify parameters by enclosing them in braces ({…}) and enumerate them starting from 0.</span></span> <span data-ttu-id="805b4-201">El parámetro está asociado con el objeto igualmente numerado en la matriz de parámetros.</span><span class="sxs-lookup"><span data-stu-id="805b4-201">The parameter is associated with the equally numbered object in the parameters array.</span></span>  
  
 <span data-ttu-id="805b4-202">`ExecuteQuery` y `ExecuteCommand` le permiten especificar un número variable de argumentos para la sustitución de parámetros.</span><span class="sxs-lookup"><span data-stu-id="805b4-202">`ExecuteQuery` and `ExecuteCommand` allow you to specify a variable number of arguments for parameter substitution.</span></span> <span data-ttu-id="805b4-203">Por ejemplo, puede especificar los parámetros al invocar ExecuteQuery\<TResult >:</span><span class="sxs-lookup"><span data-stu-id="805b4-203">For example, you can specify the parameters when invoking ExecuteQuery\<TResult>:</span></span>  
  
```  
db.ExecuteQuery<Customer>("select * from dbo.Customers where City = {0}", "London");  
```  
  
 <span data-ttu-id="805b4-204">Y otro ejemplo:</span><span class="sxs-lookup"><span data-stu-id="805b4-204">And, another example:</span></span>  
  
```  
db.ExecuteCommand("UPDATE Products SET QuantityPerUnit = {0} WHERE ProductID = {1}", "24 boxes", 5);  
```  
  
 <span data-ttu-id="805b4-205">En el ejemplo siguiente se abre una conexión y se pasa una instancia de SQL `UPDATE` comando al motor de SQL.</span><span class="sxs-lookup"><span data-stu-id="805b4-205">The following example opens a connection and passes a SQL `UPDATE` command to the SQL engine.</span></span>  
  
   
  
## Examples  
 [!code-csharp[DLinqCommunicatingWithDatabase#3](~/samples/snippets/csharp/VS_Snippets_Data/DLinqCommunicatingWithDatabase/cs/Program.cs#3)]
 [!code-vb[DLinqCommunicatingWithDatabase#3](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqCommunicatingWithDatabase/vb/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDynamicDelete">
      <MemberSignature Language="C#" Value="protected internal void ExecuteDynamicDelete (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void ExecuteDynamicDelete(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteDynamicDelete(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub ExecuteDynamicDelete (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void ExecuteDynamicDelete(System::Object ^ entity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">
          <span data-ttu-id="805b4-206">Entidad que se va a eliminar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-206">The entity to be deleted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="805b4-207">Ejecuta este método dentro de los métodos de invalidación de eliminación para volver a delegar en [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] la tarea de generar y ejecutar código SQL dinámico para las operaciones de eliminación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-207">Executes, inside delete override methods, to redelegate to [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] the task of generating and executing dynamic SQL for delete operations.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805b4-208">Vea <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.</span><span class="sxs-lookup"><span data-stu-id="805b4-208">See <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDynamicInsert">
      <MemberSignature Language="C#" Value="protected internal void ExecuteDynamicInsert (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void ExecuteDynamicInsert(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub ExecuteDynamicInsert (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void ExecuteDynamicInsert(System::Object ^ entity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">
          <span data-ttu-id="805b4-209">Entidad que se va a insertar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-209">The entity to be inserted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="805b4-210">Ejecuta este método dentro de los métodos de invalidación de inserción para volver a delegar en [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] la tarea de generar y ejecutar código SQL dinámico para las operaciones de inserción.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-210">Executes, inside insert override methods, to redelegate to [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] the task of generating and executing dynamic SQL for insert operations.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805b4-211">Tenga en cuenta las consideraciones siguientes:</span><span class="sxs-lookup"><span data-stu-id="805b4-211">Note the following considerations:</span></span>  
  
-   <span data-ttu-id="805b4-212">Dado que el método tiene un protected (modificador), su uso requiere subclases <xref:System.Data.Linq.DataContext>.</span><span class="sxs-lookup"><span data-stu-id="805b4-212">Because the method has a protected modifier, its use requires subclassing <xref:System.Data.Linq.DataContext>.</span></span>  
  
-   <span data-ttu-id="805b4-213">Se produce una excepción si no se llama a esta operación dentro de un <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operación.</span><span class="sxs-lookup"><span data-stu-id="805b4-213">An exception is thrown if this operation is not called inside a <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operation.</span></span> <span data-ttu-id="805b4-214">No está diseñado para llamarlo como una operación independiente fuera del ámbito de un <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operación.</span><span class="sxs-lookup"><span data-stu-id="805b4-214">It is not intended to be called as a stand-alone operation outside the scope of a <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operation.</span></span> <span data-ttu-id="805b4-215"><xref:System.Data.Linq.DataContext.SubmitChanges%2A> propio llamadas invalidación métodos si se implementan y los métodos anteriores están diseñados para llamarse dentro de los métodos de invalidación.</span><span class="sxs-lookup"><span data-stu-id="805b4-215"><xref:System.Data.Linq.DataContext.SubmitChanges%2A> itself calls override methods if they are implemented and the previous methods are intended to be called inside the override methods.</span></span>  
  
-   <span data-ttu-id="805b4-216">Es responsabilidad del desarrollador para pasar la entidad correcta.</span><span class="sxs-lookup"><span data-stu-id="805b4-216">It is the responsibility of the developer to pass in the correct entity.</span></span> <span data-ttu-id="805b4-217">La implementación comprueba que se realiza el seguimiento de la entidad en el pasado.</span><span class="sxs-lookup"><span data-stu-id="805b4-217">The implementation verifies that the passed-in entity is tracked.</span></span> <span data-ttu-id="805b4-218">Sin embargo, es responsabilidad del desarrollador para mantener el orden o pasar en la misma entidad dos veces.</span><span class="sxs-lookup"><span data-stu-id="805b4-218">However, it is the responsibility of the developer to maintain the order or pass in the same entity two times.</span></span>  
  
-   <span data-ttu-id="805b4-219">Es responsabilidad del desarrollador para invocar la API dinámica correcta.</span><span class="sxs-lookup"><span data-stu-id="805b4-219">It is the responsibility of the developer to invoke the correct dynamic API.</span></span> <span data-ttu-id="805b4-220">Por ejemplo, en la `Update` invalidar el método, solo el <xref:System.Data.Linq.DataContext.ExecuteDynamicUpdate%2A> método puede llamarse.</span><span class="sxs-lookup"><span data-stu-id="805b4-220">For example, in the `Update` override method, only the <xref:System.Data.Linq.DataContext.ExecuteDynamicUpdate%2A> method can be called.</span></span> [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]<span data-ttu-id="805b4-221"> no detecta ni comprueba si el método dinámico invocado coincide con la operación aplicable.</span><span class="sxs-lookup"><span data-stu-id="805b4-221"> does not detect or verify whether the invoked dynamic method matches the applicable operation.</span></span> <span data-ttu-id="805b4-222">Los resultados son indefinidos si se llama a un método no aplicable (por ejemplo, al llamar a <xref:System.Data.Linq.DataContext.ExecuteDynamicDelete%2A> para un objeto que se actualizará).</span><span class="sxs-lookup"><span data-stu-id="805b4-222">The results are undefined if an inapplicable method is called (for example, calling <xref:System.Data.Linq.DataContext.ExecuteDynamicDelete%2A> for an object to be updated).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDynamicUpdate">
      <MemberSignature Language="C#" Value="protected internal void ExecuteDynamicUpdate (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void ExecuteDynamicUpdate(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteDynamicUpdate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub ExecuteDynamicUpdate (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void ExecuteDynamicUpdate(System::Object ^ entity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">
          <span data-ttu-id="805b4-223">Entidad que se va a actualizar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-223">The entity to be updated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="805b4-224">Ejecuta este método dentro de los métodos de invalidación de actualización para volver a delegar en [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] la tarea de generar y ejecutar código SQL dinámico para las operaciones de actualización.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-224">Executes, inside update override methods, to redelegate to [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] the task of generating and executing dynamic SQL for update operations.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805b4-225">Vea <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.</span><span class="sxs-lookup"><span data-stu-id="805b4-225">See <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteMethodCall">
      <MemberSignature Language="C#" Value="protected System.Data.Linq.IExecuteResult ExecuteMethodCall (object instance, System.Reflection.MethodInfo methodInfo, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Data.Linq.IExecuteResult ExecuteMethodCall(object instance, class System.Reflection.MethodInfo methodInfo, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteMethodCall(System.Object,System.Reflection.MethodInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Data::Linq::IExecuteResult ^ ExecuteMethodCall(System::Object ^ instance, System::Reflection::MethodInfo ^ methodInfo, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.IExecuteResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="methodInfo" Type="System.Reflection.MethodInfo" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="805b4-226">Instancia de la invocación al método (objeto actual).</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-226">The instance of the method invocation (the current object).</span>
          </span>
        </param>
        <param name="methodInfo">
          <span data-ttu-id="805b4-227">Identifica el método CLR correspondiente a un método de base de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-227">Identifies the CLR method that corresponds to a database method.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="805b4-228">Matriz de parámetros que se va a pasar al comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-228">The array of parameters to be passed to the command.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="805b4-229">Ejecuta el procedimiento de base de datos almacenado o la función escalar asociada al método CLR especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-229">Executes the stored database procedure or scalar function associated with the specified CLR method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="805b4-230">Resultado (valor devuelto y parámetros de salida) de ejecutar el método especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-230">The result (the return value and output parameters) of executing the specified method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805b4-231">El <xref:System.Data.Linq.DataContext.ExecuteMethodCall%2A> método se utiliza en código generado automáticamente y actúa como un proxy para las funciones de base de datos.</span><span class="sxs-lookup"><span data-stu-id="805b4-231">The <xref:System.Data.Linq.DataContext.ExecuteMethodCall%2A> method is used in automatically generated code and acts as a proxy to database functions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteQuery">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable ExecuteQuery (Type elementType, string query, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable ExecuteQuery(class System.Type elementType, string query, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteQuery (elementType As Type, query As String, ParamArray parameters As Object()) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ ExecuteQuery(Type ^ elementType, System::String ^ query, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="elementType">
          <span data-ttu-id="805b4-232">Tipo de <see cref="T:System.Collections.Generic.IEnumerable`1" /> que se va a devolver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-232">The type of the <see cref="T:System.Collections.Generic.IEnumerable`1" /> to be returned.</span>
          </span>
          <span data-ttu-id="805b4-233">El algoritmo para hacer coincidir las columnas en el resultado de la consulta con los campos o propiedades en el objeto funciona de la siguiente manera:</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-233">The algorithm for matching columns in the result of the query to fields or properties in the object works as follows:</span>
          </span>
          <span data-ttu-id="805b4-234">Si una propiedad o un campo está asignado a un nombre de columna concreto, se espera ese nombre de columna en el conjunto de resultados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-234">If a field or property is mapped to a particular column name, that column name is expected in the resultset.</span>
          </span>
          <span data-ttu-id="805b4-235">Si una propiedad o un campo no está asignado, se espera una columna con el mismo nombre que la propiedad o el campo en el conjunto de resultados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-235">If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.</span>
          </span>
          <span data-ttu-id="805b4-236">La comparación se realiza buscando primero una coincidencia con distinción entre mayúsculas y minúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-236">The comparison is performed by looking for a case-sensitive match first.</span>
          </span>
          <span data-ttu-id="805b4-237">Si no se encuentra ninguna coincidencia de este tipo, se buscará una coincidencia sin distinción entre mayúsculas y minúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-237">If this match is not found, a subsequent search occurs for a case-insensitive match.</span>
          </span>
          <span data-ttu-id="805b4-238">La consulta debe devolver todos los campos y propiedades del objeto de los que se ha realizado un seguimiento (excepto los que se cargan de manera aplazada) cuando se cumplen todas las condiciones siguientes:</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-238">The query must return all the tracked fields and properties of the object (except those that are loaded on a deferred basis) when all the following conditions are true:</span>
          </span>
          <span data-ttu-id="805b4-239">
            <c>T</c> es una entidad de la que <see cref="T:System.Data.Linq.DataContext" /> realiza un seguimiento explícito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-239">
              <c>T</c> is an entity explicitly tracked by the <see cref="T:System.Data.Linq.DataContext" />.</span>
          </span>
          <span data-ttu-id="805b4-240">
            <see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /> es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-240">
              <see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /> is <see langword="true" />.</span>
          </span>
          <span data-ttu-id="805b4-241">La entidad tiene una clave principal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-241">The entity has a primary key.</span>
          </span>
          <span data-ttu-id="805b4-242">De lo contrario, se produce una excepción.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-242">Otherwise an exception is thrown.</span>
          </span>
        </param>
        <param name="query">
          <span data-ttu-id="805b4-243">Consulta SQL que se va a ejecutar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-243">The SQL query to be executed.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="805b4-244">Matriz de parámetros que se va a pasar al comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-244">The array of parameters to be passed to the command.</span>
          </span>
          <span data-ttu-id="805b4-245">Observe el comportamiento siguiente:</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-245">Note the following behavior:</span>
          </span>
          <span data-ttu-id="805b4-246">Si el número de objetos de la matriz es menor que el número más alto identificado en la cadena de comandos, se produce una excepción.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-246">If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.</span>
          </span>
          <span data-ttu-id="805b4-247">Si la matriz contiene objetos a los que no se hace referencia en la cadena de comandos, no se produce ninguna excepción.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-247">If the array contains objects that are not referenced in the command string, no exception is thrown.</span>
          </span>
          <span data-ttu-id="805b4-248">Si un parámetro es <see langword="null" />, se convierte en <see langword="DBNull.Value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-248">If a parameter is <see langword="null" />, it is converted to <see langword="DBNull.Value" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="805b4-249">Ejecuta las consultas SQL directamente en la base de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-249">Executes SQL queries directly on the database.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="805b4-250">Colección <see cref="T:System.Collections.Generic.IEnumerable`1" /> de los objetos devueltos por la consulta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-250">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of objects returned by the query.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteQuery&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TResult&gt; ExecuteQuery&lt;TResult&gt; (string query, params object[] parameters) where TResult : new();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; ExecuteQuery&lt;.ctor TResult&gt;(string query, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteQuery(Of TResult As New) (query As String, ParamArray parameters As Object()) As IEnumerable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; where TResult : gcnew() System::Collections::Generic::IEnumerable&lt;TResult&gt; ^ ExecuteQuery(System::String ^ query, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="805b4-251">Tipo de elementos de la colección devuelta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-251">The type of the elements in the returned collection.</span>
          </span>
        </typeparam>
        <param name="query">
          <span data-ttu-id="805b4-252">Consulta SQL que se va a ejecutar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-252">The SQL query to be executed.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="805b4-253">Matriz de parámetros que se va a pasar al comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-253">The array of parameters to be passed to the command.</span>
          </span>
          <span data-ttu-id="805b4-254">Observe el comportamiento siguiente:</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-254">Note the following behavior:</span>
          </span>
          <span data-ttu-id="805b4-255">Si el número de objetos de la matriz es menor que el número más alto identificado en la cadena de comandos, se produce una excepción.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-255">If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.</span>
          </span>
          <span data-ttu-id="805b4-256">Si la matriz contiene objetos a los que no se hace referencia en la cadena de comandos, no se produce ninguna excepción.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-256">If the array contains objects that are not referenced in the command string, no exception is thrown.</span>
          </span>
          <span data-ttu-id="805b4-257">Si un parámetro es null, se convierte en <see langword="DBNull.Value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-257">If a parameter is null, it is converted to <see langword="DBNull.Value" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="805b4-258">Ejecuta las consultas SQL directamente en la base de datos y devuelve objetos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-258">Executes SQL queries directly on the database and returns objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="805b4-259">Colección  de objetos devueltos por la consulta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-259">A collection of objects returned by the query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805b4-260">Este método es un mecanismo de paso a través para los casos donde [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] no proporciona un escenario determinado.</span><span class="sxs-lookup"><span data-stu-id="805b4-260">This method is a pass-through mechanism for cases where [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] does not provide for a particular scenario.</span></span>  
  
 <span data-ttu-id="805b4-261">El algoritmo para hacer coincidir las columnas en el resultado de la consulta con los campos y propiedades en el objeto funciona del siguiente modo:</span><span class="sxs-lookup"><span data-stu-id="805b4-261">The algorithm for matching columns in the result of the query to fields and properties in the object works as follows:</span></span>  
  
-   <span data-ttu-id="805b4-262">Si una propiedad o un campo está asignado a un nombre de columna concreto, se espera ese nombre de columna en el conjunto de resultados.</span><span class="sxs-lookup"><span data-stu-id="805b4-262">If a field or property is mapped to a particular column name, that column name is expected in the resultset.</span></span>  
  
-   <span data-ttu-id="805b4-263">Si una propiedad o un campo no está asignado, se espera una columna con el mismo nombre que la propiedad o el campo en el conjunto de resultados.</span><span class="sxs-lookup"><span data-stu-id="805b4-263">If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.</span></span>  
  
-   <span data-ttu-id="805b4-264">La comparación se realiza buscando una coincidencia entre mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="805b4-264">The comparison is performed by first looking for a case-sensitive match.</span></span> <span data-ttu-id="805b4-265">Si no se encuentra una coincidencia, una búsqueda posterior se produce una coincidencia entre mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="805b4-265">If such a match is not found, a subsequent search occurs for a case-insensitive match.</span></span>  
  
-   <span data-ttu-id="805b4-266">La consulta debe devolver todos los campos de seguimiento y las propiedades del objeto (aparte de los sujetos a la carga aplazada) cuando todos los requisitos siguientes son verdaderas:</span><span class="sxs-lookup"><span data-stu-id="805b4-266">The query must return all the tracked fields and properties of the object (apart from those subject to deferred loading) when all the following are true:</span></span>  
  
    -   <span data-ttu-id="805b4-267">Si `<T>` es una entidad explícitamente seguida por el <xref:System.Data.Linq.DataContext>.</span><span class="sxs-lookup"><span data-stu-id="805b4-267">If `<T>` is an entity explicitly tracked by the <xref:System.Data.Linq.DataContext>.</span></span>  
  
    -   <span data-ttu-id="805b4-268">SeguimientoObjetosHabilitado es true.</span><span class="sxs-lookup"><span data-stu-id="805b4-268">ObjectTrackingEnabled is true.</span></span>  
  
    -   <span data-ttu-id="805b4-269">La entidad tiene una clave principal.</span><span class="sxs-lookup"><span data-stu-id="805b4-269">The entity has a primary key.</span></span>  
  
     <span data-ttu-id="805b4-270">De lo contrario, se produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="805b4-270">Otherwise an exception is thrown.</span></span>  
  
-   <span data-ttu-id="805b4-271">En todos los demás casos, la consulta puede recuperar un subconjunto de los campos de seguimiento y las propiedades para el objeto.</span><span class="sxs-lookup"><span data-stu-id="805b4-271">In all other cases, the query can retrieve just a subset of the tracked fields and properties for the object.</span></span>  
  
 <span data-ttu-id="805b4-272">El siguiente fragmento de C# muestra un uso de este método:</span><span class="sxs-lookup"><span data-stu-id="805b4-272">The following C# snippet shows one use for this method:</span></span>  
  
```  
var customers = db.ExecuteQuery<Customer>(@"SELECT CustomerID, CompanyName, ContactName, ContactTitle,   
   Address, City, Region, PostalCode, Country, Phone, Fax  
   FROM   dbo.Customers  
   WHERE  City = {0}", "London");  
  
foreach (Customer c in customers)  
   Console.WriteLine(c.ContactName);  
```  
  
 <span data-ttu-id="805b4-273">En Visual Basic</span><span class="sxs-lookup"><span data-stu-id="805b4-273">In Visual Basic</span></span>  
  
```  
Dim customers = db.ExecuteQuery(Of Customer)("SELECT CustomerID, _    CompanyName, ContactName, ContactTitle, _  
   Address, City, Region, PostalCode, Country, Phone, Fax _  
   FROM dbo.Customers _  
WHERE City = {0}", "London")  
  
For Each c As Customer In customers  
    Console.WriteLine(c.ContactName)  
Next  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChangeSet">
      <MemberSignature Language="C#" Value="public System.Data.Linq.ChangeSet GetChangeSet ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Linq.ChangeSet GetChangeSet() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetChangeSet" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChangeSet () As ChangeSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Linq::ChangeSet ^ GetChangeSet();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.ChangeSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="805b4-274">Obtiene los objetos modificados seguidos por <see cref="T:System.Data.Linq.DataContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-274">Gets the modified objects tracked by <see cref="T:System.Data.Linq.DataContext" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="805b4-275">El conjunto de objetos se devuelve como tres colecciones de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-275">The set of objects is returned as three read-only collections.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805b4-276">Tenga en cuenta las consideraciones siguientes:</span><span class="sxs-lookup"><span data-stu-id="805b4-276">Note the following considerations:</span></span>  
  
-   <span data-ttu-id="805b4-277"><xref:System.Data.Linq.DataContext.GetChangeSet%2A> podría tener efectos secundarios, como la inferencia de insertar y eliminar operaciones que normalmente se realizan en el momento de <xref:System.Data.Linq.DataContext.SubmitChanges%2A>.</span><span class="sxs-lookup"><span data-stu-id="805b4-277"><xref:System.Data.Linq.DataContext.GetChangeSet%2A> might have side effects, such as inference of insert and delete operations that are usually performed at the time of <xref:System.Data.Linq.DataContext.SubmitChanges%2A>.</span></span> <span data-ttu-id="805b4-278">Por ejemplo, los objetos que se utilizan en las siguientes operaciones pueden crear operaciones deducidas correspondientes en la lista siguiente:</span><span class="sxs-lookup"><span data-stu-id="805b4-278">For example, objects that are used in the following operations can create corresponding inferred operations in the following list:</span></span>  
  
    -   <span data-ttu-id="805b4-279"><xref:System.Data.Linq.EntitySet%601.Add%2A> para <xref:System.Data.Linq.Table%601.InsertOnSubmit%2A>.</span><span class="sxs-lookup"><span data-stu-id="805b4-279"><xref:System.Data.Linq.EntitySet%601.Add%2A> to <xref:System.Data.Linq.Table%601.InsertOnSubmit%2A>.</span></span>  
  
    -   <span data-ttu-id="805b4-280"><xref:System.Data.Linq.EntityRef%601> asignación a null (posiblemente debido de <xref:System.Data.Linq.EntitySet%601.Remove%2A> a <xref:System.Data.Linq.Table%601.DeleteOnSubmit%2A>.</span><span class="sxs-lookup"><span data-stu-id="805b4-280"><xref:System.Data.Linq.EntityRef%601> assignment to null (possibly because of <xref:System.Data.Linq.EntitySet%601.Remove%2A> to <xref:System.Data.Linq.Table%601.DeleteOnSubmit%2A>.</span></span>  
  
-   <span data-ttu-id="805b4-281">No se puede ordenar el conjunto según las restricciones de clave externa.</span><span class="sxs-lookup"><span data-stu-id="805b4-281">The set may not be ordered according to foreign key constraints.</span></span>  
  
-   <span data-ttu-id="805b4-282">Base de datos genera valores (por ejemplo, los valores de clave principales y externos, las marcas de tiempo etc.) no están disponibles.</span><span class="sxs-lookup"><span data-stu-id="805b4-282">Database-generated values (for example, primary and foreign key values, timestamps, and so forth) are not available.</span></span> <span data-ttu-id="805b4-283">Esa información requiere la ejecución del comando de base de datos y quizás la propagación de la información recuperada (por ejemplo, clave externa de la clave principal).</span><span class="sxs-lookup"><span data-stu-id="805b4-283">Such information requires database command execution and perhaps the propagation of retrieved information (for example, foreign key from primary key).</span></span>  
  
-   <span data-ttu-id="805b4-284">El conjunto de objetos modificados se calcula en el momento de la llamada.</span><span class="sxs-lookup"><span data-stu-id="805b4-284">The set of changed objects is computed at the time of the call.</span></span> <span data-ttu-id="805b4-285">Las llamadas subsiguientes a <xref:System.Data.Linq.DataContext.SubmitChanges%2A> puede generar un conjunto diferente si se realizan cambios adicionales.</span><span class="sxs-lookup"><span data-stu-id="805b4-285">Subsequent calls to <xref:System.Data.Linq.DataContext.SubmitChanges%2A> can produce a different set if additional changes are made.</span></span>  
  
 <span data-ttu-id="805b4-286">Salida cuando no se ha realizado ningún cambio aparece como sigue:</span><span class="sxs-lookup"><span data-stu-id="805b4-286">Output when no changes have been made appears as follows:</span></span>  
  
 `{Added: 0, Removed: 0, Modified: 0}`  
  
   
  
## Examples  
 [!code-csharp[DLinqDebuggingSupport#2](~/samples/snippets/csharp/VS_Snippets_Data/DLinqDebuggingSupport/cs/Program.cs#2)]
 [!code-vb[DLinqDebuggingSupport#2](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqDebuggingSupport/vb/Module1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetCommand (System.Linq.IQueryable query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetCommand(class System.Linq.IQueryable query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCommand (query As IQueryable) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetCommand(System::Linq::IQueryable ^ query);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="query">
          <span data-ttu-id="805b4-287">Consulta cuya información de comandos SQL se va a recuperar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-287">The query whose SQL command information is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="805b4-288">Obtiene información sobre los comandos SQL generados por [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-288">Gets the information about SQL commands generated by [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)].</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="805b4-289">Objeto de información de comandos solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-289">The requested command information object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805b4-290">Este método es sólo un captador y no afecta a <xref:System.Data.Linq.DataContext> estado.</span><span class="sxs-lookup"><span data-stu-id="805b4-290">This method is only a getter and does not affect <xref:System.Data.Linq.DataContext> state.</span></span>  
  
 <span data-ttu-id="805b4-291">Tenga en cuenta las consideraciones siguientes:</span><span class="sxs-lookup"><span data-stu-id="805b4-291">Note the following considerations:</span></span>  
  
-   <span data-ttu-id="805b4-292">El argumento debe ser distinto de null.</span><span class="sxs-lookup"><span data-stu-id="805b4-292">The argument must be non-null.</span></span> <span data-ttu-id="805b4-293">En caso contrario, se produce una excepción de argumento nulo.</span><span class="sxs-lookup"><span data-stu-id="805b4-293">Otherwise, a null argument exception is thrown.</span></span>  
  
-   <span data-ttu-id="805b4-294">Las consultas normales traducción excepciones durante [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] ejecución de la consulta se aplican a las consultas que no se puede convertir.</span><span class="sxs-lookup"><span data-stu-id="805b4-294">Normal query translation exceptions thrown during [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] query execution apply for a query that cannot be translated.</span></span>  
  
-   <span data-ttu-id="805b4-295">Se devuelve el primer comando de consulta.</span><span class="sxs-lookup"><span data-stu-id="805b4-295">Only the first query command is returned.</span></span> <span data-ttu-id="805b4-296">En concreto, los comandos adicionales que se usan para la carga diligente (<xref:System.Data.Linq.DataLoadOptions.LoadWith%2A>) no se incluyen.</span><span class="sxs-lookup"><span data-stu-id="805b4-296">Specifically, additional commands that are used for eager loading (<xref:System.Data.Linq.DataLoadOptions.LoadWith%2A>) are not included.</span></span>  
  
-   <span data-ttu-id="805b4-297"><xref:System.Data.Linq.DataContext> no realizar un seguimiento de lo que hace el usuario con el comando.</span><span class="sxs-lookup"><span data-stu-id="805b4-297"><xref:System.Data.Linq.DataContext> does not track what the user does with the command.</span></span> <span data-ttu-id="805b4-298">Por ejemplo, los resultados de la ejecución del comando devuelto no se realiza el seguimiento y no afectan a <xref:System.Data.Linq.DataContext> estado.</span><span class="sxs-lookup"><span data-stu-id="805b4-298">For example, results from the execution of the returned command are not tracked and do not affect <xref:System.Data.Linq.DataContext> state.</span></span>  
  
   
  
## Examples  
 [!code-csharp[DLinqDebuggingSupport#3](~/samples/snippets/csharp/VS_Snippets_Data/DLinqDebuggingSupport/cs/Program.cs#3)]
 [!code-vb[DLinqDebuggingSupport#3](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqDebuggingSupport/vb/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIDbCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand GetIDbCommand (System.Linq.IQueryable query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.IDbCommand GetIDbCommand(class System.Linq.IQueryable query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetIDbCommand(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIDbCommand (query As IQueryable) As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDbCommand ^ GetIDbCommand(System::Linq::IQueryable ^ query);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="query">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public System.Data.Linq.ITable GetTable (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Linq.ITable GetTable(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetTable(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Linq::ITable ^ GetTable(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.ITable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="805b4-299">Tipo de objetos que van a devolverse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-299">The type of the objects to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="805b4-300">Devuelve una colección de objetos de un tipo determinado, donde el parámetro <paramref name="type" /> define el tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-300">Returns a collection of objects of a particular type, where the type is defined by the <paramref name="type" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="805b4-301">Colección de objetos definidos por el parámetro <paramref name="type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-301">A collection of objects defined by the <paramref name="type" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805b4-302">Se trata de una versión con tipos débiles de <xref:System.Data.Linq.DataContext.GetTable%2A>.</span><span class="sxs-lookup"><span data-stu-id="805b4-302">This is a weakly typed version of <xref:System.Data.Linq.DataContext.GetTable%2A>.</span></span> <span data-ttu-id="805b4-303">Es importante contar con una versión con tipos débiles porque es una práctica relativamente común para construir consultas de forma dinámica.</span><span class="sxs-lookup"><span data-stu-id="805b4-303">It is important to have a weakly typed version because it is a relatively common practice to construct queries dynamically.</span></span> <span data-ttu-id="805b4-304">Sería conveniente forzar la aplicación para usar la reflexión para llamar al método genérico correcto.</span><span class="sxs-lookup"><span data-stu-id="805b4-304">It would be inconvenient to force the application to use reflection to call the correct generic method.</span></span>  
  
 <span data-ttu-id="805b4-305">Si no hay ninguna colección para un tipo determinado, se produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="805b4-305">If there is no collection for a particular type, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTable&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Linq.Table&lt;TEntity&gt; GetTable&lt;TEntity&gt; () where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Linq.Table`1&lt;!!TEntity&gt; GetTable&lt;class TEntity&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetTable``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTable(Of TEntity As Class) () As Table(Of TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; where TEntity : class System::Data::Linq::Table&lt;TEntity&gt; ^ GetTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Table&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TEntity">
          <span data-ttu-id="805b4-306">Tipo de objetos que van a devolverse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-306">The type of the objects to be returned.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="805b4-307">Devuelve una colección de objetos de un tipo determinado, donde el parámetro <paramref name="TEntity" /> define el tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-307">Returns a collection of objects of a particular type, where the type is defined by the <paramref name="TEntity" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="805b4-308">Colección de objetos definidos por el parámetro <paramref name="TEntity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-308">A collection of objects defined by the <paramref name="TEntity" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805b4-309">Este método es el punto de entrada principal para la consulta.</span><span class="sxs-lookup"><span data-stu-id="805b4-309">This method is the main entry point for querying.</span></span> <span data-ttu-id="805b4-310">Cuando un fuertemente tipado <xref:System.Data.Linq.DataContext> está creadas, nuevas propiedades generadas encapsulan las llamadas a este método.</span><span class="sxs-lookup"><span data-stu-id="805b4-310">When a strongly typed <xref:System.Data.Linq.DataContext> is created, new generated properties encapsulate calls to this method.</span></span> <span data-ttu-id="805b4-311">Por ejemplo, un `Customers` propiedad se genera que devuelve `GetTable<Customer>`.</span><span class="sxs-lookup"><span data-stu-id="805b4-311">For example, a `Customers` property is generated that returns `GetTable<Customer>`.</span></span>  
  
 <span data-ttu-id="805b4-312">Si no hay ninguna colección para un tipo determinado, se produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="805b4-312">If there is no collection for a particular type, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadOptions">
      <MemberSignature Language="C#" Value="public System.Data.Linq.DataLoadOptions LoadOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.DataLoadOptions LoadOptions" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.LoadOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadOptions As DataLoadOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::DataLoadOptions ^ LoadOptions { System::Data::Linq::DataLoadOptions ^ get(); void set(System::Data::Linq::DataLoadOptions ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.DataLoadOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="805b4-313">Obtiene o establece el objeto <see cref="T:System.Data.Linq.DataLoadOptions" /> asociado a este objeto <see cref="T:System.Data.Linq.DataContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-313">Gets or sets the <see cref="T:System.Data.Linq.DataLoadOptions" /> associated with this <see cref="T:System.Data.Linq.DataContext" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="805b4-314">Opciones de carga de captura previa de los datos relacionados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-314">The prefetch load options for related data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805b4-315">Esta propiedad obtiene o establece las opciones que se utilizan para definir el comportamiento de captura previa de los miembros de carga aplazada y la pertenencia de colecciones relacionadas.</span><span class="sxs-lookup"><span data-stu-id="805b4-315">This property gets or sets the options that are used to define prefetch behavior for deferred-loaded members and membership of related collections.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter Log { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter Log" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.Log" />
      <MemberSignature Language="VB.NET" Value="Public Property Log As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ Log { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="805b4-316">Obtiene o establece el destino para escribir la consulta o comando SQL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-316">Gets or sets the destination to write the SQL query or command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="805b4-317">
            <see cref="T:System.IO.TextReader" /> que va a usarse para escribir el comando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-317">The <see cref="T:System.IO.TextReader" /> to use for writing the command.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805b4-318">Establezca esta propiedad en `null` para deshabilitar el registro de comandos.</span><span class="sxs-lookup"><span data-stu-id="805b4-318">Set this property to `null` to disable command logging.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="805b4-319">En el ejemplo siguiente se muestra el código SQL generado en la ventana de consola antes de mostrar los resultados de la consulta.</span><span class="sxs-lookup"><span data-stu-id="805b4-319">The following example displays generated SQL in the console window before it displays the results of the query.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataContext#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#2)]
 [!code-vb[System.Data.Linq.DataContext#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mapping">
      <MemberSignature Language="C#" Value="public System.Data.Linq.Mapping.MetaModel Mapping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaModel Mapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.Mapping" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mapping As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::Mapping::MetaModel ^ Mapping { System::Data::Linq::Mapping::MetaModel ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="805b4-320">Obtiene el <see cref="T:System.Data.Linq.Mapping.MetaModel" /> en el que se basa la asignación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-320">Gets the <see cref="T:System.Data.Linq.Mapping.MetaModel" /> on which the mapping is based.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="805b4-321">Asignación entre una base de datos y objetos de dominio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-321">The mapping between a database and domain objects.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectTrackingEnabled">
      <MemberSignature Language="C#" Value="public bool ObjectTrackingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ObjectTrackingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ObjectTrackingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ObjectTrackingEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="805b4-322">Obtiene o establece un valor que indica si está habilitado el seguimiento de objetos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-322">Gets or sets a value that indicates whether object tracking is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="805b4-323">
            <see langword="true" /> si está habilitado el seguimiento del objeto; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-323">
              <see langword="true" /> if the object tracking is enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="805b4-324">El valor predeterminado es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-324">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805b4-325">Si se establece esta propiedad en `false` mejora el rendimiento en tiempo de recuperación, porque hay menos elementos para realizar un seguimiento.</span><span class="sxs-lookup"><span data-stu-id="805b4-325">Setting this property to `false` improves performance at retrieval time, because there are fewer items to track.</span></span>  
  
 <span data-ttu-id="805b4-326">Se produce una excepción:</span><span class="sxs-lookup"><span data-stu-id="805b4-326">An exception is thrown:</span></span>  
  
-   <span data-ttu-id="805b4-327">Si la propiedad se establece en `false` después de que se ha ejecutado una consulta.</span><span class="sxs-lookup"><span data-stu-id="805b4-327">If the property is set to `false` after a query has been executed.</span></span>  
  
     <span data-ttu-id="805b4-328">Para obtener más información, vea la sección de los modos válidos en <xref:System.Data.Linq.DataContext>.</span><span class="sxs-lookup"><span data-stu-id="805b4-328">For more information, see the Valid Modes section in <xref:System.Data.Linq.DataContext>.</span></span>  
  
-   <span data-ttu-id="805b4-329">Si la propiedad se establece en `false` y <xref:System.Data.Linq.DataContext.SubmitChanges%2A> se llama.</span><span class="sxs-lookup"><span data-stu-id="805b4-329">If the property is set to `false` and <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="805b4-330">Si <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> es `false`, <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> se omite y se tratan como `false`.</span><span class="sxs-lookup"><span data-stu-id="805b4-330">If <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> is `false`, <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is ignored and treated as `false`.</span></span> <span data-ttu-id="805b4-331">En este caso, el <xref:System.Data.Linq.DataContext> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="805b4-331">In this case, the <xref:System.Data.Linq.DataContext> is read-only.</span></span>  
  
 <span data-ttu-id="805b4-332">Si <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> es `true`, <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> es `false`.</span><span class="sxs-lookup"><span data-stu-id="805b4-332">If <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> is `true`, <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is `false`.</span></span> <span data-ttu-id="805b4-333">En este caso, <xref:System.Data.Linq.DataContext> permite cargar un gráfico de objetos mediante el uso de <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> directivas, pero no se permite la carga aplazada.</span><span class="sxs-lookup"><span data-stu-id="805b4-333">In this case, <xref:System.Data.Linq.DataContext> allows you to load an object graph by using <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> directives, but does not enable deferred loading.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCacheEnabled">
      <MemberSignature Language="C#" Value="public bool QueryCacheEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool QueryCacheEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.QueryCacheEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property QueryCacheEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool QueryCacheEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Refresh">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="805b4-334">Actualiza el estado de los objetos utilizando los datos en la base de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-334">Refreshes object state by using data in the database.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805b4-335">Este método es útil después de un error de simultaneidad optimista para poner los elementos en un estado de otro intento.</span><span class="sxs-lookup"><span data-stu-id="805b4-335">This method is useful after an optimistic concurrency error to bring items into a state for another attempt.</span></span> <span data-ttu-id="805b4-336">Actualiza el estado de los campos y propiedades primitivos en los objetos.</span><span class="sxs-lookup"><span data-stu-id="805b4-336">It updates the state of the primitive fields and properties on the objects.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="805b4-337">Si un objeto se encuentra en la *muchos* se establecerá el lado de una relación de uno a varios, la clave externa en el objeto y el puntero de objeto para el otro lado de la relación se establecerá en el nuevo valor.</span><span class="sxs-lookup"><span data-stu-id="805b4-337">If an object is on the *many* side of a one-to-many relationship, the foreign key on the object will be set and the object pointer for the other side of the relationship will be set to the new value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (System.Data.Linq.RefreshMode mode, System.Collections.IEnumerable entities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(valuetype System.Data.Linq.RefreshMode mode, class System.Collections.IEnumerable entities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh (mode As RefreshMode, entities As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(System::Data::Linq::RefreshMode mode, System::Collections::IEnumerable ^ entities);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Data.Linq.RefreshMode" />
        <Parameter Name="entities" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="mode">
          <span data-ttu-id="805b4-338">Valor que especifica cómo deben controlarse los conflictos de simultaneidad optimista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-338">A value that specifies how optimistic concurrency conflicts are handled.</span>
          </span>
        </param>
        <param name="entities">
          <span data-ttu-id="805b4-339">Colección de entidades que se van a actualizar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-339">The collection of entities to be refreshed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="805b4-340">Actualiza una colección de objetos entidad según el modo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-340">Refreshes a collection of entity objects according to the specified mode.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (System.Data.Linq.RefreshMode mode, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(valuetype System.Data.Linq.RefreshMode mode, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh (mode As RefreshMode, entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(System::Data::Linq::RefreshMode mode, System::Object ^ entity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Data.Linq.RefreshMode" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="mode">
          <span data-ttu-id="805b4-341">Valor que especifica cómo deben controlarse los conflictos de simultaneidad optimista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-341">A value that specifies how optimistic concurrency conflicts are handled.</span>
          </span>
        </param>
        <param name="entity">
          <span data-ttu-id="805b4-342">Objeto que se va a actualizar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-342">The object to be refreshed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="805b4-343">Actualiza un objeto entidad según el modo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-343">Refreshes an entity object according to the specified mode.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (System.Data.Linq.RefreshMode mode, params object[] entities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(valuetype System.Data.Linq.RefreshMode mode, object[] entities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh (mode As RefreshMode, ParamArray entities As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(System::Data::Linq::RefreshMode mode, ... cli::array &lt;System::Object ^&gt; ^ entities);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Data.Linq.RefreshMode" />
        <Parameter Name="entities" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mode">
          <span data-ttu-id="805b4-344">Valor que especifica cómo deben controlarse los conflictos de simultaneidad optimista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-344">A value that specifies how optimistic concurrency conflicts are handled.</span>
          </span>
        </param>
        <param name="entities">
          <span data-ttu-id="805b4-345">Matriz de objetos entidad que se van a actualizar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-345">The array of entity objects to be refreshed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="805b4-346">Actualiza una matriz de objetos entidad según el modo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-346">Refreshes an array of entity objects according to the specified mode.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SubmitChanges">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="805b4-347">Calcula el conjunto de objetos modificados que se va a insertar, actualizar o eliminar, y ejecuta los comandos adecuados para implementar los cambios en la base de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-347">Computes the set of modified objects to be inserted, updated, or deleted, and executes the appropriate commands to implement the changes to the database.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805b4-348">Si no hay métodos de invalidación para insert, update o delete, <xref:System.Data.Linq.DataContext.SubmitChanges%2A> ejecuta estos métodos en lugar del predeterminado [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] comandos.</span><span class="sxs-lookup"><span data-stu-id="805b4-348">If override methods are present for insert, update, or delete, <xref:System.Data.Linq.DataContext.SubmitChanges%2A> executes these methods instead of the default [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] commands.</span></span>  
  
 <span data-ttu-id="805b4-349"><xref:System.Data.Linq.DataContext.SubmitChanges%2A> inicia una transacción y se deshará si se produce una excepción mientras <xref:System.Data.Linq.DataContext.SubmitChanges%2A> se está ejecutando.</span><span class="sxs-lookup"><span data-stu-id="805b4-349"><xref:System.Data.Linq.DataContext.SubmitChanges%2A> starts a transaction and will roll back if an exception occurs while <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is executing.</span></span> <span data-ttu-id="805b4-350">Sin embargo, esto no se revierten los cambios en la memoria o registrado por el <xref:System.Data.Linq.DataContext>; deberán esos cambios se revierta manualmente.</span><span class="sxs-lookup"><span data-stu-id="805b4-350">However, this does not roll back the changes in memory or tracked by the <xref:System.Data.Linq.DataContext>; those changes will need to be rolled back manually.</span></span> <span data-ttu-id="805b4-351">Puede empezar con una nueva instancia de la <xref:System.Data.Linq.DataContext> si los cambios en la memoria que se van a descartar.</span><span class="sxs-lookup"><span data-stu-id="805b4-351">You can start with a new instance of the <xref:System.Data.Linq.DataContext> if the changes in memory are to be discarded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SubmitChanges">
      <MemberSignature Language="C#" Value="public void SubmitChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SubmitChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.SubmitChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub SubmitChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SubmitChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="805b4-352">Calcula el conjunto de objetos modificados que se va a insertar, actualizar o eliminar, y ejecuta los comandos adecuados para implementar los cambios en la base de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-352">Computes the set of modified objects to be inserted, updated, or deleted, and executes the appropriate commands to implement the changes to the database.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805b4-353">Si no hay métodos de invalidación para insert, update o delete, <xref:System.Data.Linq.DataContext.SubmitChanges%2A> ejecuta estos métodos en lugar del predeterminado [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] comandos.</span><span class="sxs-lookup"><span data-stu-id="805b4-353">If override methods are present for insert, update, or delete, <xref:System.Data.Linq.DataContext.SubmitChanges%2A> executes these methods instead of the default [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] commands.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmitChanges">
      <MemberSignature Language="C#" Value="public virtual void SubmitChanges (System.Data.Linq.ConflictMode failureMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SubmitChanges(valuetype System.Data.Linq.ConflictMode failureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.SubmitChanges(System.Data.Linq.ConflictMode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SubmitChanges (failureMode As ConflictMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SubmitChanges(System::Data::Linq::ConflictMode failureMode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="failureMode" Type="System.Data.Linq.ConflictMode" />
      </Parameters>
      <Docs>
        <param name="failureMode">
          <span data-ttu-id="805b4-354">Acción que se va a realizar si se produce un error en el envío.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-354">The action to be taken if the submission fails.</span>
          </span>
          <span data-ttu-id="805b4-355">Los argumentos válidos son los siguientes:</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-355">Valid arguments are as follows:</span>
          </span>
          <see cref="F:System.Data.Linq.ConflictMode.FailOnFirstConflict" />
          <see cref="F:System.Data.Linq.ConflictMode.ContinueOnConflict" />
        </param>
        <summary>
          <span data-ttu-id="805b4-356">Envía a la base de datos subyacente los cambios realizados en los objetos recuperados y especifica la acción que se va a emprender si se produce un error en el envío.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-356">Sends changes that were made to retrieved objects to the underlying database, and specifies the action to be taken if the submission fails.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805b4-357">Modo de error predeterminado es <xref:System.Data.Linq.ConflictMode.FailOnFirstConflict>.</span><span class="sxs-lookup"><span data-stu-id="805b4-357">Default failure mode is <xref:System.Data.Linq.ConflictMode.FailOnFirstConflict>.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.ConflictModeEnumeration#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.conflictmodeenumeration/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.ConflictModeEnumeration#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.conflictmodeenumeration/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbTransaction ^ Transaction { System::Data::Common::DbTransaction ^ get(); void set(System::Data::Common::DbTransaction ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="805b4-358">Obtiene o establece una transacción local que [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] va a utilizar para obtener acceso a la base de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-358">Gets or sets a local transaction for the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] to use to access the database.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="805b4-359">Objeto de transacción utilizado por el objeto <see cref="T:System.Data.Linq.DataContext" /> al ejecutar consultas y comandos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-359">The transaction object used by the <see cref="T:System.Data.Linq.DataContext" /> when executing queries and commands.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805b4-360">El escenario principal para esta propiedad es la interoperabilidad con relacional [!INCLUDE[vstecado](~/includes/vstecado-md.md)] código.</span><span class="sxs-lookup"><span data-stu-id="805b4-360">The primary scenario for this property is interoperability with relational [!INCLUDE[vstecado](~/includes/vstecado-md.md)] code.</span></span> <span data-ttu-id="805b4-361">Por ejemplo, utilizar esta propiedad al escribir el suyo propio `Create` / `Update` / `Delete` métodos para establecer el `Transaction` propiedad en la propiedad ADO `Command` objeto.</span><span class="sxs-lookup"><span data-stu-id="805b4-361">For example, use this property when you write your own `Create`/`Update`/`Delete` methods to set the `Transaction` property on the ADO `Command` object.</span></span>  
  
 <span data-ttu-id="805b4-362">Tenga en cuenta lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="805b4-362">Note the following:</span></span>  
  
-   <span data-ttu-id="805b4-363">Si esta propiedad no se ha establecido explícitamente, el captador devuelve null.</span><span class="sxs-lookup"><span data-stu-id="805b4-363">If this property has not been explicitly set, the getter returns null.</span></span>  
  
-   <span data-ttu-id="805b4-364">Si el código se ejecuta en un <xref:System.Transactions.Transaction> contexto, al establecer esta propiedad produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="805b4-364">If the code is executing in a <xref:System.Transactions.Transaction> context, setting this property throws an exception.</span></span>  
  
-   <span data-ttu-id="805b4-365">Si esta propiedad está establecida y un nuevo <xref:System.Transactions.Transaction> está abierto, se produce una excepción cuando se ejecuta una consulta o una actualización.</span><span class="sxs-lookup"><span data-stu-id="805b4-365">If this property is set and a new <xref:System.Transactions.Transaction> is opened, an exception is thrown when a query or update is executed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Translate">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="805b4-366">Convierte una interfaz <see cref="T:System.Data.IDataReader" /> existente en objetos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-366">Converts an existing <see cref="T:System.Data.IDataReader" /> to objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="805b4-367">Cada fila de la <xref:System.Data.IDataReader> se convierte en un objeto en el <xref:System.Collections.Generic.IEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="805b4-367">Each row in the <xref:System.Data.IDataReader> is converted to an object in the <xref:System.Collections.Generic.IEnumerable%601>.</span></span>  
  
```  
public IEnumerable<T> Translate<T>(IDataReader reader) {}  
```  
  
 <span data-ttu-id="805b4-368">Descripción: Este método se usa para convertir una existente <xref:System.Data.Common.DbDataReader> a objetos.</span><span class="sxs-lookup"><span data-stu-id="805b4-368">Description: This method is used to convert an existing <xref:System.Data.Common.DbDataReader> to objects.</span></span> <span data-ttu-id="805b4-369">Cada fila de la <xref:System.Data.Common.DbDataReader> se convierte en un objeto en el <xref:System.Collections.Generic.IEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="805b4-369">Each row in the <xref:System.Data.Common.DbDataReader> is converted to an object in the <xref:System.Collections.Generic.IEnumerable%601>.</span></span>  
  
 <span data-ttu-id="805b4-370">**Parámetros genéricos:**</span><span class="sxs-lookup"><span data-stu-id="805b4-370">**Generic parameters:**</span></span>  
  
 <span data-ttu-id="805b4-371">`T`: Permite ver <xref:System.Data.Linq.DataContext.ExecuteQuery%2A>.</span><span class="sxs-lookup"><span data-stu-id="805b4-371">`T`: See <xref:System.Data.Linq.DataContext.ExecuteQuery%2A>.</span></span>  
  
 <span data-ttu-id="805b4-372">**Parámetros:**</span><span class="sxs-lookup"><span data-stu-id="805b4-372">**Parameters:**</span></span>  
  
 <span data-ttu-id="805b4-373">`Query`: Vea la descripción del comando bajo <xref:System.Data.Linq.DataContext.ExecuteCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="805b4-373">`Query`: See the description for command under <xref:System.Data.Linq.DataContext.ExecuteCommand%2A>.</span></span>  
  
 <span data-ttu-id="805b4-374">`Parameters`: Vea la descripción de parámetros en <xref:System.Data.Linq.DataContext.ExecuteCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="805b4-374">`Parameters`: See the description for parameters under <xref:System.Data.Linq.DataContext.ExecuteCommand%2A>.</span></span>  
  
 <span data-ttu-id="805b4-375">**Tipo de valor devuelto:**</span><span class="sxs-lookup"><span data-stu-id="805b4-375">**Return type:**</span></span>  
  
 <span data-ttu-id="805b4-376"><xref:System.Collections.Generic.IEnumerable%601>: colección de objetos devueltos por la conversión.</span><span class="sxs-lookup"><span data-stu-id="805b4-376"><xref:System.Collections.Generic.IEnumerable%601>: collection of objects returned by the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public System.Data.Linq.IMultipleResults Translate (System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Linq.IMultipleResults Translate(class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Translate(System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Translate (reader As DbDataReader) As IMultipleResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Linq::IMultipleResults ^ Translate(System::Data::Common::DbDataReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.IMultipleResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="805b4-377">
            <see cref="T:System.Data.IDataReader" /> que va a convertirse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-377">The <see cref="T:System.Data.IDataReader" /> to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="805b4-378">Convierte una interfaz <see cref="T:System.Data.Common.DbDataReader" /> existente en objetos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-378">Converts an existing <see cref="T:System.Data.Common.DbDataReader" /> to objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="805b4-379">Lista de objetos devueltos por la conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-379">A list of objects returned by the conversion.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Translate (Type elementType, System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Translate(class System.Type elementType, class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Translate (elementType As Type, reader As DbDataReader) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Translate(Type ^ elementType, System::Data::Common::DbDataReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
      </Parameters>
      <Docs>
        <param name="elementType">
          <span data-ttu-id="805b4-380">Tipo de <see cref="T:System.Collections.Generic.IEnumerable`1" /> que se va a devolver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-380">The type of the <see cref="T:System.Collections.Generic.IEnumerable`1" /> to be returned.</span>
          </span>
          <span data-ttu-id="805b4-381">El algoritmo para hacer coincidir las columnas en el resultado con los campos y propiedades en el objeto funciona de la siguiente manera:</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-381">The algorithm for matching columns in the result to fields and properties in the object works as follows:</span>
          </span>
          <span data-ttu-id="805b4-382">Si una propiedad o un campo está asignado a un nombre de columna concreto, se espera ese nombre de columna en el conjunto de resultados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-382">If a field or property is mapped to a particular column name, that column name is expected in the resultset.</span>
          </span>
          <span data-ttu-id="805b4-383">Si una propiedad o un campo no está asignado, se espera una columna con el mismo nombre que la propiedad o el campo en el conjunto de resultados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-383">If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.</span>
          </span>
          <span data-ttu-id="805b4-384">La comparación se realiza buscando primero una coincidencia con distinción entre mayúsculas y minúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-384">The comparison is performed by looking for a case-sensitive match first.</span>
          </span>
          <span data-ttu-id="805b4-385">Si no se encuentra ninguna coincidencia de este tipo, se buscará una coincidencia sin distinción entre mayúsculas y minúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-385">If this match is not found, a subsequent search is occurs for a case-insensitive match.</span>
          </span>
          <span data-ttu-id="805b4-386">La consulta debe devolver todos los campos y propiedades del objeto de los que se ha realizado un seguimiento (excepto los que se cargan de manera aplazada) cuando se cumplen todas las condiciones siguientes:</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-386">The query must return all the tracked fields and properties of the object (except those that are loaded on a deferred basis) when all the following conditions are true:</span>
          </span>
          <span data-ttu-id="805b4-387">
            <c>T</c> es una entidad de la que <see cref="T:System.Data.Linq.DataContext" /> realiza un seguimiento explícito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-387">
              <c>T</c> is an entity explicitly tracked by the <see cref="T:System.Data.Linq.DataContext" />.</span>
          </span>
          <span data-ttu-id="805b4-388">
            <see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /> es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-388">
              <see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /> is <see langword="true" />.</span>
          </span>
          <span data-ttu-id="805b4-389">La entidad tiene una clave principal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-389">The entity has a primary key.</span>
          </span>
          <span data-ttu-id="805b4-390">De lo contrario, se produce una excepción.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-390">Otherwise an exception is thrown.</span>
          </span>
        </param>
        <param name="reader">
          <span data-ttu-id="805b4-391">
            <see cref="T:System.Data.IDataReader" /> que va a convertirse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-391">The <see cref="T:System.Data.IDataReader" /> to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="805b4-392">Convierte una interfaz <see cref="T:System.Data.Common.DbDataReader" /> existente en objetos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-392">Converts an existing <see cref="T:System.Data.Common.DbDataReader" /> to objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="805b4-393">Lista de objetos devueltos por la conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-393">A list of objects returned by the conversion.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TResult&gt; Translate&lt;TResult&gt; (System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; Translate&lt;TResult&gt;(class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Translate``1(System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Translate(Of TResult) (reader As DbDataReader) As IEnumerable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Collections::Generic::IEnumerable&lt;TResult&gt; ^ Translate(System::Data::Common::DbDataReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="805b4-394">Tipo de <see cref="T:System.Collections.Generic.IEnumerable`1" /> que se va a devolver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-394">The type of the <see cref="T:System.Collections.Generic.IEnumerable`1" /> to be returned.</span>
          </span>
        </typeparam>
        <param name="reader">
          <span data-ttu-id="805b4-395">
            <see cref="T:System.Data.IDataReader" /> que va a convertirse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-395">The <see cref="T:System.Data.IDataReader" /> to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="805b4-396">Convierte una interfaz <see cref="T:System.Data.Common.DbDataReader" /> existente en objetos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-396">Converts an existing <see cref="T:System.Data.Common.DbDataReader" /> to objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="805b4-397">Colección de objetos devueltos por la conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="805b4-397">A collection of objects returned by the conversion.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>