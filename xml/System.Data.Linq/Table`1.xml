<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Table`1.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58f2e2c57717f41b8415d2d08b9d484756b3b8509.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8f2e2c57717f41b8415d2d08b9d484756b3b8509</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>The type of the data in the table.</source>
          <target state="translated">Tipo de datos de la tabla.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.Table`1">
          <source>Represents a table for a particular type in the underlying database.</source>
          <target state="translated">Representa una tabla para un tipo determinado en la base de datos subyacente.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>This class enables you to query over the table and add, remove, and attach objects.</source>
          <target state="translated">Esta clase permite consultar en la tabla y agregar, quitar y adjuntar objetos.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>An application can access a <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance via <ph id="ph2">&lt;xref:System.Data.Linq.DataContext.GetTable%2A&gt;</ph> or by using a strongly typed property for the strongly typed <ph id="ph3">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
          <target state="translated">Una aplicación puede tener acceso a un <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> a través de la instancia <ph id="ph2">&lt;xref:System.Data.Linq.DataContext.GetTable%2A&gt;</ph> o usando una propiedad fuertemente tipada para fuertemente tipado <ph id="ph3">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>That is, when the designer generates a DataContext object, it generates properties to represent each Table.</source>
          <target state="translated">Es decir, cuando el diseñador genera un objeto DataContext, genera propiedades para representar cada tabla.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>For example:</source>
          <target state="translated">Por ejemplo:</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>For this strongly typed DataContext, you can access the Users property to get <ph id="ph1">`Table&lt;User&gt;`</ph>.</source>
          <target state="translated">Para este DataContext fuertemente tipado, puede tener acceso a la propiedad de los usuarios a obtener <ph id="ph1">`Table&lt;User&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.Table`1">
          <source>Attaches an entity to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph>.</source>
          <target state="translated">Adjunta una entidad a <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>Use the <ph id="ph1">`Attach`</ph> methods with entities that have been created in one <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>, serialized to a client, and then deserialized back (with the intention to perform an update or delete operation).</source>
          <target state="translated">Use la <ph id="ph1">`Attach`</ph> métodos con entidades que se han creado en una <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>serializado en un cliente y, a continuación, deserializa (con la intención de realizar una actualización o la operación de eliminación).</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>recuperación de datos y operaciones CUD en aplicaciones de N niveles (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>Do not try to <ph id="ph1">`Attach`</ph> an entity that has not been detached through serialization.</source>
          <target state="translated">No intente <ph id="ph1">`Attach`</ph> una entidad que no se ha desasociado mediante la serialización.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>Entities that have not been serialized still maintain associations with deferred loaders that can cause unexpected results if the entity becomes tracked by a second data context.</source>
          <target state="translated">Las entidades que no se han serializado mantienen asociaciones con cargadores diferidos que pueden producir resultados inesperados si un segundo contexto de datos realiza un seguimiento de la entidad.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>When a new entity is attached, deferred loaders for any child collections (for example, <ph id="ph1">`EntitySet`</ph> collections of entities from associated tables) are initialized.</source>
          <target state="translated">Cuando se adjunta una entidad nueva, difieran cargadores de las colecciones secundarias (por ejemplo, <ph id="ph1">`EntitySet`</ph> colecciones de entidades de tablas asociadas) se inicializan.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>When <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called, members of the child collections are put into an <ph id="ph2">`Unmodified`</ph> state.</source>
          <target state="translated">Cuando <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> se llama, los miembros del elemento secundario colecciones se colocan en un <ph id="ph2">`Unmodified`</ph> estado.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>To update members of a child collection, you must explicitly call <ph id="ph1">`Attach`</ph> and specify that entity.</source>
          <target state="translated">Para actualizar los miembros de una colección secundaria, debe llamar explícitamente a <ph id="ph1">`Attach`</ph> y especificar esa entidad.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source><ph id="ph1">`Attach`</ph> attaches all entities in the object graph of the provided object.</source>
          <target state="translated"><ph id="ph1">`Attach`</ph> asocia todas las entidades en el gráfico de objetos del objeto proporcionado.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>For example, the following C# code:</source>
          <target state="translated">Por ejemplo, el siguiente código de C#:</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>The equivalent Visual Basic code is:</source>
          <target state="translated">Es el código equivalente en Visual Basic:</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>Calling <ph id="ph1">`Attach`</ph> on <ph id="ph2">`Employee`</ph> attaches employee, master, and child, because the <ph id="ph3">`Employee`</ph> has relationships to both master and child.</source>
          <target state="translated">Al llamar a <ph id="ph1">`Attach`</ph> en <ph id="ph2">`Employee`</ph> adjunta empleado, principal y secundarios, porque el <ph id="ph3">`Employee`</ph> tiene relaciones con maestro y elemento secundario.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>You must explicitly call <ph id="ph1">`InsertOnSubmit`</ph> to change the state from attached to inserted.</source>
          <target state="translated">Debe llamar explícitamente a <ph id="ph1">`InsertOnSubmit`</ph> cambiar el estado de adjunto a insertado.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>The original values of the entity to be attached.</source>
          <target state="translated">Valores originales de la entidad que se va a asociar.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>Attaches a disconnected or "detached" entity to a new <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> when original values are required for optimistic concurrency checks.</source>
          <target state="translated">Adjunta una entidad desconectada o "separada" a un nuevo objeto <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> cuando se requieren los valores originales para las comprobaciones de simultaneidad optimista.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>Use the <ph id="ph1">`Attach`</ph> methods with entities that have been created in one <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>, serialized to a client, and then deserialized back to perform an update or delete operation.</source>
          <target state="translated">Use la <ph id="ph1">`Attach`</ph> métodos con entidades que se han creado en una <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>serializado en un cliente y, a continuación, deserializa atrás para realizar una actualización o la operación de eliminación.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>Because the new <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> has no way of tracking what the original values were for a disconnected entity, the client is responsible for supplying those values.</source>
          <target state="translated">Dado que el nuevo <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> no tiene ninguna manera de realizar el seguimiento ¿cuáles fueron los valores originales de una entidad desconectada, el cliente es responsable de proporcionar esos valores.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>In this version of <ph id="ph1">&lt;xref:System.Data.Linq.Table%601.Attach%2A&gt;</ph>, the entity is assumed to be in its original value state.</source>
          <target state="translated">En esta versión de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601.Attach%2A&gt;</ph>, la entidad se supone que en su estado original de valor.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>After calling this method, you can then update its fields, for example with additional data sent from the client.</source>
          <target state="translated">Después de llamar a este método, se pueden actualizar sus campos, por ejemplo con datos adicionales enviados desde el cliente.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>When a new entity is attached, deferred loaders for any child collections (for example, <ph id="ph1">`EntitySet`</ph> collections of entities from associated tables) are initialized.</source>
          <target state="translated">Cuando se adjunta una entidad nueva, difieran cargadores de las colecciones secundarias (por ejemplo, <ph id="ph1">`EntitySet`</ph> colecciones de entidades de tablas asociadas) se inicializan.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>When <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called, members of the child collections are put into an <ph id="ph2">`Unmodified`</ph> state.</source>
          <target state="translated">Cuando <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> se llama, los miembros del elemento secundario colecciones se colocan en un <ph id="ph2">`Unmodified`</ph> estado.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>To update members of a child collection, you must explicitly call <ph id="ph1">`Attach`</ph> and specify that entity.</source>
          <target state="translated">Para actualizar los miembros de una colección secundaria, debe llamar explícitamente a <ph id="ph1">`Attach`</ph> y especificar esa entidad.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>recuperación de datos y operaciones CUD en aplicaciones de N niveles (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>Do not try to <ph id="ph1">`Attach`</ph> an entity that has not been detached through serialization.</source>
          <target state="translated">No intente <ph id="ph1">`Attach`</ph> una entidad que no se ha desasociado mediante la serialización.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0)">
          <source>Entities that have not been serialized still maintain associations with deferred loaders that can cause unexpected results if the entity becomes tracked by a second data context.</source>
          <target state="translated">Las entidades que no se han serializado mantienen asociaciones con cargadores diferidos que pueden producir resultados inesperados si un segundo contexto de datos realiza un seguimiento de la entidad.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.Attach(`0,System.Boolean)">
          <source>The entity to be attached.</source>
          <target state="translated">Entidad que se va a asociar.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.Attach(`0,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to attach the entity as modified; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to attach the entity as unmodified.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para adjuntar la entidad como modificada; <ph id="ph2">&lt;see langword="false" /&gt;</ph> para adjuntar la entidad como sin modificar.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.Attach(`0,System.Boolean)">
          <source>Attaches an entity to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state.</source>
          <target state="translated">Adjunta una entidad a <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> en un estado modificado o no modificado.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,System.Boolean)">
          <source>If attaching <bpt id="p1">*</bpt>as modified<ept id="p1">*</ept>, the entity must either declare a version member or must not participate in update conflict checking.</source>
          <target state="translated">Si se asocia <bpt id="p1">*</bpt>como modificada<ept id="p1">*</ept>, deberá declarar un miembro de la versión de la entidad o no debe participar en la comprobación de conflicto de actualización.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,System.Boolean)">
          <source>When a new entity is attached, deferred loaders for any child collections (for example, <ph id="ph1">`EntitySet`</ph> collections of entities from associated tables) are initialized.</source>
          <target state="translated">Cuando se adjunta una entidad nueva, difieran cargadores de las colecciones secundarias (por ejemplo, <ph id="ph1">`EntitySet`</ph> colecciones de entidades de tablas asociadas) se inicializan.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,System.Boolean)">
          <source>When <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called, members of the child collections are put into an <ph id="ph2">`Unmodified`</ph> state.</source>
          <target state="translated">Cuando <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> se llama, los miembros del elemento secundario colecciones se colocan en un <ph id="ph2">`Unmodified`</ph> estado.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,System.Boolean)">
          <source>To update members of a child collection, you must explicitly call <ph id="ph1">`Attach`</ph> and specify that entity.</source>
          <target state="translated">Para actualizar los miembros de una colección secundaria, debe llamar explícitamente a <ph id="ph1">`Attach`</ph> y especificar esa entidad.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.Attach(`0,`0)">
          <source>The entity to be attached.</source>
          <target state="translated">Entidad que se va a asociar.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.Attach(`0,`0)">
          <source>An instance of the same entity type with data members that contain the original values.</source>
          <target state="translated">Instancia del mismo tipo de entidad con miembros de datos que contienen los valores originales.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.Attach(`0,`0)">
          <source>Attaches an entity to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state by specifying both the entity and its original state.</source>
          <target state="translated">Adjunta una entidad a <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> en un estado modificado o no modificado especificando la entidad y su estado original.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,`0)">
          <source>In the following example, the <ph id="ph1">`Customer`</ph> object is already correctly configured.</source>
          <target state="translated">En el ejemplo siguiente, la <ph id="ph1">`Customer`</ph> objeto ya está configurado correctamente.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,`0)">
          <source>You can call <ph id="ph1">`Attach`</ph> without having to replay the updates.</source>
          <target state="translated">Puede llamar a <ph id="ph1">`Attach`</ph> sin tener que reproducir las actualizaciones.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,`0)">
          <source>When a new entity is attached, deferred loaders for any child collections (for example, <ph id="ph1">`EntitySet`</ph> collections of entities from associated tables) are initialized.</source>
          <target state="translated">Cuando se adjunta una entidad nueva, difieran cargadores de las colecciones secundarias (por ejemplo, <ph id="ph1">`EntitySet`</ph> colecciones de entidades de tablas asociadas) se inicializan.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,`0)">
          <source>When <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called, members of the child collections are put into an <ph id="ph2">`Unmodified`</ph> state.</source>
          <target state="translated">Cuando <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> se llama, los miembros del elemento secundario colecciones se colocan en un <ph id="ph2">`Unmodified`</ph> estado.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.Attach(`0,`0)">
          <source>To update members of a child collection, you must explicitly call <ph id="ph1">`Attach`</ph> and specify that entity.</source>
          <target state="translated">Para actualizar los miembros de una colección secundaria, debe llamar explícitamente a <ph id="ph1">`Attach`</ph> y especificar esa entidad.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.Table`1">
          <source>Attaches all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state.</source>
          <target state="translated">Asocia todas las entidades de una colección al objeto <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> en un estado modificado o no modificado.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>If attaching as modified, the entity must either declare a version member or must not participate in update conflict checking.</source>
          <target state="translated">Si se adjunta como modificada, la entidad deberá declarar a un miembro de la versión o no debe participar en la comprobación de conflicto de actualización.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>When a new entity is attached, deferred loaders for any child collections (for example, <ph id="ph1">`EntitySet`</ph> collections of entities from associated tables) are initialized.</source>
          <target state="translated">Cuando se adjunta una entidad nueva, difieran cargadores de las colecciones secundarias (por ejemplo, <ph id="ph1">`EntitySet`</ph> colecciones de entidades de tablas asociadas) se inicializan.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>When <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called, members of the child collections are put into an <ph id="ph2">`Unmodified`</ph> state.</source>
          <target state="translated">Cuando <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> se llama, los miembros del elemento secundario colecciones se colocan en un <ph id="ph2">`Unmodified`</ph> estado.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>To update members of a child collection, you must explicitly call <ph id="ph1">`Attach`</ph> and specify that entity.</source>
          <target state="translated">Para actualizar los miembros de una colección secundaria, debe llamar explícitamente a <ph id="ph1">`Attach`</ph> y especificar esa entidad.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.Table`1">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>recuperación de datos y operaciones CUD en aplicaciones de N niveles (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of entities to attach.</source>
          <target state="translated">Tipo de entidades que van a asociarse.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The collection of entities.</source>
          <target state="translated">Colección de entidades.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Attaches all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state.</source>
          <target state="translated">Asocia todas las entidades de una colección al objeto <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> en un estado modificado o no modificado.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})">
          <source>This method attaches all entities of a collection to a new <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
          <target state="translated">Este método asocia todas las entidades de una colección a un nuevo <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})">
          <source>When a new entity is attached, deferred loaders for any child collections (for example, <ph id="ph1">`EntitySet`</ph> collections of entities from associated tables) are initialized.</source>
          <target state="translated">Cuando se adjunta una entidad nueva, difieran cargadores de las colecciones secundarias (por ejemplo, <ph id="ph1">`EntitySet`</ph> colecciones de entidades de tablas asociadas) se inicializan.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})">
          <source>When <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called, members of the child collections are put into an <ph id="ph2">`Unmodified`</ph> state.</source>
          <target state="translated">Cuando <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> se llama, los miembros del elemento secundario colecciones se colocan en un <ph id="ph2">`Unmodified`</ph> estado.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})">
          <source>To update members of a child collection, you must explicitly call <ph id="ph1">`Attach`</ph> and specify that entity.</source>
          <target state="translated">Para actualizar los miembros de una colección secundaria, debe llamar explícitamente a <ph id="ph1">`Attach`</ph> y especificar esa entidad.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0})">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>recuperación de datos y operaciones CUD en aplicaciones de N niveles (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>The type of entities to attach.</source>
          <target state="translated">Tipo de entidades que van a asociarse.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>The collection of entities.</source>
          <target state="translated">Colección de entidades.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object has a timestamp or RowVersion member; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if original values are being used for the optimistic concurrency check.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el objeto tiene una marca de tiempo o un miembro RowVersion; es <ph id="ph2">&lt;see langword="false" /&gt;</ph> si se usan los valores originales para la comprobación de simultaneidad optimista.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>Attaches all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state.</source>
          <target state="translated">Asocia todas las entidades de una colección al objeto <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> en un estado modificado o no modificado.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>This method attaches all entities of a collection to the <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> in either a <bpt id="p1">*</bpt>modified<ept id="p1">*</ept> or <bpt id="p2">*</bpt>unmodified<ept id="p2">*</ept> state.</source>
          <target state="translated">Este método asocia todas las entidades de una colección para el <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> en la vista una <bpt id="p1">*</bpt>modificar<ept id="p1">*</ept> o <bpt id="p2">*</bpt>sin modificar<ept id="p2">*</ept> estado.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>If attaching as modified, the entity must either declare a version member or must not participate in update conflict checking.</source>
          <target state="translated">Si se adjunta como modificada, la entidad deberá declarar a un miembro de la versión o no debe participar en la comprobación de conflicto de actualización.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>If attaching as unmodified, the entity is assumed to represent the original value.</source>
          <target state="translated">Si se asocia sin modificar, se supone que la entidad para representar el valor original.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>After calling this method, the entity's fields can be modified with other information from the client before <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called.</source>
          <target state="translated">Después de llamar a este método, se pueden modificar los campos de entidad con otra información del cliente antes de <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> se llama.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>recuperación de datos y operaciones CUD en aplicaciones de N niveles (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>When a new entity is attached, deferred loaders for any child collections (for example, <ph id="ph1">`EntitySet`</ph> collections of entities from associated tables) are initialized.</source>
          <target state="translated">Cuando se adjunta una entidad nueva, difieran cargadores de las colecciones secundarias (por ejemplo, <ph id="ph1">`EntitySet`</ph> colecciones de entidades de tablas asociadas) se inicializan.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>When <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called, members of the child collections are put into an <ph id="ph2">`Unmodified`</ph> state.</source>
          <target state="translated">Cuando <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> se llama, los miembros del elemento secundario colecciones se colocan en un <ph id="ph2">`Unmodified`</ph> estado.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>To update members of a child collection, you must explicitly call <ph id="ph1">`Attach`</ph> and specify that entity.</source>
          <target state="translated">Para actualizar los miembros de una colección secundaria, debe llamar explícitamente a <ph id="ph1">`Attach`</ph> y especificar esa entidad.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>The following example shows how you can update an <ph id="ph1">`Order`</ph> object on a different <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph> instance.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo actualizar una <ph id="ph1">`Order`</ph> objeto en otro <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph> instancia.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>The example assumes that you have a connection to a database and have made a <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> file for it (in this case, the Northwind sample database).</source>
          <target state="translated">En el ejemplo se da por supuesto que tiene una conexión a una base de datos y ha realizado un <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> archivo para ella (en este caso, la base de datos de ejemplo Northwind).</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>In the following example, an entity object to be attached has a foreign key relation with another object and is stored in the cache but not attached.</source>
          <target state="translated">En el ejemplo siguiente, un objeto de entidad que se adjuntará tiene una relación de clave externa con otro objeto y se almacenan en la caché pero no asociado.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>When you call <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>, the <ph id="ph2">`ChangeProcessor`</ph> adds an <ph id="ph3">`Insert`</ph> operation for all the foreign key objects.</source>
          <target state="translated">Cuando se llama a <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>, <ph id="ph2">`ChangeProcessor`</ph> agrega un <ph id="ph3">`Insert`</ph> operación para todos los objetos de clave externos.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>This is a side-effect when an entity instance is re-used in a different <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> instance.</source>
          <target state="translated">Esto es un efecto secundario cuando se vuelve a usar en otra instancia de una entidad <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> instancia.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>For this reason, <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> does not support re-use of objects.</source>
          <target state="translated">Por esta razón, <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> no es compatible con la reutilización de objetos.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>The following example shows a scenario in which Customer A has canceled all orders and Customer B has taken ownership of them.</source>
          <target state="translated">En el ejemplo siguiente se muestra un escenario en que cliente A ha cancelado todos los pedidos y del usuario B ha tomado posesión de ellos.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.AttachAll``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
          <source>You can attach all orders of Customer A at the same time.</source>
          <target state="translated">Puede asociar todos los pedidos del cliente al mismo tiempo.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Table`1.Context">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> that has been used to retrieve this <ph id="ph2">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph>.</source>
          <target state="translated">Obtiene el objeto <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> utilizado para recuperar este <ph id="ph2">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.Context">
          <source>The data context that has been used to retrieve this table.</source>
          <target state="translated">Contexto de datos que se ha usado para recuperar esta tabla.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements to delete.</source>
          <target state="translated">Tipo de los elementos que se van a eliminar.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The entities to delete.</source>
          <target state="translated">Entidades que se van a eliminar.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Puts all entities from the collection into a <ph id="ph1">&lt;see langword="pending delete" /&gt;</ph> state.</source>
          <target state="translated">Coloca todas las entidades de la colección en un estado <ph id="ph1">&lt;see langword="pending delete" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Entities that are put into the pending delete state with this method do not disappear from query results until after <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called.</source>
          <target state="translated">Las entidades que se colocan en el estado de eliminación pendiente con este método no desaparecen de resultados de la consulta hasta después de <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> se llama.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Disconnected entities must be attached before they can be deleted.</source>
          <target state="translated">Las entidades desconectadas deben estar adjuntas para que se pueden eliminar.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>recuperación de datos y operaciones CUD en aplicaciones de N niveles (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The following C# snippet shows one use for this method:</source>
          <target state="translated">El siguiente fragmento de C# muestra un uso de este método:</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>In Visual Basic:</source>
          <target state="translated">En Visual Basic:</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.DeleteOnSubmit(`0)">
          <source>The entity to be deleted.</source>
          <target state="translated">Entidad que se va a eliminar.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.DeleteOnSubmit(`0)">
          <source>Puts an entity from this table into a <ph id="ph1">&lt;see langword="pending delete" /&gt;</ph> state.</source>
          <target state="translated">Coloca una entidad de esta tabla en un estado <ph id="ph1">&lt;see langword="pending delete" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteOnSubmit(`0)">
          <source>The removed entity does not disappear from the query results until after <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called.</source>
          <target state="translated">La entidad quitada no desaparece de los resultados de la consulta hasta después de <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> se llama.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteOnSubmit(`0)">
          <source>Disconnected entities must first be attached before they can be deleted.</source>
          <target state="translated">Las entidades desconectadas deben asociarse primero para poder eliminar.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteOnSubmit(`0)">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>recuperación de datos y operaciones CUD en aplicaciones de N niveles (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteOnSubmit(`0)">
          <source><ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> does not support or recognize cascade-delete operations.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> no admite ni reconoce las operaciones de eliminación en cascada.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteOnSubmit(`0)">
          <source>If you want to delete a row in a table that has constraints against it, you must either set the <ph id="ph1">`ON DELETE CASCADE`</ph> rule in the foreign-key constraint in the database, or use your own code to first delete the child objects that prevent the parent object from being deleted.</source>
          <target state="translated">Si desea eliminar una fila de una tabla que tiene restricciones, deberá establecer el <ph id="ph1">`ON DELETE CASCADE`</ph> de regla en la restricción de clave externa de la base de datos o utilizar su propio código para eliminar primero los objetos secundarios que impiden que el objeto primario que se va a eliminar.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.DeleteOnSubmit(`0)">
          <source>Otherwise, an exception is thrown.</source>
          <target state="translated">De lo contrario, se inicia una excepción.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetEnumerator">
          <source>Gets an enumerator that iterates through the collection.</source>
          <target state="translated">Obtiene un enumerador que recorre en iteración la colección.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetEnumerator">
          <source>An enumerator that can be used to iterate through the collection.</source>
          <target state="translated">Enumerador que se puede utilizar para recorrer en iteración la colección.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetModifiedMembers(`0)">
          <source>The entity from which to get the array.</source>
          <target state="translated">Entidad de la que se va a obtener la matriz.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetModifiedMembers(`0)">
          <source>Returns an array of modified members that contain their current and original values.</source>
          <target state="translated">Devuelve una matriz de los miembros modificados que contienen sus valores actuales y originales.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetModifiedMembers(`0)">
          <source>An array of modified members that contain their current and original values.</source>
          <target state="translated">Matriz de los miembros modificados que contienen sus valores actuales y originales.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetNewBindingList">
          <source>Creates a new list for binding to a data source.</source>
          <target state="translated">Crea una nueva lista para el enlace a un origen de datos.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetNewBindingList">
          <source>A new <ph id="ph1">&lt;see cref="T:System.ComponentModel.IBindingList" /&gt;</ph> for binding to a data source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.IBindingList" /&gt;</ph> nueva para el enlace a un origen de datos.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.GetNewBindingList">
          <source>The returned list supports standard operations, such as additions, deletions, insertions, and updates, but saves must be explicitly managed by the programmer.</source>
          <target state="translated">La lista devuelta admite operaciones estándares, como adiciones, eliminaciones, inserciones y actualizaciones, pero guarda lo debe administrar explícitamente por el programador.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetOriginalEntityState(`0)">
          <source>The entity whose original state is to be returned.</source>
          <target state="translated">Entidad cuyo estado original se va a devolver.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetOriginalEntityState(`0)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph> instance that contains the original state of the entity.</source>
          <target state="translated">Devuelve una instancia de <ph id="ph1">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph> que contiene el estado original de la entidad.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.GetOriginalEntityState(`0)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph> instance that contains the original state of the entity.</source>
          <target state="translated">Instancia de <ph id="ph1">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph> que contiene el estado original de la entidad.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.GetOriginalEntityState(`0)">
          <source>This method returns the original state of an entity since it was either created or attached to the current <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
          <target state="translated">Este método devuelve el estado original de una entidad desde que se creó o se adjunta al actual <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.GetOriginalEntityState(`0)">
          <source>The original state of an entity that has been serialized and deserialized must be provided by an independent tracking mechanism and supplied when the entity is attached to a new <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
          <target state="translated">El estado original de una entidad que se han de serializar y deserializar debe debe proporciona un mecanismo de seguimiento independiente y suministrarse cuando la entidad se adjunta a un nuevo <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.GetOriginalEntityState(`0)">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>recuperación de datos y operaciones CUD en aplicaciones de N niveles (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.InsertAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The type of the elements to insert.</source>
          <target state="translated">Tipo de elementos que van a insertarse.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.InsertAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The entities to add.</source>
          <target state="translated">Entidades que se van a agregar.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.InsertAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>Adds all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in a <ph id="ph2">&lt;see langword="pending insert" /&gt;</ph> state.</source>
          <target state="translated">Agrega todas las entidades de una colección a <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> en un estado <ph id="ph2">&lt;see langword="pending insert" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.InsertAllOnSubmit``1(System.Collections.Generic.IEnumerable{``0})">
          <source>The added entities will not be in query results until after <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> has been called.</source>
          <target state="translated">Las entidades agregadas no estarán en resultados de la consulta hasta después de <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> se ha llamado.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.InsertOnSubmit(`0)">
          <source>The entity to be added.</source>
          <target state="translated">Entidad que se va a agregar.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.InsertOnSubmit(`0)">
          <source>Adds an entity in a <ph id="ph1">&lt;see langword="pending insert" /&gt;</ph> state to this <ph id="ph2">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph>.</source>
          <target state="translated">Agrega una entidad en un estado <ph id="ph1">&lt;see langword="pending insert" /&gt;</ph> a este <ph id="ph2">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.InsertOnSubmit(`0)">
          <source>The added entity will not appear in query results from this table until after <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> has been called.</source>
          <target state="translated">La entidad agregada no aparecerá en los resultados de la consulta de esta tabla hasta después de <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> se ha llamado.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Table`1.IsReadOnly">
          <source>Gets a value that indicates whether the type of the entities contained in this <ph id="ph1">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph> instance has a primary key.</source>
          <target state="translated">Obtiene un valor que indica si el tipo de las entidades contenidas en esta instancia de <ph id="ph1">&lt;see cref="T:System.Data.Linq.Table`1" /&gt;</ph> tiene una clave principal.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the entity type does not have a primary key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el tipo de entidad no tiene una clave principal; de lo contrario, devuelve <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Collections#Generic#IEnumerable&amp;lt;TEntity&amp;gt;#GetEnumerator">
          <source>Returns an enumerator that iterates through the collection.</source>
          <target state="translated">Devuelve un enumerador que procesa una iteración en la colección.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Collections#Generic#IEnumerable&amp;lt;TEntity&amp;gt;#GetEnumerator">
          <source>An enumerator that can be used to iterate through the collection.</source>
          <target state="translated">Enumerador que se puede utilizar para recorrer en iteración la colección.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through the collection.</source>
          <target state="translated">Devuelve un enumerador que procesa una iteración en la colección.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator that can be used to iterate through the collection.</source>
          <target state="translated">Enumerador que se puede utilizar para recorrer en iteración la colección.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Collections#IEnumerable#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Collections#IEnumerable#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Table`1.System#ComponentModel#IListSource#ContainsListCollection">
          <source>Gets a value that indicates whether the collection is a collection of <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> objects.</source>
          <target state="translated">Obtiene un valor que indica si la colección contiene objetos <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#ComponentModel#IListSource#ContainsListCollection">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the collection is a collection of <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> objects; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la colección es una colección de objetos <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>; en caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#ComponentModel#IListSource#ContainsListCollection">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#ComponentModel#IListSource#ContainsListCollection">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#ComponentModel#IListSource#GetList">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> that can be bound to a data source from an object that does not implement an <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> itself.</source>
          <target state="translated">Devuelve un <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> que se puede enlazar a un origen de datos de un objeto que no implementa un <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> por sí mismo.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#ComponentModel#IListSource#GetList">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> that can be bound to a data source.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> que puede enlazarse a un origen de datos.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#ComponentModel#IListSource#GetList">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#ComponentModel#IListSource#GetList">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.Table`1">
          <source>Allows deserialized entities to be associated with a new instance of a <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> so that they can be updated or deleted from the database.</source>
          <target state="translated">Permite asociar las entidades deserializadas a una nueva instancia de un objeto <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> de modo que se puedan actualizar o eliminar de la base de datos.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object)">
          <source>The entity to be attached.</source>
          <target state="translated">Entidad que se va a asociar.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object)">
          <source>Attaches an entity to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in an unmodified state.</source>
          <target state="translated">Asocia una entidad a <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> en un estado no modificado.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Boolean)">
          <source>The entity to be attached.</source>
          <target state="translated">Entidad que se va a asociar.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to attach the entity as modified; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to attached the entity as unmodified.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para adjuntar la entidad como modificada; <ph id="ph2">&lt;see langword="false" /&gt;</ph> para adjuntar la entidad como sin modificar.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Boolean)">
          <source>Attaches all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state.</source>
          <target state="translated">Asocia todas las entidades de una colección al objeto <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> en un estado modificado o no modificado.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Boolean)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Boolean)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Object)">
          <source>The entity to be attached.</source>
          <target state="translated">Entidad que se va a asociar.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Object)">
          <source>An instance of the same entity type with data members that contain the original values.</source>
          <target state="translated">Instancia del mismo tipo de entidad con miembros de datos que contienen los valores originales.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Object)">
          <source>Attaches an entity to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state by specifying both the entity and its original state.</source>
          <target state="translated">Adjunta una entidad a <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> en un estado modificado o no modificado especificando la entidad y su estado original.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#Attach(System.Object,System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.Table`1">
          <source>Attaches all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state.</source>
          <target state="translated">Asocia todas las entidades de una colección al objeto <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> en un estado modificado o no modificado.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable)">
          <source>The collection of entities to be attached.</source>
          <target state="translated">Colección de entidades que se va a adjuntar.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable)">
          <source>Attaches all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state.</source>
          <target state="translated">Asocia todas las entidades de una colección al objeto <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> en un estado modificado o no modificado.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable,System.Boolean)">
          <source>The collection of entities to be attched.</source>
          <target state="translated">Colección de entidades que se va a adjuntar.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to attach the entities as modified; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to attach the entities as unmodified.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> para adjuntar las entidades como modificadas; <ph id="ph2">&lt;see langword="false" /&gt;</ph> para adjuntar las entidades como sin modificar.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable,System.Boolean)">
          <source>Attaches all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in either a modified or unmodified state.</source>
          <target state="translated">Asocia todas las entidades de una colección al objeto <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> en un estado modificado o no modificado.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable,System.Boolean)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable,System.Boolean)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteAllOnSubmit(System.Collections.IEnumerable)">
          <source>The entities being removed.</source>
          <target state="translated">Entidades que se van a quitar.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteAllOnSubmit(System.Collections.IEnumerable)">
          <source>Puts all entities from the collection into a <ph id="ph1">&lt;see langword="pending delete" /&gt;</ph> state.</source>
          <target state="translated">Coloca todas las entidades de la colección en un estado <ph id="ph1">&lt;see langword="pending delete" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteAllOnSubmit(System.Collections.IEnumerable)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteAllOnSubmit(System.Collections.IEnumerable)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)">
          <source>The entity to be removed.</source>
          <target state="translated">Entidad que se va a quitar.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)">
          <source>Puts an entity from this table into a <ph id="ph1">&lt;see langword="pending delete" /&gt;</ph> state.</source>
          <target state="translated">Coloca una entidad de esta tabla en un estado <ph id="ph1">&lt;see langword="pending delete" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)">
          <source><ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> does not support or recognize cascade-delete operations.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> no admite ni reconoce las operaciones de eliminación en cascada.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)">
          <source>If you want to delete a row in a table that has constraints against it, you must either set the <ph id="ph1">`ON DELETE CASCADE`</ph> rule in the foreign-key constraint in the database, or use your own code to first delete the child objects that prevent the parent object from being deleted.</source>
          <target state="translated">Si desea eliminar una fila de una tabla que tiene restricciones, deberá establecer el <ph id="ph1">`ON DELETE CASCADE`</ph> de regla en la restricción de clave externa de la base de datos o utilizar su propio código para eliminar primero los objetos secundarios que impiden que el objeto primario que se va a eliminar.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)">
          <source>Otherwise, an exception is thrown.</source>
          <target state="translated">De lo contrario, se inicia una excepción.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers(System.Object)">
          <source>The entity from which to obtain the modified members.</source>
          <target state="translated">Entidad de la que se van a obtener los miembros modificados.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers(System.Object)">
          <source>Returns an array of modified members that contain their current and original values.</source>
          <target state="translated">Devuelve una matriz de los miembros modificados que contienen sus valores actuales y originales.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers(System.Object)">
          <source>An array of modified members.</source>
          <target state="translated">Matriz de miembros modificados.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetModifiedMembers(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState(System.Object)">
          <source>The entity whose original state is to be accessed.</source>
          <target state="translated">Entidad a cuyo estado original va a obtenerse acceso.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState(System.Object)">
          <source>Retrieves original values of a given entity.</source>
          <target state="translated">Recupera los valores originales de una entidad determinada.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState(System.Object)">
          <source>A copy of the original entity.</source>
          <target state="translated">Copia de la entidad original.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#GetOriginalEntityState(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertAllOnSubmit(System.Collections.IEnumerable)">
          <source>The collection of entities to be added.</source>
          <target state="translated">Colección de entidades que se va a agregar.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertAllOnSubmit(System.Collections.IEnumerable)">
          <source>Adds all entities of a collection to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> in an <ph id="ph2">&lt;see langword="pending insert" /&gt;</ph> state.</source>
          <target state="translated">Agrega todas las entidades de una colección a <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> en un estado <ph id="ph2">&lt;see langword="pending insert" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertAllOnSubmit(System.Collections.IEnumerable)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertAllOnSubmit(System.Collections.IEnumerable)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertOnSubmit(System.Object)">
          <source>The entity to add.</source>
          <target state="translated">Entidad que se va a agregar.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertOnSubmit(System.Object)">
          <source>Adds an entity in a <ph id="ph1">&lt;see langword="pending insert" /&gt;</ph> state to this table.</source>
          <target state="translated">Agrega a esta tabla una entidad en un estado <ph id="ph1">&lt;see langword="pending insert" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertOnSubmit(System.Object)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Data#Linq#ITable#InsertOnSubmit(System.Object)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#ElementType">
          <source>Gets the type of the element(s) that are returned when the expression tree associated with this object is executed.</source>
          <target state="translated">Obtiene el tipo de los elementos que se devuelven cuando se ejecuta el árbol de expresión asociado a este objeto.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#ElementType">
          <source>The type of the element(s) that are returned when the expression tree associated with this object is executed.</source>
          <target state="translated">Tipo de los elementos que se devuelven cuando se ejecuta el árbol de expresión asociado a este objeto.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#ElementType">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#ElementType">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Linq.IQueryable&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Linq.IQueryable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#Expression">
          <source>Gets the expression tree that is associated with this instance of <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph>.</source>
          <target state="translated">Obtiene el árbol de expresión que está asociado a esta instancia de <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#Expression">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> that is associated with this instance of <ph id="ph2">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph>.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> que está asociado a esta instancia de <ph id="ph2">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#Expression">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#Expression">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Linq.IQueryable&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Linq.IQueryable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#Provider">
          <source>Gets the query provider that is associated with this data source.</source>
          <target state="translated">Obtiene el proveedor de consultas que está asociado a este origen de datos.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#Provider">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.IQueryProvider" /&gt;</ph> that is associated with this data source.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Linq.IQueryProvider" /&gt;</ph> que está asociado a este origen de datos.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#Provider">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Table`1.System#Linq#IQueryable#Provider">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Linq.IQueryable&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Linq.IQueryable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)">
          <source>The query expression from which the evaluation is performed.</source>
          <target state="translated">La expresión de consulta desde la que se realiza la evaluación.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)">
          <source>Constructs an <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph> object that can evaluate the query represented by a specified expression tree.</source>
          <target state="translated">Construye un objeto <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph> que puede evaluar la consulta representada por el árbol de expresión especificado.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph> that can evaluate the query represented by the specified expression tree.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Linq.IQueryable" /&gt;</ph> que puede evaluar la consulta representada por el árbol de expresión especificado.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)">
          <source>The type of the data in the table.</source>
          <target state="translated">Tipo de datos de la tabla.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)">
          <source>The query expression from which the evaluation is performed.</source>
          <target state="translated">La expresión de consulta desde la que se realiza la evaluación.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)">
          <source>Constructs an <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> object that can evaluate the query represented by a specified expression tree.</source>
          <target state="translated">Construye un objeto <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> que puede evaluar la consulta representada por el árbol de expresión especificado.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> that can evaluate the query represented by the specified expression tree.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Linq.IQueryable`1" /&gt;</ph> que puede evaluar la consulta representada por el árbol de expresión especificado.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)">
          <source>The query expression to execute.</source>
          <target state="translated">Expresión de consulta que se va a ejecutar.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)">
          <source>Executes the query represented by a specified expression tree.</source>
          <target state="translated">Ejecuta la consulta representada por el árbol de expresión especificado.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)">
          <source>The value that results from executing the specified query.</source>
          <target state="translated">Valor que es el resultado de ejecutar la consulta especificada.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)">
          <source>The type of the data in the table.</source>
          <target state="translated">Tipo de datos de la tabla.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)">
          <source>The query expression to execute.</source>
          <target state="translated">Expresión de consulta que se va a ejecutar.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)">
          <source>Executes the strongly-typed query represented by a specified expression tree.</source>
          <target state="translated">Ejecuta la consulta fuertemente tipada representada por el árbol de expresión especificado.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)">
          <source>The value that results from executing the specified query.</source>
          <target state="translated">Valor que es el resultado de ejecutar la consulta especificada.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Este miembro es una implementación explícita de un miembro de interfaz.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Table`1.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph> interface.</source>
          <target state="translated">Solo se puede utilizar cuando la instancia de <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> se convierte en una interfaz <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.ToString">
          <source>Returns a string that represents the table.</source>
          <target state="translated">Devuelve una cadena que representa la tabla.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Table`1.ToString">
          <source>A string representation of the table.</source>
          <target state="translated">Representación de cadena de la tabla.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>