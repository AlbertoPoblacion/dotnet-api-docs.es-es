<Type Name="FileNameEditor" FullName="System.Windows.Forms.Design.FileNameEditor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ac54e919f99ab31cec9396bafb084bf9b8f69df7" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53518395" /></Metadata><TypeSignature Language="C#" Value="public class FileNameEditor : System.Drawing.Design.UITypeEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileNameEditor extends System.Drawing.Design.UITypeEditor" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Design.FileNameEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class FileNameEditor&#xA;Inherits UITypeEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileNameEditor : System::Drawing::Design::UITypeEditor" />
  <TypeSignature Language="F#" Value="type FileNameEditor = class&#xA;    inherit UITypeEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Drawing.Design.UITypeEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona una interfaz de usuario para seleccionar un nombre de archivo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Design.FileNameEditor> Proporciona un cuadro de diálogo de selección de archivos para la selección del nombre de archivo y la edición.  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza un <xref:System.ComponentModel.EditorAttribute> para asociar el <xref:System.Windows.Forms.Design.FileNameEditor> con una propiedad.  
  
 [!code-cpp[EditorAttributesExample#5](~/samples/snippets/cpp/VS_Snippets_Winforms/EditorAttributesExample/CPP/class1.cpp#5)]
 [!code-csharp[EditorAttributesExample#5](~/samples/snippets/csharp/VS_Snippets_Winforms/EditorAttributesExample/CS/class1.cs#5)]
 [!code-vb[EditorAttributesExample#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/EditorAttributesExample/VB/class1.vb#5)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Se puede heredar de esta clase para proporcionar su propio título para el cuadro de diálogo y sus propias extensiones de filtro de lista de archivos.</para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileNameEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.FileNameEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileNameEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.FileNameEditor" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditValue">
      <MemberSignature Language="C#" Value="public override object EditValue (System.ComponentModel.ITypeDescriptorContext context, IServiceProvider provider, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object EditValue(class System.ComponentModel.ITypeDescriptorContext context, class System.IServiceProvider provider, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EditValue (context As ITypeDescriptorContext, provider As IServiceProvider, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ EditValue(System::ComponentModel::ITypeDescriptorContext ^ context, IServiceProvider ^ provider, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.EditValue : System.ComponentModel.ITypeDescriptorContext * IServiceProvider * obj -&gt; obj" Usage="fileNameEditor.EditValue (context, provider, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.</param>
        <param name="provider">Objeto de proveedor de servicios mediante el que se pueden obtener los servicios de edición.</param>
        <param name="value">Instancia del valor que se va a editar.</param>
        <summary>Edita el objeto especificado utilizando el estilo de editor proporcionado por el método <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
        <returns>Nuevo valor del objeto. Si el valor del objeto no ha cambiado, este método debe devolver el mismo objeto que se pasó.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se proporciona un proveedor de servicios para poder obtener todos los servicios de edición necesarios.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEditStyle">
      <MemberSignature Language="C#" Value="public override System.Drawing.Design.UITypeEditorEditStyle GetEditStyle (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Drawing.Design.UITypeEditorEditStyle GetEditStyle(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEditStyle (context As ITypeDescriptorContext) As UITypeEditorEditStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Drawing::Design::UITypeEditorEditStyle GetEditStyle(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetEditStyle : System.ComponentModel.ITypeDescriptorContext -&gt; System.Drawing.Design.UITypeEditorEditStyle" Usage="fileNameEditor.GetEditStyle context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Design.UITypeEditorEditStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede utilizar para obtener información adicional sobre el contexto.</param>
        <summary>Obtiene el estilo de edición utilizado por el método <see cref="M:System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
        <returns>Uno de los valores de <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> que indica el estilo de edición proporcionado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Windows.Forms.Design.FileNameEditor.EditValue%2A> no se admite el método, este método devolverá <xref:System.Drawing.Design.UITypeEditorEditStyle.None>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Design.UITypeEditorEditStyle" />
      </Docs>
    </Member>
    <Member MemberName="InitializeDialog">
      <MemberSignature Language="C#" Value="protected virtual void InitializeDialog (System.Windows.Forms.OpenFileDialog openFileDialog);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeDialog(class System.Windows.Forms.OpenFileDialog openFileDialog) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.FileNameEditor.InitializeDialog(System.Windows.Forms.OpenFileDialog)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeDialog(System::Windows::Forms::OpenFileDialog ^ openFileDialog);" />
      <MemberSignature Language="F#" Value="abstract member InitializeDialog : System.Windows.Forms.OpenFileDialog -&gt; unit&#xA;override this.InitializeDialog : System.Windows.Forms.OpenFileDialog -&gt; unit" Usage="fileNameEditor.InitializeDialog openFileDialog" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="openFileDialog" Type="System.Windows.Forms.OpenFileDialog" />
      </Parameters>
      <Docs>
        <param name="openFileDialog"><see cref="T:System.Windows.Forms.OpenFileDialog" /> que se va a utilizar para seleccionar un nombre de archivo.</param>
        <summary>Inicializa el cuadro de diálogo para abrir archivos cuando se crea.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método configura el cuadro de diálogo con un título y un filtro de archivos genérico.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Puede invalidar este método para personalizar la inicialización del cuadro de diálogo.</para></block>
        <altmember cref="T:System.Windows.Forms.OpenFileDialog" />
      </Docs>
    </Member>
  </Members>
</Type>