<Type Name="ParentControlDesigner" FullName="System.Windows.Forms.Design.ParentControlDesigner">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dfd93fa1c830a1be0e052a33e33e917f18357f5f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36356909" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ParentControlDesigner : System.Windows.Forms.Design.ControlDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ParentControlDesigner extends System.Windows.Forms.Design.ControlDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Design.ParentControlDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Class ParentControlDesigner&#xA;Inherits ControlDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParentControlDesigner : System::Windows::Forms::Design::ControlDesigner" />
  <TypeSignature Language="F#" Value="type ParentControlDesigner = class&#xA;    inherit ControlDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Design.ControlDesigner</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Extiende el comportamiento del modo de diseño de un <see cref="T:System.Windows.Forms.Control" /> que admite controles anidados.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Design.ParentControlDesigner> Proporciona una clase base para los diseñadores de controles que pueden contener controles secundarios. Además de los métodos y la funcionalidad que se hereda de la <xref:System.Windows.Forms.Design.ControlDesigner> y <xref:System.ComponentModel.Design.ComponentDesigner> clases, <xref:System.Windows.Forms.Design.ParentControlDesigner> permite que se agregan los controles secundarios quitará, seleccionado dentro y organizadas en el control cuyo comportamiento extiende en el diseño hora.  
  
 Puede asociar un diseñador a un tipo mediante un <xref:System.ComponentModel.DesignerAttribute>. Para obtener información general sobre la personalización del comportamiento en tiempo de diseño, vea [extender compatibilidad en tiempo de diseño](http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2).  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo implementar un personalizado <xref:System.Windows.Forms.Design.ParentControlDesigner>. Este ejemplo de código forma parte de un ejemplo más extenso de la <xref:System.Drawing.Design.IToolboxUser> interfaz.  
  
 [!code-cpp[IToolboxUserExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IToolboxUserExample/CPP/samplecontrol.cpp#1)]
 [!code-csharp[IToolboxUserExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IToolboxUserExample/CS/samplecontrol.cs#1)]
 [!code-vb[IToolboxUserExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IToolboxUserExample/VB/samplecontrol.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
    <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
    <altmember cref="T:System.ComponentModel.Design.IDesigner" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
    <altmember cref="T:System.ComponentModel.DesignerAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParentControlDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ParentControlDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParentControlDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AddPaddingSnapLines">
      <MemberSignature Language="C#" Value="protected void AddPaddingSnapLines (ref System.Collections.ArrayList snapLines);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AddPaddingSnapLines(class System.Collections.ArrayList&amp; snapLines) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ParentControlDesigner.AddPaddingSnapLines(System.Collections.ArrayList@)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AddPaddingSnapLines (ByRef snapLines As ArrayList)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AddPaddingSnapLines(System::Collections::ArrayList ^ % snapLines);" />
      <MemberSignature Language="F#" Value="member this.AddPaddingSnapLines :  -&gt; unit" Usage="parentControlDesigner.AddPaddingSnapLines snapLines" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="snapLines" Type="System.Collections.ArrayList&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="snapLines">Control <see cref="T:System.Collections.ArrayList" /> que contiene los objetos <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />.</param>
        <summary>Agrega las líneas de ajuste del relleno.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AllowControlLasso">
      <MemberSignature Language="C#" Value="protected virtual bool AllowControlLasso { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowControlLasso" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ParentControlDesigner.AllowControlLasso" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property AllowControlLasso As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool AllowControlLasso { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowControlLasso : bool" Usage="System.Windows.Forms.Design.ParentControlDesigner.AllowControlLasso" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si los controles seleccionados volverán a ser principales.</summary>
        <value>Es <see langword="true" /> si los controles que se seleccionaron mediante lazo en la superficie del diseñador se volverán a hacer primarios de este control de diseñador.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.Design.ParentControlDesigner.AllowControlLasso%2A> método se llama cuando el usuario selecciona un elemento de cuadro de herramientas que tiene un <xref:System.Windows.Forms.Design.ParentControlDesigner> asociados a él. Dibuja un rectángulo reversible en la superficie del diseñador.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AllowGenericDragBox">
      <MemberSignature Language="C#" Value="protected virtual bool AllowGenericDragBox { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowGenericDragBox" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ParentControlDesigner.AllowGenericDragBox" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property AllowGenericDragBox As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool AllowGenericDragBox { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowGenericDragBox : bool" Usage="System.Windows.Forms.Design.ParentControlDesigner.AllowGenericDragBox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si se debe dibujar un cuadro de arrastre genérico al arrastrar un elemento del cuadro de herramientas sobre la superficie del diseñador.</summary>
        <value>Es <see langword="true" /> si se debe dibujar un cuadro de arrastre genérico al arrastrar un elemento del cuadro de herramientas sobre la superficie del diseñador; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AllowSetChildIndexOnDrop">
      <MemberSignature Language="C#" Value="protected internal virtual bool AllowSetChildIndexOnDrop { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowSetChildIndexOnDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ParentControlDesigner.AllowSetChildIndexOnDrop" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property AllowSetChildIndexOnDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool AllowSetChildIndexOnDrop { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowSetChildIndexOnDrop : bool" Usage="System.Windows.Forms.Design.ParentControlDesigner.AllowSetChildIndexOnDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si se debe mantener el orden Z de los controles arrastrados cuando se colocan en un control <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />.</summary>
        <value>Es <see langword="true" /> si se debe mantener el orden Z de los controles arrastrados cuando se colocan en un control <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 De forma predeterminada se mantiene el orden z de los controles arrastrados cuando se colocan en un <xref:System.Windows.Forms.Design.ParentControlDesigner>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="CanAddComponent">
      <MemberSignature Language="C#" Value="protected internal virtual bool CanAddComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool CanAddComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ParentControlDesigner.CanAddComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CanAddComponent (component As IComponent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool CanAddComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="abstract member CanAddComponent : System.ComponentModel.IComponent -&gt; bool&#xA;override this.CanAddComponent : System.ComponentModel.IComponent -&gt; bool" Usage="parentControlDesigner.CanAddComponent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">Componente que se va a probar para determinar si tiene errores.</param>
        <summary>Se invoca cuando se agrega un componente al contenedor primario.</summary>
        <returns>Es <see langword="true" /> si <paramref name="component" /> se puede agregar; de lo contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es similar al método IsDropOK, pero se permite para los mensajes de error específico. Este método proporciona una oportunidad para mostrar el mismo error, tal como se muestra en tiempo de ejecución.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanParent">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Indica si el control especificado puede ser secundario del control que administra un diseñador.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanParent">
      <MemberSignature Language="C#" Value="public virtual bool CanParent (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanParent(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanParent(System::Windows::Forms::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member CanParent : System.Windows.Forms.Control -&gt; bool&#xA;override this.CanParent : System.Windows.Forms.Control -&gt; bool" Usage="parentControlDesigner.CanParent control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <see cref="T:System.Windows.Forms.Control" /> que se va a probar.</param>
        <summary>Indica si el control especificado puede ser secundario del control que administra este diseñador.</summary>
        <returns>Es <see langword="true" /> si el control especificado puede ser secundario del control que administra este diseñador; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método indica si el control administrado por el diseñador puede ser principal especificado <xref:System.Windows.Forms.Design.ControlDesigner>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="CanParent">
      <MemberSignature Language="C#" Value="public virtual bool CanParent (System.Windows.Forms.Design.ControlDesigner controlDesigner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanParent(class System.Windows.Forms.Design.ControlDesigner controlDesigner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Design.ControlDesigner)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanParent(System::Windows::Forms::Design::ControlDesigner ^ controlDesigner);" />
      <MemberSignature Language="F#" Value="abstract member CanParent : System.Windows.Forms.Design.ControlDesigner -&gt; bool&#xA;override this.CanParent : System.Windows.Forms.Design.ControlDesigner -&gt; bool" Usage="parentControlDesigner.CanParent controlDesigner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlDesigner" Type="System.Windows.Forms.Design.ControlDesigner" />
      </Parameters>
      <Docs>
        <param name="controlDesigner">Diseñador del control que se va a probar.</param>
        <summary>Indica si el control administrado por el diseñador especificado puede ser secundario del control que administra este diseñador.</summary>
        <returns>Es <see langword="true" /> si el control administrado por el diseñador especificado puede ser secundario del control que administra este diseñador; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método indica si el control que administra este diseñador puede ser principal del control del elemento especificado <xref:System.Windows.Forms.Design.ControlDesigner>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateTool">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea un componente o control a partir de la herramienta especificada y lo agrega al documento de diseño actual.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateTool">
      <MemberSignature Language="C#" Value="protected void CreateTool (System.Drawing.Design.ToolboxItem tool);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CreateTool(class System.Drawing.Design.ToolboxItem tool) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CreateTool (tool As ToolboxItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CreateTool(System::Drawing::Design::ToolboxItem ^ tool);" />
      <MemberSignature Language="F#" Value="member this.CreateTool : System.Drawing.Design.ToolboxItem -&gt; unit" Usage="parentControlDesigner.CreateTool tool" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tool" Type="System.Drawing.Design.ToolboxItem" />
      </Parameters>
      <Docs>
        <param name="tool">
          <see cref="T:System.Drawing.Design.ToolboxItem" /> a partir del cual se va a crear un componente.</param>
        <summary>Crea un componente o control a partir de la herramienta especificada y lo agrega al documento de diseño actual.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El nuevo componente o control se sitúa en el centro del control seleccionado actualmente. Este método utiliza el tamaño predeterminado de la herramienta, si la herramienta tiene un tamaño predeterminado especificado.  
  
 Para especificar una ubicación o la ubicación y el tamaño para el componente o control, utilice uno de los otros sobrecargado <xref:System.Windows.Forms.Design.ParentControlDesigner.CreateTool%2A> métodos.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="CreateTool">
      <MemberSignature Language="C#" Value="protected void CreateTool (System.Drawing.Design.ToolboxItem tool, System.Drawing.Point location);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CreateTool(class System.Drawing.Design.ToolboxItem tool, valuetype System.Drawing.Point location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CreateTool (tool As ToolboxItem, location As Point)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CreateTool(System::Drawing::Design::ToolboxItem ^ tool, System::Drawing::Point location);" />
      <MemberSignature Language="F#" Value="member this.CreateTool : System.Drawing.Design.ToolboxItem * System.Drawing.Point -&gt; unit" Usage="parentControlDesigner.CreateTool (tool, location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tool" Type="System.Drawing.Design.ToolboxItem" />
        <Parameter Name="location" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="tool">
          <see cref="T:System.Drawing.Design.ToolboxItem" /> a partir del cual se va a crear un componente.</param>
        <param name="location">
          <see cref="T:System.Drawing.Point" /> donde se centrará el componente, en coordenadas de pantalla de la vista en tiempo de diseño.</param>
        <summary>Crea un componente o control a partir de la herramienta especificada y lo agrega al documento de diseño actual en la ubicación especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El nuevo componente o control se sitúa en la ubicación especificada por el `location` parámetro. Este método utiliza el tamaño predeterminado para el componente de la herramienta, si el componente tiene un tamaño predeterminado.  
  
 Para especificar una ubicación y tamaño para el componente o control, utilice la sobrecarga adecuada <xref:System.Windows.Forms.Design.ParentControlDesigner.CreateTool%2A> método.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="CreateTool">
      <MemberSignature Language="C#" Value="protected void CreateTool (System.Drawing.Design.ToolboxItem tool, System.Drawing.Rectangle bounds);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CreateTool(class System.Drawing.Design.ToolboxItem tool, valuetype System.Drawing.Rectangle bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CreateTool (tool As ToolboxItem, bounds As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CreateTool(System::Drawing::Design::ToolboxItem ^ tool, System::Drawing::Rectangle bounds);" />
      <MemberSignature Language="F#" Value="member this.CreateTool : System.Drawing.Design.ToolboxItem * System.Drawing.Rectangle -&gt; unit" Usage="parentControlDesigner.CreateTool (tool, bounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tool" Type="System.Drawing.Design.ToolboxItem" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="tool">
          <see cref="T:System.Drawing.Design.ToolboxItem" /> a partir del cual se va a crear un componente.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> que indica la ubicación y tamaño del componente creado a partir de la herramienta. Los valores <see cref="P:System.Drawing.Rectangle.X" /> e <see cref="P:System.Drawing.Rectangle.Y" /> de <see cref="T:System.Drawing.Rectangle" /> indican las coordenadas de pantalla de la vista en tiempo de diseño de la esquina superior izquierda del componente.</param>
        <summary>Crea un componente o control a partir de la herramienta especificada y lo agrega al documento de diseño actual dentro de los límites del rectángulo especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El nuevo componente o control se sitúa con la esquina superior izquierda en la ubicación especificada por el <xref:System.Drawing.Rectangle.X%2A> y <xref:System.Drawing.Rectangle.Y%2A> valores de la `bounds` parámetro. El tamaño del nuevo componente o el control se establecerá en los valores especificados por el <xref:System.Drawing.Rectangle.Height%2A> y <xref:System.Drawing.Rectangle.Width%2A> propiedades de la `bounds` parámetro.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="CreateToolCore">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.IComponent[] CreateToolCore (System.Drawing.Design.ToolboxItem tool, int x, int y, int width, int height, bool hasLocation, bool hasSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.IComponent[] CreateToolCore(class System.Drawing.Design.ToolboxItem tool, int32 x, int32 y, int32 width, int32 height, bool hasLocation, bool hasSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ParentControlDesigner.CreateToolCore(System.Drawing.Design.ToolboxItem,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateToolCore (tool As ToolboxItem, x As Integer, y As Integer, width As Integer, height As Integer, hasLocation As Boolean, hasSize As Boolean) As IComponent()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::ComponentModel::IComponent ^&gt; ^ CreateToolCore(System::Drawing::Design::ToolboxItem ^ tool, int x, int y, int width, int height, bool hasLocation, bool hasSize);" />
      <MemberSignature Language="F#" Value="abstract member CreateToolCore : System.Drawing.Design.ToolboxItem * int * int * int * int * bool * bool -&gt; System.ComponentModel.IComponent[]&#xA;override this.CreateToolCore : System.Drawing.Design.ToolboxItem * int * int * int * int * bool * bool -&gt; System.ComponentModel.IComponent[]" Usage="parentControlDesigner.CreateToolCore (tool, x, y, width, height, hasLocation, hasSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tool" Type="System.Drawing.Design.ToolboxItem" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="hasLocation" Type="System.Boolean" />
        <Parameter Name="hasSize" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="tool">
          <see cref="T:System.Drawing.Design.ToolboxItem" /> a partir del cual se va a crear un componente.</param>
        <param name="x">La posición horizontal, en coordenadas de la vista en tiempo de diseño, de la ubicación del borde izquierdo de la herramienta, si se ha especificado un tamaño; la posición horizontal del centro de la herramienta, si no se ha especificado ningún tamaño.</param>
        <param name="y">La posición vertical, en coordenadas de la vista en tiempo de diseño, de la ubicación del borde superior de la herramienta, si se ha especificado un tamaño; la posición vertical del centro de la herramienta, si no se ha especificado ningún tamaño.</param>
        <param name="width">Ancho de la herramienta. Este parámetro se omite si el parámetro <c>hasSize</c> está establecido en <see langword="false" />.</param>
        <param name="height">Alto de la herramienta. Este parámetro se omite si el parámetro <c>hasSize</c> está establecido en <see langword="false" />.</param>
        <param name="hasLocation">Es <see langword="true" /> si se ha especificado la ubicación del componente; es <see langword="false" /> si el componente se debe colocar en el centro del control actualmente seleccionado.</param>
        <param name="hasSize">Es <see langword="true" /> si se especifica el tamaño del componente; es <see langword="false" /> si se van a utilizar los valores del alto y ancho del componente.</param>
        <summary>Proporciona la funcionalidad central de todos los métodos <see cref="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)" />.</summary>
        <returns>Matriz de los componentes creados a partir de la herramienta.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ésta es la única <xref:System.Windows.Forms.Design.ParentControlDesigner.CreateTool%2A> método que se puede invalidar.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DefaultControlLocation">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Point DefaultControlLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point DefaultControlLocation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ParentControlDesigner.DefaultControlLocation" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultControlLocation As Point" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Point DefaultControlLocation { System::Drawing::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultControlLocation : System.Drawing.Point" Usage="System.Windows.Forms.Design.ParentControlDesigner.DefaultControlLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la ubicación predeterminada de un control agregado al diseñador.</summary>
        <value>
          <see cref="T:System.Drawing.Point" /> que indica la ubicación predeterminada de un control agregado al diseñador.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, la ubicación predeterminada es (0,0). Normalmente se cambia la ubicación predeterminada si el contenedor tiene bordes especiales o por otros motivos.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ParentControlDesigner.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="parentControlDesigner.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
        <summary>Libera los recursos no administrados utilizados por el objeto <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> y, de forma opcional, libera los recursos administrados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se llama a este método público `Dispose()` método y <xref:System.Object.Finalize%2A> método. `Dispose()` se invoca el protegido `Dispose(Boolean)` método con el `disposing` parámetro establecido en `true`. <xref:System.Object.Finalize%2A> invoca `Dispose` con `disposing` establecido en `false`.  
  
 Cuando el `disposing` del parámetro es true, este método libera todos los recursos retenidos por los objetos administrados que este <xref:System.Windows.Forms.Design.ParentControlDesigner> referencias. Este método invoca al método `Dispose()` de cada uno de los objetos a los que se hace referencia.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> puede recibir varias llamadas de otros objetos. Al reemplazar <see langword="Dispose(Boolean)" /> tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a <see langword="Dispose" />. Para obtener más información sobre cómo implementar <see langword="Dispose(Boolean)" />, vea [implementar un Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Para obtener más información acerca de <see langword="Dispose" /> y <see cref="M:System.Object.Finalize" />, consulte [limpieza seguridad Resources](~/docs/standard/garbage-collection/unmanaged.md) no administrado y [invalidación del método Finalize] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
        </block>
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DrawGrid">
      <MemberSignature Language="C#" Value="protected virtual bool DrawGrid { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DrawGrid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ParentControlDesigner.DrawGrid" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property DrawGrid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DrawGrid { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DrawGrid : bool with get, set" Usage="System.Windows.Forms.Design.ParentControlDesigner.DrawGrid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se debe dibujar una cuadrícula en el control para este diseñador.</summary>
        <value>Es <see langword="true" /> si se debe dibujar una cuadrícula en el control en el diseñador; en caso contrario, es <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ControlPaint.DrawGrid(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Size,System.Drawing.Color)" />
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EnableDragRect">
      <MemberSignature Language="C#" Value="protected override bool EnableDragRect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDragRect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ParentControlDesigner.EnableDragRect" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property EnableDragRect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool EnableDragRect { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnableDragRect : bool" Usage="System.Windows.Forms.Design.ParentControlDesigner.EnableDragRect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el diseñador dibuja rectángulos de arrastre.</summary>
        <value>Es <see langword="true" /> si se dibujan rectángulos de arrastre; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetControl">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.Control GetControl (object component);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Windows.Forms.Control GetControl(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ParentControlDesigner.GetControl(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetControl (component As Object) As Control" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Forms::Control ^ GetControl(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="member this.GetControl : obj -&gt; System.Windows.Forms.Control" Usage="parentControlDesigner.GetControl component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">Componente del que se va a recuperar el control.</param>
        <summary>Obtiene el control del componente especificado desde el diseñador.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.Control" /> al que pertenece el componente especificado.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetControlGlyph">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.Design.Behavior.ControlBodyGlyph GetControlGlyph (System.Windows.Forms.Design.Behavior.GlyphSelectionType selectionType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.Design.Behavior.ControlBodyGlyph GetControlGlyph(valuetype System.Windows.Forms.Design.Behavior.GlyphSelectionType selectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ParentControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetControlGlyph (selectionType As GlyphSelectionType) As ControlBodyGlyph" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::Design::Behavior::ControlBodyGlyph ^ GetControlGlyph(System::Windows::Forms::Design::Behavior::GlyphSelectionType selectionType);" />
      <MemberSignature Language="F#" Value="override this.GetControlGlyph : System.Windows.Forms.Design.Behavior.GlyphSelectionType -&gt; System.Windows.Forms.Design.Behavior.ControlBodyGlyph" Usage="parentControlDesigner.GetControlGlyph selectionType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Design.Behavior.ControlBodyGlyph</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectionType" Type="System.Windows.Forms.Design.Behavior.GlyphSelectionType" />
      </Parameters>
      <Docs>
        <param name="selectionType">Un valor <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> que especifica el estado de la selección.</param>
        <summary>Obtiene un glifo del cuerpo que representa los límites del control.</summary>
        <returns>Un glifo del cuerpo que representa los límites del control.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El *glifo del cuerpo* es responsable de diseñador del control de comprobación de visitas y reenviar mensajes directamente al diseñador.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetGlyphs">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.Design.Behavior.GlyphCollection GetGlyphs (System.Windows.Forms.Design.Behavior.GlyphSelectionType selectionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Windows.Forms.Design.Behavior.GlyphCollection GetGlyphs(valuetype System.Windows.Forms.Design.Behavior.GlyphSelectionType selectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ParentControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGlyphs (selectionType As GlyphSelectionType) As GlyphCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Windows::Forms::Design::Behavior::GlyphCollection ^ GetGlyphs(System::Windows::Forms::Design::Behavior::GlyphSelectionType selectionType);" />
      <MemberSignature Language="F#" Value="override this.GetGlyphs : System.Windows.Forms.Design.Behavior.GlyphSelectionType -&gt; System.Windows.Forms.Design.Behavior.GlyphCollection" Usage="parentControlDesigner.GetGlyphs selectionType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Design.Behavior.GlyphCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectionType" Type="System.Windows.Forms.Design.Behavior.GlyphSelectionType" />
      </Parameters>
      <Docs>
        <param name="selectionType">Un valor <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> que especifica el estado de la selección.</param>
        <summary>Obtiene una colección de objetos <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> que representan los bordes de selección y los identificadores de agarre de un control estándar.</summary>
        <returns>Una colección de objetos <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Forms.Design.ParentControlDesigner.GetGlyphs%2A> método agrega un selector de contenedor <xref:System.Windows.Forms.Design.Behavior.Glyph> a la colección de glifos de selección.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetParentForComponent">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.Control GetParentForComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.Control GetParentForComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ParentControlDesigner.GetParentForComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetParentForComponent (component As IComponent) As Control" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::Control ^ GetParentForComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="abstract member GetParentForComponent : System.ComponentModel.IComponent -&gt; System.Windows.Forms.Control&#xA;override this.GetParentForComponent : System.ComponentModel.IComponent -&gt; System.Windows.Forms.Control" Usage="parentControlDesigner.GetParentForComponent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">Componente para el cual se va a recuperar el control <see cref="T:System.Windows.Forms.Control" /> principal.</param>
        <summary>Utilizado por clases derivadas para determinar si devuelve el control que se está dibujando o algún otro control <see cref="T:System.ComponentModel.Container" /> al agregarle un componente.</summary>
        <returns>Control <see cref="T:System.Windows.Forms.Control" /> principal para el componente.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetUpdatedRect">
      <MemberSignature Language="C#" Value="protected System.Drawing.Rectangle GetUpdatedRect (System.Drawing.Rectangle originalRect, System.Drawing.Rectangle dragRect, bool updateSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Drawing.Rectangle GetUpdatedRect(valuetype System.Drawing.Rectangle originalRect, valuetype System.Drawing.Rectangle dragRect, bool updateSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ParentControlDesigner.GetUpdatedRect(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetUpdatedRect (originalRect As Rectangle, dragRect As Rectangle, updateSize As Boolean) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Drawing::Rectangle GetUpdatedRect(System::Drawing::Rectangle originalRect, System::Drawing::Rectangle dragRect, bool updateSize);" />
      <MemberSignature Language="F#" Value="member this.GetUpdatedRect : System.Drawing.Rectangle * System.Drawing.Rectangle * bool -&gt; System.Drawing.Rectangle" Usage="parentControlDesigner.GetUpdatedRect (originalRect, dragRect, updateSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="originalRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="dragRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="updateSize" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="originalRect">
          <see cref="T:System.Drawing.Rectangle" /> que indica la posición inicial del componente que se va a actualizar.</param>
        <param name="dragRect">
          <see cref="T:System.Drawing.Rectangle" /> que indica la nueva posición del componente.</param>
        <param name="updateSize">Es <see langword="true" /> para actualizar el tamaño del rectángulo, si ha habido cambios; en caso contrario, es <see langword="false" />.</param>
        <summary>Actualiza la posición del rectángulo especificado y lo alinea en la cuadrícula si el modo de alineación en la cuadrícula está habilitado.</summary>
        <returns>Rectángulo que indica la posición del componente en coordenadas de pantalla de la vista en tiempo de diseño. Si no se realizan cambios, este método devuelve el rectángulo original.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método alinea el rectángulo especificado a la cuadrícula si está habilitada la alineación de la cuadrícula.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GridSize">
      <MemberSignature Language="C#" Value="protected System.Drawing.Size GridSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size GridSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize" />
      <MemberSignature Language="VB.NET" Value="Protected Property GridSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Drawing::Size GridSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.GridSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Design.ParentControlDesigner.GridSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el tamaño de cada cuadro de la cuadrícula que se dibuja cuando el diseñador está en modo de dibujo de cuadrícula.</summary>
        <value>
          <see cref="T:System.Drawing.Size" /> que representa el tamaño de cada cuadro de la cuadrícula dibujada en un formulario o control de usuario.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.Drawing.Size" /> se encuentra fuera del intervalo permitido para la propiedad <see cref="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize" />. El valor mínimo predeterminado es 2 y el valor máximo predeterminado es 200.</exception>
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ParentControlDesigner.Initialize(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="override this.Initialize : System.ComponentModel.IComponent -&gt; unit" Usage="parentControlDesigner.Initialize component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <see cref="T:System.ComponentModel.IComponent" /> que se va a asociar al diseñador.</param>
        <summary>Inicializa el diseñador con el componente especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se llama para inicializar el diseñador con el componente principal especificado.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="InitializeNewComponent">
      <MemberSignature Language="C#" Value="public override void InitializeNewComponent (System.Collections.IDictionary defaultValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeNewComponent(class System.Collections.IDictionary defaultValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ParentControlDesigner.InitializeNewComponent(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeNewComponent (defaultValues As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeNewComponent(System::Collections::IDictionary ^ defaultValues);" />
      <MemberSignature Language="F#" Value="override this.InitializeNewComponent : System.Collections.IDictionary -&gt; unit" Usage="parentControlDesigner.InitializeNewComponent defaultValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="defaultValues">Diccionario de nombres/valores de los valores predeterminados que se van a aplicar a las propiedades. Puede ser <see langword="null" /> si no se especifican valores predeterminados.</param>
        <summary>Inicializa un componente recién creado.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Design.ControlDesigner.InitializeNewComponent(System.Collections.IDictionary)" />
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="InvokeCreateTool">
      <MemberSignature Language="C#" Value="protected static void InvokeCreateTool (System.Windows.Forms.Design.ParentControlDesigner toInvoke, System.Drawing.Design.ToolboxItem tool);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void InvokeCreateTool(class System.Windows.Forms.Design.ParentControlDesigner toInvoke, class System.Drawing.Design.ToolboxItem tool) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ParentControlDesigner.InvokeCreateTool(System.Windows.Forms.Design.ParentControlDesigner,System.Drawing.Design.ToolboxItem)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub InvokeCreateTool (toInvoke As ParentControlDesigner, tool As ToolboxItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void InvokeCreateTool(System::Windows::Forms::Design::ParentControlDesigner ^ toInvoke, System::Drawing::Design::ToolboxItem ^ tool);" />
      <MemberSignature Language="F#" Value="static member InvokeCreateTool : System.Windows.Forms.Design.ParentControlDesigner * System.Drawing.Design.ToolboxItem -&gt; unit" Usage="System.Windows.Forms.Design.ParentControlDesigner.InvokeCreateTool (toInvoke, tool)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toInvoke" Type="System.Windows.Forms.Design.ParentControlDesigner" />
        <Parameter Name="tool" Type="System.Drawing.Design.ToolboxItem" />
      </Parameters>
      <Docs>
        <param name="toInvoke">
          <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> con el que se va a utilizar la herramienta.</param>
        <param name="tool">
          <see cref="T:System.Drawing.Design.ToolboxItem" /> a partir del cual se va a crear una herramienta.</param>
        <summary>Crea una herramienta a partir del <see cref="T:System.Drawing.Design.ToolboxItem" /> especificado.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="MouseDragTool">
      <MemberSignature Language="C#" Value="protected System.Drawing.Design.ToolboxItem MouseDragTool { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Design.ToolboxItem MouseDragTool" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ParentControlDesigner.MouseDragTool" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property MouseDragTool As ToolboxItem" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Drawing::Design::ToolboxItem ^ MouseDragTool { System::Drawing::Design::ToolboxItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MouseDragTool : System.Drawing.Design.ToolboxItem" Usage="System.Windows.Forms.Design.ParentControlDesigner.MouseDragTool" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Design.ToolboxItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el diseñador tiene una herramienta válida durante una operación de arrastre.</summary>
        <value>La herramienta que se está arrastrando, si se está creando un componente, o <see langword="null" /> si no hay ninguna herramienta.</value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Esta propiedad se utiliza por las clases derivadas para determinar si el diseñador tiene una herramienta válida durante una operación de arrastre.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OnDragComplete">
      <MemberSignature Language="C#" Value="protected override void OnDragComplete (System.Windows.Forms.DragEventArgs de);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragComplete(class System.Windows.Forms.DragEventArgs de) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragComplete (de As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragComplete(System::Windows::Forms::DragEventArgs ^ de);" />
      <MemberSignature Language="F#" Value="override this.OnDragComplete : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="parentControlDesigner.OnDragComplete de" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="de" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="de">
          <see cref="T:System.Windows.Forms.DragEventArgs" /> que proporciona datos para el evento.</param>
        <summary>Llamado para limpiar una operación de arrastrar y colocar.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Design.ParentControlDesigner.OnDragComplete%2A> se utiliza para limpiar las operaciones que se realizaron al principio de una operación de arrastrar y colocar.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OnDragDrop">
      <MemberSignature Language="C#" Value="protected override void OnDragDrop (System.Windows.Forms.DragEventArgs de);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragDrop(class System.Windows.Forms.DragEventArgs de) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragDrop (de As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragDrop(System::Windows::Forms::DragEventArgs ^ de);" />
      <MemberSignature Language="F#" Value="override this.OnDragDrop : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="parentControlDesigner.OnDragDrop de" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="de" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="de">
          <see cref="T:System.Windows.Forms.DragEventArgs" /> que proporciona datos para el evento.</param>
        <summary>Se le llama cuando un objeto de arrastrar y colocar se coloca en la vista del diseñador del control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método comprueba algún control principal para un controlador de arrastrar y colocar que pueda controlar la operación en su lugar. Si existe, este método pasa el <xref:System.Windows.Forms.DragEventArgs> para el método y los devuelve. Si no existe ningún controlador de arrastrar y colocar primario, este método intenta crear una herramienta si se ha eliminado un elemento de cuadro de herramientas en el control del diseñador.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected override void OnDragEnter (System.Windows.Forms.DragEventArgs de);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragEnter(class System.Windows.Forms.DragEventArgs de) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragEnter (de As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragEnter(System::Windows::Forms::DragEventArgs ^ de);" />
      <MemberSignature Language="F#" Value="override this.OnDragEnter : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="parentControlDesigner.OnDragEnter de" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="de" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="de">
          <see cref="T:System.Windows.Forms.DragEventArgs" /> que proporciona datos para el evento.</param>
        <summary>Se le llama cuando un objeto de arrastrar y colocar entra en la vista del diseñador del control.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected override void OnDragLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDragLeave : EventArgs -&gt; unit" Usage="parentControlDesigner.OnDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> que proporciona datos para el evento.</param>
        <summary>Se llama cuando un objeto de arrastrar y colocar sale de la vista del diseñador del control.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected override void OnDragOver (System.Windows.Forms.DragEventArgs de);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragOver(class System.Windows.Forms.DragEventArgs de) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragOver (de As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragOver(System::Windows::Forms::DragEventArgs ^ de);" />
      <MemberSignature Language="F#" Value="override this.OnDragOver : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="parentControlDesigner.OnDragOver de" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="de" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="de">
          <see cref="T:System.Windows.Forms.DragEventArgs" /> que proporciona datos para el evento.</param>
        <summary>Se le llama cuando un objeto de arrastrar y colocar se arrastra sobre la vista del diseñador del control.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseDragBegin">
      <MemberSignature Language="C#" Value="protected override void OnMouseDragBegin (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDragBegin(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDragBegin (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDragBegin(int x, int y);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDragBegin : int * int -&gt; unit" Usage="parentControlDesigner.OnMouseDragBegin (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">La coordenada x del mouse, en coordenadas de pantalla.</param>
        <param name="y">La coordenada y del mouse, en coordenadas de pantalla.</param>
        <summary>Se le llama cuando se presiona el botón primario del mouse y se mantiene presionado mientras está sobre el componente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se llama a este método en respuesta a la pulsación en un componente del botón primario del mouse. El diseñador reemplaza el formulario base de este método para proporcionar un mecanismo de selección de "lazo" para los componentes dentro del control.  
  
> [!NOTE]
>  Puede pasar un punto en coordenadas de pantalla a la <xref:System.Windows.Forms.Control.PointToClient%2A> método de la <xref:System.Windows.Forms.Control> clase para obtener las coordenadas del punto en relación con la esquina superior izquierda del control.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseDragEnd">
      <MemberSignature Language="C#" Value="protected override void OnMouseDragEnd (bool cancel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDragEnd(bool cancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragEnd(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDragEnd (cancel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDragEnd(bool cancel);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDragEnd : bool -&gt; unit" Usage="parentControlDesigner.OnMouseDragEnd cancel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cancel">Es <see langword="true" /> para cancelar la operación de arrastrar; es <see langword="false" /> para confirmarla.</param>
        <summary>Se le llama al final de una operación de arrastrar y colocar para terminar o cancelar la operación.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se llama a este método al final de una operación de arrastre. Este método confirma o cancela la operación de arrastre.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseDragMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseDragMove (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDragMove(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragMove(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDragMove (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDragMove(int x, int y);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDragMove : int * int -&gt; unit" Usage="parentControlDesigner.OnMouseDragMove (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">La coordenada x del mouse, en coordenadas de pantalla.</param>
        <param name="y">La coordenada y del mouse, en coordenadas de pantalla.</param>
        <summary>Se le llama en cada movimiento del mouse durante una operación de arrastrar y colocar.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se llama a este método al principio de una operación de arrastrar y colocar.  
  
> [!NOTE]
>  Puede pasar un punto en coordenadas de pantalla a la <xref:System.Windows.Forms.Control.PointToClient%2A> método de la <xref:System.Windows.Forms.Control> clase para obtener las coordenadas del punto en relación con la esquina superior izquierda del control.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OnPaintAdornments">
      <MemberSignature Language="C#" Value="protected override void OnPaintAdornments (System.Windows.Forms.PaintEventArgs pe);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaintAdornments(class System.Windows.Forms.PaintEventArgs pe) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ParentControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaintAdornments (pe As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaintAdornments(System::Windows::Forms::PaintEventArgs ^ pe);" />
      <MemberSignature Language="F#" Value="override this.OnPaintAdornments : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="parentControlDesigner.OnPaintAdornments pe" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pe" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="pe">
          <see cref="T:System.Windows.Forms.PaintEventArgs" /> que proporciona datos para el evento.</param>
        <summary>Se llama cuando el control que el diseñador está administrando tiene su superficie dibujada, de manera que el diseñador pueda dibujar otros adornos en la parte superior del control.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OnSetCursor">
      <MemberSignature Language="C#" Value="protected override void OnSetCursor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSetCursor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ParentControlDesigner.OnSetCursor" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSetCursor ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSetCursor();" />
      <MemberSignature Language="F#" Value="override this.OnSetCursor : unit -&gt; unit" Usage="parentControlDesigner.OnSetCursor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Permite cambiar el cursor actual del mouse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método establece el cursor del mouse según las reglas siguientes: si el servicio de cuadro de herramientas tiene una herramienta seleccionada, permite al servicio de cuadro de herramientas establecer el cursor. En caso contrario, se establece el cursor del mouse hasta el cursor del mouse (ratón) de forma predeterminada.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="protected override void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ParentControlDesigner.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="override this.PreFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="parentControlDesigner.PreFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <see cref="T:System.Collections.IDictionary" /> que contiene las propiedades de la clase del componente.</param>
        <summary>Ajusta el conjunto de propiedades que el componente expondrá mediante un <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esto <xref:System.ComponentModel.Design.IDesignerFilter> invalidación del método de interfaz agrega un conjunto de propiedades a este control de diseñador que permiten a un usuario establecer las opciones relacionadas con la alineación de control de cuadrícula mostrar y secundarios. Este método agrega las siguientes propiedades explorables: `DrawGrid`, `SnapToGrid`, y `GridSize`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SnapLines">
      <MemberSignature Language="C#" Value="public override System.Collections.IList SnapLines { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList SnapLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ParentControlDesigner.SnapLines" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SnapLines As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::IList ^ SnapLines { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SnapLines : System.Collections.IList" Usage="System.Windows.Forms.Design.ParentControlDesigner.SnapLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una lista de objetos <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> que representan los puntos de alineación significativos de este control.</summary>
        <value>Lista de objetos <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> que representan los puntos de alineación significativos de este control.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.Design.ControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.DesignerAttribute" />
        <altmember cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />
      </Docs>
    </Member>
  </Members>
</Type>