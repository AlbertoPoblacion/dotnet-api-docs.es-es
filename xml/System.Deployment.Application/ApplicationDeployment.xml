<Type Name="ApplicationDeployment" FullName="System.Deployment.Application.ApplicationDeployment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c6183cc6f4399de605648ac8bc90cbbe6d8ae170" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53292346" /></Metadata><TypeSignature Language="C#" Value="public sealed class ApplicationDeployment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ApplicationDeployment extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Deployment.Application.ApplicationDeployment" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ApplicationDeployment" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationDeployment sealed" />
  <TypeSignature Language="F#" Value="type ApplicationDeployment = class" />
  <AssemblyInfo>
    <AssemblyName>System.Deployment</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Admite actualizaciones de la implementación actual mediante programación y controla la descarga de archivos a petición. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede configurar su [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplicación para comprobar si hay actualizaciones e instalarlas automáticamente mediante el `subscription` elemento del manifiesto de implementación. Algunas aplicaciones, sin embargo, necesitan un mayor control sobre sus actualizaciones. Es posible que desee instalar las actualizaciones necesarias mediante programación y pedir a los usuarios para instalar actualizaciones opcionales cuando lo consideren oportuno. Si desactiva las actualizaciones de suscripción en el manifiesto de implementación, puede tomar el control completo de las directivas de actualización de la aplicación. Como alternativa, puede usar la suscripción automática junto con <xref:System.Deployment.Application.ApplicationDeployment>, lo que permite [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] actualice periódicamente, la aplicación, pero usa <xref:System.Deployment.Application.ApplicationDeployment> para descargar las actualizaciones críticas se publiquen poco después.  
  
 Se puede comprobar si la implementación tiene una actualización disponible mediante el uso la <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> o <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> método; el segundo método que provoca el <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> eventos se completa correctamente. <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> Devuelve información importante sobre la actualización, como su número de versión y si es una actualización necesaria para los usuarios actuales. Si hay disponible una actualización, puede instalarlo mediante <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> o <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>; el último método provoca la <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> eventos una vez completada la instalación de la actualización. Para las actualizaciones grandes, puede recibir notificaciones de progreso a través de la <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged> y <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> eventos y use la información de <xref:System.ComponentModel.ProgressChangedEventArgs> para notificar al usuario sobre el estado de descarga.  
  
 También puede usar <xref:System.Deployment.Application.ApplicationDeployment> para descargar archivos de gran tamaño y los ensamblados a petición. Estos archivos se deben marcar como "opcionales" en el manifiesto de aplicación de la implementación para que no se descargan durante la instalación. Puede descargar los archivos en cualquier momento durante la duración de la aplicación mediante el uso de la <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> o <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> método. Puede descargar los ensamblados antes de que se cargan en memoria proporcionando un controlador de eventos para el <xref:System.AppDomain.AssemblyResolve> eventos en el <xref:System.AppDomain> clase. Para más información, consulte [Tutorial: Descargar ensamblados a petición con la API de implementación de ClickOnce mediante el diseñador](https://msdn.microsoft.com/library/59a0dd5f-1cab-4f2f-b780-0ab7399905d5).  
  
> [!NOTE]
>  Si actualiza un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplicación mientras se está ejecutando la aplicación, el usuario no verá las actualizaciones hasta que llame a la <xref:System.Windows.Forms.Application.Restart%2A> método de la <xref:System.Windows.Forms.Application>, que se cierre la instancia de ejecución actual de la aplicación y se reiniciará inmediatamente él.  
  
 <xref:System.Deployment.Application.ApplicationDeployment> no tiene ningún constructor público; obtener instancias de la clase dentro de un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplicación a través de la <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> propiedad. Usa el <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> propiedad para comprobar que la aplicación actual es un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplicación.  
  
 <xref:System.Deployment.Application.ApplicationDeployment> permite comprobar si hay actualizaciones y descargar actualiza los archivos de forma asincrónica con el nuevo [Event-based Asynchronous Pattern Overview](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), que expone las devoluciones de llamada de finalización como eventos de clase. <xref:System.Deployment.Application.ApplicationDeployment> se inicia y administra los subprocesos y llamar a la aplicación en el subproceso de interfaz de usuario correcto. A través de esta clase, puede actualizar sin bloquear la aplicación, para que el usuario puede seguir trabajando mientras se instala la actualización. Si el usuario debe detener todo el trabajo mientras realiza una actualización, considere la posibilidad de usar los métodos sincrónicos en su lugar.  
  
> [!NOTE]
>  Realización de actualizaciones asincrónicas requiere que la aplicación importar ambos el <xref:System.Deployment.Application> y <xref:System.ComponentModel> espacios de nombres.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se determina en tiempo de carga de la aplicación si hay una nueva actualización disponible; Si está disponible una actualización necesaria, el ejemplo de código instala la actualización de forma asincrónica. Este código debe agregarse a un formulario que contiene un <xref:System.Windows.Forms.TextBox> denominado `downloadStatus`.  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/59a0dd5f-1cab-4f2f-b780-0ab7399905d5">Tutorial: Descargar ensamblados a petición con la API de implementación ClickOnce mediante el diseñador</related>
  </Docs>
  <Members>
    <Member MemberName="ActivationUri">
      <MemberSignature Language="C#" Value="public Uri ActivationUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ActivationUri" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.ActivationUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActivationUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ActivationUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActivationUri : Uri" Usage="System.Deployment.Application.ApplicationDeployment.ActivationUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la dirección URL utilizada para iniciar el manifiesto de implementación de la aplicación.</summary>
        <value>Cadena de una longitud de cero si el <c>TrustUrlParameters</c> propiedad en el manifiesto de implementación es <see langword="false" />, o si el usuario proporcionó una ruta UNC para abrir la implementación o la ha abierto localmente. De lo contrario, el valor devuelto es la dirección URL completa utilizada para iniciar la aplicación, incluidos los parámetros.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad funciona en aplicaciones de plena confianza y confianza parcial.  
  
   
  
## Examples  
 El código siguiente muestra cómo recuperar los parámetros de dirección URL mediante el uso de <xref:System.Deployment.Application.ApplicationDeployment.ActivationUri%2A>y cómo usar el <xref:System.Web.HttpUtility> clase para analizar la cadena de consulta de forma segura. Varias apariciones de la misma variable de cadena de consulta se consolidan en una entrada de devuelto <xref:System.Collections.Specialized.NameValueCollection>.  
  
 [!code-csharp[ClickOnceQueryString#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceQueryString/CS/Form1.cs#1)]
 [!code-vb[ClickOnceQueryString#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceQueryString/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CheckForDetailedUpdate">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Realiza la misma operación que <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />, pero devuelve información extendida sobre la actualización disponible.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CheckForDetailedUpdate">
      <MemberSignature Language="C#" Value="public System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForDetailedUpdate () As UpdateCheckInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Deployment::Application::UpdateCheckInfo ^ CheckForDetailedUpdate();" />
      <MemberSignature Language="F#" Value="member this.CheckForDetailedUpdate : unit -&gt; System.Deployment.Application.UpdateCheckInfo" Usage="applicationDeployment.CheckForDetailedUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.UpdateCheckInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Realiza la misma operación que <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />, pero devuelve información extendida sobre la actualización disponible.</summary>
        <returns>Un valor de <see cref="T:System.Deployment.Application.UpdateCheckInfo" /> para la actualización disponible.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> extendido de permite método sincrónicos que los llamadores obtengan la misma información que los llamadores asincrónicos obtienen utilizando la <xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs> clase.  
  
   
  
## Examples  
 El siguiente ejemplo de código usa <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> para recuperar la información acerca de la actualización más reciente. Si existe una actualización, ésta instala automáticamente si es una actualización necesaria; en caso contrario, pide al usuario.  
  
 [!code-cpp[ClickOnceAPI#7](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#7)]
 [!code-csharp[ClickOnceAPI#7](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#7)]
 [!code-vb[ClickOnceAPI#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La aplicación actual no está configurada para admitir las actualizaciones o ya hay en curso otra operación de comprobación de actualización.</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">No se puede descargar el manifiesto de implementación. Esta excepción aparecerá en la propiedad <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> del evento <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" />.</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">El manifiesto de implementación está dañado. Vuelva a generar el manifiesto de la aplicación antes de intentar implementar esta aplicación en los equipos de los usuarios. Esta excepción aparecerá en la propiedad <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> del evento <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" />.</exception>
        <permission cref="T:System.Security.PermissionSet">Para obtener acceso completo al equipo local. Enumeración asociada: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="CheckForDetailedUpdate">
      <MemberSignature Language="C#" Value="public System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate (bool persistUpdateCheckResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate(bool persistUpdateCheckResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForDetailedUpdate (persistUpdateCheckResult As Boolean) As UpdateCheckInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Deployment::Application::UpdateCheckInfo ^ CheckForDetailedUpdate(bool persistUpdateCheckResult);" />
      <MemberSignature Language="F#" Value="member this.CheckForDetailedUpdate : bool -&gt; System.Deployment.Application.UpdateCheckInfo" Usage="applicationDeployment.CheckForDetailedUpdate persistUpdateCheckResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.UpdateCheckInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistUpdateCheckResult" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="persistUpdateCheckResult">Si es <see langword="false" />, la actualización se aplicará automáticamente y no se mostrará ningún cuadro de diálogo.</param>
        <summary>Realiza la misma operación que <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />, pero devuelve información extendida sobre la actualización disponible.</summary>
        <returns>Un valor de <see cref="T:System.Deployment.Application.UpdateCheckInfo" /> para la actualización disponible.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CheckForUpdate">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Comprueba <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> para determinar si hay una nueva actualización disponible.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CheckForUpdate">
      <MemberSignature Language="C#" Value="public bool CheckForUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckForUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForUpdate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckForUpdate();" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdate : unit -&gt; bool" Usage="applicationDeployment.CheckForUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Comprueba <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> para determinar si hay una nueva actualización disponible.</summary>
        <returns>Es <see langword="true" /> si hay una nueva actualización disponible; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> método compara la versión de la implementación actualmente instalada con la versión especificada en el manifiesto de implementación que se encuentra en <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>. Si la versión en el servidor es diferente de la versión instalada, devuelve `true`.  
  
 Este método se bloqueará hasta que se ha completado la comprobación. Para comprobar si hay una actualización de forma asincrónica, use la <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> método en su lugar.  
  
> [!NOTE]
>  Si <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> detecta que hay disponible una actualización, y el usuario decide no instalar, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] solicitará al usuario que hay disponible una actualización la próxima vez que se ejecuta la aplicación. No hay ninguna manera de deshabilitar esta indicación. (Si la aplicación es una actualización necesaria, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] instalará sin preguntar.)  
  
   
  
## Examples  
 En el ejemplo de código siguiente se comprueba una actualización de la aplicación; Si está disponible, ésta instala de forma sincrónica.  
  
 [!code-cpp[ClickOnceAPI#5](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#5)]
 [!code-csharp[ClickOnceAPI#5](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#5)]
 [!code-vb[ClickOnceAPI#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] produce inmediatamente esta excepción si se llama al método <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" /> habiendo una actualización en curso.</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">No se puede descargar el manifiesto de implementación.</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">El manifiesto de implementación está dañado. Probablemente necesite implementar de nuevo la aplicación para corregir este problema.</exception>
        <permission cref="T:System.Security.PermissionSet">Para obtener acceso completo al equipo local. Enumeración asociada: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdate">
      <MemberSignature Language="C#" Value="public bool CheckForUpdate (bool persistUpdateCheckResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckForUpdate(bool persistUpdateCheckResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForUpdate (persistUpdateCheckResult As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckForUpdate(bool persistUpdateCheckResult);" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdate : bool -&gt; bool" Usage="applicationDeployment.CheckForUpdate persistUpdateCheckResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistUpdateCheckResult" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="persistUpdateCheckResult">Si es <see langword="false" />, la actualización se aplicará automáticamente y no se mostrará ningún cuadro de diálogo.</param>
        <summary>Comprueba <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> para determinar si hay una nueva actualización disponible.</summary>
        <returns>Es <see langword="true" /> si hay una nueva actualización disponible; en caso contrario, es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateAsync">
      <MemberSignature Language="C#" Value="public void CheckForUpdateAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckForUpdateAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckForUpdateAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckForUpdateAsync();" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateAsync : unit -&gt; unit" Usage="applicationDeployment.CheckForUpdateAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Comprueba <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> de manera asincrónica para determinar si hay una nueva actualización disponible.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> se devuelve inmediatamente y se inicia un subproceso independiente para descargar la aplicación actualizada. Cuando el método se completa o se cancela, se genera el <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> eventos. Puede usar <xref:System.ComponentModel.AsyncCompletedEventArgs> en este controlador de eventos para determinar si la operación se canceló o si se generó una excepción durante la actualización.  
  
 Puede cancelar una actualización asincrónica mediante una llamada a <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel%2A>.  
  
> [!NOTE]
>  Si <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> detecta que hay disponible una actualización, y el usuario decide no instalar, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] solicitará al usuario que hay disponible una actualización la próxima vez que se ejecuta la aplicación. No hay ninguna manera de deshabilitar esta indicación. (Si la aplicación es una actualización necesaria, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] instalará sin preguntar.)  
  
   
  
## Examples  
 En el ejemplo siguiente se comprueba si hay una actualización de forma asincrónica e instala la actualización si existe alguno.  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] produce inmediatamente esta excepción si se llama al método <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" /> habiendo una actualización en curso.</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">No se puede descargar el manifiesto de implementación. Esta excepción aparece en la propiedad <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> del evento <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" />.</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">El manifiesto de implementación está dañado. Probablemente necesite implementar de nuevo la aplicación para corregir este problema. Esta excepción aparece en la propiedad <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> del evento <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" />.</exception>
        <permission cref="T:System.Security.PermissionSet">Para obtener acceso completo al equipo local. Enumeración asociada: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel" />
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateAsyncCancel">
      <MemberSignature Language="C#" Value="public void CheckForUpdateAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckForUpdateAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckForUpdateAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckForUpdateAsyncCancel();" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateAsyncCancel : unit -&gt; unit" Usage="applicationDeployment.CheckForUpdateAsyncCancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancela la comprobación de actualización asincrónica.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este método para cancelar una comprobación de actualización iniciada con la <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> método.  
  
 Este método no cancelará todas las actualizaciones en segundo plano que ya esté en curso, como una actualización iniciada como parte de una suscripción. Para obtener más información acerca de las suscripciones, vea [elegir una estrategia de actualización de ClickOnce](https://msdn.microsoft.com/library/d8b6e7bb-4ea0-47f3-91cd-48580bdceccc).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateCompleted">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.CheckForUpdateCompletedEventHandler CheckForUpdateCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.CheckForUpdateCompletedEventHandler CheckForUpdateCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CheckForUpdateCompleted As CheckForUpdateCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::CheckForUpdateCompletedEventHandler ^ CheckForUpdateCompleted;" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateCompleted : System.Deployment.Application.CheckForUpdateCompletedEventHandler " Usage="member this.CheckForUpdateCompleted : System.Deployment.Application.CheckForUpdateCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.CheckForUpdateCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce al finalizar <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs> clase le dirá, entre otras cosas, la versión de la actualización, lo grande que sea la actualización y si la actualización disponible es obligatorio u opcional.  
  
   
  
## Examples  
 El siguiente ejemplo de código usa <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> para decidir si se pregunta al usuario que instale la actualización de aplicaciones disponibles. Si la actualización es una actualización obligatoria, la <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> controlador de eventos no preguntar al usuario. El ejemplo requiere que se implemente una aplicación de Windows Forms que incluye un <xref:System.Windows.Forms.StatusStrip> control y que este control contiene un <xref:System.Windows.Forms.ToolStripStatusLabel> control denominado `downloadStatus`.  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DeploymentProgressChangedEventHandler CheckForUpdateProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DeploymentProgressChangedEventHandler CheckForUpdateProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CheckForUpdateProgressChanged As DeploymentProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DeploymentProgressChangedEventHandler ^ CheckForUpdateProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " Usage="member this.CheckForUpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DeploymentProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando hay una actualización de progreso disponible en una llamada a <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged> informes sobre el estado de descarga de la implementación de la aplicación del manifiesto. Esto puede ser información importante para los usuarios que descarguen la implementación a través de conexiones de red lenta.  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged> eventos para informar al usuario cuánto del manifiesto de implementación se deja para descargar. El ejemplo requiere que se implemente una aplicación de Windows Forms que incluye un <xref:System.Windows.Forms.StatusStrip> control y que este control contiene un <xref:System.Windows.Forms.ToolStripStatusLabel> control denominado `downloadStatus`. 
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentDeployment">
      <MemberSignature Language="C#" Value="public static System.Deployment.Application.ApplicationDeployment CurrentDeployment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Deployment.Application.ApplicationDeployment CurrentDeployment" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.CurrentDeployment" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentDeployment As ApplicationDeployment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Deployment::Application::ApplicationDeployment ^ CurrentDeployment { System::Deployment::Application::ApplicationDeployment ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentDeployment : System.Deployment.Application.ApplicationDeployment" Usage="System.Deployment.Application.ApplicationDeployment.CurrentDeployment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.ApplicationDeployment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve el actual valor de <see cref="T:System.Deployment.Application.ApplicationDeployment" /> para esta implementación.</summary>
        <value>La implementación actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No se puede crear instancias de <xref:System.Deployment.Application.ApplicationDeployment> directamente en la aplicación; debe recuperar una instancia válida mediante el <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> propiedad.  
  
 El <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> propiedad estática es válido únicamente desde dentro de una aplicación que se implementó usando [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]. Si intenta llamar a esta propiedad desde que no sean de[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplicaciones iniciará una excepción. Si está desarrollando una aplicación que puede o no se puede implementar utilizando [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)], utilice el <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> propiedad para comprobar si el programa actual es un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplicación.  
  
   
  
## Examples  
 El siguiente código en el ejemplo se recupera <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> y comprobaciones para determinar si la aplicación se ha actualizado en los últimos tres días.  
  
 [!code-cpp[ClickOnceAPI#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#3)]
 [!code-csharp[ClickOnceAPI#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#3)]
 [!code-vb[ClickOnceAPI#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">Se ha intentado llamar a esta propiedad estática desde una aplicación que no sea [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].</exception>
        <altmember cref="P:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed" />
      </Docs>
    </Member>
    <Member MemberName="CurrentVersion">
      <MemberSignature Language="C#" Value="public Version CurrentVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version CurrentVersion" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.CurrentVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ CurrentVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentVersion : Version" Usage="System.Deployment.Application.ApplicationDeployment.CurrentVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la versión de implementación de la actual instancia de la aplicación.</summary>
        <value>La versión de implementación actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A> será diferente de <xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A> si se ha instalado una nueva actualización pero aún no se ha llamado <xref:System.Windows.Forms.Application.Restart%2A>. Si el manifiesto de implementación está configurado para llevar a cabo las actualizaciones automáticas, puede comparar estos dos valores para determinar si se debe reiniciar la aplicación.  
  
   
  
## Examples  
 El ejemplo de código siguiente define un método que determina si [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] ha actualizado la aplicación.  
  
 [!code-cpp[ClickOnceAPI#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#3)]
 [!code-csharp[ClickOnceAPI#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#3)]
 [!code-vb[ClickOnceAPI#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Para obtener acceso completo al equipo local. Enumeración asociada: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <altmember cref="P:System.Deployment.Application.ApplicationDeployment.UpdatedVersion" />
      </Docs>
    </Member>
    <Member MemberName="DataDirectory">
      <MemberSignature Language="C#" Value="public string DataDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.DataDirectory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataDirectory { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataDirectory : string" Usage="System.Deployment.Application.ApplicationDeployment.DataDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la ruta de acceso al directorio de datos de [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].</summary>
        <value>Una cadena que contiene la ruta de acceso al directorio de datos de la aplicación en el disco local.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroup">
      <MemberSignature Language="C#" Value="public void DownloadFileGroup (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroup(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroup (groupName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroup(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroup : string -&gt; unit" Usage="applicationDeployment.DownloadFileGroup groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">Grupo con nombre de los archivos que se van a descargar. Todos los archivos marcados como "opcionales" en una aplicación [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] requieren un nombre de grupo.</param>
        <summary>Descarga un conjunto de archivos opcionales a petición.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplicación, los archivos marcados como "opcionales" en el manifiesto de aplicación no se descargan durante la inicialización o actualización. Puede usar el <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> método para descargar todos los archivos que pertenecen a un grupo con nombre a petición, de modo que no consumen recursos de red y espacio en disco hasta que el usuario los requiere. Por ejemplo, determinados usuarios deba usar un paquete de análisis de datos incluido en la aplicación a diario, mientras que otros usuarios lo no pueden invocar nunca.  
  
 Usar un ensamblado que ha descargado con <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>, adjuntar un agente de escucha de eventos para el <xref:System.AppDomain.AssemblyResolve> eventos en el <xref:System.AppDomain.CurrentDomain%2A>. Para obtener un ejemplo, vea =[Tutorial: Descargar ensamblados a petición con la API mediante el Diseñador de implementación de ClickOnce](https://msdn.microsoft.com/library/59a0dd5f-1cab-4f2f-b780-0ab7399905d5).  
  
 Todos los archivos se descargan en el [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] caché de la aplicación y son, por tanto, aislado a la versión actual de la aplicación. Supongamos que después de una aplicación descarga un grupo de archivos, el usuario instala una nueva versión de la aplicación, pero más adelante vuelve a la versión anterior de la aplicación. En este caso, la versión anterior todavía tendrá las copias de los archivos que descargó originalmente. Para obtener más información sobre el acceso a los archivos de datos, vea [obtener acceso Local y remota de datos en aplicaciones ClickOnce](https://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).  
  
 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> funciona en aplicaciones de confianza parcial, es decir, en cualquier [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplicación que se ejecuta con permisos restringidos. Sin embargo, si intenta cargar dinámicamente ensamblados, la aplicación requerirá plena confianza.  
  
 Descarga de archivos de datos a petición no se admite.  
  
 La aplicación no responderá a la entrada del usuario hasta la <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> devuelve del método. Si necesita descargar los archivos sin interrumpir el flujo de trabajo del usuario, use el <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> método en su lugar.  
  
 No se puede descargar un solo archivo por su nombre de archivo por sí solo. Para descargar un solo archivo, asignar un nombre de grupo en su [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] implementación y el grupo con este método de descarga.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo cargar un ensamblado a petición realizando escuchas para los <xref:System.AppDomain.AssemblyResolve> eventos.  
  
 [!code-csharp[ClickOnceOnDemandCmdLine#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceOnDemandCmdLine/CS/Form1.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor del parámetro <paramref name="groupName" /> es null o longitud cero.</exception>
        <altmember cref="Overload:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync" />
        <related type="Article" href="https://msdn.microsoft.com/library/fdaa553f-a27e-44eb-a4e2-08c122105a87">Tutorial: Descargar ensamblados satélite a petición con la API de implementación de ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/29570cec-4e53-4660-a850-abc4fa150243">ClickOnce Application Manifest</related>
        <related type="Article" href="https://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d">Obtener acceso local o remoto a los datos en aplicaciones ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/89ee46ef-bc8c-4ab0-a2ac-1220f9da06fc">Cómo: Incluir un archivo de datos en una aplicación ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/e379921e-9ef1-4326-bbf3-53ba67925526">Arquitectura de la memoria caché de ClickOnce</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFileGroupAsync">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Descarga a petición un conjunto de archivos opcionales en segundo plano.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFileGroupAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileGroupAsync (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroupAsync(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroupAsync (groupName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroupAsync(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupAsync : string -&gt; unit" Usage="applicationDeployment.DownloadFileGroupAsync groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">Grupo con nombre de los archivos que se van a descargar. Todos los archivos marcados como "opcionales" en una aplicación [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] requieren un nombre de grupo.</param>
        <summary>Descarga a petición un conjunto de archivos opcionales en segundo plano.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplicación, los archivos marcados como "opcionales" en el manifiesto de aplicación no se descargan durante la inicialización o actualización. Puede usar el <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> método para descargar todos los archivos que pertenecen a un grupo con nombre a petición, de modo que no consumen recursos de red y espacio en disco hasta que el usuario los requiere. Este enfoque funciona no solo para los archivos estáticos, sino también para los ensamblados que una aplicación puede necesita o no. Por ejemplo, determinados usuarios deba usar un paquete de análisis de datos incluido en la aplicación a diario, mientras que otros usuarios lo no pueden invocar nunca.  
  
 Para descargar ensamblados a petición, adjuntar un agente de escucha de eventos para el <xref:System.AppDomain.AssemblyResolve> eventos en el <xref:System.AppDomain.CurrentDomain%2A>. Para obtener un ejemplo, vea [Tutorial: Descargar ensamblados a petición con la API de implementación ClickOnce](https://msdn.microsoft.com/library/d20e2789-8621-4806-b5b7-841122da1456).  
  
 Todos los ensamblados se descargan en el [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] caché de la aplicación.  
  
 Todos los archivos estáticos se descargan en el [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] son y directorio de datos de la aplicación, por tanto, aislado a la versión actual de la aplicación. Supongamos que después de una aplicación descarga un grupo de archivos, el usuario instala una nueva versión de la aplicación, pero más adelante vuelve a la versión anterior de la aplicación. En este caso, la versión anterior todavía tendrá las copias de los archivos que descargó originalmente. Para obtener más información sobre el acceso a los archivos estáticos, vea [obtener acceso Local y remota de datos en aplicaciones ClickOnce](https://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).  
  
 Puede descargar simultáneamente con varios grupos de archivos <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>. Puede distinguir entre ellos mediante el uso de la <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A> propiedad de la <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> (clase), que se pasa a la <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> eventos. Si necesita pasar información de estado más complejo, puede usar <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> para pasar un `state` objeto.  
  
 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> funciona en aplicaciones de confianza parcial, es decir, en cualquier [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplicación que se ejecuta con permisos restringidos. Sin embargo, si está intentando cargar dinámicamente ensamblados, la aplicación requerirá plena confianza.  
  
 Descarga de archivos de datos a petición no se admite.  
  
 No se puede descargar un solo archivo por su nombre de archivo por sí solo. Para descargar un solo archivo, asignar un nombre de grupo en su [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] implementación y el grupo con este método de descarga.  
  
 Para cancelar una descarga asincrónica, llame a la <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor del parámetro <paramref name="groupName" /> es null o longitud cero.</exception>
        <exception cref="T:System.InvalidOperationException">No se puede iniciar más de una descarga de <paramref name="groupName" /> a la vez.</exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/fdaa553f-a27e-44eb-a4e2-08c122105a87">Tutorial: Descargar ensamblados satélite a petición con la API de implementación de ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/29570cec-4e53-4660-a850-abc4fa150243">ClickOnce Application Manifest</related>
        <related type="Article" href="https://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d">Obtener acceso local o remoto a los datos en aplicaciones ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/89ee46ef-bc8c-4ab0-a2ac-1220f9da06fc">Cómo: Incluir un archivo de datos en una aplicación ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/e379921e-9ef1-4326-bbf3-53ba67925526">Arquitectura de la memoria caché de ClickOnce</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileGroupAsync (string groupName, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroupAsync(string groupName, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroupAsync (groupName As String, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroupAsync(System::String ^ groupName, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupAsync : string * obj -&gt; unit" Usage="applicationDeployment.DownloadFileGroupAsync (groupName, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="groupName">Grupo con nombre de los archivos que se van a descargar. Todos los archivos marcados como "opcionales" en una aplicación [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] requieren un nombre de grupo.</param>
        <param name="userState">Objeto arbitrario que contiene información de estado de la operación asincrónica.</param>
        <summary>Descarga a petición un conjunto de archivos opcionales en segundo plano y pasa una parte del estado de la aplicación a las devoluciones de llamada de evento.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplicación, los archivos marcados como "opcionales" en el manifiesto de aplicación no se descargan durante la inicialización o actualización. Puede usar el <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> método para descargar todos los archivos que pertenecen a un grupo con nombre a petición, de modo que no consumen recursos de red y espacio en disco hasta que el usuario los requiere. Este enfoque funciona no solo para los archivos estáticos, sino también para los ensamblados que una aplicación puede necesita o no. Por ejemplo, determinados usuarios deba usar un paquete de análisis de datos incluido en la aplicación a diario, mientras que otros usuarios lo no pueden invocar nunca. Para descargar ensamblados a petición, adjuntar un agente de escucha de eventos para el <xref:System.AppDomain.AssemblyResolve> eventos en el <xref:System.AppDomain.CurrentDomain%2A>.  
  
 Puede descargar simultáneamente varios grupos de archivos mediante el uso de la <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> método. Puede distinguir entre ellos mediante el uso de la <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A> propiedad de la <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> (clase), que se pasa a la <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> eventos. Si necesita pasar un estado más complejo, puede usar  
  
 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> para pasar un `state` objeto.  
  
 Todos los archivos estáticos se descargan en el [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] son y directorio de datos de la aplicación, por tanto, aislado a la versión actual de la aplicación. Para obtener más información sobre el acceso a los archivos estáticos, vea [obtener acceso Local y remota de datos en aplicaciones ClickOnce](https://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d). . Supongamos después de un grupo de archivos de descarga de una aplicación, el usuario instala una nueva versión de la aplicación, pero posteriormente revierte a la versión anterior de la aplicación. En este caso, la versión anterior todavía tendrá las copias de los archivos que descargó originalmente.  
  
 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> funciona en aplicaciones de confianza parcial, es decir, en cualquier [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplicación que se ejecuta con permisos restringidos. Sin embargo, si está intentando cargar dinámicamente ensamblados, la aplicación requerirá plena confianza.  
  
 Descarga de archivos de datos a petición no se admite.  
  
 Para cancelar una descarga asincrónica, llame a la <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor del parámetro <paramref name="groupName" /> es null o longitud cero.</exception>
        <exception cref="T:System.InvalidOperationException">No se puede iniciar más de una descarga de <paramref name="groupName" /> a la vez.</exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/fdaa553f-a27e-44eb-a4e2-08c122105a87">Tutorial: Descargar ensamblados satélite a petición con la API de implementación de ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/29570cec-4e53-4660-a850-abc4fa150243">ClickOnce Application Manifest</related>
        <related type="Article" href="https://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d">Obtener acceso local o remoto a los datos en aplicaciones ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/89ee46ef-bc8c-4ab0-a2ac-1220f9da06fc">Cómo: Incluir un archivo de datos en una aplicación ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/e379921e-9ef1-4326-bbf3-53ba67925526">Arquitectura de la memoria caché de ClickOnce</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupAsyncCancel">
      <MemberSignature Language="C#" Value="public void DownloadFileGroupAsyncCancel (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroupAsyncCancel(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroupAsyncCancel (groupName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroupAsyncCancel(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupAsyncCancel : string -&gt; unit" Usage="applicationDeployment.DownloadFileGroupAsyncCancel groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">Grupo con nombre de los archivos que se van a descargar. Todos los archivos marcados como "opcionales" en una aplicación [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] requieren un nombre de grupo.</param>
        <summary>Cancela una descarga de archivos asincrónica.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="groupName" /> no puede ser <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupCompleted">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DownloadFileGroupCompletedEventHandler DownloadFileGroupCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DownloadFileGroupCompletedEventHandler DownloadFileGroupCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadFileGroupCompleted As DownloadFileGroupCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DownloadFileGroupCompletedEventHandler ^ DownloadFileGroupCompleted;" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupCompleted : System.Deployment.Application.DownloadFileGroupCompletedEventHandler " Usage="member this.DownloadFileGroupCompleted : System.Deployment.Application.DownloadFileGroupCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DownloadFileGroupCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce en el subproceso principal de la aplicación al finalizar una descarga de archivos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted> se llama al evento en el subproceso principal de la aplicación. Resulta que es seguro para subprocesos llamar a los controles de Windows Forms de la aplicación directamente dentro de esta devolución de llamada.  
  
 Compruebe el <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> propiedad de la <xref:System.ComponentModel.AsyncCompletedEventArgs> proporcionado a esta devolución de llamada. Si esta propiedad es `null`, fue correcta; si no es la descarga `null`, la instalación no se realizó correctamente y se puede encontrar más información sobre el error de instalación a través de la <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se descarga un grupo de archivos de ayuda en segundo plano. El ejemplo requiere que se implemente una aplicación de Windows Forms que incluye un <xref:System.Windows.Forms.StatusStrip> control y que este control contiene un <xref:System.Windows.Forms.ToolStripStatusLabel> control denominado `downloadStatus`. 
  
 [!code-cpp[ClickOnceAPI#8](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#8)]
 [!code-csharp[ClickOnceAPI#8](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#8)]
 [!code-vb[ClickOnceAPI#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DeploymentProgressChangedEventHandler DownloadFileGroupProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DeploymentProgressChangedEventHandler DownloadFileGroupProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadFileGroupProgressChanged As DeploymentProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DeploymentProgressChangedEventHandler ^ DownloadFileGroupProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " Usage="member this.DownloadFileGroupProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DeploymentProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando hay información de estado disponible en una operación de descarga de archivos iniciada por una llamada a <see cref="Overload:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> se llama al evento en el subproceso principal de la aplicación. Resulta que es seguro para subprocesos llamar a los controles de Windows Forms de la aplicación directamente dentro de esta devolución de llamada.  
  
 Use la información proporcionada en <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> para comunicar la información de progreso a los usuarios.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se descarga un grupo de archivos de ayuda en segundo plano. El ejemplo requiere que se implemente una aplicación de Windows Forms que incluye un <xref:System.Windows.Forms.StatusStrip> control y que este control contiene un <xref:System.Windows.Forms.ToolStripStatusLabel> control denominado `downloadStatus`.  
  
 [!code-cpp[ClickOnceAPI#8](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#8)]
 [!code-csharp[ClickOnceAPI#8](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#8)]
 [!code-vb[ClickOnceAPI#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFileGroupDownloaded">
      <MemberSignature Language="C#" Value="public bool IsFileGroupDownloaded (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsFileGroupDownloaded(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsFileGroupDownloaded (groupName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsFileGroupDownloaded(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.IsFileGroupDownloaded : string -&gt; bool" Usage="applicationDeployment.IsFileGroupDownloaded groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">Grupo con nombre de los archivos que se van a descargar. Todos los archivos marcados como "opcionales" en una aplicación [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] requieren un nombre de grupo.</param>
        <summary>Comprueba si el grupo de archivos con nombre ya se ha descargado al equipo cliente.</summary>
        <returns>Es <see langword="true" /> si el grupo de archivos ya se ha descargado para la versión actual de esta aplicación; de lo contrario, es <see langword="false" />. Si se ha instalado una nueva versión de la aplicación y la nueva versión no ha agregado, quitado ni modificado los archivos del grupo de archivos, <see cref="M:System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)" /> devuelve <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded%2A> funciona en una aplicación de confianza parcial sin ninguna petición de seguridad.  
  
 Cuando se actualiza una aplicación, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] copia los archivos de datos y a petición desde la versión anterior en el directorio de datos de la versión nueva. Si descarga una nueva versión de estos archivos, debe quitar los datos que desea impedir que la versión anterior y moverla a la nueva versión.  
  
   
  
## Examples  
 El ejemplo de código siguiente descarga todos los archivos en el `HelpFiles` grupo en el disco.  
  
 [!code-cpp[ClickOnceAPI#8](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#8)]
 [!code-csharp[ClickOnceAPI#8](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#8)]
 [!code-vb[ClickOnceAPI#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException"><paramref name="groupName" /> no es un grupo de archivos definido en el manifiesto de aplicación.</exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
        <altmember cref="Overload:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync" />
      </Docs>
    </Member>
    <Member MemberName="IsFirstRun">
      <MemberSignature Language="C#" Value="public bool IsFirstRun { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFirstRun" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.IsFirstRun" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFirstRun As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFirstRun { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFirstRun : bool" Usage="System.Deployment.Application.ApplicationDeployment.IsFirstRun" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si es la primera vez que esta aplicación se ha ejecutado en el equipo cliente.</summary>
        <value>Es <see langword="true" /> si esta versión de la aplicación jamás se ha ejecutado en el equipo cliente; de lo contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> para determinar si necesita realizar operaciones de inicialización única de la primera vez que se ejecuta la aplicación.  
  
 No suponga que un <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> de `true` indica que esta instancia de una aplicación es la primera de ellas para mostrar su interfaz de usuario para el usuario. Debido a la manera en que el sistema programa los procesos, una instancia de la aplicación puede tener su <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> propiedad establecida en `true`, pero otra instancia puede ser la primera que se representará en la pantalla. El valor de esta propiedad se restablece cada vez que el usuario realiza una actualización de una versión a la siguiente. Si desea realizar una operación solo la primera vez cualquier versión de la aplicación se ejecuta, deberá realizar una comprobación adicional, como comprobar la existencia de un archivo que se crea la primera vez o almacenar un indicador utilizando **aplicación Configuración de**.  
  
   
  
## Examples  
 El siguiente ejemplo de código usa <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> decidir si desea buscar una actualización para el grupo de archivos `HelpFiles`. Si uno o varios de los archivos se han actualizado, llama a <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> para obtener las nuevas versiones.  
  
 [!code-csharp[ClickOnceAPI#9](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#9)]
 [!code-vb[ClickOnceAPI#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Para obtener acceso completo al equipo local. Enumeración asociada: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="IsNetworkDeployed">
      <MemberSignature Language="C#" Value="public static bool IsNetworkDeployed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsNetworkDeployed" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsNetworkDeployed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsNetworkDeployed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNetworkDeployed : bool" Usage="System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si la aplicación actual es una aplicación [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].</summary>
        <value>Es <see langword="true" /> si se trata de una aplicación [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si desea que la aplicación para que se ejecuten dentro y fuera de un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] implementación (por ejemplo, si tiene que depurar la aplicación en el equipo local antes de la implementación), la prueba <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> antes de acceder a la <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> propiedad.  
  
 <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> devolverá `true` independientemente de si la aplicación está instalada u hospedada en línea e independientemente de si se instaló desde un sitio Web, un recurso compartido de archivos o un CD-ROM.  
  
   
  
## Examples  
 El siguiente código en el ejemplo se recupera <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> utilizando <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> primero para asegurarse de que la referencia no es `null`.  
  
 [!code-cpp[ClickOnceAPI#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#2)]
 [!code-csharp[ClickOnceAPI#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Para obtener acceso completo al equipo local. Enumeración asociada: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="TimeOfLastUpdateCheck">
      <MemberSignature Language="C#" Value="public DateTime TimeOfLastUpdateCheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime TimeOfLastUpdateCheck" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeOfLastUpdateCheck As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime TimeOfLastUpdateCheck { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeOfLastUpdateCheck : DateTime" Usage="System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la fecha y la hora en que [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] comprobó por última vez la existencia de una actualización de la aplicación.</summary>
        <value>El valor de <see cref="T:System.DateTime" /> de la última comprobación de actualización.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplicación puede configurarse para las actualizaciones de suscripción. En este escenario, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] sondea la ubicación de implementación de una aplicación automáticamente a intervalos definidos en el manifiesto de implementación y determina si hay una actualización disponible. <xref:System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck%2A> Devuelve la hora de la última comprobación de actualización, independientemente de si inició una suscripción o una comprobación explícita utilizando la <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A>, <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>, <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A>, <xref:System.Deployment.Application.ApplicationDeployment.Update%2A>, o <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> método.  
  
 Si no se ha realizado ninguna comprobación de actualización desde que se instaló la aplicación, <xref:System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck%2A> devuelve la hora de instalación.  
  
   
  
## Examples  
 El código siguiente ejemplo se comprueba si un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] se ha comprobado la aplicación si hay actualizaciones disponibles en los últimos tres días.  
  
 [!code-cpp[ClickOnceAPI#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#3)]
 [!code-csharp[ClickOnceAPI#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#3)]
 [!code-vb[ClickOnceAPI#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Para obtener acceso completo al equipo local. Enumeración asociada: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <related type="Article" href="https://msdn.microsoft.com/library/d8b6e7bb-4ea0-47f3-91cd-48580bdceccc">Elegir una estrategia de actualización de ClickOnce</related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public bool Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.Update" />
      <MemberSignature Language="VB.NET" Value="Public Function Update () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; bool" Usage="applicationDeployment.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicia la descarga sincrónica y la instalación de la última versión de esta aplicación.</summary>
        <returns>Es <see langword="true" /> si se ha actualizado una aplicación; en caso contrario, es <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se considera una aplicación actualizada cuando se publica una nueva versión de la aplicación a la ubicación especificada por <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>, y el número de versión en el manifiesto de implementación de la aplicación es mayor que el número de versión de la aplicación actualmente instalado en el equipo del usuario.  
  
 El <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> llamada se bloqueará hasta que la actualización se ha descargado en el equipo cliente e instala en el [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] almacenar en caché; durante este tiempo, la aplicación no seguirá respondiendo al usuario. Si desea mantener la capacidad de respuesta de la aplicación o mostrar un informe de progreso durante la descarga, use el <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> método en su lugar.  
  
 <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> descarga todos los archivos que no están marcados como "opcionales" en el manifiesto de aplicación. Puede descargar archivos opcionales a petición mediante el <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> o <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> método.  
  
 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] es posible que ya esté actualizando la aplicación automáticamente cuando se llama a la <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> método; si esto ocurre, las llamadas a este método producirá una <xref:System.InvalidOperationException>.  
  
 Si ha actualizado uno o varios archivos en la implementación, pero no se ha actualizado el manifiesto de aplicación, recibirá un <xref:System.Deployment.Application.InvalidDeploymentException>. La mayoría de las veces, volver a implementar su [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplicación soluciona este problema. También recibirá esta excepción si una firma de clave pública en un manifiesto de implementación o el manifiesto de aplicación es válida o falta.  
  
 Una actualización puede solicitar un mayor nivel de confianza en el equipo local que la versión anterior de la aplicación. Si la aplicación utiliza la implementación de aplicaciones de confianza, el Administrador de confianza de common language runtime (CLR) examina el manifiesto de implementación para determinar si contiene una licencia de confianza válida. Si el manifiesto de implementación no tiene una licencia de confianza válida, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] detiene la instalación y produce una <xref:System.Deployment.Application.TrustNotGrantedException>. El <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> método nunca mostrará un mensaje que pregunta al usuario si desea conceder permiso para ejecutar la aplicación.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se comprueba una actualización de la aplicación; Si hay disponible una actualización, ésta instala de forma sincrónica.  
  
 [!code-cpp[ClickOnceAPI#6](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#6)]
 [!code-csharp[ClickOnceAPI#6](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#6)]
 [!code-vb[ClickOnceAPI#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.TrustNotGrantedException">El equipo local no concedió a la aplicación el nivel de permiso que solicitó para la ejecución.</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">La implementación de [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] está dañada. Para obtener sugerencias sobre cómo diagnosticar y corregir el problema, consulte [Solucionar problemas en implementaciones ClickOnce](https://msdn.microsoft.com/library/58e90012-f68b-4852-8ae9-58e361cbcc32).</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">La nueva implementación no se pudo descargar desde su ubicación en la red.</exception>
        <exception cref="T:System.InvalidOperationException">En este momento se está actualizando la aplicación.</exception>
        <permission cref="T:System.Security.PermissionSet">Para obtener acceso completo al equipo local. Enumeración asociada: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
        <related type="Article" href="https://msdn.microsoft.com/library/d8b6e7bb-4ea0-47f3-91cd-48580bdceccc">Elegir una estrategia de actualización de ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/a05b5f2f-d1f2-471a-8096-8b11f7554265">Seguridad e implementación de ClickOnce</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public void UpdateAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateAsync();" />
      <MemberSignature Language="F#" Value="member this.UpdateAsync : unit -&gt; unit" Usage="applicationDeployment.UpdateAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicia la descarga asincrónica y la instalación de la última versión de esta aplicación.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se considera una aplicación actualizada cuando se publica una nueva versión de la aplicación a la ubicación especificada por <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>, y el número de versión en el manifiesto de implementación de la aplicación es mayor que el número de versión de la aplicación actualmente instalado en el equipo del usuario.  
  
 Al descargar la actualización, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] , se producirá la <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> controlador de eventos en el subproceso principal de la aplicación para informar del estado de la descarga. Cuando la actualización asincrónica finalice o detecte una excepción, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] , se producirá la <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> evento en el subproceso principal de la aplicación. Examine el <xref:System.ComponentModel.AsyncCompletedEventArgs> proporcionado a este evento para determinar si la actualización se realizó correctamente.  
  
 Si <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> produce una excepción, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] llamadas <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> y establece el <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> propiedad de <xref:System.ComponentModel.AsyncCompletedEventArgs> a la excepción que se ha producido.  
  
 <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> descargará todos los archivos en una implementación que no estén marcados como "opcionales" en el manifiesto de aplicación. Puede descargar archivos opcionales a petición mediante el <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> o <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> método.  
  
 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] es posible que ya esté actualizando la aplicación automáticamente cuando se llama a la <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> método; si esto ocurre, las llamadas a este método producirá una <xref:System.InvalidOperationException>.  
  
 Si ha actualizado uno o varios archivos en la implementación, pero no se ha actualizado el manifiesto de aplicación, recibirá un <xref:System.Deployment.Application.InvalidDeploymentException>. La mayoría de las veces, volver a generar el manifiesto de aplicación soluciona este problema. También recibirá esta excepción si una firma de clave pública en un manifiesto de implementación o el manifiesto de aplicación es válida o falta.  
  
 Una actualización puede solicitar un mayor nivel de confianza en el equipo local que la versión anterior de la aplicación. Si la aplicación utiliza la implementación de aplicaciones de confianza, el Administrador de confianza de common language runtime (CLR) examina el manifiesto de implementación para determinar si contiene una licencia de confianza válida. Si el manifiesto de implementación no tiene una licencia de confianza válida, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] detiene la instalación y produce una <xref:System.Deployment.Application.TrustNotGrantedException>. <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> nunca se mostrará un mensaje que pregunta al usuario si desea conceder permiso para ejecutar la aplicación.  
  
   
  
## Examples  
 El ejemplo de código siguiente determina si una nueva actualización está disponible en tiempo de carga de la aplicación; Si está disponible una actualización necesaria, instala la actualización de forma asincrónica. El ejemplo requiere que se implemente una aplicación de Windows Forms que incluye un <xref:System.Windows.Forms.StatusStrip> control y que este control contiene un <xref:System.Windows.Forms.ToolStripStatusLabel> control denominado `downloadStatus`.  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.TrustNotGrantedException">El equipo local no concedió a esta aplicación el nivel de permiso que solicitó para la ejecución.</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">La implementación de [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] está dañada. Para obtener sugerencias sobre cómo diagnosticar y corregir el problema, consulte [Solucionar problemas en implementaciones ClickOnce](https://msdn.microsoft.com/library/58e90012-f68b-4852-8ae9-58e361cbcc32).</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">La nueva implementación no se pudo descargar desde su ubicación en la red.</exception>
        <permission cref="T:System.Security.PermissionSet">Para obtener acceso completo al equipo local. Enumeración asociada: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <altmember cref="E:System.Deployment.Application.ApplicationDeployment.UpdateCompleted" />
        <related type="Article" href="https://msdn.microsoft.com/library/d8b6e7bb-4ea0-47f3-91cd-48580bdceccc">Elegir una estrategia de actualización de ClickOnce</related>
        <related type="Article" href="https://msdn.microsoft.com/library/a05b5f2f-d1f2-471a-8096-8b11f7554265">Seguridad e implementación de ClickOnce</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsyncCancel">
      <MemberSignature Language="C#" Value="public void UpdateAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateAsyncCancel();" />
      <MemberSignature Language="F#" Value="member this.UpdateAsyncCancel : unit -&gt; unit" Usage="applicationDeployment.UpdateAsyncCancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancela una actualización asincrónica iniciada por <see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel%2A> sólo se cancela una actualización iniciada por una llamada a <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>; no se cancela una actualización iniciada como parte de una suscripción.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Para obtener acceso completo al equipo local. Enumeración asociada: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <related type="Article" href="https://msdn.microsoft.com/library/d8b6e7bb-4ea0-47f3-91cd-48580bdceccc">Elegir una estrategia de actualización de ClickOnce</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AsyncCompletedEventHandler UpdateCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AsyncCompletedEventHandler UpdateCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.UpdateCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UpdateCompleted As AsyncCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AsyncCompletedEventHandler ^ UpdateCompleted;" />
      <MemberSignature Language="F#" Value="member this.UpdateCompleted : System.ComponentModel.AsyncCompletedEventHandler " Usage="member this.UpdateCompleted : System.ComponentModel.AsyncCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] ha finalizado la actualización de la aplicación como resultado de una llamada a <see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> se llama al evento en el subproceso principal de la aplicación. Puede llamar a los controles de Windows Forms de la aplicación directamente dentro de esta devolución de llamada sin desencadenar una excepción.  
  
 Compruebe el <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> propiedad de la <xref:System.ComponentModel.AsyncCompletedEventArgs> proporcionado a esta devolución de llamada. Si esta propiedad es `null`, la instalación fue correcta; si no es `null`, la instalación no se realizó correctamente y puede encontrar más información sobre este error de instalación a través de la <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> propiedad. Una vez que se ha descargado la actualización, deberá llamar a la <xref:System.Windows.Forms.Application.Restart%2A> método en el <xref:System.Windows.Forms.Application> para usar la versión más reciente de la aplicación.  
  
 Si se canceló la instalación de la actualización mediante una llamada a <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel%2A>, <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> propiedad de la <xref:System.ComponentModel.AsyncCompletedEventArgs> clase será `true`.  
  
 Para utilizar este controlador de eventos, la aplicación debe importar ambos el <xref:System.Deployment.Application> y <xref:System.ComponentModel> espacios de nombres.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se determina en tiempo de carga de la aplicación si hay una nueva actualización disponible; Si está disponible una actualización necesaria, instala la actualización de forma asincrónica. El ejemplo requiere que se implemente una aplicación de Windows Forms que incluye un <xref:System.Windows.Forms.StatusStrip> control y que este control contiene un <xref:System.Windows.Forms.ToolStripStatusLabel> control denominado `downloadStatus`.  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedApplicationFullName">
      <MemberSignature Language="C#" Value="public string UpdatedApplicationFullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdatedApplicationFullName" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdatedApplicationFullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdatedApplicationFullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdatedApplicationFullName : string" Usage="System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre completo de la aplicación después de su actualización.</summary>
        <value><see cref="T:System.String" /> que contiene el nombre completo de la aplicación.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedVersion">
      <MemberSignature Language="C#" Value="public Version UpdatedVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version UpdatedVersion" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.UpdatedVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdatedVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ UpdatedVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdatedVersion : Version" Usage="System.Deployment.Application.ApplicationDeployment.UpdatedVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la versión de la actualización recientemente descargada.</summary>
        <value>Un valor de <see cref="T:System.Version" /> que describe la versión de la actualización.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A> difiere de <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A> si se ha instalado una nueva actualización pero aún no se ha llamado <xref:System.Windows.Forms.Application.Restart%2A> en el <xref:System.Windows.Forms.Application>. Si el manifiesto de implementación de la aplicación está configurado para realizar las actualizaciones automáticas, puede comparar estos dos valores para determinar si se debe reiniciar la aplicación.  
  
 Si no se ha actualizado la aplicación, <xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A> devuelve el mismo valor que <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>.  
  
   
  
## Examples  
 El ejemplo de código siguiente define un método que determina si [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] ha actualizado la aplicación.  
  
 [!code-cpp[ClickOnceAPI#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#4)]
 [!code-csharp[ClickOnceAPI#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#4)]
 [!code-vb[ClickOnceAPI#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Para obtener acceso completo al equipo local. Enumeración asociada: <see cref="T:System.Security.Permissions.PermissionState" /></permission>
      </Docs>
    </Member>
    <Member MemberName="UpdateLocation">
      <MemberSignature Language="C#" Value="public Uri UpdateLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UpdateLocation" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateLocation As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ UpdateLocation { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateLocation : Uri" Usage="System.Deployment.Application.ApplicationDeployment.UpdateLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el sitio Web o recurso compartido de archivos desde el que se actualiza esta aplicación.</summary>
        <value>La ruta de acceso de actualización, expresada como una dirección HTTP, HTTPS o URL del archivo o como una ruta de acceso al archivo de red en Windows (UNC).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A> puede ser diferente del sitio Web utilizado para descargar la aplicación inicialmente si la implementación de la aplicación está configurada para usar el redireccionamiento de la actualización.  
  
 Este valor se puede cambiar únicamente en el manifiesto de implementación de la aplicación.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Para obtener acceso completo al equipo local. Enumeración asociada: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <related type="Article" href="https://msdn.microsoft.com/library/7faacd35-2638-492d-80f6-6b57e5f820de">Cómo: Especificar una ubicación alternativa para las actualizaciones de la implementación</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DeploymentProgressChangedEventHandler UpdateProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DeploymentProgressChangedEventHandler UpdateProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UpdateProgressChanged As DeploymentProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DeploymentProgressChangedEventHandler ^ UpdateProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.UpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " Usage="member this.UpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DeploymentProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] tiene nueva información de estado sobre una operación de actualización iniciada mediante una llamada al método <see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> se llama al evento en el subproceso principal de la aplicación. Puede llamar a los controles de Windows Forms de la aplicación directamente dentro de esta devolución de llamada sin desencadenar una excepción.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se determina en tiempo de carga de la aplicación si hay una nueva actualización disponible; Si está disponible una actualización necesaria, instala la actualización de forma asincrónica.  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>