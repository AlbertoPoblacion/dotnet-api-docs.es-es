<Type Name="ApplicationDeployment" FullName="System.Deployment.Application.ApplicationDeployment">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4376bd9a83f8a4474d5cb355beaf5e4fca865425" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36677655" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ApplicationDeployment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ApplicationDeployment extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Deployment.Application.ApplicationDeployment" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ApplicationDeployment" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationDeployment sealed" />
  <TypeSignature Language="F#" Value="type ApplicationDeployment = class" />
  <AssemblyInfo>
    <AssemblyName>System.Deployment</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Supports updates of the current deployment programmatically, and handles on-demand downloading of files. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede configurar su [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplicación para buscar actualizaciones e instalarlas de forma automática mediante la `subscription` elemento del manifiesto de implementación. Algunas aplicaciones, sin embargo, necesitan un mayor control sobre sus actualizaciones. Puede que desee instalar las actualizaciones necesarias mediante programación y pedir a los usuarios instalar las actualizaciones opcionales cuando lo consideren oportuno. Si desactiva las actualizaciones de suscripción en el manifiesto de implementación, puede tomar el control completo de las directivas de actualización de la aplicación. Como alternativa, puede utilizar la suscripción automática junto con <xref:System.Deployment.Application.ApplicationDeployment>, lo que permite [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] para actualizar la aplicación de forma periódica, pero usa <xref:System.Deployment.Application.ApplicationDeployment> para descargar las actualizaciones críticas poco después de su lanzamiento.  
  
 Se puede comprobar si la implementación tiene una actualización disponible mediante el uso del <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> o la <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> método; el último método provoca el <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> eventos cuando se finaliza correctamente. <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> Devuelve información importante sobre la actualización, como su número de versión y si es una actualización necesaria para los usuarios actuales. Si hay disponible una actualización, puede instalarlo mediante <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> o <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>; el último método provoca el <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> eventos una vez completada la instalación de la actualización. Para las actualizaciones grandes, puede recibir notificaciones de progreso a través de la <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged> y <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> eventos y use la información de <xref:System.ComponentModel.ProgressChangedEventArgs> para notificar al usuario sobre el estado de descarga.  
  
 También puede usar <xref:System.Deployment.Application.ApplicationDeployment> para descargar archivos grandes y ensamblados a petición. Estos archivos deben marcarse como "opcionales" en el manifiesto de aplicación de la implementación para que no se descarguen durante la instalación. Puede descargar los archivos en cualquier momento durante la duración de la aplicación mediante el uso de la <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> o <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> método. Puede descargar los ensamblados antes de que se carguen en memoria proporcionando un controlador de eventos para el <xref:System.AppDomain.AssemblyResolve> evento en el <xref:System.AppDomain> clase. Para más información, consulte [Tutorial: Descargar ensamblados a petición con la API de implementación de ClickOnce mediante el diseñador](http://msdn.microsoft.com/library/59a0dd5f-1cab-4f2f-b780-0ab7399905d5).  
  
> [!NOTE]
>  Si actualiza un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplicación mientras se ejecuta la aplicación, el usuario no verá las actualizaciones hasta que llame a la <xref:System.Windows.Forms.Application.Restart%2A> método de la <xref:System.Windows.Forms.Application>, que se cierre la instancia de ejecución actual de la aplicación y se reiniciará inmediatamente se.  
  
 <xref:System.Deployment.Application.ApplicationDeployment> no tiene ningún constructor público; obtener instancias de la clase dentro de un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplicación a través de la <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> propiedad. Usa el <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> propiedad para comprobar que la aplicación actual es un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplicación.  
  
 <xref:System.Deployment.Application.ApplicationDeployment> permite comprobar si hay actualizaciones y descargar los archivos actualizados asincrónicamente mediante el uso de la nueva [introducción de patrón asincrónico basado en eventos](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), que expone las devoluciones de llamada de finalización como eventos de clase. <xref:System.Deployment.Application.ApplicationDeployment> se inicia y administra los subprocesos y llamar a la aplicación en el subproceso de interfaz de usuario correcto. A través de esta clase, puede actualizar sin bloquear la aplicación, por lo que el usuario puede continuar trabajando mientras se instala la actualización. Si el usuario debe detener todo el trabajo mientras realiza una actualización, considere la posibilidad de usar los métodos sincrónicos en su lugar.  
  
> [!NOTE]
>  Realización de actualizaciones asincrónicas requiere que la aplicación importe ambos el <xref:System.Deployment.Application> y <xref:System.ComponentModel> los espacios de nombres.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se determina en tiempo de carga de la aplicación si hay una nueva actualización disponible; Si hay disponible una actualización necesaria, el ejemplo de código instala la actualización de forma asincrónica. Este código se debe agregar a un formulario que contenga un <xref:System.Windows.Forms.TextBox> denominado `downloadStatus`.  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ActivationUri">
      <MemberSignature Language="C#" Value="public Uri ActivationUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ActivationUri" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.ActivationUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActivationUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ActivationUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActivationUri : Uri" Usage="System.Deployment.Application.ApplicationDeployment.ActivationUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the URL used to launch the deployment manifest of the application.</summary>
        <value>La cadena de una longitud de cero si la <c>TrustUrlParameters</c> propiedad en el manifiesto de implementación es <see langword="false" />, o si el usuario ha proporcionado un nombre UNC para abrir la implementación o la ha abierto localmente. En caso contrario, el valor devuelto es la dirección URL completa que se usa para iniciar la aplicación, incluidos los parámetros.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad funciona en aplicaciones de plena confianza y confianza parcial.  
  
   
  
## Examples  
 El código siguiente muestra cómo recuperar los parámetros de dirección URL mediante el uso de <xref:System.Deployment.Application.ApplicationDeployment.ActivationUri%2A>y cómo usar la <xref:System.Web.HttpUtility> clase para analizar la cadena de consulta de forma segura. Se consolidan varias apariciones de la misma variable de cadena de consulta en una entrada de devuelto <xref:System.Collections.Specialized.NameValueCollection>.  
  
 [!code-csharp[ClickOnceQueryString#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceQueryString/CS/Form1.cs#1)]
 [!code-vb[ClickOnceQueryString#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceQueryString/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CheckForDetailedUpdate">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Performs the same operation as <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />, but returns extended information about the available update.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CheckForDetailedUpdate">
      <MemberSignature Language="C#" Value="public System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForDetailedUpdate () As UpdateCheckInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Deployment::Application::UpdateCheckInfo ^ CheckForDetailedUpdate();" />
      <MemberSignature Language="F#" Value="member this.CheckForDetailedUpdate : unit -&gt; System.Deployment.Application.UpdateCheckInfo" Usage="applicationDeployment.CheckForDetailedUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.UpdateCheckInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Performs the same operation as <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />, but returns extended information about the available update.</summary>
        <returns>An <see cref="T:System.Deployment.Application.UpdateCheckInfo" /> for the available update.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> extendidos de permite método los llamadores sincrónicos obtengan la misma información que los llamadores asincrónicos obtienen utilizando la <xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs> clase.  
  
   
  
## Examples  
 El siguiente ejemplo de código usa <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> para recuperar la información acerca de la actualización más reciente. Si existe una actualización, ésta instala automáticamente si es una actualización necesaria; en caso contrario, pide al usuario.  
  
 [!code-cpp[ClickOnceAPI#7](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#7)]
 [!code-csharp[ClickOnceAPI#7](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#7)]
 [!code-vb[ClickOnceAPI#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The current application is either not configured to support updates, or there is another update check operation already in progress.</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">The deployment manifest cannot be downloaded. This exception will appear in the <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> property of the <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" /> event.</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">The deployment manifest is corrupted. Regenerate the application's manifest before you attempt to deploy this application to users. This exception will appear in the <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> property of the <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" /> event.</exception>
        <permission cref="T:System.Security.PermissionSet">Para tener acceso total al equipo local. Enumeración asociada: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="CheckForDetailedUpdate">
      <MemberSignature Language="C#" Value="public System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate (bool persistUpdateCheckResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate(bool persistUpdateCheckResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForDetailedUpdate (persistUpdateCheckResult As Boolean) As UpdateCheckInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Deployment::Application::UpdateCheckInfo ^ CheckForDetailedUpdate(bool persistUpdateCheckResult);" />
      <MemberSignature Language="F#" Value="member this.CheckForDetailedUpdate : bool -&gt; System.Deployment.Application.UpdateCheckInfo" Usage="applicationDeployment.CheckForDetailedUpdate persistUpdateCheckResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.UpdateCheckInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistUpdateCheckResult" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="persistUpdateCheckResult">If <see langword="false" />, the update will be applied silently and no dialog box will be displayed.</param>
        <summary>Performs the same operation as <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />, but returns extended information about the available update.</summary>
        <returns>An <see cref="T:System.Deployment.Application.UpdateCheckInfo" /> for the available update.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CheckForUpdate">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Checks <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> to determine whether a new update is available.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CheckForUpdate">
      <MemberSignature Language="C#" Value="public bool CheckForUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckForUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForUpdate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckForUpdate();" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdate : unit -&gt; bool" Usage="applicationDeployment.CheckForUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Checks <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> to determine whether a new update is available.</summary>
        <returns>
          <see langword="true" /> if a new update is available; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> método compara la versión de la implementación instalada actualmente con la versión especificada en el manifiesto de implementación que se encuentra en <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>. Si la versión en el servidor es diferente de la versión instalada, devuelve `true`.  
  
 Este método se bloqueará hasta que haya completado la comprobación. Para comprobar si hay una actualización de forma asincrónica, use la <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> método en su lugar.  
  
> [!NOTE]
>  Si <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> detecta que hay disponible una actualización, y el usuario elige no instalarlo, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] pedirá al usuario que hay disponible una actualización la próxima vez que se ejecuta la aplicación. No hay ninguna manera de deshabilitar esta indicación. (Si la aplicación es una actualización necesaria, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] a realizar la instalación sin pedir confirmación.)  
  
   
  
## Examples  
 En el ejemplo de código siguiente se busca una actualización de la aplicación; Si está disponible, ésta instala de forma sincrónica.  
  
 [!code-cpp[ClickOnceAPI#5](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#5)]
 [!code-csharp[ClickOnceAPI#5](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#5)]
 [!code-vb[ClickOnceAPI#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] throws this exception immediately if you call the <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" /> method while an update is already in progress.</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">The deployment manifest cannot be downloaded.</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">The deployment manifest is corrupted. You will likely need to redeploy the application to fix this problem.</exception>
        <permission cref="T:System.Security.PermissionSet">Para tener acceso total al equipo local. Enumeración asociada: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdate">
      <MemberSignature Language="C#" Value="public bool CheckForUpdate (bool persistUpdateCheckResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckForUpdate(bool persistUpdateCheckResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForUpdate (persistUpdateCheckResult As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckForUpdate(bool persistUpdateCheckResult);" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdate : bool -&gt; bool" Usage="applicationDeployment.CheckForUpdate persistUpdateCheckResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistUpdateCheckResult" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="persistUpdateCheckResult">If <see langword="false" />, the update will be applied silently and no dialog box will be displayed.</param>
        <summary>Checks <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> to determine whether a new update is available.</summary>
        <returns>
          <see langword="true" /> if a new update is available; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateAsync">
      <MemberSignature Language="C#" Value="public void CheckForUpdateAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckForUpdateAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckForUpdateAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckForUpdateAsync();" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateAsync : unit -&gt; unit" Usage="applicationDeployment.CheckForUpdateAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Checks <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> asynchronously to determine whether a new update is available.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> Devuelve un valor inmediatamente y se inicia un subproceso independiente para descargar la aplicación actualizada. Cuando el método se completa o se cancela, se produce la <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> eventos. Puede usar <xref:System.ComponentModel.AsyncCompletedEventArgs> en este controlador de eventos para determinar si la operación se canceló o si se produce una excepción durante la actualización.  
  
 Puede cancelar una actualización asincrónica mediante una llamada a <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel%2A>.  
  
> [!NOTE]
>  Si <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> detecta que hay disponible una actualización, y el usuario elige no instalarlo, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] pedirá al usuario que hay disponible una actualización la próxima vez que se ejecuta la aplicación. No hay ninguna manera de deshabilitar esta indicación. (Si la aplicación es una actualización necesaria, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] a realizar la instalación sin pedir confirmación.)  
  
   
  
## Examples  
 En el ejemplo siguiente se comprueba si hay una actualización de forma asincrónica e instala la actualización si existe uno.  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] throws this exception immediately if you call the <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" /> method while an update is already in progress.</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">The deployment manifest cannot be downloaded. This exception appears in the <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> property of the <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" /> event.</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">The deployment manifest is corrupted. You will likely need to redeploy the application to fix this problem. This exception appears in the <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> property of the <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" /> event.</exception>
        <permission cref="T:System.Security.PermissionSet">Para tener acceso total al equipo local. Enumeración asociada: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel" />
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateAsyncCancel">
      <MemberSignature Language="C#" Value="public void CheckForUpdateAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckForUpdateAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckForUpdateAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckForUpdateAsyncCancel();" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateAsyncCancel : unit -&gt; unit" Usage="applicationDeployment.CheckForUpdateAsyncCancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancels the asynchronous update check.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este método para cancelar una comprobación de actualización iniciada con la <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> método.  
  
 Este método no cancelará cualquier actualización en segundo plano que puede que ya esté en curso, como una actualización iniciada como parte de una suscripción. Para obtener más información acerca de las suscripciones, vea [elegir una estrategia de actualización de ClickOnce](http://msdn.microsoft.com/library/d8b6e7bb-4ea0-47f3-91cd-48580bdceccc).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateCompleted">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.CheckForUpdateCompletedEventHandler CheckForUpdateCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.CheckForUpdateCompletedEventHandler CheckForUpdateCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CheckForUpdateCompleted As CheckForUpdateCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::CheckForUpdateCompletedEventHandler ^ CheckForUpdateCompleted;" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateCompleted : System.Deployment.Application.CheckForUpdateCompletedEventHandler " Usage="member this.CheckForUpdateCompleted : System.Deployment.Application.CheckForUpdateCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.CheckForUpdateCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" /> has completed.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs> clase le indicará que, entre otras cosas, la versión de la actualización, es el tamaño de la actualización y si la actualización disponible es necesaria u opcional.  
  
   
  
## Examples  
 El siguiente ejemplo de código usa <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> para decidir si se pregunta al usuario que instale la actualización de la aplicación disponible. Si la actualización es una actualización obligatoria, la <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> controlador de eventos no preguntar al usuario. El ejemplo requiere que se implemente una aplicación de formularios Windows Forms que incluya un <xref:System.Windows.Forms.StatusStrip> control, y que este control contiene un <xref:System.Windows.Forms.ToolStripStatusLabel> control denominado `downloadStatus`.  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DeploymentProgressChangedEventHandler CheckForUpdateProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DeploymentProgressChangedEventHandler CheckForUpdateProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CheckForUpdateProgressChanged As DeploymentProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DeploymentProgressChangedEventHandler ^ CheckForUpdateProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " Usage="member this.CheckForUpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DeploymentProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when a progress update is available on a <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" /> call.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged> informes sobre el estado de descarga de la implementación de la aplicación del manifiesto. Esto puede ser información importante para los usuarios que descarguen la implementación a través de conexiones de red lentas.  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged> evento para informar al usuario cuánto el manifiesto de implementación se deja para descargar. El ejemplo requiere que se implemente una aplicación de formularios Windows Forms que incluya un <xref:System.Windows.Forms.StatusStrip> control, y que este control contiene un <xref:System.Windows.Forms.ToolStripStatusLabel> control denominado `downloadStatus`...  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentDeployment">
      <MemberSignature Language="C#" Value="public static System.Deployment.Application.ApplicationDeployment CurrentDeployment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Deployment.Application.ApplicationDeployment CurrentDeployment" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.CurrentDeployment" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentDeployment As ApplicationDeployment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Deployment::Application::ApplicationDeployment ^ CurrentDeployment { System::Deployment::Application::ApplicationDeployment ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentDeployment : System.Deployment.Application.ApplicationDeployment" Usage="System.Deployment.Application.ApplicationDeployment.CurrentDeployment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.ApplicationDeployment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current <see cref="T:System.Deployment.Application.ApplicationDeployment" /> for this deployment.</summary>
        <value>La implementación actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No se puede crear instancias de <xref:System.Deployment.Application.ApplicationDeployment> directamente en la aplicación; debe recuperar una instancia válida a través de la <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> propiedad.  
  
 El <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> propiedad estática sólo es válida dentro de una aplicación que se implementó usando [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]. Intenta llamar a esta propiedad no es de[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplicaciones iniciará una excepción. Si está desarrollando una aplicación que puede o no se puede implementar utilizando [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)], use la <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> propiedad para comprobar si el programa actual es un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplicación.  
  
   
  
## Examples  
 El siguiente código en el ejemplo se recupera <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> y comprobaciones para determinar si la aplicación se ha actualizado en los últimos tres días.  
  
 [!code-cpp[ClickOnceAPI#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#3)]
 [!code-csharp[ClickOnceAPI#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#3)]
 [!code-vb[ClickOnceAPI#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">You attempted to call this static property from a non-[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application.</exception>
        <altmember cref="P:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed" />
      </Docs>
    </Member>
    <Member MemberName="CurrentVersion">
      <MemberSignature Language="C#" Value="public Version CurrentVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version CurrentVersion" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.CurrentVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ CurrentVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentVersion : Version" Usage="System.Deployment.Application.ApplicationDeployment.CurrentVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the version of the deployment for the current running instance of the application.</summary>
        <value>La versión actual de la implementación.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A> se diferenciarán del <xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A> si se ha instalado una nueva actualización pero aún no se ha llamado <xref:System.Windows.Forms.Application.Restart%2A>. Si el manifiesto de implementación está configurado para realizar actualizaciones automáticas, puede comparar estos dos valores para determinar si se debe reiniciar la aplicación.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se define un método que determina si [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] ha actualizado la aplicación.  
  
 [!code-cpp[ClickOnceAPI#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#3)]
 [!code-csharp[ClickOnceAPI#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#3)]
 [!code-vb[ClickOnceAPI#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Para tener acceso total al equipo local. Enumeración asociada: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <altmember cref="P:System.Deployment.Application.ApplicationDeployment.UpdatedVersion" />
      </Docs>
    </Member>
    <Member MemberName="DataDirectory">
      <MemberSignature Language="C#" Value="public string DataDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.DataDirectory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataDirectory { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataDirectory : string" Usage="System.Deployment.Application.ApplicationDeployment.DataDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the path to the [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] data directory.</summary>
        <value>Una cadena que contiene la ruta de acceso al directorio de datos de la aplicación en el disco local.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroup">
      <MemberSignature Language="C#" Value="public void DownloadFileGroup (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroup(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroup (groupName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroup(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroup : string -&gt; unit" Usage="applicationDeployment.DownloadFileGroup groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">The named group of files to download. All files marked "optional" in a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application require a group name.</param>
        <summary>Downloads a set of optional files on demand.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplicación, los archivos marcados como "opcionales" en el manifiesto de aplicación no se descargan durante la inicialización o actualización. Puede usar el <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> método para descargar todos los archivos que pertenecen a un grupo con nombre a petición, por lo que no consumen recursos de red y espacio en disco hasta que el usuario los requiere. Por ejemplo, determinados usuarios necesite utilizar un paquete de análisis de datos incluido en la aplicación en un día, mientras que otros usuarios lo no pueden invocar nunca.  
  
 Para usar un ensamblado que ha descargado con <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>, adjuntar un agente de escucha de eventos para el <xref:System.AppDomain.AssemblyResolve> evento en el <xref:System.AppDomain.CurrentDomain%2A>. Para obtener un ejemplo, vea =[Tutorial: descargar ensamblados a petición con la implementación de ClickOnce API mediante el diseñador](http://msdn.microsoft.com/library/59a0dd5f-1cab-4f2f-b780-0ab7399905d5).  
  
 Todos los archivos se descargan en la [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] caché de la aplicación y son, por tanto, aíslan a la versión actual de la aplicación. Supongamos que una vez que una aplicación descargue un grupo de archivos, el usuario instala una nueva versión de la aplicación, pero posteriormente revierte a la versión anterior de la aplicación. En este caso, la versión anterior todavía tendrán las copias de los archivos que descargó originalmente. Para obtener más información acerca del acceso a archivos de datos, vea [obtener acceso Local y remoto datos en aplicaciones ClickOnce](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).  
  
 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> funciona en aplicaciones de confianza parcial, es decir, en cualquier [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplicación que se ejecuta con permisos restringidos. Sin embargo, si intenta cargar ensamblados dinámicamente, la aplicación requerirá plena confianza.  
  
 Descarga a petición de los archivos de datos actualmente no se admite.  
  
 La aplicación no responderá a la entrada del usuario hasta que el <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> devuelve del método. Si necesita descargar archivos sin interrumpir el flujo de trabajo del usuario, use la <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> método en su lugar.  
  
 No se puede descargar un solo archivo por su nombre de archivo independiente. Para descargar un solo archivo, asigne un nombre de grupo en su [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] implementación y descargue el grupo mediante este método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo cargar un ensamblado a petición realizando escuchas para el <xref:System.AppDomain.AssemblyResolve> eventos.  
  
 [!code-csharp[ClickOnceOnDemandCmdLine#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceOnDemandCmdLine/CS/Form1.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="groupName" /> parameter is null or zero-length.</exception>
        <altmember cref="Overload:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFileGroupAsync">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Downloads, on demand, a set of optional files in the background.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFileGroupAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileGroupAsync (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroupAsync(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroupAsync (groupName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroupAsync(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupAsync : string -&gt; unit" Usage="applicationDeployment.DownloadFileGroupAsync groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">The named group of files to download. All files marked "optional" in a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application require a group name.</param>
        <summary>Downloads, on demand, a set of optional files in the background.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplicación, los archivos marcados como "opcionales" en el manifiesto de aplicación no se descargan durante la inicialización o actualización. Puede usar el <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> método para descargar todos los archivos que pertenecen a un grupo con nombre a petición, por lo que no consumen recursos de red y espacio en disco hasta que el usuario los requiere. Este enfoque funciona no solo para los archivos estáticos, sino también para los ensamblados que una aplicación puede necesita o no. Por ejemplo, determinados usuarios necesite utilizar un paquete de análisis de datos incluido en la aplicación en un día, mientras que otros usuarios lo no pueden invocar nunca.  
  
 Para descargar ensamblados a petición, adjuntar un agente de escucha de eventos para el <xref:System.AppDomain.AssemblyResolve> evento en el <xref:System.AppDomain.CurrentDomain%2A>. Para obtener un ejemplo, vea [Tutorial: descargar ensamblados a petición con la API de implementación de ClickOnce](http://msdn.microsoft.com/library/d20e2789-8621-4806-b5b7-841122da1456).  
  
 Todos los ensamblados se descargan en la [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] caché de la aplicación.  
  
 Todos los archivos estáticos se descargan en la [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] directorio de datos y son de la aplicación, por tanto, aislado a la versión actual de la aplicación. Supongamos que una vez que una aplicación descargue un grupo de archivos, el usuario instala una nueva versión de la aplicación, pero posteriormente revierte a la versión anterior de la aplicación. En este caso, la versión anterior todavía tendrán las copias de los archivos que descargó originalmente. Para obtener más información acerca del acceso a archivos estáticos, vea [obtener acceso Local y remoto datos en aplicaciones ClickOnce](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d).  
  
 Puede descargar varios grupos de archivos al mismo tiempo con <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>. Puede distinguir entre ellos mediante el uso de la <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A> propiedad de la <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> (clase), que se pasa a la <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> eventos. Si necesita pasar información de estado más complejo, puede usar <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> para pasar un `state` objeto.  
  
 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> funciona en aplicaciones de confianza parcial, es decir, en cualquier [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplicación que se ejecuta con permisos restringidos. Sin embargo, si está intentando cargar ensamblados dinámicamente, la aplicación requerirá plena confianza.  
  
 Descarga a petición de los archivos de datos actualmente no se admite.  
  
 No se puede descargar un solo archivo por su nombre de archivo independiente. Para descargar un solo archivo, asigne un nombre de grupo en su [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] implementación y descargue el grupo mediante este método.  
  
 Para cancelar una descarga asincrónica, llame a la <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="groupName" /> parameter is null or zero-length.</exception>
        <exception cref="T:System.InvalidOperationException">You cannot initiate more than one download of <paramref name="groupName" /> at a time.</exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileGroupAsync (string groupName, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroupAsync(string groupName, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroupAsync (groupName As String, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroupAsync(System::String ^ groupName, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupAsync : string * obj -&gt; unit" Usage="applicationDeployment.DownloadFileGroupAsync (groupName, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="groupName">The named group of files to download. All files marked "optional" in a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application require a group name.</param>
        <param name="userState">An arbitrary object containing state information for the asynchronous operation.</param>
        <summary>Downloads, on demand, a set of optional files in the background, and passes a piece of application state to the event callbacks.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplicación, los archivos marcados como "opcionales" en el manifiesto de aplicación no se descargan durante la inicialización o actualización. Puede usar el <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> método para descargar todos los archivos que pertenecen a un grupo con nombre a petición, por lo que no consumen recursos de red y espacio en disco hasta que el usuario los requiere. Este enfoque funciona no solo para los archivos estáticos, sino también para los ensamblados que una aplicación puede necesita o no. Por ejemplo, determinados usuarios necesite utilizar un paquete de análisis de datos incluido en la aplicación en un día, mientras que otros usuarios lo no pueden invocar nunca. Para descargar ensamblados a petición, adjuntar un agente de escucha de eventos para el <xref:System.AppDomain.AssemblyResolve> evento en el <xref:System.AppDomain.CurrentDomain%2A>.  
  
 Puede descargar simultáneamente varios grupos de archivos mediante el uso de la <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> método. Puede distinguir entre ellos mediante el uso de la <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A> propiedad de la <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> (clase), que se pasa a la <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> eventos. Si tiene que pasar un estado más complejo, puede usar  
  
 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> para pasar un `state` objeto.  
  
 Todos los archivos estáticos se descargan en la [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] directorio de datos y son de la aplicación, por tanto, aislado a la versión actual de la aplicación. Para obtener más información acerca del acceso a archivos estáticos, vea [obtener acceso Local y remoto datos en aplicaciones ClickOnce](http://msdn.microsoft.com/library/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d). . Supongamos después de que una aplicación descarga un grupo de archivos, el usuario instala una nueva versión de la aplicación, pero posteriormente revierte a la versión anterior de la aplicación. En este caso, la versión anterior todavía tendrán las copias de los archivos que descargó originalmente.  
  
 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> funciona en aplicaciones de confianza parcial, es decir, en cualquier [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplicación que se ejecuta con permisos restringidos. Sin embargo, si está intentando cargar ensamblados dinámicamente, la aplicación requerirá plena confianza.  
  
 Descarga a petición de los archivos de datos actualmente no se admite.  
  
 Para cancelar una descarga asincrónica, llame a la <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="groupName" /> parameter is null or zero-length.</exception>
        <exception cref="T:System.InvalidOperationException">You cannot initiate more than one download of <paramref name="groupName" /> at a time.</exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupAsyncCancel">
      <MemberSignature Language="C#" Value="public void DownloadFileGroupAsyncCancel (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroupAsyncCancel(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroupAsyncCancel (groupName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroupAsyncCancel(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupAsyncCancel : string -&gt; unit" Usage="applicationDeployment.DownloadFileGroupAsyncCancel groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">The named group of files to download. All files marked "optional" in a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application require a group name.</param>
        <summary>Cancels an asynchronous file download.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="groupName" /> cannot be <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupCompleted">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DownloadFileGroupCompletedEventHandler DownloadFileGroupCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DownloadFileGroupCompletedEventHandler DownloadFileGroupCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadFileGroupCompleted As DownloadFileGroupCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DownloadFileGroupCompletedEventHandler ^ DownloadFileGroupCompleted;" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupCompleted : System.Deployment.Application.DownloadFileGroupCompletedEventHandler " Usage="member this.DownloadFileGroupCompleted : System.Deployment.Application.DownloadFileGroupCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DownloadFileGroupCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs on the main application thread when a file download is complete.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted> se denomina eventos en el subproceso de aplicación principal. Es seguro llamar a controles de formularios Windows Forms de la aplicación directamente dentro de esta devolución de llamada de subprocesos.  
  
 Compruebe el <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> propiedad de la <xref:System.ComponentModel.AsyncCompletedEventArgs> proporcionado a esta devolución de llamada. Si esta propiedad es `null`, la descarga fue correcta; si no lo es `null`, la instalación no se realizó correctamente, y también puede encontrar más información sobre el error de instalación a través de la <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se descarga un grupo de archivos de ayuda en segundo plano. El ejemplo requiere que se implemente una aplicación de formularios Windows Forms que incluya un <xref:System.Windows.Forms.StatusStrip> control, y que este control contiene un <xref:System.Windows.Forms.ToolStripStatusLabel> control denominado `downloadStatus`...  
  
 [!code-cpp[ClickOnceAPI#8](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#8)]
 [!code-csharp[ClickOnceAPI#8](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#8)]
 [!code-vb[ClickOnceAPI#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DeploymentProgressChangedEventHandler DownloadFileGroupProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DeploymentProgressChangedEventHandler DownloadFileGroupProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadFileGroupProgressChanged As DeploymentProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DeploymentProgressChangedEventHandler ^ DownloadFileGroupProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " Usage="member this.DownloadFileGroupProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DeploymentProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when status information is available on a file download operation initiated by a call to <see cref="Overload:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> se denomina eventos en el subproceso de aplicación principal. Es seguro llamar a controles de formularios Windows Forms de la aplicación directamente dentro de esta devolución de llamada de subprocesos.  
  
 Use la información proporcionada en <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> para comunicar información de progreso a los usuarios.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se descarga un grupo de archivos de ayuda en segundo plano. El ejemplo requiere que se implemente una aplicación de formularios Windows Forms que incluya un <xref:System.Windows.Forms.StatusStrip> control, y que este control contiene un <xref:System.Windows.Forms.ToolStripStatusLabel> control denominado `downloadStatus`.  
  
 [!code-cpp[ClickOnceAPI#8](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#8)]
 [!code-csharp[ClickOnceAPI#8](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#8)]
 [!code-vb[ClickOnceAPI#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFileGroupDownloaded">
      <MemberSignature Language="C#" Value="public bool IsFileGroupDownloaded (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsFileGroupDownloaded(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsFileGroupDownloaded (groupName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsFileGroupDownloaded(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.IsFileGroupDownloaded : string -&gt; bool" Usage="applicationDeployment.IsFileGroupDownloaded groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">The named group of files to download. All files marked "optional" in a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application require a group name.</param>
        <summary>Checks whether the named file group has already been downloaded to the client computer.</summary>
        <returns>
          <see langword="true" /> if the file group has already been downloaded for the current version of this application; otherwise, <see langword="false" />. If a new version of the application has been installed, and the new version has not added, removed, or altered files in the file group, <see cref="M:System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)" /> returns <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded%2A> funciona en una aplicación de confianza parcial sin ninguna petición de seguridad.  
  
 Cuando se actualiza una aplicación, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] copia los archivos de datos a petición desde la versión anterior en el directorio de datos de la versión nueva. Si descarga una nueva versión de estos archivos, debe quitar los datos que desea mantener en la versión anterior y muévalo a la nueva versión.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se descarga todos los archivos en el `HelpFiles` grupo en el disco.  
  
 [!code-cpp[ClickOnceAPI#8](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#8)]
 [!code-csharp[ClickOnceAPI#8](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#8)]
 [!code-vb[ClickOnceAPI#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">
          <paramref name="groupName" /> is not a file group defined in the application manifest.</exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
        <altmember cref="Overload:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync" />
      </Docs>
    </Member>
    <Member MemberName="IsFirstRun">
      <MemberSignature Language="C#" Value="public bool IsFirstRun { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFirstRun" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.IsFirstRun" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFirstRun As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFirstRun { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFirstRun : bool" Usage="System.Deployment.Application.ApplicationDeployment.IsFirstRun" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether this is the first time this application has run on the client computer.</summary>
        <value>
          <see langword="true" /> Si esta versión de la aplicación nunca ha ejecutado en el equipo cliente antes de; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> para determinar si necesita realizar operaciones de inicialización única la primera vez que se ejecuta la aplicación.  
  
 No se da por supuesto que una <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> de `true` indica que esta instancia de una aplicación es la primera de ellas para mostrar su interfaz de usuario para el usuario. Debido a la manera en que el sistema programa procesos, una instancia de la aplicación puede tener su <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> propiedad establecida en `true`, pero otra instancia puede ser el primero que se va a representar en la pantalla. El valor de esta propiedad se restablece cada vez que el usuario realiza una actualización de una versión a la siguiente. Si desea realizar una operación solo la primera vez cualquier versión de la aplicación se ejecuta, debe realizar una comprobación adicional, como comprobar la existencia de un archivo que se crea la primera vez o almacenar un indicador utilizando **aplicación Configuración de**.  
  
   
  
## Examples  
 El siguiente ejemplo de código usa <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> para decidir si se deben comprobar para una actualización para el grupo de archivos `HelpFiles`. Si uno o varios de los archivos se han actualizado, llama a <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> para obtener las nuevas versiones.  
  
 [!code-csharp[ClickOnceAPI#9](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#9)]
 [!code-vb[ClickOnceAPI#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Para tener acceso total al equipo local. Enumeración asociada: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="IsNetworkDeployed">
      <MemberSignature Language="C#" Value="public static bool IsNetworkDeployed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsNetworkDeployed" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsNetworkDeployed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsNetworkDeployed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNetworkDeployed : bool" Usage="System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the current application is a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application.</summary>
        <value>
          <see langword="true" /> Si se trata de una [! Aplicación de include[ndptecclick](~/includes/ndptecclick-MD.MD)]; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si desea que la aplicación se ejecute tanto dentro como fuera de un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] implementación (por ejemplo, si necesita depurar la aplicación en el equipo local antes de implementarla), prueba <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> antes de acceder a la <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> propiedad.  
  
 <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> devolverá `true` independientemente de si la aplicación está instalada u hospedada en línea, e independientemente de si se instaló desde un sitio Web, un recurso compartido de archivos o un CD-ROM.  
  
   
  
## Examples  
 El siguiente código en el ejemplo se recupera <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> utilizando <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> en primer lugar para asegurarse de que la referencia no es `null`.  
  
 [!code-cpp[ClickOnceAPI#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#2)]
 [!code-csharp[ClickOnceAPI#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Para tener acceso total al equipo local. Enumeración asociada: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="TimeOfLastUpdateCheck">
      <MemberSignature Language="C#" Value="public DateTime TimeOfLastUpdateCheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime TimeOfLastUpdateCheck" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeOfLastUpdateCheck As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime TimeOfLastUpdateCheck { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeOfLastUpdateCheck : DateTime" Usage="System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the date and the time [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] last checked for an application update.</summary>
        <value>El <see cref="T:System.DateTime" /> de la última comprobación de actualización.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplicación se puede configurar para las actualizaciones de suscripción. En este escenario, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] sondea la ubicación de implementación de la aplicación automáticamente a intervalos definidos en el manifiesto de implementación y determina si hay una actualización disponible. <xref:System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck%2A> Devuelve la hora de la última comprobación de actualización, independientemente de si se inició una suscripción o una comprobación explícita usando la <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A>, <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>, <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A>, <xref:System.Deployment.Application.ApplicationDeployment.Update%2A>, o <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> método.  
  
 Si no se ha realizado ninguna comprobación de actualización desde que se instaló la aplicación, <xref:System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck%2A> devuelve la hora de instalación.  
  
   
  
## Examples  
 El siguiente código de ejemplo se comprueba si un [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] se ha comprobado la aplicación si hay actualizaciones disponibles en los últimos tres días.  
  
 [!code-cpp[ClickOnceAPI#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#3)]
 [!code-csharp[ClickOnceAPI#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#3)]
 [!code-vb[ClickOnceAPI#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Para tener acceso total al equipo local. Enumeración asociada: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public bool Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.Update" />
      <MemberSignature Language="VB.NET" Value="Public Function Update () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; bool" Usage="applicationDeployment.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Starts a synchronous download and installation of the latest version of this application.</summary>
        <returns>
          <see langword="true" /> if an application has been updated; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una aplicación se considera actualizada cuando se publica una nueva versión de la aplicación en la ubicación especificada por <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>, y el número de versión en el manifiesto de implementación de la aplicación es mayor que el número de versión de la aplicación actualmente instalado en el equipo del usuario.  
  
 El <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> llamada se bloqueará hasta que la actualización se ha descargado en el equipo cliente e instalen en la [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] almacenar en memoria caché; durante este tiempo, la aplicación no será respondiendo al usuario. Si desea mantener la capacidad de respuesta de la aplicación o mostrar un informe de progreso durante la descarga, use la <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> método en su lugar.  
  
 <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> descarga todos los archivos que no están marcados como "opcionales" en el manifiesto de aplicación. Puede descargar los archivos opcionales a petición mediante el uso de la <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> o <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> método.  
  
 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] puede ya esté actualizando la aplicación automáticamente cuando se llama a la <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> método; si esto sucede, las llamadas a este método producirá una <xref:System.InvalidOperationException>.  
  
 Si ha actualizado uno o varios archivos en la implementación, pero no se ha actualizado el manifiesto de aplicación, recibirá un <xref:System.Deployment.Application.InvalidDeploymentException>. La mayoría de los casos, volver a implementar su [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] aplicación soluciona este problema. También recibirá esta excepción si una firma de clave pública en un manifiesto de implementación o un manifiesto de aplicación no es válido o falta.  
  
 Una actualización puede solicitar un mayor nivel de confianza en el equipo local que la versión anterior de la aplicación. Si la aplicación utiliza la implementación de aplicaciones de confianza, el Administrador de confianza de common language runtime (CLR) examina el manifiesto de implementación para determinar si contiene una licencia de confianza válida. Si el manifiesto de implementación no contiene una licencia de confianza válida, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] detiene la instalación y produce una <xref:System.Deployment.Application.TrustNotGrantedException>. El <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> método nunca mostrará un mensaje que pide al usuario si desea conceder permiso para ejecutar la aplicación.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se busca una actualización de la aplicación; Si hay disponible una actualización, ésta instala de forma sincrónica.  
  
 [!code-cpp[ClickOnceAPI#6](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#6)]
 [!code-csharp[ClickOnceAPI#6](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#6)]
 [!code-vb[ClickOnceAPI#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.TrustNotGrantedException">The local computer did not grant the application the permission level it requested to execute.</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">Your [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] deployment is corrupted. For tips on how to diagnose and correct the problem, see [Troubleshooting ClickOnce Deployments](http://msdn.microsoft.com/library/58e90012-f68b-4852-8ae9-58e361cbcc32).</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">The new deployment could not be downloaded from its location on the network.</exception>
        <exception cref="T:System.InvalidOperationException">The application is currently being updated.</exception>
        <permission cref="T:System.Security.PermissionSet">Para tener acceso total al equipo local. Enumeración asociada: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public void UpdateAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateAsync();" />
      <MemberSignature Language="F#" Value="member this.UpdateAsync : unit -&gt; unit" Usage="applicationDeployment.UpdateAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Starts an asynchronous download and installation of the latest version of this application.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una aplicación se considera actualizada cuando se publica una nueva versión de la aplicación en la ubicación especificada por <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>, y el número de versión en el manifiesto de implementación de la aplicación es mayor que el número de versión de la aplicación actualmente instalado en el equipo del usuario.  
  
 Mientras se descarga la actualización, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] , se producirá la <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> controlador de eventos en el subproceso de aplicación principal para informarle sobre el estado de la descarga. Cuando la actualización asincrónica finalice o detecte una excepción, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] , se producirá la <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> evento en el subproceso de aplicación principal. Examine el <xref:System.ComponentModel.AsyncCompletedEventArgs> proporcionado a este evento para determinar si la actualización se realizó correctamente.  
  
 Si <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> produce una excepción, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] llamadas <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> y establece la <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> propiedad de <xref:System.ComponentModel.AsyncCompletedEventArgs> a la excepción que se inició.  
  
 <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> se descargarán todos los archivos en una implementación que no estén marcados como "opcionales" en el manifiesto de aplicación. Puede descargar los archivos opcionales a petición mediante el uso de la <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> o <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> método.  
  
 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] puede ya esté actualizando la aplicación automáticamente cuando se llama a la <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> método; si esto sucede, las llamadas a este método producirá una <xref:System.InvalidOperationException>.  
  
 Si ha actualizado uno o varios archivos en la implementación, pero no se ha actualizado el manifiesto de aplicación, recibirá un <xref:System.Deployment.Application.InvalidDeploymentException>. La mayoría de los casos, volver a generar el manifiesto de aplicación soluciona este problema. También recibirá esta excepción si una firma de clave pública en un manifiesto de implementación o un manifiesto de aplicación no es válido o falta.  
  
 Una actualización puede solicitar un mayor nivel de confianza en el equipo local que la versión anterior de la aplicación. Si la aplicación utiliza la implementación de aplicaciones de confianza, el Administrador de confianza de common language runtime (CLR) examina el manifiesto de implementación para determinar si contiene una licencia de confianza válida. Si el manifiesto de implementación no contiene una licencia de confianza válida, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] detiene la instalación y produce una <xref:System.Deployment.Application.TrustNotGrantedException>. <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> nunca se mostrará un mensaje que pide al usuario si desea conceder permiso para ejecutar la aplicación.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se determina si una nueva actualización está disponible en tiempo de carga de aplicación; Si hay disponible una actualización necesaria, instala la actualización de forma asincrónica. El ejemplo requiere que se implemente una aplicación de formularios Windows Forms que incluya un <xref:System.Windows.Forms.StatusStrip> control, y que este control contiene un <xref:System.Windows.Forms.ToolStripStatusLabel> control denominado `downloadStatus`.  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.TrustNotGrantedException">The local computer did not grant this application the permission level it requested to execute.</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">Your [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] deployment is corrupted. For tips on how to diagnose and correct the problem, see [Troubleshooting ClickOnce Deployments](http://msdn.microsoft.com/library/58e90012-f68b-4852-8ae9-58e361cbcc32).</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">The new deployment could not be downloaded from its location on the network.</exception>
        <permission cref="T:System.Security.PermissionSet">Para tener acceso total al equipo local. Enumeración asociada: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <altmember cref="E:System.Deployment.Application.ApplicationDeployment.UpdateCompleted" />
      </Docs>
    </Member>
    <Member MemberName="UpdateAsyncCancel">
      <MemberSignature Language="C#" Value="public void UpdateAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateAsyncCancel();" />
      <MemberSignature Language="F#" Value="member this.UpdateAsyncCancel : unit -&gt; unit" Usage="applicationDeployment.UpdateAsyncCancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancels an asynchronous update initiated by <see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel%2A> sólo se cancela una actualización iniciada por una llamada a <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>; no cancela ninguna actualización iniciada como parte de una suscripción.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Para tener acceso total al equipo local. Enumeración asociada: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="UpdateCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AsyncCompletedEventHandler UpdateCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AsyncCompletedEventHandler UpdateCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.UpdateCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UpdateCompleted As AsyncCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AsyncCompletedEventHandler ^ UpdateCompleted;" />
      <MemberSignature Language="F#" Value="member this.UpdateCompleted : System.ComponentModel.AsyncCompletedEventHandler " Usage="member this.UpdateCompleted : System.ComponentModel.AsyncCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] has finished upgrading the application as the result of a call to <see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> se denomina eventos en el subproceso de aplicación principal. Puede llamar a controles de formularios Windows Forms de la aplicación directamente dentro de esta devolución de llamada sin desencadenar una excepción.  
  
 Compruebe el <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> propiedad de la <xref:System.ComponentModel.AsyncCompletedEventArgs> proporcionado a esta devolución de llamada. Si esta propiedad es `null`, la instalación es correcta; si no lo es `null`, la instalación no se realizó correctamente, y también puede encontrar más información sobre este error en la instalación a través de la <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> propiedad. Una vez que se ha descargado la actualización, deberá llamar a la <xref:System.Windows.Forms.Application.Restart%2A> método en el <xref:System.Windows.Forms.Application> para usar la versión más reciente de la aplicación.  
  
 Si se canceló la instalación de la actualización mediante una llamada a <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel%2A>, <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> propiedad de la <xref:System.ComponentModel.AsyncCompletedEventArgs> clase será `true`.  
  
 Para usar este controlador de eventos, la aplicación debe importar tanto el <xref:System.Deployment.Application> y <xref:System.ComponentModel> los espacios de nombres.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se determina en tiempo de carga de la aplicación si hay una nueva actualización disponible; Si hay disponible una actualización necesaria, instala la actualización de forma asincrónica. El ejemplo requiere que se implemente una aplicación de formularios Windows Forms que incluya un <xref:System.Windows.Forms.StatusStrip> control, y que este control contiene un <xref:System.Windows.Forms.ToolStripStatusLabel> control denominado `downloadStatus`.  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedApplicationFullName">
      <MemberSignature Language="C#" Value="public string UpdatedApplicationFullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdatedApplicationFullName" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdatedApplicationFullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdatedApplicationFullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdatedApplicationFullName : string" Usage="System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the full name of the application after it has been updated.</summary>
        <value>Un <see cref="T:System.String" /> que contiene el nombre completo de la aplicación.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedVersion">
      <MemberSignature Language="C#" Value="public Version UpdatedVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version UpdatedVersion" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.UpdatedVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdatedVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ UpdatedVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdatedVersion : Version" Usage="System.Deployment.Application.ApplicationDeployment.UpdatedVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the version of the update that was recently downloaded.</summary>
        <value>El <see cref="T:System.Version" /> que describe la versión de la actualización.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A> difiere de <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A> si se ha instalado una nueva actualización pero aún no se ha llamado <xref:System.Windows.Forms.Application.Restart%2A> en el <xref:System.Windows.Forms.Application>. Si el manifiesto de implementación de la aplicación se configura para realizar actualizaciones automáticas, puede comparar estos dos valores para determinar si se debe reiniciar la aplicación.  
  
 Si la aplicación no se ha actualizado, <xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A> devuelve el mismo valor que <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se define un método que determina si [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] ha actualizado la aplicación.  
  
 [!code-cpp[ClickOnceAPI#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#4)]
 [!code-csharp[ClickOnceAPI#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#4)]
 [!code-vb[ClickOnceAPI#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Para tener acceso total al equipo local. Enumeración asociada: <see cref="T:System.Security.Permissions.PermissionState" /></permission>
      </Docs>
    </Member>
    <Member MemberName="UpdateLocation">
      <MemberSignature Language="C#" Value="public Uri UpdateLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UpdateLocation" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateLocation As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ UpdateLocation { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateLocation : Uri" Usage="System.Deployment.Application.ApplicationDeployment.UpdateLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the Web site or file share from which this application updates itself.</summary>
        <value>La ruta de acceso de actualización, expresada como un HTTP, HTTPS o dirección URL del archivo; o bien, como una ventana de la red (UNC) de ruta de acceso de archivo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A> puede ser diferente del sitio Web utilizado para descargar inicialmente la aplicación si la implementación de la aplicación está configurada para usar el redireccionamiento de actualización.  
  
 Este valor puede cambiarse solo en el manifiesto de implementación de la aplicación.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">Para tener acceso total al equipo local. Enumeración asociada: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="UpdateProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DeploymentProgressChangedEventHandler UpdateProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DeploymentProgressChangedEventHandler UpdateProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UpdateProgressChanged As DeploymentProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DeploymentProgressChangedEventHandler ^ UpdateProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.UpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " Usage="member this.UpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DeploymentProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] has new status information for an update operation initiated by calling the <see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" /> method.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> se denomina eventos en el subproceso de aplicación principal. Puede llamar a controles de formularios Windows Forms de la aplicación directamente dentro de esta devolución de llamada sin desencadenar una excepción.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se determina en tiempo de carga de la aplicación si hay una nueva actualización disponible; Si hay disponible una actualización necesaria, instala la actualización de forma asincrónica.  
  
 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>