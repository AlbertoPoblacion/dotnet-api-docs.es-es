<Type Name="UpdateCheckInfo" FullName="System.Deployment.Application.UpdateCheckInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="97875b07df913f8fbd2a91d0ac866e4209dbafa3" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51894615" /></Metadata><TypeSignature Language="C#" Value="public class UpdateCheckInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UpdateCheckInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Deployment.Application.UpdateCheckInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class UpdateCheckInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class UpdateCheckInfo" />
  <TypeSignature Language="F#" Value="type UpdateCheckInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Deployment</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa información de actualización detallada que se ha obtenido llamando a <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Con <xref:System.Deployment.Application.UpdateCheckInfo>, puede decidir si se debe actualizar la aplicación ClickOnce según la información acerca de la versión más reciente. <xref:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable%2A> devolverá un valor booleano que indica si hay una nueva actualización. El <xref:System.Deployment.Application.UpdateCheckInfo.AvailableVersion%2A> propiedad proporciona el número de versión de la nueva versión, mientras que <xref:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion%2A> proporciona la versión más antigua que el usuario debe tener instalada. <xref:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired%2A> expresa si falta la actualización más reciente del usuario. Por último, <xref:System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes%2A> expresa el tamaño total de la actualización.  
  
> [!NOTE]
>  Visual Studio agrega el `<deploymentProvider>` elemento para el manifiesto sólo si la aplicación está configurada para buscar actualizaciones, por lo que tiene que comprobar **la aplicación debe buscar actualizaciones** o especificar una dirección URL de actualización en **actualizar ubicación** en el [Application Updates Dialog Box](https://msdn.microsoft.com/library/8eca8743-8e68-4d04-bfd5-4dc0a9b2934f).  
  
   
  
## Examples  
 El siguiente ejemplo de código usa <xref:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable%2A> para determinar si hay una nueva actualización de la aplicación, y <xref:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired%2A> para determinar si se pregunta al usuario que instale la actualización.  
  
 [!code-cpp[ClickOnceAPI#6](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#6)]
 [!code-csharp[ClickOnceAPI#6](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#6)]
 [!code-vb[ClickOnceAPI#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AvailableVersion">
      <MemberSignature Language="C#" Value="public Version AvailableVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version AvailableVersion" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.UpdateCheckInfo.AvailableVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailableVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ AvailableVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AvailableVersion : Version" Usage="System.Deployment.Application.UpdateCheckInfo.AvailableVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el número de versión de la última versión que no se ha instalado.</summary>
        <value>Un valor de <see cref="T:System.Version" /> que expresa los números de versión principal, de versión secundaria, de compilación y de revisión de la última versión.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar <xref:System.Deployment.Application.UpdateCheckInfo.AvailableVersion%2A> para decidir si desea instalar la actualización según la gravedad de la actualización. Por ejemplo, si solo el <xref:System.Version.Build%2A> o <xref:System.Version.Revision%2A> han cambiado las propiedades de la versión, la aplicación no es posible que deba actualizar hasta que el <xref:System.Version.Minor%2A> o <xref:System.Version.Major%2A> cambio de propiedades.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion" />
      </Docs>
    </Member>
    <Member MemberName="IsUpdateRequired">
      <MemberSignature Language="C#" Value="public bool IsUpdateRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUpdateRequired" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUpdateRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUpdateRequired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUpdateRequired : bool" Usage="System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si debe instalarse la actualización.</summary>
        <value>Es <see langword="true" /> si es necesario instalar la actualización; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al implementar una actualización en la aplicación ClickOnce, puede marcarla como una actualización necesaria, de señalización para su aplicación, debe actualizar inmediatamente. Desea marcar la aplicación si la última versión contiene una actualización crítica, o si no es compatible con los formatos de archivo u orígenes de datos back-end utilizados la versión anterior.  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza <xref:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired%2A> para determinar si debe preguntarse al usuario para instalar la actualización, o instalarlo sin pedir confirmación.  
  
 [!code-cpp[ClickOnceAPI#6](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#6)]
 [!code-csharp[ClickOnceAPI#6](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#6)]
 [!code-vb[ClickOnceAPI#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion" />
      </Docs>
    </Member>
    <Member MemberName="MinimumRequiredVersion">
      <MemberSignature Language="C#" Value="public Version MinimumRequiredVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version MinimumRequiredVersion" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinimumRequiredVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ MinimumRequiredVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MinimumRequiredVersion : Version" Usage="System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la versión mínima que el usuario debe tener instalada en el equipo.</summary>
        <value>Un valor de <see cref="T:System.Version" /> que expresa la versión mínima que el usuario debe tener instalada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las aplicaciones pueden perder las actualizaciones necesarias cuando el usuario asume una asignación especial o no se encuentra el equipo durante semanas o meses. Usar  
  
 <xref:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion%2A> para determinar si el usuario no ha actualizado la aplicación en unos minutos y perdió una o varias actualizaciones necesarias.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo mostrar la <xref:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion%2A> propiedad al usuario cuando hay disponible una actualización necesaria.  
  
 [!code-cpp[ClickOnceAPI#6](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#6)]
 [!code-csharp[ClickOnceAPI#6](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#6)]
 [!code-vb[ClickOnceAPI#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No hay nuevas versiones disponibles para instalar.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAvailable">
      <MemberSignature Language="C#" Value="public bool UpdateAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UpdateAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UpdateAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateAvailable : bool" Usage="System.Deployment.Application.UpdateCheckInfo.UpdateAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene si existe una actualización no instalada.</summary>
        <value>Es <see langword="true" /> si hay una nueva versión de la aplicación disponible; de lo contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El siguiente ejemplo de código inspecciona <xref:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable%2A> para determinar si hay una actualización para instalar.  
  
 [!code-cpp[ClickOnceAPI#6](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#6)]
 [!code-csharp[ClickOnceAPI#6](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#6)]
 [!code-vb[ClickOnceAPI#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSizeBytes">
      <MemberSignature Language="C#" Value="public long UpdateSizeBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 UpdateSizeBytes" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateSizeBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long UpdateSizeBytes { long get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateSizeBytes : int64" Usage="System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el tamaño de la actualización disponible.</summary>
        <value>Un valor <see cref="T:System.Int64" /> que describe el tamaño, en bytes, de la actualización disponible. Si no hay ninguna actualización disponible, devuelve 0.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>