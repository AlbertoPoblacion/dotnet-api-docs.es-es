<Type Name="NativeActivityContext" FullName="System.Activities.NativeActivityContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="746a1cf957e183a2f90888f1eb8458b91c561d23" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30361369" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NativeActivityContext : System.Activities.ActivityContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NativeActivityContext extends System.Activities.ActivityContext" />
  <TypeSignature Language="DocId" Value="T:System.Activities.NativeActivityContext" />
  <TypeSignature Language="VB.NET" Value="Public Class NativeActivityContext&#xA;Inherits ActivityContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class NativeActivityContext : System::Activities::ActivityContext" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.ActivityContext</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contexto de ejecución de <see cref="T:System.Activities.NativeActivity" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se proporciona acceso a <xref:System.Activities.NativeActivity> a las capacidades avanzadas del runtime de WF a través de <xref:System.Activities.NativeActivityContext>, que se pasa como un parámetro al método <xref:System.Activities.NativeActivity.Execute%2A> de la actividad.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Abort">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Anula la instancia de flujo de trabajo actual durante el runtime.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Anula la instancia de flujo de trabajo actual durante el runtime.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort (Exception reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort(class System.Exception reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.Abort(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort (reason As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort(Exception ^ reason);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="reason">El error que causó la anulación del flujo de trabajo.</param>
        <summary>Anula la instancia de flujo de trabajo actual durante el tiempo de ejecución por la razón especificada.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AbortChildInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Anula una instancia de una actividad secundaria de la clase <see cref="T:System.Activities.NativeActivity" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AbortChildInstance">
      <MemberSignature Language="C#" Value="public void AbortChildInstance (System.Activities.ActivityInstance activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AbortChildInstance(class System.Activities.ActivityInstance activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.AbortChildInstance(System.Activities.ActivityInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AbortChildInstance (activity As ActivityInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AbortChildInstance(System::Activities::ActivityInstance ^ activity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.ActivityInstance" />
      </Parameters>
      <Docs>
        <param name="activity">Elemento secundario de la clase <see cref="T:System.Activities.NativeActivity" /> que se está ejecutando actualmente.</param>
        <summary>Anula la instancia de una actividad secundaria de la clase <see cref="T:System.Activities.NativeActivity" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbortChildInstance">
      <MemberSignature Language="C#" Value="public void AbortChildInstance (System.Activities.ActivityInstance activity, Exception reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AbortChildInstance(class System.Activities.ActivityInstance activity, class System.Exception reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.AbortChildInstance(System.Activities.ActivityInstance,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AbortChildInstance (activity As ActivityInstance, reason As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AbortChildInstance(System::Activities::ActivityInstance ^ activity, Exception ^ reason);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.ActivityInstance" />
        <Parameter Name="reason" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="activity">Elemento secundario de la clase <see cref="T:System.Activities.NativeActivity" /> que se está ejecutando actualmente.</param>
        <param name="reason">Error que provocó que se anulara la actividad secundaria.</param>
        <summary>Anula la instancia especificada de una actividad secundaria de la clase <see cref="T:System.Activities.NativeActivity" /> por la razón especificada.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelChild">
      <MemberSignature Language="C#" Value="public void CancelChild (System.Activities.ActivityInstance activityInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelChild(class System.Activities.ActivityInstance activityInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.CancelChild(System.Activities.ActivityInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelChild(System::Activities::ActivityInstance ^ activityInstance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityInstance" Type="System.Activities.ActivityInstance" />
      </Parameters>
      <Docs>
        <param name="activityInstance">Elemento secundario de la clase <see cref="T:System.Activities.NativeActivity" /> que se está ejecutando actualmente.</param>
        <summary>Cancela la instancia de actividad secundaria especificada.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelChildren">
      <MemberSignature Language="C#" Value="public void CancelChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.CancelChildren" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelChildren ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelChildren();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Provoca una finalización precoz de todas las actividades secundarias de una clase <see cref="T:System.Activities.NativeActivity" /> que se está ejecutando.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateBookmark">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea un punto en el que una clase <see cref="T:System.Activities.NativeActivity" /> puede esperar pasivamente su reanudación.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.CreateBookmark" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark () As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un punto en el que una clase <see cref="T:System.Activities.NativeActivity" /> puede esperar pasivamente su reanudación.</summary>
        <returns>Marcador.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark (System.Activities.BookmarkCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark(class System.Activities.BookmarkCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.CreateBookmark(System.Activities.BookmarkCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark (callback As BookmarkCallback) As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark(System::Activities::BookmarkCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Activities.BookmarkCallback" />
      </Parameters>
      <Docs>
        <param name="callback">Método al que se debe llamar cuando una notificación señala la reanudación de <see cref="T:System.Activities.NativeActivity" />.</param>
        <summary>Crea el punto en el que una clase <see cref="T:System.Activities.NativeActivity" /> puede esperar pasivamente su reanudación y programa la ejecución del método especificado cuando se complete la notificación de la reanudación de la operación.</summary>
        <returns>Método de devolución de llamada.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.CreateBookmark(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark (name As String) As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del marcador.</param>
        <summary>Crea el punto, con el nombre especificado, en el que una clase <see cref="T:System.Activities.NativeActivity" /> puede esperar pasivamente su reanudación.</summary>
        <returns>Marcador que incluye el nombre del marcador.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark (System.Activities.BookmarkCallback callback, System.Activities.BookmarkOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark(class System.Activities.BookmarkCallback callback, valuetype System.Activities.BookmarkOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.CreateBookmark(System.Activities.BookmarkCallback,System.Activities.BookmarkOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark (callback As BookmarkCallback, options As BookmarkOptions) As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark(System::Activities::BookmarkCallback ^ callback, System::Activities::BookmarkOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Activities.BookmarkCallback" />
        <Parameter Name="options" Type="System.Activities.BookmarkOptions" />
      </Parameters>
      <Docs>
        <param name="callback">Método al que se debe llamar cuando una notificación señala la reanudación de <see cref="T:System.Activities.NativeActivity" />.</param>
        <param name="options">Ajuste enumerado que rige cómo funciona el marcador respecto a otros subprocesos durante la ejecución de la clase <see cref="T:System.Activities.NativeActivity" /> actual.</param>
        <summary>Crea el punto en el que una clase <see cref="T:System.Activities.NativeActivity" /> puede esperar pasivamente su reanudación, con el método especificado que se va a ejecutar cuando se complete la notificación de la reanudación de la operación y con la opción especificada que rige cómo se utiliza el marcador durante la ejecución de la clase <see cref="T:System.Activities.NativeActivity" /> actual.</summary>
        <returns>Marcador que incluye el método de devolución de llamada y la opción de ejecución del marcador.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Entre las opciones de marcador se incluyen <xref:System.Activities.BookmarkOptions.MultipleResume>, F:System.Activities.BookmarkOptions.NonBlocking<xref:System.Activities.BookmarkOptions.NonBlocking> y F:System.Activities.BookmarkOptions.None<xref:System.Activities.BookmarkOptions.None>.  
  
 Las devoluciones de llamada de marcador pueden funcionar sin opciones de marcador pero las opciones de marcador siempre deben estar emparejadas con una devolución de llamada porque las opciones no se aplican en situaciones en las que no haya ningún método de devolución de llamada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark (string name, System.Activities.BookmarkCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark(string name, class System.Activities.BookmarkCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark (name As String, callback As BookmarkCallback) As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark(System::String ^ name, System::Activities::BookmarkCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="callback" Type="System.Activities.BookmarkCallback" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del marcador.</param>
        <param name="callback">Método al que se debe llamar cuando una notificación señala la reanudación de <see cref="T:System.Activities.NativeActivity" />.</param>
        <summary>Crea el punto en el que una clase <see cref="T:System.Activities.NativeActivity" /> puede esperar pasivamente su reanudación, con el nombre especificado y con el método especificado que se debe ejecutar cuando se complete la notificación de la reanudación de la operación.</summary>
        <returns>Marcador que incluye el nombre del marcador y el método de devolución de llamada.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark (string name, System.Activities.BookmarkCallback callback, System.Activities.BookmarkOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark(string name, class System.Activities.BookmarkCallback callback, valuetype System.Activities.BookmarkOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark (name As String, callback As BookmarkCallback, options As BookmarkOptions) As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark(System::String ^ name, System::Activities::BookmarkCallback ^ callback, System::Activities::BookmarkOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="callback" Type="System.Activities.BookmarkCallback" />
        <Parameter Name="options" Type="System.Activities.BookmarkOptions" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del marcador.</param>
        <param name="callback">Método al que se debe llamar cuando una notificación señala la reanudación de <see cref="T:System.Activities.NativeActivity" />.</param>
        <param name="options">Las opciones de marcador que rigen cómo se utiliza el marcador durante la ejecución de la clase <see cref="T:System.Activities.NativeActivity" /> actual.</param>
        <summary>Crea el punto en el que una clase <see cref="T:System.Activities.NativeActivity" /> puede esperar pasivamente su reanudación con el nombre especificado, con el método especificado que se va a ejecutar cuando se complete la notificación de la reanudación de la operación y con la opción especificada que rige cómo se utiliza el marcador durante la ejecución de la clase <see cref="T:System.Activities.NativeActivity" /> actual.</summary>
        <returns>Marcador que incluye el nombre del marcador, el método de devolución de llamada y la opción de ejecución de marcador.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las devoluciones de llamada de marcador pueden funcionar sin opciones de marcador pero las opciones de marcador siempre deben estar emparejadas con una devolución de llamada porque las opciones no se aplican en situaciones en las que no haya ningún método de devolución de llamada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark (string name, System.Activities.BookmarkCallback callback, System.Activities.BookmarkScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark(string name, class System.Activities.BookmarkCallback callback, class System.Activities.BookmarkScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkScope)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark (name As String, callback As BookmarkCallback, scope As BookmarkScope) As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark(System::String ^ name, System::Activities::BookmarkCallback ^ callback, System::Activities::BookmarkScope ^ scope);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="callback" Type="System.Activities.BookmarkCallback" />
        <Parameter Name="scope" Type="System.Activities.BookmarkScope" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del marcador.</param>
        <param name="callback">Método al que se debe llamar cuando una notificación señala la reanudación de <see cref="T:System.Activities.NativeActivity" />.</param>
        <param name="scope">Identificador aplicado a un grupo de marcadores que funcionan bajo el mismo protocolo durante el tiempo de ejecución de un flujo de trabajo.</param>
        <summary>Crea el punto en el que una clase <see cref="T:System.Activities.NativeActivity" /> puede esperar pasivamente su reanudación, con el nombre especificado, con el método especificado que se debe ejecutar cuando se complete la notificación de la reanudación de la operación y el ámbito especificado del marcador.</summary>
        <returns>Marcador que incluye el nombre del marcador, el método de devolución de llamada y el ámbito del marcador.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las devoluciones de llamada de marcador pueden funcionar sin opciones de marcador pero las opciones de marcador siempre deben estar emparejadas con una devolución de llamada porque las opciones no se aplican en situaciones en las que no haya ningún método de devolución de llamada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.Bookmark CreateBookmark (string name, System.Activities.BookmarkCallback callback, System.Activities.BookmarkScope scope, System.Activities.BookmarkOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Bookmark CreateBookmark(string name, class System.Activities.BookmarkCallback callback, class System.Activities.BookmarkScope scope, valuetype System.Activities.BookmarkOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkScope,System.Activities.BookmarkOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBookmark (name As String, callback As BookmarkCallback, scope As BookmarkScope, options As BookmarkOptions) As Bookmark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Bookmark ^ CreateBookmark(System::String ^ name, System::Activities::BookmarkCallback ^ callback, System::Activities::BookmarkScope ^ scope, System::Activities::BookmarkOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Bookmark</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="callback" Type="System.Activities.BookmarkCallback" />
        <Parameter Name="scope" Type="System.Activities.BookmarkScope" />
        <Parameter Name="options" Type="System.Activities.BookmarkOptions" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del marcador.</param>
        <param name="callback">Método al que se debe llamar cuando una notificación señala la reanudación de <see cref="T:System.Activities.NativeActivity" />.</param>
        <param name="scope">Identificador aplicado a un grupo de marcadores que funcionan bajo el mismo protocolo durante el tiempo de ejecución de un flujo de trabajo.</param>
        <param name="options">Las opciones de marcador que rigen cómo se usa el marcador durante la ejecución de la clase <see cref="T:System.Activities.NativeActivity" /> actual.</param>
        <summary>Crea el punto en el que una clase <see cref="T:System.Activities.NativeActivity" /> puede esperar pasivamente su reanudación con el nombre especificado, con el método especificado que se va a ejecutar cuando se complete la notificación de la reanudación de la operación, con el ámbito especificado del marcador y con la opción especificada que rige cómo se utiliza el marcador durante la ejecución de la clase <see cref="T:System.Activities.NativeActivity" /> actual.</summary>
        <returns>Marcador que incluye el nombre del marcador, el método de devolución de llamada, el ámbito del marcador y la opción de ejecución del marcador.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las devoluciones de llamada de marcador pueden funcionar sin opciones de marcador pero las opciones de marcador siempre deben estar emparejadas con una devolución de llamada porque las opciones no se aplican en situaciones en las que no haya ningún método de devolución de llamada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultBookmarkScope">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkScope DefaultBookmarkScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.BookmarkScope DefaultBookmarkScope" />
      <MemberSignature Language="DocId" Value="P:System.Activities.NativeActivityContext.DefaultBookmarkScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultBookmarkScope As BookmarkScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::BookmarkScope ^ DefaultBookmarkScope { System::Activities::BookmarkScope ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el ámbito del marcador asociado a la raíz del flujo de trabajo.</summary>
        <value>Identificador GUID único.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.ActivityInstance&gt; GetChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Activities.ActivityInstance&gt; GetChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.GetChildren" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildren () As ReadOnlyCollection(Of ActivityInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Activities::ActivityInstance ^&gt; ^ GetChildren();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.ActivityInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve una colección de actividades secundarias para la clase <see cref="T:System.Activities.NativeActivity" /> actual.</summary>
        <returns>Colección genérica de solo lectura de objetos <see cref="T:System.Activities.NativeActivity" /> secundarios.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (System.Activities.Variable variable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(class System.Activities.Variable variable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.GetValue(System.Activities.Variable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Activities::Variable ^ variable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable" />
      </Parameters>
      <Docs>
        <param name="variable">La variable cuyo valor se recupera durante la ejecución de la instancia de <see cref="T:System.Activities.NativeActivity" /> actual.</param>
        <summary>Devuelve el valor de la variable especificada en la instancia actual de <see cref="T:System.Activities.NativeActivity" />.</summary>
        <returns>El valor de la variable especificada.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetValue&lt;T&gt; (System.Activities.Variable&lt;T&gt; variable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetValue&lt;T&gt;(class System.Activities.Variable`1&lt;!!T&gt; variable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.GetValue``1(System.Activities.Variable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue(Of T) (variable As Variable(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetValue(System::Activities::Variable&lt;T&gt; ^ variable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">El tipo de la variable cuya clave se está recuperando.</typeparam>
        <param name="variable">Variable genérica cuyo valor se recupera durante la ejecución de la instancia de <see cref="T:System.Activities.NativeActivity" /> actual.</param>
        <summary>Devuelve el valor de la variable genérica especificada en la instancia actual de <see cref="T:System.Activities.NativeActivity" />.</summary>
        <returns>El valor de la variable especificada.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCancellationRequested">
      <MemberSignature Language="C#" Value="public bool IsCancellationRequested { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCancellationRequested" />
      <MemberSignature Language="DocId" Value="P:System.Activities.NativeActivityContext.IsCancellationRequested" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCancellationRequested As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCancellationRequested { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se va a cancelar la instancia de <see cref="T:System.Activities.NativeActivity" /> que se está ejecutando actualmente.</summary>
        <value>
          <see langword="true" /> si se debe cancelar la instancia de <see cref="T:System.Activities.NativeActivity" /> que se está ejecutando actualmente; en caso contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkCanceled">
      <MemberSignature Language="C#" Value="public void MarkCanceled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MarkCanceled() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.MarkCanceled" />
      <MemberSignature Language="VB.NET" Value="Public Sub MarkCanceled ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MarkCanceled();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Designa como cancelada la instancia de <see cref="T:System.Activities.NativeActivity" /> que está ejecutándose actualmente.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Activities.ExecutionProperties Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.ExecutionProperties Properties" />
      <MemberSignature Language="DocId" Value="P:System.Activities.NativeActivityContext.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As ExecutionProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::ExecutionProperties ^ Properties { System::Activities::ExecutionProperties ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ExecutionProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un objeto que administra las propiedades para la ejecución del objeto <see cref="T:System.Activities.NativeActivityContext" /> actual.</summary>
        <value>Objeto que administra las propiedades de ejecución.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllBookmarks">
      <MemberSignature Language="C#" Value="public void RemoveAllBookmarks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAllBookmarks() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.RemoveAllBookmarks" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAllBookmarks ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAllBookmarks();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quita todos los marcadores asociados con la instancia de <see cref="T:System.Activities.NativeActivity" /> que está ejecutándose actualmente.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveBookmark">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Quita un marcador de la instancia de <see cref="T:System.Activities.NativeActivity" /> que está ejecutándose actualmente.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveBookmark">
      <MemberSignature Language="C#" Value="public bool RemoveBookmark (System.Activities.Bookmark bookmark);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveBookmark(class System.Activities.Bookmark bookmark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.RemoveBookmark(System.Activities.Bookmark)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveBookmark(System::Activities::Bookmark ^ bookmark);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
      </Parameters>
      <Docs>
        <param name="bookmark">Punto en el que una instancia de <see cref="T:System.Activities.NativeActivity" /> puede esperar pasivamente su reanudación.</param>
        <summary>Quita el marcador especificado de la instancia de <see cref="T:System.Activities.NativeActivity" /> que está ejecutándose actualmente.</summary>
        <returns>
          Es <see langword="true" /> si se quitó el marcador; de lo contrario, es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveBookmark">
      <MemberSignature Language="C#" Value="public bool RemoveBookmark (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveBookmark(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.RemoveBookmark(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveBookmark (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveBookmark(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del marcador.</param>
        <summary>Quita el marcador con el nombre especificado.</summary>
        <returns>
          Es <see langword="true" /> si se quitó el marcador; de lo contrario, es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveBookmark">
      <MemberSignature Language="C#" Value="public bool RemoveBookmark (string name, System.Activities.BookmarkScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveBookmark(string name, class System.Activities.BookmarkScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.RemoveBookmark(System.String,System.Activities.BookmarkScope)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveBookmark (name As String, scope As BookmarkScope) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveBookmark(System::String ^ name, System::Activities::BookmarkScope ^ scope);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="scope" Type="System.Activities.BookmarkScope" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del marcador.</param>
        <param name="scope">El identificador GUID único para un grupo de objetos <see cref="T:System.Activities.Bookmark" /> clasificados como operativos bajo el mismo protocolo.</param>
        <summary>Quita del marcador con el nombre especificado y el ámbito del marcador especificado.</summary>
        <returns>
          Es <see langword="true" /> si se quitó el marcador; de lo contrario, es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (System.Activities.Bookmark bookmark, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(class System.Activities.Bookmark bookmark, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ResumeBookmark(System.Activities.Bookmark,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark">Punto en el que <see cref="T:System.Activities.NativeActivity" /> puede esperar pasivamente su reanudación.</param>
        <param name="value">La información relacionada con la reanudación de un marcador.</param>
        <summary>Reanuda el marcador especificado.</summary>
        <returns>El resultado del intento de reanudar la operación de <see cref="T:System.Activities.NativeActivity" /> en el punto del marcador.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleAction (System.Activities.ActivityAction activityAction, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleAction(class System.Activities.ActivityAction activityAction, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleAction(System.Activities.ActivityAction,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <param name="activityAction">Acción que se ejecuta cuando se provoca un evento concreto en la actividad primaria.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityAction" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityAction" />.</param>
        <summary>Programa la ejecución de una acción de la clase <see cref="T:System.Activities.ActivityAction" /> especificada que no tiene ningún parámetro y que marca las ubicaciones de devolución de llamada especificadas donde se reanuda el proceso primario tras la finalización de <see cref="T:System.Activities.ActivityAction" />.</summary>
        <returns>Nueva instancia de una acción de actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleAction&lt;T&gt; (System.Activities.ActivityAction&lt;T&gt; activityAction, T argument, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleAction&lt;T&gt;(class System.Activities.ActivityAction`1&lt;!!T&gt; activityAction, !!T argument, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleAction``1(System.Activities.ActivityAction{``0},``0,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleAction(Of T) (activityAction As ActivityAction(Of T), argument As T, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null) As ActivityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T&gt;" />
        <Parameter Name="argument" Type="T" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T">Argumento que traslada datos a una actividad.</typeparam>
        <param name="activityAction">Acción que se ejecuta cuando se provoca un evento concreto en la actividad primaria.</param>
        <param name="argument">Datos enviados a una actividad.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityAction`1" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityAction`1" />.</param>
        <summary>Programa para su ejecución una acción de la clase <see cref="T:System.Activities.ActivityAction`1" /> especificada que tiene un parámetro para un argumento <see langword="in" /> de entrada y que marca las ubicaciones de devolución de llamada especificadas donde se reanuda el proceso primario tras la finalización de la <see cref="T:System.Activities.ActivityAction`1" />.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleAction&lt;T1,T2&gt; (System.Activities.ActivityAction&lt;T1,T2&gt; activityAction, T1 argument1, T2 argument2, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleAction&lt;T1, T2&gt;(class System.Activities.ActivityAction`2&lt;!!T1, !!T2&gt; activityAction, !!T1 argument1, !!T2 argument2, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleAction``2(System.Activities.ActivityAction{``0,``1},``0,``1,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleAction(Of T1, T2) (activityAction As ActivityAction(Of T1, T2), argument1 As T1, argument2 As T2, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null) As ActivityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T2">Los datos que se trasladan a una actividad.</typeparam>
        <param name="activityAction">Acción que se ejecuta cuando se provoca un evento concreto en la actividad primaria.</param>
        <param name="argument1">Argumento que traslada datos a una actividad.</param>
        <param name="argument2">Argumento que traslada datos a una actividad.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityAction`2" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityAction`2" />.</param>
        <summary>Programa para su ejecución una acción de la clase <see cref="T:System.Activities.ActivityAction`2" /> especificada que tiene dos parámetros para los argumentos <see langword="in" /> de entrada y que marca las ubicaciones de devolución de llamada especificadas donde se reanuda el proceso primario tras la finalización de la <see cref="T:System.Activities.ActivityAction`2" />.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleAction&lt;T1,T2,T3&gt; (System.Activities.ActivityAction&lt;T1,T2,T3&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleAction&lt;T1, T2, T3&gt;(class System.Activities.ActivityAction`3&lt;!!T1, !!T2, !!T3&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleAction``3(System.Activities.ActivityAction{``0,``1,``2},``0,``1,``2,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleAction(Of T1, T2, T3) (activityAction As ActivityAction(Of T1, T2, T3), argument1 As T1, argument2 As T2, argument3 As T3, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null) As ActivityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T2">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T3">Los datos que se trasladan a una actividad.</typeparam>
        <param name="activityAction">Acción que se ejecuta cuando se provoca un evento concreto en la actividad primaria.</param>
        <param name="argument1">Argumento que traslada datos a una actividad.</param>
        <param name="argument2">Argumento que traslada datos a una actividad.</param>
        <param name="argument3">Argumento que traslada datos a una actividad.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityAction`3" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityAction`3" />.</param>
        <summary>Programa para su ejecución una acción <see cref="T:System.Activities.ActivityAction`3" /> especificada que tiene tres parámetros para los argumentos <see langword="in" /> de entrada y que marca las ubicaciones de devolución de llamada especificadas donde se reanuda el proceso primario tras la finalización de la <see cref="T:System.Activities.ActivityAction`3" />.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleAction&lt;T1,T2,T3,T4&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleAction&lt;T1, T2, T3, T4&gt;(class System.Activities.ActivityAction`4&lt;!!T1, !!T2, !!T3, !!T4&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleAction``4(System.Activities.ActivityAction{``0,``1,``2,``3},``0,``1,``2,``3,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleAction(Of T1, T2, T3, T4) (activityAction As ActivityAction(Of T1, T2, T3, T4), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null) As ActivityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Datos que se llevan a una actividad.</typeparam>
        <typeparam name="T2">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T3">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T4">Los datos que se trasladan a una actividad.</typeparam>
        <param name="activityAction">Acción que se ejecuta cuando se provoca un evento concreto en la actividad primaria.</param>
        <param name="argument1">Argumento que traslada datos a una actividad.</param>
        <param name="argument2">Argumento que traslada datos a una actividad.</param>
        <param name="argument3">Argumento que traslada datos a una actividad.</param>
        <param name="argument4">Argumento que traslada datos a una actividad.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityAction`4" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityAction`4" />.</param>
        <summary>Programa para su ejecución una acción de la clase <see cref="T:System.Activities.ActivityAction`4" /> especificada que tiene cuatro parámetros para los argumentos <see langword="in" /> de entrada y que marca las ubicaciones de devolución de llamada especificadas donde se reanuda el proceso primario tras la finalización de la <see cref="T:System.Activities.ActivityAction`4" />.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleAction&lt;T1,T2,T3,T4,T5&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleAction&lt;T1, T2, T3, T4, T5&gt;(class System.Activities.ActivityAction`5&lt;!!T1, !!T2, !!T3, !!T4, !!T5&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleAction``5(System.Activities.ActivityAction{``0,``1,``2,``3,``4},``0,``1,``2,``3,``4,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleAction(Of T1, T2, T3, T4, T5) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null) As ActivityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T2">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T3">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T4">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T5">Los datos que se trasladan a una actividad.</typeparam>
        <param name="activityAction">Acción que se ejecuta cuando se provoca un evento concreto en la actividad primaria.</param>
        <param name="argument1">Argumento que traslada datos a una actividad.</param>
        <param name="argument2">Argumento que traslada datos a una actividad.</param>
        <param name="argument3">Argumento que traslada datos a una actividad.</param>
        <param name="argument4">Argumento que traslada datos a una actividad.</param>
        <param name="argument5">Argumento que traslada datos a una actividad.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityAction`5" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityAction`5" />.</param>
        <summary>Programa para su ejecución una acción de la clase <see cref="T:System.Activities.ActivityAction`5" /> especificada que tiene cinco parámetros para los argumentos <see langword="in" /> de entrada y que marca las ubicaciones de devolución de llamada especificadas donde se reanuda el proceso primario tras la finalización de la <see cref="T:System.Activities.ActivityAction`5" />.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleAction&lt;T1,T2,T3,T4,T5,T6&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleAction&lt;T1, T2, T3, T4, T5, T6&gt;(class System.Activities.ActivityAction`6&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleAction``6(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleAction(Of T1, T2, T3, T4, T5, T6) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null) As ActivityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T2">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T3">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T4">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T5">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T6">Los datos que se trasladan a una actividad.</typeparam>
        <param name="activityAction">Acción que se ejecuta cuando se provoca un evento concreto en la actividad primaria.</param>
        <param name="argument1">Argumento que traslada datos a una actividad.</param>
        <param name="argument2">Argumento que traslada datos a una actividad.</param>
        <param name="argument3">Argumento que traslada datos a una actividad.</param>
        <param name="argument4">Argumento que traslada datos a una actividad.</param>
        <param name="argument5">Argumento que traslada datos a una actividad.</param>
        <param name="argument6">Argumento que traslada datos a una actividad.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityAction`6" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityAction`6" />.</param>
        <summary>Programa para su ejecución una acción de la clase <see cref="T:System.Activities.ActivityAction`6" /> especificada que tiene seis parámetros para los argumentos <see langword="in" /> de entrada y que marca las ubicaciones de devolución de llamada especificadas donde se reanuda el proceso primario tras la finalización de la <see cref="T:System.Activities.ActivityAction`6" />.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7&gt;(class System.Activities.ActivityAction`7&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleAction``7(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null) As ActivityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T2">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T3">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T4">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T5">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T6">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T7">Los datos que se trasladan a una actividad.</typeparam>
        <param name="activityAction">Acción que se ejecuta cuando se provoca un evento concreto en la actividad primaria.</param>
        <param name="argument1">Argumento que traslada datos a una actividad.</param>
        <param name="argument2">Argumento que traslada datos a una actividad.</param>
        <param name="argument3">Argumento que traslada datos a una actividad.</param>
        <param name="argument4">Argumento que traslada datos a una actividad.</param>
        <param name="argument5">Argumento que traslada datos a una actividad.</param>
        <param name="argument6">Argumento que traslada datos a una actividad.</param>
        <param name="argument7">Argumento que traslada datos a una actividad.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityAction`7" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityAction`7" />.</param>
        <summary>Programa para su ejecución una acción de la clase <see cref="T:System.Activities.ActivityAction`7" /> especificada que tiene siete parámetros para los argumentos <see langword="in" /> de entrada y que marca las ubicaciones de devolución de llamada especificadas donde se reanuda el proceso primario tras la finalización de la <see cref="T:System.Activities.ActivityAction`7" />.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(class System.Activities.ActivityAction`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleAction``8(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null) As ActivityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T2">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T3">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T4">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T5">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T6">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T7">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T8">Los datos que se trasladan a una actividad.</typeparam>
        <param name="activityAction">Acción que se ejecuta cuando se provoca un evento concreto en la actividad primaria.</param>
        <param name="argument1">Argumento que traslada datos a una actividad.</param>
        <param name="argument2">Argumento que traslada datos a una actividad.</param>
        <param name="argument3">Argumento que traslada datos a una actividad.</param>
        <param name="argument4">Argumento que traslada datos a una actividad.</param>
        <param name="argument5">Argumento que traslada datos a una actividad.</param>
        <param name="argument6">Argumento que traslada datos a una actividad.</param>
        <param name="argument7">Argumento que traslada datos a una actividad.</param>
        <param name="argument8">Argumento que traslada datos a una actividad.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityAction`8" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityAction`8" />.</param>
        <summary>Programa para su ejecución una acción de la clase <see cref="T:System.Activities.ActivityAction`8" /> especificada que tiene ocho parámetros para los argumentos <see langword="in" /> de entrada y que marca las ubicaciones de devolución de llamada especificadas donde se reanuda el proceso primario tras la finalización de la clase <see cref="T:System.Activities.ActivityAction`8" />.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;(class System.Activities.ActivityAction`9&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleAction``9(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null) As ActivityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T2">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T3">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T4">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T5">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T6">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T7">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T8">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T9">Los datos que se trasladan a una actividad.</typeparam>
        <param name="activityAction">Acción que se ejecuta cuando se provoca un evento concreto en la actividad primaria.</param>
        <param name="argument1">Argumento que traslada datos a una actividad.</param>
        <param name="argument2">Argumento que traslada datos a una actividad.</param>
        <param name="argument3">Argumento que traslada datos a una actividad.</param>
        <param name="argument4">Argumento que traslada datos a una actividad.</param>
        <param name="argument5">Argumento que traslada datos a una actividad.</param>
        <param name="argument6">Argumento que traslada datos a una actividad.</param>
        <param name="argument7">Argumento que traslada datos a una actividad.</param>
        <param name="argument8">Argumento que traslada datos a una actividad.</param>
        <param name="argument9">Argumento que traslada datos a una actividad.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityAction`9" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityAction`9" />.</param>
        <summary>Programa para su ejecución una acción de la clase <see cref="T:System.Activities.ActivityAction`9" /> especificada que tiene nueve parámetros para los argumentos <see langword="in" /> de entrada y que marca las ubicaciones de devolución de llamada especificadas donde se reanuda el proceso primario tras la finalización de la <see cref="T:System.Activities.ActivityAction`9" />.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(class System.Activities.ActivityAction`10&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null) As ActivityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T2">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T3">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T4">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T5">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T6">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T7">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T8">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T9">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T10">Los datos que se trasladan a una actividad.</typeparam>
        <param name="activityAction">Acción que se ejecuta cuando se provoca un evento concreto en la actividad primaria.</param>
        <param name="argument1">Argumento que traslada datos a una actividad.</param>
        <param name="argument2">Argumento que traslada datos a una actividad.</param>
        <param name="argument3">Argumento que traslada datos a una actividad.</param>
        <param name="argument4">Argumento que traslada datos a una actividad.</param>
        <param name="argument5">Argumento que traslada datos a una actividad.</param>
        <param name="argument6">Argumento que traslada datos a una actividad.</param>
        <param name="argument7">Argumento que traslada datos a una actividad.</param>
        <param name="argument8">Argumento que traslada datos a una actividad.</param>
        <param name="argument9">Argumento que traslada datos a una actividad.</param>
        <param name="argument10">Argumento que traslada datos a una actividad.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityAction`10" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityAction`10" />.</param>
        <summary>Programa para su ejecución una acción de la clase <see cref="T:System.Activities.ActivityAction`10" /> especificada que tiene diez parámetros para los argumentos <see langword="in" /> de entrada y que marca las ubicaciones de devolución de llamada especificadas donde se reanuda el proceso primario tras la finalización de la <see cref="T:System.Activities.ActivityAction`10" />.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11&gt;(class System.Activities.ActivityAction`11&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null) As ActivityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T2">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T3">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T4">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T5">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T6">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T7">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T8">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T9">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T10">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T11">Los datos que se trasladan a una actividad.</typeparam>
        <param name="activityAction">Acción que se ejecuta cuando se provoca un evento concreto en la actividad primaria.</param>
        <param name="argument1">Argumento que traslada datos a una actividad.</param>
        <param name="argument2">Argumento que traslada datos a una actividad.</param>
        <param name="argument3">Argumento que traslada datos a una actividad.</param>
        <param name="argument4">Argumento que traslada datos a una actividad.</param>
        <param name="argument5">Argumento que traslada datos a una actividad.</param>
        <param name="argument6">Argumento que traslada datos a una actividad.</param>
        <param name="argument7">Argumento que traslada datos a una actividad.</param>
        <param name="argument8">Argumento que traslada datos a una actividad.</param>
        <param name="argument9">Argumento que traslada datos a una actividad.</param>
        <param name="argument10">Argumento que traslada datos a una actividad.</param>
        <param name="argument11">Argumento que traslada datos a una actividad.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityAction`11" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityAction`11" />.</param>
        <summary>Programa para su ejecución una acción de la clase <see cref="T:System.Activities.ActivityAction`11" /> especificada que tiene once parámetros para los argumentos <see langword="in" /> de entrada y que marca las ubicaciones de devolución de llamada especificadas donde se reanuda el proceso primario tras la finalización de la <see cref="T:System.Activities.ActivityAction`11" />.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12&gt;(class System.Activities.ActivityAction`12&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null) As ActivityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T2">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T3">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T4">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T5">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T6">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T7">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T8">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T9">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T10">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T11">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T12">Los datos que se trasladan a una actividad.</typeparam>
        <param name="activityAction">Acción que se ejecuta cuando se provoca un evento concreto en la actividad primaria.</param>
        <param name="argument1">Argumento que traslada datos a una actividad.</param>
        <param name="argument2">Argumento que traslada datos a una actividad.</param>
        <param name="argument3">Argumento que traslada datos a una actividad.</param>
        <param name="argument4">Argumento que traslada datos a una actividad.</param>
        <param name="argument5">Argumento que traslada datos a una actividad.</param>
        <param name="argument6">Argumento que traslada datos a una actividad.</param>
        <param name="argument7">Argumento que traslada datos a una actividad.</param>
        <param name="argument8">Argumento que traslada datos a una actividad.</param>
        <param name="argument9">Argumento que traslada datos a una actividad.</param>
        <param name="argument10">Argumento que traslada datos a una actividad.</param>
        <param name="argument11">Argumento que traslada datos a una actividad.</param>
        <param name="argument12">Argumento que traslada datos a una actividad.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityAction`12" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityAction`12" />.</param>
        <summary>Programa para su ejecución una acción <see cref="T:System.Activities.ActivityAction`12" /> especificada que tiene doce parámetros para los argumentos <see langword="in" /> de entrada y que marca las ubicaciones de devolución de llamada especificadas donde se reanuda el proceso primario tras la finalización de la <see cref="T:System.Activities.ActivityAction`12" />.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13&gt;(class System.Activities.ActivityAction`13&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null) As ActivityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T2">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T3">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T4">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T5">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T6">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T7">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T8">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T9">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T10">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T11">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T12">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T13">Los datos que se trasladan a una actividad.</typeparam>
        <param name="activityAction">Acción que se ejecuta cuando se provoca un evento concreto en la actividad primaria.</param>
        <param name="argument1">Argumento que traslada datos a una actividad.</param>
        <param name="argument2">Argumento que traslada datos a una actividad.</param>
        <param name="argument3">Argumento que traslada datos a una actividad.</param>
        <param name="argument4">Argumento que traslada datos a una actividad.</param>
        <param name="argument5">Argumento que traslada datos a una actividad.</param>
        <param name="argument6">Argumento que traslada datos a una actividad.</param>
        <param name="argument7">Argumento que traslada datos a una actividad.</param>
        <param name="argument8">Argumento que traslada datos a una actividad.</param>
        <param name="argument9">Argumento que traslada datos a una actividad.</param>
        <param name="argument10">Argumento que traslada datos a una actividad.</param>
        <param name="argument11">Argumento que traslada datos a una actividad.</param>
        <param name="argument12">Argumento que traslada datos a una actividad.</param>
        <param name="argument13">Argumento que traslada datos a una actividad.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityAction`13" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityAction`13" />.</param>
        <summary>Programa para su ejecución una acción de la clase <see cref="T:System.Activities.ActivityAction`13" /> especificada que tiene trece parámetros para los argumentos <see langword="in" /> de entrada y que marca las ubicaciones de devolución de llamada especificadas donde se reanuda el proceso primario tras la finalización de la <see cref="T:System.Activities.ActivityAction`13" />.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, T14 argument14, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14&gt;(class System.Activities.ActivityAction`14&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, !!T14 argument14, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, argument14 As T14, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null) As ActivityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="argument14" Type="T14" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T2">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T3">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T4">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T5">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T6">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T7">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T8">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T9">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T10">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T11">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T12">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T13">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T14">Los datos que se trasladan a una actividad.</typeparam>
        <param name="activityAction">Acción que se ejecuta cuando se provoca un evento concreto en la actividad primaria.</param>
        <param name="argument1">Argumento que traslada datos a una actividad.</param>
        <param name="argument2">Argumento que traslada datos a una actividad.</param>
        <param name="argument3">Argumento que traslada datos a una actividad.</param>
        <param name="argument4">Argumento que traslada datos a una actividad.</param>
        <param name="argument5">Argumento que traslada datos a una actividad.</param>
        <param name="argument6">Argumento que traslada datos a una actividad.</param>
        <param name="argument7">Argumento que traslada datos a una actividad.</param>
        <param name="argument8">Argumento que traslada datos a una actividad.</param>
        <param name="argument9">Argumento que traslada datos a una actividad.</param>
        <param name="argument10">Argumento que traslada datos a una actividad.</param>
        <param name="argument11">Argumento que traslada datos a una actividad.</param>
        <param name="argument12">Argumento que traslada datos a una actividad.</param>
        <param name="argument13">Argumento que traslada datos a una actividad.</param>
        <param name="argument14">Argumento que traslada datos a una actividad.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityAction`14" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityAction`14" />.</param>
        <summary>Programa para su ejecución una acción de la clase <see cref="T:System.Activities.ActivityAction`14" /> especificada que tiene catorce parámetros para los argumentos <see langword="in" /> de entrada y que marca las ubicaciones de devolución de llamada especificadas donde se reanuda el proceso primario tras la finalización de la <see cref="T:System.Activities.ActivityAction`14" />.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, T14 argument14, T15 argument15, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15&gt;(class System.Activities.ActivityAction`15&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, !!T15&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, !!T14 argument14, !!T15 argument15, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, argument14 As T14, argument15 As T15, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null) As ActivityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="argument14" Type="T14" />
        <Parameter Name="argument15" Type="T15" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T2">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T3">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T4">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T5">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T6">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T7">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T8">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T9">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T10">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T11">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T12">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T13">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T14">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T15">Parámetro genérico que representa los datos que se trasladan a una actividad.</typeparam>
        <param name="activityAction">Acción que se ejecuta cuando se provoca un evento concreto en la actividad primaria.</param>
        <param name="argument1">Argumento que traslada datos a una actividad.</param>
        <param name="argument2">Argumento que traslada datos a una actividad.</param>
        <param name="argument3">Argumento que traslada datos a una actividad.</param>
        <param name="argument4">Argumento que traslada datos a una actividad.</param>
        <param name="argument5">Argumento que traslada datos a una actividad.</param>
        <param name="argument6">Argumento que traslada datos a una actividad.</param>
        <param name="argument7">Argumento que traslada datos a una actividad.</param>
        <param name="argument8">Argumento que traslada datos a una actividad.</param>
        <param name="argument9">Argumento que traslada datos a una actividad.</param>
        <param name="argument10">Argumento que traslada datos a una actividad.</param>
        <param name="argument11">Argumento que traslada datos a una actividad.</param>
        <param name="argument12">Argumento que traslada datos a una actividad.</param>
        <param name="argument13">Argumento que traslada datos a una actividad.</param>
        <param name="argument14">Argumento que traslada datos a una actividad.</param>
        <param name="argument15">Argumento que traslada datos a una actividad.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityAction`15" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityAction`15" />.</param>
        <summary>Programa para su ejecución una acción de la clase <see cref="T:System.Activities.ActivityAction`15" /> especificada que tiene quince parámetros para los argumentos <see langword="in" /> de entrada y que marca las ubicaciones de devolución de llamada especificadas donde se reanuda el proceso primario tras la finalización de la <see cref="T:System.Activities.ActivityAction`15" />.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt; (System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt; activityAction, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, T14 argument14, T15 argument15, T16 argument16, System.Activities.CompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleAction&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16&gt;(class System.Activities.ActivityAction`16&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, !!T15, !!T16&gt; activityAction, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, !!T14 argument14, !!T15 argument15, !!T16 argument16, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16) (activityAction As ActivityAction(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, argument14 As T14, argument15 As T15, argument16 As T16, Optional onCompleted As CompletionCallback = null, Optional onFaulted As FaultCallback = null) As ActivityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityAction" Type="System.Activities.ActivityAction&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="argument14" Type="T14" />
        <Parameter Name="argument15" Type="T15" />
        <Parameter Name="argument16" Type="T16" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T2">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T3">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T4">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T5">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T6">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T7">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T8">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T9">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T10">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T11">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T12">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T13">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T14">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T15">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T16">Los datos que se trasladan a una actividad.</typeparam>
        <param name="activityAction">Acción que se ejecuta cuando se provoca un evento concreto en la actividad primaria.</param>
        <param name="argument1">Argumento que traslada datos a una actividad.</param>
        <param name="argument2">Argumento que traslada datos a una actividad.</param>
        <param name="argument3">Argumento que traslada datos a una actividad.</param>
        <param name="argument4">Argumento que traslada datos a una actividad.</param>
        <param name="argument5">Argumento que traslada datos a una actividad.</param>
        <param name="argument6">Argumento que traslada datos a una actividad.</param>
        <param name="argument7">Argumento que traslada datos a una actividad.</param>
        <param name="argument8">Argumento que traslada datos a una actividad.</param>
        <param name="argument9">Argumento que traslada datos a una actividad.</param>
        <param name="argument10">Argumento que traslada datos a una actividad.</param>
        <param name="argument11">Argumento que traslada datos a una actividad.</param>
        <param name="argument12">Argumento que traslada datos a una actividad.</param>
        <param name="argument13">Argumento que traslada datos a una actividad.</param>
        <param name="argument14">Argumento que traslada datos a una actividad.</param>
        <param name="argument15">Argumento que traslada datos a una actividad.</param>
        <param name="argument16">Argumento que traslada datos a una actividad.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityAction`16" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityAction`16" />.</param>
        <summary>Programa para su ejecución una acción de la clase <see cref="T:System.Activities.ActivityAction`16" /> especificada que tiene dieciséis parámetros para los argumentos <see langword="in" /> de entrada y que marca las ubicaciones de devolución de llamada especificadas donde se reanuda el proceso primario tras la finalización de la <see cref="T:System.Activities.ActivityAction`16" />.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ScheduleActivity">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Programa una actividad secundaria de <see cref="T:System.Activities.NativeActivity" /> para su ejecución.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ScheduleActivity">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleActivity (System.Activities.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleActivity(class System.Activities.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::ActivityInstance ^ ScheduleActivity(System::Activities::Activity ^ activity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">Actividad secundaria que activa un evento que se produce en la ejecución de una <see cref="T:System.Activities.NativeActivity" /> primaria.</param>
        <summary>Programa la ejecución de la actividad secundaria de <see cref="T:System.Activities.NativeActivity" />.</summary>
        <returns>Instancia de actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleActivity">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleActivity (System.Activities.Activity activity, System.Activities.CompletionCallback onCompleted);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleActivity(class System.Activities.Activity activity, class System.Activities.CompletionCallback onCompleted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.CompletionCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::ActivityInstance ^ ScheduleActivity(System::Activities::Activity ^ activity, System::Activities::CompletionCallback ^ onCompleted);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
      </Parameters>
      <Docs>
        <param name="activity">Actividad secundaria que activa un evento que se produce en la ejecución de una <see cref="T:System.Activities.NativeActivity" /> primaria.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityAction" />.</param>
        <summary>Programa la actividad secundaria especificada de <see cref="T:System.Activities.NativeActivity" /> para su ejecución utilizando la ubicación de devolución de llamada de finalización donde se reanuda el proceso primario tras la finalización de la actividad secundaria.</summary>
        <returns>Instancia de actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleActivity">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleActivity (System.Activities.Activity activity, System.Activities.FaultCallback onFaulted);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleActivity(class System.Activities.Activity activity, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.FaultCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::ActivityInstance ^ ScheduleActivity(System::Activities::Activity ^ activity, System::Activities::FaultCallback ^ onFaulted);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <param name="activity">Actividad secundaria que activa un evento que se produce en la ejecución de una <see cref="T:System.Activities.NativeActivity" /> primaria.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityAction" />.</param>
        <summary>Programa la actividad secundaria especificada de <see cref="T:System.Activities.NativeActivity" /> para su ejecución utilizando la ubicación de devolución de llamada de error especificada donde se reanuda el proceso primario cuando la actividad entra en estado de error.</summary>
        <returns>Instancia de actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleActivity">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleActivity (System.Activities.Activity activity, System.Activities.CompletionCallback onCompleted, System.Activities.FaultCallback onFaulted);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleActivity(class System.Activities.Activity activity, class System.Activities.CompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::ActivityInstance ^ ScheduleActivity(System::Activities::Activity ^ activity, System::Activities::CompletionCallback ^ onCompleted, System::Activities::FaultCallback ^ onFaulted);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <param name="activity">Actividad secundaria que activa un evento que se produce en la ejecución de una <see cref="T:System.Activities.NativeActivity" /> primaria.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de <see cref="T:System.Activities.NativeActivity" /> tras la finalización de <see cref="T:System.Activities.ActivityAction" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de <see cref="T:System.Activities.NativeActivity" /> si un error provoca la finalización de la <see cref="T:System.Activities.ActivityAction" />.</param>
        <summary>Programa la actividad secundaria especificada de <see cref="T:System.Activities.NativeActivity" /> para su ejecución y marca las ubicaciones de devolución de llamada especificadas donde se reanuda el proceso primario tras la finalización de la actividad secundaria.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleActivity&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleActivity&lt;TResult&gt; (System.Activities.Activity&lt;TResult&gt; activity, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleActivity&lt;TResult&gt;(class System.Activities.Activity`1&lt;!!TResult&gt; activity, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleActivity``1(System.Activities.Activity{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleActivity(Of TResult) (activity As Activity(Of TResult), Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null) As ActivityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activity" Type="System.Activities.Activity&lt;TResult&gt;" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">El tipo del argumento <see langword="out" /> de la actividad secundaria <see cref="T:System.Activities.NativeActivity" />.</typeparam>
        <param name="activity">Actividad secundaria que activa un evento que se produce en la ejecución de una <see cref="T:System.Activities.NativeActivity" /> primaria.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de <see cref="T:System.Activities.NativeActivity" /> tras la finalización de <see cref="T:System.Activities.ActivityAction`1" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de <see cref="T:System.Activities.NativeActivity" /> si un error provoca la finalización de la <see cref="T:System.Activities.ActivityAction" />.</param>
        <summary>Programa para su ejecución la acción secundaria de <see cref="T:System.Activities.NativeActivity" /> especificada que tiene un parámetro para un argumento <see langword="in" /> de entrada y que marca las ubicaciones de devolución de llamada especificadas donde se reanuda el proceso primario tras la finalización de la clase <see cref="T:System.Activities.ActivityAction`1" />.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleDelegate">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleDelegate (System.Activities.ActivityDelegate activityDelegate, System.Collections.Generic.IDictionary&lt;string,object&gt; inputParameters, System.Activities.DelegateCompletionCallback onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleDelegate(class System.Activities.ActivityDelegate activityDelegate, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; inputParameters, class System.Activities.DelegateCompletionCallback onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleDelegate(System.Activities.ActivityDelegate,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.DelegateCompletionCallback,System.Activities.FaultCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityDelegate" Type="System.Activities.ActivityDelegate" />
        <Parameter Name="inputParameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="onCompleted" Type="System.Activities.DelegateCompletionCallback" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <param name="activityDelegate">El método de devolución de llamada al que vuelve una actividad cuando se complete la acción de actividad especificada.</param>
        <param name="inputParameters">Lista de nombres y valores de argumentos de actividad de un diccionario.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityAction" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityAction" />.</param>
        <summary>Inserta el método de devolución de llamada para una actividad en el grupo de elementos de trabajo.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleFunc&lt;TResult&gt; (System.Activities.ActivityFunc&lt;TResult&gt; activityFunc, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleFunc&lt;TResult&gt;(class System.Activities.ActivityFunc`1&lt;!!TResult&gt; activityFunc, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleFunc``1(System.Activities.ActivityFunc{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleFunc(Of TResult) (activityFunc As ActivityFunc(Of TResult), Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null) As ActivityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;TResult&gt;" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">El tipo del argumento <see langword="out" /> de la actividad secundaria <see cref="T:System.Activities.NativeActivity" />.</typeparam>
        <param name="activityFunc">Actividad secundaria que se ejecuta cuando se produce un evento concreto en la actividad primaria y devuelve un valor.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityFunc`1" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityFunc`1" />.</param>
        <summary>Programa para su ejecución una clase <see cref="T:System.Activities.ActivityFunc`1" /> especificada con un parámetro que contiene un valor devuelto y marca las ubicaciones de devolución de llamada especificadas donde se reanuda el proceso primario tras la finalización de la clase <see cref="T:System.Activities.ActivityFunc`1" />.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleFunc&lt;T,TResult&gt; (System.Activities.ActivityFunc&lt;T,TResult&gt; activityFunc, T argument, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleFunc&lt;T, TResult&gt;(class System.Activities.ActivityFunc`2&lt;!!T, !!TResult&gt; activityFunc, !!T argument, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleFunc``2(System.Activities.ActivityFunc{``0,``1},``0,System.Activities.CompletionCallback{``1},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleFunc(Of T, TResult) (activityFunc As ActivityFunc(Of T, TResult), argument As T, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null) As ActivityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T,TResult&gt;" />
        <Parameter Name="argument" Type="T" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="TResult">El tipo del argumento <see langword="out" /> de la actividad secundaria <see cref="T:System.Activities.NativeActivity" />.</typeparam>
        <param name="activityFunc">Actividad secundaria que se ejecuta cuando se produce un evento concreto en la actividad primaria y devuelve un valor.</param>
        <param name="argument">Argumento que traslada datos a una actividad.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityFunc`2" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityFunc`2" />.</param>
        <summary>Programa para su ejecución una clase <see cref="T:System.Activities.ActivityFunc`2" /> especificada que tiene dos parámetros para un valor devuelto y para un argumento <see langword="in" /> de entrada y que marca las ubicaciones de devolución de llamada especificadas donde se reanuda el proceso primario tras la finalización de la clase <see cref="T:System.Activities.ActivityFunc`2" />.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleFunc&lt;T1,T2,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,TResult&gt; activityFunc, T1 argument1, T2 argument2, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleFunc&lt;T1, T2, TResult&gt;(class System.Activities.ActivityFunc`3&lt;!!T1, !!T2, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleFunc``3(System.Activities.ActivityFunc{``0,``1,``2},``0,``1,System.Activities.CompletionCallback{``2},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleFunc(Of T1, T2, TResult) (activityFunc As ActivityFunc(Of T1, T2, TResult), argument1 As T1, argument2 As T2, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null) As ActivityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T2">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="TResult">El tipo del argumento <see langword="out" /> de la actividad secundaria <see cref="T:System.Activities.NativeActivity" />.</typeparam>
        <param name="activityFunc">Actividad secundaria que se ejecuta cuando se produce un evento concreto en la actividad primaria y devuelve un valor.</param>
        <param name="argument1">Argumento que traslada datos a una actividad.</param>
        <param name="argument2">Argumento que traslada datos a una actividad.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityFunc`3" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityFunc`3" />.</param>
        <summary>Programa para su ejecución una clase <see cref="T:System.Activities.ActivityFunc`3" /> especificada que tiene tres parámetros para un valor devuelto y para los argumentos <see langword="in" /> de entrada y que marca las ubicaciones de devolución de llamada especificadas donde se reanuda el proceso primario tras la finalización de la clase <see cref="T:System.Activities.ActivityFunc`3" />.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleFunc&lt;T1,T2,T3,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleFunc&lt;T1, T2, T3, TResult&gt;(class System.Activities.ActivityFunc`4&lt;!!T1, !!T2, !!T3, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleFunc``4(System.Activities.ActivityFunc{``0,``1,``2,``3},``0,``1,``2,System.Activities.CompletionCallback{``3},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleFunc(Of T1, T2, T3, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, TResult), argument1 As T1, argument2 As T2, argument3 As T3, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null) As ActivityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T2">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T3">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="TResult">El tipo del argumento <see langword="out" /> de la actividad secundaria <see cref="T:System.Activities.NativeActivity" />.</typeparam>
        <param name="activityFunc">Actividad secundaria que se ejecuta cuando se produce un evento concreto en la actividad primaria y devuelve un valor.</param>
        <param name="argument1">Argumento que traslada datos a una actividad.</param>
        <param name="argument2">Argumento que traslada datos a una actividad.</param>
        <param name="argument3">Argumento que traslada datos a una actividad.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityFunc`4" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityFunc`4" />.</param>
        <summary>Programa para su ejecución una clase <see cref="T:System.Activities.ActivityFunc`4" /> especificada que tiene cuatro parámetros para un valor devuelto y para los argumentos <see langword="in" /> de entrada y que marca las ubicaciones de devolución de llamada especificadas donde se reanuda el proceso primario tras la finalización de la clase <see cref="T:System.Activities.ActivityFunc`4" />.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleFunc&lt;T1,T2,T3,T4,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleFunc&lt;T1, T2, T3, T4, TResult&gt;(class System.Activities.ActivityFunc`5&lt;!!T1, !!T2, !!T3, !!T4, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleFunc``5(System.Activities.ActivityFunc{``0,``1,``2,``3,``4},``0,``1,``2,``3,System.Activities.CompletionCallback{``4},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleFunc(Of T1, T2, T3, T4, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null) As ActivityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T2">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T3">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T4">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="TResult">El tipo del argumento <see langword="out" /> de la actividad secundaria <see cref="T:System.Activities.NativeActivity" />.</typeparam>
        <param name="activityFunc">Actividad secundaria que se ejecuta cuando se produce un evento concreto en la actividad primaria y devuelve un valor.</param>
        <param name="argument1">Argumento que traslada datos a una actividad.</param>
        <param name="argument2">Argumento que traslada datos a una actividad.</param>
        <param name="argument3">Argumento que traslada datos a una actividad.</param>
        <param name="argument4">Argumento que traslada datos a una actividad.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityFunc`5" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityFunc`5" />.</param>
        <summary>Programa para su ejecución una clase <see cref="T:System.Activities.ActivityFunc`5" /> especificada que tiene cinco parámetros para un valor devuelto y para los argumentos <see langword="in" /> de entrada y que marca las ubicaciones de devolución de llamada especificadas donde se reanuda el proceso primario tras la finalización de la clase <see cref="T:System.Activities.ActivityFunc`5" />.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleFunc&lt;T1,T2,T3,T4,T5,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleFunc&lt;T1, T2, T3, T4, T5, TResult&gt;(class System.Activities.ActivityFunc`6&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleFunc``6(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,System.Activities.CompletionCallback{``5},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleFunc(Of T1, T2, T3, T4, T5, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null) As ActivityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T2">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T3">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T4">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T5">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="TResult">El tipo del argumento <see langword="out" /> de la actividad secundaria <see cref="T:System.Activities.NativeActivity" />.</typeparam>
        <param name="activityFunc">Actividad secundaria que se ejecuta cuando se produce un evento concreto en la actividad primaria y devuelve un valor.</param>
        <param name="argument1">Argumento que traslada datos a una actividad.</param>
        <param name="argument2">Argumento que traslada datos a una actividad.</param>
        <param name="argument3">Argumento que traslada datos a una actividad.</param>
        <param name="argument4">Argumento que traslada datos a una actividad.</param>
        <param name="argument5">Argumento que traslada datos a una actividad.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityFunc`6" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityFunc`6" />.</param>
        <summary>Programa para su ejecución una clase <see cref="T:System.Activities.ActivityFunc`6" /> especificada que tiene seis parámetros para un valor devuelto y para los argumentos <see langword="in" /> de entrada y que marca las ubicaciones de devolución de llamada especificadas donde se reanuda el proceso primario tras la finalización de la clase <see cref="T:System.Activities.ActivityFunc`6" />.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, TResult&gt;(class System.Activities.ActivityFunc`7&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleFunc``7(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback{``6},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleFunc(Of T1, T2, T3, T4, T5, T6, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null) As ActivityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T2">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T3">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T4">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T5">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T6">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="TResult">El tipo del argumento <see langword="out" /> de la actividad secundaria <see cref="T:System.Activities.NativeActivity" />.</typeparam>
        <param name="activityFunc">Actividad secundaria que se ejecuta cuando se produce un evento concreto en la actividad primaria y devuelve un valor.</param>
        <param name="argument1">Argumento que traslada datos a una actividad.</param>
        <param name="argument2">Argumento que traslada datos a una actividad.</param>
        <param name="argument3">Argumento que traslada datos a una actividad.</param>
        <param name="argument4">Argumento que traslada datos a una actividad.</param>
        <param name="argument5">Argumento que traslada datos a una actividad.</param>
        <param name="argument6">Argumento que traslada datos a una actividad.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityFunc`7" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityFunc`7" />.</param>
        <summary>Programa para su ejecución una clase <see cref="T:System.Activities.ActivityFunc`7" /> especificada que tiene siete parámetros para un valor devuelto y para los argumentos <see langword="in" /> de entrada y que marca las ubicaciones de devolución de llamada especificadas donde se reanuda el proceso primario tras la finalización de la clase <see cref="T:System.Activities.ActivityFunc`7" />.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, TResult&gt;(class System.Activities.ActivityFunc`8&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleFunc``8(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback{``7},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null) As ActivityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T2">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T3">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T4">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T5">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T6">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T7">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="TResult">El tipo del argumento <see langword="out" /> de la actividad secundaria <see cref="T:System.Activities.NativeActivity" />.</typeparam>
        <param name="activityFunc">Actividad secundaria que se ejecuta cuando se produce un evento concreto en la actividad primaria y devuelve un valor.</param>
        <param name="argument1">Argumento que traslada datos a una actividad.</param>
        <param name="argument2">Argumento que traslada datos a una actividad.</param>
        <param name="argument3">Argumento que traslada datos a una actividad.</param>
        <param name="argument4">Argumento que traslada datos a una actividad.</param>
        <param name="argument5">Argumento que traslada datos a una actividad.</param>
        <param name="argument6">Argumento que traslada datos a una actividad.</param>
        <param name="argument7">Argumento que traslada datos a una actividad.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityFunc`8" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityFunc`8" />.</param>
        <summary>Programa para su ejecución una clase <see cref="T:System.Activities.ActivityFunc`8" /> especificada que tiene ocho parámetros para un valor devuelto y para los argumentos <see langword="in" /> de entrada y que marca las ubicaciones de devolución de llamada especificadas donde se reanuda el proceso primario tras la finalización de la clase <see cref="T:System.Activities.ActivityFunc`8" />.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, TResult&gt;(class System.Activities.ActivityFunc`9&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleFunc``9(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback{``8},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null) As ActivityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T2">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T3">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T4">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T5">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T6">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T7">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T8">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="TResult">El tipo del argumento <see langword="out" /> de la actividad secundaria <see cref="T:System.Activities.NativeActivity" />.</typeparam>
        <param name="activityFunc">Actividad secundaria que se ejecuta cuando se produce un evento concreto en la actividad primaria y devuelve un valor.</param>
        <param name="argument1">Argumento que traslada datos a una actividad.</param>
        <param name="argument2">Argumento que traslada datos a una actividad.</param>
        <param name="argument3">Argumento que traslada datos a una actividad.</param>
        <param name="argument4">Argumento que traslada datos a una actividad.</param>
        <param name="argument5">Argumento que traslada datos a una actividad.</param>
        <param name="argument6">Argumento que traslada datos a una actividad.</param>
        <param name="argument7">Argumento que traslada datos a una actividad.</param>
        <param name="argument8">Argumento que traslada datos a una actividad.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityFunc`9" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityFunc`9" />.</param>
        <summary>Programa para su ejecución una clase <see cref="T:System.Activities.ActivityFunc`9" /> especificada que tiene nueve parámetros para un valor devuelto y para los argumentos <see langword="in" /> de entrada y que marca las ubicaciones de devolución de llamada especificadas donde se reanuda el proceso primario tras la finalización de la clase <see cref="T:System.Activities.ActivityFunc`9" />.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult&gt;(class System.Activities.ActivityFunc`10&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null) As ActivityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T2">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T3">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T4">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T5">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T6">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T7">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T8">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T9">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="TResult">El tipo del argumento de salida de la actividad secundaria.</typeparam>
        <param name="activityFunc">Actividad secundaria que se ejecuta cuando se produce un evento concreto en la actividad primaria y devuelve un valor.</param>
        <param name="argument1">Argumento que traslada datos a una actividad.</param>
        <param name="argument2">Argumento que traslada datos a una actividad.</param>
        <param name="argument3">Argumento que traslada datos a una actividad.</param>
        <param name="argument4">Argumento que traslada datos a una actividad.</param>
        <param name="argument5">Argumento que traslada datos a una actividad.</param>
        <param name="argument6">Argumento que traslada datos a una actividad.</param>
        <param name="argument7">Argumento que traslada datos a una actividad.</param>
        <param name="argument8">Argumento que traslada datos a una actividad.</param>
        <param name="argument9">Argumento que traslada datos a una actividad.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityFunc`10" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityFunc`10" />.</param>
        <summary>Programa para su ejecución una clase <see cref="T:System.Activities.ActivityFunc`10" /> especificada que tiene diez parámetros para un valor devuelto y para los argumentos <see langword="in" /> de entrada y que marca las ubicaciones de devolución de llamada especificadas donde se reanuda el proceso primario tras la finalización de la clase <see cref="T:System.Activities.ActivityFunc`10" />.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult&gt;(class System.Activities.ActivityFunc`11&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null) As ActivityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T2">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T3">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T4">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T5">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T6">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T7">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T8">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T9">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T10">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="TResult">El tipo del argumento de salida de la actividad secundaria de <see cref="T:System.Activities.NativeActivity" />.</typeparam>
        <param name="activityFunc">Actividad secundaria que se ejecuta cuando se produce un evento concreto en la actividad primaria y devuelve un valor.</param>
        <param name="argument1">Argumento que traslada datos a una actividad.</param>
        <param name="argument2">Argumento que traslada datos a una actividad.</param>
        <param name="argument3">Argumento que traslada datos a una actividad.</param>
        <param name="argument4">Argumento que traslada datos a una actividad.</param>
        <param name="argument5">Argumento que traslada datos a una actividad.</param>
        <param name="argument6">Argumento que traslada datos a una actividad.</param>
        <param name="argument7">Argumento que traslada datos a una actividad.</param>
        <param name="argument8">Argumento que traslada datos a una actividad.</param>
        <param name="argument9">Argumento que traslada datos a una actividad.</param>
        <param name="argument10">Argumento que traslada datos a una actividad.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityFunc`11" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityFunc`11" />.</param>
        <summary>Programa para su ejecución una clase <see cref="T:System.Activities.ActivityFunc`11" /> especificada que tiene once parámetros para un valor devuelto y para los argumentos de entrada, y marca las ubicaciones de devolución de llamada en las que se reanuda el proceso primario tras la finalización de la clase <see cref="T:System.Activities.ActivityFunc`11" />.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult&gt;(class System.Activities.ActivityFunc`12&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null) As ActivityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T2">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T3">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T4">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T5">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T6">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T7">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T8">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T9">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T10">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T11">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="TResult">El tipo del argumento de salida de la actividad secundaria.</typeparam>
        <param name="activityFunc">Actividad secundaria que se ejecuta cuando se produce un evento concreto en la actividad primaria y devuelve un valor.</param>
        <param name="argument1">Argumento que traslada datos a una actividad.</param>
        <param name="argument2">Argumento que traslada datos a una actividad.</param>
        <param name="argument3">Argumento que traslada datos a una actividad.</param>
        <param name="argument4">Argumento que traslada datos a una actividad.</param>
        <param name="argument5">Argumento que traslada datos a una actividad.</param>
        <param name="argument6">Argumento que traslada datos a una actividad.</param>
        <param name="argument7">Argumento que traslada datos a una actividad.</param>
        <param name="argument8">Argumento que traslada datos a una actividad.</param>
        <param name="argument9">Argumento que traslada datos a una actividad.</param>
        <param name="argument10">Argumento que traslada datos a una actividad.</param>
        <param name="argument11">Argumento que traslada datos a una actividad.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityFunc`12" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityFunc`12" />.</param>
        <summary>Programa para su ejecución una clase <see cref="T:System.Activities.ActivityFunc`12" /> especificada que tiene doce parámetros para un valor devuelto y para los argumentos <see langword="in" /> de entrada y que marca las ubicaciones de devolución de llamada especificadas donde se reanuda el proceso primario tras la finalización de la clase <see cref="T:System.Activities.ActivityFunc`12" />.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult&gt;(class System.Activities.ActivityFunc`13&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null) As ActivityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T2">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T3">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T4">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T5">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T6">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T7">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T8">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T9">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T10">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T11">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T12">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="TResult">El tipo del argumento de salida de la actividad secundaria de <see cref="T:System.Activities.NativeActivity" />.</typeparam>
        <param name="activityFunc">Actividad secundaria que se ejecuta cuando se produce un evento concreto en la actividad primaria y devuelve un valor.</param>
        <param name="argument1">Argumento que traslada datos a una actividad.</param>
        <param name="argument2">Argumento que traslada datos a una actividad.</param>
        <param name="argument3">Argumento que traslada datos a una actividad.</param>
        <param name="argument4">Argumento que traslada datos a una actividad.</param>
        <param name="argument5">Argumento que traslada datos a una actividad.</param>
        <param name="argument6">Argumento que traslada datos a una actividad.</param>
        <param name="argument7">Argumento que traslada datos a una actividad.</param>
        <param name="argument8">Argumento que traslada datos a una actividad.</param>
        <param name="argument9">Argumento que traslada datos a una actividad.</param>
        <param name="argument10">Argumento que traslada datos a una actividad.</param>
        <param name="argument11">Argumento que traslada datos a una actividad.</param>
        <param name="argument12">Argumento que traslada datos a una actividad.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityFunc`13" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityFunc`13" />.</param>
        <summary>Programa para su ejecución una clase <see cref="T:System.Activities.ActivityFunc`13" /> especificada que tiene trece parámetros para un valor devuelto y para los argumentos <see langword="in" /> de entrada y que marca las ubicaciones de devolución de llamada especificadas donde se reanuda el proceso primario tras la finalización de la clase <see cref="T:System.Activities.ActivityFunc`13" />.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult&gt;(class System.Activities.ActivityFunc`14&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null) As ActivityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T2">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T3">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T4">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T5">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T6">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T7">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T8">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T9">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T10">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T11">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T12">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T13">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="TResult">El tipo del argumento de salida de la actividad secundaria de <see cref="T:System.Activities.NativeActivity" />.</typeparam>
        <param name="activityFunc">Actividad secundaria que se ejecuta cuando se produce un evento concreto en la actividad primaria y devuelve un valor.</param>
        <param name="argument1">Argumento que traslada datos a una actividad.</param>
        <param name="argument2">Argumento que traslada datos a una actividad.</param>
        <param name="argument3">Argumento que traslada datos a una actividad.</param>
        <param name="argument4">Argumento que traslada datos a una actividad.</param>
        <param name="argument5">Argumento que traslada datos a una actividad.</param>
        <param name="argument6">Argumento que traslada datos a una actividad.</param>
        <param name="argument7">Argumento que traslada datos a una actividad.</param>
        <param name="argument8">Argumento que traslada datos a una actividad.</param>
        <param name="argument9">Argumento que traslada datos a una actividad.</param>
        <param name="argument10">Argumento que traslada datos a una actividad.</param>
        <param name="argument11">Argumento que traslada datos a una actividad.</param>
        <param name="argument12">Argumento que traslada datos a una actividad.</param>
        <param name="argument13">Argumento que traslada datos a una actividad.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityFunc`14" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityFunc`14" />.</param>
        <summary>Programa para su ejecución una clase <see cref="T:System.Activities.ActivityFunc`14" /> especificada que tiene catorce parámetros para un valor devuelto y para los argumentos <see langword="in" /> de entrada y que marca las ubicaciones de devolución de llamada especificadas donde se reanuda el proceso primario tras la finalización de la clase <see cref="T:System.Activities.ActivityFunc`14" />.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, T14 argument14, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult&gt;(class System.Activities.ActivityFunc`15&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, !!T14 argument14, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, argument14 As T14, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null) As ActivityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="argument14" Type="T14" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T2">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T3">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T4">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T5">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T6">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T7">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T8">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T9">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T10">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T11">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T12">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T13">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T14">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="TResult">El tipo del argumento de salida de la actividad secundaria de <see cref="T:System.Activities.NativeActivity" />.</typeparam>
        <param name="activityFunc">Actividad secundaria que se ejecuta cuando se produce un evento concreto en la actividad primaria y devuelve un valor.</param>
        <param name="argument1">Argumento que traslada datos a una actividad.</param>
        <param name="argument2">Argumento que traslada datos a una actividad.</param>
        <param name="argument3">Argumento que traslada datos a una actividad.</param>
        <param name="argument4">Argumento que traslada datos a una actividad.</param>
        <param name="argument5">Argumento que traslada datos a una actividad.</param>
        <param name="argument6">Argumento que traslada datos a una actividad.</param>
        <param name="argument7">Argumento que traslada datos a una actividad.</param>
        <param name="argument8">Argumento que traslada datos a una actividad.</param>
        <param name="argument9">Argumento que traslada datos a una actividad.</param>
        <param name="argument10">Argumento que traslada datos a una actividad.</param>
        <param name="argument11">Argumento que traslada datos a una actividad.</param>
        <param name="argument12">Argumento que traslada datos a una actividad.</param>
        <param name="argument13">Argumento que traslada datos a una actividad.</param>
        <param name="argument14">Argumento que traslada datos a una actividad.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityFunc`15" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityFunc`15" />.</param>
        <summary>Programa para su ejecución una clase <see cref="T:System.Activities.ActivityFunc`15" /> especificada que tiene quince parámetros para un valor devuelto y para los argumentos <see langword="in" /> de entrada y que marca las ubicaciones de devolución de llamada especificadas donde se reanuda el proceso primario tras la finalización de la clase <see cref="T:System.Activities.ActivityFunc`15" />.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, T14 argument14, T15 argument15, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult&gt;(class System.Activities.ActivityFunc`16&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, !!T15, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, !!T14 argument14, !!T15 argument15, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, argument14 As T14, argument15 As T15, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null) As ActivityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="argument14" Type="T14" />
        <Parameter Name="argument15" Type="T15" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T2">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T3">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T4">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T5">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T6">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T7">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T8">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T9">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T10">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T11">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T12">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T13">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T14">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T15">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="TResult">El tipo del argumento de salida de la actividad secundaria de <see cref="T:System.Activities.NativeActivity" />.</typeparam>
        <param name="activityFunc">Actividad secundaria que se ejecuta cuando se produce un evento concreto en la actividad primaria y devuelve un valor.</param>
        <param name="argument1">Argumento que traslada datos a una actividad.</param>
        <param name="argument2">Argumento que traslada datos a una actividad.</param>
        <param name="argument3">Argumento que traslada datos a una actividad.</param>
        <param name="argument4">Argumento que traslada datos a una actividad.</param>
        <param name="argument5">Argumento que traslada datos a una actividad.</param>
        <param name="argument6">Argumento que traslada datos a una actividad.</param>
        <param name="argument7">Argumento que traslada datos a una actividad.</param>
        <param name="argument8">Argumento que traslada datos a una actividad.</param>
        <param name="argument9">Argumento que traslada datos a una actividad.</param>
        <param name="argument10">Argumento que traslada datos a una actividad.</param>
        <param name="argument11">Argumento que traslada datos a una actividad.</param>
        <param name="argument12">Argumento que traslada datos a una actividad.</param>
        <param name="argument13">Argumento que traslada datos a una actividad.</param>
        <param name="argument14">Argumento que traslada datos a una actividad.</param>
        <param name="argument15">Argumento que traslada datos a una actividad.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityFunc`16" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityFunc`16" />.</param>
        <summary>Programa para su ejecución una clase <see cref="T:System.Activities.ActivityFunc`16" /> especificada que tiene dieciséis parámetros para un valor devuelto y para los argumentos <see langword="in" /> de entrada y que marca las ubicaciones de devolución de llamada especificadas donde se reanuda el proceso primario tras la finalización de la clase <see cref="T:System.Activities.ActivityFunc`16" />.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance ScheduleFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult&gt; (System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult&gt; activityFunc, T1 argument1, T2 argument2, T3 argument3, T4 argument4, T5 argument5, T6 argument6, T7 argument7, T8 argument8, T9 argument9, T10 argument10, T11 argument11, T12 argument12, T13 argument13, T14 argument14, T15 argument15, T16 argument16, System.Activities.CompletionCallback&lt;TResult&gt; onCompleted = null, System.Activities.FaultCallback onFaulted = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.ActivityInstance ScheduleFunc&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult&gt;(class System.Activities.ActivityFunc`17&lt;!!T1, !!T2, !!T3, !!T4, !!T5, !!T6, !!T7, !!T8, !!T9, !!T10, !!T11, !!T12, !!T13, !!T14, !!T15, !!T16, !!TResult&gt; activityFunc, !!T1 argument1, !!T2 argument2, !!T3 argument3, !!T4 argument4, !!T5 argument5, !!T6 argument6, !!T7 argument7, !!T8 argument8, !!T9 argument9, !!T10 argument10, !!T11 argument11, !!T12 argument12, !!T13 argument13, !!T14 argument14, !!T15 argument15, !!T16 argument16, class System.Activities.CompletionCallback`1&lt;!!TResult&gt; onCompleted, class System.Activities.FaultCallback onFaulted) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScheduleFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult) (activityFunc As ActivityFunc(Of T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, TResult), argument1 As T1, argument2 As T2, argument3 As T3, argument4 As T4, argument5 As T5, argument6 As T6, argument7 As T7, argument8 As T8, argument9 As T9, argument10 As T10, argument11 As T11, argument12 As T12, argument13 As T13, argument14 As T14, argument15 As T15, argument16 As T16, Optional onCompleted As CompletionCallback(Of TResult) = null, Optional onFaulted As FaultCallback = null) As ActivityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
        <TypeParameter Name="T6" />
        <TypeParameter Name="T7" />
        <TypeParameter Name="T8" />
        <TypeParameter Name="T9" />
        <TypeParameter Name="T10" />
        <TypeParameter Name="T11" />
        <TypeParameter Name="T12" />
        <TypeParameter Name="T13" />
        <TypeParameter Name="T14" />
        <TypeParameter Name="T15" />
        <TypeParameter Name="T16" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="activityFunc" Type="System.Activities.ActivityFunc&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,TResult&gt;" />
        <Parameter Name="argument1" Type="T1" />
        <Parameter Name="argument2" Type="T2" />
        <Parameter Name="argument3" Type="T3" />
        <Parameter Name="argument4" Type="T4" />
        <Parameter Name="argument5" Type="T5" />
        <Parameter Name="argument6" Type="T6" />
        <Parameter Name="argument7" Type="T7" />
        <Parameter Name="argument8" Type="T8" />
        <Parameter Name="argument9" Type="T9" />
        <Parameter Name="argument10" Type="T10" />
        <Parameter Name="argument11" Type="T11" />
        <Parameter Name="argument12" Type="T12" />
        <Parameter Name="argument13" Type="T13" />
        <Parameter Name="argument14" Type="T14" />
        <Parameter Name="argument15" Type="T15" />
        <Parameter Name="argument16" Type="T16" />
        <Parameter Name="onCompleted" Type="System.Activities.CompletionCallback&lt;TResult&gt;" />
        <Parameter Name="onFaulted" Type="System.Activities.FaultCallback" />
      </Parameters>
      <Docs>
        <typeparam name="T1">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T2">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T3">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T4">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T5">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T6">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T7">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T8">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T9">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T10">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T11">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T12">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T13">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T14">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T15">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="T16">Los datos que se trasladan a una actividad.</typeparam>
        <typeparam name="TResult">El tipo del argumento <see langword="out" /> de la actividad secundaria <see cref="T:System.Activities.NativeActivity" />.</typeparam>
        <param name="activityFunc">Actividad secundaria que se ejecuta cuando se produce un evento concreto en la actividad primaria y devuelve un valor.</param>
        <param name="argument1">Argumento que traslada datos a una actividad.</param>
        <param name="argument2">Argumento que traslada datos a una actividad.</param>
        <param name="argument3">Argumento que traslada datos a una actividad.</param>
        <param name="argument4">Argumento que traslada datos a una actividad.</param>
        <param name="argument5">Argumento que traslada datos a una actividad.</param>
        <param name="argument6">Argumento que traslada datos a una actividad.</param>
        <param name="argument7">Argumento que traslada datos a una actividad.</param>
        <param name="argument8">Argumento que traslada datos a una actividad.</param>
        <param name="argument9">Argumento que traslada datos a una actividad.</param>
        <param name="argument10">Argumento que traslada datos a una actividad.</param>
        <param name="argument11">Argumento que traslada datos a una actividad.</param>
        <param name="argument12">Argumento que traslada datos a una actividad.</param>
        <param name="argument13">Argumento que traslada datos a una actividad.</param>
        <param name="argument14">Argumento que traslada datos a una actividad.</param>
        <param name="argument15">Argumento que traslada datos a una actividad.</param>
        <param name="argument16">Argumento que traslada datos a una actividad.</param>
        <param name="onCompleted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria tras la finalización de <see cref="T:System.Activities.ActivityFunc`17" />.</param>
        <param name="onFaulted">Marcador que indica dónde se reanuda la ejecución de la actividad primaria si un error provoca la finalización de <see cref="T:System.Activities.ActivityFunc`17" />.</param>
        <summary>Programa para su ejecución una clase <see cref="T:System.Activities.ActivityFunc`17" /> especificada que tiene diecisiete parámetros para un valor devuelto y para los argumentos <see langword="in" /> de entrada y que marca las ubicaciones de devolución de llamada especificadas donde se reanuda el proceso primario tras la finalización de la clase <see cref="T:System.Activities.ActivityFunc`17" />.</summary>
        <returns>Instancia de una actividad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (System.Activities.Variable variable, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(class System.Activities.Variable variable, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.SetValue(System.Activities.Variable,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Activities::Variable ^ variable, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="variable">Objeto variable sin tipo especificado que puede tener asignado un objeto de valor.</param>
        <param name="value">Objeto sin tipo especificado que puede asignarse a un objeto variable.</param>
        <summary>Asigna el objeto de valor especificado al objeto variable especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void SetValue&lt;T&gt; (System.Activities.Variable&lt;T&gt; variable, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue&lt;T&gt;(class System.Activities.Variable`1&lt;!!T&gt; variable, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.SetValue``1(System.Activities.Variable{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue(Of T) (variable As Variable(Of T), value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void SetValue(System::Activities::Variable&lt;T&gt; ^ variable, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable&lt;T&gt;" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">El tipo de la <c>variable</c> y <c>valor</c>.</typeparam>
        <param name="variable">Objeto variable con un tipo especificado que puede tener asignado un objeto de valor.</param>
        <param name="value">Objeto con un tipo especificado que puede asignarse a un objeto variable.</param>
        <summary>Asigna el objeto de valor genérico especificado al objeto variable genérico especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Track">
      <MemberSignature Language="C#" Value="public void Track (System.Activities.Tracking.CustomTrackingRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Track(class System.Activities.Tracking.CustomTrackingRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityContext.Track(System.Activities.Tracking.CustomTrackingRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Track (record As CustomTrackingRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Track(System::Activities::Tracking::CustomTrackingRecord ^ record);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="System.Activities.Tracking.CustomTrackingRecord" />
      </Parameters>
      <Docs>
        <param name="record">Datos enviados a los participantes del seguimiento cuando se provocan eventos de seguimiento.</param>
        <summary>Agrega un registro de seguimiento de actividad a la instancia de flujo de trabajo actual.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>