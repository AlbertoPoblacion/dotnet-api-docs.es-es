<Type Name="ITransformProvider" FullName="System.Windows.Automation.Provider.ITransformProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="56daef985679416cab49ebfa89493628182c27c2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITransformProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITransformProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.ITransformProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITransformProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITransformProvider" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("6829ddc4-4f91-4ffa-b86f-bd3e2987cb4c")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6a5ed-101">Expone métodos y propiedades para admitir el acceso del cliente de UI Automation a controles que se pueden mover, cambiar de tamaño o girar en un espacio bidimensional.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6a5ed-101">Exposes methods and properties to support UI Automation client access to controls that can be moved, resized, or rotated within a two-dimensional space.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a5ed-102">Implementa en un proveedor de automatización de la interfaz de usuario que debe admitir el <xref:System.Windows.Automation.TransformPattern> patrón de control.</span><span class="sxs-lookup"><span data-stu-id="6a5ed-102">Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.TransformPattern> control pattern.</span></span>  
  
 <span data-ttu-id="6a5ed-103">La compatibilidad con este patrón de control no se limita a los objetos del escritorio.</span><span class="sxs-lookup"><span data-stu-id="6a5ed-103">Support for this control pattern is not limited to objects on the desktop.</span></span> <span data-ttu-id="6a5ed-104">Este patrón de control debe implementarse también los elementos secundarios de un objeto contenedor siempre que los elementos secundarios se pueden mover, cambiar de tamaño o girar libremente dentro de los límites del contenedor.</span><span class="sxs-lookup"><span data-stu-id="6a5ed-104">This control pattern must also be implemented by the children of a container object as long as the children can be moved, resized, or rotated freely within the boundaries of the container.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.TransformPattern" />
  </Docs>
  <Members>
    <Member MemberName="CanMove">
      <MemberSignature Language="C#" Value="public bool CanMove { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanMove" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ITransformProvider.CanMove" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanMove As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanMove { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a5ed-105">Obtiene un valor que especifica si se puede mover el control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5ed-105">Gets a value that specifies whether the control can be moved.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a5ed-106">
            <see langword="true" /> si se puede mover el elemento; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5ed-106">
              <see langword="true" /> if the element can be moved; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6a5ed-107">En el ejemplo siguiente se muestra una implementación de este método para un control que se puede mover.</span><span class="sxs-lookup"><span data-stu-id="6a5ed-107">The following example shows an implementation of this method for a control that can be moved.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#CanMove](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#canmove)]
 [!code-vb[UIAITransformProvider_snip#CanMove](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#canmove)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanResize">
      <MemberSignature Language="C#" Value="public bool CanResize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanResize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ITransformProvider.CanResize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanResize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanResize { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a5ed-108">Obtiene un valor que especifica si se puede cambiar el tamaño del elemento de [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5ed-108">Gets a value that specifies whether the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element can be resized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a5ed-109">
            <see langword="true" /> si se puede cambiar el tamaño del elemento; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5ed-109">
              <see langword="true" /> if the element can be resized; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6a5ed-110">En el ejemplo siguiente se muestra una implementación de este método para un control que puede cambiarse.</span><span class="sxs-lookup"><span data-stu-id="6a5ed-110">The following example shows an implementation of this method for a control that can be resized.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#CanResize](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#canresize)]
 [!code-vb[UIAITransformProvider_snip#CanResize](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#canresize)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRotate">
      <MemberSignature Language="C#" Value="public bool CanRotate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRotate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRotate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRotate { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a5ed-111">Obtiene un valor que especifica si se puede girar el control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5ed-111">Gets a value that specifies whether the control can be rotated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a5ed-112">
            <see langword="true" /> si se puede girar el elemento; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5ed-112">
              <see langword="true" /> if the element can be rotated; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6a5ed-113">En el ejemplo siguiente se muestra una implementación de este método para un control que no se pueden girar.</span><span class="sxs-lookup"><span data-stu-id="6a5ed-113">The following example shows an implementation of this method for a control that cannot be rotated.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#CanRotate](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#canrotate)]
 [!code-vb[UIAITransformProvider_snip#CanRotate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#canrotate)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Move(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITransformProvider.Move(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Move (x As Double, y As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Move(double x, double y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="6a5ed-114">Coordenadas de pantalla absolutas del lado izquierdo del control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5ed-114">Absolute screen coordinates of the left side of the control.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="6a5ed-115">Coordenadas de pantalla absolutas del lado superior del control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5ed-115">Absolute screen coordinates of the top of the control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a5ed-116">Mueve el control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5ed-116">Moves the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a5ed-117">Un objeto no se puede mover, cambiar de tamaño o girar de manera que su ubicación en pantalla resultante quede totalmente fuera de las coordenadas de su contenedor e inaccesible al teclado o mouse (ratón).</span><span class="sxs-lookup"><span data-stu-id="6a5ed-117">An object cannot be moved, resized, or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse.</span></span> <span data-ttu-id="6a5ed-118">Por ejemplo, cuando una ventana de nivel superior se mueve totalmente fuera de la pantalla o un objeto secundario se mueve fuera de los límites de la ventanilla del contenedor.</span><span class="sxs-lookup"><span data-stu-id="6a5ed-118">For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container's viewport.</span></span> <span data-ttu-id="6a5ed-119">En estos casos, el objeto se coloca lo más cercano a las coordenadas de pantalla solicitadas como sea posible con las coordenadas superiores o izquierdas para que se encuentren dentro de los límites del contenedor.</span><span class="sxs-lookup"><span data-stu-id="6a5ed-119">In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a5ed-120">En el ejemplo siguiente se muestra una posible implementación de este método para un control personalizado que se puede mover.</span><span class="sxs-lookup"><span data-stu-id="6a5ed-120">The following example shows one possible implementation of this method for a custom control that can be moved.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#Move](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#move)]
 [!code-vb[UIAITransformProvider_snip#Move](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#move)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6a5ed-121">Si la propiedad <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanMove" /> es false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5ed-121">If the <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanMove" /> property is false.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public void Resize (double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Resize(float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITransformProvider.Resize(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resize (width As Double, height As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resize(double width, double height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="width">
          <span data-ttu-id="6a5ed-122">Nuevo ancho de la ventana, en píxeles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5ed-122">The new width of the window, in pixels.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="6a5ed-123">Nuevo alto de la ventana, en píxeles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5ed-123">The new height of the window, in pixels.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a5ed-124">Cambia el tamaño del control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5ed-124">Resizes the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a5ed-125">Cuando se llama en un control que admite paneles divididos, este método puede tener el efecto secundario de cambiar el tamaño de otros paneles contiguos.</span><span class="sxs-lookup"><span data-stu-id="6a5ed-125">When called on a control that supports split panes, this method can have the side effect of resizing other contiguous panes.</span></span>  
  
 <span data-ttu-id="6a5ed-126">Un objeto no se puede mover, cambiar de tamaño o girar de manera que su ubicación en pantalla resultante quede totalmente fuera de las coordenadas de su contenedor e inaccesible al teclado o mouse (ratón).</span><span class="sxs-lookup"><span data-stu-id="6a5ed-126">An object cannot be moved, resized, or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse.</span></span> <span data-ttu-id="6a5ed-127">Por ejemplo, cuando una ventana de nivel superior se mueve totalmente fuera de la pantalla o un objeto secundario se mueve fuera de los límites de la ventanilla del contenedor.</span><span class="sxs-lookup"><span data-stu-id="6a5ed-127">For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container's viewport.</span></span> <span data-ttu-id="6a5ed-128">En estos casos, el objeto se coloca lo más cercano a las coordenadas de pantalla solicitadas como sea posible con las coordenadas superiores o izquierdas para que se encuentren dentro de los límites del contenedor.</span><span class="sxs-lookup"><span data-stu-id="6a5ed-128">In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a5ed-129">En el ejemplo siguiente se muestra una posible implementación de este método para un control personalizado cuyo tamaño se puede cambiar.</span><span class="sxs-lookup"><span data-stu-id="6a5ed-129">The following example shows one possible implementation of this method for a custom control that can be resized.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#Resize](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#resize)]
 [!code-vb[UIAITransformProvider_snip#Resize](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#resize)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6a5ed-130">Si la propiedad <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanResize" /> es false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5ed-130">If the <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanResize" /> property is false.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public void Rotate (double degrees);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rotate(float64 degrees) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITransformProvider.Rotate(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rotate (degrees As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rotate(double degrees);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="degrees" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="degrees">
          <span data-ttu-id="6a5ed-131">Número de grados que se va a girar el control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5ed-131">The number of degrees to rotate the control.</span>
          </span>
          <span data-ttu-id="6a5ed-132">Un número positivo realiza la rotación en el sentido de las agujas del reloj; un número negativo la realiza en sentido contrario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5ed-132">A positive number rotates clockwise; a negative number rotates counterclockwise.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a5ed-133">Gira el control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5ed-133">Rotates the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a5ed-134">No se puede mover un objeto, cambiando el tamaño o girar de manera que su ubicación en pantalla resultante quede totalmente fuera de las coordenadas de su contenedor e inaccesible al teclado o mouse (ratón).</span><span class="sxs-lookup"><span data-stu-id="6a5ed-134">An object cannot be moved, resized or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse.</span></span> <span data-ttu-id="6a5ed-135">Por ejemplo, cuando una ventana de nivel superior se mueve totalmente fuera de la pantalla o un objeto secundario se mueve fuera de los límites de la ventanilla del contenedor.</span><span class="sxs-lookup"><span data-stu-id="6a5ed-135">For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container's viewport.</span></span> <span data-ttu-id="6a5ed-136">En estos casos, el objeto se coloca lo más cercano a las coordenadas de pantalla solicitadas como sea posible con las coordenadas superiores o izquierdas para que se encuentren dentro de los límites del contenedor.</span><span class="sxs-lookup"><span data-stu-id="6a5ed-136">In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a5ed-137">En el ejemplo siguiente se muestra una posible implementación de este método para un control personalizado que no se pueden girar.</span><span class="sxs-lookup"><span data-stu-id="6a5ed-137">The following example shows one possible implementation of this method for a custom control that cannot be rotated.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#Rotate](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#rotate)]
 [!code-vb[UIAITransformProvider_snip#Rotate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#rotate)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6a5ed-138">Si la propiedad <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate" /> es false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a5ed-138">If the <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate" /> property is false.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>