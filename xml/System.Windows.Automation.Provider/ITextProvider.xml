<Type Name="ITextProvider" FullName="System.Windows.Automation.Provider.ITextProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="12cb0908a2fbabaa2316da0be35971ca1a429419" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
    <Meta Name="ms.locfileid" Value="31910211" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITextProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITextProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.ITextProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITextProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITextProvider" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("3589c92c-63f3-4367-99bb-ada653b77cf2")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Expone métodos y propiedades para admitir el acceso del cliente de UI Automation a controles que contienen texto.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementa en un proveedor de automatización de la interfaz de usuario que debe admitir el <xref:System.Windows.Automation.TextPattern> patrón de control.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.TextPattern" />
  </Docs>
  <Members>
    <Member MemberName="DocumentRange">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ITextRangeProvider DocumentRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.Provider.ITextRangeProvider DocumentRange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ITextProvider.DocumentRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentRange As ITextRangeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::Provider::ITextRangeProvider ^ DocumentRange { System::Windows::Automation::Provider::ITextRangeProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ITextRangeProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un intervalo de texto que agrega el texto principal de un documento.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No se pueden incluir texto auxiliar, como encabezados, pies de página o anotaciones.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.Provider.ITextRangeProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetSelection">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ITextRangeProvider[] GetSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.ITextRangeProvider[] GetSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextProvider.GetSelection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSelection () As ITextRangeProvider()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::Provider::ITextRangeProvider ^&gt; ^ GetSelection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ITextRangeProvider[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera una colección de intervalos de texto no contiguos asociados a la selección o selecciones de texto actuales.</summary>
        <returns>Una colección de intervalos de texto no contiguos.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para los proveedores de automatización de la interfaz de usuario que admiten la selección de texto, el proveedor debe implementar este método y también devolverá un <xref:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection%2A> valor.  
  
 Si no hay texto seleccionado, <xref:System.Windows.Automation.Provider.ITextProvider.GetSelection%2A> devuelve el intervalo de texto degenerado (intervalo vacío) en la posición del cursor del sistema (punto de inserción de texto).  
  
 Si el cursor del sistema (punto de inserción de texto) no está presente, <xref:System.Windows.Automation.Provider.ITextProvider.GetSelection%2A> puede devolver una referencia nula (`Nothing` en Visual Basic).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Si el proveedor de UI Automation no admite la selección de texto.</exception>
        <altmember cref="T:System.Windows.Automation.Provider.ITextRangeProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetVisibleRanges">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ITextRangeProvider[] GetVisibleRanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.ITextRangeProvider[] GetVisibleRanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextProvider.GetVisibleRanges" />
      <MemberSignature Language="VB.NET" Value="Public Function GetVisibleRanges () As ITextRangeProvider()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::Provider::ITextRangeProvider ^&gt; ^ GetVisibleRanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ITextRangeProvider[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera una matriz de intervalos de texto no contiguos de un contenedor de texto donde cada intervalo comienza con la primera línea parcialmente visible y continúa hasta el final de la última línea parcialmente visible.</summary>
        <returns>La colección de intervalos de texto visibles en el contenedor o una matriz vacía. Nunca se devuelve una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Proveedores de automatización de interfaz de usuario deben asegurarse de que devuelven, como máximo, los intervalos de texto que son visibles en el contenedor.  
  
 Pueden producirse intervalos cuando cualquier contenido de un contenedor de texto está oculto por una ventana superpuesta u otro objeto, o cuando un contenedor de texto con un diseño de varias columna tiene una o más columnas parcialmente desplazadas fuera de la vista de texto inconexos.  
  
 Si no hay texto está visible, se devuelve un intervalo de texto degenerado (vacío). Si el contenedor de texto está vacío o si todo el texto se desplaza fuera de la vista, se puede devolver este intervalo vacío.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.Provider.ITextRangeProvider" />
      </Docs>
    </Member>
    <Member MemberName="RangeFromChild">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ITextRangeProvider RangeFromChild (System.Windows.Automation.Provider.IRawElementProviderSimple childElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.ITextRangeProvider RangeFromChild(class System.Windows.Automation.Provider.IRawElementProviderSimple childElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextProvider.RangeFromChild(System.Windows.Automation.Provider.IRawElementProviderSimple)" />
      <MemberSignature Language="VB.NET" Value="Public Function RangeFromChild (childElement As IRawElementProviderSimple) As ITextRangeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::ITextRangeProvider ^ RangeFromChild(System::Windows::Automation::Provider::IRawElementProviderSimple ^ childElement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ITextRangeProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childElement" Type="System.Windows.Automation.Provider.IRawElementProviderSimple" />
      </Parameters>
      <Docs>
        <param name="childElement">Objeto incluido.</param>
        <summary>Recupera un rango de texto que incluye un elemento secundario, como una imagen, un hipervínculo u otro objeto insertado.</summary>
        <returns>Un intervalo que abarca el elemento secundario.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un proveedor de automatización de interfaz de usuario debe comprobar que el elemento pasado es un elemento secundario del contenedor de texto.  
  
 Si no hay ningún texto en el intervalo donde existe el elemento secundario, se devuelve un intervalo degenerado (vacío).  
  
 El `childElement` parámetro es un elemento secundario de la <xref:System.Windows.Automation.AutomationElement> asociado con un <xref:System.Windows.Automation.TextPattern> o de la matriz de elementos secundarios de un <xref:System.Windows.Automation.Text.TextPatternRange>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Si el elemento secundario es una referencia nula (<see langword="Nothing" /> en Visual Basic).</exception>
        <altmember cref="T:System.Windows.Automation.Provider.ITextRangeProvider" />
      </Docs>
    </Member>
    <Member MemberName="RangeFromPoint">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ITextRangeProvider RangeFromPoint (System.Windows.Point screenLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.ITextRangeProvider RangeFromPoint(valuetype System.Windows.Point screenLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextProvider.RangeFromPoint(System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function RangeFromPoint (screenLocation As Point) As ITextRangeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::ITextRangeProvider ^ RangeFromPoint(System::Windows::Point screenLocation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ITextRangeProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="screenLocation" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="screenLocation">Ubicación en las coordenadas de la pantalla.</param>
        <summary>Devuelve el intervalo de texto degenerado (vacío) más cercano a las coordenadas de la pantalla especificadas.</summary>
        <returns>Intervalo degenerado más próximo a la ubicación especificada. Nunca se devuelve una referencia nula (<see langword="Nothing" /> en Visual Basic).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se devuelve un intervalo de texto que agrega un objeto secundario si las coordenadas de pantalla en las coordenadas de una imagen, hipervínculo u otro objeto incrustado.  
  
 Dado que no se omite el texto oculto <xref:System.Windows.Automation.Provider.ITextProvider.RangeFromPoint%2A> se devuelve un intervalo degenerado en el texto visible más cercano al punto especificado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Si un punto determinado está fuera del elemento de [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] asociado al modelo de texto.</exception>
        <altmember cref="T:System.Windows.Automation.Provider.ITextRangeProvider" />
      </Docs>
    </Member>
    <Member MemberName="SupportedTextSelection">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.SupportedTextSelection SupportedTextSelection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.SupportedTextSelection SupportedTextSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportedTextSelection As SupportedTextSelection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::SupportedTextSelection SupportedTextSelection { System::Windows::Automation::SupportedTextSelection get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.SupportedTextSelection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que especifica si un proveedor de texto admite la selección y, en ese caso, el tipo de selección admitida.</summary>
        <value>
          <see langword="None" />, <see langword="Single" /> o <see langword="Multiple" /> de <see cref="T:System.Windows.Automation.SupportedTextSelection" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Automation.Provider.ITextRangeProvider" />
      </Docs>
    </Member>
  </Members>
</Type>